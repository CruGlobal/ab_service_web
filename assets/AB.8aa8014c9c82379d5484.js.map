{"version":3,"file":"AB.8aa8014c9c82379d5484.js","mappings":"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AAY,GCzCf,GACGpC,OAAQ,WAEL,OAAI3C,OAAOgF,WAAa,IACd,EAEH,CACV,EACAC,MCjBO,CACJ,QACA,eACA,iBACA,eACA,iBACA,SACA,MACA,eACA,gBACA,aACA,cACA,SACA,YACA,sCACA,SACA,UACA,YACA,oBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,QACA,UACA,aACA,oBACA,oBACA,sBACA,sBACA,uBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,SACA,aACA,WACA,WACA,mBACA,8BACA,WACA,KACA,oBACA,aACA,WACA,gBACA,MACA,WACA,OACA,YACA,cACA,UACA,OACA,OACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,gBACA,eACA,eACA,kBACA,yBACA,MACA,OACA,UACA,iBACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,YACA,mBACA,UACA,YACA,QACA,YACA,cACA,OACA,OACA,OACA,OACA,WACA,aACA,UACA,YACA,MACA,MACA,WACA,aACA,WACA,WACA,MACA,aACA,MACA,aACA,WACA,mBACA,mBACA,aACA,kBACA,mBACA,SACA,eACA,MACA,aACA,aACA,cACA,sBACA,sBACA,uBACA,oBACA,WACA,kBACA,YACA,KACA,UACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,QACA,eACA,iBACA,eACA,iBACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,QACA,SACA,SACA,WACA,iBACA,cACA,YACA,UACA,QACA,QACA,QACA,iBACA,eACA,MACA,OACA,YACA,UACA,WACA,SACA,MACA,OACA,UACA,UACA,YACA,aACA,eACA,WACA,aACA,UACA,WACA,iBACA,SACA,OACA,YACA,mBACA,cACA,kBACA,OACA,aACA,OACA,OACA,QACA,MACA,UACA,YACA,WACA,WACA,OACA,WACA,SACA,YACA,UACA,aACA,UACA,OACA,SACA,eACA,WACA,WACA,kBACA,oBACA,UACA,SACA,OACA,OACA,UACA,QACA,aACA,aACA,SACA,WACA,aACA,gBACA,kBACA,kBACA,SACA,SACA,OACA,MACA,OACA,WACA,cACA,qBACA,uBACA,SACA,eACA,gBACA,uBACA,MACA,YACA,aACA,KACA,WACA,aACA,oBACA,kBACA,gBACA,eACA,MACA,OACA,SACA,cACA,OACA,iBACA,eACA,cACA,eACA,eACA,eACA,SACA,aACA,eACA,iBACA,oBACA,eACA,YACA,cACA,eACA,cACA,aACA,UACA,OACA,SACA,OACA,oBACA,UACA,cACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,cACA,gBACA,OACA,eACA,YACA,eACA,WACA,UACA,aACA,iBACA,UACA,WACA,UACA,QACA,MACA,KACA,OACA,QACA,aACA,aACA,KACA,YACA,OACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,cACA,qBACA,uBACA,qBACA,gBACA,iBACA,WACA,OACA,QACA,WACA,cACA,cACA,gBACA,cACA,cACA,eACA,YACA,eACA,eACA,iBACA,cACA,kBACA,eACA,cACA,cACA,kBACA,UACA,QACA,SACA,aACA,QACA,UACA,YACA,UACA,OACA,aACA,QACA,YACA,cACA,cACA,cACA,gBACA,iBACA,cACA,kBACA,QACA,QACA,WACA,WACA,UACA,YACA,MACA,QACA,OACA,QACA,SACA,WACA,OACA,cACA,MACA,YACA,cACA,oBACA,WACA,UACA,SACA,SACA,MACA,WACA,MACA,aACA,MACA,WACA,SACA,SACA,gBACA,OACA,UACA,QACA,UACA,aACA,WACA,YACA,YACA,YACA,aACA,cACA,aACA,OACA,WACA,kBACA,SACA,QACA,OACA,WACA,UACA,UACA,iBACA,OACA,kBACA,kBACA,mBACA,gBACA,aACA,QACA,SACA,eACA,aACA,iBACA,OACA,MACA,aACA,QACA,UACA,YACA,OACA,cACA,cACA,gBACA,gBACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,YACA,aACA,mBACA,QACA,eACA,eACA,iBACA,WACA,SACA,eACA,OACA,QACA,SACA,eACA,aACA,gBACA,QACA,UACA,SACA,cACA,eACA,iBACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,UACA,YACA,cACA,cACA,gBACA,YACA,YACA,QACA,QACA,eACA,iBACA,MACA,SACA,SACA,gBACA,kBACA,UACA,QACA,eACA,QACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,mBACA,QACA,OACA,cACA,gBACA,OACA,OACA,cACA,cACA,gBACA,UACA,YACA,QACA,eACA,eACA,KACA,SACA,WACA,kBACA,oBACA,QACA,aACA,cACA,KACA,SACA,UACA,QACA,UACA,SACA,eACA,gBACA,UACA,aACA,SACA,SACA,UACA,SACA,QACA,YACA,aACA,UACA,MACA,OACA,SACA,cACA,eACA,SACA,MACA,aACA,MACA,QACA,QACA,MACA,SACA,OACA,WACA,SACA,SACA,eACA,cACA,SACA,OACA,SACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,SACA,SACA,OACA,eACA,eACA,kBACA,gBACA,SACA,UACA,gBACA,WACA,SACA,UACA,cACA,UACA,WACA,QACA,QACA,UACA,aACA,UACA,WACA,iBACA,kBACA,cACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,aACA,gBACA,UACA,QACA,UACA,SACA,WACA,iBACA,iBACA,OACA,YACA,kBACA,iBACA,cACA,SACA,QACA,eACA,gBACA,eACA,cACA,cACA,gBACA,OACA,cACA,gBACA,cACA,gBACA,cACA,qBACA,YACA,SACA,WACA,QACA,cACA,cACA,UACA,QACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,gBACA,WACA,cACA,aACA,KACA,WACA,UACA,YACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,mBACA,mBACA,sBACA,6BACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,kBACA,oBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,YACA,QACA,cACA,kBACA,QACA,UACA,OACA,SACA,cACA,SACA,QACA,MACA,MACA,SACA,gBACA,eACA,KACA,SACA,UACA,iBACA,WACA,YACA,OACA,mBACA,aACA,SACA,SACA,aACA,WACA,SACA,MACA,MACA,OACA,cACA,gBACA,UACA,SACA,YACA,cACA,aACA,QACA,QACA,UACA,QACA,eACA,aACA,UACA,SACA,gBACA,eACA,QACA,eACA,OACA,KACA,uBACA,cACA,aACA,YACA,UACA,SACA,QACA,SACA,WACA,aACA,iBACA,OACA,cACA,eACA,iBACA,kBACA,kBACA,iBACA,UACA,MACA,YACA,aACA,aACA,UACA,SACA,OACA,cACA,eACA,sBACA,QACA,KACA,YACA,OACA,MACA,QACA,UACA,eACA,mBC3uBN,MAAMC,EACHjS,YAAYS,GACTP,KAAKO,GAAKA,EACVP,KAAKgS,OAAS,EACjB,CAEAC,SAASC,EAAMxO,GACZ1D,KAAKgS,OAAO9K,KAAK,CAAEgL,KAAMA,EAAMxO,QAASA,GAC3C,CAEAyO,OACG,OAA6B,GAAtBnS,KAAKgS,OAAOpQ,MACtB,CAEAwQ,OACG,OAAOpS,KAAKgS,OAAOpQ,OAAS,CAC/B,CAEAyQ,qBACG,IAAIpH,EAAM,CACP3J,MAAO,eACPgR,kBAAmB,CAAC,GAGnBC,EAAOtH,EAAIqH,kBAOf,OALAtS,KAAKgS,OAAOlM,SAASzG,IAClBkT,EAAKlT,EAAE6S,MAAQK,EAAKlT,EAAE6S,OAAS,GAC/BK,EAAKlT,EAAE6S,MAAMhL,KAAK7H,EAAE,IAGhB4L,CACV,CAEAuH,WAAWC,GACR,IAAIC,EAAO1S,KAAKqS,qBAChBrS,KAAKO,GAAGoS,WAAWC,sBAAsBF,EAAMD,EAClD,CAEAI,WAAWC,EAAOC,GACf,IAAIL,EAAO1S,KAAKqS,qBAChBrS,KAAKO,GAAGoS,WAAWK,sBAAsBN,EAAMI,EAAOC,EACzD,EAOH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","sources":["webpack://ab_platform_web/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://ab_platform_web/./resources/Account.js","webpack://ab_platform_web/./AppBuilder/_factory_utils/Dialog.js","webpack://ab_platform_web/./resources/Multilingual.js","webpack://ab_platform_web/./resources/NetworkRest.js","webpack://ab_platform_web/./resources/NetworkRestSocket.js","webpack://ab_platform_web/./resources/Network.js","webpack://ab_platform_web/./resources/StorageLocal.js","webpack://ab_platform_web/./resources/Storage.js","webpack://ab_platform_web/./resources/Tenant.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configDesktop.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configMobile.js","webpack://ab_platform_web/./AppBuilder/uiSettings/config.js","webpack://ab_platform_web/./AppBuilder/uiSettings/icons.js","webpack://ab_platform_web/./AppBuilder/ABFactory.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationCore.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationMobileCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDataCollectionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDefinitionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFactoryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFieldManager.js","webpack://ab_platform_web/./AppBuilder/core/ABHintCore.js","webpack://ab_platform_web/./AppBuilder/core/ABIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/ABMLClassCore.js","webpack://ab_platform_web/./AppBuilder/core/ABModelCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectApiCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/ABStepCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerMobileCore.js","webpack://ab_platform_web/./AppBuilder/core/FilterComplexCore.js","webpack://ab_platform_web/./AppBuilder/core/RowFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldAutoIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldBooleanCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCombineCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateTimeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFileCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldImageCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldListCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldLongTextCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldStringCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTextFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldUserCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobilePageCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormDateCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormDatetimeCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormFileCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormImageCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessLaneCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessParticipantCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessTaskManager.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessElementCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessEndCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessGatewayExclusiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceInsertRecordCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskSubProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserApprovalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserExternalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerLifecycleCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerTimerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLFindCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRootObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRow.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowUpdateCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSet.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetFirstCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVExporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCarouselCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartAreaCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartBarCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartLineCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartPieCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCommentCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConditionalContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConnectDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataviewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDocxBuilderCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormDatepickerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGanttCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGridCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewKanbanCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLayoutCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewMenuCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPDFImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPivotCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewReportsManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewSchedulerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTabCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewWidgetCore.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplication.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplicationMobile.js","webpack://ab_platform_web/./AppBuilder/platform/ABComponent.js","webpack://ab_platform_web/./AppBuilder/platform/ABDataCollection.js","webpack://ab_platform_web/./AppBuilder/platform/ABDefinition.js","webpack://ab_platform_web/./AppBuilder/platform/ABEmitter.js","webpack://ab_platform_web/./AppBuilder/platform/ABHint.js","webpack://ab_platform_web/./AppBuilder/platform/ABIndex.js","webpack://ab_platform_web/./AppBuilder/platform/ABMLClass.js","webpack://ab_platform_web/./AppBuilder/platform/ABModel.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABObject.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectExternal.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectImport.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABProcess.js","webpack://ab_platform_web/./AppBuilder/platform/ABStep.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManager.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManagerMobile.js","webpack://ab_platform_web/./AppBuilder/platform/CSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/FilterComplex.js","webpack://ab_platform_web/./AppBuilder/platform/RowFilter.js","webpack://ab_platform_web/./AppBuilder/platform/RowUpdater.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABField.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldAutoIndex.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldBoolean.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCombine.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldConnect.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDateTime.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldEmail.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFile.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldImage.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldJson.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldList.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldLongText.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldNumber.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldSelectivity.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldString.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTextFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTree.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldUser.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobilePage.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileView.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormDate.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormDatetime.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormEmail.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormFile.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormFormula.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormImage.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewList.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessLane.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessParticipant.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessElement.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessEnd.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessGatewayExclusive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskEmail.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskService.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingJEArchive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceInsertRecord.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceQuery.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskSubProcess.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserApproval.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserExternal.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTrigger.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerLifecycle.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerTimer.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQL.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLFind.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLManager.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRootObject.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowSave.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetFirst.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetSave.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABView.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVExporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCarouselComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCarousel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartArea.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartBar.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartLine.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartPie.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewComment.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConditionalContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConnectDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConnectDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataview.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetail.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDocxBuilder.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormDatepicker.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormJson.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGanttComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupExport.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupMassUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGridComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupSortFields.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanban.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanbanFormSidePanel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLayout.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewList.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewMenu.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPDFImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPivot.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewReportsManager.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewScheduler.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewTab.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewWidget.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVExporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartAreaComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartBarComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartLineComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartPieComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCommentComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConditionalContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataviewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDocxBuilderComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormButtonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormDatepickerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormJsonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormNumberComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormReadonlyComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectMultipleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectSingleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTextboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewKanbanComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLabelComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLayoutComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewListComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewMenuComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPDFImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPivotComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewReportsManagerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewSchedulerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTabComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewProperty.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyAddPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyEditPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyFilterData.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyLinkPage.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRule.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleAction.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleList.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormRecordRules.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormSubmitRules.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleInsertConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdate.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleClosePopup.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleExistPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleParentPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleWebsite.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://ab_platform_web/./js/docxtemplater-image-module.v3.0.2.min.js","webpack://ab_platform_web/./js/docxtemplater.v3.0.12.min.js","webpack://ab_platform_web/./js/jszip.min.js","webpack://ab_platform_web/./webix_custom_components/activelist.js","webpack://ab_platform_web/./webix_custom_components/countfooter.js","webpack://ab_platform_web/./webix_custom_components/customComponentManager.js","webpack://ab_platform_web/./webix_custom_components/datetimepicker.js","webpack://ab_platform_web/./webix_custom_components/editlist.js","webpack://ab_platform_web/./webix_custom_components/edittree.js","webpack://ab_platform_web/./webix_custom_components/editunitlist.js","webpack://ab_platform_web/./webix_custom_components/focusableTemplate.js","webpack://ab_platform_web/./webix_custom_components/formioBuilder.js","webpack://ab_platform_web/./webix_custom_components/formioPreview.js","webpack://ab_platform_web/./webix_custom_components/lazyComponent.js","webpack://ab_platform_web/./webix_custom_components/numbertext.js","webpack://ab_platform_web/./webix_custom_components/thaicalendar.js","webpack://ab_platform_web/./webix_custom_components/timepicker.js","webpack://ab_platform_web/./webix_custom_components/tinyMce.js","webpack://ab_platform_web/./webix_custom_components/totalfooter.js","webpack://ab_platform_web/./webix_custom_components/treesuggest.js"],"sourcesContent":["var map = {\n\t\"./af\": 94506,\n\t\"./af.js\": 94506,\n\t\"./ar\": 59687,\n\t\"./ar-dz\": 62887,\n\t\"./ar-dz.js\": 62887,\n\t\"./ar-kw\": 66307,\n\t\"./ar-kw.js\": 66307,\n\t\"./ar-ly\": 51664,\n\t\"./ar-ly.js\": 51664,\n\t\"./ar-ma\": 89926,\n\t\"./ar-ma.js\": 89926,\n\t\"./ar-ps\": 68634,\n\t\"./ar-ps.js\": 68634,\n\t\"./ar-sa\": 85207,\n\t\"./ar-sa.js\": 85207,\n\t\"./ar-tn\": 52912,\n\t\"./ar-tn.js\": 52912,\n\t\"./ar.js\": 59687,\n\t\"./az\": 5011,\n\t\"./az.js\": 5011,\n\t\"./be\": 25997,\n\t\"./be.js\": 25997,\n\t\"./bg\": 4427,\n\t\"./bg.js\": 4427,\n\t\"./bm\": 85385,\n\t\"./bm.js\": 85385,\n\t\"./bn\": 67703,\n\t\"./bn-bd\": 57002,\n\t\"./bn-bd.js\": 57002,\n\t\"./bn.js\": 67703,\n\t\"./bo\": 39841,\n\t\"./bo.js\": 39841,\n\t\"./br\": 45642,\n\t\"./br.js\": 45642,\n\t\"./bs\": 69038,\n\t\"./bs.js\": 69038,\n\t\"./ca\": 53512,\n\t\"./ca.js\": 53512,\n\t\"./cs\": 39497,\n\t\"./cs.js\": 39497,\n\t\"./cv\": 6479,\n\t\"./cv.js\": 6479,\n\t\"./cy\": 89318,\n\t\"./cy.js\": 89318,\n\t\"./da\": 97229,\n\t\"./da.js\": 97229,\n\t\"./de\": 63460,\n\t\"./de-at\": 51044,\n\t\"./de-at.js\": 51044,\n\t\"./de-ch\": 26445,\n\t\"./de-ch.js\": 26445,\n\t\"./de.js\": 63460,\n\t\"./dv\": 32096,\n\t\"./dv.js\": 32096,\n\t\"./el\": 16048,\n\t\"./el.js\": 16048,\n\t\"./en-au\": 74301,\n\t\"./en-au.js\": 74301,\n\t\"./en-ca\": 66855,\n\t\"./en-ca.js\": 66855,\n\t\"./en-gb\": 761,\n\t\"./en-gb.js\": 761,\n\t\"./en-ie\": 46127,\n\t\"./en-ie.js\": 46127,\n\t\"./en-il\": 49157,\n\t\"./en-il.js\": 49157,\n\t\"./en-in\": 37199,\n\t\"./en-in.js\": 37199,\n\t\"./en-nz\": 31511,\n\t\"./en-nz.js\": 31511,\n\t\"./en-sg\": 47309,\n\t\"./en-sg.js\": 47309,\n\t\"./eo\": 92160,\n\t\"./eo.js\": 92160,\n\t\"./es\": 68582,\n\t\"./es-do\": 71885,\n\t\"./es-do.js\": 71885,\n\t\"./es-mx\": 68131,\n\t\"./es-mx.js\": 68131,\n\t\"./es-us\": 16962,\n\t\"./es-us.js\": 16962,\n\t\"./es.js\": 68582,\n\t\"./et\": 98890,\n\t\"./et.js\": 98890,\n\t\"./eu\": 37704,\n\t\"./eu.js\": 37704,\n\t\"./fa\": 22562,\n\t\"./fa.js\": 22562,\n\t\"./fi\": 70877,\n\t\"./fi.js\": 70877,\n\t\"./fil\": 34246,\n\t\"./fil.js\": 34246,\n\t\"./fo\": 78341,\n\t\"./fo.js\": 78341,\n\t\"./fr\": 19867,\n\t\"./fr-ca\": 82347,\n\t\"./fr-ca.js\": 82347,\n\t\"./fr-ch\": 17683,\n\t\"./fr-ch.js\": 17683,\n\t\"./fr.js\": 19867,\n\t\"./fy\": 21982,\n\t\"./fy.js\": 21982,\n\t\"./ga\": 13905,\n\t\"./ga.js\": 13905,\n\t\"./gd\": 13443,\n\t\"./gd.js\": 13443,\n\t\"./gl\": 66905,\n\t\"./gl.js\": 66905,\n\t\"./gom-deva\": 91324,\n\t\"./gom-deva.js\": 91324,\n\t\"./gom-latn\": 41890,\n\t\"./gom-latn.js\": 41890,\n\t\"./gu\": 37134,\n\t\"./gu.js\": 37134,\n\t\"./he\": 96835,\n\t\"./he.js\": 96835,\n\t\"./hi\": 81394,\n\t\"./hi.js\": 81394,\n\t\"./hr\": 13564,\n\t\"./hr.js\": 13564,\n\t\"./hu\": 46269,\n\t\"./hu.js\": 46269,\n\t\"./hy-am\": 57269,\n\t\"./hy-am.js\": 57269,\n\t\"./id\": 44254,\n\t\"./id.js\": 44254,\n\t\"./is\": 8699,\n\t\"./is.js\": 8699,\n\t\"./it\": 28301,\n\t\"./it-ch\": 92887,\n\t\"./it-ch.js\": 92887,\n\t\"./it.js\": 28301,\n\t\"./ja\": 64642,\n\t\"./ja.js\": 64642,\n\t\"./jv\": 62168,\n\t\"./jv.js\": 62168,\n\t\"./ka\": 94501,\n\t\"./ka.js\": 94501,\n\t\"./kk\": 49537,\n\t\"./kk.js\": 49537,\n\t\"./km\": 45808,\n\t\"./km.js\": 45808,\n\t\"./kn\": 34881,\n\t\"./kn.js\": 34881,\n\t\"./ko\": 62951,\n\t\"./ko.js\": 62951,\n\t\"./ku\": 92452,\n\t\"./ku-kmr\": 36063,\n\t\"./ku-kmr.js\": 36063,\n\t\"./ku.js\": 92452,\n\t\"./ky\": 1853,\n\t\"./ky.js\": 1853,\n\t\"./lb\": 77639,\n\t\"./lb.js\": 77639,\n\t\"./lo\": 34502,\n\t\"./lo.js\": 34502,\n\t\"./lt\": 60874,\n\t\"./lt.js\": 60874,\n\t\"./lv\": 18237,\n\t\"./lv.js\": 18237,\n\t\"./me\": 87878,\n\t\"./me.js\": 87878,\n\t\"./mi\": 64234,\n\t\"./mi.js\": 64234,\n\t\"./mk\": 17535,\n\t\"./mk.js\": 17535,\n\t\"./ml\": 43896,\n\t\"./ml.js\": 43896,\n\t\"./mn\": 63046,\n\t\"./mn.js\": 63046,\n\t\"./mr\": 80927,\n\t\"./mr.js\": 80927,\n\t\"./ms\": 37224,\n\t\"./ms-my\": 66332,\n\t\"./ms-my.js\": 66332,\n\t\"./ms.js\": 37224,\n\t\"./mt\": 24866,\n\t\"./mt.js\": 24866,\n\t\"./my\": 24206,\n\t\"./my.js\": 24206,\n\t\"./nb\": 66723,\n\t\"./nb.js\": 66723,\n\t\"./ne\": 45097,\n\t\"./ne.js\": 45097,\n\t\"./nl\": 37529,\n\t\"./nl-be\": 1355,\n\t\"./nl-be.js\": 1355,\n\t\"./nl.js\": 37529,\n\t\"./nn\": 30296,\n\t\"./nn.js\": 30296,\n\t\"./oc-lnc\": 4802,\n\t\"./oc-lnc.js\": 4802,\n\t\"./pa-in\": 77057,\n\t\"./pa-in.js\": 77057,\n\t\"./pl\": 69850,\n\t\"./pl.js\": 69850,\n\t\"./pt\": 15552,\n\t\"./pt-br\": 83726,\n\t\"./pt-br.js\": 83726,\n\t\"./pt.js\": 15552,\n\t\"./ro\": 1717,\n\t\"./ro.js\": 1717,\n\t\"./ru\": 79117,\n\t\"./ru.js\": 79117,\n\t\"./sd\": 61742,\n\t\"./sd.js\": 61742,\n\t\"./se\": 92049,\n\t\"./se.js\": 92049,\n\t\"./si\": 83329,\n\t\"./si.js\": 83329,\n\t\"./sk\": 27619,\n\t\"./sk.js\": 27619,\n\t\"./sl\": 76707,\n\t\"./sl.js\": 76707,\n\t\"./sq\": 84281,\n\t\"./sq.js\": 84281,\n\t\"./sr\": 60436,\n\t\"./sr-cyrl\": 13408,\n\t\"./sr-cyrl.js\": 13408,\n\t\"./sr.js\": 60436,\n\t\"./ss\": 27500,\n\t\"./ss.js\": 27500,\n\t\"./sv\": 6950,\n\t\"./sv.js\": 6950,\n\t\"./sw\": 54222,\n\t\"./sw.js\": 54222,\n\t\"./ta\": 73746,\n\t\"./ta.js\": 73746,\n\t\"./te\": 1130,\n\t\"./te.js\": 1130,\n\t\"./tet\": 34740,\n\t\"./tet.js\": 34740,\n\t\"./tg\": 13378,\n\t\"./tg.js\": 13378,\n\t\"./th\": 20628,\n\t\"./th.js\": 20628,\n\t\"./tk\": 92622,\n\t\"./tk.js\": 92622,\n\t\"./tl-ph\": 30100,\n\t\"./tl-ph.js\": 30100,\n\t\"./tlh\": 22871,\n\t\"./tlh.js\": 22871,\n\t\"./tr\": 33600,\n\t\"./tr.js\": 33600,\n\t\"./tzl\": 18985,\n\t\"./tzl.js\": 18985,\n\t\"./tzm\": 3627,\n\t\"./tzm-latn\": 51145,\n\t\"./tzm-latn.js\": 51145,\n\t\"./tzm.js\": 3627,\n\t\"./ug-cn\": 4790,\n\t\"./ug-cn.js\": 4790,\n\t\"./uk\": 97712,\n\t\"./uk.js\": 97712,\n\t\"./ur\": 99529,\n\t\"./ur.js\": 99529,\n\t\"./uz\": 99141,\n\t\"./uz-latn\": 61737,\n\t\"./uz-latn.js\": 61737,\n\t\"./uz.js\": 99141,\n\t\"./vi\": 98205,\n\t\"./vi.js\": 98205,\n\t\"./x-pseudo\": 20697,\n\t\"./x-pseudo.js\": 20697,\n\t\"./yo\": 37826,\n\t\"./yo.js\": 37826,\n\t\"./zh-cn\": 83994,\n\t\"./zh-cn.js\": 83994,\n\t\"./zh-hk\": 36892,\n\t\"./zh-hk.js\": 36892,\n\t\"./zh-mo\": 43884,\n\t\"./zh-mo.js\": 43884,\n\t\"./zh-tw\": 85136,\n\t\"./zh-tw.js\": 85136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","var EventEmitter = require(\"events\").EventEmitter;\n\nclass Account extends EventEmitter {\n   constructor() {\n      super();\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._listRoles = null;\n      // {array}\n      // a list of all the Defined Roles in the Tenant's system.\n\n      this._listScopes = null;\n      // {array | null}\n      // a list of all the Defined Scopes in the Tenant's sytem.\n\n      this._listUsers = null;\n      // {array | null}\n      // a list of all the Defined Users in the Tenant's system.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var UserConfig = this.AB.Config.userConfig();\n      if (UserConfig) {\n         this.isAuthenticated = true;\n         this._config = UserConfig;\n      }\n\n      var MetaConfig = this.AB.Config.metaConfig();\n      if (MetaConfig) {\n         this._listRoles = MetaConfig.roles || [];\n         this._listScopes = MetaConfig.scopes || [];\n         this._listUsers = MetaConfig.users || [];\n      }\n\n      this.AB.Network.on(\"account.logout\", (context, err, data) => {\n         if (err) {\n            console.error(err);\n            return;\n         }\n         this.emit(\"logout\", data);\n      });\n\n      return Promise.resolve();\n   }\n\n   canSwitcheroo() {\n      return (\n         this.roles((r) => r.uuid === \"320ef94a-73b5-476e-9db4-c08130c64bb8\")\n            .length > 0\n      );\n   }\n\n   isSwitcherood() {\n      return this.AB.Config.userReal();\n   }\n\n   isSystemDesigner() {\n      return (\n         this.roles((r) => r.uuid === \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\")\n            .length > 0\n      );\n   }\n\n   email() {\n      return this._config?.email ?? \"\";\n   }\n\n   language() {\n      return this._config?.languageCode ?? \"en\";\n   }\n\n   logout() {\n      return this.AB.Network.post(\n         {\n            url: \"/auth/logout\",\n            data: { tenantUrl: this.AB.Tenant.setting(\"url\") },\n         },\n         {\n            key: \"account.logout\",\n            context: {},\n         }\n      );\n   }\n\n   roles(fn = () => true) {\n      return (this._config?.roles || []).filter(fn);\n   }\n   rolesAll() {\n      return this._listRoles;\n   }\n\n   scopes() {\n      return this._listScopes;\n   }\n\n   username() {\n      return this._config?.username;\n   }\n\n   userList() {\n      return this._listUsers;\n   }\n\n   uuid() {\n      return this._config?.uuid;\n   }\n\n   imageID() {\n      return this._config?.image_id;\n   }\n\n   sendEmailNotifications() {\n      return this._config?.sendEmailNotifications;\n   }\n}\n\nexport default new Account();\n","//\n// Dialog\n// A common set of UI dialogs to show the User.\n//\n// NOTE: IN TRANSITION: this is our previous method of handling\n// dialogs.  In future, refactor to use webix directly in code.\n//\n\nexport default {\n   // Instance properties\n\n   // Alert\n   // A dialogue that popup with a message, and requires an [ok] button press\n   Alert: function (opts) {\n      webix.alert({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\"opp.dialog.alert.title\", \"*Alert\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.alert.text\",\n               \"*Something is wrong.\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.dialog.alert.ok\", \"*OK\"),\n      });\n   },\n\n   // Confirm\n   // A [Yes] [No] dialogue that pops up with a message\n   Confirm: function (opts) {\n      var title =\n         opts.title ||\n         AB.Multilingual.label(\"opp.dialog.confirm.confirmTitle\", \"* Confirm\");\n      var message =\n         opts.text ||\n         opts.message ||\n         AB.Multilingual.label(\n            \"opp.dialog.confirm.confirmMsg\",\n            \"* Are you sure you want to do this?\"\n         );\n\n      var labelYes =\n         opts.labelYes ||\n         opts.ok ||\n         AB.Multilingual.label(\"opp.common.yes\", \"* yes\");\n      var labelNo =\n         opts.labelNo ||\n         opts.cancel ||\n         AB.Multilingual.label(\"opp.common.no\", \"* no\");\n\n      // var fnYes = opts.fnYes || function () { };\n      // var fnNo = opts.fnNo || function () { };\n\n      webix.confirm({\n         title: title,\n         text: message,\n\n         ok: labelYes,\n         cancel: labelNo,\n\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n\n      // bootbox.dialog({\n      //     title: title,\n      //     message: message,\n      //     buttons: {\n      //         yes: {\n      //             label: labelYes,\n      //             className: 'btn-primary',\n      //             callback: fnYes\n      //         },\n      //         no: {\n      //             label: labelNo,\n      //             className: 'btn-default',\n      //             callback: fnNo\n      //         }\n      //     }\n      // });\n   },\n\n   // ConfirmDelete\n   // A Confirm dialogue geared towards deleting items.\n   // [delete] [cancel]\n   ConfirmDelete: function (opts) {\n      this.Confirm({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteTitle\",\n               \"* Confirm Delete\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.common.delete\", \"* Delete\"),\n         cancel:\n            opts.cancel ||\n            AB.Multilingual.label(\"opp.common.cancel\", \"* Cancel\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteMsg\",\n               \"* Are you sure you want to delete this?\",\n               [\"this\"]\n            ),\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n   },\n\n   // Message\n   // A simple message displayed to the user.  Can time out\n   Message: function (opts) {\n      var message = opts.text || opts.message;\n      var timeout = opts.timeout || 2000;\n\n      webix.message({\n         text: message,\n         expire: timeout,\n      });\n   },\n};\n","/*\n * Multilingual\n * manage our multilingual Translations/Labels/etc.\n */\n\nvar MLClass = require(\"../AppBuilder/platform/ABMLClass\");\n\nclass Multilingual extends MLClass {\n   constructor() {\n      super([], {});\n      // super()\n      //    [] = no labels\n      //    {} = placeholder ABFactory entry until .init() is called.\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._missingLabelID = false;\n      this._missingLabels = {};\n      this._pluginLabelsMissing = {};\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.labels = this.AB.Config.labelConfig();\n      this._languages = this.AB.Config.languageConfig();\n\n      this.pluginLabels = {};\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   currentLanguage() {\n      return this.AB.Account.language();\n   }\n\n   label(key, altText, values = [], postMissing = true) {\n      // part of our transition: L(\"single string\") should start to work:\n      if (typeof altText == \"undefined\" && key) {\n         altText = key;\n      }\n\n      // other case: L(\"single string {0}\", [])\n      if (arguments.length == 2 && Array.isArray(altText)) {\n         values = altText;\n         altText = key;\n      }\n\n      // We need to escape \" characters or else they will get added to the the lang.js\n      // then we get errors next time we try to parse it as JSON (see appbuilder.label-missing)\n      altText = altText.replace(/\"/g, '\\\\\"');\n      key = key.replace(/\"/g, '\\\\\"');\n\n      // NOTE: transition to new Labels\n      // currently our code still uses the L(key, altText, values) format, but\n      // the labels we get back are in L(altText, values) format.\n      //\n      // we are going to keep this like this until we have a well functioning\n      // UI display of our Apps, which should flesh out most of the missing\n      // labels to our files.\n      //\n      // After that, convert our L(k, t, v) to L(t, v)\n\n      var newKey = altText;\n      if (newKey[0] == \"*\") {\n         newKey = newKey.slice(1);\n      }\n      var label = this.labels[newKey];\n      if (!label) {\n         if (postMissing) {\n            this.postMissingLabel(key, altText);\n         }\n         label = altText;\n      }\n\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      label = label.replace(/\\\\\"/g, '\"'); // unescape \" in the label\n      return label;\n   }\n\n   labelPlugin(plugin, altText, values = []) {\n      // 1st check to see if it is a common label from platform:\n      var label = this.label(altText, altText, values, false);\n      if (!label) {\n         // ok, so check to see if it is a Plugin Label:\n         label = this.pluginLabels[plugin][altText];\n      }\n      if (!label) {\n         // !! record it missing.\n         this._pluginLabelsMissing[plugin] =\n            this._pluginLabelsMissing[plugin] || {};\n         this._pluginLabelsMissing[plugin][altText] = altText;\n         label = altText;\n      }\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      return label;\n   }\n\n   languages() {\n      return this._languages;\n\n      // console.error(\n      //    \"Multilingual:languages(): Implement Language Storage/Retrieval.\"\n      // );\n      // return [];\n   }\n\n   pluginLoadLabels(key, labels) {\n      this.pluginLabels[key] = labels;\n   }\n   pluginLabelReport(key) {\n      console.warn(\"missing labels for plugin: \", key);\n      console.warn(\"current language:\", this.currentLanguage());\n      var labels = JSON.stringify(this._pluginLabelsMissing[key], null, 3);\n      console.warn(labels);\n   }\n\n   postMissingLabel(key, altText) {\n      if (this._missingLabelID) {\n         clearTimeout(this._missingLabelID);\n      }\n      var batchLength = 50;\n      var sendBatch = () => {\n         var batchLabels = [];\n         let missingLabels = Object.keys(this._missingLabels).map(\n            (k) => this._missingLabels[k]\n         );\n         if (missingLabels.length <= batchLength) {\n            batchLabels = missingLabels;\n            this._missingLabels = {};\n         } else {\n            for (var i = 0; i <= batchLength; i++) {\n               var l = missingLabels.shift();\n               batchLabels.push(l);\n               delete this._missingLabels[l.key];\n            }\n         }\n         this.AB.Network.post({\n            url: \"/multilingual/label-missing\",\n            data: { labels: JSON.stringify(batchLabels) },\n         })\n            .then(() => {\n               if (Object.keys(this._missingLabels).length > 0) {\n                  sendBatch();\n               }\n            })\n            .catch((err) => {\n               const strErr = err.toString();\n               if (strErr.indexOf(\"unable to get\") > -1) {\n                  console.error(\n                     \"Missing language file for :\" + this.currentLanguage()\n                  );\n               }\n            });\n      };\n      this._missingLabelID = setTimeout(() => {\n         sendBatch();\n      }, 1000);\n\n      this._missingLabels[key] = { key, altText };\n   }\n   ///\n   /// Disable un-needed ABMLClass functionality\n   ///\n   /// NOTE: we are mainly Piggybacking on ABMLClass for it's\n   /// .translate() and .unTranslate() capabilities. So disable these\n   /// for good measure.\n   destroy() {\n      console.error(\"Multilingual:destroy(): Should not be called.\");\n      return Promise.resolve();\n   }\n   save() {\n      console.error(\"Multilingual:save(): Should not be called.\");\n      return Promise.resolve();\n   }\n   toObj() {\n      console.error(\"Multilingual:toObj(): Should not be called.\");\n      return {};\n   }\n   toDefinition() {\n      console.error(\"Multilingual:toDefinition(): Should not be called.\");\n      return {};\n   }\n}\n\nexport default new Multilingual();\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\n/* global navigator Connection */\n// import Account from \"./Account\";\n// import analytics from \"./Analytics\";\n// import EventEmitter from \"eventemitter2\";\nvar EventEmitter = require(\"events\").EventEmitter;\n// import Lock from \"./Lock\";\n\n// import { storage } from \"./Storage\";\n// import Tenant from \"./Tenant\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Temp placeholders until Resources are implemented:\n\n// End Temp\n\nconst Atomic = require(\"atomicjs/dist/atomic.min.js\");\n// Atomic : a small $.ajax() replacement\n\nvar Config = null;\n// {} Config\n// the site specific configuration information\n\nclass NetworkRest extends EventEmitter {\n   constructor(parent) {\n      // {Network} parent\n\n      super({\n         wildcard: true,\n         newListener: false,\n         maxListeners: 0,\n      });\n\n      this.baseURL = null;\n      // {string} .baseURL\n      // the url of our site.\n\n      this.numRetries = 3;\n      // {int} .numRetries\n      // the number or times we should attempt to issue a network request.\n\n      this._network = parent;\n      // {Network} ._network\n      // the Parent Network Resource that the rest of the Platform actually\n      // works with.\n\n      this.isRealTime = false;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n   }\n\n   /**\n    * @method init\n    * @param {ABFactory} AB\n    * @param {object} options\n    * @param {string} options.baseURL\n    * @return {Promise}\n    */\n   init(AB, options) {\n      this.AB = AB;\n\n      Config = this.AB.Config.siteConfig();\n      options = options || {};\n      if (options) {\n         this.baseURL = options.baseURL || Config.appbuilder.urlCoreServer;\n         this.numRetries =\n            options.networkNumRetries || Config.appbuilder.networkNumRetries;\n      }\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(params, jobResponse) {\n      params.type = params.type || \"GET\";\n\n      // data sent to params on a \"GET\" request need to be converted to\n      // uri querystring values:\n      var data = params.data || params.params;\n      if (data) {\n         var useThese = [\"string\", \"number\", \"boolean\"];\n         var search = Object.keys(data)\n            .map(function (key) {\n               var val = data[key];\n               if (useThese.indexOf(typeof val) == -1) {\n                  val = JSON.stringify(val);\n               }\n               return key + \"=\" + encodeURIComponent(val);\n            })\n            .join(\"&\");\n\n         var join = \"?\";\n         if (params.url.indexOf(\"?\") > -1) {\n            join = \"&\";\n         }\n         params.url = [params.url, search].join(join);\n      }\n\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(params, jobResponse) {\n      params.type = params.type || \"POST\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(params, jobResponse) {\n      params.type = params.type || \"PUT\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(params, jobResponse) {\n      params.type = params.type || \"DELETE\";\n      return this._request(params, jobResponse);\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return this._network.isNetworkConnected();\n   }\n\n   salSend(params) {\n      return Atomic(params.url, params).then((packet) => {\n         // {json} packet\n         // the response from Atomic is in format:\n         // {data: {…}, xhr: XMLHttpRequest}\n         // we just want to send back our { status:\"\", data:xxx } packet.\n         return packet.data;\n      });\n   }\n\n   /**\n    * _request()\n    * perform the actual AJAX request for this operation.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   _request(params, jobResponse) {\n      // make sure we don't process too many retries:\n      params._retry = params._retry || 0;\n      if (params._retry >= this.numRetries) {\n         var err = new Error(\n            `Too many retries (${this.numRetries}) for ${params.url}`\n         );\n         err.code = \"E_TOMANYRETRIES\";\n         this.AB.notify.developer(err, {\n            context: \"NetworkRest:_request: Too Many Retries\",\n         });\n         // this.AB.Analytics.logError(err);\n         if (jobResponse) {\n            this._network.publishResponse(jobResponse, err);\n         }\n\n         return Promise.reject(err);\n      }\n\n      return new Promise((resolve, reject) => {\n         params.url = params.url || \"/\";\n         if (params.url[0] == \"/\") {\n            params.url = this.baseURL + params.url;\n         }\n\n         params.headers = params.headers || {};\n         if (this.AB.Account.authToken) {\n            params.headers.Authorization = this.AB.Account.authToken;\n         }\n         params.headers[\"Content-type\"] = \"application/json\";\n\n         var tenantID = this.AB.Tenant.id();\n         if (tenantID) {\n            params.headers[\"tenant-token\"] = tenantID;\n         }\n\n         // params.timeout = params.timeout || 6000;\n\n         if (this.isNetworkConnected()) {\n            params.method = params.method || params.type;\n            params.timeout = 6000; // ??\n            params.data = params.data || params.params;\n            delete params.params;\n\n            this.salSend(params)\n               .then((packet) => {\n                  // TODO: check if packet.status == \"error\"\n                  // and then .publishResponse() as an error\n\n                  //\n                  var data = packet;\n                  if (jobResponse) {\n                     this._network.publishResponse(jobResponse, null, data);\n                  }\n                  resolve(data);\n               })\n               .catch((err) => {\n                  // err.status\n                  // err.statusText\n                  // err.responseText\n                  // err.message  {socket}\n                  // err.stack    {socket}\n\n                  // if this is a network connection error, send the attempt again:\n                  if (\n                     err.statusText == \"Request timeout\" ||\n                     (err.message && err.message.indexOf(\"disconnected\") > -1)\n                  ) {\n                     //// Network Error: conneciton refused, access denied, etc...\n                     this.AB.Analytics.log(\n                        \"NetworkRest._request():network connection error detected. Trying again\"\n                     );\n\n                     params._retry++;\n\n                     // retry the attempt:\n                     this._request(params)\n                        .then((data) => {\n                           // console.log('--- timeout.then():',data);\n                           this.AB.warn(\n                              \"*** NetworkRest._request().then(): attempt resolved.\"\n                           );\n                           resolve(data);\n                        })\n                        .catch((_err) => {\n                           this.AB.notify.developer(_err, {\n                              message:\n                                 \"*** NetworkRest._request().catch(): retry failed:\",\n                           });\n                           reject(_err);\n                        });\n\n                     return;\n                  } else {\n                     // Else attempt to emit() some common Error types for\n                     // additional Platform Handling.\n                     if (err.status == 403) {\n                        this.emit(\"error.badAuth\", err);\n                     } else if (err.status >= 400 && err.status < 500) {\n                        this.emit(\"error.badRequest\", err);\n                     } else if (err.status >= 500) {\n                        this.emit(\"error.badServer\", err);\n                     }\n                  }\n\n                  var packet = null;\n                  if (err.responseText) {\n                     try {\n                        packet = JSON.parse(err.responseText);\n                     } catch (e) {}\n                  }\n                  // if this is an req.ab.error() response:\n                  if (packet && packet.status == \"error\") {\n                     // check if REAUTH Error:\n                     if (packet.id == 5 || packet.code == \"E_REAUTH\") {\n                        this._network.emit(\"reauth\");\n                        return;\n                     }\n\n                     this.AB.notify.developer(new Error(packet.message), {\n                        context:\n                           \"NetworkRest:_request:Error returned from Server (req.ab.error())\",\n                        data: packet.data,\n                        status: packet.status,\n                     });\n                     // this.AB.Analytics.logError(packet.data);\n                     // this.AB.error(packet.data);\n                     if (jobResponse) {\n                        this._network.publishResponse(\n                           jobResponse,\n                           packet,\n                           null\n                        );\n                     }\n                     return reject(packet.data);\n                  } else {\n                     // unknown/unexpected error:\n                     var error = new Error(\n                        `${err.status} ${err.statusText || err.message}: ${\n                           params.method\n                        } ${params.url}`\n                     );\n                     error.response = err.responseText;\n                     error.text = err.statusText;\n                     error.err = err;\n                     error.url = `${params.method} ${params.url}`;\n                     this.AB.notify.developer(error, {\n                        context:\n                           \"NetworkRest:_request:Unknown Error returned from server\",\n                        err,\n                        response: err.responseText,\n                        text: err.statusText || err.message,\n                        url: error.url,\n                     });\n                     // this.AB.Analytics.logError(error);\n                     // this.AB.error(error);\n                     if (jobResponse) {\n                        this._network.publishResponse(jobResponse, error);\n                     }\n                     return reject(error);\n                  }\n               });\n         } else {\n            // now Queue this request params.\n            this.AB.Analytics.log(\n               \"NetworkRest:_request(): Network is offline. Queuing request.\"\n            );\n            this._network\n               .queue(params, jobResponse)\n               .then(() => {\n                  resolve({ status: \"queued\" });\n               })\n               .catch(reject);\n         }\n      });\n   }\n\n   /**\n    * resend()\n    * processes messages that were queued due to network connectivity\n    * issues.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   resend(params, jobResponse) {\n      // var op = params.type.toLowerCase();\n      return this._request(params, jobResponse);\n   }\n}\n\nexport default NetworkRest;\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\nimport performance from \"../utils/performance\";\nimport NetworkRest from \"./NetworkRest\";\n\nconst listSocketEvents = [\n   // NOTE: ABFactory.definitionXXX() will manage emitting these\n   // events internally:\n   // \"ab.abdefinition.create\",\n   // \"ab.abdefinition.update\",\n   // \"ab.abdefinition.delete\",\n   \"ab.datacollection.create\",\n   \"ab.datacollection.update\",\n   \"ab.datacollection.stale\",\n   \"ab.datacollection.delete\",\n   \"ab.inbox.create\",\n   \"ab.inbox.update\",\n   // \"ab.object.update\",\n];\n// {array}\n// The io.socket.* events we are listening for that relate to our datacollection\n// maintainence.\n\nclass NetworkRestSocket extends NetworkRest {\n   constructor(parent) {\n      // {Network} parent\n\n      super(parent);\n\n      this.isRealTime = true;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n\n      // Pass the io.socket.on(*) events to our AB factory.\n      listSocketEvents.forEach((ev) => {\n         io.socket.on(ev, (data) => {\n            // check if the ev contains 'datacollection'\n            // and do a single normalizeData() on the incoming data here\n            // before sending it off to be processed.\n            if (ev.indexOf(\"ab.datacollection\") > -1) {\n               let values = data.data;\n               if (values) {\n                  let obj = this.AB.objectByID(data.objectId);\n                  if (obj) {\n                     let model = obj.model();\n                     if (ev != \"ab.datacollection.delete\") {\n                        let jobID = this.AB.jobID();\n                        performance.mark(`${ev}:normalization`, {\n                           op: \"function\",\n                           data: { jobID },\n                        });\n                        model.normalizeData(data.data);\n                        performance.measure(`${ev}:normalization`);\n                     }\n                  }\n               }\n            }\n            this.AB.emit(ev, data);\n         });\n      });\n   }\n\n   //\n   // Interface API\n   //\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return io.socket.isConnected();\n   }\n\n   salSend(params) {\n      let route, query;\n      try {\n         // Extract paramitized route (ex: `/app_builder/model/:ID`) for performance tracking\n         [, route, query] = params.url.match(\n            /https?:\\/\\/[^/]+(\\/[^?]+)\\??(.*)/\n         );\n         route = route.replace(/\\b[a-fA-F\\d-]{36}\\b/g, \":ID\");\n         performance.mark(route, {\n            op: \"websocket.client\",\n            data: {\n               http: {\n                  query: query || undefined,\n                  method: params.method,\n               },\n               url: params.url,\n            },\n         });\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: `salSend() create performance.mark`,\n         });\n      }\n\n      return new Promise((resolve, reject) => {\n         params.method = params.method.toLowerCase();\n\n         io.socket.request(params, (data, jwres) => {\n            // {json} data\n            // the data response from the request\n            // {json} jwres\n            // A JSON WebSocket Response object.\n            //    {json} jwres.headers :  header values\n            //    {int}  jwres.statusCode : http response code\n            //    {json} jwres.body === resData\n\n            // if this is an  error\n            if (jwres.statusCode >= 400) {\n               // Our NetworkRest.error( err ) should be in this format:\n               // err.status\n               // err.statusText\n               // err.responseText\n\n               var errStr = jwres.error ? jwres.error.toString() : jwres.body;\n\n               var err = new Error(`Socket Error: ${errStr}`);\n               err.status = jwres.statusCode;\n               err.statusText = errStr;\n               err.responseText = jwres.body;\n\n               // on RequestTimeout:\n               // err.statusText == \"Request timeout\"\n\n               reject(err);\n            } else {\n               // some errors like socket disconnected return an Error for data\n               if (data instanceof Error) {\n                  reject(data);\n                  return;\n               }\n\n               if (typeof data == \"string\") {\n                  performance.mark(\"JSON.parse\", { op: \"serialize\" });\n                  data = JSON.parse(data);\n                  performance.measure(\"JSON.parse\");\n               }\n\n               // Got a JSON response but was the service response an error?\n               // this would be a strange case where the .statusCode < 400\n               if (data?.status == \"error\") {\n                  // make sure to reject an err.responseText = data\n                  reject({\n                     status: jwres.statusCode,\n                     responseText: JSON.Stringify(data),\n                  });\n               }\n               // Success!\n               else {\n                  performance.measure(route);\n                  resolve(data);\n               }\n            }\n         });\n      });\n   }\n}\n\nexport default NetworkRestSocket;\n","/*\n * Network.js\n * A network manager for interfacing with our AppBuilder server.\n */\nvar EventEmitter = require(\"events\").EventEmitter;\nimport performance from \"../utils/performance\";\nimport NetworkRest from \"./NetworkRest\";\nimport NetworkRestSocket from \"./NetworkRestSocket\";\n// import NetworkRelay from \"./NetworkRelay\";\n\nclass Network extends EventEmitter {\n   constructor() {\n      super();\n\n      this.setMaxListeners(0);\n      // we'll have > 10 for sure!\n\n      this.queueLock = null;\n      // {Lock} .queueLock\n      // our semaphore for coordinating our access to our local storage.\n\n      this._config = null;\n      this._network = null;\n      // {NetworkRelay | NetworkRest | NetworkSocket}\n      // the underlying Network connection object actually performing the\n      // communications with the Server.\n      // Which one is specified in the config.appbuilder.networkType setting\n\n      this._queueCount = 0;\n      // {int} _queueCount\n      // the # of network operations currently queued, pending Network\n      // reconnect.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.queueLock = new this.AB.Lock();\n\n      this._config = this.AB.Config.siteConfig();\n      if (this._config) {\n         switch (this._config.appbuilder.networkType) {\n            case \"relay\":\n               // this._network = new NetworkRelay();\n               break;\n\n            case \"socket\":\n               this._network = new NetworkRestSocket(this);\n               break;\n\n            case \"rest\":\n            default:\n               this._network = new NetworkRest(this);\n               break;\n         }\n\n         return this._network.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      //\n      // Handle reconnections and flushing the Queue:\n      //\n      if (io && io.socket) {\n         // When our Socket reconnects, be sure to flush any pending transactions.\n         io.socket.on(\"connected\", () => {\n            this.queueFlush();\n            if (this.idConnectionCheck) {\n               clearTimeout(this.idConnectionCheck);\n               this.idConnectionCheck = null;\n            }\n         });\n      } else {\n         console.error(\"!!! Network.init() : Did not find io.socket\");\n         window.addEventListener(\"online\", () => this.queueFlush());\n      }\n\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.isRealTime\n    * indicates wether or not the current network connection supports\n    * RealTime updates.\n    * @return {bool}\n    */\n   get isRealTime() {\n      return this._network.isRealTime;\n   }\n\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(...params) {\n      return this._network.get(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * this is a CREATE operation.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(...params) {\n      return this._network.post(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * This is for UPDATE/REPLACE operations to data on the server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(...params) {\n      return this._network.put(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(...params) {\n      return this._network.delete(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   _connectionCheck() {\n      // if (!this.idConnectionCheck) {\n      if (this.isNetworkConnected()) {\n         this.queueFlush().catch(() => {\n            // on an error, we are still having connection issues\n            this.idConnectionCheck = setTimeout(() => {\n               this._connectionCheck();\n            }, 250);\n         });\n         this.idConnectionCheck = null;\n      } else {\n         this.idConnectionCheck = setTimeout(() => {\n            this._connectionCheck();\n         }, 250);\n      }\n      // }\n   }\n\n   /**\n    * Check whether the network is slow\n    * @returns {Boolean}\n    */\n   isNetworkSlow() {\n      return !!this._networkSlow;\n   }\n\n   /**\n    * Register the network speed test worker\n    * @param {Worker} worker\n    * @param {boolean} slow is the current state slow?\n    */\n   registerNetworkTestWorker(worker, slow) {\n      this._networkTestWorker = worker;\n      this._networkSlow = slow;\n      this._networkTestWorker.onmessage = ({ data }) => {\n         if (this._networkSlow !== data) {\n            this._networkSlow = data;\n            this.emit(\"networkslow\", this._networkSlow);\n            // Tell sentry our network speed changed\n            performance.setContext(\"breadcrumb\", {\n               category: \"network\",\n               message: this._networkSlow\n                  ? \"Slow network detected\"\n                  : \"Network speed restored\",\n               level: \"info\",\n            });\n         }\n      };\n   }\n\n   /**\n    * @method networkStatus\n    * return the connection type currently registered with the network\n    * plugin.\n    * @return {string}\n    */\n   networkStatus() {\n      return navigator.connection.type;\n   }\n\n   /**\n    * @method isNetworkConnected\n    * return true/false if the device is currently connected to the\n    * internet.\n    * @return {bool}\n    */\n   isNetworkConnected() {\n      // if this is a Web Client and using sails.socket.io\n      if (io && io.socket && io.socket.isConnected) {\n         return io.socket.isConnected();\n      }\n\n      // if this isn't a Cordova Plugin, then return navigator data:\n      if (typeof Connection == \"undefined\") {\n         // NOTE: this technically only detects if we are connected to a\n         // network.  It doesn't guarantee we can communicate across the 'net\n         return navigator.onLine;\n      }\n\n      // Cordova Plugin:\n      return this.networkStatus() != Connection.NONE;\n   }\n\n   /**\n    * publishResponse()\n    * emit the requested response for this network operation.\n    * @param {obj} jobResponse\n    * @param {obj} error\n    * @param {obj} data\n    */\n   publishResponse(jobResponse, error, data) {\n      if (data) {\n         data = this.normalizeData(data);\n      }\n      this.emit(jobResponse.key, jobResponse.context, error, data);\n   }\n\n   normalizeData(data) {\n      // Data returning from our server is wrapped in an outer layer of\n      // information that is for our Networking API.\n      // the outer wrapper should be:\n      // on success :\n      // {\n      //   status: \"success\",\n      //   data:{Data For App}\n      // }\n      // on Error:\n      // {\n      //   status: \"error\",\n      //   id: {int} error code\n      //   ... other data here\n      // }\n\n      // we have physically received a data packet from the server,\n      // but we are informed that our transaction was problematic\n      // (400 level USER problem?)\n      if (data.status === \"error\") {\n         // TODO: review Error procedure here\n         return data;\n      }\n\n      // on success\n      // make sure we return the Application Level Data packet:\n      return data.data || data;\n   }\n\n   ////\n   //// Queued Requests\n   ////\n\n   /**\n    * refQueue()\n    * sub classes can override this for their own separate Queue Data\n    * @return {string}\n    */\n   refQueue() {\n      return \"networkQueue\";\n   }\n\n   /**\n    * queueCount()\n    * return the # of messages in the queue.\n    * @return {int}\n    */\n   queueCount() {\n      return this._queueCount;\n   }\n\n   /**\n    * Adds a request to the outgoing queue.\n    *\n    * @param {object} data\n    * @param {object} jobResponse\n    * @return {Promise}\n    */\n   queue(data, jobResponse) {\n      var refQueue = this.refQueue();\n\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n            .then((queue) => {\n               queue = queue || [];\n               queue.push({ data, jobResponse });\n               this.AB.log(\n                  `:::: ${queue.length} request${\n                     queue.length > 1 ? \"s\" : \"\"\n                  } queued`\n               );\n               this._queueCount = queue.length;\n               return this.AB.Storage.set(refQueue, queue);\n            })\n            .then(() => {\n               this.emit(\"queued\");\n               // if we are not already polling the network, start\n               if (!this.idConnectionCheck) {\n                  this._connectionCheck();\n               }\n               this.queueLock.release();\n               resolve();\n            })\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"Error while queueing data\",\n               });\n               this.AB.Analytics.logError(err);\n               reject(err);\n\n               this.queueLock.release();\n            });\n      });\n   }\n\n   /**\n    * queueFlush()\n    * Flush the queue and send the contents to the relay server.\n    */\n   queueFlush() {\n      var refQueue = this.refQueue();\n\n      // if we are not connected, then stop\n      if (!this.isNetworkConnected()) {\n         var error = new Error(\"Not connected to the internet.\");\n         error.code = \"E_NOTCONNECTED\";\n         return Promise.reject(error);\n      }\n\n      // otherwise, attempt to flush the queue:\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n\n            //\n            // Get queue contents\n            //\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n\n            //\n            // Send off each queued request\n            //\n            .then((queue) => {\n               // default to [] if not found\n               queue = queue || [];\n\n               // recursively process each pending queue request\n               var processRequest = (cb) => {\n                  if (queue.length == 0) {\n                     cb();\n                  } else {\n                     var entry = queue.shift();\n                     var params = entry.data;\n                     var job = entry.jobResponse;\n                     this._network\n                        .resend(params, job)\n                        .then(() => {\n                           processRequest(cb);\n                        })\n                        .catch((err) => {\n                           // if the err was due to a network connection error\n                           if (err && err.code == \"E_TOMANYRETRIES\") {\n                              cb(err);\n                              return;\n                           }\n                           // otherwise, try the next\n                           processRequest(cb);\n                        });\n                  }\n               };\n\n               return new Promise((res, rej) => {\n                  processRequest((err) => {\n                     if (err) {\n                        rej(err);\n                     } else {\n                        res();\n                     }\n                  });\n               });\n            })\n\n            //\n            // Clear queue contents\n            //\n            .then(() => {\n               this._queueCount = 0;\n               return this.AB.Storage.set(refQueue, []);\n            })\n\n            // release the Lock\n            .then(() => {\n               this.emit(\"queue.synced\");\n               return this.queueLock.release();\n            })\n\n            // all done.\n            .then(() => {\n               resolve();\n            })\n\n            // respond to errors:\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"commAPI queueFlush error\",\n               });\n               this.AB.Analytics.logError(err);\n\n               this.queueLock.release().then(() => {\n                  reject(err);\n               });\n            });\n      });\n   }\n\n   /**\n    * Reset credentials to a blank state.\n    * @return {Promise}\n    */\n   reset() {\n      return Promise.resolve();\n   }\n\n   /**\n    * type()\n    * return the type of network connection we are using.\n    * [\"rest\", \"socket\", \"relay\"]\n    * @return {string}\n    */\n   type() {\n      return this._config.appbuilder.networkType;\n   }\n\n   // uuid() {\n   //    return this.AB.uuid();\n   // }\n\n   getTokens() {\n      // called in appPage.js : openRelayLoader()\n      return {};\n   }\n}\n\nexport default new Network();\n","/*\n * StorageLocal\n *\n * An interface for storing and retrieving Client Side data.  Data stored\n * in StorageLoacal is NOT encrypted.\n *\n * This implementation is based upon the webix.storage.local library.\n * See: https://docs.webix.com/api__refs__storage.local.html\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nclass StorageLocal extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      // {Webix.storage} object.\n      // We divide the storage data according to the tenant we are working\n      // with.  This way Users who can move between different Tenants can\n      // keep their local data separated.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var tenantID = this.AB.Tenant.id();\n      if (!tenantID) {\n         tenantID = \"noAuth\";\n         // \"noAuth\" is considered the tenant on our Login sequence\n         // which should have a minimum of data stored (language maybe?)\n      }\n\n      this.tenantStorage = this.AB.Webix.storage.prefix(\n         tenantID,\n         this.AB.Webix.storage.local\n      );\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   set(key, value /* , options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.put(key, value);\n      });\n   }\n\n   get(key /*, options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.get(key);\n      });\n   }\n\n   clear(key) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.remove(key);\n      });\n   }\n\n   clearAll() {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.clear();\n      });\n   }\n}\n\nexport default new StorageLocal();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport StorageLocal from \"./StorageLocal.js\";\n\nclass Storage extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      this._config = null;\n      this._storage = null;\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var config = this.AB.Config.siteConfig();\n      if (config) {\n         if (config.storage && config.storage.encrypted) {\n            console.error(\"TODO: Implement Encrypted Storage\");\n            // this._storage = StorageEncrypted;\n            this._storage = StorageLocal;\n         } else {\n            this._storage = StorageLocal;\n         }\n\n         return this._storage.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      return Promise.resolve();\n   }\n\n   set(...params) {\n      return this._storage.set(...params);\n   }\n\n   get(...params) {\n      return this._storage.get(...params);\n   }\n\n   clear(...params) {\n      return this._storage.clear(...params);\n   }\n\n   clearAll(...params) {\n      return this._storage.clearAll(...params);\n   }\n}\n\nexport default new Storage();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nclass Tenant extends EventEmitter {\n   constructor() {\n      super();\n\n      this.text = false;\n      this._config = null;\n      this.textClickToEnter = null;\n   }\n\n   init() {\n      var config = Config.tenantConfig();\n      if (config) {\n         // check if we have options that are stored as a string\n         if (\n            typeof config.options === \"string\" ||\n            config.options instanceof String\n         ) {\n            // if we do try to parse them into a JSON object\n            try {\n               config.options = JSON.parse(config.options);\n            } catch (error) {\n               console.error(error);\n            }\n         }\n         this._config = config;\n         this.textClickToEnter = config.options.textClickToEnter;\n      }\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   id() {\n      if (!this._config || this._config.id == \"??\") {\n         return null;\n      }\n      return this._config.id;\n   }\n\n   setting(key, value) {\n      if (this._config) {\n         if (value) {\n            this._config.options[key] = value;\n            return;\n         }\n         return this._config.options[key];\n      }\n   }\n}\n\nexport default new Tenant();\n","/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\nimport Icons from \"./icons\";\n\nexport default {\n   config: function () {\n      // TODO: decide which config file to return here:\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   },\n   icons: Icons.icons,\n};\n","export default {\n   icons: [\n      \"500px\",\n      \"address-book\",\n      \"address-book-o\",\n      \"address-card\",\n      \"address-card-o\",\n      \"adjust\",\n      \"adn\",\n      \"align-center\",\n      \"align-justify\",\n      \"align-left\",\n      \"align-right\",\n      \"amazon\",\n      \"ambulance\",\n      \"american-sign-language-interpreting\",\n      \"anchor\",\n      \"android\",\n      \"angellist\",\n      \"angle-double-down\",\n      \"angle-double-left\",\n      \"angle-double-right\",\n      \"angle-double-up\",\n      \"angle-down\",\n      \"angle-left\",\n      \"angle-right\",\n      \"angle-up\",\n      \"apple\",\n      \"archive\",\n      \"area-chart\",\n      \"arrow-circle-down\",\n      \"arrow-circle-left\",\n      \"arrow-circle-o-down\",\n      \"arrow-circle-o-left\",\n      \"arrow-circle-o-right\",\n      \"arrow-circle-o-up\",\n      \"arrow-circle-right\",\n      \"arrow-circle-up\",\n      \"arrow-down\",\n      \"arrow-left\",\n      \"arrow-right\",\n      \"arrow-up\",\n      \"arrows\",\n      \"arrows-alt\",\n      \"arrows-h\",\n      \"arrows-v\",\n      \"asl-interpreting\",\n      \"assistive-listening-systems\",\n      \"asterisk\",\n      \"at\",\n      \"audio-description\",\n      \"automobile\",\n      \"backward\",\n      \"balance-scale\",\n      \"ban\",\n      \"bandcamp\",\n      \"bank\",\n      \"bar-chart\",\n      \"bar-chart-o\",\n      \"barcode\",\n      \"bars\",\n      \"bath\",\n      \"bathtub\",\n      \"battery\",\n      \"battery-0\",\n      \"battery-1\",\n      \"battery-2\",\n      \"battery-3\",\n      \"battery-4\",\n      \"battery-empty\",\n      \"battery-full\",\n      \"battery-half\",\n      \"battery-quarter\",\n      \"battery-three-quarters\",\n      \"bed\",\n      \"beer\",\n      \"behance\",\n      \"behance-square\",\n      \"bell\",\n      \"bell-o\",\n      \"bell-slash\",\n      \"bell-slash-o\",\n      \"bicycle\",\n      \"binoculars\",\n      \"birthday-cake\",\n      \"bitbucket\",\n      \"bitbucket-square\",\n      \"bitcoin\",\n      \"black-tie\",\n      \"blind\",\n      \"bluetooth\",\n      \"bluetooth-b\",\n      \"bold\",\n      \"bolt\",\n      \"bomb\",\n      \"book\",\n      \"bookmark\",\n      \"bookmark-o\",\n      \"braille\",\n      \"briefcase\",\n      \"btc\",\n      \"bug\",\n      \"building\",\n      \"building-o\",\n      \"bullhorn\",\n      \"bullseye\",\n      \"bus\",\n      \"buysellads\",\n      \"cab\",\n      \"calculator\",\n      \"calendar\",\n      \"calendar-check-o\",\n      \"calendar-minus-o\",\n      \"calendar-o\",\n      \"calendar-plus-o\",\n      \"calendar-times-o\",\n      \"camera\",\n      \"camera-retro\",\n      \"car\",\n      \"caret-down\",\n      \"caret-left\",\n      \"caret-right\",\n      \"caret-square-o-down\",\n      \"caret-square-o-left\",\n      \"caret-square-o-right\",\n      \"caret-square-o-up\",\n      \"caret-up\",\n      \"cart-arrow-down\",\n      \"cart-plus\",\n      \"cc\",\n      \"cc-amex\",\n      \"cc-diners-club\",\n      \"cc-discover\",\n      \"cc-jcb\",\n      \"cc-mastercard\",\n      \"cc-paypal\",\n      \"cc-stripe\",\n      \"cc-visa\",\n      \"certificate\",\n      \"chain\",\n      \"chain-broken\",\n      \"check\",\n      \"check-circle\",\n      \"check-circle-o\",\n      \"check-square\",\n      \"check-square-o\",\n      \"chevron-circle-down\",\n      \"chevron-circle-left\",\n      \"chevron-circle-right\",\n      \"chevron-circle-up\",\n      \"chevron-down\",\n      \"chevron-left\",\n      \"chevron-right\",\n      \"chevron-up\",\n      \"child\",\n      \"chrome\",\n      \"circle\",\n      \"circle-o\",\n      \"circle-o-notch\",\n      \"circle-thin\",\n      \"clipboard\",\n      \"clock-o\",\n      \"clone\",\n      \"close\",\n      \"cloud\",\n      \"cloud-download\",\n      \"cloud-upload\",\n      \"cny\",\n      \"code\",\n      \"code-fork\",\n      \"codepen\",\n      \"codiepie\",\n      \"coffee\",\n      \"cog\",\n      \"cogs\",\n      \"columns\",\n      \"comment\",\n      \"comment-o\",\n      \"commenting\",\n      \"commenting-o\",\n      \"comments\",\n      \"comments-o\",\n      \"compass\",\n      \"compress\",\n      \"connectdevelop\",\n      \"contao\",\n      \"copy\",\n      \"copyright\",\n      \"creative-commons\",\n      \"credit-card\",\n      \"credit-card-alt\",\n      \"crop\",\n      \"crosshairs\",\n      \"css3\",\n      \"cube\",\n      \"cubes\",\n      \"cut\",\n      \"cutlery\",\n      \"dashboard\",\n      \"dashcube\",\n      \"database\",\n      \"deaf\",\n      \"deafness\",\n      \"dedent\",\n      \"delicious\",\n      \"desktop\",\n      \"deviantart\",\n      \"diamond\",\n      \"digg\",\n      \"dollar\",\n      \"dot-circle-o\",\n      \"download\",\n      \"dribbble\",\n      \"drivers-license\",\n      \"drivers-license-o\",\n      \"dropbox\",\n      \"drupal\",\n      \"edge\",\n      \"edit\",\n      \"eercast\",\n      \"eject\",\n      \"ellipsis-h\",\n      \"ellipsis-v\",\n      \"empire\",\n      \"envelope\",\n      \"envelope-o\",\n      \"envelope-open\",\n      \"envelope-open-o\",\n      \"envelope-square\",\n      \"envira\",\n      \"eraser\",\n      \"etsy\",\n      \"eur\",\n      \"euro\",\n      \"exchange\",\n      \"exclamation\",\n      \"exclamation-circle\",\n      \"exclamation-triangle\",\n      \"expand\",\n      \"expeditedssl\",\n      \"external-link\",\n      \"external-link-square\",\n      \"eye\",\n      \"eye-slash\",\n      \"eyedropper\",\n      \"fa\",\n      \"facebook\",\n      \"facebook-f\",\n      \"facebook-official\",\n      \"facebook-square\",\n      \"fast-backward\",\n      \"fast-forward\",\n      \"fax\",\n      \"feed\",\n      \"female\",\n      \"fighter-jet\",\n      \"file\",\n      \"file-archive-o\",\n      \"file-audio-o\",\n      \"file-code-o\",\n      \"file-excel-o\",\n      \"file-image-o\",\n      \"file-movie-o\",\n      \"file-o\",\n      \"file-pdf-o\",\n      \"file-photo-o\",\n      \"file-picture-o\",\n      \"file-powerpoint-o\",\n      \"file-sound-o\",\n      \"file-text\",\n      \"file-text-o\",\n      \"file-video-o\",\n      \"file-word-o\",\n      \"file-zip-o\",\n      \"files-o\",\n      \"film\",\n      \"filter\",\n      \"fire\",\n      \"fire-extinguisher\",\n      \"firefox\",\n      \"first-order\",\n      \"flag\",\n      \"flag-checkered\",\n      \"flag-o\",\n      \"flash\",\n      \"flask\",\n      \"flickr\",\n      \"floppy-o\",\n      \"folder\",\n      \"folder-o\",\n      \"folder-open\",\n      \"folder-open-o\",\n      \"font\",\n      \"font-awesome\",\n      \"fonticons\",\n      \"fort-awesome\",\n      \"forumbee\",\n      \"forward\",\n      \"foursquare\",\n      \"free-code-camp\",\n      \"frown-o\",\n      \"futbol-o\",\n      \"gamepad\",\n      \"gavel\",\n      \"gbp\",\n      \"ge\",\n      \"gear\",\n      \"gears\",\n      \"genderless\",\n      \"get-pocket\",\n      \"gg\",\n      \"gg-circle\",\n      \"gift\",\n      \"git\",\n      \"git-square\",\n      \"github\",\n      \"github-alt\",\n      \"github-square\",\n      \"gitlab\",\n      \"gittip\",\n      \"glass\",\n      \"glide\",\n      \"glide-g\",\n      \"globe\",\n      \"google\",\n      \"google-plus\",\n      \"google-plus-circle\",\n      \"google-plus-official\",\n      \"google-plus-square\",\n      \"google-wallet\",\n      \"graduation-cap\",\n      \"gratipay\",\n      \"grav\",\n      \"group\",\n      \"h-square\",\n      \"hacker-news\",\n      \"hand-grab-o\",\n      \"hand-lizard-o\",\n      \"hand-o-down\",\n      \"hand-o-left\",\n      \"hand-o-right\",\n      \"hand-o-up\",\n      \"hand-paper-o\",\n      \"hand-peace-o\",\n      \"hand-pointer-o\",\n      \"hand-rock-o\",\n      \"hand-scissors-o\",\n      \"hand-spock-o\",\n      \"hand-stop-o\",\n      \"handshake-o\",\n      \"hard-of-hearing\",\n      \"hashtag\",\n      \"hdd-o\",\n      \"header\",\n      \"headphones\",\n      \"heart\",\n      \"heart-o\",\n      \"heartbeat\",\n      \"history\",\n      \"home\",\n      \"hospital-o\",\n      \"hotel\",\n      \"hourglass\",\n      \"hourglass-1\",\n      \"hourglass-2\",\n      \"hourglass-3\",\n      \"hourglass-end\",\n      \"hourglass-half\",\n      \"hourglass-o\",\n      \"hourglass-start\",\n      \"houzz\",\n      \"html5\",\n      \"i-cursor\",\n      \"id-badge\",\n      \"id-card\",\n      \"id-card-o\",\n      \"ils\",\n      \"image\",\n      \"imdb\",\n      \"inbox\",\n      \"indent\",\n      \"industry\",\n      \"info\",\n      \"info-circle\",\n      \"inr\",\n      \"instagram\",\n      \"institution\",\n      \"internet-explorer\",\n      \"intersex\",\n      \"ioxhost\",\n      \"italic\",\n      \"joomla\",\n      \"jpy\",\n      \"jsfiddle\",\n      \"key\",\n      \"keyboard-o\",\n      \"krw\",\n      \"language\",\n      \"laptop\",\n      \"lastfm\",\n      \"lastfm-square\",\n      \"leaf\",\n      \"leanpub\",\n      \"legal\",\n      \"lemon-o\",\n      \"level-down\",\n      \"level-up\",\n      \"life-bouy\",\n      \"life-buoy\",\n      \"life-ring\",\n      \"life-saver\",\n      \"lightbulb-o\",\n      \"line-chart\",\n      \"link\",\n      \"linkedin\",\n      \"linkedin-square\",\n      \"linode\",\n      \"linux\",\n      \"list\",\n      \"list-alt\",\n      \"list-ol\",\n      \"list-ul\",\n      \"location-arrow\",\n      \"lock\",\n      \"long-arrow-down\",\n      \"long-arrow-left\",\n      \"long-arrow-right\",\n      \"long-arrow-up\",\n      \"low-vision\",\n      \"magic\",\n      \"magnet\",\n      \"mail-forward\",\n      \"mail-reply\",\n      \"mail-reply-all\",\n      \"male\",\n      \"map\",\n      \"map-marker\",\n      \"map-o\",\n      \"map-pin\",\n      \"map-signs\",\n      \"mars\",\n      \"mars-double\",\n      \"mars-stroke\",\n      \"mars-stroke-h\",\n      \"mars-stroke-v\",\n      \"maxcdn\",\n      \"meanpath\",\n      \"medium\",\n      \"medkit\",\n      \"meetup\",\n      \"meh-o\",\n      \"mercury\",\n      \"microchip\",\n      \"microphone\",\n      \"microphone-slash\",\n      \"minus\",\n      \"minus-circle\",\n      \"minus-square\",\n      \"minus-square-o\",\n      \"mixcloud\",\n      \"mobile\",\n      \"mobile-phone\",\n      \"modx\",\n      \"money\",\n      \"moon-o\",\n      \"mortar-board\",\n      \"motorcycle\",\n      \"mouse-pointer\",\n      \"music\",\n      \"navicon\",\n      \"neuter\",\n      \"newspaper-o\",\n      \"object-group\",\n      \"object-ungroup\",\n      \"odnoklassniki\",\n      \"odnoklassniki-square\",\n      \"opencart\",\n      \"openid\",\n      \"opera\",\n      \"optin-monster\",\n      \"outdent\",\n      \"pagelines\",\n      \"paint-brush\",\n      \"paper-plane\",\n      \"paper-plane-o\",\n      \"paperclip\",\n      \"paragraph\",\n      \"paste\",\n      \"pause\",\n      \"pause-circle\",\n      \"pause-circle-o\",\n      \"paw\",\n      \"paypal\",\n      \"pencil\",\n      \"pencil-square\",\n      \"pencil-square-o\",\n      \"percent\",\n      \"phone\",\n      \"phone-square\",\n      \"photo\",\n      \"picture-o\",\n      \"pie-chart\",\n      \"pied-piper\",\n      \"pied-piper-alt\",\n      \"pied-piper-pp\",\n      \"pinterest\",\n      \"pinterest-p\",\n      \"pinterest-square\",\n      \"plane\",\n      \"play\",\n      \"play-circle\",\n      \"play-circle-o\",\n      \"plug\",\n      \"plus\",\n      \"plus-circle\",\n      \"plus-square\",\n      \"plus-square-o\",\n      \"podcast\",\n      \"power-off\",\n      \"print\",\n      \"product-hunt\",\n      \"puzzle-piece\",\n      \"qq\",\n      \"qrcode\",\n      \"question\",\n      \"question-circle\",\n      \"question-circle-o\",\n      \"quora\",\n      \"quote-left\",\n      \"quote-right\",\n      \"ra\",\n      \"random\",\n      \"ravelry\",\n      \"rebel\",\n      \"recycle\",\n      \"reddit\",\n      \"reddit-alien\",\n      \"reddit-square\",\n      \"refresh\",\n      \"registered\",\n      \"remove\",\n      \"renren\",\n      \"reorder\",\n      \"repeat\",\n      \"reply\",\n      \"reply-all\",\n      \"resistance\",\n      \"retweet\",\n      \"rmb\",\n      \"road\",\n      \"rocket\",\n      \"rotate-left\",\n      \"rotate-right\",\n      \"rouble\",\n      \"rss\",\n      \"rss-square\",\n      \"rub\",\n      \"ruble\",\n      \"rupee\",\n      \"s15\",\n      \"safari\",\n      \"save\",\n      \"scissors\",\n      \"scribd\",\n      \"search\",\n      \"search-minus\",\n      \"search-plus\",\n      \"sellsy\",\n      \"send\",\n      \"send-o\",\n      \"server\",\n      \"share\",\n      \"share-alt\",\n      \"share-alt-square\",\n      \"share-square\",\n      \"share-square-o\",\n      \"shekel\",\n      \"sheqel\",\n      \"shield\",\n      \"ship\",\n      \"shirtsinbulk\",\n      \"shopping-bag\",\n      \"shopping-basket\",\n      \"shopping-cart\",\n      \"shower\",\n      \"sign-in\",\n      \"sign-language\",\n      \"sign-out\",\n      \"signal\",\n      \"signing\",\n      \"simplybuilt\",\n      \"sitemap\",\n      \"skyatlas\",\n      \"skype\",\n      \"slack\",\n      \"sliders\",\n      \"slideshare\",\n      \"smile-o\",\n      \"snapchat\",\n      \"snapchat-ghost\",\n      \"snapchat-square\",\n      \"snowflake-o\",\n      \"soccer-ball-o\",\n      \"sort\",\n      \"sort-alpha-asc\",\n      \"sort-alpha-desc\",\n      \"sort-amount-asc\",\n      \"sort-amount-desc\",\n      \"sort-asc\",\n      \"sort-desc\",\n      \"sort-down\",\n      \"sort-numeric-asc\",\n      \"sort-numeric-desc\",\n      \"sort-up\",\n      \"soundcloud\",\n      \"space-shuttle\",\n      \"spinner\",\n      \"spoon\",\n      \"spotify\",\n      \"square\",\n      \"square-o\",\n      \"stack-exchange\",\n      \"stack-overflow\",\n      \"star\",\n      \"star-half\",\n      \"star-half-empty\",\n      \"star-half-full\",\n      \"star-half-o\",\n      \"star-o\",\n      \"steam\",\n      \"steam-square\",\n      \"step-backward\",\n      \"step-forward\",\n      \"stethoscope\",\n      \"sticky-note\",\n      \"sticky-note-o\",\n      \"stop\",\n      \"stop-circle\",\n      \"stop-circle-o\",\n      \"street-view\",\n      \"strikethrough\",\n      \"stumbleupon\",\n      \"stumbleupon-circle\",\n      \"subscript\",\n      \"subway\",\n      \"suitcase\",\n      \"sun-o\",\n      \"superpowers\",\n      \"superscript\",\n      \"support\",\n      \"table\",\n      \"tablet\",\n      \"tachometer\",\n      \"tag\",\n      \"tags\",\n      \"tasks\",\n      \"taxi\",\n      \"telegram\",\n      \"television\",\n      \"tencent-weibo\",\n      \"terminal\",\n      \"text-height\",\n      \"text-width\",\n      \"th\",\n      \"th-large\",\n      \"th-list\",\n      \"themeisle\",\n      \"thermometer\",\n      \"thermometer-0\",\n      \"thermometer-1\",\n      \"thermometer-2\",\n      \"thermometer-3\",\n      \"thermometer-4\",\n      \"thermometer-empty\",\n      \"thermometer-full\",\n      \"thermometer-half\",\n      \"thermometer-quarter\",\n      \"thermometer-three-quarters\",\n      \"thumb-tack\",\n      \"thumbs-down\",\n      \"thumbs-o-down\",\n      \"thumbs-o-up\",\n      \"thumbs-up\",\n      \"ticket\",\n      \"times\",\n      \"times-circle\",\n      \"times-circle-o\",\n      \"times-rectangle\",\n      \"times-rectangle-o\",\n      \"tint\",\n      \"toggle-down\",\n      \"toggle-left\",\n      \"toggle-off\",\n      \"toggle-on\",\n      \"toggle-right\",\n      \"toggle-up\",\n      \"trademark\",\n      \"train\",\n      \"transgender\",\n      \"transgender-alt\",\n      \"trash\",\n      \"trash-o\",\n      \"tree\",\n      \"trello\",\n      \"tripadvisor\",\n      \"trophy\",\n      \"truck\",\n      \"try\",\n      \"tty\",\n      \"tumblr\",\n      \"tumblr-square\",\n      \"turkish-lira\",\n      \"tv\",\n      \"twitch\",\n      \"twitter\",\n      \"twitter-square\",\n      \"umbrella\",\n      \"underline\",\n      \"undo\",\n      \"universal-access\",\n      \"university\",\n      \"unlink\",\n      \"unlock\",\n      \"unlock-alt\",\n      \"unsorted\",\n      \"upload\",\n      \"usb\",\n      \"usd\",\n      \"user\",\n      \"user-circle\",\n      \"user-circle-o\",\n      \"user-md\",\n      \"user-o\",\n      \"user-plus\",\n      \"user-secret\",\n      \"user-times\",\n      \"users\",\n      \"vcard\",\n      \"vcard-o\",\n      \"venus\",\n      \"venus-double\",\n      \"venus-mars\",\n      \"viacoin\",\n      \"viadeo\",\n      \"viadeo-square\",\n      \"video-camera\",\n      \"vimeo\",\n      \"vimeo-square\",\n      \"vine\",\n      \"vk\",\n      \"volume-control-phone\",\n      \"volume-down\",\n      \"volume-off\",\n      \"volume-up\",\n      \"warning\",\n      \"wechat\",\n      \"weibo\",\n      \"weixin\",\n      \"whatsapp\",\n      \"wheelchair\",\n      \"wheelchair-alt\",\n      \"wifi\",\n      \"wikipedia-w\",\n      \"window-close\",\n      \"window-close-o\",\n      \"window-maximize\",\n      \"window-minimize\",\n      \"window-restore\",\n      \"windows\",\n      \"won\",\n      \"wordpress\",\n      \"wpbeginner\",\n      \"wpexplorer\",\n      \"wpforms\",\n      \"wrench\",\n      \"xing\",\n      \"xing-square\",\n      \"y-combinator\",\n      \"y-combinator-square\",\n      \"yahoo\",\n      \"yc\",\n      \"yc-square\",\n      \"yelp\",\n      \"yen\",\n      \"yoast\",\n      \"youtube\",\n      \"youtube-play\",\n      \"youtube-square\",\n   ],\n};\n","import ABFactoryCore from \"./core/ABFactoryCore\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport performance from \"../utils/performance\";\nimport FilterComplex from \"./platform/FilterComplex\";\n\n//\n// Our Common Resources\n//\nimport Config from \"../config/Config.js\";\n// Config : responsible for all the configuration/settings of our instance.\n\nimport Account from \"../resources/Account.js\";\n// Account : manages the current Logged in User and Account information.\n\nimport ClassUI from \"../ui/ClassUI.js\";\n\nimport Dialog from \"./_factory_utils/Dialog.js\";\n// Dialog : common UI dialogs.\n\nimport Multilingual from \"../resources/Multilingual.js\";\n// Multilingual: our interface Labels and language options\n\nimport Network from \"../resources/Network.js\";\n// Network: our interface for communicating to our server\n\nimport Storage from \"../resources/Storage.js\";\n// Storage: manages our interface for local storage\n\nimport ABViewManager from \"./core/ABViewManagerCore\";\n\nimport Tenant from \"../resources/Tenant.js\";\n// Tenant: manages the Tenant information of the current instance\n\nimport UISettings from \"./uiSettings/config.js\";\n// UISettings: detailed settings for our common UI elements\n\nclass ABValidator {\n   constructor(AB) {\n      this.AB = AB;\n      this.errors = [];\n   }\n\n   addError(name, message) {\n      this.errors.push({ name: name, message: message });\n   }\n\n   pass() {\n      return this.errors.length == 0;\n   }\n\n   fail() {\n      return this.errors.length > 0;\n   }\n\n   toValidationObject() {\n      var obj = {\n         error: \"E_VALIDATION\",\n         invalidAttributes: {},\n      };\n\n      var attr = obj.invalidAttributes;\n\n      this.errors.forEach((e) => {\n         attr[e.name] = attr[e.name] || [];\n         attr[e.name].push(e);\n      });\n\n      return obj;\n   }\n\n   updateForm(form) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isFormValidationError(vObj, form);\n   }\n\n   updateGrid(rowID, grid) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isGridValidationError(vObj, rowID, grid);\n   }\n}\n\n//\n// AppBuilder Objects\n//\n\nclass ABFactory extends ABFactoryCore {\n   constructor(definitions) {\n      super(definitions);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // Resources\n      //\n      this.Account = Account;\n      this.Dialog = Dialog;\n      this.Multilingual = Multilingual;\n      this.Network = Network;\n      this.Storage = Storage;\n      this.Tenant = Tenant;\n      this.Webix = webix;\n\n      // Plugin Classes\n      this.ClassUI = ClassUI;\n\n      // additional Class definitions\n      this.Class.FilterComplex = FilterComplex;\n      this.Class.ABViewManager = ABViewManager;\n\n      // Temp placeholders until Resources are implemented:\n      this.Analytics = {\n         log: () => {},\n         logError: () => {},\n      };\n      this.Lock = class Lock {\n         constructor() {}\n\n         acquire() {\n            return Promise.resolve();\n         }\n         release() {\n            return Promise.resolve();\n         }\n      };\n\n      this.UISettings = UISettings;\n\n      this.Validation = {\n         validator: () => {\n            return new ABValidator(this);\n         },\n\n         errorSailsCleanup: function (error) {\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               // dig down to sails provided error object:\n               if (\n                  error.error &&\n                  error.error == \"E_UNKNOWN\" &&\n                  error.raw &&\n                  error.raw.length > 0\n               ) {\n                  error = error.raw[0];\n               }\n\n               // drill down to the embedded .err object if it exists\n               if (error.err) {\n                  error = error.err;\n               }\n\n               // if this is from our server response:\n               if (\n                  error.data &&\n                  error.data.error &&\n                  error.data.error == \"E_VALIDATION\"\n               ) {\n                  error = error.data;\n               }\n            }\n\n            return error;\n         },\n\n         /**\n          * @function AB.Validation.isFormValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of the form elements.\n          *\n          * @codestart\n          * var form = $$('formID');\n          * var values = form.getValues();\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Form.isFormValidationError(err, form)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {obj} error\n          *        the error response object\n          * @param {obj} form\n          *        the webix form instance (or reference)\n          * @return {bool}\n          *         true if error was about a form element.\n          *         false otherwise.\n          */\n         isFormValidationError: function (error, form) {\n            var hasFocused = false;\n            // {bool} have we set focus to form component?\n\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasForm = false;\n                     for (var attr in attrs) {\n                        // if this is a field in the form:\n                        if (form.elements[attr]) {\n                           var errors = attrs[attr];\n                           var msg = [];\n                           errors.forEach(function (err) {\n                              msg.push(err.message);\n                           });\n\n                           // set the invalid error message\n                           form.markInvalid(attr, msg.join(\", \"));\n\n                           // set focus to the 1st form element we mark:\n                           if (!hasFocused) {\n                              form.elements[attr].focus();\n                              hasFocused = true;\n                           }\n\n                           wasForm = true;\n                        }\n                     }\n\n                     if (wasForm) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our form with an error\n            // this was not a validation error so return false\n            return false;\n         },\n\n         /**\n          * @method AB.Validation.isGridValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of our grid columns.\n          *\n          * @codestart\n          * var grid = $$('myGrid');\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Validation.isGridValidationError(err, editor, grid)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {Error} error\n          *        the error response object\n          * @param {integer} row\n          *        the row id of the Grid to update.\n          * @param {webix.datatable} Grid\n          *        the webix grid instance (or reference)\n          * @return {bool}\n          *         true if error was about a grid column.\n          *         false otherwise.\n          */\n         isGridValidationError: function (error, row, Grid) {\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasGrid = false;\n                     for (var attr in attrs) {\n                        Grid.addCellCss(row, attr, \"webix_invalid\");\n                        Grid.addCellCss(row, attr, \"webix_invalid_cell\");\n\n                        var msg = [];\n                        attrs[attr].forEach((e) => {\n                           msg.push(e.message);\n                        });\n\n                        webix.alert({\n                           text: attr + \": \" + msg.join(\", \"),\n                        });\n\n                        wasGrid = true;\n                     }\n\n                     Grid.refresh(row);\n                     Grid.clearSelection();\n\n                     if (wasGrid) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our Grid with an error\n            // this was not a validation error so return false\n            return false;\n         },\n      };\n\n      // TODO: make sure \"error\" s are handled and sent to logs\n      // this.on(\"error\", ()=>{ Analytics.error })\n\n      this.Definitions = {};\n      // {obj} the provided interface for working with the ABDefinition table.\n      // NOTE: on the web client, we simply perform web API calls to perform\n      // the actions.  These are defined below.\n\n      this.on(\"error\", (err) => {\n         // this simply prevents thrown errors if there are no listeners.\n         console.error(err);\n      });\n\n      this._plugins = [];\n      // {array} of loaded Plugin.applications.\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our definitionsXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this.Network.on(\"definition.create\", (context, err, fullDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: fullDef.id,\n            data: fullDef,\n         };\n         this.emit(\"ab.abdefinition.create\", pkt);\n\n         let newDef = this.definitionNew(fullDef);\n         pending?.resolve(newDef);\n      });\n\n      this.Network.on(\"definition.update\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            if (err.toString().indexOf(\"Not Found\") > -1) {\n               return this.definitionCreate(context.values)\n                  .then(pending?.resolve)\n                  .catch(pending?.reject);\n            }\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         this._definitions[context.id] = serverDef;\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: serverDef.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.update\", pkt);\n\n         pending?.resolve(serverDef);\n      });\n\n      this.Network.on(\"definition.delete\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         delete this._definitions[context.id];\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: context.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.delete\", pkt);\n\n         pending?.resolve();\n      });\n\n      //\n      // Rules\n      //\n      const platformRules = {\n         /**\n          * @method toDate\n          *\n          * @param {string} dateText\n          * @param {Object} options - {\n          *                               format: \"string\",\n          *                               ignoreTime: boolean\n          *                            }\n          * @return {Date}\n          */\n         toDate: (dateText = \"\", options = {}) => {\n            if (!dateText) return;\n\n            if (options.ignoreTime) dateText = dateText.replace(/T.*/, \"\");\n\n            let result = options.format\n               ? moment(dateText, options.format)\n               : moment(dateText);\n\n            let supportFormats = [\n               \"YYYY-MM-DD\",\n               \"YYYY/MM/DD\",\n               \"DD/MM/YYYY\",\n               \"MM/DD/YYYY\",\n               \"DD-MM-YYYY\",\n               \"MM-DD-YYYY\",\n            ];\n\n            supportFormats.forEach((format) => {\n               if (!result || !result.isValid())\n                  result = moment(dateText, format);\n            });\n\n            return new Date(result);\n         },\n\n         /**\n          * @method toDateFormat\n          *\n          * @param {Date} date\n          * @param {Object} options - {\n          *           format: \"string\",\n          *           localeCode: \"string\"\n          *         }\n          *\n          * @return {string}\n          */\n         toDateFormat: (date, options) => {\n            if (!date) return \"\";\n\n            let momentObj = moment(date);\n\n            if (options.localeCode) momentObj.locale(options.localeCode);\n\n            return momentObj.format(options.format);\n         },\n\n         /**\n          * @method subtractDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         subtractDate: (date, number, unit) => {\n            return moment(date).subtract(number, unit).toDate();\n         },\n\n         /**\n          * @method addDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         addDate: (date, number, unit) => {\n            return moment(date).add(number, unit).toDate();\n         },\n      };\n      (Object.keys(platformRules) || []).forEach((k) => {\n         this.rules[k] = platformRules[k];\n      });\n   }\n\n   /**\n    * init()\n    * prepare the ABFactory for operation. This includes parsing the\n    * definitions into useable objects, preparing the System Resources, etc.\n    * @return {Promise}\n    */\n   async init() {\n      //\n      // Prepare our Resources First\n      //\n      var allInits = [];\n\n      allInits.push(this.Account.init(this));\n      allInits.push(this.Multilingual.init(this));\n      allInits.push(this.Network.init(this));\n      allInits.push(this.Tenant.init(this));\n\n      await Promise.all(allInits);\n      await this.Storage.init(this);\n      var data = await this.Storage.get(\"local_settings\");\n      this._localSettings = data || {};\n\n      //\n      // Real Time Update Handlers\n      //\n\n      // new ABDefinition created:\n      this.on(\"ab.abdefinition.create\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"created\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition updated:\n      this.on(\"ab.abdefinition.update\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"updated\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition delete:\n      this.on(\"ab.abdefinition.delete\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         delete this._definitions[pkt.id];\n         this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      });\n\n      return super.init();\n\n      // return Promise.all(allInits)\n      //    .then(() => {\n      //       // some Resources depend on the above to be .init() before they can\n      //       // .init() themselves.\n      //       return this.Storage.init(this).then(() => {\n      //          return this.Storage.get(\"local_settings\").then((data) => {\n      //             this._localSettings = data || {};\n      //          });\n      //       });\n      //    })\n      //    .then(() => {\n      //       //\n      //       // RealTime Updates of our ABDefinitions\n      //       //\n\n      //       // new ABDefinition created:\n      //       this.on(\"ab.abdefinition.create\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"created\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition updated:\n      //       this.on(\"ab.abdefinition.update\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"updated\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition delete:\n      //       this.on(\"ab.abdefinition.delete\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          delete this._definitions[pkt.id];\n      //          this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      //       });\n\n      //       return super.init();\n      //    });\n   }\n\n   /**\n    * definiitonCreate(def)\n    * create a new ABDefinition\n    * @param {obj} def\n    *        the value hash of the new definition entry\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionCreate(def) {\n      // we will set our uuid\n      if (typeof def.id == \"undefined\") {\n         def.id = this.uuid();\n         def.json.id = def.id;\n      }\n\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.create\",\n            context: {\n               uuid,\n            },\n         };\n         this.Network.post(\n            {\n               url: `/definition/create`,\n               data: def,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to CREATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to CREATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionCreate()\",\n               message,\n               def,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionDestroy(id)\n    * delete an ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @return {Promise}\n    */\n   async definitionDestroy(id) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.delete\",\n            context: {\n               id,\n               uuid,\n            },\n         };\n         this.Network.delete(\n            {\n               url: `/definition/${id}`,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to DESTROY definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to DELETE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionDestroy()\",\n               message,\n               id,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionUpdate(id, def)\n    * update an existing ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to update.\n    * @param {obj} values\n    *        the value hash of the new definition values\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionUpdate(id, values) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.update\",\n            context: {\n               id,\n               uuid,\n               values,\n            },\n         };\n         this.Network.put(\n            {\n               url: `/definition/${id}`,\n               data: values,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to UPDATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to UPDATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionUpdate()\",\n               message,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   // definitionsParse(defs = []) {\n   //    if (!Array.isArray(defs)) {\n   //       defs = [defs];\n   //    }\n\n   //    // store/replace the incoming definitions\n   //    // 1st: insert ALL our definitions internally\n   //    defs.forEach((d) => {\n   //       this._definitions[d.id] = d;\n   //    });\n   //    // 2nd: Now we can then go through and signal the \"updates\"\n   //    // and the related objects can find their dependent definitions.\n   //    defs.forEach((d) => {\n   //       this.definitionSync(\"updated\", d.id, d);\n   //    });\n\n   //    return Promise.resolve();\n   // }\n\n   /**\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain which group of people we are sending a notification to.\n    * @param {Error} error An error object generated at the point of issue.\n    * @param {json} info Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      performance.notify(domain, error, info);\n   }\n\n   plugins() {\n      return this._plugins;\n   }\n   pluginLoad(p) {\n      this._plugins.push(p);\n   }\n\n   //\n   // Utilities\n   //\n   alert(options) {\n      this.Webix.alert(options);\n   }\n\n   cloneDeep(value) {\n      return _.cloneDeep(value);\n   }\n\n   error(message, ...rest) {\n      var emitData = {\n         message: `ABFactory[${this.Tenant.id()}]:${message.toString()}`,\n      };\n\n      console.error(emitData.message);\n      if (message instanceof Error) {\n         emitData.error = message;\n         // this dumps the error.stack\n         console.error(message);\n      }\n\n      if (rest && rest.length > 0) {\n         rest.forEach((r) => {\n            if (r instanceof Error) {\n               emitData.error = r;\n               // this dumps the error.stack\n               console.error(r);\n            }\n\n            if (typeof r == \"object\") {\n               for (var k in r) {\n                  emitData[k] = r[k];\n                  console.error(k, r[k]);\n               }\n            }\n         });\n      }\n      this.emit(\"error\", emitData);\n   }\n\n   jobID() {\n      return nanoid();\n   }\n\n   Label() {\n      return (...params) => {\n         return this.Multilingual.label(...params);\n      };\n   }\n\n   localSettings(key, value) {\n      if (typeof value == \"undefined\") {\n         // this is a getter:\n         return this._localSettings[key];\n      } else {\n         // setting a value:\n         this._localSettings[key] = value;\n         return this.Storage.set(`local_settings`, this._localSettings);\n      }\n   }\n\n   log(message, ...rest) {\n      console.log(message);\n      rest.forEach((r) => {\n         console.log(r);\n      });\n   }\n\n   /**\n    * @method rules.isUUID\n    * evaluate a given value to see if it matches the format of a uuid\n    * @param {string} key\n    * @return {boolean}\n    */\n   isUUID(key) {\n      var checker = RegExp(\n         \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n         \"i\"\n      );\n      return checker.test(key);\n   }\n\n   merge(...params) {\n      return _.merge(...params);\n   }\n\n   orderBy(...params) {\n      return _.orderBy(...params);\n   }\n\n   uniq(...params) {\n      return _.uniq(...params);\n   }\n\n   kebabCase(...params) {\n      return _.kebabCase(...params);\n   }\n\n   sumBy(...params) {\n      return _.sumBy(...params);\n   }\n\n   meanBy(...params) {\n      return _.meanBy(...params);\n   }\n\n   maxBy(...params) {\n      return _.maxBy(...params);\n   }\n\n   minBy(...params) {\n      return _.minBy(...params);\n   }\n\n   uuid() {\n      return uuidv4();\n   }\n\n   warn(message, ...rest) {\n      console.warn(message);\n      rest.forEach((r) => {\n         console.warn(r);\n      });\n   }\n\n   isString(...params) {\n      return _.isString(params);\n   }\n}\n\nexport default ABFactory;\n","/**\n * ABApplicationCore\n *\n * This is the core ABApplication class that manages the common operations\n * of an ABApplication across platforms.\n *\n * It's primary responsibility is to decode a given set of attributes into\n * a working instance of an ABApplication that can return instances of\n * it's defined sub objects.\n *\n * Platform Specific versions of those objects should be defined in a peer\n * directory named platform. These versions of the objects should override\n * these Core objects with platform specific methods of operation (like\n * .save()).\n *\n * Initially your target application should load your platform/ABApplication.js\n * file, which will include this file and sub class it.\n *\n * However, this file will include the remaining files from your platform/*\n * versions.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManager = require(\"../platform/ABViewManager\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nfunction toBool(val) {\n   if (typeof val == \"undefined\") {\n      return false;\n   }\n\n   if (val === \"\" || val === \"false\" || val === \"0\") {\n      return false;\n   }\n\n   if (val === \"true\" || val === \"1\") {\n      return true;\n   }\n\n   return val;\n}\n\nmodule.exports = class ABApplicationCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\", \"description\"], AB);\n\n      // attributes should be in format:\n      // {\n      //    id:##,\n      //    json:{},\n      //    name:\"XYZ\"\n      // }\n      attributes.json = attributes.json || {};\n\n      // ABApplication Attributes\n      this.id = attributes.id;\n      // {string} uuid\n\n      this.type = attributes.type || \"application\";\n      // {string} .type\n      // the ABDefinition.type of this object.\n\n      this.appType = attributes.appType || \"web\";\n      // {string} .appType\n      // the kind of Application this is. [\"web\", \"mobile\"]\n\n      this.json = attributes.json;\n      if (typeof this.json == \"string\") this.json = JSON.parse(this.json);\n      // {obj} .json\n      // the full settings of this ABApplication\n\n      this.json[\"versionData\"] = attributes.json?.versionData || {\n         versionNumber: \"1.0.0\",\n         changeLog: {\n            \"1.0.0\": {\n               author: \"N/A\",\n               version: \"1.0.0\",\n               keepVersion: 0,\n               commitMessage: \"Initial Version\",\n               timestamp: new Date().toISOString(),\n            },\n         },\n      };\n\n      if (typeof this.json.versionData == \"string\")\n         this.json.versionData = JSON.parse(this.json.versionData);\n      // {obj} .json\n      // the full version log data of this ABApplication\n\n      this.name = attributes.name || this.json.name || \"\";\n      // {string} .name\n      // the hard coded name of this ABDefinition Object, not to be confused\n      // with the .label.  The .name is created at design time and is a text\n      // reference for this object.\n\n      this.icon = attributes.icon || \"fa-rocket\";\n      // {string} .icon\n      // this is a reference to a font awesome icon including the `fa-`\n      // example `fa-child` should be stored for the `child` icon to be used\n      // if user wants to get creative they can add more to this field following\n      // these examples https://fontawesome.com/v4/examples/\n\n      this.isSystemObject = toBool(attributes.isSystemObject);\n      // {bool} .isSystemObject\n      // is this one of the integrated System Objects used by our framework?\n      // Some ABApplications and ABObjects are central to the running of the\n      // AppBuilder site.  They are marked with .isSystemObject = true;  It\n      // requires the role \"System Designer\" in order to edit/modify them.\n\n      this.roleAccess = attributes.roleAccess || [];\n      if (!Array.isArray(this.roleAccess)) {\n         this.roleAccess = [this.roleAccess];\n      }\n      this.roleAccess = this.roleAccess.filter((r) => r);\n      // {array}\n      // the {ABSiteRole.id}s of the roles allowed to work with this\n      // ABApplication. (see .isAccessManaged for more info)\n\n      this.isAccessManaged = JSON.parse(attributes.isAccessManaged || false);\n      // {bool} .isAccessManaged\n      // does this Application imploy the more sophisticated  Access\n      // permissions, or the simpler Role access permissions.\n      // {true} : allows an administrator to set which role can View|Edit|Delete\n      //          elements of an application.\n      // {false}: indicates users having one of the .roleAccess values can have\n      //          full access to this application\n\n      this.accessManagers = attributes.accessManagers;\n      if (typeof this.accessManagers == \"string\")\n         this.accessManagers = JSON.parse(this.accessManagers);\n      // {??} .accessManagers\n      // if .isAccessManaged == true, then .accessManagers contain the definitions\n      // of the detailed access permissions.\n\n      this.isTranslationManaged = JSON.parse(\n         attributes.isTranslationManaged || false\n      );\n      this.translationManagers = attributes.translationManagers;\n      if (typeof this.translationManagers == \"string\")\n         this.translationManagers = JSON.parse(this.translationManagers);\n\n      this.isTutorialManaged = JSON.parse(\n         attributes.isTutorialManaged || false\n      );\n      this.tutorialManagers = attributes.tutorialManagers;\n      if (typeof this.tutorialManagers == \"string\")\n         this.tutorialManagers = JSON.parse(this.tutorialManagers);\n\n      this.hintIDs = attributes.json.hintIDs || [];\n      // {array} .hintIDs\n      // All the {ABHint.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABHint}s are included or excluded from\n      // this app.\n\n      this.objectIDs = attributes.json.objectIDs || [];\n      // {array} .objectIDs\n      // All the {ABObject.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObject}s are included or excluded from this app.\n\n      this.queryIDs = attributes.json.queryIDs || [];\n      // {array} .queryIDs\n      // All the {ABObjectQuery.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObjectQueries}s are included or excluded from\n      // this app.\n\n      this.datacollectionIDs = attributes.json.datacollectionIDs || [];\n      // {array} .datacollectionIDs\n      // All the {ABDataCollection.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABDataCollection}s are included or excluded from\n      // this app.\n\n      // import all our {ABViewPage}s\n      let newPages = [];\n      (attributes.json.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            newPages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.id}] is referenceing an unknown Page[${id}]`,\n               {\n                  appID: this.id,\n                  pageID: id,\n               }\n            );\n            // console.error(\n            //    `App[${this.id}] is referenceing an unknown Page[${id}]`\n            // );\n         }\n      });\n      this._pages = newPages;\n      // {array} ._pages\n      // an array of all the {ABViewPages} this ABApplication offers as\n      // interfaces for working with our Data.\n      // ABViewPages operate within the confines of an ABApplication so\n      // they are created/stored/accessed from within an ABApplication\n\n      (attributes.json.processIDs || []).forEach((pID) => {\n         var p = this.AB.processByID(pID);\n         if (!p) {\n            this.emit(\n               \"warning\",\n               `Application is referencing an unknown process.`,\n               { appID: this.id, processID: pID }\n            );\n         }\n      });\n\n      this.processIDs = attributes.json.processIDs || [];\n      // {array} .processIDs\n      // an array of all the {ABProcess.id}s referenced by this Application.\n\n      // Object List Settings\n      attributes.json.objectListSettings =\n         attributes.json.objectListSettings || {};\n      this.objectListSettings = this.objectListSettings || {};\n      this.objectListSettings.isOpen = JSON.parse(\n         attributes.json.objectListSettings.isOpen || false\n      );\n      this.objectListSettings.searchText =\n         attributes.json.objectListSettings.searchText || \"\";\n      this.objectListSettings.sortDirection =\n         attributes.json.objectListSettings.sortDirection || \"asc\";\n      this.objectListSettings.isGroup = JSON.parse(\n         attributes.json.objectListSettings.isGroup || false\n      );\n\n      // let the MLClass now process the translations:\n      // transition issues:\n      attributes.translations =\n         attributes.translations || attributes.json.translations;\n\n      super.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   get ViewManager() {\n      return ABViewManager;\n   }\n\n   /// ABApplication data methods\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABApplication is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      // if we are on the basic Role assignments:\n      if (!this.isAccessManaged) {\n         (roles || []).forEach((r) => {\n            if (this.roleAccess.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n         return foundRole;\n      }\n\n      // isAccessManaged has been set, so 2 kinds of ppl can\n      // see this App\n      // 1) an AccessManager\n      if (parseInt(this.accessManagers.useRole)) {\n         (roles || []).forEach((r) => {\n            if (this.accessManagers.role.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n      }\n\n      // stop here if found.\n      if (foundRole) return foundRole;\n\n      // 2) someone who has a role that can see one of it's pages.\n      // scan each Page of this Application\n      (this.pages() || []).forEach((p) => {\n         // check to see if that page.isAccessibleForRoles()\n         if (p.isAccessibleForRoles(roles)) {\n            foundRole = true;\n         }\n      });\n      return foundRole;\n   }\n\n   get isWebApp() {\n      return this.appType == \"web\";\n   }\n\n   get isMobile() {\n      return this.appType == \"mobile\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      let versionData = this.json.versionData;\n\n      this.json = super.toObj();\n\n      this.json.name = this.name;\n\n      this.json.versionData = versionData;\n\n      this.json.objectIDs = this.objectIDs;\n\n      this.json.objectListSettings = this.objectListSettings;\n\n      this.json.hintIDs = this.hintIDs;\n\n      this.json.queryIDs = this.queryIDs;\n\n      this.json.datacollectionIDs = this.datacollectionIDs;\n\n      this.json.pageIDs = (this._pages || []).map((p) => p.id);\n\n      this.json.processIDs = this.processIDs || [];\n\n      // // for each MobileApp: compile to json\n      // var currApps = [];\n      // this._mobileApps.forEach((app) => {\n      //    currApps.push(app.toObj())\n      // })\n      // this.json.mobileApps = currApps;\n\n      return {\n         id: this.id,\n         type: this.type || \"application\",\n         appType: this.appType || \"web\",\n         name: this.name,\n         icon: this.icon,\n         isSystemObject: this.isSystemObject,\n         json: this.json,\n         roleAccess: this.roleAccess,\n         translations: this.json.translations,\n         isAccessManaged: this.isAccessManaged,\n         isTranslationManaged: this.isTranslationManaged,\n         isTutorialManaged: this.isTutorialManaged,\n         accessManagers: this.accessManagers,\n         translationManagers: this.translationManagers,\n         tutorialManagers: this.tutorialManagers,\n      };\n   }\n\n   ///\n   /// Mobile Apps\n   ///\n\n   ///\n   /// Datacollections\n   ///\n\n   // datacollectionNew(values) {\n   //    return new ABDataCollectionCore(values, this);\n   // }\n\n   datacollectionsExcluded(filter = () => true) {\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   datacollectionsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Objects\n   ///\n\n   objectsExcluded(filter = () => true) {\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   objectsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Hints\n   ///\n\n   hintsExcluded(filter = () => true) {\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) == -1;\n      }).filter(filter);\n   }\n\n   hintsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   /**\n    * @method connectedObjects()\n    *\n    * return an array of all the connected ABObjects for a given ABObject.\n    *\n    * @param {string} id\n    *        an ID of an ABObject\n    * @return {array}   array of options for webix select\n    *         [ {id, value}, ... ]\n    */\n   connectedObjects(id) {\n      console.error(\n         \"ABApplicationCore.connectedObjects(): who is calling this?\"\n      );\n\n      if (id == \"\") return [];\n\n      // Determine the object from the ID\n      var myObj = this.AB.objectByID(id);\n\n      // Get all the connected Fields for that object\n      var connectedFields = myObj.connectFields();\n      // Store the related fields associatively inside their related Objects ID\n      var connectedObj = {};\n      connectedFields.forEach((f) => {\n         connectedObj[f.settings.linkObject] = this.AB.objectByID(\n            f.settings.linkObject\n         );\n      });\n      // Look up the objects by their ID and push them in an options array\n      var linkedObjects = [];\n      Object.keys(connectedObj).forEach(function (key /*, index */) {\n         linkedObjects.push({\n            id: this[key].id,\n            value: this[key].label,\n         });\n      }, connectedObj /* = this. inside fn */);\n\n      return linkedObjects;\n   }\n\n   /**\n    * @method connectedFields()\n    * return an array of all the connected ABFields for a given ABObject\n    * @param {string} currObjID\n    *        an ID of the current ABObject\n    * @param {string} linkedObjectID\n    *        an ID of the linked ABObject\n    * @return {array}\n    *        array of options for webix select\n    */\n   connectedFields(currObjID, linkedObjectID) {\n      console.error(\"!!! Who is calling this?\");\n\n      // Determine the object from the currObjID\n      var myObj = this.AB.objectByID(currObjID);\n\n      // Get all the connected Fields for our object that match the linkedObjectID\n      var connectedFields = myObj.connectFields(\n         (f) => f.settings.linkObject == linkedObjectID\n      );\n      // Build an arry of options for the webix select\n      var linkedFields = [];\n      connectedFields.forEach((f) => {\n         linkedFields.push({ id: f.columnName, value: f.label });\n      });\n\n      return linkedFields;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    * return an array of all the ABViewPages for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewPages that this fn\n    *        returns true for.\n    * @param {boolean} deep\n    *        flag to search in sub pages\n    * @return {array}\n    *        array of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._pages || this._pages.length < 1) return result;\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         // function searchDeep(curr) {\n         //    let resultsCurr = curr._pages.filter(filter);\n\n         //    for (let p of curr._pages) {\n         //       let resultsP = searchDeep(p);\n         //       if (resultsP.length) {\n         //          resultsCurr = resultsCurr.concat(resultsP);\n         //       }\n         //    }\n         //    // if we get here, end\n         //    return resultsCurr;\n         // }\n\n         // result = searchDeep(this);\n         result = this._searchDeep(this, \"_pages\", filter);\n      }\n      // find root pages\n      else {\n         result = (this._pages || []).filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method _searchDeep()\n    * search each node of a tree and return all matches that pass the provided\n    * filter.\n    * @param {AB*} curr\n    *        An object that contains a tree structure.\n    * @param {string} key\n    *        The curr[key] reference of the array of items to search\n    * @param {function} filter\n    *        The curr[key].filter(filter) that returns true/false if a node is\n    *        to be included in the result.\n    * @return {array}\n    */\n   _searchDeep(curr, key, filter) {\n      let items = curr[key] ?? [];\n      let resultsCurr = items.filter?.(filter) ?? [];\n\n      for (let p of items) {\n         let resultsP = this._searchDeep(p, key, filter);\n         if (resultsP.length) {\n            resultsCurr = resultsCurr.concat(resultsP);\n         }\n      }\n\n      return resultsCurr;\n   }\n\n   ///\n   /// Processes\n   ///\n\n   /**\n    * @method processes()\n    * return an array of all the ABProcesses for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABProcesses that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABProcesses\n    */\n   processes(filter = () => true) {\n      return this.AB.processes((p) => {\n         return this.processIDs.indexOf(p.id) > -1;\n      }).filter(filter);\n   }\n\n   hasProcess(process) {\n      if (process && process.id) {\n         return this.processIDs.indexOf(process.id) > -1;\n      } else {\n         return false;\n      }\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    * return an array of all the Views for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of Views that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of Views\n    */\n   views(filter) {\n      var result = [];\n      var views = [];\n      var pages = [];\n\n      if (\n         (!this._pages || this._pages.length < 1) &&\n         (!this._views || this._views.length < 1)\n      )\n         return result;\n\n      function lookDeep(view) {\n         if (view._pages && view._pages.length) {\n            view._pages.forEach((p) => {\n               // check the page views recusively\n               var pageViews = p.views(filter, true);\n               // if there was a match store it\n               if (pageViews && pageViews.length > 0) {\n                  result = pageViews;\n               }\n               // if no match move on to the subpages\n               if (result.length < 1) {\n                  // loop through each subpage recursively\n                  var subPages = p.pages(filter, true);\n                  // if there was a match store it\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n                  if (result.length < 1) {\n                     lookDeep(p);\n                  }\n               }\n            });\n         }\n      }\n\n      // look at views recursively\n      if (filter) {\n         // look at views recursively (views can have subviews and so on)\n         if (this._views) {\n            views = this._views.filter(filter);\n\n            if (views.length < 1) {\n               this._views.forEach((v) => {\n                  var subViews = v.views(filter, true);\n                  if (subViews && subViews.length > 0) {\n                     views = subViews;\n                  }\n               });\n            }\n         }\n\n         // if no views of the root page match now look at the sub pages and their views\n         if (views.length) {\n            result = views;\n         } else {\n            // check the first level subpages\n            result = this._pages.filter(filter);\n\n            // if no match check each pages views and subpages\n            if (result.length < 1) {\n               // looping through pages\n               lookDeep(this);\n            }\n         }\n      }\n      // find all views\n      else {\n         // recusively gather all views on this view\n         if (this._views) {\n            views = this._views;\n            if (views.length) {\n               views.forEach((v) => {\n                  var subViews = v.views(() => true, true);\n                  if (subViews && subViews.length) {\n                     views = views.concat(subViews);\n                  }\n               });\n            }\n         }\n\n         // recursively gather all pages and their views\n         if (this._pages) {\n            pages = this._pages;\n            if (pages.length) {\n               pages.forEach((p) => {\n                  // grab all views on this page\n                  var pageViews = p.views(() => true, true);\n                  if (pageViews && pageViews.length) {\n                     views = views.concat(pageViews);\n                  }\n                  // grab all subpages on this page\n                  var subPages = p.pages(() => true, true);\n                  if (subPages && subPages.length) {\n                     pages = pages.concat(subPages);\n                     subPages.forEach((sub) => {\n                        var subViews = sub.views(() => true, true);\n                        if (subViews && subViews.length) {\n                           views = views.concat(subViews);\n                        }\n                     });\n                  }\n               });\n            }\n         }\n\n         result = result.concat(pages, views);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewAll()\n    * return a list of all the {ABViewxxx} classes available.\n    * @return {array} of ABView objects\n    */\n   viewAll(fn = () => true) {\n      return this.ViewManager.allViews(fn);\n   }\n\n   ///\n   /// Queries\n   ///\n\n   /**\n    * queriesExcluded()\n    * return a list of ABObjectQuery(s) that are not included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @return {array}\n    */\n   queriesExcluded(filter = () => true) {\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) == -1;\n      }).filter(filter);\n   }\n\n   /**\n    * queriesIncluded()\n    * return a list of ABObjectQuery(s) that are included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @param {fn} [sort] function to sort by, default is .label\n    * @return {array}\n    */\n   queriesIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Roles\n   ///\n\n   /**\n    * @method roles()\n    * return an array of all the ABRole for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which roles to return.\n    * @return {array}   array of ABRole\n    */\n   // roles(filter = () => true) {\n   //    return (this.role || []).filter(filter);\n   // }\n\n   /**\n    * @method urlResolve()\n    * given an object pointer, return the specific object referenced.\n    * pointer must start with a '#', use '/' as delimiters, and either\n    * reference an object's .id, or an object's .property.\n    * for example:\n    * #/_objects   : resolves to the array of ._objects pointed to by this\n    *               application.\n    * #/_objects/[object.id] : reolved to a specific object\n    * #/_objects/[object.id]/_fields/[field.id] : resolves to a specific data field\n    *               refereced by object.id.\n    *\n    * @param {string} pointer : the string url referencing the object you want\n    *                       to retrieve.\n    * @return {obj}\n    */\n   urlResolve(pointer) {\n      var parts = pointer.split(\"/\");\n\n      var parseStep = (obj, steps) => {\n         // we're done.  obj is what we are looking for:\n         if (steps.length == 0) {\n            return obj;\n         }\n\n         // pull the next step key:\n         var key = steps.shift();\n\n         // special case, \"#\" makes sure we are talking about the\n         // Application object\n         if (key == \"#\") {\n            return parseStep(this, steps);\n         }\n\n         // if obj is an [], then key should be an .id reference to\n         // lookup:\n         if (Array.isArray(obj)) {\n            obj = obj.filter(function (o) {\n               return o.id == key;\n            })[0];\n            return parseStep(obj, steps);\n         }\n\n         // otherwise obj should be an {} and key a property:\n         if (obj && obj[key]) {\n            return parseStep(obj[key], steps);\n         }\n\n         if (key == \"_objects\") {\n            console.error(new Error(\"REFACTOR: old objectBy url reference:\"));\n\n            // This can be gotten from our AB\n            var id = steps.shift();\n            return parseStep(this.AB.objectByID(id), steps);\n         }\n\n         // if we got here, there is an error!\n         // console.error('!!! failed to lookup url:'+pointer);\n         console.error(\"!!! failed to lookup url:\" + pointer);\n         return null;\n      };\n\n      return parseStep(this, parts);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer for this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      // NOTE: if we need to expand this to search across\n      // applications, then add in this application.id here:\n      if (acrossApp) return \"#/\" + this.id + \"/\";\n      else return \"#/\";\n   }\n\n   /**\n    * @method urlObject()\n    * return the url pointer for objects in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlObject(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_objects/\";\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for pages in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPage(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_pages/\";\n   }\n\n   /**\n    * @method urlQuery()\n    * return the url pointer for queries in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlQuery(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_queries/\";\n   }\n\n   /**\n    * @method version()\n    * return the current version of this Application.\n    * Version information is in format \"{Major}.{Minor}.{patch}\"\n    * @return {string}\n    */\n   get version() {\n      return this.json?.versionData?.versionNumber ?? \"0.0.0\";\n   }\n\n   ///\n   ///   Object List Settings\n   ///\n   get objectlistIsOpen() {\n      return this.objectListSettings.isOpen;\n   }\n\n   set objectlistIsOpen(isOpen) {\n      this.objectListSettings.isOpen = isOpen;\n   }\n\n   get objectlistSearchText() {\n      return this.objectListSettings.searchText;\n   }\n\n   set objectlistSearchText(searchText) {\n      this.objectListSettings.searchText = searchText;\n   }\n\n   get objectlistSortDirection() {\n      return this.objectListSettings.sortDirection;\n   }\n\n   set objectlistSortDirection(sortDirection) {\n      this.objectListSettings.sortDirection = sortDirection;\n   }\n\n   get objectlistIsGroup() {\n      return this.objectListSettings.isGroup;\n   }\n\n   set objectlistIsGroup(isGroup) {\n      this.objectListSettings.isGroup = isGroup;\n   }\n\n   ///\n   /// Instance generators\n   ///\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABApplication.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      // values.key = ABViewPageCore.common().key;\n      values.key = \"page\";\n\n      return this.ViewManager.newView(values, this, null);\n   }\n\n   /**\n    * @method pageByID()\n    * return pages from the given {id}\n    * @param {string} id\n    *        the uuid of the page to return.\n    * @param {bool} deep\n    *        should this search deep (through all our children's children)\n    * @return {ABViewPage}\n    */\n   pageByID(id, deep = true) {\n      return this.pages((f) => f.id == id, deep)[0];\n   }\n\n   /**\n    * @method viewNew()\n    *\n    * return an instance of a new (unsaved) ABView.\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.ViewManager.newView(values, application, parent);\n   }\n\n   ///\n   /// Utilities\n   ///\n\n   cloneDeep(/* object */) {\n      var errorDepreciated = new Error(\n         \"ABApplicationCore.cloneDeep(): Depreciated!  Use AB.cloneDeep() instead.\"\n      );\n      throw errorDepreciated;\n\n      // return JSON.parse(JSON.stringify(object));\n   }\n};\n","/**\n * ABApplicationMobileCore\n *\n * This is the core ABApplicationMobile class that manages the common operations\n * of a Mobile PWA ABApplication.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManagerMobile = require(\"../platform/ABViewManagerMobile\");\nvar ABApplication = require(\"../platform/ABApplication\");\n\nmodule.exports = class ABApplicationMobileCore extends ABApplication {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.appType = \"mobile\"; // Just making sure.\n      this.networkType = attributes.networkType;\n\n      this.pageDefault = attributes.pageDefault;\n      // {uuid}\n      // the {ABMobilePage}.uuid of the page that is our default Page.\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   get ViewManager() {\n      return ABViewManagerMobile;\n   }\n\n   pageNew(def) {\n      console.error(\"TODO: pageNew for ApplicationMobile\");\n      return null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var json = super.toObj();\n      json.appType = \"mobile\";\n      json.networkType = this.networkType;\n\n      json.pageDefault = this.pageDefault;\n\n      return json;\n   }\n};\n","/*\n * ABDataCollection\n * Defines a set of data that other parts of the Application can work with.\n * it can point to either an ABObject, or ABObjectQuery, and can have an\n * filter, and sorts defined.\n *\n *\n *\n */\n// const ABEmitter = require(\"../platform/ABEmitter\");\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\n// const ABObject = require(\"../platform/ABObject\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n// const RowFilter = require(\"../platform/RowFilter\");\n\nvar DefaultValues = {\n   id: \"uuid\",\n   label: \"\", // label\n   object: {}, // json of ABObject\n   query: {}, // json of ABObjectQuery\n   settings: {\n      datasourceID: \"\", // id of ABObject or ABObjectQuery\n      linkDatacollectionID: \"\", // id of ABDatacollection\n      linkFieldID: \"\", // id of ABField\n      followDatacollectionID: \"\", // id of ABDatacollection\n      objectWorkspace: {\n         filterConditions: {\n            // array of filters to apply to the data table\n            glue: \"and\",\n            rules: [],\n         },\n         sortFields: [], // array of columns with their sort configurations\n      },\n      loadAll: false,\n      // preventPopulate: false, depreciating in favour of populate\n      populate: true, // true/false or array of columns to populate.\n      isQuery: false, // if true it is a query, otherwise it is a object.\n\n      fixSelect: \"\", // _CurrentUser, _FirstRecord, _FirstRecordDefault or row id\n\n      syncType: 1, // 1 (Server), 2 (Client)\n   },\n};\n\nconst QueuedOperations = [];\n// {array} of operations that we want to perform but allow some space\n// between operations.\nvar _queueTimer = null;\n\nfunction runQueue() {\n   // if (!_queueTimer) {\n   //    _queueTimer = setInterval(() => {\n   //       runQueue();\n   //    }, 20);\n   // }\n   if (QueuedOperations.length == 0) {\n      // stop\n      // clearInterval(_queueTimer);\n      _queueTimer = null;\n      return;\n   }\n   var op = QueuedOperations.shift();\n   op.fn();\n   _queueTimer = setTimeout(runQueue, op.timeout);\n}\nfunction queueOperation(fn, timeout = 20) {\n   QueuedOperations.push({ fn, timeout });\n   if (!_queueTimer) {\n      runQueue();\n   }\n}\n\nmodule.exports = class ABDataCollectionCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      attributes = attributes || {};\n\n      // this.application = application;\n\n      this.fromValues(attributes);\n\n      this.__dataCollection = this._dataCollectionNew([]);\n      // {DataCollection}\n      // This is a working instance of a DataCollection, not an {ABDatacCollection}\n      // On web/mobile this is a webix component.  So keep the creation as part of\n      // the platform/ABDataCollection implementation.\n\n      // Set filter value\n      this.refreshFilterConditions();\n\n      this.__bindComponentIds = [];\n      this.__flexComponentIds = [];\n\n      // refresh a data collection\n      // this.init();\n\n      // mark data status does not be initialized\n      this._dataStatus = this.dataStatusFlag.notInitial;\n\n      this.__filterCond = null;\n      // {QueryCondition}\n      // A passed in Query Condition for filtering our DataCollection.\n      // This value is ANDed with our normal filter conditions.\n   }\n\n   /**\n    * contextKey()\n    *\n    * return a unique key that represents data from/for this type of object.\n    *\n    * used when creating Network jobs and needing to be notified when a job\n    * is complete.  We send a contextKey() to the Network job and then listen\n    * for it to know when it is complete.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"datacollection\";\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id;\n      // {string} .id\n      // the uuid of this ABDataCollection Definition.\n\n      this.name = values.name || null;\n      // {string} .name\n      // the unchanging name of this ABDataCollection\n\n      this.type = values.type || \"datacollection\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      values.settings = values.settings || {};\n      this.settings = this.settings || {};\n      // {obj} .settings\n      // the specific operation values for this ABDataCollection\n\n      this.settings.linkDatacollectionID =\n         values.settings.linkDatacollectionID ||\n         DefaultValues.settings.linkDatacollectionID;\n      // {string} .settings.linkDaacollectionID\n      // the uuid of another ABDataCollection that provides the link/trigger\n      // for filtering the values of this ABDataCollection.\n\n      this.settings.linkFieldID =\n         values.settings.linkFieldID || DefaultValues.settings.linkFieldID;\n      // {string} .settings.linkFieldID\n      // the uuid of the ABDataField of the .linkDatacollection ABObject\n      // whose value is the trigger value for this ABDataCollection\n\n      this.settings.followDatacollectionID =\n         values.settings.followDatacollectionID ||\n         DefaultValues.settings.followDatacollectionID;\n      // {string} .settings.followDatacollectionID\n      // the uuid of another ABDataCollection that provides the follow cursor data collection\n\n      this.settings.objectWorkspace = values.settings.objectWorkspace || {\n         filterConditions:\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         sortFields: DefaultValues.settings.objectWorkspace.sortFields,\n      };\n      // {obj} .settings.objectWorkspace\n      // the default settings for what is shown in the AppBuilder's\n      // DataCollection workspace\n\n      this.settings.fixSelect = values.settings.fixSelect;\n\n      // Convert to boolean\n      this.settings.loadAll = JSON.parse(\n         values.settings.loadAll || DefaultValues.settings.loadAll\n      );\n      // {bool} .settings.loadAll\n      // do we load all the data at one time? false == load by pages.\n\n      this.settings.isQuery = JSON.parse(\n         values.settings.isQuery || DefaultValues.settings.isQuery\n      );\n      // {bool} .settings.isQuery\n      // is the data source for this ABDataCollection based upon an\n      // ABObjectQuery?\n\n      this.settings.populate = (() => {\n         // First check .populate\n         if (values.settings.populate != undefined) {\n            return values.settings.populate;\n            // Then check legacy .preventPopulate\n         } else if (\n            values.settings.preventPopulate == true ||\n            values.settings.preventPopulate == \"1\"\n         ) {\n            return false;\n         } else return DefaultValues.settings.populate;\n      })();\n      // {bool | array} populate\n      // Control whcih related connections to populate. Default, true, populates\n      // all connections. False loads no connnections. Also accepts an array of\n      // column names to load specefic connections.\n\n      // Convert to number\n      this.settings.syncType = parseInt(\n         values.settings.syncType || DefaultValues.settings.syncType\n      );\n      // {int} .settings.syncType\n      // how is the data between this ABDataCollection and it's\n      // .datasource synced?\n\n      this.__datasource = null;\n      // {obj} .__datasource\n      // the reference to the ABObject/ABObjectQuery that this ABDataCollection\n      // is based off of.\n\n      this.settings.datasourceID =\n         values.settings.datasourceID || DefaultValues.settings.datasourceID;\n      // {string} .settings.datasourceID\n      // the uuid of the .__datasource object to use\n\n      // now lookup and reference the proper datasource\n      if (this.settings.datasourceID) {\n         // check for an ABObject\n         var obj = this.AB.objectByID(this.settings.datasourceID);\n         if (!obj) {\n            // this must be an ABObjectQuery then ...\n            obj = this.AB.queryByID(this.settings.datasourceID);\n         }\n\n         if (obj) {\n            this.__datasource = obj;\n            this.settings.isQuery = obj.type === \"query\";\n            if (this.settings.isQuery) {\n               if (this.__datasource.isGroup) {\n                  if (!this.__treeCollection)\n                     this.__treeCollection = this._treeCollectionNew();\n                  // {TreeCollection}\n                  // This is a webix TreeCollection (or similar)\n                  // keep it's implementation as part of the platform\n\n                  this.__isGroup = true;\n               }\n            }\n         } else {\n            console.error(\n               `ABDataCollection[${this.name}][${this.id}] unable to find datasource [${this.settings.datasourceID}]`\n            );\n         }\n      }\n\n      // // Populate data source: ABObject or ABObjectQuery\n      // if (values.query && values.query[0]) {\n      //    this.__datasource = new ABObjectQuery(\n      //       values.query[0],\n      //       this.application\n      //    );\n      //    this.settings.isQuery = true;\n\n      //    if (this.__datasource.isGroup) {\n      //       if (!this.__treeCollection)\n      //          this.__treeCollection = this._treeCollectionNew();\n\n      //       this.__isGroup = true;\n      //    }\n      // } else if (values.object && values.object[0]) {\n      //    this.__datasource = new ABObject(values.object[0], this.application);\n      //    this.settings.isQuery = false;\n      // }\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj(); // untranslate the object\n\n      return {\n         id: this.id,\n         name: this.name || this.label,\n         type: this.type || \"datacollection\",\n         settings: this.AB.cloneDeep(this.settings || {}),\n         translations: obj.translations,\n      };\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDatacollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *      .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      return this;\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABDatacollection\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      var removeFromApplications = () => {\n         return new Promise((next, err) => {\n            // this.AB.applications().then((apps) => {\n\n            const apps = this.AB.applications();\n            // NOTE: apps is a webix datacollection\n\n            var allRemoves = [];\n\n            var appsWithObject = apps.filter((a) => {\n               return a.datacollectionsIncluded((o) => o.id == this.id);\n            });\n            appsWithObject.forEach((app) => {\n               allRemoves.push(app.datacollectionRemove(this));\n            });\n\n            return Promise.all(allRemoves).then(next).catch(err);\n            // });\n         });\n      };\n\n      return Promise.resolve()\n         .then(() => {\n            return removeFromApplications();\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @property $dc\n    * return the underlying webix datacollection\n    * @return {webix.datacollection}\n    */\n   get $dc() {\n      return this.__dataCollection;\n   }\n\n   /**\n    * @property datasource\n    * return a object of this component.\n    *\n    * @return {ABObject|ABObjectQuery}\n    */\n   get datasource() {\n      if (!this.__datasource) {\n         if (this.id && this.name) {\n            // occassionally we have blank DCs (without .id or .name)\n            // and I don't want to see errors for those\n            var err = new Error(\n               `DataCollection[${this.name}][${this.id}] missing reference datasource`\n            );\n            this.AB.notify(\"builder\", err, { datacollection: this.toObj() });\n         }\n         return null;\n      }\n      var obj = this.AB.objectByID(this.__datasource.id);\n      if (!obj) {\n         obj = this.AB.queryByID(this.__datasource.id);\n      }\n      return obj;\n   }\n\n   /**\n    * @property datasource\n    * set a object to data collection\n    *\n    * @param {ABObject|ABObjectQuery} object\n    */\n   set datasource(object) {\n      this.__datasource = object;\n\n      this.refreshFilterConditions();\n   }\n\n   /**\n    * @property sourceType\n    * return type of source.\n    *\n    * @return {string} - 'object' or 'query'\n    */\n   get sourceType() {\n      return this.settings.isQuery ? \"query\" : \"object\";\n   }\n\n   /**\n    * @method datacollectionLink\n    * return a ABDatacollection that link of this.\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollectionLink() {\n      if (!this.AB) return null;\n\n      return this.AB.datacollectionByID(this.settings.linkDatacollectionID);\n   }\n\n   /**\n    * @property fieldLink\n    * return a ABFieldConnect field that link of this.\n    *\n    * @return {ABFieldConnect}\n    */\n   get fieldLink() {\n      let object = this.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.linkFieldID);\n   }\n\n   /**\n    * @property model\n    * return a source model\n    *\n    * @return ABModel\n    */\n   get model() {\n      let object = this.datasource; // already notified\n\n      return object ? object.model() : null;\n   }\n\n   get dataStatusFlag() {\n      return {\n         notInitial: 0,\n         initializing: 1,\n         initialized: 2,\n      };\n   }\n\n   get dataStatus() {\n      return this._dataStatus;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   setCursor(itemId) {\n      // If the static cursor is set, then this DC could not set cursor to other rows\n      if (\n         this.settings.fixSelect &&\n         (this.settings.fixSelect != \"_FirstRecordDefault\" ||\n            this.settings.fixSelect == itemId)\n      )\n         return;\n\n      if (this.__treeCollection) {\n         // set cursor of tree collection\n         this.setCursorTree(itemId);\n\n         // pull current row id\n         let currTreeId = this.__treeCollection.getCursor();\n         if (currTreeId) {\n            let currTreeItem = this.__treeCollection.getItem(currTreeId);\n            if (currTreeItem) itemId = currTreeItem._itemId;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc) {\n         // Store the old cursor id\n         this.__previousCursorId = dc.getCursor();\n\n         // clear cursor\n         if (itemId == null) {\n            dc.setCursor(null);\n         }\n         // If set rowId equal current cursor, it will not trigger .onAfterCursorChange event\n         else if (dc.getCursor() == itemId) {\n            this.emit(\"changeCursor\", this.getCursor());\n         }\n         // set new cursor\n         else if (dc.exists(itemId)) {\n            dc.setCursor(itemId);\n         }\n      }\n   }\n\n   /**\n    *\n    * @param {string|number} itemId - Id of item or Id of row data\n    */\n   setCursorTree(itemId) {\n      let tc = this.__treeCollection;\n      if (tc && tc.getCursor() != itemId) {\n         // If it is id of tree collection, then find row id of data\n         let treeCursor = tc.find({ id: itemId }, true);\n         if (treeCursor) {\n            tc.setCursor(itemId);\n         }\n         // If it is not id of tree collection, then find/set root of data\n         else {\n            let treeItem = tc.find({ _itemId: itemId, $parent: 0 }, true);\n            if (treeItem) tc.setCursor(treeItem.id);\n            else tc.setCursor(null);\n         }\n      }\n   }\n\n   getCursor(treeCursor = false) {\n      // Cursor of tree collection\n      if (treeCursor && this.__treeCollection) {\n         let currId = this.__treeCollection.getCursor();\n         if (currId) {\n            let currItem = this.__treeCollection.getItem(currId);\n\n            // filter current id for serialize\n            this.__treeCollection.filter(\n               (item) => item._itemId == currItem._itemId\n            );\n\n            // pull item with child items\n            let currItemAndChilds =\n               this.__treeCollection.serialize()[0] || null;\n\n            // refresh filter\n            this.refreshLinkCursor();\n\n            return currItemAndChilds;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      let currId = dc.getCursor();\n      let currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getFirstRecord() {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getFirstId();\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getNextRecord(record) {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getNextId(record.id);\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   /**\n    * @method refreshLinkCursor\n    *    If the data collection is bound to another and it is the child connection\n    *    it finds it's parents current set cursor and then filters its data\n    *    based off of the cursor.\n    */\n   refreshLinkCursor() {\n      // NOTE: If DC does not set load all data, then it does not need to filter by the parent DC.\n      // because it fetch data when the cursor of the parent DC changes.\n      if (!this.settings.loadAll) return;\n\n      // do not set the filter unless this dc is initialized \"dataStatusFlag==2\"\n      // if (this.dataStatus != this.dataStatusFlag.initialized) return;\n\n      // filter the data in the data collection\n      // using its parents current cursor because all the data in this child\n      // data collection has been loaded and the frontend can decide what is\n      // seen or not seen\n      let linkCursor;\n      let dvLink = this.datacollectionLink;\n      if (dvLink) {\n         linkCursor = dvLink.getCursor();\n      }\n\n      let filterData = (rowData) => {\n         // if link dc cursor is null:\n         // ... if there's no parent show all data\n         // ... if we have a parent hide all data - address cases where user see\n         //     unexpected data (ns_app#318) - should this be a DC setting?\n         if (!linkCursor) return dvLink ? false : true;\n         else return this.isParentFilterValid(rowData);\n      };\n\n      if (this.__dataCollection) this.__dataCollection.filter(filterData);\n      if (this.__treeCollection) this.__treeCollection.filter(filterData);\n   }\n\n   setStaticCursor() {\n      if (this.settings.fixSelect) {\n         // set cursor to the current user\n         if (this.settings.fixSelect == \"_CurrentUser\") {\n            var username = this.currentUserUsername();\n            var userFields = this.datasource.fields((f) => f.key == \"user\");\n\n            // find a row that contains the current user\n            var row = this.__dataCollection.find((r) => {\n               var found = false;\n\n               userFields.forEach((f) => {\n                  if (found || r[f.columnName] == null) return;\n\n                  if (r[f.columnName].filter) {\n                     // Array - isMultiple\n                     found =\n                        r[f.columnName].filter((data) => data.id == username)\n                           .length > 0;\n                  } else if (r[f.columnName] == username) {\n                     found = true;\n                  }\n               });\n\n               return found;\n            }, true);\n\n            // set a first row of current user to cursor\n            if (row) {\n               this.__dataCollection.setCursor(row.id);\n\n               this.setCursorTree(row.id);\n            }\n         } else if (\n            this.settings.fixSelect == \"_FirstRecord\" ||\n            this.settings.fixSelect == \"_FirstRecordDefault\"\n         ) {\n            // // find a row that contains the current user\n            // var row = this.__dataCollection.find((r) => {\n\n            //  var found = false;\n            //  if (!found) {\n            //    found = true;\n            //    return true; // just give us the first record\n            //  }\n\n            // }, true);\n\n            // // set a first row of current user to cursor\n            // if (row)\n            //  this.__dataCollection.setCursor(row.id);\n\n            let currRowId = this.__dataCollection.getCursor();\n            if (\n               !currRowId ||\n               (currRowId && !this.__dataCollection.exists(currRowId))\n            ) {\n               // If current cursor is filtered by parent DC, then select new cursor\n\n               // set a first row to cursor\n               let rowId = this.__dataCollection.getFirstId();\n               // if (rowId) {\n               this.__dataCollection.setCursor(rowId || null);\n\n               this.setCursorTree(rowId);\n               // }\n            }\n         } else {\n            this.__dataCollection.setCursor(this.settings.fixSelect);\n\n            this.setCursorTree(this.settings.fixSelect);\n         }\n      }\n\n      // Set the cursor to the first row\n      if (this.isCursorFollow) {\n         const rowId = this.__dataCollection.getFirstId();\n         this.setCursor(rowId || null);\n         this.setCursorTree(rowId || null);\n\n         // If no data but the parent DC set cursor, then this should be reload data.\n         const dcFollow = this.datacollectionFollow;\n         if (!rowId && dcFollow.getCursor()) {\n            this.loadData();\n         }\n      }\n   }\n\n   ///\n   /// Data\n   ///\n\n   /**\n    * @method filterCondition()\n    * Provide a temporary filter condition to modify the data we are returning.\n    * Used by User search criterias.\n    * @param {json} cond\n    *        A valid QueryCondition to filter the response.\n    */\n   filterCondition(cond = null) {\n      this.__filterCond = cond;\n   }\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      this.initialized = true;\n\n      if (!this.__dataCollection.___AD.onAfterCursorChange) {\n         this.__dataCollection.___AD.onAfterCursorChange =\n            this.__dataCollection.attachEvent(\"onAfterCursorChange\", () => {\n               // debugger;\n               var currData = this.getCursor();\n\n               this.emit(\"changeCursor\", currData);\n            });\n      }\n\n      // relate data functions\n      let isRelated = (relateData, rowId, PK = \"id\") => {\n         if (Array.isArray(relateData)) {\n            return relateData.filter((v) => (v[PK] || v) == rowId).length > 0;\n         } else {\n            return relateData && (relateData[PK] || relateData) == rowId;\n         }\n      };\n\n      // events\n      this.on(\"ab.datacollection.create\", (data) => {\n         // If this DC is following cursor for other DC, then it should not add the new item to their list.\n         if (this.isCursorFollow) return;\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data || !data.data) return;\n\n         let needAdd = false;\n         let updatedVals = [];\n\n         Promise.resolve()\n            .then(() => {\n               return new Promise((next, bad) => {\n                  // Query\n                  if (obj instanceof this.AB.Class.ABObjectQuery) {\n                     let objList =\n                        obj.objects((o) => o.id == data.objectId) || [];\n\n                     needAdd = objList.length > 0;\n\n                     if (!needAdd) return next();\n\n                     let where = {\n                        glue: \"or\",\n                        rules: [],\n                     };\n\n                     objList.forEach((o) => {\n                        let newDataId = data.data[`${o.PK()}`];\n                        if (!newDataId) return;\n\n                        where.rules.push({\n                           key: `${o.alias || obj.objectAlias(o.id)}.${o.PK()}`,\n                           rule: \"equals\",\n                           value: newDataId,\n                        });\n                     });\n\n                     obj.model()\n                        .findAll({\n                           where: where,\n                        })\n                        .then((newQueryData) => {\n                           updatedVals = newQueryData.data || [];\n                           updatedVals.forEach((v) => {\n                              delete v.id;\n                           });\n\n                           next();\n                        })\n                        .catch(bad);\n                  }\n                  // Object\n                  else {\n                     needAdd = obj.id == data.objectId;\n                     updatedVals = [data.data];\n                     next();\n                  }\n               });\n            })\n            .then(() => {\n               if (needAdd) {\n                  // normalize data before add to data collection\n                  var model = obj.model();\n\n                  // UPDATE: this should already have happened in NetworkRestSocket\n                  // when the initial data is received.\n                  //model.normalizeData(updatedVals);\n\n                  (updatedVals || []).forEach((updatedV) => {\n                     // filter condition before add\n                     if (!this.isValidData(updatedV)) return;\n\n                     // check to see if item already exisits in data collection\n                     // and check to see that we are not loading the data serverside from cursor\n                     if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        !this.__reloadWheres\n                     ) {\n                        this.__dataCollection.add(updatedV, 0);\n                        this.emit(\"create\", updatedV);\n                        // this.__dataCollection.setCursor(rowData.id);\n                     } else if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        this.__reloadWheres\n                     ) {\n                        // debugger;\n                        if (this.isParentFilterValid(updatedV)) {\n                           // we track bound components and flexlayout components\n                           var attachedComponents =\n                              this.__bindComponentIds.concat(\n                                 this.__flexComponentIds\n                              );\n                           attachedComponents.forEach((bcids) => {\n                              // if the reload button already exisits move on\n                              if ($$(bcids + \"_reloadView\")) {\n                                 return false;\n                              }\n\n                              // find the position of the data view\n                              var pos = 0;\n                              var parent = $$(bcids).getParentView();\n                              if ($$(bcids).getParentView().index) {\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .index($$(bcids));\n                              } else if (\n                                 $$(bcids).getParentView().getParentView().index\n                              ) {\n                                 // this is a data view and it is inside a\n                                 // scroll view that is inside an accodion\n                                 // so we need to go deeper to add the button\n                                 parent = $$(bcids)\n                                    .getParentView()\n                                    .getParentView();\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .getParentView()\n                                    .index($$(bcids).getParentView());\n                              }\n\n                              // store the datacollection so we can pass it to the button later\n                              var DC = this;\n                              // add a button that reloads the view when clicked\n                              if (parent.addView) {\n                                 var L = this.AB.Label();\n                                 parent.addView(\n                                    {\n                                       id: bcids + \"_reloadView\",\n                                       view: \"button\",\n                                       value: L(\n                                          \"New data available. Click to reload.\"\n                                       ),\n                                       css: \"webix_primary webix_warn\",\n                                       click: function (id, event) {\n                                          DC.reloadData();\n                                          $$(id).getParentView().removeView(id);\n                                       },\n                                    },\n                                    pos\n                                 );\n                              }\n                           });\n                           // this.emit(\"create\", updatedV);\n                        }\n                     }\n                  });\n\n                  if (\n                     this.__treeCollection // && this.__treeCollection.exists(updatedVals.id)\n                  ) {\n                     this.parseTreeCollection({\n                        data: updatedVals,\n                     });\n                  }\n               }\n\n               // ABObject only\n               if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n                  // if it is a linked object\n                  let connectedFields = this.datasource.connectFields(\n                     (f) =>\n                        f.datasourceLink && f.datasourceLink.id == data.objectId\n                  );\n\n                  // It should always be only one item for ABObject\n                  updatedVals = updatedVals[0];\n\n                  // update relation data\n                  if (\n                     updatedVals &&\n                     connectedFields &&\n                     connectedFields.length > 0\n                  ) {\n                     // various PK name\n                     let PK = connectedFields[0].object.PK();\n                     if (!updatedVals.id && PK != \"id\")\n                        updatedVals.id = updatedVals[PK];\n\n                     this.__dataCollection.find({}).forEach((d) => {\n                        let updateItemData = {};\n\n                        connectedFields.forEach((f) => {\n                           var updateRelateVal = {};\n                           if (f && f.fieldLink) {\n                              updateRelateVal =\n                                 updatedVals[f.fieldLink.relationName()] || {};\n                           }\n\n                           let rowRelateVal = d[f.relationName()] || {};\n\n                           let valIsRelated = isRelated(\n                              updateRelateVal,\n                              d.id,\n                              PK\n                           );\n\n                           // Relate data\n                           if (\n                              Array.isArray(rowRelateVal) &&\n                              rowRelateVal.filter(\n                                 (v) =>\n                                    v == updatedVals.id ||\n                                    v.id == updatedVals.id ||\n                                    v[PK] == updatedVals.id\n                              ).length < 1 &&\n                              valIsRelated\n                           ) {\n                              rowRelateVal.push(updatedVals);\n\n                              updateItemData[f.relationName()] = rowRelateVal;\n                              updateItemData[f.columnName] = updateItemData[\n                                 f.relationName()\n                              ].map((v) => v.id || v[PK] || v);\n                           } else if (\n                              !Array.isArray(rowRelateVal) &&\n                              (rowRelateVal != updatedVals.id ||\n                                 rowRelateVal.id != updatedVals.id ||\n                                 rowRelateVal[PK] != updatedVals.id) &&\n                              valIsRelated\n                           ) {\n                              updateItemData[f.relationName()] = updatedVals;\n                              updateItemData[f.columnName] =\n                                 updatedVals.id || updatedVals;\n                           }\n                        });\n\n                        // If this item needs to update\n                        if (Object.keys(updateItemData).length > 0) {\n                           // normalize data before add to data collection\n                           var model = obj.model();\n\n                           // UPDATE: this should already have happened in NetworkRestSocket\n                           // when the initial data is received.\n                           // model.normalizeData(updateItemData);\n\n                           this.__dataCollection.updateItem(\n                              d.id,\n                              updateItemData\n                           );\n\n                           if (this.__treeCollection)\n                              this.__treeCollection.updateItem(\n                                 d.id,\n                                 updateItemData\n                              );\n\n                           this.emit(\n                              \"update\",\n                              this.__dataCollection.getItem(d.id)\n                           );\n                        }\n                     });\n                  }\n               }\n\n               // filter link data collection's cursor\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            });\n      });\n\n      this.on(\"ab.datacollection.update\", (data) => {\n         // {json} data\n         // incoming socket payload:\n         // data.objectId {string} uuid of the ABObject's row that was updated\n         // data.data {json} the new updated value of that row entry.\n\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         // updated values\n         let values = data.data;\n         if (!values) return;\n\n         // DC who is following cursor should update only current cursor.\n         if (this.getCursor()?.id != (values[obj.PK()] ?? values.id))\n            return;\n\n         let needUpdate = false;\n         let isExists = false;\n         let updatedIds = [];\n         // {array}\n         // an array of the row indexs in our DataCollection that have values\n         // that need to be updated.\n\n         let updatedTreeIds = [];\n         let updatedVals = {};\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needUpdate = objList.length > 0;\n            if (needUpdate) {\n               (objList || []).forEach((o) => {\n                  updatedIds = updatedIds.concat(\n                     this.__dataCollection\n                        .find((item) => {\n                           return (\n                              item[\n                                 `${this.datasource.objectAlias(\n                                    o.id\n                                 )}.${o.PK()}`\n                              ] == (values[o.PK()] || values.id)\n                           );\n                        })\n                        .map((o) => o.id) || []\n                  );\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     updatedTreeIds = updatedTreeIds.concat(\n                        this.__treeCollection\n                           .find((item) => {\n                              return (\n                                 item[\n                                    `${this.datasource.objectAlias(\n                                       o.id\n                                    )}.${o.PK()}`\n                                 ] == (values[o.PK()] || values.id)\n                              );\n                           })\n                           .map((o) => o.id) || []\n                     );\n                  }\n               });\n\n               isExists = updatedIds.length > 0;\n\n               updatedVals = this._queryUpdateData(objList, values);\n            }\n         }\n         // Object\n         else {\n            needUpdate = obj.id == data.objectId;\n            if (needUpdate) {\n               // various PK name\n               if (!values.id && obj.PK() != \"id\") values.id = values[obj.PK()];\n\n               updatedIds.push(values.id);\n\n               isExists = this.__dataCollection.exists(values.id);\n               updatedVals = values;\n            }\n         }\n\n         // if it is the source object\n         if (needUpdate) {\n            if (isExists) {\n               if (this.isValidData(updatedVals)) {\n                  // NOTE: this is now done in NetworkRestSocket before\n                  // we start the update events.\n                  // normalize data before update data collection\n                  // var model = obj.model();\n                  // model.normalizeData(updatedVals);\n\n                  if (this.__dataCollection) {\n                     updatedIds = this.AB.uniq(updatedIds);\n                     updatedIds.forEach((itemId) => {\n                        this.__dataCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  if (this.__treeCollection) {\n                     // update data in tree\n                     updatedTreeIds = this.AB.uniq(updatedTreeIds);\n                     updatedTreeIds.forEach((itemId) => {\n                        this.__treeCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  this.emit(\"update\", updatedVals);\n\n                  // If the update item is current cursor, then should tell components to update.\n                  let currData = this.getCursor();\n                  if (currData && currData.id == updatedVals.id) {\n                     this.emit(\"changeCursor\", currData);\n                  }\n               } \n               else {\n                  // Johnny: Here we are simply removing the DataCollection Entries that are\n                  // no longer valid.\n                  // Just cycle through the collected updatedIds and remove them.\n                  updatedIds.forEach((id) => {\n                     // If the item is current cursor, then the current cursor should be cleared.\n                     let currData = this.getCursor();\n                     if (currData && currData.id == id)\n                        this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(id);\n\n                     // TODO: update tree list\n                     // if (this.__treeCollection) {\n                     //  this.__treeCollection.remove(id);\n                     // }\n\n                     this.emit(\"delete\", id);\n                  });\n               }\n            }\n            // filter before add new record\n            else if (this.isValidData(updatedVals)) {\n               // this means the updated record was not loaded yet so we are adding it to the top of the grid\n               // the placement will probably change on the next load of the data\n               this.__dataCollection.add(updatedVals, 0);\n\n               if (this.__treeCollection)\n                  this.parseTreeCollection({\n                     data: [updatedVals],\n                  });\n\n               this.emit(\"create\", updatedVals);\n            }\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n            if (!values.id && PK != \"id\") values.id = values[PK];\n\n            if (this.__dataCollection.count() > 0) {\n               this.__dataCollection.find({}).forEach((d) => {\n                  let updateItemData = {\n                     id: d.id,\n                  };\n\n                  connectedFields.forEach((f) => {\n                     if (!f) return;\n\n                     let updateRelateVal = {};\n                     let rowRelateVal = d[f.relationName()] || {};\n\n                     if (f.fieldLink)\n                        updateRelateVal =\n                           values[f.fieldLink.relationName()] || {};\n\n                     let valIsRelated = isRelated(updateRelateVal, d.id, PK);\n\n                     // Unrelate data\n                     if (\n                        Array.isArray(rowRelateVal) &&\n                        rowRelateVal.filter(\n                           (v) =>\n                              v == values.id ||\n                              v.id == values.id ||\n                              v[PK] == values.id\n                        ).length > 0 &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = rowRelateVal.filter(\n                           (v) => (v.id || v[PK] || v) != values.id\n                        );\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal == values.id ||\n                           rowRelateVal.id == values.id ||\n                           rowRelateVal[PK] == values.id) &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = null;\n                        updateItemData[f.columnName] = null;\n                     }\n\n                     // Relate data or Update\n                     if (Array.isArray(rowRelateVal) && valIsRelated) {\n                        // update relate data\n                        if (\n                           rowRelateVal.filter(\n                              (v) =>\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                           ).length > 0\n                        ) {\n                           rowRelateVal.forEach((v, index) => {\n                              if (\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                              )\n                                 rowRelateVal[index] = values;\n                           });\n                        }\n                        // add new relate\n                        else {\n                           rowRelateVal.push(values);\n                        }\n\n                        updateItemData[f.relationName()] = rowRelateVal;\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal != values.id ||\n                           rowRelateVal.id != values.id ||\n                           rowRelateVal[PK] != values.id) &&\n                        valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = values;\n                        updateItemData[f.columnName] = values.id || values;\n                     }\n                  });\n\n                  // If this item needs to update\n                  if (Object.keys(updateItemData).length > 0) {\n                     // normalize data before add to data collection\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n\n                     // NOTE: We could not normalize relational data because they are not full data\n                     // Merge update data to exists data instead\n\n                     if (this.__treeCollection?.exists(d.id)) {\n                        const treeItem = Object.assign(\n                           this.__treeCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__treeCollection.updateItem(d.id, treeItem);\n                     }\n\n                     if (this.__dataCollection?.exists(d.id)) {\n                        const dcItem = Object.assign(\n                           this.__dataCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__dataCollection.updateItem(d.id, dcItem);\n                        this.emit(\n                           \"update\",\n                           this.__dataCollection.getItem(d.id)\n                        );\n                     }\n                  }\n               });\n            }\n         }\n\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      // We are subscribing to notifications from the server that an item may be stale and needs updating\n      // We will improve this later and verify that it needs updating before attempting the update on the client side\n      this.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         // if we don't have a datasource or model, there is nothing we can do here:\n         // Verify the datasource has the object we are listening for if not just stop here\n         if (\n            !this.datasource ||\n            !this.model ||\n            this.datasource.id != data.objectId\n         ) {\n            return;\n         }\n\n         // updated values\n         var values = data.data;\n\n         if (!values) return;\n\n         // use the Object's defined Primary Key:\n         var PK = this.model.object.PK();\n         if (!values[PK]) {\n            PK = \"id\";\n         }\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.[PK] != (values[PK] ?? values.id)\n         ) {\n            return;\n         }\n\n         if (values) {\n            if (this.__dataCollection.exists(values[PK])) {\n               var cond = { where: {} };\n               cond.where[PK] = values[PK];\n               // this data collection has the record so we need to query the server to find out what it's latest data is so we can update all instances\n               this.model.staleRefresh(cond).then((res) => {\n                  // check to make sure there is data to work with\n                  if (Array.isArray(res.data) && res.data.length) {\n                     // debugger;\n                     let obj = this.datasource;\n                     if (!obj) return;\n                     // normalize data before add to data collection\n\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n                     //var model = obj.model();\n                     // model.normalizeData(res.data[0]);\n\n                     // tell the webix data collection to update using their API with the row id (values.id) and content (res.data[0])\n                     if (this.__dataCollection.exists(values[PK])) {\n                        this.__dataCollection.updateItem(\n                           values[PK],\n                           res.data[0]\n                        );\n                     }\n\n                     // If the update item is current cursor, then should tell components to update.\n                     var currData = this.getCursor();\n                     if (currData && currData[PK] == values[PK]) {\n                        this.emit(\"changeCursor\", currData);\n                     }\n                  } else {\n                     // If there is no data in the object then it was deleted...lets clean things up\n                     // If the deleted item is current cursor, then the current cursor should be cleared.\n                     var currId = this.getCursor();\n                     if (currId == values[PK]) this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(values[PK]);\n                     this.emit(\"delete\", values[PK]);\n                  }\n               });\n            }\n         }\n\n         // filter link data collection's cursor\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      this.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         let deleteId = data.data;\n         let needDelete = false;\n         let deletedIds = [];\n         let deletedTreeIds = [];\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needDelete = objList.length > 0;\n            if (needDelete) {\n               (objList || []).forEach((o) => {\n                  deletedIds =\n                     this.__dataCollection\n                        .find((item) => {\n                           return item[`${o.alias}.${o.PK()}`] == deleteId;\n                        })\n                        .map((o) => o.id) || [];\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     deletedTreeIds =\n                        this.__treeCollection\n                           .find((item) => {\n                              return item[`${o.alias}.${o.PK()}`] == deleteId;\n                           })\n                           .map((o) => o.id) || [];\n                  }\n               });\n            }\n         }\n         // Object\n         else {\n            needDelete = obj.id == data.objectId;\n            if (needDelete) {\n               deletedIds.push(deleteId);\n            }\n         }\n\n         // if it is the source object\n         if (needDelete) {\n            // If the deleted item is current cursor, then the current cursor should be cleared.\n            var currData = this.getCursor();\n\n            deletedIds.forEach((delId) => {\n               if (currData && currData[obj.PK()] == delId)\n                  this.emit(\"changeCursor\", null);\n\n               if (this.__dataCollection.exists(delId))\n                  this.__dataCollection.remove(delId);\n            });\n\n            if (this.__treeCollection) {\n               deletedTreeIds.forEach((delId) => {\n                  if (this.__treeCollection.exists(delId))\n                     this.__treeCollection.remove(delId);\n               });\n            }\n\n            if (deletedIds[0]) this.emit(\"delete\", deletedIds[0]);\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n\n            this.__dataCollection.find({}).forEach((d) => {\n               let updateRelateVals = {};\n\n               connectedFields.forEach((f) => {\n                  let relateVal = d[f.relationName()];\n                  if (relateVal == null) return;\n\n                  if (\n                     Array.isArray(relateVal)\n                     // JOHNNY: for speed improvements, don't make this check:\n                     // just do it and that will reduce 1x through the array.\n                     // &&\n                     // relateVal.filter(\n                     //    (v) =>\n                     //       v == deleteId ||\n                     //       v.id == deleteId ||\n                     //       v[PK] == deleteId\n                     // ).length > 0\n                  ) {\n                     updateRelateVals[f.relationName()] = relateVal.filter(\n                        (v) => (v.id || v[PK] || v) != deleteId\n                     );\n                     updateRelateVals[f.columnName] = updateRelateVals[\n                        f.relationName()\n                     ].map((v) => v.id || v[PK] || v);\n                  } else if (\n                     relateVal == deleteId ||\n                     relateVal.id == deleteId ||\n                     relateVal[PK] == deleteId\n                  ) {\n                     updateRelateVals[f.relationName()] = null;\n                     updateRelateVals[f.columnName] = null;\n                  }\n               });\n\n               // If this item needs to update\n               if (Object.keys(updateRelateVals).length > 0) {\n                  // normalize data before add to data collection\n\n                  // var model = obj.model();\n                  // model.normalizeData(updateRelateVals);\n\n                  this.__dataCollection.updateItem(d.id, updateRelateVals);\n\n                  if (this.__treeCollection)\n                     this.__treeCollection.updateItem(d.id, updateRelateVals);\n\n                  this.emit(\"update\", this.__dataCollection.getItem(d.id));\n               }\n            });\n         }\n      });\n\n      // add listeners when cursor of link data collection is changed\n      const linkDC = this.datacollectionLink;\n      // if (linkDC && this.settings.loadAll) {\n      if (linkDC) {\n         this.eventAdd({\n            emitter: linkDC,\n            eventName: \"changeCursor\",\n            listener: (currentCursor) => {\n               // NOTE: we can clear data here to update UI display, then data will be fetched when webix.dataFeed event\n               if (!this.settings?.loadAll && currentCursor?.id != linkDC.previousCursorId)\n                  this.clearAll();\n\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n      }\n\n      // add listeners when cursor of the followed data collection is changed\n      const followDC = this.datacollectionFollow;\n      if (followDC) {\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"changeCursor\",\n            listener: () => {\n               const followCursor = followDC.getCursor();\n               const currentCursor = this.getCursor();\n\n               // If the cursor is not the new, then it should not reload.\n               if (followCursor?.[followDC.datasource.PK()] == currentCursor?.[this.datasource.PK()])\n                  return;\n\n               this.clearAll();\n               this.loadData();\n            },\n         });\n      }\n   }\n\n   /*\n    * waitForDataCollectionToInitialize()\n    * there are certain situations where this datacollection shouldn't\n    * load until another one has loaded.  In those cases, the fn()\n    * will wait for the required datacollection to emit \"initializedData\"\n    * before continuing on.\n    * @param {ABViewDataCollection} DC\n    *      the DC this datacollection depends on.\n    * @returns {Promise}\n    */\n   async waitForDataCollectionToInitialize(DC, msg) {\n      DC.init();\n\n      return new Promise((resolve, reject) => {\n         switch (DC.dataStatus) {\n            // if that DC hasn't started initializing yet, start it!\n            case DC.dataStatusFlag.notInitial:\n               DC.loadData().catch(reject);\n            // no break;\n\n            // once in the process of initializing\n            /* eslint-disable no-fallthrough*/\n            case DC.dataStatusFlag.initializing:\n               /* eslint-enable no-fallthrough*/\n               // listen for \"initializedData\" event from the DC\n               // then we can continue.\n               this.eventRemove(\"initializedData\");\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"initializedData\",\n                  listener: () => {\n                     // go next\n                     resolve();\n                  },\n               });\n               break;\n\n            // if it is already initialized, we can continue:\n            case DC.dataStatusFlag.initialized:\n               resolve();\n               break;\n\n            // just in case, if the status is not known, just continue\n            default:\n               resolve();\n               break;\n         }\n      });\n   }\n\n   async loadData(start, limit) {\n      // mark data status is initializing\n      if (this._dataStatus == this.dataStatusFlag.notInitial) {\n         this._dataStatus = this.dataStatusFlag.initializing;\n         this.emit(\"initializingData\", {});\n      }\n\n      var obj = this.datasource;\n      if (obj == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      var model = obj.model();\n      if (model == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      // pull the defined sort values\n      var sorts = this.settings.objectWorkspace.sortFields || [];\n\n      // pull filter conditions\n      let wheres = this.AB.cloneDeep(\n         this.settings.objectWorkspace.filterConditions ?? null\n      );\n      // if we pass new wheres with a reload use them instead\n      if (this.__reloadWheres) {\n         wheres = this.__reloadWheres;\n      }\n\n      const __additionalWheres = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (this.__filterCond) {\n         __additionalWheres.rules.push(this.__filterCond);\n      }\n\n      // Filter by a selected cursor of a link DC\n      const dataCollectionLink = this.datacollectionLink;\n      const fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         const linkCursorId = dataCollectionLink?.getCursor()?.id;\n         if (linkCursorId) {\n            __additionalWheres.rules.push({\n               alias: fieldLink.alias, // ABObjectQuery\n               key: fieldLink.id,\n               rule: fieldLink.alias ? \"contains\" : \"equals\", // NOTE: If object is query, then use \"contains\" because ABOBjectQuery return JSON\n               value: fieldLink.getRelationValue(\n                  dataCollectionLink.__dataCollection.getItem(linkCursorId)\n               ),\n            });\n         }\n      }\n      // pull data rows following the follow data collection\n      else if (this.datacollectionFollow) {\n         const followCursor = this.datacollectionFollow.getCursor();\n         // store the PK as a variable\n         let PK = this.datasource.PK();\n         // if the datacollection we are following is a query\n         // add \"BASE_OBJECT.\" to the PK so we can select the\n         // right value to report the cursor change to\n         if (this.datacollectionFollow.settings.isQuery) {\n            PK = \"BASE_OBJECT.\" + PK;\n         }\n         if (followCursor) {\n            start = 0;\n            limit = null;\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: followCursor[PK],\n                  },\n               ],\n            };\n         }\n         // Set no return rows\n         else {\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: \"NO RESULT ROW\",\n                  },\n               ],\n            };\n         }\n      }\n\n      // Combine setting & program filters\n      if (__additionalWheres.rules.length) {\n         __additionalWheres.rules.unshift(wheres);\n         wheres = __additionalWheres;\n      }\n\n      // remove any null in the .rules\n      if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n\n      // set query condition\n      var cond = {\n         where: wheres || {},\n         // limit: limit || 20,\n         skip: start || 0,\n         sort: sorts,\n         populate:\n            this.settings.populate ??\n            (this.settings.preventPopulate ? false : true),\n      };\n\n      //// NOTE: we no longer set a default limit on loadData() but\n      //// require the platform.loadData() to pass in a default limit.\n      if (limit != null) {\n         cond.limit = limit;\n      }\n\n      // if settings specify loadAll, then remove the limit\n      if (this.settings.loadAll && !this.isCursorFollow) {\n         delete cond.limit;\n      }\n\n      //\n      // Step 1: make sure any DataCollections we are linked to are\n      // initialized first.  Then proceed with our initialization.\n      //\n      const parentDc = this.datacollectionLink ?? this.datacollectionFollow;\n      // If we are linked to another datacollection then wait for it\n      if (parentDc) {\n         await this.waitForDataCollectionToInitialize(parentDc);\n      }\n\n      //\n      // Step 2: if we have any filter rules that depend on other DataCollections,\n      // then wait for them to be initialized first.\n      // eg: \"(not_)in_data_collection\" rule filters\n      if (wheres?.rules?.length) {\n         const dcFilters = [];\n\n         wheres.rules.forEach((rule) => {\n            // if this collection is filtered by data collections we need to load them in case we need to validate from them later\n            if (\n               rule.rule == \"in_data_collection\" ||\n               rule.rule == \"not_in_data_collection\"\n            ) {\n               const dv = this.AB.datacollectionByID(rule.value);\n               if (dv) {\n                  dcFilters.push(this.waitForDataCollectionToInitialize(dv));\n               }\n            }\n         });\n\n         await Promise.all(dcFilters);\n      }\n\n      //\n      // Step 3: pull data to data collection\n      // we will keep track of the resolve, reject for this\n      // operation.\n      // the actual resolve() should happen in the\n      // .processIncomingData() after the  data is processed.\n      return new Promise((resolve, reject) => {\n         this._pendingLoadDataResolve = {\n            resolve: resolve,\n            reject: reject,\n         };\n\n         this.platformFind(model, cond).catch((err) => {\n            reject(err);\n         });\n      });\n   }\n\n   platformFind(model, cond) {\n      //// Core Migration Note:\n      //// the ABViewDataCollectionCore now manages data in a different way:\n      //// local data  vs  Remote Data\n      //// this will need to be updated to reflect that management:\n      //// (and also explains why we refactored things into .processIncomingData())\n      return model.findAll(cond).then((data) => {\n         return this.processIncomingData(data);\n      });\n   }\n\n   /**\n    * @method queuedParse()\n    * This is an attempt at loading very large datasets into a Webix DC without locking up\n    * the display.\n    * @param {array} data\n    *        The data to load into the __dataCollection\n    * @param {callback} cb\n    *        A callback to call when the data has been fully loaded.\n    */\n   async queuedParse(incomingData, cb) {\n      const data = incomingData?.data || incomingData;\n      if (!data?.length) {\n         cb?.();\n         return Promise.resolve();\n      }\n\n      const total_count = incomingData.total_count;\n\n      let nextData;\n      if (data.length > 250) {\n         let pos = this.__dataCollection.count();\n         let remain = data.splice(250);\n         nextData = {\n            data: remain,\n            pos: pos + data.length,\n            total_count,\n         };\n      }\n\n      const parsedData = {\n         data,\n         pos: incomingData.pos,\n         total_count,\n      };\n      this.__dataCollection.parse(parsedData);\n\n      return new Promise((resolve) => {\n         setTimeout(async () => {\n            await this.queuedParse(nextData);\n            cb?.();\n            resolve();\n         }, 15);\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      return Promise.resolve().then(() => {\n         // store total count\n         this.__totalCount = data.total_count;\n\n         // Need to .parse at the first time\n         if (!this.__dataCollection.find({}).length) {\n            this.__dataCollection.clearAll();\n            // this.__dataCollection.parse(data);\n         }\n\n         if (this.__throttleIncoming) clearTimeout(this.__throttleIncoming);\n         this.__throttleIncoming = setTimeout(async () => {\n            // using queuedParse() to responsively handle large datasets.\n            await this.queuedParse(data);\n\n            // In order to get the total_count updated I had to use .load()\n            this.__dataCollection.load(async () => {\n               setTimeout(() => {\n                  this.refreshLinkCursor();\n               }, 250);\n\n               return {\n                  // NOTE: return a empty array to prevent render items in DataTable twice. (Items are rendered in .queuedParse function)\n                  data: [],\n                  pos: data.pos,\n                  total_count: data.total_count,\n               };\n            });\n\n            // this does nothing???\n            this.parseTreeCollection(data);\n\n            // if we are linked, then refresh our cursor\n            var linkDv = this.datacollectionLink;\n            if (linkDv) {\n               // filter data by match link data collection\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            } else {\n               // set static cursor\n               this.setStaticCursor();\n            }\n\n            // now we close out our .loadData() promise.resolve() :\n            if (this._pendingLoadDataResolve) {\n               this._pendingLoadDataResolve.resolve();\n\n               // after we call .resolve() stop tracking this:\n               this._pendingLoadDataResolve = null;\n            }\n\n            // If dc set load all, then it will not trigger .loadData in dc at\n            // .onAfterLoad event\n            if (this.settings.loadAll) {\n               this.emit(\"loadData\", {});\n            }\n\n            // mark initialized data\n            if (this._dataStatus != this.dataStatusFlag.initialized) {\n               this._dataStatus = this.dataStatusFlag.initialized;\n               this.emit(\"initializedData\", {});\n            }\n         }, 100);\n      });\n   }\n\n   /**\n    * @method reloadData()\n    * Trigger the DataCollection to reload its data from the server.\n    * @param {int} start\n    *        Start position of where we want the data to load.\n    * @param {int} limit\n    *        How many entries to load at a time.\n    * @return {Promise}\n    */\n   reloadData(start, limit) {\n      // var waitForDataCollectionToInitialize = (DC) => {\n      //    return new Promise((resolve, reject) => {\n      //       switch (DC.dataStatus) {\n      //          // if that DC hasn't started initializing yet, start it!\n      //          case DC.dataStatusFlag.notInitial:\n      //             DC.loadData().catch(reject);\n      //          // no break;\n\n      //          // once in the process of initializing\n      //          /* eslint-disable no-fallthrough*/\n      //          case DC.dataStatusFlag.initializing:\n      //             /* eslint-enable no-fallthrough*/\n      //             // listen for \"initializedData\" event from the DC\n      //             // then we can continue.\n      //             this.eventAdd({\n      //                emitter: DC,\n      //                eventName: \"initializedData\",\n      //                listener: () => {\n      //                   // go next\n      //                   resolve();\n      //                },\n      //             });\n      //             break;\n\n      //          // if it is already initialized, we can continue:\n      //          case DC.dataStatusFlag.initialized:\n      //             resolve();\n      //             break;\n\n      //          // just in case, if the status is not known, just continue\n      //          default:\n      //             resolve();\n      //             break;\n      //       }\n      //    });\n      // };\n\n      return Promise.resolve().then(() => {\n         // check if we are currently waiting for more data requests on this datacollection before continuing\n         if (this.reloadTimer) {\n            // if we are already waiting delete the current timer\n            clearTimeout(this.reloadTimer);\n            delete this.reloadTimer;\n         }\n\n         // return a promise\n         if (!this.reloadPromise) {\n            this.reloadPromise = new Promise((resolve, reject) => {\n               this.reloadPromise__resolve = resolve;\n               this.reloadPromise__reject = reject;\n            });\n         }\n\n         // then create a new timeout to delete current timeout, clear data\n         // and load new\n         this.reloadTimer = setTimeout(() => {\n            // clear the data from the dataCollection,\n            this.clearAll();\n            // then loads new data from the server\n            return this.loadData(start, limit)\n               .then(() => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__resolve();\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               })\n               .catch((err) => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__reject(err);\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               });\n         }, 50);\n         // setting to 50ms because right now we do not see many\n         // concurrent calls,  we need to increase this if we begin to\n\n         return this.reloadPromise;\n      });\n   }\n\n   /**\n    * reloadWheres()\n    * stores the child data collections filters for subsequent loads.\n    * It is called from bindParentDc() when child data collections that are not\n    * marked to load all data are initializing. To do this we use webix\n    * server side binding by setting the param of \"dataFeed\".\n    * @param {obj} wheres  the new filters for the data collection\n    *        This is a combination of any exisiting filters the data collection\n    *        alreay had as well as the filter for the current cursor set by the\n    *        master data collection. We store this in __reloadWheres for when\n    *        the data needs to be updated.\n    *        The format of the wheres is our Query Builder Format\n    *        ex: {\n    *              \"glue\": \"and\",\n    *              \"rules\": [{\n    *                \"key\": \"33ba8957-6b9c-4ddb-9533-c46b13878ae1\",\n    *                \"rule\": \"contains\",\n    *                \"value\": \"1594176994894\"\n    *              }]\n    *            }\n    */\n   reloadWheres(wheres) {\n      this.__reloadWheres = wheres;\n   }\n\n   getData(filter) {\n      var dc = this.__dataCollection;\n      if (dc) {\n         return dc.find((row) => {\n            let isValid = true;\n\n            // data collection filter\n            // isValid = this.isValidData(row);\n\n            // NOTE: data are filtered from the server side (webix.dataFeed)\n            // parent dc filter\n            let linkDv = this.datacollectionLink;\n            if (linkDv && this.settings.loadAll && isValid) {\n               isValid = this.isParentFilterValid(row);\n            }\n\n            // addition filter\n            if (isValid && filter) {\n               isValid = filter(row);\n            }\n\n            return isValid;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   isParentFilterValid(rowData) {\n      // data is empty\n      if (rowData == null) return false;\n\n      var linkDv = this.datacollectionLink;\n      if (linkDv == null) return true;\n\n      const linkObj = linkDv.datasource;\n      if (linkObj == null) return true;\n\n      var fieldLink = this.fieldLink;\n      if (fieldLink == null) return true;\n\n      // if the parent's cursor is not set we have not filted this collection\n      // yet so the data that comes back should be valid\n      var linkCursor = linkDv.getCursor();\n      if (linkCursor == null) {\n         return true;\n      }\n\n      var linkVal = rowData[fieldLink.relationName()];\n      if (linkVal == null) {\n         // try to get relation value(id) again\n         if (rowData[fieldLink.columnName]) {\n            linkVal = rowData[fieldLink.columnName];\n         } else {\n            return false;\n         }\n      }\n\n      let PK = fieldLink.object.PK();\n\n      // array - 1:M , M:N\n      if (linkVal.filter) {\n         return (\n            linkVal.filter(\n               (val) =>\n                  (val[PK] || val.id || val) ==\n                  (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n            ).length > 0\n         );\n      } else {\n         return (\n            (linkVal[PK] || linkVal.id || linkVal) ==\n            (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n         );\n      }\n   }\n\n   clearAll() {\n      if (this.__dataCollection) this.__dataCollection.clearAll();\n\n      if (this.__treeCollection) this.__treeCollection.clearAll();\n\n      this._dataStatus = this.dataStatusFlag.notInitial;\n   }\n\n   get totalCount() {\n      return this.__totalCount || 0;\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method bind\n    * @param {Object} component - a webix element instance\n    */\n   bind(/* component */) {\n      console.error(\"Platform.ABDataCollection.bind() Not implemented\");\n   }\n\n   unbind(/* component */) {\n      console.error(\"Platform.ABDataCollection.unbind() Not implemented\");\n   }\n\n   removeComponent(comId) {\n      // get index\n      let index = this.__bindComponentIds.indexOf(comId);\n\n      // delete\n      this.__bindComponentIds.splice(index, 1);\n   }\n\n   /**\n    * @method refreshFilterConditions()\n    * This is called in two primary cases:\n    *    - on initialization of a DC to setup our filters.\n    *    - in the operation of the ABDesigner when using a DC to display data\n    *      in the Work_object_grid and the datacollection_work(?)\n    * In the case of the ABDesigner, new temporary where conditions are provided\n    * from the possible filters we can set, and those need to effect the data\n    * we display.\n    * @param {ABRowFilter.where} wheres\n    *        The filter condition from the ABRowFilter values we are storing.\n    */\n   refreshFilterConditions(wheres = null) {\n      // There are 3 Filters that help us know if our data is Valid:\n      // 1) A filter for any ABObjectQuery we are managing.\n      // 2) A filter for our own filter condition\n      // 3) A filter that represents what our scopes allows\n\n      // Set filter of ABObject\n      if (this.__filterDatasource == null)\n         this.__filterDatasource = this.AB.filterComplexNew(\n            `${this.id}_filterDatasource`\n         );\n\n      if (this.datasource) {\n         // this.__filterDatasource.applicationLoad(this.datasource.application);\n         this.__filterDatasource.fieldsLoad(this.datasource.fields());\n\n         let filterConditions;\n\n         // Query\n         if (this.datasource instanceof this.AB.Class.ABObjectQuery) {\n            filterConditions = this.datasource.where;\n         }\n         // Apr 29, 2021 Removed this because we do not want Object filters to\n         // effect validation of DataCollections\n         // Object\n\n         // else if (this.datasource instanceof ABObject) {\n         //    let currentView = this.datasource.currentView();\n         //    if (currentView && currentView.filterConditions)\n         //       filterConditions = currentView.filterConditions;\n         // }\n\n         if (filterConditions)\n            this.__filterDatasource.setValue(filterConditions);\n         else this.__filterDatasource.setValue({});\n      } else {\n         this.__filterDatasource.fieldsLoad([]);\n         this.__filterDatasource.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of data view\n      // Apr 29, 2021 Added this code back to validate with DataCollection Filters\n      if (this.__filterDatacollection == null)\n         this.__filterDatacollection = this.AB.filterComplexNew(\n            `${this.id}_filterDatacollection`\n         );\n\n      // this.__filterDatacollection.applicationLoad(\n      //    this.datasource ? this.datasource.application : null\n      // );\n      this.__filterDatacollection.fieldsLoad(\n         this.datasource ? this.datasource.fields() : []\n      );\n\n      if (wheres) this.settings.objectWorkspace.filterConditions = wheres;\n\n      if (\n         this.settings &&\n         this.settings.objectWorkspace &&\n         this.settings.objectWorkspace.filterConditions\n      ) {\n         this.__filterDatacollection.setValue(\n            this.settings.objectWorkspace.filterConditions\n         );\n      } else {\n         this.__filterDatacollection.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of user's scope\n      if (this.__filterScope == null)\n         this.__filterScope = this.AB.filterComplexNew(\n            `${this.id}_filterScope`\n         );\n\n      if (this.datasource) {\n         let scopeList = (this.userScopes || []).filter(\n            (s) =>\n               !s.allowAll &&\n               (s.objectIds || []).indexOf(this.datasource.id) > -1\n         );\n         if (scopeList && scopeList.length > 0) {\n            // this.__filterScope.applicationLoad(this.datasource.application);\n            this.__filterScope.fieldsLoad(this.datasource.fields() || []);\n\n            // concat all rules of scopes\n            let scopeRules = [];\n            scopeList\n               .filter(\n                  (s) => s.filter && s.filter.rules && s.filter.rules.length\n               )\n               .forEach((s) => {\n                  let sRules = (s.filter.rules || []).filter(\n                     (r) =>\n                        this.datasource.fields((f) => f.id == r.key).length > 0\n                  );\n\n                  scopeRules = scopeRules.concat(sRules);\n               });\n\n            let scopeWhere = {\n               glue: \"or\",\n               rules: scopeRules,\n            };\n            this.__filterScope.setValue(scopeWhere);\n         }\n      }\n   }\n\n   get isGroup() {\n      return this.__isGroup || false;\n   }\n\n   ///\n   /// Sync type\n   ///\n\n   get syncTypeFlag() {\n      return {\n         server: 1,\n         client: 2,\n      };\n   }\n\n   get syncType() {\n      return this.settings.syncType || DefaultValues.syncType;\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(/*data*/) {\n      var error = new Error(\n         \"the platform.ABDataCollection._dataCollectionNew() is expected to return a proper DataCollection!\"\n      );\n      console.error(error);\n      return null;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      console.error(\n         \"the platform.ABDataCollection._treeCollectionNew() is expected to return a proper TreeCollection!\"\n      );\n      return null;\n   }\n\n   parseTreeCollection(data = {}) {\n      // TODO all this does is log \"is missing?\"\n      if (data === {}) {\n         console.log(\n            \"Platform.ABDataCollection.parseTreeCollection() missing!\"\n         );\n      }\n   }\n   // parseTreeCollection(data = {}) {\n\n   //  if (!(this.__datasource instanceof ABObjectQuery) ||\n   //    !this.__datasource.isGroup ||\n   //    !this.__treeCollection)\n   //    return;\n\n   //  let addRowToTree = (join = {}, parentAlias = null) => {\n\n   //    let alias = join.alias;\n\n   //    (data.data || []).forEach(row => {\n\n   //      let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n   //      if (!dataId) return;\n\n   //      // find parent nodes\n   //      let parentItemIds = [];\n   //      let parentId = row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n   //      if (parentId) {\n   //        parentItemIds = this.__treeCollection\n   //          .find(item => item._alias == parentAlias && item._dataId == parentId)\n   //          .map(item => item.id);\n   //      }\n\n   //      // check exists\n   //      let exists = this.__treeCollection.find(item => {\n   //        return item._alias == alias &&\n   //          item._dataId == dataId &&\n   //          (parentItemIds.length == 0 || parentItemIds.indexOf(item.$parent) > -1);\n   //      }, true);\n   //      if (exists) return;\n\n   //      let treeNode = {};\n   //      treeNode._alias = alias;\n   //      treeNode._dataId = dataId;\n   //      treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n   //      Object.keys(row).forEach(propName => {\n\n   //        // Pull value from alias\n   //        if (propName.indexOf(`${alias}.`) == 0) {\n   //          treeNode[propName] = row[propName];\n   //        }\n\n   //      });\n\n   //      if (row.translations)\n   //        treeNode.translations = row.translations;\n\n   //      // child nodes\n   //      if (parentItemIds.length > 0)\n   //        parentItemIds.forEach(parentItemId => {\n   //          this.__treeCollection.add(treeNode, null, parentItemId);\n   //        });\n   //      // root node\n   //      else\n   //        this.__treeCollection.add(treeNode, null);\n\n   //    });\n\n   //    // Sub-joins\n   //    (join.links || []).forEach(link => {\n   //      addRowToTree(link, alias);\n   //    });\n\n   //  };\n\n   //  // Show loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.showProgress)\n   //      boundComp.showProgress({ type: \"icon\" });\n\n   //  });\n\n   //  addRowToTree(this.__datasource.joins());\n\n   //  // Hide loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.hideProgress)\n   //      boundComp.hideProgress();\n\n   //  })\n   // }\n\n   /**\n    * @method _queryUpdateData\n    *\n    * @param {Array} objList - List of ABObject\n    * @param {Object} values\n    */\n   _queryUpdateData(objList, values) {\n      let updatedVals = {};\n\n      // Add alias to properties of update data\n      Object.keys(values).forEach((key) => {\n         objList.forEach((oItem) => {\n            let alias = this.datasource.objectAlias(oItem.id);\n\n            updatedVals[`${alias}.${key}`] = values[key];\n\n            // Add alias to properties of .translations\n            if (\n               key == \"translations\" &&\n               values[\"translations\"] &&\n               values[\"translations\"].length\n            ) {\n               updatedVals.translations = [];\n\n               values[\"translations\"].forEach((tran) => {\n                  let updatedTran = {};\n\n                  Object.keys(tran).forEach((tranKey) => {\n                     if (tranKey == \"language_code\")\n                        updatedTran[\"language_code\"] = tran[\"language_code\"];\n                     else updatedTran[`${alias}.${tranKey}`] = tran[tranKey];\n                  });\n\n                  updatedVals.translations.push(updatedTran);\n               });\n            }\n         });\n      });\n\n      return updatedVals;\n   }\n\n   isValidData(rowData) {\n      let result = true;\n\n      // NOTE: should we use filter of the current view of object to filter\n      //        if yes, update .wheres condition in .loadData too\n      if (this.__filterDatasource)\n         result = result && this.__filterDatasource.isValid(rowData);\n\n      if (this.__filterDatacollection)\n         result = result && this.__filterDatacollection.isValid(rowData);\n\n      if (result && this.__filterScope)\n         result = result && this.__filterScope.isValid(rowData);\n\n      return result;\n   }\n\n   // Clone\n\n   clone(settings) {\n      settings = settings || this.toObj();\n      var clonedDatacollection = new this.constructor(settings, this.AB);\n      clonedDatacollection.__datasource = this.__datasource;\n      clonedDatacollection._dataStatus = this._dataStatus;\n\n      // clonedDatacollection.__dataCollection = this.__dataCollection.copy();\n      clonedDatacollection.__filterDatacollection.setValue(\n         settings.settings.objectWorkspace.filterConditions\n      );\n\n      var parseMe = () => {\n         if (clonedDatacollection.__dataCollection) {\n            clonedDatacollection.__dataCollection.parse(\n               this.__dataCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n         if (clonedDatacollection.__treeCollection) {\n            clonedDatacollection.__treeCollection.parse(\n               this.__treeCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n      };\n\n      parseMe();\n\n      // return new Promise((resolve, reject) => {\n      //    // load the data\n      //    clonedDatacollection\n      //       .loadData()\n      //       .then(() => {\n\n      // set the cursor\n      clonedDatacollection.setStaticCursor();\n\n      var cursorID = this.getCursor();\n      if (cursorID) {\n         // NOTE: webix documentation issue: .getCursor() is supposed to return\n         // the .id of the item.  However it seems to be returning the {obj}\n         if (cursorID.id) cursorID = cursorID.id;\n\n         clonedDatacollection.setCursor(cursorID);\n      }\n\n      return clonedDatacollection;\n\n      // resolve(clonedDatacollection);\n      //       })\n      //       .catch(reject);\n      // });\n   }\n\n   filteredClone(filters) {\n      var obj = this.toObj();\n\n      // check to see that filters are set (this is sometimes helpful to select the first record without doing so at the data collection level)\n      if (filters?.rules?.length) {\n         if (obj.settings.objectWorkspace.filterConditions?.rules?.length) {\n            obj.settings.objectWorkspace.filterConditions.rules =\n               obj.settings.objectWorkspace.filterConditions.rules.concat(\n                  filters.rules\n               );\n         } else {\n            obj.settings.objectWorkspace.filterConditions = filters;\n         }\n      }\n      let clonedDC = this.clone(obj);\n      return clonedDC; // new ABViewDataCollection(settings, this.application, this.parent);\n   }\n\n   //\n   // Event handles\n   //\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    *              emitter: object,\n    *              eventName: string,\n    *              listener: function\n    *            }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      this.__events = this.__events || [];\n\n      let exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    */\n   eventClear() {\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method eventRemove()\n    * unsubscribe a event.\n    *\n    */\n   eventRemove(eventName) {\n      if (this.__events?.length > 0 && eventName) {\n         this.__events.forEach((e) => {\n            if (eventName == e.eventName)\n               e.emitter.removeListener(e.eventName, e.listener);\n         });\n\n         this.__events = this.__events.filter((e) => e.eventName != eventName);\n      }\n   }\n\n   get userScopes() {\n      return [];\n   }\n\n   get isCursorFollow() {\n      return (\n         this.settings.followDatacollectionID &&\n         (!this.settings.linkDatacollectionID || !this.settings.linkFieldID)\n      );\n   }\n\n   get datacollectionFollow() {\n      if (!this.isCursorFollow) return null;\n\n      return (this.AB ?? AB).datacollectionByID(\n         this.settings.followDatacollectionID\n      );\n   }\n\n   get previousCursorId() {\n      return this.__previousCursorId;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nmodule.exports = class ABDefinitionCore {\n   constructor(attributes, AB) {\n      this.AB = AB;\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\ttype: 'xxxxx',\n\t\t\tjson: \"{json}\"\n\t\t}\n\t\t*/\n      if (attributes.id) {\n         this.id = attributes.id;\n      }\n      this.name =\n         attributes?.name ||\n         attributes?.json?.name ||\n         attributes?.json?.label ||\n         attributes?.json?.translations?.[0]?.label ||\n         \"\";\n      if (!this.name) {\n         this.AB.notify.builder(\n            new Error(\"Attributes for definition had no 'name'\"),\n            {\n               context: \"ABDefinitionCore.fromValues()\",\n               attributes,\n            }\n         );\n      }\n      this.type = attributes.type || attributes?.json?.type || \"\";\n      this.json = attributes.json || null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.json,\n      };\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABDefinition\n    * Also remove it from our parent application\n    * @return {Promise}\n    */\n   destroy() {\n      return this.AB.definitionDestroy(this.id);\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   async save() {\n      if (this.id) {\n         return this.AB.definitionUpdate(this.id, this.toObj());\n      } else {\n         return this.AB.definitionCreate(this.toObj());\n      }\n   }\n};\n","/*\n * ABFactoryCore\n * an object that contains the definitions and references for a single tenant.\n * It is expected that an instance of this should be returned from an\n * ABBootstrap.init(req).then((AB)=>{}) call.\n */\n\n// const _ = require(\"lodash\");\n// const uuidv4 = require(\"uuid\");\n\nconst ABApplication = require(\"../platform/ABApplication\");\nconst ABApplicationMobile = require(\"../platform/ABApplicationMobile\");\nconst ABDefinition = require(\"../platform/ABDefinition\");\n\nconst ABComponent = require(\"../platform/ABComponent\");\n\nconst ABFieldManager = require(\"./ABFieldManager\");\n\nconst ABIndex = require(\"../platform/ABIndex\");\nconst ABObject = require(\"../platform/ABObject\");\nconst ABObjectExternal = require(\"../platform/ABObjectExternal\");\nconst ABObjectImport = require(\"../platform/ABObjectImport\");\nconst ABObjectApi = require(\"../platform/ABObjectApi\");\nconst ABDataCollection = require(\"../platform/ABDataCollection\");\nconst ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\nconst ABHint = require(\"../platform/ABHint\");\nconst ABProcess = require(\"../platform/ABProcess\");\n\nconst ABProcessParticipant = require(\"../platform/process/ABProcessParticipant\");\nconst ABProcessLane = require(\"../platform/process/ABProcessLane\");\nconst ABProcessTaskManager = require(\"./process/ABProcessTaskManager\");\n\nconst ABStep = require(\"../platform/ABStep\");\n\nconst ABViewDetailItem = require(\"../platform/views/ABViewDetailItem\");\nconst ABViewFormItem = require(\"../platform/views/ABViewFormItem\");\nconst ABMobileViewFormItem = require(\"../platform/mobile/ABMobileViewFormItem\");\n\n// const ABObjectWorkspaceViewGrid = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGrid\");\n// const ABObjectWorkspaceViewKanban = require(\"../platform/workspaceViews/ABObjectWorkspaceViewKanban\");\n// const ABObjectWorkspaceViewGantt = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGantt\");\n\nconst RowFilter = require(\"../platform/RowFilter\");\nconst FilterComplex = require(\"../platform/FilterComplex\");\n\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\nconst EventEmitter = require(\"../platform/ABEmitter\");\n\nclass ABFactory extends EventEmitter {\n   constructor(definitions) {\n      /**\n       * @param {hash} definitions\n       *        { ABDefinition.id : {ABDefinition} }\n       *        of all the definitions defined for the current Tenant\n       */\n\n      super();\n      this.setMaxListeners(0);\n\n      this._definitions = definitions || {};\n      // {hash}  { ABDefinition.id : {ABDefinition} }\n      // ensure ._definitions is a HASH{ ID : {ABDefinition}}\n      if (Array.isArray(definitions)) {\n         var hash = {};\n         definitions.forEach((d) => {\n            hash[d.id] = d;\n         });\n         this._definitions = hash;\n      }\n\n      //\n      //\n      // Manage our working objects\n      //\n\n      this._allApplications = [];\n      // {array} of all the ABApplication(s) in our site.\n\n      this._allObjects = [];\n      // {array} of all the ABObject(s) in our site.\n\n      this._allHints = [];\n      // {array} of all the ABHint(s) in our site.\n\n      this._allProcesses = [];\n      // {array} of all the ABProcess(s) in our site.\n\n      this._allQueries = [];\n      // {array} of all the ABObjectQuery(s) in our site.\n\n      this._allSteps = [];\n      // {array} of all the ABStep(s) in our site.\n\n      this._allDatacollections = [];\n      // {array} of all the ABDataCollection(s) in our site.\n\n      //\n      // Class References\n      //\n      this.Class = {\n         ABApplication,\n         ABComponent,\n         ABDefinition,\n         ABFieldManager,\n         ABIndex,\n         ABMLClass,\n         ABObject,\n         ABObjectExternal,\n         ABObjectImport,\n         ABObjectApi,\n         ABObjectQuery,\n         ABProcessParticipant,\n         // ABRole      // Do we need this anymore?\n\n         // ABObjectWorkspaceViewGrid,\n         // ABObjectWorkspaceViewKanban,\n         // ABObjectWorkspaceViewGantt,\n\n         ABProcessTaskManager,\n\n         ABViewDetailItem,\n         ABViewFormItem,\n         ABMobileViewFormItem,\n      };\n\n      //\n      // Rules\n      // These are a common set of \"rules\" for all platforms.\n      //\n      this.rules = {\n         /**\n          * @method AB.rules.isUUID\n          * evaluate a given value to see if it matches the format of a uuid\n          * @param {string} key\n          * @return {boolean}\n          */\n         isUUID: function (key) {\n            var checker = RegExp(\n               \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n               \"i\"\n            );\n            return checker.test(key);\n         },\n\n         /**\n          * @method AB.rules.nameFilter()\n          * return a properly formatted name for an AppBuilder object.\n          * @param {string} name\n          *        The name of the object we are conditioning.\n          * @return {string}\n          */\n         nameFilter: function (name) {\n            return String(name).replace(/[^a-z0-9_.]/gi, \"\");\n         },\n\n         /**\n          * @method AB.rules.toApplicationNameFormat()\n          * return a properly formatted Application Name\n          * @param {string} name\n          *        The name of the Application we are conditioning.\n          * @return {string}\n          */\n         toApplicationNameFormat: function (name) {\n            return \"AB_\" + this.nameFilter(name);\n         },\n\n         /**\n          * @method AB.rules.toFieldRelationFormat()\n          * This function uses for define relation name of Knex Objection\n          * return a relation name of column\n          * @param {string} colName\n          *        The name of the Column\n          * @return {string}\n          */\n         toFieldRelationFormat: function (colName) {\n            return this.nameFilter(colName) + \"__relation\";\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableFK()\n          * return foriegnkey (FK) column name for a junction table name\n          * @param {string} objectName\n          *        The name of the Object with a connection\n          * @param {string} columnName\n          *        The name of the connection columnName.\n          * @return {string}\n          */\n         toJunctionTableFK: function (objectName, columnName) {\n            var fkName = objectName + \"_\" + columnName;\n\n            if (fkName.length > 64) fkName = fkName.substring(0, 64);\n\n            return fkName;\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableNameFormat()\n          * return many-to-many junction table name\n          * @param {string} appName\n          *        The name of the Application for this object\n          * @param {string} sourceTableName\n          *        The name of the source object we are conditioning.\n          * @param {string} targetTableName\n          *        The name of the target object we are conditioning.\n          * @param {string} colName\n          * @return {string}\n          */\n         toJunctionTableNameFormat: function (\n            appName,\n            sourceTableName,\n            targetTableName,\n            colName\n         ) {\n            // The maximum length of a table name in MySql is 64 characters\n            appName = this.toApplicationNameFormat(appName);\n            if (appName.length > 17) appName = appName.substring(0, 17);\n\n            if (sourceTableName.length > 15)\n               sourceTableName = sourceTableName.substring(0, 15);\n\n            if (targetTableName.length > 15)\n               targetTableName = targetTableName.substring(0, 15);\n\n            colName = this.nameFilter(colName);\n            if (colName.length > 14) colName = colName.substring(0, 14);\n\n            return \"{appName}_{sourceName}_{targetName}_{colName}\"\n               .replace(\"{appName}\", appName)\n               .replace(\"{sourceName}\", sourceTableName)\n               .replace(\"{targetName}\", targetTableName)\n               .replace(\"{colName}\", colName);\n         },\n\n         /**\n          * @method AB.rules.toObjectNameFormat\n          * return a properly formatted Object/Table Name\n          * @param {string} objectName\n          *        The {ABObject}.name of the Object we are conditioning.\n          * @return {string}\n          */\n         toObjectNameFormat: function (objectName) {\n            return `AB_${this.nameFilter(objectName)}`;\n         },\n      };\n\n      // Notify Helpers\n      this.notify.builder = (...params) => {\n         this.notify(\"builder\", ...params);\n      };\n\n      this.notify.developer = (...params) => {\n         this.notify(\"developer\", ...params);\n      };\n   }\n\n   /**\n    * @method definitionClean()\n    * make sure the provided ABDefinition values are properly formatted\n    * @param {ABDefinition} d\n    *        The json settings of an ABDefinition object.\n    */\n   definitionClean(d) {\n      if (typeof d.json == \"string\") {\n         try {\n            d.json = JSON.parse(d.json);\n         } catch (e) {\n            console.log(e);\n            console.error(` Error on definition id[${d.id}]`);\n         }\n      }\n   }\n\n   init() {\n      let allDefinitions = Object.keys(this._definitions).map(\n         (k) => this._definitions[k]\n      );\n      // {array} all our definitions in an Array format.\n\n      // make sure our definitions.json field is an {} and not string\n      allDefinitions.forEach((d) => {\n         this.definitionClean(d);\n      });\n\n      // perform these in order:\n      [\n         \"object\",\n         \"query\",\n         \"datacollection\",\n         \"process\",\n         \"hint\",\n         \"step\",\n         \"application\",\n      ].forEach((type) => {\n         var objTypes = allDefinitions.filter((d) => d.type == type);\n         objTypes.forEach((def) => {\n            let { keyList, keyFn } = this.objectKeysByDef(def);\n            if (keyList) {\n               this[keyList].push(this[keyFn](def.json));\n            }\n         });\n      });\n\n      this.emit(\"init.objects_ready\");\n      return Promise.resolve();\n   }\n\n   /**\n    * @method objectKeysByDef()\n    * Analyze the provided ABDefinition json and return which set of list and\n    * functions are used to create a new instance of this definition.\n    * @param {json} def\n    *        the ABDefinition json of the definition we are evaluating\n    * @return { keyList, keyFn }\n    *        keyList: {string}  which of our internal lists to store this new\n    *                 object.\n    *        keyFn: {string} which of our methods to call with the def.json\n    *               as the param that will create the new object.\n    *\n    *        ex:  this[keyList].push( this[keyFn](def.json));\n    *\n    *        if this def is not one of the types we track,\n    *        keyList = keyFn = null;\n    */\n   objectKeysByDef(def) {\n      switch (def.type) {\n         case \"application\":\n            return { keyList: \"_allApplications\", keyFn: \"applicationNew\" };\n\n         case \"datacollection\":\n            return {\n               keyList: \"_allDatacollections\",\n               keyFn: \"datacollectionNew\",\n            };\n\n         case \"hint\":\n            return { keyList: \"_allHints\", keyFn: \"hintNew\" };\n\n         case \"steps\":\n            return { keyList: \"_allSteps\", keyFn: \"stepNew\" };\n\n         case \"object\":\n            return { keyList: \"_allObjects\", keyFn: \"objectNew\" };\n\n         case \"process\":\n            return { keyList: \"_allProcesses\", keyFn: \"processNew\" };\n\n         case \"query\":\n            return { keyList: \"_allQueries\", keyFn: \"queryNew\" };\n\n         default:\n            // we don't manage any other\n            return { keyList: null, keyFn: null };\n      }\n   }\n\n   //\n   // Definitions\n   //\n\n   /**\n    * definitionByID(id)\n    * return an ABDefinition.json value ready for our objects to use.\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @param {bool} isRaw\n    *        indicates if we want the full ABDefinition, or the .json param\n    *        true : returns full ABDefinition value.\n    *        false: returns the .json parameter used by most ABObjects.\n    * @return {Promise}\n    */\n   definitionByID(id, isRaw = false) {\n      if (this._definitions[id]) {\n         if (isRaw) {\n            return this._definitions[id];\n         } else {\n            return this._definitions[id].json;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * definitionNew(values)\n    * return an ABDefinition object tied to this Tenant.\n    * @param {obj} values\n    *        The value hash of the ABDefinition object to create.\n    * @return {ABDefinition}\n    */\n   definitionNew(values) {\n      return new ABDefinition(values, this);\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   definitionsParse(defs = []) {\n      if (!Array.isArray(defs)) {\n         defs = [defs];\n      }\n\n      // store/replace the incoming definitions\n      // 1st: insert ALL our definitions internally\n      defs.forEach((d) => {\n         this.definitionClean(d);\n         this._definitions[d.id] = d;\n      });\n      // 2nd: Now we can then go through and signal the \"updates\"\n      // and the related objects can find their dependent definitions.\n      defs.forEach((d) => {\n         this.definitionSync(\"updated\", d.id, d);\n      });\n\n      return Promise.resolve();\n   }\n\n   /**\n    * definitionSync()\n    * Synchronize an individual definition into our repository of definitions.\n    * @param {string} op\n    *        the type of synchronization this is\n    *        [ \"created\", \"updated\", \"destroyed\"]\n    * @param {uuid} id\n    *        the definition.id of the definition we are synchronizing\n    * @param {json} def\n    *        the ABDefinition attributes we are storing.\n    */\n   definitionSync(op, id, def) {\n      var { keyList, keyFn } = this.objectKeysByDef(def);\n      if (keyList) {\n         var curr;\n         switch (op) {\n            case \"created\":\n               this[keyList].push(this[keyFn](def.json));\n               this.emit(\"definition.created\", def.json);\n               break;\n\n            case \"updated\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n\n               // remove from list\n               this[keyList] = this[keyList].filter((d) => d.id != id);\n               // add new one:\n               this[keyList].push(this[keyFn](def.json));\n\n               // signal this object needs to be updated:\n               // NOTE: if this is one of the objects we are tracking,\n               // we don't need to this.emit() the message.\n               if (curr) {\n                  curr.emit(\"definition.updated\", def.json);\n               } else {\n                  this.emit(\"definition.updated\", def.json);\n               }\n               break;\n\n            case \"destroyed\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n               if (curr) {\n                  // remove from list\n                  this[keyList] = this[keyList].filter((d) => d.id != id);\n\n                  // signal this object needs to be updated:\n                  curr.emit(\"definition.deleted\", def.json);\n\n                  this.emit(\"definition.deleted\", def.json);\n               }\n               break;\n         }\n      }\n   }\n\n   //\n   // ABObjects\n   //\n   /**\n    * @method applications()\n    * return all the ABApplications that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABApplications.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   applications(fn = () => true) {\n      return (this._allApplications || []).filter(fn);\n   }\n\n   /**\n    * @method applicationByID()\n    * returns a single ABApplication that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABApplication we are searching\n    *        for.\n    * @return {ABApplication}\n    *        the matching ABApplication object if found\n    *        {null} if not found.\n    */\n   applicationByID(ID) {\n      return this.applications((a) => a.id == ID)[0];\n   }\n\n   /**\n    * @method applicationNew()\n    * Return a new instance of an ABApplication object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplication object we are\n    *        creating.\n    * @return {ABApplication}\n    */\n   applicationNew(values) {\n      // just in case we got here by mistake:\n      if (values.appType == \"mobile\") {\n         return this.applicationMobileNew(values);\n      }\n\n      return new ABApplication(values, this);\n   }\n\n   /**\n    * @method applicationMobileNew()\n    * Return a new instance of an ABApplicationMobile object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplicationMobile object we are\n    *        creating.\n    * @return {ABApplicationMobile}\n    */\n   applicationMobileNew(values) {\n      return new ABApplicationMobile(values, this);\n   }\n\n   /**\n    * @method datacollections()\n    * return an array of all the ABDataCollection for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABDataCollection that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABDataCollection\n    */\n   datacollections(filter = () => true) {\n      return (this._allDatacollections || []).filter(filter);\n   }\n\n   /**\n    * @method datacollectionByID()\n    * returns a single ABDatacollection that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABDatacollection we are searching\n    *        for.\n    * @return {ABDatacollection}\n    *        the matching ABDatacollection object if found\n    *        {null} if not found.\n    */\n   datacollectionByID(ID) {\n      // an undefined or null ID should not match any DC.\n      if (!ID) return null;\n\n      return this.datacollections((dc) => {\n         return dc.id == ID || dc.name == ID || dc.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method datacollectionNew()\n    * create a new instance of ABDataCollection\n    * @param {obj} values\n    *        the initial values for the DC\n    * @return {ABDatacollection}\n    */\n   datacollectionNew(values) {\n      var dc = new ABDataCollection(values, this);\n      dc.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allDatacollections = this._allDatacollections.filter(\n            (d) => d.id != dc.id\n         );\n      });\n      return dc;\n   }\n\n   /**\n    * @method fieldNew()\n    * return an instance of a new (unsaved) ABField that is tied to a given\n    * ABObject.\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    * @param {obj} values  the initial values for this field.\n    *                - { key:'{string}'} is required\n    * @param {ABObject} object  the parent object this field belongs to.\n    * @return {ABField}\n    */\n   fieldNew(values, object) {\n      // NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n      return ABFieldManager.newField(values, object);\n   }\n\n   /**\n    * @method indexNew()\n    * return an instance of a new (unsaved) ABIndex.\n    * @return {ABIndex}\n    */\n   indexNew(values, object) {\n      return new ABIndex(values, object);\n   }\n\n   /**\n    * @method Label()\n    * a simple label factory.\n    * It is expected to be called like this:\n    * @codestart\n    *    var L = AB.Label();\n    *    var outputText = L(\"Hello World\");\n    *    var o2 = L(\"I'm {0} years old\", [5]);\n    * @codeend\n    * @return {fn}\n    */\n   Label() {\n      return (key, altText, values = []) => {\n         var label = key;\n         if (altText) {\n            if (Array.isArray(altText)) {\n               values = altText;\n            } else {\n               label = altText;\n            }\n         }\n\n         values.forEach((v, i) => {\n            var sub = `{${i}}`;\n            label = label.replaceAll(sub, v);\n         });\n\n         return label;\n      };\n   }\n\n   /**\n    * @method objects()\n    * return an array of all the ABObjects for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjects that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObject\n    */\n   objects(filter = () => true) {\n      return (this._allObjects || []).filter(filter);\n   }\n\n   /**\n    * @method objectByID()\n    * return the specific object requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   objectByID(ID) {\n      return this.objects((o) => {\n         return o.id == ID || o.name == ID || o.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method objectNew()\n    * return an instance of a new (unsaved) ABObject that is tied to this\n    * ABApplication.\n    * NOTE: this new object is not included in our this.objects until a .save()\n    * is performed on the object.\n    * @return {ABObject}\n    */\n   objectNew(values) {\n      var newObj = null;\n\n      if (values.isExternal == true)\n         newObj = new ABObjectExternal(values, this);\n      else if (values.isImported == true)\n         newObj = new ABObjectImport(values, this);\n      else if (values.isAPI == true) newObj = new ABObjectApi(values, this);\n      else newObj = new ABObject(values, this);\n\n      /*\n      // IS THIS CORRECT?\n      newObj.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allObjects = this._allObjects.filter((o) => o.id != newObj.id);\n      });\n      */\n\n      return newObj;\n   }\n\n   objectFile() {\n      return this.objectByID(\"4a9d89c9-f4eb-41af-91e4-909eff389f3e\");\n   }\n\n   objectLanguage() {\n      return this.objectByID(\"d84cd351-d96c-490f-9afb-2a0b880ca0ec\");\n   }\n\n   objectProcessForm() {\n      return this.objectByID(\"d36ae4c8-edef-48d8-bd9c-79a0edcaa067\");\n   }\n\n   objectProcessInstance() {\n      return this.objectByID(\"2ba85be0-78db-4eda-ba43-c2c4e3831849\");\n   }\n\n   objectRole() {\n      return this.objectByID(\"c33692f3-26b7-4af3-a02e-139fb519296d\");\n   }\n\n   objectScope() {\n      return this.objectByID(\"af10e37c-9b3a-4dc6-a52a-85d52320b659\");\n   }\n\n   objectToken() {\n      return this.objectByID(\"08826ac7-4b33-4745-a3d7-f7831ca4ff59\");\n   }\n\n   objectUser() {\n      return this.objectByID(\"228e3d91-5e42-49ec-b37c-59323ae433a1\");\n   }\n\n   objectKey() {\n      return this.objectByID(\"d734fe8c-b615-446c-8a5f-793ddece19f9\");\n   }\n\n   objectSecret() {\n      return this.objectByID(\"db5b3b26-5300-4c92-bc73-8ce4f4696992\");\n   }\n\n   //\n   // Hints\n   //\n   /**\n    * @method hints()\n    * return all the ABHints that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABHints.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   hints(filter = () => true) {\n      return (this._allHints || []).filter(filter);\n   }\n\n   /**\n    * @method hintByID()\n    * return the specific hint requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   hintID(ID) {\n      return this.hints((h) => {\n         return h.id == ID || h.name == ID || h.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method hintNew()\n    * return an instance of a new (unsaved) ABHint that is tied to this\n    * ABApplication.\n    * NOTE: this new hint is not included in our this.hints until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   hintNew(values) {\n      var newHint = new ABHint(values, this);\n\n      return newHint;\n   }\n\n   //\n   // Steps\n   //\n   /**\n    * @method steps()\n    * return all the ABSteps that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABSteps.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   steps(filter = () => true) {\n      return (this._allSteps || []).filter(filter);\n   }\n\n   /**\n    * @method stepByID()\n    * return the specific step requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   stepID(ID) {\n      return this.steps((s) => {\n         return s.id == ID || s.name == ID || s.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method stepNew()\n    * return an instance of a new (unsaved) ABStep that is tied to this\n    * ABApplication.\n    * NOTE: this new step is not included in our this.steps until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   stepNew(id, hintID) {\n      var stepDef = this.definitionByID(id);\n      if (stepDef) {\n         var getStep = new ABStep(stepDef, this);\n         return getStep;\n      } else {\n         var params = {\n            settings: {\n               hint: hintID,\n            },\n         };\n         var newStep = new ABStep(params, this);\n         return newStep;\n      }\n      return null;\n   }\n\n   //\n   // Processes\n   //\n   /**\n    * @method processes()\n    * return all the ABProcess that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABProcess.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   processes(filter = () => true) {\n      return (this._allProcesses || []).filter(filter);\n   }\n\n   /**\n    * @method processByID()\n    * return the specific process requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   processByID(ID) {\n      return this.processes((p) => {\n         return p.id == ID || p.name == ID || p.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method processNew()\n    * Return a new instance of an ABProcess object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABProcess object we are\n    *        creating.\n    * @return {ABProcess}\n    */\n   processNew(values) {\n      return new ABProcess(values, this);\n   }\n\n   /**\n    * @method processElementNew(id)\n    * return an instance of a new ABProcessOBJ that is tied to a given\n    * ABProcess.\n    * @param {string} id\n    *        the ABDefinition.id of the element we are creating\n    * @param {ABProcess} process\n    *        the process this task is a part of.\n    * @return {ABProcessTask}\n    */\n   processElementNew(id, process) {\n      var taskDef = this.definitionByID(id);\n      if (taskDef) {\n         switch (taskDef.type) {\n            case ABProcessParticipant.defaults().type:\n               return new ABProcessParticipant(taskDef, process, this);\n            // break;\n\n            case ABProcessLane.defaults().type:\n               return new ABProcessLane(taskDef, process, this);\n            // break;\n\n            default:\n               // default to a Task\n               return ABProcessTaskManager.newTask(taskDef, process, this);\n            // break;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * @method processElementNewForModelDefinition(def)\n    *\n    * return an instance of a new ABProcess[OBJ] that is tied to the given\n    * BPMI:Element definition.\n    *\n    * @param {BPMI:Element} element the element definition from our BPMI\n    *              modler.\n    * @return {ABProcess[OBJ]}\n    */\n   processElementNewForModelDefinition(element, process) {\n      var newElement = null;\n\n      switch (element.type) {\n         case \"bpmn:Participant\":\n            newElement = new ABProcessParticipant({}, process, this);\n            break;\n\n         case \"bpmn:Lane\":\n            newElement = new ABProcessLane({}, process, this);\n            break;\n\n         default:\n            var defaultDef = ABProcessTaskManager.definitionForElement(element);\n            if (defaultDef) {\n               newElement = ABProcessTaskManager.newTask(\n                  defaultDef,\n                  process,\n                  this\n               );\n            }\n            break;\n      }\n\n      // now make sure this new Obj pulls any relevant info from the\n      // diagram element\n      if (newElement) {\n         newElement.fromElement(element);\n      }\n      return newElement;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery(s).\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjectQuery(s) that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObjectQuery\n    */\n   queries(filter = () => true) {\n      return (this._allQueries || []).filter(filter);\n   }\n   // queriesAll() {\n   //    console.error(\n   //       \"ABFactory.queriesAll() Depreciated! Use .queries() instead. \"\n   //    );\n   //    return this.queries();\n   // }\n\n   /**\n    * @method queryByID()\n    * return the specific query requested by the provided id.\n    * NOTE: this method has been extended to allow .name and .label\n    * as possible lookup values.\n    * @param {string} ID\n    * @return {ABObjectQuery}\n    */\n   queryByID(ID) {\n      return this.queries((q) => {\n         return q.id == ID || q.name == ID || q.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method queryNew()\n    * return an instance of a new (unsaved) ABObjectQuery that is tied to this\n    * ABFactory.\n    * @return {ABObjectQuery}\n    */\n   queryNew(values) {\n      return new ABObjectQuery(values, this);\n   }\n\n   /**\n    * @method rowfilterNew()\n    * return an instance of a new RowFilter that is tied to this\n    * ABFactory.\n    * @return {RowFilter}\n    */\n   rowfilterNew(App, idBase) {\n      if (App) {\n         console.error(\"!! Who is calling this with an App?\");\n      }\n      return new RowFilter(App || this._App, idBase, this);\n   }\n\n   /**\n    * @method filterComplexNew()\n    * return an instance of a new FilterComplex that is tied to this\n    * ABFactory.\n    * @return {FilterComplex}\n    */\n   filterComplexNew(idBase, options = {}) {\n      return new FilterComplex(idBase, this, options);\n   }\n\n   /**\n    * @method viewNewDetatched()\n    * Return an instance of a View that is NOT attached to an ABApplication.\n    * @return {ABViewXXX}\n    */\n   viewNewDetatched(values) {\n      if (!this._mockApp) {\n         this._mockApp = this.applicationNew({});\n      }\n      return this._mockApp.viewNew(values, this._mockApp);\n   }\n\n   //\n   // Utilities\n   //\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(/* ...params */) {\n      console.error(\n         \"ABFactory.notify() is expected to be overwritten by the platform!\"\n      );\n   }\n\n   /**\n    * notifyInfo()\n    * a common routine to parse the info parameter provided to .notify() into\n    * a more detailed set of data.\n    * @param {json} info\n    * @return {json}\n    */\n   _notifyInfo(info) {\n      var moreInfo = {};\n\n      if (info) {\n         Object.keys(info).forEach((k) => {\n            switch (k) {\n               case \"field\":\n                  moreInfo.objectID = info[k].object?.id;\n                  moreInfo.objectName = info[k].object?.name;\n                  moreInfo.fieldID = info[k].id;\n                  moreInfo.fieldName = info[k].label || info[k].name;\n                  break;\n\n               case \"object\":\n                  moreInfo.objectID = info[k].id;\n                  moreInfo.objectName = info[k].name;\n                  break;\n\n               case \"datacollection\":\n                  moreInfo.datacollectionID = info[k].id;\n                  moreInfo.datacollectionName = info[k].label || info[k].name;\n                  var ds = info[k].datasource;\n                  if (ds) {\n                     moreInfo.datacollectionDSID = ds.id;\n                     moreInfo.datacollectionDSName = ds.name;\n                  }\n                  break;\n\n               case \"process\":\n                  moreInfo.processID = info[k].id;\n                  moreInfo.processName = info[k].label || info[k].name;\n                  break;\n\n               case \"req\":\n                  moreInfo.req = {\n                     jobID: info[k].jobID,\n                     tenantID: info[k]._tenantID,\n                     user: info[k]._user,\n                  };\n                  break;\n\n               case \"task\":\n                  if (info[k].process) {\n                     moreInfo.processID = info[k].process.id;\n                     moreInfo.processName =\n                        info[k].process.label || info[k].process.name;\n                  }\n                  moreInfo.taskID = info[k].id;\n                  moreInfo.taskName = info[k].label || info[k].name;\n                  break;\n\n               case \"view\":\n                  if (info[k].application) {\n                     moreInfo.applicationID = info[k].application.id;\n                     moreInfo.applicationName =\n                        info[k].application.label || info[k].application.name;\n                  }\n                  moreInfo.viewID = info[k].id;\n                  moreInfo.viewName = info[k].label || info[k].name;\n                  moreInfo.viewKey = info[k].key;\n                  break;\n               default:\n                  moreInfo[k] = info[k];\n                  break;\n            }\n         });\n      }\n\n      return moreInfo;\n   }\n}\n\nmodule.exports = ABFactory;\n","/*\n * ABFieldManager\n *\n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n/*\n * Fields\n * A name => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\n\nvar AllFieldClasses = [\n   require(\"../platform/dataFields/ABFieldString\"),\n   require(\"../platform/dataFields/ABFieldLongText\"),\n   require(\"../platform/dataFields/ABFieldNumber\"),\n   require(\"../platform/dataFields/ABFieldDate\"),\n   require(\"../platform/dataFields/ABFieldDateTime\"),\n   require(\"../platform/dataFields/ABFieldBoolean\"),\n   require(\"../platform/dataFields/ABFieldList\"),\n   require(\"../platform/dataFields/ABFieldTree\"),\n   require(\"../platform/dataFields/ABFieldEmail\"),\n   require(\"../platform/dataFields/ABFieldFile\"),\n   require(\"../platform/dataFields/ABFieldImage\"),\n   require(\"../platform/dataFields/ABFieldUser\"),\n   require(\"../platform/dataFields/ABFieldConnect\"),\n   require(\"../platform/dataFields/ABFieldCalculate\"),\n   require(\"../platform/dataFields/ABFieldTextFormula\"),\n   require(\"../platform/dataFields/ABFieldFormula\"),\n   require(\"../platform/dataFields/ABFieldAutoIndex\"),\n   require(\"../platform/dataFields/ABFieldJson\"),\n   require(\"../platform/dataFields/ABFieldCombine\"),\n   require(\"../platform/dataFields/ABFieldSelectivity\"),\n];\n\nAllFieldClasses.forEach((FIELD) => {\n   Fields[FIELD.defaults().key] = FIELD;\n});\n\nmodule.exports = class ABFieldManager {\n   /*\n    * @function allFields\n    * return all the currently defined ABFields in an array.\n    * @return [{ABField},...]\n    */\n   static allFields() {\n      var fields = [];\n      for (var f in Fields) {\n         fields.push(Fields[f]);\n      }\n      return fields;\n   }\n\n   /**\n    * @function fieldByKey()\n    * Return a specific ABField that matches the given key\n    * @param {string} key\n    *        The ABField.key value we are looking for.\n    * @return {ABFieldXXX || undefined}\n    */\n   static fieldByKey(key) {\n      return Fields[key];\n   }\n\n   /*\n    * @function newField\n    * return an instance of an ABField based upon the values.key value.\n    * @return {ABField}\n    */\n   static newField(values, object) {\n      if (values.key) {\n         try {\n            return new Fields[values.key](values, object);\n         } catch (err) {\n            console.log(\"Error\", err);\n            console.log(\"Available fields\", Fields);\n            console.log(\"Requested field\", values.key);\n         }\n      } else {\n         console.log(\"-------\");\n         console.log(\"values:\");\n         console.error(values);\n         console.log();\n         console.error(\"object:\");\n         console.error(object);\n         console.log(\"-------\");\n         throw new Error(\n            `ABFieldManager.newField(): Unknown Field Key [${values.name}][${values.key}] for object[${object.name}]`\n         );\n         //// TODO: what to do here?\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABHintCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"description\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      description: 'description',\n      type: 'hint',\n      settings: {\n         active: {boolean},\n         view: uuid\n      }\n    }\n    */\n      let active = attributes?.settings.hasOwnProperty(\"active\")\n         ? attributes?.settings?.active\n         : \"1\";\n\n      this.id = attributes?.id || \"\";\n      this.name = attributes?.name || \"New Tutorial\";\n      this.description = attributes?.description || \"\";\n      this.type = attributes?.type || \"hint\";\n      this.settings = {};\n      this.settings.active = active;\n      this.settings.transition = attributes?.settings?.transition;\n      this.settings.showIntroStep = attributes?.settings?.showIntroStep;\n      this.settings.view = attributes?.settings?.view || \"\";\n      this.stepIDs = attributes?.stepIDs || [];\n\n      let currSteps = this?._steps || {};\n      this._steps = {};\n      (attributes?.stepIDs || []).forEach((sID) => {\n         if (!sID) return;\n         var ele = this.AB.stepNew(sID, this.id);\n         if (ele) {\n            this._steps[sID] = ele;\n         }\n      });\n      if (attributes) super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"type\", \"settings\", \"stepIDs\", \"id\", \"name\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * steps()\n    * return an array of steps that match the given filter (or all steps\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABStep]}\n    */\n   steps(fn = () => true) {\n      var allSteps = Object.keys(this._steps).map((e) => {\n         return this._steps[e];\n      });\n      return allSteps.filter(fn);\n   }\n\n   /**\n    * stepAdd()\n    * insert a step to be added to this hint.\n    * @param {ABStep} element\n    *        the full instance of an ABStep to track.\n    */\n   stepAdd(step) {\n      this._steps[step.id] = step;\n   }\n\n   /**\n    * stepByID()\n    * return the {ABStep} that has the given .id\n    * @param {string} id\n    * @return {ABStep[OBJ]}\n    */\n   stepByID(id) {\n      return this._steps[id] ?? null;\n   }\n\n   /**\n    * stepRemove()\n    * remove a step from being displayed by this hint.\n    * @param {id} ABStep ID\n    *        an ID of a step\n    *        to remove.\n    */\n   stepRemove(id) {\n      // remove from stepIDs array\n      let stepIndex = this.stepIDs.indexOf(id);\n      if (stepIndex > -1) {\n         this.stepIDs.splice(stepIndex, 1);\n      }\n      // remove from _steps definitions\n      delete this._steps[id];\n   }\n};\n","const ABMLClass = require(\"../platform/ABMLClass\");\n\nmodule.exports = class ABIndexCore extends ABMLClass {\n   constructor(attributes, object) {\n      super([\"label\"], object.AB);\n      this.object = object;\n\n      this.fromValues(attributes);\n   }\n\n   fromValues(attributes) {\n      /*\n      {\n        id: uuid(),\n        name: 'name',\n        fields:[\n            {ABDataField.id}\n        ],\n        unique: {boolean}\n      }\n      */\n      this.id = attributes.id;\n      this.type = \"index\";\n      this.name = attributes.name;\n      this.unique = JSON.parse(attributes.unique || false);\n\n      // Convert to an array\n      if (attributes.fieldIDs && !Array.isArray(attributes.fieldIDs)) {\n         attributes.fieldIDs = [attributes.fieldIDs];\n      }\n\n      this._unknownFieldIDs = [];\n      this.fields = (attributes.fieldIDs || [])\n         .map((f) => {\n            let field = this.object.fieldByID(f);\n            if (!field) {\n               this._unknownFieldIDs.push(f);\n               let err = new Error(\n                  `Index[${this.name}][${this.id}] is referencing an unknown field[${f}]`\n               );\n               this.AB.notify.developer(err, {\n                  index: this.id,\n                  field: f,\n               });\n            }\n            return field;\n         })\n         .filter((fId) => fId);\n\n      if (this.fields.length == 0) {\n         let err = new Error(\n            `Index[${this.name}][${this.id}] is not referencing any fields`\n         );\n         this.AB.notify.developer(err, {\n            index: this.id,\n            attributeFieldIDs: attributes.fieldIDs || [],\n         });\n      }\n\n      // let the MLClass process the Translations\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let result = super.toObj();\n\n      result.id = this.id;\n      result.type = \"index\";\n      result.name = this.name;\n      result.unique = this.unique;\n\n      // Convert to an array\n      if (this.fields && !Array.isArray(this.fields)) {\n         this.fields = [this.fields];\n      }\n\n      result.fieldIDs = (this.fields || [])\n         .map((f) => {\n            // Convert to the id of field\n            return f.id || f;\n         })\n         .filter((fId) => fId);\n\n      // carry along the unknown Field IDs so a\n      // developer/builder can come along and trace\n      // what happened.\n      this._unknownFieldIDs.forEach((f) => {\n         result.fieldIDs.push(f);\n      });\n\n      return result;\n   }\n\n   get indexName() {\n      let tableName = this.object.dbTableName();\n\n      // Maximum 64 characters long\n      return `${tableName}_${this.name}`.replace(/ /g, \"\").substring(0, 64);\n   }\n\n   get uniqueName() {\n      let indexName = this.indexName.substring(0, 57);\n\n      return `${indexName}_unique`;\n   }\n};\n","/**\n * ABMLClassCore\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This core ABMLClass will internally track the multilingual fields\n * (this.mlFields) and auto\n */\nvar ABEmitter = require(\"../platform/ABEmitter\");\nmodule.exports = class ABMLClassCore extends ABEmitter {\n   constructor(fieldList, AB) {\n      super();\n      this.mlFields = fieldList || [\"label\"];\n      // {array}\n      // field names of values that are multilingual\n\n      this.AB = AB;\n      // {ABFactory}\n      // our common source of references for other AB objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * @method fromValues\n    * called during the .fromValues() work chain.  Should be called\n    * AFTER all the current data is already populated.\n    */\n   fromValues(attributes) {\n      this.translations = attributes.translations;\n\n      // if translations were provided\n      if (this.translations) {\n         // multilingual fields: label, description\n         this.translate();\n      } else {\n         // maybe this came from a form that has ML values in the attributes, but\n         // no .translations[] yet:\n         // check for mlFields in attributes and record them here:\n         (this.mlFields || []).forEach((field) => {\n            if (attributes[field]) {\n               this[field] = attributes[field];\n            }\n         });\n      }\n   }\n\n   /**\n    * @function defaultTranslations()\n    * return an initial .translations entry to initialize the\n    * translations values of a given translateable object.\n    * @param {array} fields  the multilingual fields this obj manages.\n    * @param {json}  values  a default set of values for this object.\n    * @return {array}  of translation entries.\n    */\n   defaultTranslations(fields, values) {\n      values = values || {};\n\n      var entry = {\n         // Question: should this be this.AB.Multilingual.currentLanguage() || \"en\"\n         // currently since the defaults are sent in programattically, we are\n         // expecting the labels to be in \"en\"\n         language_code: \"en\",\n      };\n\n      fields.forEach((f) => {\n         entry[f] = values[f] || f;\n      });\n\n      return [entry];\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return \"en\";\n   }\n\n   /**\n    * @method toObj()\n    * called during the .toObj() work chain.  Should be called\n    * BEFORE the current data is populated.\n    */\n   toObj() {\n      this.unTranslate();\n\n      return {\n         translations: this.translations,\n      };\n   }\n\n   /**\n    * @method toDefinition()\n    * convert this instance into an ABDefinition object.\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      return this.AB.definitionNew({\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.toObj(),\n      });\n   }\n\n   /**\n    * @method translate\n    * Given a set of json data, pull out any multilingual translations\n    * and flatten those values to the base object.\n    * @param {obj} obj  The instance of the object being translated\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull to\n    *                       the obj[field] value.\n    */\n   translate(obj, json, fields, languageCode = null) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      if (typeof json.translations == \"string\") {\n         json.translations = JSON.parse(json.translations);\n      }\n\n      var currLanguage = languageCode || this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         // [fix] if no matching translation is in our json.translations\n         //       object, then just use the 1st one.\n         var first = null; // the first translation entry encountered\n         var found = false; // did we find a matching translation?\n\n         json.translations.forEach(function (t) {\n            if (!first) first = t;\n\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               found = true;\n\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  if (t[f] != null) obj[f] = t[f];\n\n                  obj[f] = t[f] || \"\"; // default to '' if not found.\n               });\n            }\n         });\n\n         // if !found, then use the 1st entry we did find.  prepend desired\n         // [language_code] to each of the fields.\n         if (!found && first) {\n            // copy each field to the root object\n            fields.forEach(function (f) {\n               if (first[f] != null && first[f] != \"\")\n                  obj[f] = `[${currLanguage}]${first[f]}`;\n               else obj[f] = \"\"; // default to '' if not found.\n            });\n         }\n      }\n   }\n\n   /**\n    * @method unTranslate\n    * Take the multilingual information in the base obj, and push that\n    * down into the json.translations data.\n    * @param {obj} obj  The instance of the object with the translation\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull from\n    *                       the obj[field] value.\n    */\n   unTranslate(obj, json, fields) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      var currLanguage = this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         var foundOne = false;\n\n         json.translations.forEach(function (t) {\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  // verify obj[f] is defined\n                  // --> DONT erase the existing translation\n                  if (obj[f] != null) {\n                     t[f] = obj[f];\n                  }\n               });\n\n               foundOne = true;\n            }\n         });\n\n         // if we didn't update an existing translation\n         if (!foundOne) {\n            // create a translation entry:\n            var trans = {};\n\n            // assume current languageCode:\n            trans.language_code = currLanguage;\n\n            fields.forEach(function (field) {\n               if (obj[field] != null) {\n                  trans[field] = obj[field];\n               }\n            });\n\n            json.translations.push(trans);\n         }\n      }\n   }\n};\n","//\n// ABModelCore\n//\n// Represents the Data interface for an ABObject data.\n//\n// to use an ABModel to load a DataTable:\n// Method 1:\n//  gather all the data externally and send to the DataTable\n//    Model.findAll()\n//    .then((data)=>{\n//      DataTable.parse(data);\n//    })\n//\n\nmodule.exports = class ABModelCore {\n   constructor(object) {\n      // link me to my ABObject\n      this.object = object;\n      this.AB = object.AB;\n\n      this._where = null;\n      this._sort = null;\n      this._skip = null;\n      this._limit = null;\n\n      this.staleRefreshInProcess = false;\n      this.staleRefreshMap = {\n         /* id : Promise */\n      };\n      this.staleRefreshPending = [];\n      this.staleRefreshTimerID = null;\n\n      // include this\n      this.responseContext = { key: \"--\", context: {} };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   contextKey(key) {\n      this.responseContext.key = key || \"--\";\n   }\n\n   contextValues(values) {\n      this.responseContext.context = values || {};\n   }\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      console.error(\n         \"!!! ABModelCore.request() should be overridden by platform.\"\n      );\n      return Promise.resolve();\n   }\n\n   // /**\n   //  * @method create\n   //  * update model values on the server.\n   //  */\n   // create(values) {\n\n   //   this.prepareMultilingualData(values);\n\n   //   var params = {\n   //     url: this.object.urlRest(),\n   //     params: values\n   //   }\n   //   return this.request('post', params)\n   //     .then((data) => {\n\n   //       this.normalizeData(data);\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a create event\n   //       // triggerEvent('create', this.object, data);\n\n   //     })\n   //     .catch(reject);\n\n   // }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   // delete(id) {\n\n   //   var params = {\n   //     url: this.object.urlRestItem(id)\n   //   }\n   //   return this.request('delete', params)\n   //     .then((data) => {\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a delete event\n   //       // triggerEvent('delete', this.object, id);\n\n   //     })\n   // }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   //   findAll(cond) {\n\n   //     cond = cond || {};\n\n   //     var params = {\n   //       url: this.object.urlRest(),\n   //       params: cond\n   //     }\n   //     return this.request('get', params)\n   //       .then((data) => {\n\n   //         this.normalizeData(data.data);\n\n   //         resolve(data);\n   //       })\n   //       .catch((err) => {\n   // /// TODO: this should be done in platform/ABModel:\n   //         // if (err && err.code) {\n   //         //  switch(err.code) {\n   //         //    case \"ER_PARSE_ERROR\":\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Parse Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n\n   //         //    default:\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Unknown Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n   //         //  }\n\n   //         // }\n   // console.error(err);\n   //       })\n\n   //   }\n\n   urlParamsCreate(values) {\n      return {\n         url: this.object.urlRest(),\n         params: values,\n      };\n   }\n\n   urlParamsDelete(id) {\n      return {\n         url: this.object.urlRestItem(id),\n      };\n   }\n\n   urlParamsFind(cond) {\n      return {\n         url: this.object.urlRest(),\n         params: cond || {},\n      };\n   }\n\n   urlParamsUpdate(id, values) {\n      return {\n         url: this.object.urlRestItem(id),\n         params: values,\n      };\n   }\n\n   /**\n    * @method count\n    * count a data find with the provided condition.\n    */\n   count(cond) {\n      cond = cond || {};\n\n      var params = {\n         url: this.object.urlRestCount(),\n         params: cond,\n      };\n      return this.request(\"get\", params)\n         .then((numberOfRows) => {\n            resolve(numberOfRows);\n         })\n         .catch((err) => {\n            // TODO: this should be done in platform/ABModel\n\n            // OP.Error.log('AppBuilder:ABModel:count(): Parse Error with provided condition', { error: err, condition:cond })\n\n            // reject(err);\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method staleRefresh\n    * Process a request to refresh the data for a given entry.\n    * This method is called from a ABDataview when it receives\n    * a 'ab.datacollection.stale' message.\n    * This method will try to queue similar reqeusts and then issue 1 large\n    * request, rather than numerous individual ones.\n    * @param {obj} cond  the condition of the entry we are requesting.\n    * @return {Promise}\n    */\n   staleRefresh(cond) {\n      // cond should be { where:{ id: X } } format.\n      var PK = this.object.PK();\n\n      var currID = cond[PK]; // just in case we get a { id: X }\n      if (cond.where) {\n         currID = cond.where[PK];\n      }\n\n      return new Promise((resolve, reject) => {\n         if (!currID) {\n            var Err = new Error(\n               \"Model.staleRefresh(): could not resolve .\" + PK\n            );\n            Err.cond = cond;\n            reject(Err);\n            return;\n         }\n\n         // convert to PK : Promise object:\n         var entry = {\n            resolve: resolve,\n            reject: reject,\n         };\n         entry[PK] = currID;\n\n         // queue up refresh condition\n         this.staleRefreshPending.push(entry);\n\n         // if ! staleRefreshInProcess\n         if (!this.staleRefreshInProcess) {\n            // set timeout to another 200ms wait after LAST staleRefresh()\n            if (this.staleRefreshTimerID) {\n               clearTimeout(this.staleRefreshTimerID);\n            }\n            this.staleRefreshTimerID = setTimeout(() => {\n               this.staleRefreshProcess();\n            }, 200);\n         }\n      });\n   }\n\n   /**\n    * @method staleRefreshProcess\n    * Actually process the current pending requests.\n    */\n   staleRefreshProcess() {\n      this.staleRefreshInProcess = true;\n      var currentEntries = this.staleRefreshPending;\n      this.staleRefreshPending = [];\n      var PK = this.object.PK();\n\n      var responseHash = {\n         /* id : [{entry}] */\n      };\n      var cond = { where: {} };\n      cond.where[PK] = [];\n\n      console.log(\n         \"Model.staleRefreshProcess(): buffered \" +\n            currentEntries.length +\n            \" requests\"\n      );\n      currentEntries.forEach((e) => {\n         responseHash[e[PK]] = responseHash[e[PK]] || [];\n         responseHash[e[PK]].push(e);\n      });\n\n      cond.where[PK] = Object.keys(responseHash);\n\n      this.findAll(cond).then((res) => {\n         // for each entry we got back\n         if (Array.isArray(res.data) && res.data.length) {\n            res.data.forEach((data) => {\n               // find it's matching request:\n               if (responseHash[data[PK]]) {\n                  // respond to the pending promise\n                  // and remove these entries from responseHash\n                  var entries = responseHash[data[PK]];\n                  entries.forEach((entry) => {\n                     var resolve = entry.resolve;\n                     resolve({ data: [data] });\n                  });\n\n                  delete responseHash[data[PK]];\n               } else {\n                  console.error(\n                     \"Model.staleRefreshProcess(): returned entry was not in our responseHash:\",\n                     data,\n                     responseHash\n                  );\n               }\n            });\n         }\n\n         // now if there are any entries left in responseHash,\n         // respond with an empty entry:\n         var allKeys = Object.keys(responseHash);\n         if (allKeys.length > 0) {\n            console.warn(\n               \"Model.staleRefreshProcess(): \" +\n                  allKeys.length +\n                  \" entries with no responses. \"\n            );\n         }\n         allKeys.forEach((key) => {\n            var resolve = responseHash[key].resolve;\n            resolve({ data: [] });\n            delete responseHash[key];\n         });\n\n         // now check to see if there are any more pending requests:\n         if (this.staleRefreshPending.length > 0) {\n            // process them:\n            this.staleRefreshProcess();\n         } else {\n            // mark we are no longer processing stale requests.\n            this.staleRefreshInProcess = false;\n         }\n      });\n   }\n\n   /**\n     * @method findConnected\n     * return the connected data associated with an instance of this model.\n     *\n     * to limit the result to only a single connected column:\n     *    model.findConnected( 'col1', {data})\n     *    then ((data) => {\n     *      // data = [{obj1}, {obj2}, ... {objN}]\n     *    })\n     *\n     * To find >1 connected field data:\n     *    model.findConnected( ['col1', 'col2'], {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     col1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     col2 : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n     *\n     * To find all connected field data:\n     *    model.findConnected( {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     connectedColName1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     connectedColName2 : [{obj1}, {obj2}, ... {objN}],\n     *      //    ...\n     *      //     connectedColNameN : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n\n     * @param {string/array} fields  [optional] an array of connected fields you want to return.\n     * @param {obj} data  the current object instance (data) to lookup\n     * @return {Promise}\n     */\n   findConnected(fields, data) {\n      if (typeof data == \"undefined\") {\n         if (!Array.isArray(fields) && typeof fields == \"object\") {\n            data = fields;\n            fields = []; // return all fields\n         }\n      }\n\n      if (typeof fields == \"string\") {\n         fields = [fields]; // convert to an array of values\n      }\n\n      return new Promise((resolve, reject) => {\n         // sanity checking:\n         if (!data.id) {\n            // I can't find any connected items, if I can't find this one:\n            resolve(null);\n            return;\n         }\n\n         let cond = {};\n         cond[this.object.PK()] = data.id;\n         this.findAll({ where: cond, populate: true })\n            .then((results) => {\n               if (\n                  !results.data ||\n                  !Array.isArray(results.data) ||\n                  results.data.length == 0\n               ) {\n                  resolve([]); // no data to return.\n                  return;\n               }\n\n               // work with the first object.\n               var myObj = results.data[0];\n\n               // if only 1 field requested, then return that\n               if (fields.length == 1) {\n                  let data =\n                     myObj[\n                        fields[0].replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"\n                     ];\n                  if (!data) return resolve([]);\n\n                  if (!Array.isArray(data)) data = [data];\n\n                  resolve(data);\n                  return;\n               }\n\n               // if no fields requested, return them all:\n               if (fields.length == 0) {\n                  var allFields = this.object.fields((f) => {\n                     return f.settings.linkType;\n                  });\n                  allFields.forEach((f) => {\n                     fields.push(f.columnName);\n                  });\n               }\n\n               var returnData = {};\n               fields.forEach((colName) => {\n                  returnData[colName] =\n                     myObj[colName.replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"];\n               });\n\n               resolve(returnData);\n            })\n            .catch((err) => {\n               console.error(\"!!! error with findConnected() attempt:\", err);\n               reject(err);\n            });\n      });\n   }\n\n   // /**\n   //  * @method loadInto\n   //  * loads the current values into the provided Webix DataTable\n   //  * @param {DataTable} DT  A Webix component that can dynamically load data.\n   //  */\n   // loadInto(DT) {\n\n   //   // if a limit was applied, then this component should be loading dynamically\n   //   if (this._limit) {\n\n   //     DT.define('datafetch', this._limit);\n   //     DT.define('datathrottle', 250);  // 250ms???\n\n   //     // catch the event where data is requested:\n   //     // here we will do our own findAll() so we can persist\n   //     // the provided .where condition.\n\n   //     // oh yeah, and make sure to remove any existing event handler when we\n   //     // perform a new .loadInto()\n   //     DT.___AD = DT.___AD || {};\n   //     if (DT.___AD.onDataRequestEvent) {\n   //       DT.detachEvent(DT.___AD.onDataRequestEvent);\n   //     }\n   //     DT.___AD.onDataRequestEvent = DT.attachEvent(\"onDataRequest\", (start, count) => {\n\n   //       var cond = {\n   //         where: this._where,\n   //         sort: this._sort,\n   //         limit: count,\n   //         skip: start\n   //       }\n\n   //       if (DT.showProgress)\n   //         DT.showProgress({ type: \"icon\" });\n\n   //       this.findAll(cond)\n   //         .then((data) => {\n   //           data.data.forEach((item) => {\n   //             if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //               item.$height = parseInt(item.properties.height);\n   //             } else if (parseInt(this._where.height) > 0) {\n   //               item.$height = parseInt(this._where.height)\n   //             }\n   //           });\n   //           DT.parse(data);\n\n   //           if (DT.hideProgress)\n   //             DT.hideProgress();\n\n   //         })\n\n   //       return false; // <-- prevent the default \"onDataRequest\"\n   //     });\n\n   //     DT.refresh();\n   //   }\n\n   //   // else just load it all at once:\n   //   var cond = {};\n   //   if (this._where) cond.where = this._where;\n   //   if (this._sort) cond.sort = this._sort;\n   //   if (this._limit != null) cond.limit = this._limit;\n   //   if (this._skip != null) cond.skip = this._skip;\n\n   //   if (DT.showProgress)\n   //     DT.showProgress({ type: \"icon\" });\n\n   //   this.findAll(cond)\n   //     .then((data) => {\n   //       data.data.forEach((item) => {\n   //         if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //           item.$height = parseInt(item.properties.height);\n   //         } else if (parseInt(this._where.height) > 0) {\n   //           item.$height = parseInt(this._where.height)\n   //         }\n   //       });\n   //       DT.parse(data);\n\n   //       if (DT.hideProgress)\n   //         DT.hideProgress();\n\n   //     })\n   //     .catch((err) => {\n   //       console.error('!!!!!', err);\n   //     })\n\n   // }\n\n   // /**\n   //  * @method limit\n   //  * set the limit value for this set of data\n   //  * @param {integer} limit  the number or elements to return in this call\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // limit(limit) {\n   //   this._limit = limit;\n   //   return this;\n   // }\n\n   // /**\n   //  * @method skip\n   //  * set the skip value for this set of data\n   //  * @param {integer} skip  the number or elements to skip\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // skip(skip) {\n   //   this._skip = skip;\n   //   return this;\n   // }\n\n   //   /**\n   //    * @method update\n   //    * update model values on the server.\n   //    */\n   //   update(id, values) {\n\n   //     this.prepareMultilingualData(values);\n\n   //     // remove empty properties\n   //     for (var key in values) {\n   //       if (values[key] == null)\n   //         delete values[key];\n   //     }\n\n   //     var params = {\n   //       url: this.object.urlRestItem(id),\n   //       params: values\n   //     }\n   //     return this.request('put', params)\n   //       .then((data) => {\n\n   //         // .data is an empty object ??\n\n   //         this.normalizeData(data);\n\n   //         return data;\n\n   //         // FIX: now with sockets, the triggers are fired from socket updates.\n   //         // trigger a update event\n   //         // triggerEvent('update', this.object, data);\n\n   //       })\n   //       .catch((err)=>{\n   // console.error(err);\n   //       });\n\n   //   }\n\n   /**\n    * @method upsert\n    * upsert model values on the server.\n    */\n   upsert(values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      var params = {\n         url: this.object.urlRest(),\n         params: values,\n      };\n      return this.request(\"put\", params)\n         .then((data) => {\n            // .data is an empty object ??\n\n            this.normalizeData(data);\n\n            return data;\n\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a update event\n            // triggerEvent('update', this.object, data);\n         })\n         .catch((err) => {\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method where\n    * set the where condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   where(cond) {\n      this._where = cond;\n      return this;\n   }\n\n   /**\n    * @method where\n    * set the sort condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   sort(cond) {\n      this._sort = cond;\n      return this;\n   }\n\n   /**\n    * @method refresh\n    * refresh model definition on the server.\n    */\n   refresh() {\n      console.error(\"!!! Depreciated: where is this being called from?\");\n      return Promise.resolve();\n\n      // var params = {\n      //    url: this.object.urlRestRefresh(),\n      // };\n      // return this.request(\"put\", params);\n   }\n\n   normalizeData(data) {\n      // convert to array\n      if (!(data instanceof Array)) data = [data];\n\n      // find all connected fields\n      var connectedFields = this.object.connectFields();\n\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n\n      // if this object has some date fields, convert the data to date object:\n      var dateFields =\n         this.object.fields(function (f) {\n            return f.key == \"date\" || f.key == \"datetime\";\n         }) || [];\n\n      // calculate fields\n      var calculatedFields = this.object.fields((f) => f.key == \"calculate\");\n\n      data.forEach((d) => {\n         if (d == null) return;\n\n         // various PK name\n         if (!d.id && this.object.PK() != \"id\") d.id = d[this.object.PK()];\n\n         // loop through data's connected fields\n         connectedFields.forEach((c) => {\n            // get the relation name so we can change the original object\n            var relationName = c.relationName();\n\n            // if (d[c.columnName] == null)\n            //  d[c.columnName] = '';\n\n            // if there is no data we can exit now\n            if (d[relationName] == null) return;\n\n            // if relation data is still a string and isn't empty\n            if (\n               typeof d[relationName] == \"string\" &&\n               d[relationName].length > 0\n            ) {\n               // parse the string into an object\n               d[relationName] = JSON.parse(d[relationName]);\n            }\n\n            // if the data is an array we need to loop through it\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((r) => {\n                  // if translations are present and they are still a string\n                  if (r.translations && typeof r.translations == \"string\") {\n                     // parse the string into an object\n                     r.translations = JSON.parse(r.translations);\n                  }\n               });\n               // if the data is not an array it is a single item...check that has translations and it is a string\n            } else if (\n               d[relationName].translations &&\n               typeof d[relationName].translations == \"string\"\n            ) {\n               // if so parse the string into an object\n               d[relationName].translations = JSON.parse(\n                  d[relationName].translations\n               );\n            }\n\n            // set .id to relation columns\n            let objectLink = c.datasourceLink;\n\n            // if we didn't get the linked object, just return.\n            if (!objectLink) return;\n\n            let olPK = objectLink.PK();\n            var relatedMlFields = objectLink.multilingualFields();\n\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((subData) => {\n                  // update .id values\n                  // if (olPK != \"id\" && subData[olPK]) subData.id = subData[olPK];\n                  const relationValue = c.getRelationValue(subData);\n                  if (olPK != \"id\") subData.id = relationValue;\n\n                  // perform Translation\n                  if (relatedMlFields.length) {\n                     objectLink.translate(subData, subData, relatedMlFields);\n                  }\n               });\n            } else {\n               // update .id value\n               // if (d[relationName][olPK]) {\n               //    d[relationName].id = d[relationName][olPK];\n               // }\n               const relationValue = c.getRelationValue(d[relationName]);\n               if (relationValue) {\n                  d[relationName].id = relationValue;\n               }\n\n               // perform Translation\n               if (relatedMlFields.length) {\n                  objectLink.translate(\n                     d[relationName],\n                     d[relationName],\n                     relatedMlFields\n                  );\n               }\n            }\n\n            // if (\n            //    objectLink &&\n            //    olPK != \"id\" &&\n            //    d[relationName] &&\n            //    !d[relationName].id\n            // ) {\n            //    // is array\n            //    if (d[relationName].forEach) {\n            //       d[relationName].forEach((subData) => {\n            //          if (subData[olPK]) subData.id = subData[olPK];\n            //       });\n            //    } else if (d[relationName][olPK]) {\n            //       d[relationName].id = d[relationName][olPK];\n            //    }\n            // }\n\n            // if (relatedMlFields.length) {\n            //    d[relationName];\n            //    objectLink.translate(\n            //       d[relationName],\n            //       d[relationName],\n            //       relatedMlFields\n            //    );\n            // }\n\n            // Change property name of connected field\n            if (!d[c.columnName]) {\n               if (c.linkType() == \"one\") {\n                  if (d[relationName]) {\n                     // d[c.columnName] = d[relationName][olPK];\n                     d[c.columnName] = c.getRelationValue(d[relationName]);\n                  } else {\n                     d[c.columnName] = null;\n                  }\n               } else {\n                  if (d[relationName]) {\n                     if (Array.isArray(d[relationName])) {\n                        try {\n                           d[c.columnName] = (d[relationName] || []).map(\n                              // (i) => i[olPK]\n                              (i) => c.getRelationValue(i)\n                           );\n                        } catch (e) {\n                           console.log(\"+++++++++++++++\");\n                           console.log(`ID:[${c.id}]`);\n                           console.log(`ColumnName:[${c.label}]`);\n                           console.log(`relationName:[${relationName}]`);\n                           console.log(`linkType:[${c.linkType()}]`);\n                           console.log(\"data:\");\n                           console.log(JSON.stringify(d[relationName]));\n                           console.log(\"+++++++++++++++\");\n                        }\n                     } else {\n                        // this is strange: supposed to be \"many\" but coming in\n                        // as \"one\"\n                        console.log(\"+++++++++++++++\");\n                        console.log(`ID:[${c.id}]`);\n                        console.log(`ColumnName:[${c.label}]`);\n                        console.log(`relationName:[${relationName}]`);\n                        console.log(`linkType:[${c.linkType()}]`);\n                        console.log(\"data:\");\n                        console.log(JSON.stringify(d[relationName]));\n                        console.log(\"+++++++++++++++\");\n                        // d[c.columnName] = [d[relationName][olPK]];\n                        d[c.columnName] = [c.getRelationValue(d[relationName])];\n                     }\n                  } else {\n                     d[c.columnName] = [];\n                  }\n               }\n            }\n         });\n\n         if (mlFields.length) {\n            this.object.translate(d, d, mlFields);\n         }\n\n         // convert the data to date object\n         dateFields.forEach((date) => {\n            if (d && d[date.columnName] != null) {\n               // check to see if data has already been converted to a date object\n               if (typeof d[date.columnName] == \"string\") {\n                  if (date.key == \"date\") {\n                     // if we are ignoring the time it means we ignore timezone as well\n                     // so lets trim that off when creating the date so it can be a simple date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName],\n                        {\n                           format: \"MM/DD/YYYY\",\n                           ignoreTime: true,\n                        }\n                     );\n                  } else {\n                     // Convert UTC to Date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName]\n                     );\n                     // d[date.columnName] = new Date(moment(d[date.columnName]));\n                  }\n               }\n            }\n         });\n\n         calculatedFields.forEach((calField) => {\n            d[calField.columnName] = calField.format(d);\n         });\n      });\n   }\n};\n","const ABObject = require(\"../platform/ABObject\");\nconst ABModelApi = require(\"../platform/ABModelApi\");\n\nmodule.exports = class ABObjectApiCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.isAPI = true;\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.readonly = parseInt(attributes.readonly) || 0;\n      this.apiType = attributes.apiType || \"Read\";\n      this.request = attributes.request ?? {};\n      this.request.headers = attributes.request?.headers ?? [];\n      this.response = attributes.response ?? {};\n      this.response.fields = attributes.response?.fields ?? [];\n      this.isFetched = attributes.isFetched ?? false;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const result = super.toObj();\n\n      result.isAPI = this.isAPI;\n      result.readonly = this.readonly;\n      result.apiType = this.apiType;\n      result.request = this.request ?? {};\n      result.request.headers = this.request?.headers ?? [];\n      result.response = this.response ?? {};\n      result.response.fields = this.response?.fields ?? [];\n      result.isFetched = this.isFetched;\n\n      return result;\n   }\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelApi(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @function getPagingValues()\n    *\n    * @return {Object} - {\n    *                       start: \"Property name of the API for start index\",\n    *                       limit: \"Property name of the API for limit return the item number\"\n    *                     }\n    */\n   getPagingValues({ skip, limit }) {\n      const result = {};\n      const pagingSettings = this.request?.paging ?? {};\n\n      if (pagingSettings.start && skip != null) {\n         result[pagingSettings.start] = skip;\n      }\n      if (pagingSettings.limit && limit != null) {\n         result[pagingSettings.limit] = limit;\n      }\n\n      return result;\n   }\n\n   dataFromKey(data) {\n      let result = [];\n\n      if (!Array.isArray(data)) data = [data];\n\n      data.forEach((item) => {\n         // Clone item\n         let itemResult = { ...item };\n\n         // Pull data from `Data key` of the API object\n         // FORMAT: \"Property.Name.Value\"\n         (this.response.dataKey ?? \"\").split(\".\").forEach((key) => {\n            if (key == \"\" || key == null) return;\n            itemResult = itemResult?.[key];\n         });\n\n         if (Array.isArray(itemResult)) {\n            result = result.concat(itemResult);\n         } else if (itemResult) {\n            result.push(itemResult);\n         }\n      });\n\n      return result;\n   }\n\n   get headers() {\n      const headers = {};\n\n      (this.request.headers ?? []).forEach((header) => {\n         if (header?.value == null) return;\n\n         headers[header.key] = header.value;\n      });\n\n      return headers;\n   }\n};\n","/**\n * ABObjectCore\n *\n * Manage the loading of specific ABObject data into useable objects\n * that can instantiate themselves and provide field and model resources.\n */\n\nvar ABModel = require(\"../platform/ABModel\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      /*\n{\n\tid: uuid(),\n\tconnName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tlabelSettings: Object,\n\tisImported: 1/0,\n\tisExternal: 1/0,\n\ttableName:'string',  // NOTE: store table name of import object to ignore async\n\tprimaryColumnName: 'string', // NOTE: store column name of PK\n\ttransColumnName: 'string', // NOTE: store column name of translations table\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:\t ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n   ],\n   indexes: [\n      {ABIndex}\n   ]\n}\n*/\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object. These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static contextKey() {\n      return \"object\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            connName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n            name: 'name',\n            labelFormat: 'xxxxx',\n            labelSettings: Object,\n            isImported: 1/0,\n            isExternal: 1/0,\n            tableName:'string',  // NOTE: store table name of import object to ignore async\n            primaryColumnName: 'string', // NOTE: store column name of PK\n            transColumnName: 'string', // NOTE: store column name of translations table\n            urlPath:'string',\n            importFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n                                        // to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n            translations:[\n                {}\n            ],\n            fields:[\n                {ABDataField}\n            ],\n            indexes: [\n               {ABIndex}\n            ]\n        }\n        */\n\n      this.id = attributes.id;\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = attributes.type || \"object\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.connName = attributes.connName || undefined; // undefined == 'appBuilder'\n      // {string} .connName\n      // the sails.config.connections[connName] configuration reference.\n      // if not set ({undefined}), then our default \"appBuilder\" config is used\n\n      this.name = attributes.name || \"\";\n      // {string} .name\n      // A name reference for this ABObject. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      this.labelFormat = attributes.labelFormat || \"\";\n      // {string} .labelFormat\n      // A string template for how to display an entry for this ABObject in\n      // common UI elements like grids, lists, etc...\n\n      this.labelSettings = attributes.labelSettings || {};\n      // {Object} .labelSettings\n\n      this.labelSettings.isNoLabelDisplay = parseInt(\n         this.labelSettings.isNoLabelDisplay || 0\n      );\n      // {bool} .isNoLabelDisplay\n\n      this.isImported = parseInt(attributes.isImported || 0);\n      // {depreciated}\n      // {bool} .isImported\n      // previously used to mark ABObjects that were created in other\n      // ABApplicaitons.  No longer relevant with Global ABObjects\n\n      this.isExternal = parseInt(attributes.isExternal || 0);\n      // {bool} .isExternal\n      // Marks this ABObject as referencing a pre-existing table in the DB that\n      // we are treating as an ABObject.\n      // These objects are not allowed to create/update/destroy the db table\n      // nor can we add/remove fields.\n      // However we are able to customize the Field definitions to change the\n      // column names, hidden attributes, Object label, etc...\n      // We can update our Defintion attributes, but not any actual DB changes.\n\n      this.tableName = attributes.tableName || \"\"; // NOTE: store table name of import object to ignore async\n      // {string} .tableName\n      // the `{database}.{tableName}` of the db table that this ABObject's data\n      // is stored in.\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.tableName = this.tableName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n\n      this.primaryColumnName = attributes.primaryColumnName || \"\"; // NOTE: store column name of PK\n      // {string} .primaryColumnName\n      // is the col_name of which key is the primary key.  By default it is\n      // \"uuid\", but in some external objects this might be something else\n      // (\"id\", \"ren_id\", etc...).\n\n      this.transColumnName = attributes.transColumnName || \"\"; // NOTE: store column name of translations table\n      // {string} .transColumnName\n      // this is a workaround to include hris_ren_data and hris_ren_trans data\n\n      this.urlPath = attributes.urlPath || \"\";\n\n      // this.importFromObject = attributes.importFromObject || \"\";\n\n      this.isSystemObject = attributes.isSystemObject;\n      // {bool} .isSystemObject\n      // We are now storing some of our System Required Data as ABObjects as well.\n      // These Objects should not be allowed to be modified by typical AppBuilder\n      // designer.  However we can enable a mode for AB Designer to then expand these\n      // ABObjects, and eventually we can use the AppBuilder to Create the AppBuilder.\n      if (\n         typeof this.isSystemObject == \"undefined\" ||\n         this.isSystemObject == \"false\"\n      ) {\n         this.isSystemObject = false;\n      }\n\n      this.createdInAppID = attributes.createdInAppID;\n      // {string} .createdInAppID\n      // the .id of the ABApplication that originally created this ABObject.\n\n      // if attributes.objectWorkspace DOES exist, make sure it is fully\n      // populated.\n      if (typeof attributes.objectWorkspace != \"undefined\") {\n         if (typeof attributes.objectWorkspace.sortFields == \"undefined\")\n            attributes.objectWorkspace.sortFields = [];\n         if (typeof attributes.objectWorkspace.filterConditions == \"undefined\")\n            attributes.objectWorkspace.filterConditions = [];\n         if (typeof attributes.objectWorkspace.frozenColumnID == \"undefined\")\n            attributes.objectWorkspace.frozenColumnID = \"\";\n         if (typeof attributes.objectWorkspace.hiddenFields == \"undefined\")\n            attributes.objectWorkspace.hiddenFields = [];\n      }\n      this.objectWorkspace = attributes.objectWorkspace || {\n         sortFields: [], // array of columns with their sort configurations\n         filterConditions: [], // array of filters to apply to the data table\n         frozenColumnID: \"\", // id of column you want to stop freezing\n         hiddenFields: [], // array of [ids] to add hidden:true to\n      };\n      // {obj} .objectWorkspace\n      // When in the ABObject editor in the AppBuilder Designer, different\n      // views of the information can be created.  These views are stored here\n      // and are avaiable to other users in the Designer.\n\n      // pull in field definitions:\n      var fields = [];\n      this.fieldIDs = attributes.fieldIDs || [];\n      // {array}  [ ABField.id, ... ]\n      // this is a collection of ALL the ABFields this object references.\n      // This will include ABFields that were directly created for this object\n      // and will include ABFields that were imported.\n\n      this.importedFieldIDs = attributes.importedFieldIDs || [];\n      // {array} [ ABField.id, ... ]\n      // this is a collection of the ABFields in our .fieldIDs that were\n      // IMPORTED.\n\n      this._unknownFieldIDs = [];\n      this.fieldIDs.forEach((id) => {\n         if (!id) return;\n\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._fields = fields;\n\n      // pull in index definitions:\n      this.importIndexes(attributes.indexIDs);\n\n      // let the MLClass now process the translations:\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method importIndexes\n    * instantiate a set of indexes from the given ids.\n    * @param {array} indexIDs The different ABDefinition IDs for each index\n    *        [ \"uuid11\", \"uuid2\", ... \"uuidN\" ]\n    */\n   importIndexes(indexIDs) {\n      this._unknownIndex = [];\n      var indexes = [];\n      (indexIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            indexes.push(this.AB.indexNew(def, this));\n         } else {\n            this._unknownIndex.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown index id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._indexes = indexes;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   // exportFields() {\n   //     var currFields = [];\n   //     this._fields.forEach((obj) => {\n   //         currFields.push(obj.toObj());\n   //     });\n   //     return currFields;\n   // }\n\n   // /**\n   //  * @method exportFields\n   //  * convert our array of fields into a settings object for saving to disk.\n   //  * @return {array}\n   //  */\n   // exportIndexes() {\n   //    var currIndexes = [];\n   //    this._indexes.forEach((idx) => {\n   //       currIndexes.push(idx.toObj());\n   //    });\n   //    return currIndexes;\n   // }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      // track the field .ids of our fields\n      var fieldIDs = this.fields().map((f) => f.id);\n      (this._unknownFieldIDs || []).forEach((id) => {\n         fieldIDs.push(id);\n      });\n      // NOTE: we keep the ._unknownFieldIDs so a developer/builder\n      // can come back and track down what happened to the missing\n      // ids.\n\n      // track the index .ids of our indexes\n      var indexIDs = this.indexes().map((f) => f.id);\n      (this._unknownIndex || []).forEach((id) => {\n         indexIDs.push(id);\n      });\n\n      return {\n         id: this.id,\n         type: this.type || \"object\",\n         connName: this.connName,\n         name: this.name,\n         labelFormat: this.labelFormat,\n         labelSettings: this.labelSettings || {},\n         isImported: this.isImported,\n         isExternal: this.isExternal,\n         tableName: this.tableName,\n         // NOTE: store table name of import object to ignore async\n         primaryColumnName: this.primaryColumnName,\n         // NOTE: store column name of PK\n         transColumnName: this.transColumnName,\n         // NOTE: store column name of translations table\n         urlPath: this.urlPath,\n         // importFromObject: this.importFromObject,\n         objectWorkspace: this.objectWorkspace,\n         isSystemObject: this.isSystemObject,\n\n         translations: obj.translations,\n         fieldIDs: fieldIDs,\n         importedFieldIDs: this.importedFieldIDs,\n         indexIDs: indexIDs,\n         createdInAppID: this.createdInAppID,\n      };\n   }\n\n   ///\n   /// Objects\n   ///\n\n   /**\n    * @method objectLinks()\n    *\n    *  return an array of ABObject that's connected.\n    *\n    * @param {object} filter\n    * @return {array} - An array of ABObject\n    */\n   objectLinks(/* filter */) {\n      var connectFields = this.connectFields();\n\n      return connectFields.map((f) => f.datasourceLink);\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method fields()\n    * return an array of all the ABFields for this ABObject.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array[ABFieldxxx]}\n    */\n   fields(fn = () => true) {\n      return this._fields.filter(fn);\n   }\n\n   /**\n    * @method fieldByID()\n    * return the object's field from the given {ABField.id}\n    * @param {string} id\n    *        the uuid of the field to return.\n    * @return {ABFieldxxx}\n    */\n   fieldByID(id) {\n      return this.fields((f) => f?.id == id)[0];\n   }\n\n   /**\n    * @method connectFields()\n    *\n    * return an array of the ABFieldConnect that is connect object fields.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   connectFields(fn = () => true) {\n      return this.fields((f) => f && f.isConnection).filter(fn);\n   }\n\n   /**\n    * @method fieldImport\n    * register the given ABField.id as an imported field for this ABObject.\n    * The ABField definition should be available before making this call.\n    * After this call, the ABField is included in the ABObject, but the ABObject\n    * has NOT been saved.\n    * @param {ABField} fieldID The ABDefinition.id for a field that is imported\n    *        into this object.\n    */\n   fieldImport(id) {\n      if (!id) return;\n\n      if (this.importedFieldIDs.indexOf(id) == -1) {\n         this.importedFieldIDs.push(id);\n      }\n\n      // just to be safe:\n      var isThere = this._fields.find((f) => f.id == id);\n      if (!isThere) {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            this._fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs = this._unknownFieldIDs || [];\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is importing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      }\n   }\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @return {ABField}\n    */\n   fieldNew(values) {\n      return this.AB.fieldNew(values, this);\n   }\n\n   /**\n    * @method fieldRemove()\n    *\n    * remove the given ABField from our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldRemove(field) {\n      var origLen = this._fields.length;\n      this._fields = this.fields(function (o) {\n         return o.id != field.id;\n      });\n\n      // be sure to remove this from our imported ids if it was\n      // listed there.\n      this.importedFieldIDs = this.importedFieldIDs.filter(\n         (fid) => fid != field.id\n      );\n\n      if (this._fields.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldReorder()\n    *\n    * reorder the fields in our object\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldReorder(sourceId, targetId) {\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == sourceId) {\n            itemMoved = this._fields[i];\n            this._fields.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < this._fields.length; j++) {\n         if (this._fields[j].columnName == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            this._fields.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      return this.save();\n   }\n\n   /**\n    * @method fieldSave()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldSave(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         this._fields.push(field);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldAdd()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values if they changed.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldAdd(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._fields.push(field);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method imageFields()\n    *\n    * return an array of the ABFieldImage fields this object has.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   imageFields(fn = () => true) {\n      return this.fields((f) => f && f.key == \"image\").filter(fn);\n   }\n\n   /**\n    * @method multilingualFields()\n    *\n    * return an array of columnnames that are multilingual.\n    *\n    * @return {array}\n    */\n   multilingualFields() {\n      return this.fields((f) => f && f.isMultilingual).map((f) => f.columnName);\n   }\n\n   /**\n    * @method indexes()\n    *\n    * return an array of all the ABIndex for this ABObject.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   indexes(filter = () => true) {\n      return this._indexes.filter(filter);\n   }\n\n   /**\n    * @method indexByID()\n    * return the object's index from the given {ABIndex.id}\n    * @param {string} id\n    *        the id of the ABIndex to return.\n    * @return {ABIndex}\n    */\n   indexByID(id) {\n      return this.indexes((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method indexRemove()\n    * remove the given ABIndex from our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexRemove(index) {\n      var origLen = this._indexes.length;\n      this._indexes = this.indexes(function (idx) {\n         return idx.id != index.id;\n      });\n\n      // persist our changes if something changed.\n      if (origLen != this._indexes.length) {\n         return this.save();\n      }\n\n      // nothing was removed, so continue on.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method indexSave()\n    * save the given ABIndex in our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexSave(index) {\n      var isIncluded = this.indexByID(index.id);\n      if (!isIncluded) {\n         this._indexes.push(index);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   ///\n   /// Working with data from server\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObject.\n    */\n   model() {\n      var model = new ABModel(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(ABObjectCore.contextKey());\n      model.contextValues({ id: this.id });\n\n      return model;\n   }\n\n   ///\n   /// URL\n   ///\n\n   /**\n    * @method urlRest\n    * return the url to access the data for this object.\n    * @return {string}\n    */\n   urlRest() {\n      return `/app_builder/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestBatch\n    * return the url to use for batch creates for this object\n    * @return {string}\n    */\n   urlRestBatch() {\n      return `/app_builder/batch/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestItem\n    * return the url to access the data for an instance of this object.\n    * @return {string}\n    */\n   urlRestItem(id) {\n      return `/app_builder/model/${this.id}/${id}`;\n   }\n\n   /**\n    * @method urlRestLog\n    * return the url to access the logs for this ABObject.\n    * @return {string}\n    */\n   urlRestLog() {\n      return `/app_builder/object/${this.id}/track`;\n   }\n\n   /**\n    * @method urlRestRefresh\n    * return the url to signal a refresh for this object.\n    * @return {string}\n    */\n   urlRestRefresh() {\n      return `/app_builder/model/refreshobject/${this.id}`;\n   }\n\n   /**\n    * @method urlCount\n    * return the url to count of data for this object.\n    * @return {string}\n    */\n   urlRestCount() {\n      return `/app_builder/model/count/${this.id}`;\n   }\n\n   ///\n   ///\tObject Workspace Settings\n   ///\n   get workspaceSortFields() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.sortFields;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.sortFields;\n      }\n   }\n\n   set workspaceSortFields(fields) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.sortFields = fields;\n      }\n      // old version\n      else {\n         this.objectWorkspace.sortFields = fields;\n      }\n   }\n\n   get workspaceFilterConditions() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.filterConditions;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.filterConditions;\n      }\n   }\n\n   set workspaceFilterConditions(filterConditions) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.filterConditions = filterConditions;\n      }\n      // old version\n      else {\n         this.objectWorkspace.filterConditions = filterConditions;\n      }\n   }\n\n   get workspaceFrozenColumnID() {\n      return this.objectWorkspace.frozenColumnID;\n   }\n\n   set workspaceFrozenColumnID(id) {\n      this.objectWorkspace.frozenColumnID = id;\n   }\n\n   get workspaceHiddenFields() {\n      return this.objectWorkspace.hiddenFields || [];\n   }\n\n   set workspaceHiddenFields(fields) {\n      this.objectWorkspace.hiddenFields = fields;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return this.isImported || this.isExternal || this.readonly;\n   }\n\n   /**\n    * @method defaultValues\n    * Collect a hash of key=>value pairs that represent the default values\n    * from each of our fields.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   defaultValues() {\n      var values = {};\n      this.fields().forEach((f) => {\n         f.defaultValue(values);\n      });\n\n      return values;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(/* data */) {\n      // NOTE: the platform needs to define a way to verify the data\n      console.warn(\"Platform.ABObject.isValidData() missing\");\n      return true;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      if (this.application == null) return null;\n\n      return this.application.urlObject(acrossApp) + this.id;\n   }\n\n   /**\n    * @method urlField\n    * return a string pointer to this object's fields\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlField(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      return this.urlPointer(acrossApp) + \"/_fields/\";\n   }\n\n   /**\n    * @method PK\n    * return a string of the primary column name\n    *\n    * @return {string}\n    */\n   PK() {\n      return this.primaryColumnName || \"uuid\";\n   }\n\n   remoteCreate(data) {\n      console.log(\n         \"object[\" + this.name + \"] received a remoteCreate() with data:\",\n         data\n      );\n   }\n\n   /**\n    * @method clone\n    * return a clone of ABObject\n    *\n    * @return {ABObjectBase}\n    */\n   clone() {\n      // ignore properties who're spend much performance\n      // NOTE: do not clone them. Just copy reference\n      let ignoreProps = [\"application\", \"_fields\"];\n\n      let cloneOne = JSON.parse(JSON.stringify(this));\n\n      ignoreProps.forEach((prop) => {\n         cloneOne[prop] = this[prop];\n      });\n\n      return cloneOne;\n   }\n\n   /**\n    * @method minRelationData()\n    * return an array of ABField.columnNames that make up\n    * the minimum fields required to display this objects __RELATION\n    * data in our UI widgets.\n    */\n   minRelationData() {\n      var fields = [this.PK()];\n\n      if (this.multilingualFields().length > 0) {\n         fields.push(\"translations\");\n      }\n\n      var labelData = this.labelFormat || \"\";\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            fields.push(field.columnName);\n         });\n      }\n\n      // System requires to include number field values\n      // because they are used on Formula/Calculate fields on client side\n      fields = fields.concat(\n         this.fields((f) => f.key == \"number\").map((f) => f.columnName)\n      );\n\n      return fields;\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = \"{\" + defaultField.id + \"}\";\n         else {\n            // if label is empty, then show .id\n            if (!labelData.trim()) {\n               let labelSettings = this.labelSettings || {};\n               if (labelSettings && labelSettings.isNoLabelDisplay) {\n                  labelData = L(labelSettings.noLabelText || \"[No Label]\");\n               } else {\n                  // show id of row\n                  labelData = `${\n                     this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"\n                  }${rowData.id}`;\n               }\n            }\n         }\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n};\n\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nvar ABObject = require(\"../platform/ABObject\");\nvar ABModelQuery = require(\"../platform/ABModelQuery\");\n\nmodule.exports = class ABObjectQueryCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      /*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\n\n\n\t// ABOBjectQuery Specific Changes\n\t// we store a list of fields by their urls:\n\tfields:[\n\t\t{\n\t\t\talias: \"\",\n\t\t\tfieldURL:'#/url/to/field',\n\t\t}\n\t],\n\n\n\t// we store a list of joins:\n\tjoins:{\n\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\tobjectURL:\"#/...\",\t\t\t\t\t// the base object of the join\n\t\tlinks: [\n\t\t\t{\n\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// the connection field of the object we are joining with.\n\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n\t\t\t\tlinks: [\n\t\t\t\t\t...\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\n\t},\n\n\n\twhere: { QBWhere }\n}\n*/\n      this.isQuery = true;\n      // {bool}\n      // a property to mark the difference between an ABObject and ABObjectQuery.\n\n      this.__missingObject = this.__missingObject ?? [];\n      // {array} fieldInfo\n      // the field info that defined an object we can't find.\n\n      this.__missingFields = this.__missingFields ?? [];\n      // {array} [ { objID, fieldID }, ... ]\n      // a list of field definitions that we are unable to resolve.\n\n      this.__cantFilter = [];\n      // {array} [ {field, fieldInfo}, ... ]\n      // a list of field that were assigned but can't be used for filtering.\n\n      this.__duplicateFields = [];\n      // {array} [ {fieldInfo}, ... ]\n      // a list of duplicate field definitions.\n\n      this.__linkProblems = [];\n      // {array} [ { message, data }, ...]\n      // a list of warning messages related to link objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * contextKey()\n    * returns a unique key that represents a query in\n    * our networking job resolutions.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"query\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.type = \"query\";\n\n      // populate connection objects\n      // this._objects = {};\n      // this.obj2Alias = attributes.obj2Alias || {};\n\n      this.alias2Obj = {}; // this gets built in the .importJoins()\n      // { \"alias\" : object.id }\n      // this is a lookup hash of a referenced alias to the Object it\n      // references.\n\n      this.objectIDs = [];\n      // {array}  of ABObject.id s that are referenced by this query.\n      // this is how we limit our searches on objects.\n      // this gets built in the .importJoins();\n\n      this.viewName = attributes.viewName || \"\";\n      // {string}\n      // this is the SQL tablename of where our Query will store it's\n      // view data.\n\n      // import all our ABObjects\n      this.importJoins(attributes.joins || {});\n\n      // import fields after joins are imported\n      this._fields = null;\n      this.importFields(attributes.fields || []);\n      // {array} [ { alias, field}, {},... ]\n      // an array of field definition structures that mark what fields this\n      // query is interested in pulling data from.\n      //    .alias : {string} matches the alias of the ABObject that the field\n      //             is from\n      //    .field : {ABFieldXXX} the link to the actual ABField instance\n\n      // Import our Where condition\n      this.where = attributes.where || {}; // .workspaceFilterConditions\n      // Fix default where.glue value\n      if (\n         this.where &&\n         !this.where.glue &&\n         this.where.rules &&\n         this.where.rules.length > 0\n      )\n         this.where.glue = \"and\";\n\n      this._objectWorkspaceViews = attributes.objectWorkspaceViews || {};\n\n      this.settings = this.settings || {};\n\n      if (attributes && attributes.settings) {\n         // convert from \"0\" => true/false\n         this.settings.grouping = JSON.parse(\n            attributes.settings.grouping || false\n         );\n         this.settings.hidePrefix = JSON.parse(\n            attributes.settings.hidePrefix || false\n         );\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.viewName = this.viewName;\n\n      result.joins = this.exportJoins();\n      result.fields = this.exportFields();\n      result.where = this.where; // .workspaceFilterConditions\n\n      result.settings = this.settings;\n\n      return result;\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    */\n   importFields(fieldSettings) {\n      var newFields = [];\n      (fieldSettings || []).forEach((fieldInfo) => {\n         if (fieldInfo == null) return;\n\n         // pull object by alias name\n         let object = this.objectByAlias(fieldInfo.alias);\n\n         // Pull object from .AB\n         if (!object && this.AB) {\n            object = this.AB.objectByID(fieldInfo.objectID);\n\n            // keep\n            if (object) {\n               this._objects = this._objects || {};\n               this._objects[fieldInfo.alias] = object;\n            }\n         }\n\n         if (!object) {\n            this.__missingObject = this.__missingObject ?? [];\n            this.__missingObject.push(fieldInfo);\n            return;\n         }\n\n         let field = object.fieldByID(fieldInfo.fieldID);\n         if (!field) {\n            this.__missingFields = this.__missingFields ?? [];\n            this.__missingFields.push({\n               objID: object.id,\n               fieldID: fieldInfo.fieldID,\n               fieldInfo,\n            });\n            return;\n         }\n\n         if (!this.canFilterField(field)) {\n            this.__cantFilter = this.__cantFilter ?? [];\n            this.__cantFilter.push({ field, fieldInfo });\n         }\n\n         // check duplicate\n         let isNew =\n            newFields.filter(\n               (f) =>\n                  f.alias == fieldInfo.alias && f.field.id == fieldInfo.fieldID\n            ).length < 1;\n\n         if (!isNew) {\n            this.__duplicateFields = this.__duplicateFields ?? [];\n            this.__duplicateFields.push({ fieldInfo });\n         }\n\n         // should be a field of base/join objects\n         if (field && this.canFilterField(field) && isNew) {\n            // add alias to field\n            // create new instance of this field:\n            var def = field.toObj();\n            let clonedField = new field.constructor(def, field.object);\n\n            clonedField.alias = fieldInfo.alias;\n\n            let alias = fieldInfo.alias;\n            if (Array.isArray(this.joins())) {\n               // NOTE: query v1\n               alias = field.object.name;\n            }\n\n            newFields.push({\n               alias: alias,\n               field: clonedField,\n            });\n         }\n      });\n      this._fields = newFields;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   exportFields() {\n      var currFields = [];\n      this._fields.forEach((fieldInfo) => {\n         currFields.push({\n            alias: fieldInfo.alias,\n            objectID: fieldInfo.field.object.id,\n            fieldID: fieldInfo.field.id,\n         });\n      });\n\n      // let's persist the faulty settings so a developer or builder can\n      // review and fix it by hand.\n      (this.__missingObject || []).forEach((f) => {\n         currFields.push(f);\n      });\n\n      (this.__cantFilter || []).forEach((f) => {\n         currFields.push(f.fieldInfo);\n      });\n\n      return currFields;\n   }\n\n   /**\n    * @method fields()\n    *\n    * Support the ABObject api by returning a list of fields relevant\n    * to this ABObjectQuery.\n    *\n    * @return {array}\n    */\n   fields(fn = () => true) {\n      if (!fn) fn = () => true;\n      return this._fields.map((f) => f.field).filter(fn);\n   }\n\n   ///\n   /// Joins & Objects\n   ///\n\n   /**\n    * @method joins()\n    *\n    * return an object of joins for this Query.\n    *\n    * @return {Object}\n    */\n   joins() {\n      return this._joins || {};\n   }\n\n   /**\n    * @method objects()\n    *\n    * return an array of all the relevant ABObjects for this Query.\n    *\n    * @return {array}\n    */\n   objects(fn = () => true) {\n      // FOR proper expected operation, this fn must only return object\n      // matches for which this ABQuery is managing objects:\n\n      return this.AB.objects((o) => this.objectIDs.indexOf(o.id) > -1).filter(\n         fn\n      );\n   }\n\n   /**\n    * @method objectAlias()\n    *\n    * return alias of of ABObjects.\n    *\n    * @return {string}\n    */\n   objectAlias(objectId) {\n      let result = null;\n\n      Object.keys(this.alias2Obj || {}).forEach((alias) => {\n         if (!result && this.alias2Obj[alias] == objectId) {\n            result = alias;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method objectBase\n    * return the origin object\n    *\n    * @return {ABObject}\n    */\n   objectBase() {\n      if (!this._joins.objectID) return null;\n\n      return this.AB.objectByID(this._joins.objectID) || null;\n   }\n\n   /**\n    * @method objectByAlias()\n    * return ABObject search by alias name\n    *\n    * @param {string} - alias name\n    * @return {ABClassObject}\n    */\n   objectByAlias(alias) {\n      var objID = this.alias2Obj[alias];\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method objectByID()\n    * return ABObject search by ID\n    * @param {string} objID\n    *        The requested {ABObject}.id of the object to return.\n    * @return {ABObject} | null\n    */\n   objectByID(objID) {\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method links()\n    *\n    * return an array of links for this Query.\n    *\n    * @return {array}\n    */\n   links(filter = () => true) {\n      return (this._links || []).filter(filter);\n   }\n\n   /**\n    * @method importJoins\n    * instantiate a set of joins from the given attributes.\n    * Our joins contain a set of ABObject URLs that should already be created in our Application.\n    * @param {Object} settings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importJoins(settings) {\n      // copy join settings\n      this._joins = this.AB.cloneDeep(settings);\n\n      var uniqueObjectIDs = {};\n      // { obj.id : obj.id }\n      // a hash of object.ids for all the relevant ABObjects necessary for this\n      // ABObjectQuery\n\n      var newLinks = [];\n      // {array} of link definitions\n      // build the operating values for this._links\n\n      let storeObject = (object, alias) => {\n         if (!object) return;\n\n         // var inThere = newObjects.filter(obj => obj.id == object.id && obj.alias == alias ).length > 0;\n         // if (!inThere) {\n         // newObjects[alias] = object;\n         // this.obj2Alias[object.id] = alias;\n         this.alias2Obj[alias] = object.id;\n         uniqueObjectIDs[object.id] = object.id;\n         // newObjects.push({\n         // \talias: alias,\n         // \tobject: object\n         // });\n         // }\n      };\n\n      let storeLinks = (links) => {\n         (links || []).forEach((link) => {\n            // var inThere = newLinks.filter(l => l.fieldID == link.fieldID).length > 0;\n            // if (!inThere) {\n            newLinks.push(link);\n            // }\n         });\n      };\n\n      this.__linkProblems = this.__linkProblems ?? [];\n\n      let processJoin = (baseObject, joins) => {\n         if (!baseObject) return;\n\n         (joins || []).forEach((link) => {\n            // Convert our saved settings:\n            //\t{\n            //\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\tobjectID: \"uuid\",\t\t\t\t\t// id of the connection object\n            //\t\tlinks: [\n            //\t\t\t{\n            //\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// uhe connection field of the object we are joining with.\n            //\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n            //\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n            //\t\t\t\tlinks: [\n            //\t\t\t\t\t...\n            //\t\t\t\t]\n            //\t\t\t}\n            //\t\t]\n            //\t},\n\n            var linkField = baseObject.fieldByID(link.fieldID);\n            if (!linkField) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linkField[${link.fieldID}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            // track our linked object\n            var linkObject = this.AB.objectByID(linkField.settings.linkObject);\n            if (!linkObject) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linked field -> linkObject[${linkField.settings.linkObject}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            storeObject(linkObject, link.alias);\n\n            storeLinks(link.links);\n\n            processJoin(linkObject, link.links);\n         });\n      };\n\n      // if (!this._joins.objectURL)\n      // \t// TODO: this is old query version\n      // \treturn;\n\n      // store the root object\n      var rootObject = this.objectBase();\n      if (!rootObject) {\n         // this._objects = newObjects;\n         this.__linkProblems.push({\n            message: \"could not resolve our base object\",\n            data: {\n               objectID: this._joins?.objectID,\n            },\n         });\n         return;\n      }\n\n      storeObject(rootObject, \"BASE_OBJECT\");\n\n      storeLinks(settings.links);\n\n      processJoin(rootObject, settings.links);\n\n      // this._objects = newObjects;\n      this._links = newLinks;\n      this.objectIDs = Object.keys(uniqueObjectIDs);\n   }\n\n   /**\n    * @method exportJoins\n    * save our list of objects into our format for persisting on the server\n    * @param {array} settings\n    */\n   exportJoins() {\n      return this.AB.cloneDeep(this._joins || {});\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelQuery(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @method canFilterObject\n    * evaluate the provided object to see if it can directly be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterObject(object) {\n      if (!object) return false;\n\n      // I can filter this object if it is one of the objects in my joins\n      return (\n         this.objects((obj) => {\n            return obj.id == object.id;\n         }).length > 0\n      );\n   }\n\n   /**\n    * @method canFilterField\n    * evaluate the provided field to see if it can be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterField(field) {\n      if (!field) return false;\n\n      // I can filter a field if it's object OR the object it links to can be filtered:\n      let object = field.object;\n      // Transition:\n      // let linkedObject = this.objects(\n      //    (obj) => obj.id == field.settings.linkObject\n      // )[0];\n      var linkedObject = field.datasourceLink;\n\n      return this.canFilterObject(object) || this.canFilterObject(linkedObject);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.AB.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\n         \"ABQueryCore.urlPointer(): Depreciated: Where is this being called?\"\n      );\n      return this.application.urlQuery(acrossApp) + this.id;\n   }\n\n   /**\n    * @method isGroup\n    *\n    * @return {boolean}\n    */\n   get isGroup() {\n      return this.settings.grouping || false;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return true;\n   }\n\n   /**\n    * @method isDisabled()\n    * check this contains removed objects or fields\n    *\n    * @return {boolean}\n    */\n   isDisabled() {\n      return this.disabled || false;\n   }\n\n   get workspaceFilterConditions() {\n      let filterConditions = super.workspaceFilterConditions;\n      if (\n         filterConditions == null ||\n         filterConditions.rules == null ||\n         !filterConditions.rules.length\n      ) {\n         filterConditions = this.where;\n      }\n\n      return filterConditions;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nconst ABProcessTaskSubProcess = require(\"../platform/process/tasks/ABProcessTaskSubProcess\");\n\nmodule.exports = class ABProcessCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      this.elements().forEach((e) => {\n         e.onProcessReady();\n      });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process\";\n      this.xmlDefinition = attributes.xmlDefinition || null;\n\n      // this.json = attributes.json || null;\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         var ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connections || {};\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"xmlDefinition\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      data.elementIDs = [];\n      for (var e in this._elements) {\n         // NOTE: when a task is initially created, it doesn't have an .id\n         // so we need to reference it by it's .diagramID\n         data.elementIDs.push(\n            this._elements[e].id ?? this._elements[e].diagramID\n         );\n      }\n\n      data.connections = this._connections;\n\n      // data.participantIDs = [];\n      // for (var p in this._participants) {\n      //     data.participantIDs.push(this._participants[p].id);\n      // }\n\n      return data;\n   }\n\n   //\n   // XML Model\n   //\n\n   /**\n    * modelDefinition()\n    * return the current xml definition for this process\n    * @return {string}\n    */\n   modelDefinition() {\n      return this.xmlDefinition;\n   }\n\n   /**\n    * modelNew()\n    * initialze our xml definition to a new state.\n    * @return {string}\n    */\n   modelNew() {\n      this.xmlDefinition = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\" id=\"process-def-${this.id}\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\n  </bpmn2:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn2:definitions>`;\n\n      //// TODO: create a default Start Task here??\n   }\n\n   /**\n    * modelUpdate()\n    * update our xml definition from the provided description.\n    * @param {string} xml  bpmn2 xml definition from our modeler.\n    * @return {string}\n    */\n   modelUpdate(xml) {\n      this.xmlDefinition = xml;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn = () => true) {\n      var allConnections = Object.keys(this._connections).map((e) => {\n         return this._connections[e];\n      });\n\n      // If parent, merge connections\n      if (this.process && this.key === \"SubProcess\") {\n         allConnections = allConnections.concat(this.process.connections());\n      }\n\n      return allConnections.filter(fn);\n   }\n\n   /**\n    * connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      return this.connections((t) => {\n         return t.id == dID;\n      })[0];\n   }\n\n   /**\n    * connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      return this.connections((c) => {\n         return c.to == dID;\n      });\n   }\n\n   /**\n    * connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      return this.connections((c) => {\n         return c.from == dID;\n      });\n   }\n\n   /**\n    * connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      delete this._connections[element.id];\n   }\n\n   /**\n    * connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      var bo = element.businessObject;\n      var from = null;\n      if (bo.sourceRef) {\n         from = bo.sourceRef.id;\n      }\n\n      var to = null;\n      if (bo.targetRef) {\n         to = bo.targetRef.id;\n      }\n\n      var connection = {\n         id: element.id,\n         type: element.type,\n         from: from,\n         to: to,\n      };\n      return connection;\n   }\n\n   /**\n    * connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      var simpleConn = this.connectionSimplyElement(element);\n      if (simpleConn.from && simpleConn.to && element.parent) {\n         this._connections[simpleConn.id] = simpleConn;\n      } else {\n         // this connection is no longer connecting anything thing.\n         // it is being removed.\n         this.connectionRemove(element);\n      }\n   }\n\n   /**\n    * elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      var allElements = Object.keys(this._elements).map((e) => {\n         return this._elements[e];\n      });\n      return allElements.filter(fn);\n   }\n\n   /**\n    * elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      this._elements[element.id || element.diagramID] = element;\n   }\n\n   /**\n    * elementByID()\n    * return the {ABProcessElement} that has the given .id\n    * @param {string} id\n    * @return {ABProcess[OBJ]}\n    */\n   elementByID(id) {\n      return this._elements[id] ?? null;\n   }\n\n   /**\n    * elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      return this.elements((t) => {\n         return t.diagramID == dID;\n      })[0];\n   }\n\n   /**\n    * elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      delete this._elements[def.id || def.diagramID];\n   }\n\n   /**\n    * isTriggeredBy()\n    * scan our tasks and see if we have a \"trigger\" task that responds to\n    * the provided key.\n    * @param {string} key the trigger key\n    * @return {bool}\n    */\n   isTriggeredBy(key) {\n      return this.taskForTriggerKey(key) != null;\n   }\n\n   /**\n    * connectionNextTask()\n    * return the ABProcessElement(s) that are after the given Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionNextTask(currElement) {\n      var elements = [];\n      var nextConnections = this.connections((c) => {\n         return c.from == currElement.diagramID;\n      });\n      nextConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.to;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      var elements = [];\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      prevConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.from;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      // var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      // return values.length > 0\n      //    ? values.length > 1\n      //       ? values\n      //       : values[0]\n      //    : null;\n\n      var tasksToAsk = this.allPreviousTasks(currElement)\n      var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      return values.length > 0\n         ? values.length > 1\n            ? values\n            : values[0]\n         : null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataFields\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * allPreviousConnections()\n    * walk through the current graph and return all the previous connections\n    * leading up to the given {ProcessElement}\n    * @param {Connection} conn\n    * @param {hash} hashConn\n    *        { connection.id : connection }\n    * @return {array}\n    */\n   allPreviousConnectionsForConnection(conn, hashConn) {\n      var prevConnections = this.connections((c) => {\n         return c.to == conn.from;\n      });\n\n      prevConnections.forEach((c) => {\n         if (!hashConn[c.id]) {\n            hashConn[c.id] = c;\n            this.allPreviousConnectionsForConnection(c, hashConn);\n         }\n      });\n   }\n   allPreviousConnectionsForElement(currElement) {\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      var hashConn = {\n         /* connection.id : connection */\n      };\n      // hashConn will contains the final collection of connections.\n\n      prevConnections.forEach((c) => {\n         hashConn[c.id] = c;\n         this.allPreviousConnectionsForConnection(c, hashConn);\n      });\n\n      // TODO: detect circle backs and remove connections that\n      // resolve back to currElement\n\n      // convert our hash into an array\n      return Object.keys(hashConn).map((k) => hashConn[k]);\n   }\n\n   allPreviousTasks(currElement) {\n      var prevTasks = {}; /* task.id : task */\n      var allPreviousConnections =\n         this.allPreviousConnectionsForElement(currElement);\n      var task;\n      allPreviousConnections.forEach((conn) => {\n         // each conn has a .to and a .from => grab both tasks\n         task = this.elementForDiagramID(conn.to);\n         if (task) prevTasks[task.id] = task;\n\n         task = this.elementForDiagramID(conn.from);\n         if (task) prevTasks[task.id] = task;\n      });\n\n      var tasksToAsk = Object.keys(prevTasks)\n         .map((k) => prevTasks[k])\n         .filter((t) => t.id != currElement.id);\n\n      return tasksToAsk;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataObjects(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataObjects\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * taskForTriggerKey()\n    * return one or more tasks that respond to the given trigger key\n    * @param {string} key a trigger key\n    * @return {[ABProcessTask,...]}\n    */\n   taskForTriggerKey(key) {\n      var trigger = this.elements((t) => {\n         return t.triggerKey == key;\n      })[0];\n      if (trigger) {\n         return trigger;\n      } else {\n         return null;\n      }\n   }\n\n   //\n   // Participants\n   //\n\n   // /**\n   //  * participants()\n   //  * return an array of participants that match the given filter (or all tasks\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided participants\n   //  *                should be returned.\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participants(fn) {\n   //     if (!fn)\n   //         fn = () => {\n   //             return true;\n   //         };\n   //     var all = Object.keys(this._participants).map((p) => {\n   //         return this._participants[p];\n   //     });\n   //     return all.filter(fn);\n   // }\n\n   // /**\n   //  * participantsForDiagramID()\n   //  * return the participant(s) that are tied to the given xml diagram ID.\n   //  * @param {string} dID the diagram ID\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participantsForDiagramID(dID) {\n   //     return this.participants((p) => {\n   //         return p.diagramID == dID;\n   //     });\n   // }\n};\n\nvar queryPreviousTasks = (\n   list,\n   method,\n   param,\n   process,\n   responses,\n   processedIDs\n) => {\n   // recursive fn() to step through our graph and compile\n   // results.\n   if (typeof responses == \"undefined\") {\n      responses = [];\n   }\n   if (typeof processedIDs == \"undefined\") {\n      processedIDs = [];\n   }\n   if (list.length == 0) {\n      return responses;\n   } else {\n      // get next task\n      const task = list.shift();\n\n      // if we haven't already done task:\n      if (processedIDs.indexOf(task.diagramID) == -1) {\n         // mark this task as having been processed\n         processedIDs.push(task.diagramID);\n\n         let value = null;\n\n         // get any field's it provides\n         if (!(task instanceof ABProcessTaskSubProcess))\n            value = task[method].apply(task, param);\n\n         // value = task[method].apply(task, param);\n\n         if (value === null) value = [];\n         responses = _concat(responses, value);\n\n         // add any previous tasks to our list\n         list = _concat(list, process.connectionPreviousTask(task));\n      }\n\n      // process next Task\n      return queryPreviousTasks(\n         list,\n         method,\n         param,\n         process,\n         responses,\n         processedIDs\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABStepCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"text\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"New Step\";\n      this.type = attributes.type || \"step\";\n      this.text = attributes.text || \"\";\n      this.settings = attributes.settings || {};\n      this.settings.event = attributes?.settings?.event || \"click\";\n      this.settings.el = attributes?.settings?.el || \"\";\n      // this.xmlDefinition = attributes.xmlDefinition || null;\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // debugger;\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"settings\", \"type\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   // /**\n   //  * steps()\n   //  * return an array of steps that match the given filter (or all steps\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided element\n   //  *                should be returned.\n   //  * @return {[ABStep]}\n   //  */\n   // steps(fn = () => true) {\n   //    var allSteps = Object.keys(this._steps).map((e) => {\n   //       return this._steps[e];\n   //    });\n   //    return allSteps.filter(fn);\n   // }\n\n   // /**\n   //  * stepAdd()\n   //  * insert a step to be added to this hint.\n   //  * @param {ABStep} element\n   //  *        the full instance of an ABStep to track.\n   //  */\n   // stepAdd(step) {\n   //    this._steps[step.id] = step;\n   // }\n\n   // /**\n   //  * stepByID()\n   //  * return the {ABStep} that has the given .id\n   //  * @param {string} id\n   //  * @return {ABStep[OBJ]}\n   //  */\n   // stepByID(id) {\n   //    return this._step[id] ?? null;\n   // }\n\n   // /**\n   //  * stepRemove()\n   //  * remove a step from being displayed by this hint.\n   //  * @param {obj|ABStep} def\n   //  *        a definition of, or full Object instance of the ABStep\n   //  *        to remove.\n   //  */\n   // stepRemove(def) {\n   //    delete this._steps[def.id];\n   // }\n};\n","/*\n * ABViewManager\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\nvar AllViews = [\n   require(\"../platform/views/ABView\"),\n   require(\"../platform/views/ABViewCarousel\"),\n   require(\"../platform/views/ABViewChart\"),\n   require(\"../platform/views/ABViewChartArea\"),\n   require(\"../platform/views/ABViewChartBar\"),\n   require(\"../platform/views/ABViewChartLine\"),\n   require(\"../platform/views/ABViewChartPie\"),\n   require(\"../platform/views/ABViewComment\"),\n   require(\"../platform/views/ABViewConditionalContainer\"),\n   require(\"../platform/views/ABViewConnectDataFilter\"),\n   require(\"../platform/views/ABViewContainer\"),\n   require(\"../platform/views/ABViewCSVExporter\"),\n   require(\"../platform/views/ABViewCSVImporter\"),\n   require(\"../platform/views/ABViewDataFilter\"),\n   require(\"../platform/views/ABViewDataview\"),\n   require(\"../platform/views/ABViewDocxBuilder\"),\n   require(\"../platform/views/ABViewGrid\"),\n   require(\"../platform/views/ABViewImage\"),\n   require(\"../platform/views/ABViewLabel\"),\n   require(\"../platform/views/ABViewLayout\"),\n   require(\"../platform/views/ABViewList\"),\n   require(\"../platform/views/ABViewMenu\"),\n   require(\"../platform/views/ABViewPage\"),\n   require(\"../platform/views/ABViewPDFImporter\"),\n   require(\"../platform/views/ABViewPivot\"),\n   require(\"../platform/views/ABViewTab\"),\n   require(\"../platform/views/ABViewText\"),\n\n   //\n   // Special Editors\n   //\n   require(\"../platform/views/ABViewGantt\"),\n   require(\"../platform/views/ABViewKanban\"),\n   require(\"../platform/views/ABViewReportsManager\"),\n   require(\"../platform/views/ABViewScheduler\"),\n\n   //\n   // Detail Components\n   //\n   require(\"../platform/views/ABViewDetail\"),\n   require(\"../platform/views/ABViewDetailCheckbox\"),\n   require(\"../platform/views/ABViewDetailConnect\"),\n   require(\"../platform/views/ABViewDetailCustom\"),\n   require(\"../platform/views/ABViewDetailImage\"),\n   // require(\"../platform/views/ABViewDetailSelectivity\"),\n   require(\"../platform/views/ABViewDetailText\"),\n   require(\"../platform/views/ABViewDetailTree\"),\n\n   //\n   // Form Components\n   //\n   require(\"../platform/views/ABViewForm\"),\n   require(\"../platform/views/ABViewFormButton\"),\n   require(\"../platform/views/ABViewFormCheckbox\"),\n   require(\"../platform/views/ABViewFormConnect\"),\n   require(\"../platform/views/ABViewFormCustom\"),\n   require(\"../platform/views/ABViewFormDatepicker\"),\n   require(\"../platform/views/ABViewFormJson\"),\n   require(\"../platform/views/ABViewFormNumber\"),\n   require(\"../platform/views/ABViewFormReadonly\"),\n   require(\"../platform/views/ABViewFormSelectMultiple\"),\n   require(\"../platform/views/ABViewFormSelectSingle\"),\n   require(\"../platform/views/ABViewFormTextbox\"),\n   require(\"../platform/views/ABViewFormTree\"),\n];\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\nAllViews.forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","/*\n * ABViewManagerMobile\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\n[\n   require(\"../platform/mobile/ABMobilePage\"),\n   require(\"../platform/mobile/ABMobileView\"),\n   require(\"../platform/mobile/ABMobileViewForm\"),\n   require(\"../platform/mobile/ABMobileViewFormButton\"),\n   require(\"../platform/mobile/ABMobileViewFormCheckbox\"),\n   require(\"../platform/mobile/ABMobileViewFormConnect\"),\n   require(\"../platform/mobile/ABMobileViewFormDate\"),\n   require(\"../platform/mobile/ABMobileViewFormDatetime\"),\n   require(\"../platform/mobile/ABMobileViewFormEmail\"),\n   require(\"../platform/mobile/ABMobileViewFormFile\"),\n   require(\"../platform/mobile/ABMobileViewFormFormula\"),\n   require(\"../platform/mobile/ABMobileViewFormImage\"),\n   require(\"../platform/mobile/ABMobileViewFormNumber\"),\n   require(\"../platform/mobile/ABMobileViewFormReadonly\"),\n   require(\"../platform/mobile/ABMobileViewFormSelectMultiple\"),\n   require(\"../platform/mobile/ABMobileViewFormSelectSingle\"),\n   require(\"../platform/mobile/ABMobileViewFormTextbox\"),\n   require(\"../platform/mobile/ABMobileViewLabel\"),\n   require(\"../platform/mobile/ABMobileViewList\"),\n].forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"mobile-view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   const columnName = field.columnName;\n\n   let value = null;\n\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName];\n   } else {\n      value = rowData[columnName];\n   }\n\n   // pull relation data\n   if (value == null && field.relationName) {\n      const relationName = field.relationName();\n      const pureRelationName = relationName.split(\".\")[1]; // support [BASE_OBJECT.columnName] field name of ABQuery\n      value = rowData[relationName] || rowData[pureRelationName];\n   }\n\n   if (value != null && !isNaN(value)) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (const k in rowData) {\n      const key = k.split(\".\")[1];\n      if (key && key == field.id) {\n         value = rowData[k];\n      }\n   }\n\n   if (\n      (value == null || (typeof value == \"number\" && isNaN(value))) &&\n      field.format\n   )\n      value = field.format(rowData);\n\n   return value;\n}\n\nfunction getConnectFieldValue(rowData, field) {\n   let connectedVal = \"\";\n\n   if (rowData) {\n      let relationName = field.relationName();\n      if (rowData[relationName]) {\n         connectedVal =\n            (field.indexField\n               ? rowData[relationName][field.indexField.columnName]\n               : null) ?? // custom index\n            (field.indexField2\n               ? rowData[relationName][field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData[relationName].id ??\n            rowData[relationName];\n      } else {\n         let fieldVal = getFieldVal(rowData, field);\n         if (fieldVal != null) {\n            connectedVal = fieldVal;\n         }\n      }\n   }\n   return connectedVal;\n}\n\nmodule.exports = class FilterComplexCore extends ABComponent {\n   constructor(idBase, AB) {\n      idBase = idBase || \"ab_filter_complex\";\n\n      if (typeof AB === \"undefined\") {\n         console.error(\"FilterComplexCore(): being called without an AB!\");\n      }\n\n      super(null, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.condition = {};\n      // const batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      const _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options = {}) {\n      this._settings = options;\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      // If conditions but no data return false\n      if (condition?.rules?.length && rowData == null) return false;\n\n      // If no conditions, then return true\n      if (!condition?.rules?.length || rowData == null) return true;\n\n      let result = condition.glue === \"and\" ? true : false;\n\n      condition.rules.forEach((filter) => {\n         // Nested filters\n         if (filter?.rules?.length) {\n            if (condition.glue === \"or\")\n               result = result || this.isValid(rowData, filter);\n            else result = result && this.isValid(rowData, filter);\n            return;\n         }\n         // Skip incomplete filter condition\n         else if (!filter.key || !filter.rule) return;\n\n         const fieldInfo = (this._Fields || []).filter(\n            (f) => f.id == filter.key || f.columnName == filter.key\n         )[0];\n\n         if (!fieldInfo) return;\n\n         let condResult = null;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         let ruleFieldType = fieldInfo.key;\n\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         let value = null;\n\n         if (fieldInfo.relationName) {\n            value = getConnectFieldValue(rowData, fieldInfo);\n         } else {\n            value = getFieldVal(rowData, fieldInfo);\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               if (value == null) value = \"\";\n\n               condResult = this.textValid(value, filter.rule, filter.value);\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = this.dateValid(value, filter.rule, filter.value);\n               break;\n            case \"number\":\n            case \"calculate\":\n            case \"formula\":\n               condResult = this.numberValid(value, filter.rule, filter.value);\n               break;\n            case \"list\":\n               condResult = this.listValid(value, filter.rule, filter.value);\n               break;\n            case \"boolean\":\n               condResult = this.booleanValid(value, filter.rule, filter.value);\n               break;\n            case \"user\":\n               condResult = this.userValid(value, filter.rule, filter.value);\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = this.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = this.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (condition.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   textValid(value, rule, compareValue) {\n      let result = false;\n\n      value = value.trim().toLowerCase();\n      value = this._logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n      compareValue = compareValue.trim().toLowerCase().replace(/  +/g, \" \");\n\n      // support \"john smith\" => \"john\" OR/AND \"smith\"\n      const compareArray = compareValue.split(\" \");\n\n      switch (rule) {\n         case \"contains\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value.indexOf(val) > -1;\n            });\n            break;\n         case \"not_contains\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value.indexOf(val) < 0;\n            });\n            break;\n         case \"equals\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value == val;\n            });\n            break;\n         case \"not_equal\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value != val;\n            });\n            break;\n         case \"is_empty\":\n            result = value == \"\" || value == null;\n            break;\n         case \"is_not_empty\":\n            result = value != \"\" && value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   dateValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!(value instanceof Date)) value = new Date(value);\n\n      if (!(compareValue instanceof Date))\n         compareValue = new Date(compareValue);\n\n      switch (rule) {\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   numberValid(value, rule, compareValue) {\n      let result = false;\n\n      value = Number(value);\n      compareValue = Number(compareValue);\n\n      switch (rule) {\n         case \"equal\":\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         case \"not_equal\":\n            result = value != compareValue;\n            break;\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   listValid(value, rule, compareValue) {\n      let result = false;\n\n      // compareValue = compareValue.toLowerCase();\n\n      if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n      switch (rule) {\n         case \"equals\":\n            if (value) result = compareValue.indexOf(value) > -1;\n            break;\n         case \"not_equal\":\n            if (value) result = compareValue.indexOf(value) < 0;\n            else result = true;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   booleanValid(value, rule, compareValue) {\n      let result = false;\n\n      switch (rule) {\n         case \"checked\":\n            result = value == true || value > 0 || value == \"true\";\n            break;\n         case \"unchecked\":\n            result = value == false || value <= 0 || value == \"false\" || value == null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   userValid(value, rule, compareValue) {\n      if (!value) return false;\n      let result = false;\n\n      // if (Array.isArray(value)) value = [value];\n\n      switch (rule) {\n         case \"is_current_user\":\n            result = value == this.Account.username;\n            break;\n         case \"is_not_current_user\":\n            result = value != this.Account.username;\n            break;\n         case \"contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length > 0;\n            break;\n         case \"not_contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length < 1;\n            break;\n         case \"equals\":\n            result = (value ?? []).indexOf(compareValue) > -1;\n            break;\n         case \"not_equal\":\n            result = (value ?? []).indexOf(compareValue) < 0;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   queryFieldValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      // queryId:fieldId\n      const queryId = compareValue.split(\":\")[0],\n         fieldId = compareValue.split(\":\")[1];\n\n      // if no query\n      const query = this.AB.queries((q) => q.id == queryId)[0];\n      if (!query) return result;\n\n      // if no field\n      const field = query.fields((f) => f.id == fieldId)[0];\n      if (!field) return result;\n\n      let qIdBase = \"{idBase}-query-field-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFieldFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFieldFilter.Account = this.Account;\n      inQueryFieldFilter.fieldsLoad(query.fields());\n      inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query_field\":\n            result = inQueryFieldFilter.isValid(rowData);\n            break;\n         case \"not_in_query_field\":\n            result = !inQueryFieldFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   inQueryValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue || !this.AB) return result;\n\n      // if no query\n      let query = this.AB.queries((q) => q.id == compareValue)[0];\n      if (!query) return result;\n\n      let qIdBase = \"{idBase}-query-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFilter.Account = this.Account;\n      inQueryFilter.fieldsLoad(query.fields());\n      inQueryFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query\":\n            result = inQueryFilter.isValid(rowData);\n            break;\n         case \"not_in_query\":\n            result = !inQueryFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   dataCollectionValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      let dc = this.AB.datacollections((d) => d.id == compareValue)[0];\n\n      switch (rule) {\n         case \"in_data_collection\":\n            if (!dc) return false;\n\n            result = dc.getData((d) => d.id == value.id).length > 0;\n            break;\n         case \"not_in_data_collection\":\n            if (!dc) return true;\n\n            result = dc.getData((d) => d.id == value.id).length < 1;\n            break;\n      }\n\n      return result;\n   }\n\n   connectFieldValid(rowData, field, rule, compareValue) {\n      let relationName = field.relationName();\n\n      let connectedVal = \"\";\n\n      if (rowData) {\n         if (rowData[relationName]) {\n            connectedVal = (\n               (field.indexField\n                  ? rowData[relationName][field.indexField.columnName]\n                  : null) ?? // custom index\n               (field.indexField2\n                  ? rowData[relationName][field.indexField2.columnName]\n                  : null) ?? // custom index 2\n               rowData[relationName].id ??\n               rowData[relationName]\n            )\n               .toString()\n               .toLowerCase();\n         } else {\n            let fieldVal = getFieldVal(rowData, field);\n            if (fieldVal != null) {\n               connectedVal = fieldVal;\n            }\n         }\n      }\n\n      // If value will be the connected object, then pull value (string)\n      if (typeof connectedVal == \"object\") {\n         connectedVal =\n            connectedVal[field.indexField.columnName] ??\n            connectedVal[field.indexField2.columnName] ??\n            connectedVal[field.columnName] ??\n            connectedVal;\n      }\n\n      let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n      switch (rule) {\n         case \"contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) > -1;\n         case \"not_contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) == -1;\n         case \"equals\":\n            return connectedVal == compareValueLowercase;\n         case \"not_equal\":\n            return connectedVal != compareValueLowercase;\n         case \"in_query\":\n         case \"not_in_query\":\n            return this.inQueryValid(rowData[relationName], rule, compareValue);\n         case \"is_current_user\":\n         case \"is_not_current_user\":\n         case \"contain_current_user\":\n         case \"not_contain_current_user\":\n            return this.userValid(connectedVal, rule, compareValue);\n         case \"is_empty\":\n            return (\n               rowData[relationName] == null ||\n               rowData[relationName].length < 1 ||\n               rowData[relationName] == \"\"\n            );\n         case \"is_not_empty\":\n            return (\n               rowData[relationName] != null &&\n               ((Array.isArray(rowData[relationName]) &&\n                  rowData[relationName].length > 0) ||\n                  rowData[relationName] != \"\")\n            );\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            return this.dataCollectionValid(connectedVal, rule, compareValue);\n      }\n   }\n\n   thisObjectValid(rowData, rule, compareValue) {\n      let result = false;\n      let query = null;\n      let listThisObjects = null;\n      let alias = null;\n      let newRowData = null;\n\n      switch (rule) {\n         // if in_query condition\n         case \"in_query\":\n         case \"not_in_query\":\n            if (!this._Object) return result;\n\n            // if > 1 copy of this object in query ==> Error!\n            query = this.AB.queries((q) => q.id == compareValue)[0];\n\n            if (!query) return result;\n\n            listThisObjects = query.objects((o) => {\n               return o.id == this._Object.id;\n            });\n\n            if (listThisObjects.length > 1) {\n               // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n               // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n               // this object as part of the query.\n\n               console.error(\n                  \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n               );\n\n               return true;\n            }\n\n            // get this object's alias from the query\n            alias = query.objectAlias(this._Object.id);\n\n            // make sure all my columns in rowData are prefixed by \"alias\".columnName\n            newRowData = {};\n\n            Object.keys(rowData).forEach((key) => {\n               newRowData[`${alias}.${key}`] = rowData[key];\n            });\n\n            // then pass this on to the _logic.queryValid();\n            return this.inQueryValid(newRowData, rule, compareValue);\n\n         // if in_datacollection condition\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            // send rowData, null to datacollectionValid()\n            return this.dataCollectionValid(rowData, rule, compareValue);\n      }\n   }\n\n   processFieldsLoad(processFields = []) {\n      if (processFields && !Array.isArray(processFields)) {\n         processFields = [processFields];\n      }\n      this._ProcessFields = processFields;\n\n      this.uiInit();\n   }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param array {ABField}\n    * @param object {ABObject} [optional]\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter(\n         (f) => f && f.fieldIsFilterable && f.fieldIsFilterable()\n      );\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         // insert our uuid in addition to the rest of our fields\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n            key: \"uuid\",\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         // NOTE: Could not reference ABObjectQuery because recursive looping reference\n         // if (object instanceof ABObjectQuery) {\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   fieldsToQB() {\n      /*\n      let mapTypes = {\n         LongText: \"string\",\n         email: \"string\",\n         datetime: \"date\",\n         connectField: \"connectObject\"\n      };\n\n      const fields = this._Fields.map((f) => {\n         // Label\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         // Type\n         let type = f.key || f.type;\n         if (mapTypes[type]) type = mapTypes[type];\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return { id: f.columnName, value: label, type: type };\n      });\n      return fields;\n      */\n\n      let fields = (this._Fields || []).map((f) => {\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         let type = \"text\"; // \"text\", \"number\", \"date\"\n         let conditions = [];\n         let processFieldKeys = [];\n         let hasQueryField = true;\n\n         if (!this._settings.isProcessParticipant)\n            switch (f.key) {\n               case \"boolean\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersBoolean(f)\n                  );\n                  processFieldKeys = [\"boolean\"];\n\n                  break;\n\n               case \"connectObject\":\n                  conditions = this.fieldsAddFiltersConnectObject(f);\n\n                  // Add filter options to Custom index\n                  if (\n                     // 1:M\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"many\") ||\n                     // 1:1 isSource = true\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"one\" &&\n                        f.settings.isSource)\n                  ) {\n                     const stringResults = this.fieldsAddFiltersString(\n                        f\n                     ).filter(\n                        (opt) =>\n                           f.settings.isCustomFK ||\n                           // If this connect field does not use custom FK, then allow just `is empty` and `is not empty` filter options\n                           opt.id == \"is_empty\" ||\n                           opt.id == \"is_not_empty\"\n                     );\n                     conditions = stringResults.concat(conditions);\n                  }\n\n                  hasQueryField = false;\n                  processFieldKeys = [\"connectObject\"];\n\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  type = \"date\";\n                  conditions = conditions.concat(this.fieldsAddFiltersDate(f));\n                  processFieldKeys = [\"date\", \"datetime\"];\n\n                  break;\n\n               case \"calculate\":\n               case \"formula\":\n               case \"number\":\n                  type = \"number\";\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersNumber(f)\n                  );\n                  processFieldKeys = [\"calculate\", \"formula\", \"number\"];\n\n                  break;\n\n               case \"string\":\n               case \"LongText\":\n               case \"email\":\n               case \"AutoIndex\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersString(f)\n                  );\n                  processFieldKeys = [\n                     \"string\",\n                     \"LongText\",\n                     \"email\",\n                     \"AutoIndex\",\n                  ];\n\n                  break;\n\n               case \"list\":\n                  conditions = conditions.concat(this.fieldsAddFiltersList(f));\n\n                  break;\n\n               case \"user\":\n                  conditions = conditions.concat(this.fieldsAddFiltersUser(f));\n                  processFieldKeys = [\"user\"];\n\n                  break;\n\n               case \"uuid\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersThisObject(f)\n                  );\n                  hasQueryField = false;\n\n                  break;\n               default:\n                  break;\n            }\n         else\n            switch (f.key) {\n               case \"connectObject\":\n               case \"uuid\":\n                  hasQueryField = false;\n\n                  break;\n            }\n\n         conditions = conditions.concat(\n            this.fieldsAddFiltersQuery(f, hasQueryField)\n         );\n\n         if (this._settings.isRecordRule) {\n            conditions = conditions.concat(this.fieldsAddFiltersRecordRule(f));\n         }\n\n         let isProcessField =\n            (this._ProcessFields || []).filter((processField) => {\n               if (!processField) return false;\n\n               if (processField.field) {\n                  return processFieldKeys.includes(processField.field.key);\n               } else if (processField.key) {\n                  // uuid\n                  let processFieldId = processField.key.split(\".\").pop();\n                  return processFieldId == f.id || processFieldId == f.key;\n               }\n            }).length > 0;\n\n         if (isProcessField) {\n            conditions = conditions.concat(this.fieldsAddFiltersContext(f));\n         }\n\n         conditions = conditions.concat(this.fieldsAddFiltersCustom(f));\n\n         // let type = f.id; // the default unique identifier for our filter types\n         // if (f.id == \"this_object\") {\n         //    // if this happens to be our special \"this_object\" field, then our\n         //    // type needs to be the \"uuid\" type in the definition:\n         //    type = f.type;\n         // }\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return {\n            id: f.id,\n            value: label,\n            type: type,\n            conditions: conditions,\n            // format: () => {},\n         };\n      });\n\n      // !!! Process Fields of ABProcess\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L636\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L564\n      // (this._ProcessFields || [])\n      //    // if there is no .field, it is probably an embedded special field\n      //    .filter((pField) => pField.field == null)\n      //    .forEach((pField) => {\n      //       // like: .uuid\n      //       let key = pField.key.split(\".\").pop();\n      //       if (key == \"uuid\" && this._Object) {\n      //          fields.unshift({\n      //             id: pField.key,\n      //             value: this._Object.label,\n      //             type: \"text\",\n      //             conditions: this.fieldsAddFiltersContext(),\n      //          });\n      //       }\n      //    });\n\n      return fields;\n   }\n\n   fieldsAddFiltersDate(field) {\n      let dateConditions = {\n         less: this.labels.component.beforeCondition,\n         greater: this.labels.component.afterCondition,\n         less_or_equal: this.labels.component.onOrBeforeCondition,\n         greater_or_equal: this.labels.component.onOrAfterCondition,\n         less_current: this.labels.component.beforeCurrentCondition,\n         greater_current: this.labels.component.afterCurrentCondition,\n         less_or_equal_current:\n            this.labels.component.onOrBeforeCurrentCondition,\n         greater_or_equal_current:\n            this.labels.component.onOrAfterCurrentCondition,\n         last_days: this.labels.component.onLastDaysCondition,\n         next_days: this.labels.component.onNextDaysCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in dateConditions) {\n         result.push({\n            id: condKey,\n            value: dateConditions[condKey],\n            batch: \"datepicker\",\n            handler: (a, b) => this.dateValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersString(field) {\n      let stringConditions = {\n         contains: {\n            batch: \"text\",\n            label: this.labels.component.containsCondition,\n         },\n         not_contains: {\n            batch: \"text\",\n            label: this.labels.component.notContainsCondition,\n         },\n         equals: {\n            batch: \"text\",\n            label: this.labels.component.isCondition,\n         },\n         not_equal: {\n            batch: \"text\",\n            label: this.labels.component.isNotCondition,\n         },\n         is_empty: {\n            batch: \"none\",\n            label: this.labels.component.isEmpty,\n         },\n         is_not_empty: {\n            batch: \"none\",\n            label: this.labels.component.isNotEmpty,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in stringConditions) {\n         result.push({\n            id: condKey,\n            value: stringConditions[condKey].label,\n            batch: stringConditions[condKey].batch,\n            handler: (a, b) => this.textValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersNumber(field) {\n      let numberConditions = {\n         equals: this.labels.component.equalCondition,\n         not_equal: this.labels.component.notEqualCondition,\n         less: this.labels.component.lessThanCondition,\n         greater: this.labels.component.moreThanCondition,\n         less_or_equal: this.labels.component.lessThanOrEqualCondition,\n         greater_or_equal: this.labels.component.moreThanOrEqualCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in numberConditions) {\n         result.push({\n            id: condKey,\n            value: numberConditions[condKey],\n            batch: \"text\",\n            handler: (a, b) => this.numberValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersList(field) {\n      let listConditions = {\n         equals: this.labels.component.equalListCondition,\n         not_equal: this.labels.component.notEqualListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in listConditions) {\n         result.push({\n            id: condKey,\n            value: listConditions[condKey],\n            batch: \"list\",\n            handler: (a, b) => this.listValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersBoolean(field) {\n      let booleanConditions = {\n         checked: this.labels.component.checkedCondition,\n         unchecked: this.labels.component.notCheckedCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in booleanConditions) {\n         result.push({\n            id: condKey,\n            value: booleanConditions[condKey],\n            batch: \"none\",\n            handler: (a, b) => this.booleanValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersUser(field) {\n      let userConditions = {\n         is_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isCurrentUserCondition,\n         },\n         is_not_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isNotCurrentUserCondition,\n         },\n         contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.containsCurrentUserCondition,\n         },\n         not_contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.notContainsCurrentUserCondition,\n         },\n         equals: {\n            batch: \"user\",\n            label: this.labels.component.equalListCondition,\n         },\n         not_equal: {\n            batch: \"user\",\n            label: this.labels.component.notEqualListCondition,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in userConditions) {\n         result.push({\n            id: condKey,\n            value: userConditions[condKey].label,\n            batch: userConditions[condKey].batch,\n            handler: (a, b) => this.userValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersConnectObject(field) {\n      const connectConditions = {\n         same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.sameAsUser,\n            handler: (a, b) => this.userValid(a, \"same_as_user\", b),\n         },\n         not_same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.notSameAsUser,\n            handler: (a, b) => this.userValid(a, \"not_same_as_user\", b),\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"in_data_collection\", b),\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"not_in_data_collection\", b),\n         },\n         // TODO\n         // contains: this.labels.component.containsCondition,\n         // not_contains: this.labels.component.notContainCondition,\n         // equals: this.labels.component.isCondition,\n         // not_equal: this.labels.component.isNotCondition\n      };\n\n      const result = [];\n\n      for (let condKey in connectConditions) {\n         result.push({\n            id: condKey,\n            value: connectConditions[condKey].label,\n            batch: connectConditions[condKey].batch,\n            handler: connectConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQuery(field, hasQueryField = false) {\n      const queryConditions = hasQueryField\n         ? {\n              in_query_field: {\n                 label: this.labels.component.inQueryField,\n                 batch: \"queryField\",\n              },\n              not_in_query_field: {\n                 label: this.labels.component.notInQueryField,\n                 batch: \"queryField\",\n              },\n           }\n         : {\n              in_query: {\n                 label: this.labels.component.inQuery,\n                 batch: \"query\",\n              },\n              not_in_query: {\n                 label: this.labels.component.notInQuery,\n                 batch: \"query\",\n              },\n           };\n\n      const result = [];\n\n      for (const condKey in queryConditions) {\n         result.push({\n            id: condKey,\n            value: queryConditions[condKey].label,\n            batch: queryConditions[condKey].batch,\n            handler: (a, b) => this.queryFieldValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersThisObject(field) {\n      let thisObjectConditions = {\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in thisObjectConditions) {\n         result.push({\n            id: condKey,\n            value: thisObjectConditions[condKey].label,\n            batch: thisObjectConditions[condKey].batch,\n            handler: (a, b) => this.thisObjectValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersRecordRule(field) {\n      let recordRuleConditions = {\n         same_as_field: this.labels.component.sameAsField,\n         not_same_as_field: this.labels.component.notSameAsField,\n      };\n\n      let result = [];\n\n      for (let condKey in recordRuleConditions) {\n         result.push({\n            id: condKey,\n            value: recordRuleConditions[condKey],\n            batch: \"recordRule\",\n            handler: (a, b) => true, // TODO: record rule validation\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersContext(field) {\n      let contextConditions = {\n         context_equals: {\n            batch: \"context\",\n            label: this.labels.component.equalsProcessValue,\n            handler: (a, b) => a == b,\n         },\n         context_not_equal: {\n            batch: \"context\",\n            label: this.labels.component.notEqualsProcessValueCondition,\n            handler: (a, b) => a != b,\n         },\n         context_in: {\n            batch: \"context\",\n            label: this.labels.component.inProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) > -1,\n         },\n         context_not_in: {\n            batch: \"context\",\n            label: this.labels.component.notInProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) == -1,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in contextConditions) {\n         result.push({\n            id: condKey,\n            value: contextConditions[condKey].label,\n            batch: contextConditions[condKey].batch,\n            handler: contextConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersCustom(field) {\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id || field] ?? {};\n      return options.conditions ?? [];\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    *\n    * return an array of all the ABObjectQuery.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      const queryList = this._Queries ?? this.AB?.queries?.() ?? [];\n\n      return queryList.filter((q) => filter(q));\n   }\n\n   setValue(settings) {\n      this.condition = settings || {};\n\n      this.condition.rules = this.condition.rules || [];\n   }\n\n   /**\n    * @method getValue\n    * return the current condition of the filter.\n    * @return {JSON} -\n    * {\n    * \tglue: '', // 'and', 'or'\n    *\t\trules: [\n    *\t\t\t{\n    *\t\t\t\tkey:\t'uuid',\n    *\t\t\t\trule:\t'rule',\n    *\t\t\t\tvalue:\t'value'\n    *\t\t\t}\n    *\t\t]\n    * }\n    */\n   getValue() {\n      // When asked for a value before a condition is set, default the\n      // unset glue to \"and\";\n      if (typeof this.condition.glue == \"undefined\") {\n         this.condition.glue = \"and\";\n      }\n      return this.condition;\n   }\n\n   isComplete() {\n      let result = true;\n\n      const noValueRules = [\n         \"is_current_user\",\n         \"is_not_current_user\",\n         \"contain_current_user\",\n         \"not_contain_current_user\",\n         \"same_as_user\",\n         \"not_same_as_user\",\n         \"is_empty\",\n         \"is_not_empty\",\n         \"checked\",\n         \"unchecked\",\n      ];\n\n      const isCompleteRules = (rules = []) => {\n         if (result == false) return;\n\n         rules.forEach((r) => {\n            if (r?.rules && Array.isArray(r?.rules)) {\n               isCompleteRules(r?.rules);\n            } else {\n               result =\n                  result &&\n                  r?.key != null &&\n                  r?.key != \"\" &&\n                  r?.rule != null &&\n                  r?.rule != \"\" &&\n                  ((r?.value != null && r?.value != \"\") ||\n                     noValueRules.indexOf(r?.rule) > -1);\n            }\n         });\n      };\n\n      isCompleteRules(this.condition?.rules);\n\n      return result;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field, returnSingular = true) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   // if rowData is an array, then pull the first element to get value\n   if (rowData && rowData[0]) rowData = rowData[0];\n\n   let columnId = field.id;\n   let columnName = field.columnName;\n\n   let value = null;\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName] || rowData[columnId];\n   } else {\n      value = rowData[columnName] || rowData[columnId];\n   }\n\n   if (value) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (var k in rowData) {\n      var key = k.split(\".\")[1];\n      if (key && (key == columnId || key == columnName)) {\n         value = rowData[k];\n      }\n   }\n\n   // if value is an array, filter empty item\n   if (value && Array.isArray(value)) {\n      value = value.filter((v) => v != null);\n      if (returnSingular) value = value[0];\n   }\n\n   return value;\n}\n\nmodule.exports = class RowFilterCore extends ABComponent {\n   constructor(App, idBase, AB) {\n      idBase = idBase || \"ab_row_filter\";\n\n      super(App, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.config_settings = {};\n      // var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         /**\n          * @method getValue\n          *\n          * @return {JSON} -\n          * {\n          * \t\tglue: '', // 'and', 'or'\n          *\t\trules: [\n          *\t\t\t{\n          *\t\t\t\tkey:\t'column name',\n          *\t\t\t\trule:\t'rule',\n          *\t\t\t\tvalue:\t'value'\n          *\t\t\t}\n          *\t\t]\n          * }\n          */\n         getValue: () => {\n            return this.config_settings;\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n\n         textValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value == null) value = \"\";\n\n            value = value.toString().trim().toLowerCase();\n            value = _logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n            compareValue = compareValue\n               .toString()\n               .trim()\n               .toLowerCase()\n               .replace(/  +/g, \" \");\n\n            // support \"john smith\" => \"john\" OR/AND \"smith\"\n            var compareArray = compareValue.split(\" \");\n\n            switch (rule) {\n               case \"contains\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value.indexOf(val) > -1;\n                  });\n                  break;\n               case \"not_contains\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value.indexOf(val) < 0;\n                  });\n                  break;\n               case \"equals\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value == val;\n                  });\n                  break;\n               case \"not_equal\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value != val;\n                  });\n                  break;\n               case \"is_empty\":\n                  result = value == null || value == \"\";\n                  break;\n               case \"is_not_empty\":\n                  result = value != null && value != \"\";\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         dateValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (!(value instanceof Date)) value = new Date(value);\n\n            if (!(compareValue instanceof Date))\n               compareValue = new Date(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         numberValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            value = Number(value);\n            compareValue = Number(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         listValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value && value.toLowerCase) value = value.toLowerCase();\n\n            compareValue = compareValue.toLowerCase();\n\n            if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n            switch (rule) {\n               case \"equals\":\n                  if (value) result = compareValue.indexOf(value) > -1;\n                  break;\n               case \"not_equal\":\n                  if (value) result = compareValue.indexOf(value) < 0;\n                  else result = true;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         booleanValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // default value should be false\n            if (value == null) value = false;\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         userValid: (rowData, field, rule, compareValue) => {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // if (Array.isArray(value)) value = [value];\n\n            switch (rule) {\n               case \"is_current_user\":\n                  result = value == this.Account.username;\n                  break;\n               case \"is_not_current_user\":\n                  result = value != this.Account.username;\n                  break;\n               case \"contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length > 0;\n                  break;\n               case \"not_contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length == 0;\n                  break;\n               case \"equals\":\n                  result = value.indexOf(compareValue) > -1;\n                  break;\n               case \"not_equal\":\n                  result = value.indexOf(compareValue) < 0;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         queryValid: (rowData, rule, compareValue) => {\n            var result = false;\n\n            if (!this.AB || !compareValue) return result;\n\n            // queryId:fieldId\n            var queryId = compareValue.split(\":\")[0],\n               fieldId = compareValue.split(\":\")[1];\n\n            // if no query\n            var query = this.queries((q) => q.id == queryId)[0];\n            if (!query) return result;\n\n            // if no field\n            var field = query.fields((f) => f.id == fieldId)[0];\n            if (!field) return result;\n\n            let qIdBase = \"{idBase}-query-field-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFieldFilter = new this.constructor(this.App, qIdBase);\n            inQueryFieldFilter.Account = this.Account;\n            // inQueryFieldFilter.applicationLoad(this._Application);\n            inQueryFieldFilter.fieldsLoad(query.fields());\n            inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query_field\":\n                  result = inQueryFieldFilter.isValid(rowData);\n                  break;\n               case \"not_in_query_field\":\n                  result = !inQueryFieldFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         inQueryValid: (rowData, columnName, rule, compareValue) => {\n            let result = false;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            if (!compareValue || !this.AB) return result;\n\n            // if no query\n            let query = this.queries((q) => q.id == compareValue)[0];\n            if (!query) return result;\n\n            let qIdBase = \"{idBase}-query-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFilter = new this.constructor(this.App, qIdBase);\n            inQueryFilter.Account = this.Account;\n            // inQueryFilter.applicationLoad(this._Application);\n            inQueryFilter.fieldsLoad(query.fields());\n            inQueryFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query\":\n                  result = inQueryFilter.isValid(rowData);\n                  break;\n               case \"not_in_query\":\n                  result = !inQueryFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         dataCollectionValid: (rowData, columnName, rule, compareValue) => {\n            var result = false;\n\n            if (!compareValue || !this.AB) return result;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            let dc = this.AB.datacollectionByID(compareValue);\n\n            switch (rule) {\n               case \"in_data_collection\":\n                  if (!dc) return false;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length > 0;\n                  break;\n               case \"not_in_data_collection\":\n                  if (!dc) return true;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length < 1;\n                  break;\n            }\n\n            return result;\n         },\n\n         connectFieldValid: function (rowData, field, rule, compareValue) {\n            let relationName = field.relationName();\n\n            let connectedVal = \"\";\n\n            if (rowData) {\n               if (rowData[relationName]) {\n                  connectedVal = (\n                     (field.indexField\n                        ? rowData[relationName][field.indexField.columnName]\n                        : false) || // custom index\n                     (field.indexField2\n                        ? rowData[relationName][field.indexField2.columnName]\n                        : false) || // custom index 2\n                     rowData[relationName].id ||\n                     rowData[relationName]\n                  )\n                     .toString()\n                     .toLowerCase();\n               } else {\n                  let fieldVal = getFieldVal(rowData, field);\n                  if (fieldVal != null) {\n                     connectedVal = fieldVal;\n\n                     // an Object to a String\n                     if (typeof connectedVal == \"object\") {\n                        connectedVal =\n                           field.datasourceLink.displayData(connectedVal);\n                     }\n                  }\n               }\n            }\n\n            let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n            switch (rule) {\n               case \"contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) > -1\n                  );\n               case \"not_contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) ==\n                     -1\n                  );\n               case \"equals\":\n                  return connectedVal == compareValueLowercase;\n               case \"not_equal\":\n                  return connectedVal != compareValueLowercase;\n               case \"in_query\":\n               case \"not_in_query\":\n                  return _logic.inQueryValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n                  return _logic.userValid(rowData, field, rule, compareValue);\n               case \"is_empty\":\n                  return (\n                     rowData[relationName] == null ||\n                     rowData[relationName].length < 1 ||\n                     rowData[relationName] == \"\"\n                  );\n               case \"is_not_empty\":\n                  return (\n                     rowData[relationName] != null &&\n                     ((Array.isArray(rowData[relationName]) &&\n                        rowData[relationName].length > 0) ||\n                        rowData[relationName] != \"\")\n                  );\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n            }\n         },\n\n         thisObjectValid: (rowData, rule, compareValue) => {\n            let result = false;\n\n            switch (rule) {\n               // if in_query condition\n               case \"in_query\":\n               case \"not_in_query\":\n                  if (!this.AB || !this._Object) return result;\n\n                  // if > 1 copy of this object in query ==> Error!\n                  var query = this.queries((q) => q.id == compareValue)[0];\n                  if (!query) return result;\n\n                  var listThisObjects = query.objects((o) => {\n                     return o.id == this._Object.id;\n                  });\n                  if (listThisObjects.length > 1) {\n                     // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n                     // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n                     // this object as part of the query.\n\n                     console.error(\n                        \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n                     );\n                     return true;\n                  }\n\n                  // get this object's alias from the query\n                  var alias = query.objectAlias(this._Object.id);\n\n                  // make sure all my columns in rowData are prefixed by \"alias\".columnName\n                  var newRowData = {};\n                  Object.keys(rowData).forEach((key) => {\n                     newRowData[`${alias}.${key}`] = rowData[key];\n                  });\n\n                  // then pass this on to the _logic.queryValid();\n                  return _logic.inQueryValid(\n                     newRowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n\n               // if in_datacollection condition\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // send rowData, null to datacollectionValid()\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n            }\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      this.getValue = _logic.getValue;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      var config_settings = this.config_settings;\n      var _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         config_settings == null ||\n         config_settings.rules == null ||\n         config_settings.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      var result = config_settings.glue === \"and\" ? true : false;\n\n      config_settings.rules.forEach((filter) => {\n         if (!filter?.key || !filter?.rule) return;\n\n         var fieldInfo = this._Fields.filter((f) => f.id == filter.key)[0];\n         if (!fieldInfo) return;\n\n         var condResult;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         var ruleFieldType = fieldInfo.key;\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               condResult = _logic.textValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = _logic.dateValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"number\":\n            case \"formula\":\n               condResult = _logic.numberValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"list\":\n               condResult = _logic.listValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"boolean\":\n               condResult = _logic.booleanValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"user\":\n               condResult = _logic.userValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = _logic.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (config_settings.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method applicationLoad\n    * set application\n    *\n    * @param application {ABApplication}\n    */\n   // applicationLoad(application) {\n   //    this._Application = application;\n   // }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param {array} fields\n    *        an array of fields used in this Query\n    * @param {ABObject} object [optional]\n    *        (optional) ABObject reference if this Filter should support\n    *        the \"this object\" conditions.\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter((f) => f?.fieldIsFilterable?.());\n      // NOTE: User fields are now Connections, but we want to treat them\n      // differently.\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery.\n    * @param {fn} filter\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      let result = [];\n\n      if (this.AB) {\n         result = result.concat(this.AB.queries(filter));\n      }\n\n      if (this._Queries) {\n         result = result.concat(\n            (this._Queries || []).filter(\n               (q) => filter(q) && result.filter((r) => r.id == q.id).length < 1\n            )\n         );\n      }\n\n      return result;\n   }\n\n   setValue(settings) {\n      this.config_settings = settings || {};\n      this.config_settings.rules = this.config_settings.rules || [];\n   }\n};\n","/*\n * ABFieldAutoIndex\n *\n * An ABFieldAutoIndex defines a AutoIndex field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldAutoIndexDefaults = {\n   key: \"AutoIndex\",\n   // unique key to reference this specific DataField\n\n   description: \"Auto Increment Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Auto Index\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"tinyint\", \"smallint\", \"mediumint\", \"int\", \"integer\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   prefix: \"\",\n   delimiter: \"none\",\n   displayLength: 4,\n   previewText: \"0000\",\n};\n\nmodule.exports = class ABFieldAutoIndexCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldAutoIndexDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldAutoIndexDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getDelimiterSign(text) {\n      const delimiterItem = this.delimiterList().filter((item) => {\n         return item.id == text;\n      })[0];\n\n      return delimiterItem ? delimiterItem.sign : \"\";\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\"), sign: \"\" },\n         { id: \"comma\", value: L(\"Comma\"), sign: \", \" },\n         { id: \"slash\", value: L(\"Slash\"), sign: \"/\" },\n         { id: \"space\", value: L(\"Space\"), sign: \" \" },\n         { id: \"dash\", value: L(\"Dash\"), sign: \"-\" },\n         { id: \"colon\", value: L(\"Colon\"), sign: \":\" },\n      ];\n   }\n\n   static setValueToIndex(prefix, delimiter, displayLength, displayNumber) {\n      const resultIndex =\n         prefix +\n         this.getDelimiterSign(delimiter) +\n         (\"0000000000\" + displayNumber).slice(-parseInt(displayLength));\n\n      return resultIndex;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.displayLength = parseInt(this.settings.displayLength);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      if (!rowData?.[this.columnName]) return \"\";\n\n      try {\n         const resultAutoIndex = this.constructor.setValueToIndex(\n            this.settings.prefix,\n            this.settings.delimiter,\n            this.settings.displayLength,\n            rowData[this.columnName]\n         );\n\n         return resultAutoIndex;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n","/*\n * ABFieldBoolean\n *\n * An ABFieldBoolean defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldBooleanDefaults = {\n   key: \"boolean\",\n   // unique key to reference this specific DataField\n\n   description: \"A single checkbox that can be checked or unchecked.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"check-square-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'check-square-o'  to\n   // reference 'fa-check-square-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Checkbox\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"boolean\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"bool\", \"boolean\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: 0,\n};\n\nmodule.exports = class ABFieldBooleanCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldBooleanDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldBooleanDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      if (this.settings.default != null)\n         this.settings.default = parseInt(this.settings.default);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null && this.settings.default != null) {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n};\n","/*\n * ABFieldCalculate\n *\n * An ABFieldCalculate defines a calculate field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\n/** Private methods */\nfunction AGE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   const today = new Date();\n   const oneYear = 31536000000; // (24 * 60 * 60 * 1000) * 365;\n   const diffYears = (today - dataDate) / oneYear;\n\n   if (diffYears < 1) return Math.round(diffYears * 10) / 10;\n   // float 2 digits\n   else return Math.floor(diffYears); // no float digit\n\n   // const today = new Date();\n   // const age = today.getFullYear() - dataDate.getFullYear();\n   // if (age < 1) {\n   // \tconst m = today.getMonth() - dataDate.getMonth();\n\n   // \tage = parseFloat(\"0.\" + m);\n\n   // \t// if (m < 0 || (m === 0 && today.getDate() < dataDate.getDate())) {\n   // \t// \tage--;\n   // \t// }\n   // }\n   // return age;\n}\n\nfunction YEAR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getFullYear();\n}\n\nfunction MONTH(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // Start at 0\n   return dataDate.getMonth();\n}\n\nfunction DAY(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getDate();\n}\n\nfunction DATE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one day\n   const oneDay = 86400000; // 1000 * 60 * 60 * 24\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneDay);\n}\n\nfunction HOUR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneHour = 3600000; // 1000 * 60 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneHour);\n}\n\nfunction MINUTE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneMinute = 60000; // 1000 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneMinute);\n}\n\nfunction MINUTE_TO_HOUR(mins) {\n   const hours = mins / 60;\n   const rhours = Math.floor(hours);\n   const minutes = (hours - rhours) * 60;\n   const rminutes = Math.round(minutes);\n\n   return parseFloat(`${rhours}.${rminutes}`);\n}\n\nconst ABFieldCalculateDefaults = {\n   key: \"calculate\",\n   // unique key to reference this specific DataField\n\n   description: \"Perform a calculation based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calculator\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calculator'  to\n   // reference 'fa-calculator'\n\n   isFilterable: (field) => {\n      const unsupportedInFilter = [\"MINUTE_TO_HOUR\", \"DATE\", \"HOUR\", \"MINUTE\"];\n      const unsupported = unsupportedInFilter.filter((item) =>\n         field.settings.formula.includes(item)\n      );\n      return unsupported.length == 0;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Calculate\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   formula: \"\",\n   decimalSign: \"none\", // \"none\", \"comma\", \"period\", \"space\"\n   decimalPlaces: 0, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n};\n\nmodule.exports = class ABFieldCalculateCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCalculateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCalculateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method convertToJs\n    *\n    * @param {ABOBject} object\n    * @param {string} formula\n    * @param {object} rowData\n    * @param {integer} place\n    * @param {string} alias [Optional]\n    */\n   static convertToJs(object, formula, rowData, place, alias = null) {\n      if (!formula) return \"\";\n\n      // replace with current date\n      formula = formula.replace(/\\(CURRENT\\)/g, \"(new Date())\");\n\n      object.fields().forEach((f) => {\n         let colName = f.columnName;\n         if (colName.indexOf(\".\") > -1)\n            // QUERY: get only column name\n            colName = colName.split(\".\")[1];\n\n         // if template does not contain, then should skip\n         if (formula.indexOf(\"{\" + colName + \"}\") < 0) return;\n\n         const data =\n            rowData[`${object.alias ?? alias}.${f.columnName}`] ??\n            rowData[f.columnName];\n\n         // number fields\n         if (f.key == \"number\") {\n            const numberVal = `(${data || 0})`; // (number) - NOTE : (-5) to support negative number\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               numberVal\n            );\n         }\n         // calculate and formula fields\n         else if (f.key == \"calculate\" || f.key == \"formula\") {\n            let calVal = f.format(rowData) || 0;\n\n            // pull number only\n            if (typeof calVal == \"string\")\n               calVal = calVal.replace(/[^-0-9.]/g, \"\");\n\n            calVal = `(${calVal})`;\n\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               calVal\n            );\n         }\n         // date fields\n         else if (f.key == \"date\" || f.key == \"datetime\") {\n            const dateVal = `\"${data || \"\"}\"`; // \"date\"\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               dateVal\n            );\n         }\n         // boolean fields\n         else if (f.key == \"boolean\") {\n            const booleanVal = `(${data || 0})`; // show 1 or 0 for boolean\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               booleanVal\n            );\n         }\n      });\n\n      // decimal places - toFixed()\n      // FIX: floating number calculation\n      // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\n      return eval(formula).toFixed(place || 0);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      let place = 0;\n      if (this.settings.decimalSign != \"none\") {\n         place = this.settings.decimalPlaces;\n      }\n\n      try {\n         let result = this.constructor.convertToJs(\n            this.object,\n            this.settings.formula,\n            rowData,\n            place,\n            this.alias\n         );\n\n         if (typeof result == \"string\")\n            result = result.replace(/[^-0-9.]/g, \"\");\n\n         switch (this.settings.decimalSign) {\n            case \"comma\":\n               result = result.replace(\".\", \",\");\n               break;\n            case \"space\":\n               result = result.replace(\".\", \" \");\n               break;\n         }\n\n         return result;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldCombine\n *\n * An ABFieldCombine defines a combined field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldCombinedDefaults = {\n   key: \"combined\",\n   // unique key to reference this specific DataField\n\n   description: \"Combined Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Combined Field\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   combinedFields: \"\",\n   // {string} \"field's uuid1, field's uuid2, field's uuid3, ...\"\n   // This tells us what fields will be combined.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   delimiter: \"plus\", // plus, space, dash, period\n};\n\nmodule.exports = class ABFieldCombineCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCombinedDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCombinedDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.delimiter =\n         values.settings.delimiter || defaultValues.delimiter;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n};\n","/*\n * ABFieldConnect\n *\n * An ABFieldConnect defines a connect to other object field type.\n *\n */\n\nvar ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldConnectDefaults = {\n   key: \"connectObject\",\n   // unique key to reference this specific DataField\n\n   description: \"Connect two data objects together\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"external-link\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'external-link'  to\n   // reference 'fa-external-link'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      const linkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      return [\"one:many\", \"one:one\"].indexOf(linkType) > -1;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Connect to another record\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   linkObject: \"\", // ABObject.id\n   // the .id of the ABObject we are connected to\n\n   linkType: \"one\", // [one, many]\n   // 'one' : this object can have only 1 of our linkObject\n   // 'many': this object can have MANY of our linkObject\n\n   linkViaType: \"many\", // [one, many]\n   // 'one' : the linkedObject can only have 1 of me\n   // 'many' : the linkedObject can have many of me\n\n   linkColumn: \"\", // ABField.id\n   // the .id of the field in the linkedObject that is our\n   // connected field.\n\n   isSource: null, // bit : 1,0\n   // isSource indicates that this object is the source of the connection:\n   // if linkType==one, and isSource=1, then the value in this object's field\n   // \t\tis the connected object's id\n   // if linkType == one, and isSource = 0, then the linkObject has this obj.id\n   //  \tin it's connected field (linkColumn)\n\n   // the next 3 Fields are concerning how we connect to other ABObjects when\n   // we are NOT using the .uuid as the connecting Value. Instead, there is an\n   // ABIndex setting we are connecting with.\n   isCustomFK: 0,\n   // {bool} truthy [0,1, etc...]\n   // indicates that this connection is using 1 or more custom foreign keys\n   // for the data it is storing in it's relationship.\n\n   indexField: \"\", // ABField.id\n   // {string} {ABField.id}\n   // In a Connection defined between A --> B, this field represents the ABField\n   // that is used for the data being stored.\n   // In 1:1,  1:M  or M:1  relationships, .indexField always refers to the\n   //       field we are pulling the Data FROM.\n   // In M:N relationships:  this will refer to the A.Field.id that is a custom\n   //       key (if any).\n\n   indexField2: \"\", // ABField.id\n   // {string}  {ABField.id}\n   // In the M:N relationship: this field refers to the B.Field.id that is a\n   //       custom Key for the data we are storing.\n};\n\nmodule.exports = class ABFieldConnectCore extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldConnectDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.isConnection = true;\n      // {bool}\n      // is this an ABFieldConnect type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of connect field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n\n      // // text to Int:\n      // this.settings.isSource = parseInt(this.settings.isSource || 0);\n      // this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldConnectDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.isSource = parseInt(this.settings.isSource || 0);\n      this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(/* values */) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   relationName() {\n      // there is object name - {objectName}.{columnName}\n      if (this.columnName.indexOf(\".\") > -1) {\n         const names = this.columnName.split(\".\");\n         return `${names[0]}.${this.AB.rules.toFieldRelationFormat(names[1])}`;\n      } else {\n         return this.AB.rules.toFieldRelationFormat(this.columnName);\n      }\n   }\n\n   /**\n    * @method datasourceLink\n    * return the ABObject that this field connection links to\n    * @return {ABObject}\n    */\n   get datasourceLink() {\n      const linkObj = this.AB.objectByID(this.settings.linkObject);\n      if (!linkObj) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkObject[${this.settings.linkObject}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkObject: this.settings.linkObject,\n         });\n      }\n      return linkObj;\n   }\n\n   /**\n    * @method fieldLink\n    * return the ABField that we are linked to.\n    * @return {ABDataField}  or undefined if not found.\n    */\n   get fieldLink() {\n      const objectLink = this.datasourceLink;\n      if (!objectLink) return null; // note: already Notified\n\n      const linkColumn = objectLink.fieldByID(this.settings.linkColumn);\n      if (!linkColumn) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkColumn[${this.settings.linkColumn}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkColumn: this.settings.linkColumn,\n         });\n      }\n      return linkColumn;\n   }\n\n   /**\n    * @method pullRelationValues\n    * Return the data values for this field entry in the provided data row.\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData;\n\n      // Get linked object\n      const linkedObject = this.datasourceLink;\n\n      let data = this.dataValue(row);\n      if (data && linkedObject) {\n         // convert to JSON\n         if (typeof data == \"string\") {\n            try {\n               data = JSON.parse(data);\n            } catch (e) {\n               // must be a UUID\n               // so just set that to selectedData:\n               selectedData = data;\n            }\n         }\n\n         selectedData = data;\n      }\n\n      return selectedData;\n   }\n\n   dataValue(rowData) {\n      if (rowData == null) return \"\";\n\n      const propName = `${this.object.name}.${this.relationName()}`;\n\n      return (\n         rowData[this.relationName()] ||\n         rowData[propName] ||\n         rowData[this.columnName] ||\n         \"\"\n      );\n   }\n\n   format(rowData) {\n      const val = this.pullRelationValues(rowData);\n      const linkedObject = this.datasourceLink;\n\n      // array\n      if (Array.isArray(val))\n         return val\n            .map((v) => {\n               if (v.text == null) return linkedObject.displayData(v) || \"\";\n               else return v.text || \"\";\n            })\n            .join(\", \");\n      // string\n      else if (val) {\n         if (val.text == null) return linkedObject.displayData(rowData) || \"\";\n         else if (val.text) return val.text || \"\";\n      }\n      // empty string\n      else return \"\";\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkType() {\n      return this.settings.linkType;\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkViaType() {\n      return this.settings.linkViaType;\n   }\n\n   /**\n    * @method isSource\n    * does this object contain the .id of the remote object (in case of linkType : one )\n    * @return {bool}\n    */\n   isSource() {\n      return this.settings.isSource;\n   }\n\n   /**\n    * @property indexField\n    * @return {ABField}\n    */\n   get indexField() {\n      if (!this.settings.isCustomFK || !this.settings.indexField) {\n         return null;\n      }\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n      // 1:M\n      if (linkType === \"one:many\") {\n         return this.datasourceLink.fieldByID(this.settings.indexField);\n      }\n      // 1:1\n      else if (linkType === \"one:one\") {\n         if (this.settings.isSource) {\n            return this.datasourceLink.fieldByID(this.settings.indexField);\n         } else {\n            return this.object.fieldByID(this.settings.indexField);\n         }\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         return this.object.fieldByID(this.settings.indexField);\n      }\n      // M:N\n      else if (linkType === \"many:many\") {\n         let indexField = this.object.fieldByID(this.settings.indexField);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField\n            );\n\n         return indexField;\n      }\n\n      return null;\n   }\n\n   /**\n    * @property indexField2\n    * @return {ABField}\n    */\n   get indexField2() {\n      if (!this.settings.isCustomFK || !this.settings.indexField2) {\n         return null;\n      }\n\n      let indexField;\n\n      // M:N only\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         indexField = this.object.fieldByID(this.settings.indexField2);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField2\n            );\n      }\n\n      return indexField;\n   }\n\n   /**\n    * @method getRelationValue\n    * pull values for update connect data\n    * @param {Object} rowData\n    * @param {Object} options - {\n    *                               forUpdate: boolean\n    *                           }\n    * @return {Object}\n    */\n   getRelationValue(rowData, options = {}) {\n      if (rowData == null) return;\n      let colName;\n      const indexField = this.indexField;\n      const datasourceLink = this.datasourceLink;\n\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n\n      // custom index\n      // M:N\n      if (linkType === \"many:many\") {\n         const indexField2 = this.indexField2;\n\n         if (indexField && indexField.object.id == datasourceLink.id) {\n            colName = indexField.columnName;\n         } else if (indexField2 && indexField2.object.id == datasourceLink.id) {\n            colName = indexField2.columnName;\n         }\n      }\n      // 1:M, 1:1 isSource = true\n      else if (\n         indexField &&\n         (linkType === \"one:many\" ||\n            (linkType === \"one:one\" && this.settings.isSource))\n      ) {\n         colName = indexField.columnName;\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         // NOTE: M:1 has special case\n         // it uses different value for search and update.\n         // UPDATE uses row id\n         // SEARCH uses custom index value\n         if (options.forUpdate) {\n            colName = datasourceLink.PK();\n         } else {\n            colName = indexField\n               ? indexField.columnName\n               : this.fieldLink.columnName;\n         }\n      }\n      // NO CUSTOM INDEX\n      else if (datasourceLink) {\n         colName = datasourceLink.PK();\n      }\n\n      let result =\n         rowData[colName] ||\n         rowData[this.object?.PK()] ||\n         rowData.id ||\n         rowData;\n\n      if (colName == \"id\") {\n         result = parseInt(result);\n      }\n\n      return result;\n   }\n};\n","/*\n * ABFieldCore\n *\n * ABFieldBase defines the common ABField structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABObject classes.\n *\n */\n// const ABEmitter = require(\"../../platform/ABEmitter\");\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nmodule.exports = class ABFieldCore extends ABMLClass {\n   constructor(values, object, fieldDefaults) {\n      super([\"label\"], object.AB);\n\n      // NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      this.defaults = fieldDefaults || {};\n\n      /*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name\n\t\t\tisImported: 1/0,\t\t\t// flag to mark is import from other object\n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\t\t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n\t\t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n\t\t\t\twidth: {int}\t\t\t// width of display column\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n\n      this.object = object;\n\n      this.fromValues(values);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n   static get reservedNames() {\n      return [\n         \"id\",\n         \"created_at\",\n         \"updated_at\",\n         \"properties\",\n         \"createdAt\",\n         \"updatedAt\",\n      ];\n   }\n\n   static defaultValues() {\n      return {};\n   }\n\n   // unique key to reference this specific DataField\n   fieldKey() {\n      return this.defaults.key;\n   }\n\n   /**\n    * Sails ORM data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldOrmTypes() {\n      if (this.defaults.compatibleOrmTypes) {\n         if (Array.isArray(this.defaults.compatibleOrmTypes)) {\n            return this.defaults.compatibleOrmTypes;\n         } else {\n            return [this.defaults.compatibleOrmTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * Mysql data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldMysqlTypes() {\n      if (this.defaults.compatibleMysqlTypes) {\n         if (Array.isArray(this.defaults.compatibleMysqlTypes)) {\n            return this.defaults.compatibleMysqlTypes;\n         } else {\n            return [this.defaults.compatibleMysqlTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   fieldIcon() {\n      return this.defaults.icon;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldMenuName() {\n      return this.defaults.menuName;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldDescription() {\n      return this.defaults.description;\n   }\n\n   // the flag to set when checking if field should be filterable\n   fieldIsFilterable() {\n      if (this.defaults.isFilterable != null) {\n         if (typeof this.defaults.isFilterable === \"function\") {\n            return this.defaults.isFilterable(this);\n         } else {\n            return this.defaults.isFilterable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if field should be sortable\n   fieldIsSortable() {\n      if (this.defaults.isSortable != null) {\n         if (typeof this.defaults.isSortable === \"function\") {\n            return this.defaults.isSortable(this);\n         } else {\n            return this.defaults.isSortable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if the field should be used as a label\n   fieldUseAsLabel() {\n      if (this.defaults.useAsLabel != null) {\n         if (typeof this.defaults.useAsLabel === \"function\") {\n            return this.defaults.useAsLabel(this);\n         } else {\n            return this.defaults.useAsLabel;\n         }\n      }\n\n      return 1;\n   }\n\n   fieldSupportRequire() {\n      if (this.defaults.supportRequire) return this.defaults.supportRequire;\n      // default\n      else return true;\n   }\n\n   fieldSupportQuery() {\n      if (this.defaults.supportQuery != null) {\n         if (typeof this.defaults.supportQuery === \"function\") {\n            return this.defaults.supportQuery(this);\n         } else {\n            return this.defaults.supportQuery;\n         }\n      }\n\n      return true;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABField instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      return {\n         id: this.id,\n         type: this.type || \"field\",\n         key: this.key,\n         icon: this.icon,\n         isImported: this.isImported,\n         columnName: this.columnName,\n         settings: this.settings,\n         translations: obj.translations,\n      };\n   }\n\n   defaultCheck(val, defaultVal) {\n      let returnVal = defaultVal;\n      if (typeof val != \"undefined\") {\n         returnVal = val;\n      }\n      return returnVal;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      if (!this.id) this.id = values.id; // NOTE: only exists after .save()\n      this.type == values.type || \"field\";\n      this.key = values.key || this.fieldKey();\n      this.icon = values.icon || this.fieldIcon();\n\n      values.settings = values.settings || {};\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.columnName = values.columnName || \"\";\n\n      this.isImported = values.isImported || 0;\n\n      this.settings = values.settings;\n      this.settings.showIcon = this.defaultCheck(values.settings.showIcon, \"1\");\n      this.settings.required = this.defaultCheck(values.settings.required, \"0\");\n      this.settings.width = this.defaultCheck(values.settings.width, \"0\");\n\n      // convert from \"0\" => 0\n      this.isImported = parseInt(this.isImported);\n      this.settings.showIcon = parseInt(this.settings.showIcon);\n      this.settings.required = parseInt(this.settings.required);\n      this.settings.unique = parseInt(this.settings.unique || 0);\n      this.settings.width = parseInt(this.settings.width);\n\n      // we're responsible for setting up our specific settings:\n      const defaultValues = this.constructor.defaultValues() || {};\n      for (const dv in defaultValues) {\n         this.settings[dv] = this.defaultCheck(\n            values.settings[dv],\n            defaultValues[dv]\n         );\n      }\n\n      // const the MLClass now process the Translations\n      super.fromValues(values);\n\n      // final validity check: columnName really should have a value:\n      this.columnName = this.columnName || this.label;\n\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.columnName = this.columnName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n   }\n\n   /**\n    * @method urlPointer()\n    * return a string pointer to decode this object from the root application\n    * object.\n    * @return {string} pointer reference\n    */\n   urlPointer() {\n      return this.object.urlField() + this.id;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"\";\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    */\n   isValidData(data, validator) {\n      // console.error('!!! Field ['+this.fieldKey()+'] has not implemented .isValidData()!!!');\n      if (\n         this.settings.required &&\n         (data[this.columnName] == null || data[this.columnName] == \"\") &&\n         data[this.columnName] != 0\n      ) {\n         validator.addError(this.columnName, \"This is a required field.\");\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return false;\n   }\n\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = \"\";\n      if (rowData?.[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData?.[propName] != null) {\n         result = rowData[propName];\n      }\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * return display text to detail comonent and define label of object\n    *\n    * @param {Object} rowData - data\n    */\n   format(rowData) {\n      if (rowData) {\n         return this.dataValue(rowData);\n      } else return \"\";\n   }\n\n   /**\n    * @method toDefinition()\n    *\n    * convert this instance into an ABDefinition object.\n    *\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      const myDef = super.toDefinition();\n\n      // attempt to provide a more descriptive name:\n      // [obj]->[fieldName]\n      if (myDef.name == \"\") {\n         myDef.name =\n            myDef.json.name || myDef.json.label || myDef.json.columnName;\n      }\n      if (this.object && this.object.name) {\n         myDef.name = `${this.object.name}->${myDef.name}`;\n      }\n      return myDef;\n   }\n};\n","/*\n * ABFieldDate\n *\n * An ABFieldDate defines a date field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"date\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from a calendar.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calendar\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calendar'  to\n   // reference 'fa-calendar'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"date\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"date\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   dateFormat: 2, // 1 (Ignore date), 2, 3, 4, 5\n   defaultDate: 1, // 1 (None), 2 (Current Date), 3 (Specific Date)\n   defaultDateValue: null, // {Date}\n   validateCondition: \"none\",\n   validateRangeUnit: \"days\",\n   validateRangeBefore: 0,\n   validateRangeAfter: 0,\n   validateStartDate: null,\n   validateEndDate: null,\n};\n\nmodule.exports = class ABFieldDateCore extends ABField {\n   constructor(values, object, defaultValues = ABFieldDateDefaults) {\n      super(values, object, defaultValues);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.dateFormat = parseInt(this.settings.dateFormat);\n      this.settings.defaultDate = parseInt(this.settings.defaultDate);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      let dateResult;\n\n      // Set current date as default\n      if (this.settings.defaultDate == 2) {\n         dateResult = new Date();\n      }\n      // Set specific date as default\n      else if (\n         this.settings.defaultDate == 3 &&\n         this.settings.defaultDateValue\n      ) {\n         dateResult = new Date(this.settings.defaultDateValue);\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null) {\n         values[this.columnName] = this.AB.rules.toDateFormat(dateResult, {\n            format: \"YYYY-MM-DD\",\n         });\n         // values[this.columnName] = moment(dateResult).format(\"YYYY-MM-DD\");\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data[this.columnName]) {\n         let value = data[this.columnName];\n\n         if (!(value instanceof Date)) {\n            value = this.AB.rules.toDate(value);\n            // value = new Date(this.convertToMoment(value));\n         }\n\n         // verify we didn't end up with an InValid Date result.\n         if (\n            Object.prototype.toString.call(value) === \"[object Date]\" &&\n            isFinite(value)\n         ) {\n            let isValid = true;\n\n            // Custom vaildate is here\n            if (this.settings && this.settings.validateCondition) {\n               const startDate = this.settings.validateStartDate\n                     ? new Date(this.settings.validateStartDate)\n                     : null,\n                  endDate = this.settings.validateEndDate\n                     ? new Date(this.settings.validateEndDate)\n                     : null,\n                  startDateDisplay = this.getDateDisplay(startDate),\n                  endDateDisplay = this.getDateDisplay(endDate);\n               const minDate = this.AB.rules.subtractDate(\n                  new Date(),\n                  this.settings.validateRangeBefore,\n                  this.settings.validateRangeUnit\n               );\n               const maxDate = this.AB.rules.addDate(\n                  new Date(),\n                  this.settings.validateRangeAfter,\n                  this.settings.validateRangeUnit\n               );\n               switch (this.settings.validateCondition) {\n                  case \"dateRange\":\n                     if (minDate < value && value < maxDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              this.getDateDisplay(minDate),\n                              this.getDateDisplay(maxDate),\n                           ])\n                        );\n                     }\n\n                     break;\n                  case \"between\":\n                     if (startDate < value && value < endDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"notBetween\":\n                     if (value < startDate && endDate < value) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() == startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<>\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() != startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() > startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() < startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() >= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() <= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n               }\n            }\n\n            if (isValid) {\n               // Reformat value to DB\n               // NOTE: should we update here?\n               data[this.columnName] = this.exportValue(value);\n            }\n         } else {\n            // return a validation error\n            validator.addError(this.columnName, \"Should be a Date!\");\n         }\n      }\n   }\n\n   format(rowData) {\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      // pull format from settings.\n      const dateObj = this.AB.rules.toDate(d);\n      return this.getDateDisplay(dateObj);\n\n      // const momentObj = this.convertToMoment(d);\n      // return this.getDateDisplay(new Date(momentObj));\n   }\n\n   getFormat() {\n      let dateFormatString = \"\";\n\n      const dateFormat =\n         this.settings && this.settings.dateFormat\n            ? this.settings.dateFormat\n            : \"\";\n\n      switch (dateFormat) {\n         //Ignore Date\n         case (1, 2):\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n         //mm/dd/yyyy\n         case 3:\n            {\n               dateFormatString = \"%m/%d/%Y\";\n            }\n            break;\n         //M D, yyyy\n         case 4:\n            {\n               dateFormatString = \"%M %d, %Y\";\n            }\n            break;\n         //D M, yyyy\n         case 5:\n            {\n               dateFormatString = \"%d %M, %Y\";\n            }\n            break;\n         default:\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n      }\n\n      return dateFormatString;\n   }\n\n   getDateDisplay(dateData) {\n      const dateFormat = this.getFormat();\n\n      return this.dateToString(dateFormat, dateData);\n   }\n\n   // convertToMoment(string) {\n   //    const result = moment(string);\n\n   //    const supportFormats = [\n   //       \"DD/MM/YYYY\",\n   //       \"MM/DD/YYYY\",\n   //       \"DD-MM-YYYY\",\n   //       \"MM-DD-YYYY\"\n   //    ];\n\n   //    supportFormats.forEach((format) => {\n   //       if (!result || !result.isValid()) result = moment(string, format);\n   //    });\n\n   //    return result;\n   // }\n\n   exportValue(value) {\n      return value ? this.AB.rules.toDateFormat(value, {\n         format: \"YYYY-MM-DD\",\n      }) : \"\";\n      // return this.convertToMoment(value).format(\"YYYY-MM-DD\");\n   }\n\n   dateToString(dateFormat, dateData) {\n      if (dateData && dateData.toString) return dateData.toString();\n      else return \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n","/*\n * ABFieldDateTime\n *\n * An ABFieldDateTime defines a datetime field type.\n *\n */\n\nconst ABFieldDateCore = require(\"./ABFieldDateCore\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"datetime\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from date & time.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"clock-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'clock-o'  to\n   // reference 'clock-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date & Time\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"datetime\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"datetime\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   timeFormat: 2, // 1 (Ignore time), 2, 3\n   defaultTime: 1, // 1 (None), 2 (Current Time), 3 (Specific Time)\n   defaultTimeValue: null, // {Date}\n};\n\nmodule.exports = class ABFieldDateTimeCore extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object, ABFieldDateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      const baseDefault = super.defaultValues();\n      return Object.assign(baseDefault, defaultValues);\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.timeFormat = parseInt(this.settings.timeFormat);\n      this.settings.defaultTime = parseInt(this.settings.defaultTime);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      super.defaultValue(values);\n\n      let dateResult;\n\n      // From default value of ABFieldDateCore\n      if (values[this.columnName]) {\n         dateResult = this.AB.rules.toDate(values[this.columnName]);\n         // const momentVal = this.convertToMoment(values[this.columnName]);\n         // if (momentVal.isValid()) {\n         //    dateResult = new Date(momentVal);\n         // }\n      }\n\n      // Set current time as default\n      if (this.settings.defaultTime == 2) {\n         const currDate = new Date();\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(currDate.getHours());\n         dateResult.setMinutes(currDate.getMinutes());\n         dateResult.setSeconds(currDate.getSeconds());\n         dateResult.setMilliseconds(currDate.getMilliseconds());\n      }\n      // Set specific time as default\n      else if (\n         this.settings.defaultTime == 3 &&\n         this.settings.defaultTimeValue\n      ) {\n         const defaultTime = new Date(this.settings.defaultTimeValue);\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(defaultTime.getHours());\n         dateResult.setMinutes(defaultTime.getMinutes());\n         dateResult.setSeconds(defaultTime.getSeconds());\n         dateResult.setMilliseconds(defaultTime.getMilliseconds());\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null)\n         values[this.columnName] = dateResult.toISOString();\n   }\n\n   getFormat() {\n      const timeFormat = this.getTimeFormat();\n\n      this.settings = this.settings || {};\n\n      if (this.settings.dateFormat == 1) {\n         return timeFormat;\n      }\n\n      const dateFormat = super.getFormat();\n\n      return `${dateFormat} ${timeFormat}`;\n   }\n\n   format(rowData) {\n      const datetimeFormat = this.getFormat();\n      const d = this.dataValue(rowData);\n      const dateObj = this.AB.rules.toDate(d);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      return webix.Date.dateToStr(datetimeFormat)(dateObj);\n   }\n\n   getTimeFormat() {\n      this.settings = this.settings || {};\n      switch (this.settings.timeFormat) {\n         case 2:\n            return \" %h:%i %A\";\n         case 3:\n            return \" %H:%i\";\n         default:\n            return \"\";\n      }\n   }\n\n   /**\n    * @method exportValue\n    * @param {Date} date\n    * @return {string}\n    */\n   exportValue(date) {\n      return date?.toISOString?.() ?? \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx =\n   \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n","/*\n * ABFieldEmail\n *\n * An ABFieldEmail defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldEmailDefaults = {\n   key: \"email\",\n   // unique key to reference this specific DataField\n\n   description: \"Email fields are used to store email addresses.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"envelope\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'envelope'  to\n   // reference 'fa-envelope'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Email\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: \"\",\n   defaultCheckbox: 0,\n};\n\nmodule.exports = class ABFieldEmailCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldEmailDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldEmailDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            values[this.columnName] = this.settings.default;\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      if (data[this.columnName]) {\n         const Reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n         let value = data[this.columnName];\n         value = String(value).toLowerCase();\n         if (!Reg.test(value)) {\n            validator.addError(this.columnName, \"Invalid email\");\n         }\n      }\n   }\n};\n","/*\n * ABFieldFile\n *\n * An ABFieldFile defines a File field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFileDefaults = {\n   key: \"file\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach a File to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file'  to\n   // reference 'fa-file'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"File Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   removeExistingData: 0,\n   fileSize: 0,\n   fileType: \"\",\n};\n\nmodule.exports = class ABFieldFileCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFileDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFileDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.fileSize = parseInt(this.settings.fileSize);\n      this.settings.limitFileSize = parseInt(this.settings.limitFileSize);\n      this.settings.limitFileType = parseInt(this.settings.limitFileType);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method dataValue\n    * return the file data stored as part of this field.\n    *\n    * An ABFieldFile column contains a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * This will return the json object.\n    * @param {obj} values a key=>value hash of the current values.\n    * @return {obj} { uuid, filename }, or {} if empty.\n    */\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = rowData[this.columnName] || rowData[propName] || {};\n      if (typeof result == \"string\") {\n         try {\n            result = JSON.parse(result);\n         } catch (err) {\n            // ignore error\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    *\n    * An ABFieldFile expects a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * For a default value, we return an empty json object: \"{}\"\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"{}\";\n   }\n\n   format(rowData) {\n      let result = this.dataValue(rowData);\n      if (result) {\n         if (typeof result == \"string\") {\n            try {\n               result = JSON.parse(result);\n            } catch (err) {\n               // ignore error.\n            }\n         }\n\n         // return file name\n         return result ? result.filename || \"\" : \"\";\n      } else {\n         return \"\";\n      }\n   }\n\n   /**\n    * @method requestParam\n    * return the entry in the given input that relates to this field.\n    * @param {obj} allParameters  a key=>value hash of the inputs to parse.\n    * @return {obj} or undefined\n    */\n   requestParam(allParameters) {\n      const myParameter = super.requestParam(allParameters);\n\n      // if we have our default empty object, then remove the entry\n      // and let the DB insert a null value.\n      let val = myParameter?.[this.columnName];\n      if (val == \"{}\" || val == \"\") {\n         delete myParameter[this.columnName];\n      }\n      if (\"string\" === typeof val) {\n         try {\n            myParameter[this.columnName] = JSON.parse(val);\n         } catch (e) {}\n      }\n\n      return myParameter;\n   }\n};\n","/*\n * ABFieldFormula\n *\n * An ABFieldFormula are used to run calculations on connected (child) records\n * and store the total of that calculation in the parent.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldFormulaDefaults = {\n   key: \"formula\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Perform a calculation by a formula type based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"circle-o-notch\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'circle-o-notch'  to\n   // reference 'fa-circle-o-notch'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportQuery: (field) => {\n      const fieldLink = field.fieldLink;\n      if (fieldLink == null) return false;\n\n      // Not support calculate field in query\n      return fieldLink.key !== \"calculate\";\n   },\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   field: \"\", // id of ABField : NOTE - store our connect field to support when there are multi - linked columns\n   objectLink: \"\", // id of ABObject\n   fieldLink: \"\", // id of ABField\n   type: \"sum\", // \"sum\", \"average\", \"max\", \"min\", \"count\"\n   where: \"\",\n};\n\nmodule.exports = class ABFieldFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFormulaDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method format\n    * both calculate and format the data input based of user settings\n    * for this field.\n    * @param {obj} rowData\n    *        a key=>value hash of the current values.\n    * @param {boolean} reCalculate\n    *        a boolean that signals if we should force recalculation of values\n    */\n   format(rowData, reCalculate = false, isGrouped = false) {\n      const fieldLink = this.fieldLink;\n\n      const reformat = (numData) => {\n         // ABFieldCalculate does not need to .format again\n         if (!fieldLink || fieldLink.key == \"calculate\") {\n            return numData;\n         } else {\n            const rowDataFormat = {};\n            rowDataFormat[fieldLink.columnName] = numData;\n            return fieldLink.format(rowDataFormat);\n         }\n      };\n\n      // if data exists, then will not calculate on client side\n      // unless we pass reCalculate=true to force the recalculation\n      if (rowData[this.columnName] != null && !reCalculate && !isGrouped) {\n         // reformat data\n         return reformat(rowData[this.columnName]);\n      } else if (\n         rowData[this.columnName] != null &&\n         !reCalculate &&\n         isGrouped\n      ) {\n         return rowData[this.columnName];\n      }\n\n      if (!fieldLink) return 0;\n\n      const fieldBase = this.fieldBase();\n      if (!fieldBase) return 0;\n\n      let data =\n         rowData[fieldBase.relationName()] ||\n         rowData[fieldBase.columnName] ||\n         [];\n      if (!Array.isArray(data)) data = [data];\n\n      // Filter\n      if (\n         data &&\n         data.length &&\n         this.settings &&\n         this.settings.where &&\n         this.settings.where.rules &&\n         this.settings.where.rules.length\n      ) {\n         this.filterHelper.setValue(this.settings.where);\n         data = data.filter((item) => this.filterHelper.isValid(item));\n      }\n\n      let numberList = [];\n\n      // pull number from data\n      switch (fieldLink.key) {\n         case \"calculate\":\n            data.forEach((d) => {\n               numberList.push(parseFloat(fieldLink.format(d) || 0));\n            });\n            break;\n         case \"number\":\n            numberList = data.map((d) => d[fieldLink.columnName] || 0);\n            break;\n      }\n\n      let result = 0;\n\n      // get the decimal size of the numbers being calculated\n      const decimalSize = fieldLink.getDecimalSize();\n\n      // calculate\n      switch (this.settings.type) {\n         case \"sum\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               result = sum / multiplier;\n            }\n            break;\n\n         case \"average\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               // and divide by length to get the average\n               result = sum / multiplier / numberList.length;\n            }\n            break;\n\n         case \"max\":\n            result = Math.max(...numberList) || 0;\n            break;\n         case \"min\":\n            result = Math.min(...numberList) || 0;\n            break;\n         case \"count\":\n            result = numberList.length;\n            break;\n      }\n\n      rowData[this.columnName] = result;\n\n      // ABFieldCalculate does not need to .format again\n      if (fieldLink.key == \"calculate\") {\n         return result;\n      } else {\n         return reformat(result);\n      }\n   }\n\n   fieldBase() {\n      return this.object.fieldByID(this.settings.field);\n   }\n\n   get fieldLink() {\n      const obj = this.AB.objectByID(this.settings.object);\n      if (!obj) return null;\n\n      const field = obj.fieldByID(this.settings.fieldLink);\n      if (!field) return null;\n\n      return field;\n   }\n\n   get filterHelper() {\n      if (this._rowFilter == null) {\n         this._rowFilter = this.AB.filterComplexNew(`${this.id}_filterComplex`);\n\n         if (this.fieldLink && this.fieldLink.object) {\n            this._rowFilter.fieldsLoad(this.fieldLink.object.fields());\n            this._rowFilter.setValue(this.settings.where);\n         }\n      }\n\n      return this._rowFilter;\n   }\n};\n","/*\n * ABFieldImageCore\n *\n * An ABFieldImage defines a Image field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldImageDefaults = {\n   key: \"image\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach an image to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file-image-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file-image-o'  to\n   // reference 'fa-file-image-o'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Image Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   useWidth: 0,\n   imageWidth: \"\",\n   useHeight: 0,\n   imageHeight: \"\",\n   removeExistingData: 0,\n   useDefaultImage: false,\n   defaultImageUrl: \"\",\n};\n\nmodule.exports = class ABFieldImageCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldImageDefaults);\n\n      // NOTE: our Labels are ready here:\n      // if (\n      //    ABFieldImageDefaults.menuName == \"*Image Attachment\" &&\n      //    this.AB.Label\n      // ) {\n      //    const L = this.AB.Label();\n      //    ABFieldImageDefaults.menuName = L(\"Image Attachment\");\n      //    ABFieldImageDefaults.description = L(\"Attach an image to this object.\");\n      // }\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'useWidth':0,\n\t\t\t\t'imageWidth':'',\n\t\t\t\t'useHeight': 0,\n\t\t\t\t'imageHeight': '',\n\t\t\t\t'removeExistingData': 0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldImageDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.useWidth = parseInt(this.settings.useWidth);\n      this.settings.useHeight = parseInt(this.settings.useHeight);\n      this.settings.imageWidth = parseInt(this.settings.imageWidth);\n      this.settings.imageHeight = parseInt(this.settings.imageHeight);\n      this.settings.useDefaultImage = parseInt(this.settings.useDefaultImage);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldJson\n *\n * An ABFieldJson defines a JSON field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldJsonDefaults = {\n   key: \"json\",\n   // unique key to reference this specific DataField\n\n   description: \"JSON value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"JSON\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"json\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"json\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {};\n\nmodule.exports = class ABFieldJsonCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldJsonDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldJsonDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // in the case of a JSON data type, we should NOT insert a \"\"\n      //\n      // values[this.columnName] = \"\";\n   }\n};\n","/*\n * ABFieldListCore\n *\n * An ABFieldList defines a select list field type.\n *\n */\n\n// const ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldListDefaults = {\n   key: \"list\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Select list allows you to select predefined options below from a dropdown.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"th-list\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'th-list'  to\n   // reference 'fa-th-list'\n\n   isFilterable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Select list\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"char\",\n      \"varchar\",\n      \"tinytext\" /* \"text\", \"mediumtext\" */,\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   hasColors: (field) => {\n      if (field.settings.hasColors) {\n         return true;\n      } else {\n         return false;\n      }\n   },\n};\n\nconst defaultValues = {\n   isMultiple: 0,\n   // {bool}\n   // can multiple values be selected?\n\n   hasColors: 0,\n   // {bool}\n   // are we to display our values in colors?\n\n   options: [],\n   // {array}\n   // The options defined for this list:\n   // [ { id, text, hex, translations },...]\n   //    .id {string} a unique id for this value\n   //    .text {string} the displayed text of this value\n   //    .hex {string} a color hex definition for this value\n   //    .translations {obj} the multilingual definitions for this value.\n\n   default: \"none\",\n   multipleDefault: [],\n};\n\nmodule.exports = class ABFieldListCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldListDefaults);\n\n      this.pendingDeletions = [];\n      // {array}\n      // a list of pending option deletions that need to be processed\n      // when this is saved.\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldListDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.hasColors = parseInt(this.settings.hasColors);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      obj.settings.options.forEach((opt) => {\n         this.unTranslate(opt, opt, [\"text\"]);\n      });\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Multiple select list\n      if (this.settings.isMultiple == true) {\n         let defaultVals = [];\n         this.settings.multipleDefault.forEach((def) => {\n            this.settings.options.forEach((opt) => {\n               if (opt.id == def.text) {\n                  defaultVals.push(opt);\n               }\n            });\n         });\n         values[this.columnName] = defaultVals || [];\n      }\n      // Single select list\n      else if (this.settings.default && this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   /**\n    * @method options\n    * Return an array of [{ id, text }] options defined by this field.\n    * @return {array}\n    */\n   options() {\n      return this.settings.options.map((opt) => {\n         return {\n            id: opt.id,\n            text: opt.text,\n            hex: opt.hex ? opt.hex : \"\",\n            translations: opt.translations ? opt.translations : \"\",\n         };\n      });\n   }\n\n   format(rowData, options = {}) {\n      let val = this.dataValue(rowData) || [];\n\n      if (typeof val == \"string\") {\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // continue regardless of error\n         }\n      }\n\n      // Convert to array\n      if (!Array.isArray(val)) val = [val];\n\n      const displayOpts = this.settings.options\n         .filter((opt) => val.filter((v) => (v.id || v) == opt.id).length > 0)\n         .map((opt) => {\n            let text = opt.text;\n            const languageCode = options.languageCode || \"en\";\n\n            // Pull text of option with specify language code\n            const optTran = (opt.translations || []).filter(\n               (o) => o.language_code == languageCode\n            )[0];\n            if (optTran) text = optTran.text;\n\n            return text;\n         });\n\n      return displayOpts.join(\", \");\n   }\n};\n","/*\n * ABFieldLongText\n *\n * An ABFieldLongText defines a LongText field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 5000;\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldLongTextDefaults = {\n   key: \"LongText\", // unique key to reference this specific DataField\n\n   description: \"Multiple lines of text\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"align-right\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'align-right'  to\n   // reference 'fa-align-right'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Long text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"longtext\", \"mediumtext\", \"text\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldLongText can be.\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldLongText extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldLongTextDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldLongTextDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n\n      // we're responsible for setting up our specific settings:\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         if (this.object)\n            this.object.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual)\n         if (this.object)\n            this.object.unTranslate(obj.settings, obj.settings, [\"default\"]);\n         else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null) {\n         if (typeof this.settings.default == \"string\") {\n            values[this.columnName] = this.settings.default;\n         } else {\n            values[this.columnName] = \"\";\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            `should NOT be longer than ${MAX_CHAR_LENGTH} characters`\n         );\n      }\n   }\n};\n","/*\n * ABFieldNumber\n *\n * An ABFieldNumber defines a Number field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldNumberDefaults = {\n   key: \"number\",\n   // unique key to reference this specific DataField\n\n   description: \"A Float or Integer Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"hashtag\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'hashtag'  to\n   // reference 'fa-hashtag'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Number\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   // 'allowRequired': 0,\n   default: \"\",\n   typeFormat: \"none\",\n   typeDecimals: \"none\",\n   typeDecimalPlaces: 0,\n   typeRounding: \"none\",\n   typeThousands: \"none\",\n   validation: 0,\n   validateMinimum: \"\",\n   validateMaximum: \"\",\n};\n\nlet L = null; //AB.Label();\n\nmodule.exports = class ABFieldNumberCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldNumberDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'allowRequired':0,\n\t\t\t\t'default':null,\n\t\t\t\t'typeFormat': 'none',\n\t\t\t\t'typeDecimals': 'none',\n\t\t\t\t'typeDecimalPlaces': 'none',\n\t\t\t\t'typeRounding' : 'none',\n\t\t\t\t'typeThousands': 'none',\n\t\t\t\t'validation':0,\n\t\t\t\t'validateMinimum':null,\n\t\t\t\t'validateMaximum':null\n\t\t\t}\n    \t}\n    \t*/\n      if (!L) {\n         L = this.AB.Label();\n      }\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldNumberDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static formatList(iL) {\n      if (iL && !L) L = iL;\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"dollar\",\n            value: L(\"$\"),\n            sign: \"$\",\n            position: \"prefix\",\n         },\n         {\n            id: \"yen\",\n            value: L(\"¥\"),\n            sign: \"¥\",\n            position: \"prefix\",\n         },\n         {\n            id: \"pound\",\n            value: L(\"£\"),\n            sign: \"£\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroBefore\",\n            value: L(\"€ (before)\"),\n            sign: \"€\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroAfter\",\n            value: L(\"€ (after)\"),\n            sign: \"€\",\n            position: \"postfix\",\n         },\n         {\n            id: \"percent\",\n            value: L(\"%\"),\n            sign: \"%\",\n            position: \"postfix\",\n         },\n      ];\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"comma\",\n            value: L(\"Comma\"),\n            sign: \",\",\n         },\n         {\n            id: \"period\",\n            value: L(\"Period\"),\n            sign: \".\",\n         },\n         {\n            id: \"space\",\n            value: L(\"Space\"),\n            sign: \" \",\n         },\n      ];\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      // this.settings.allowRequired = parseInt(this.settings.allowRequired);\n      this.settings.validation = parseInt(this.settings.validation);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      // const L = this.AB.Label();\n\n      if (data[this.columnName] != null && data[this.columnName] != \"\") {\n         let value = data[this.columnName];\n\n         // if this is an integer:\n         if (this.settings.typeDecimals == \"none\") {\n            value = parseInt(value);\n         } else {\n            const places = parseInt(this.settings.typeDecimalPlaces) || 2;\n            value = parseFloat(parseFloat(value).toFixed(places));\n         }\n\n         const isNumeric = (n) => {\n            return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n         };\n         if (!isNumeric(value)) {\n            validator.addError(this.columnName, L(\"invalid number\"));\n         }\n\n         // validate Minimum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMinimum != null &&\n            this.settings.validateMinimum > value\n         ) {\n            const errMessage = L(\"should be greater than {0}\", [\n               this.settings.validateMinimum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n\n         // validate Maximum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMaximum != null &&\n            this.settings.validateMaximum < value\n         ) {\n            const errMessage = L(\"should be less than {0}\", [\n               this.settings.validateMaximum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n      }\n   }\n\n   format(rowData) {\n      if (\n\t rowData?.[this.columnName] == null ||\n         (rowData[this.columnName] != 0 && rowData[this.columnName] == \"\")\n      )\n         return \"\";\n\n      let data = rowData[this.columnName] || 0;\n\n      if (typeof data == \"string\") {\n         data = data.replace(/,/g, \"\");\n      }\n\n      // Validate number\n      if (isNaN(parseFloat(data))) data = 0;\n\n      const formatSign = this.constructor\n         .formatList()\n         .filter((item) => item.id == this.settings.typeFormat)[0];\n      const decimalPlaces =\n         this.settings.typeDecimalPlaces != \"none\"\n            ? parseInt(this.settings.typeDecimalPlaces)\n            : 0;\n\n      let thousandsSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeThousands)[0];\n      let decimalSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeDecimals)[0];\n      let prefix = \"\";\n      let postfix = \"\";\n\n      if (formatSign && formatSign.sign) {\n         switch (formatSign.position) {\n            case \"prefix\":\n               prefix = formatSign.sign;\n               break;\n            case \"postfix\":\n               postfix = formatSign.sign;\n               break;\n         }\n      }\n\n      decimalSign = decimalSign.sign || \"\";\n      thousandsSign = thousandsSign.sign || \"\";\n\n      // round number\n      if (this.settings.typeRounding == \"roundDown\") {\n         const digit = Math.pow(10, decimalPlaces);\n         data = Math.floor(data * digit) / digit;\n      }\n\n      const number = this.formatNumber(data, {\n         groupDelimiter: thousandsSign,\n         groupSize: 3,\n         decimalDelimiter: decimalSign,\n         decimalSize: decimalPlaces,\n      });\n\n      return `${prefix} ${number} ${postfix}`;\n   }\n\n   formatNumber(data, options = {}) {\n      if (data === \"\" || data == null) return data;\n\n      data = parseFloat(data);\n      const negativeSign = data < 0 ? \"-\" : \"\";\n      data = Math.abs(data);\n\n      const dataStr = data.toString();\n      const integerStr = dataStr.split(\".\")[0];\n      const decimalStr = dataStr.split(\".\")[1];\n\n      let integerValue = \"\";\n\n      // Thousands digit sign\n      if (options.groupDelimiter) {\n         const step = 3;\n         let i = integerStr.length;\n\n         do {\n            i -= step;\n            const chunk =\n               i > 0\n                  ? integerStr.substr(i, step)\n                  : integerStr.substr(0, step + i);\n            integerValue = `${chunk}${\n               integerValue ? options.groupDelimiter + integerValue : \"\"\n            }`;\n         } while (i > 0);\n      } else {\n         integerValue = integerStr;\n      }\n\n      // Integer\n      let result = `${negativeSign}${integerValue}`;\n\n      // Decimal\n      if (decimalStr && options.decimalDelimiter && options.decimalSize) {\n         const decimalVal = data.toFixed(options.decimalSize).split(\".\")[1];\n         result += `${options.decimalDelimiter}${decimalVal}`;\n      }\n\n      return result;\n   }\n\n   getDecimalSize() {\n      if (this.settings.typeDecimalPlaces != \"none\") {\n         return parseInt(this.settings.typeDecimalPlaces);\n      } else {\n         return 0;\n      }\n   }\n};\n","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 255;\n\nconst ABFieldStringDefaults = {\n   key: \"string\",\n   // unique key to reference this specific DataField\n\n   description: \"short string value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Single line text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldString can be.\n};\n\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldStringCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldStringDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n        */\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldStringDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // we're responsible for setting up our specific settings:\n      this.settings.default = values.settings.default || defaultValues.default;\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         this.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual) {\n         this.unTranslate(obj.settings, obj.settings, [\"default\"]);\n      } else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data?.[this.columnName]?.length > MAX_CHAR_LENGTH) {\n         const L = this.AB.Label();\n         validator.addError(\n            this.columnName,\n            L(\"should NOT be longer than {0} characters\", [MAX_CHAR_LENGTH])\n         );\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n};\n","/*\n * ABFieldTextFormula\n *\n * An ABFieldTextFormula defines a TextFormula field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTextFormulaDefaults = {\n   key: \"TextFormula\",\n   // unique key to reference this specific DataField\n\n   description: \"Text Formula\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"question\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'question'  to\n   // reference 'fa-question'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Text Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   textFormula: \"\",\n   // {string} \"some text or text with formula ...\"\n   // This tells us what the formula we need to do with text included text string.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   // 'imageWidth':'',\n   // 'useHeight': 0,\n   // 'imageHeight': ''\n};\n\n/** Private methods */\n\n/**\n * @method setValueToFormula\n *\n * @param {ABOBject} object\n * @param {string} formulaString\n * @param {object} rowData\n */\n\nfunction setValueToFormula(object, formulaString, rowData) {\n   if (!formulaString) return;\n\n   const fieldRegExp = /{[^{}]+}/gm;\n   const matches_field_array = formulaString.match(fieldRegExp);\n   matches_field_array.forEach((element) => {\n      const columnName = element.replace(/{|}|\"/g, \"\");\n      object.fields().forEach((field) => {\n         if (field.columnName == columnName) {\n            if (field.key == \"AutoIndex\") {\n               //Check AutoIndex Field\n               const autoIndexVal = field.format(rowData) || 0;\n               formulaString = formulaString.replace(element, autoIndexVal);\n            } else if (field.key == \"calculate\") {\n               //Calculate Field\n               const calVal = `(${field.format(rowData) || 0})`;\n               formulaString = formulaString.replace(element, eval(calVal));\n            } else if (field.key == \"date\") {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName]\n                     ? field.exportValue(rowData[columnName])\n                     : \"\"\n               );\n            } else {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName] ? field.format(rowData) : \"\"\n               );\n            }\n         }\n      });\n   });\n\n   return formulaString;\n}\n\n/**\n * @method setBuildinValueToFormula\n *\n * @param {ABFactory} AB\n * @param {string} formulaString\n */\n\nfunction setBuildinValueToFormula(AB, formulaString) {\n   const buildInRegExp = /\\w+\\(.*?\\)/gm;\n   const matches_buildin_array = formulaString.match(buildInRegExp);\n   if (matches_buildin_array) {\n      const buildinList = getBuildInFunction();\n      matches_buildin_array.forEach((element) => {\n         const formula_array = element.split(/\\(|\\)/);\n         const isBracketInBracket =\n            formula_array.length > 2 && formula_array[2] != \"\";\n         const functionName = formula_array[0];\n         const parameters_array = formula_array[1].split(\",\");\n         let isMatch = false;\n         for (let i = 0; i < buildinList.length; i++) {\n            let resultParameters = element;\n            if (functionName == buildinList[i].id) {\n               if (parameters_array.length == buildinList[i].parameter_size) {\n                  switch (functionName) {\n                     case \"left\":\n                        resultParameters = getLeft(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"right\":\n                        resultParameters = getRight(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"mid\":\n                        resultParameters = getMid(\n                           parameters_array[0],\n                           parameters_array[1],\n                           parameters_array[2]\n                        );\n                        break;\n                     case \"trim\":\n                        resultParameters = getTrim(parameters_array[0]);\n                        break;\n                     case \"trimLeft\":\n                        resultParameters = getTrimLeft(parameters_array[0]);\n                        break;\n                     case \"trimRight\":\n                        resultParameters = getTrimRight(parameters_array[0]);\n                        break;\n                     case \"length\":\n                        resultParameters = getLength(parameters_array[0]);\n                        break;\n                     case \"regexReplace\":\n                        resultParameters = getRegExpReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"extractRegex\":\n                        resultParameters = getExtractRegex(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     case \"replace\":\n                        resultParameters = getReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"lower\":\n                        resultParameters = getLower(parameters_array[0]);\n                        break;\n                     case \"upper\":\n                        resultParameters = getUpper(parameters_array[0]);\n                        break;\n                     case \"capitalize\":\n                        resultParameters = getCapitalize(parameters_array[0]);\n                        break;\n                     case \"random\":\n                        resultParameters = getRandom(parameters_array[0]);\n                        break;\n                     case \"numberToWords\":\n                        resultParameters = getNumberToWords(\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateDayOfWeekName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateDayOfWeekName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateMonthOfYearName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateMonthOfYearName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"formatDate\":\n                        resultParameters = getFormatDate(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     default:\n                        break;\n                  }\n                  isMatch = true;\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n                  return;\n               } else {\n                  resultParameters = functionName + \"(Bad Parameter)\";\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n               }\n            }\n         }\n      });\n   }\n   return formulaString;\n}\n\nfunction getBuildInFunction() {\n   const functionList = [\n      {\n         id: \"left\",\n         value: \"left({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"right\",\n         value: \"right({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"mid\",\n         value: \"mid({COLUMN_NAME}, 1, 1)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"trim\",\n         value: \"trim({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimLeft\",\n         value: \"trimLeft({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimRight\",\n         value: \"trimRight({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"length\",\n         value: \"length({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"regexReplace\",\n         value: \"regexReplace({COLUMN_NAME}, [*], REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"extractRegex\",\n         value: \"extractRegex({COLUMN_NAME}, [*])\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"replace\",\n         value: \"replace({COLUMN_NAME}, SEARCH_VALUE, REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"lower\",\n         value: \"lower({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"upper\",\n         value: \"upper({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"capitalize\",\n         value: \"capitalize({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      { id: \"random\", value: \"random(1)\", type: \"build-in\", parameter_size: 1 },\n      {\n         id: \"numberToWords\",\n         value: \"numberToWords({NUMBER_COLUMN} or 012...)\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateDayOfWeekName\",\n         value: \"getDateDayOfWeekName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateMonthOfYearName\",\n         value: \"getDateMonthOfYearName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"formatDate\",\n         value: \"formatDate({DATE_COLUMN}, OUTPUT_FORMAT)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n   ];\n   return functionList;\n}\n\nfunction getLeft(string, endPosition) {\n   return string.substring(0, parseInt(endPosition));\n}\n\nfunction getRight(string, endposition) {\n   const reverseStr = reverseString(string).substring(0, parseInt(endposition));\n   return reverseString(reverseStr);\n}\n\nfunction reverseString(string) {\n   return string.split(\" \").reverse().join(\" \");\n}\n\nfunction getMid(string, startPosition, length) {\n   if (string.length < startPosition) return \"mid(Bad Parameter)\";\n   return string.substring(\n      parseInt(startPosition),\n      parseInt(startPosition) + parseInt(length)\n   );\n}\n\nfunction getTrim(string) {\n   return string.trim();\n}\n\nfunction getTrimLeft(string) {\n   return string.trimLeft();\n}\n\nfunction getTrimRight(string) {\n   return string.trimRight();\n}\n\nfunction getLength(string) {\n   return string.length;\n}\n\nfunction getRegExpReplace(string, regexp, replaceString) {\n   return string.replace(regexp, replaceString);\n}\n\nfunction getExtractRegex(string, regexp) {\n   const extractResult = string.match(regexp);\n   if (Array.isArray(extractResult)) {\n      return extractResult[0];\n   }\n   return extractResult;\n}\n\nfunction getReplace(string, searchValue, replaceValue) {\n   return string.replace(searchValue, replaceValue);\n}\n\nfunction getLower(string) {\n   return string.toLowerCase();\n}\n\nfunction getUpper(string) {\n   return string.toUpperCase();\n}\n\nfunction getCapitalize(string) {\n   return string\n      .toLowerCase()\n      .split(\" \")\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(\" \");\n}\n\nfunction getRandom(max) {\n   return Math.floor(Math.random() * (max + 1));\n}\n\nfunction getNumberToWords(number) {\n   const string = number.trim(\",\").toString();\n\n   let units,\n      tens,\n      scales,\n      start,\n      end,\n      chunks,\n      chunksLen,\n      chunk,\n      ints,\n      i,\n      word,\n      words;\n\n   const and = \"\";\n\n   /* Is number zero? */\n   if (parseInt(string) === 0) {\n      return \"zero\";\n   }\n\n   /* Array of units as words */\n   units = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n      \"ten\",\n      \"eleven\",\n      \"twelve\",\n      \"thirteen\",\n      \"fourteen\",\n      \"fifteen\",\n      \"sixteen\",\n      \"seventeen\",\n      \"eighteen\",\n      \"nineteen\",\n   ];\n\n   /* Array of tens as words */\n   tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n   ];\n\n   /* Array of scales as words */\n   scales = [\n      \"\",\n      \"thousand\",\n      \"million\",\n      \"billion\",\n      \"trillion\",\n      \"quadrillion\",\n      \"quintillion\",\n      \"sextillion\",\n      \"septillion\",\n      \"octillion\",\n      \"nonillion\",\n      \"decillion\",\n      \"undecillion\",\n      \"duodecillion\",\n      \"tredecillion\",\n      \"quatttuor-decillion\",\n      \"quindecillion\",\n      \"sexdecillion\",\n      \"septen-decillion\",\n      \"octodecillion\",\n      \"novemdecillion\",\n      \"vigintillion\",\n      \"centillion\",\n   ];\n\n   /* Split user arguemnt into 3 digit chunks from right to left */\n   start = string.length;\n   chunks = [];\n   while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n   }\n\n   /* Check if function has enough scale words to be able to stringify the user argument */\n   chunksLen = chunks.length;\n   if (chunksLen > scales.length) {\n      return \"\";\n   }\n\n   /* Stringify each integer in each chunk */\n   words = [];\n   for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n\n      if (chunk) {\n         /* Split chunk into array of individual integers */\n         ints = chunks[i].split(\"\").reverse().map(parseFloat);\n\n         /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n         if (ints[1] === 1) {\n            ints[0] += 10;\n         }\n\n         /* Add scale word if chunk is not zero and array item exists */\n         if ((word = scales[i])) {\n            words.push(word);\n         }\n\n         /* Add unit word if array item exists */\n         if ((word = units[ints[0]])) {\n            words.push(word);\n         }\n\n         /* Add tens word if array item exists */\n         if ((word = tens[ints[1]])) {\n            words.push(word);\n         }\n\n         /* Add 'and' string after units or tens integer if: */\n         if (ints[0] || ints[1]) {\n            /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n            if (ints[2] || (!i && chunksLen)) {\n               words.push(and);\n            }\n         }\n\n         /* Add hundreds word if array item exists */\n         if ((word = units[ints[2]])) {\n            words.push(word + \" hundred\");\n         }\n      }\n   }\n\n   return words.reverse().join(\" \");\n}\n\nfunction getDateDayOfWeekName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"dddd\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"dddd\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getDateMonthOfYearName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"MMMM\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"MMMM\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getFormatDate(date, format) {\n   const dt = new Date(date);\n   return dt.toString(format);\n}\n\nmodule.exports = class ABFieldTextFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldTextFormulaDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n      // // text to Int:\n      // this.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTextFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getBuildInFunction() {\n      return getBuildInFunction();\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default value\n         // values[this.columnName] = this.settings.DEFAULT_VALUE;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      validator = super.isValid();\n\n      // validator.addError(this.columnName, L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      // return this.settings.supportMultilingual == 1;\n      return false;\n   }\n\n   format(rowData) {\n      try {\n         if (!this.settings.textFormula) return \"\";\n\n         let resultFormula = this.settings.textFormula;\n\n         //Set Field value first\n         resultFormula = setValueToFormula(this.object, resultFormula, rowData);\n\n         //then Check Build-in Function\n         resultFormula = setBuildinValueToFormula(this.AB, resultFormula);\n\n         return resultFormula;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n//// NOTE: if you need a unique [edit_type] by your returned config.editor above:\n// webix.editors = {\n//   \"[edit_type]\": {\n//     focus: function () {...}\n//     getValue: function () {...},\n//     setValue: function (value) {...},\n//     render: function () {...}\n//   }\n// };\n\n//// NOTE: if you need a unique [sort_type] by your returned config.sort above:\n// webix.DataStore.prototype.sorting.as.[sort_type] = function(a,b){\n//     return a > b ? 1 : -1;\n// }\n","/*\n * ABFieldTreeCore\n *\n * An ABFieldTree defines a select list field type.\n *\n */\n\nconst ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTreeDefaults = {\n   key: \"tree\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Data tree allows you to build a hierarchical set of selectable data. (ex: Categories and sub-categories)\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"sitemap\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'sitemap'  to\n   // reference 'fa-sitemap'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Data Tree\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   options: [],\n};\n\nmodule.exports = class ABFieldTreeCore extends ABFieldSelectivity {\n   constructor(values, object) {\n      super(values, object, ABFieldTreeDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTreeDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      if (obj.settings.options && obj.settings.options.length > 0) {\n         obj.settings.options.forEach((opt) => {\n            this.unTranslate(opt, opt, [\"text\"]);\n         });\n      }\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldUser\n *\n * An ABFieldUser defines a user field type.\n *\n */\n\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldUserDefaults = {\n   key: \"user\",\n   // unique key to reference this specific DataField\n\n   description: \"Add users to a record.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"user-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'user-o'  to\n   // reference 'fa-user-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"User\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   USERNAME_FIELD_ID: \"5760560b-c078-47ca-98bf-e18ac492a561\",\n   // {string} .uuid\n   // the ABField.id of the SiteUser.username field.  This is what other\n   // objects will link to in their ABFieldUser connections.\n};\n\nconst defaultValues = {\n   editable: 1,\n   isMultiple: 0,\n   isCurrentUser: 0,\n   isShowProfileImage: 0,\n   isShowUsername: 1,\n};\n\nmodule.exports = class ABFieldUserCore extends ABFieldConnect {\n   constructor(values, object) {\n      super(values, object, ABFieldUserDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldUserDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.editable = parseInt(this.settings.editable);\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.isCurrentUser = parseInt(this.settings.isCurrentUser);\n      this.settings.isShowProfileImage = parseInt(\n         this.settings.isShowProfileImage\n      );\n      this.settings.isShowUsername = parseInt(this.settings.isShowUsername);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   format(rowData) {\n      let val = this.dataValue(rowData) || [];\n\n      if (val && !Array.isArray(val)) val = [val];\n      if (!val) val = [];\n\n      return val.map((v) => v.username || v).join(\", \");\n   }\n};\n","/*\n * ABMobilePageCore\n *\n * An view that represents a \"Page\" on the Mobile Device.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABMobilePageDefaults = {\n   key: \"mobile-page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-'  )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\",\n   // {string}\n   // What type of \"Page\" this is: ['page', 'popup', 'reportPage']\n\n   defaultPage: 0,\n   // {bool} 1|0\n   // is this the default page for the Mobile App? If so, this is the initial\n   // Page that is displayed when the App is loaded.\n   // NOTE: there can be only 1 page defined in the app as .defaultPage\n\n   hideTitle: 0,\n   // {bool} 1|0\n   // By default we will display this.label as our Title. Set this to 1 to not\n   // show the tile on the page.\n\n   hideTabs: 0,\n   // {bool} 1|0\n   // By default, pages will show any Tab options on their display.  Set this\n   // to 1 to not show the tab options for this Page. (good for pages that\n   // are linkedPages with forms )\n};\n\nmodule.exports = class ABMobilePageCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMobilePageDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABMobilePage, but has\n      // different implications ... so we default an ABMobilePage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABMobilePageDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABMobilePage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n      obj.route = this.route;\n\n      obj.myAppID = this.myAppID;\n\n      obj.menuType = this.menuType;\n\n      obj.defaultPage = this.defaultPage;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const DV = ABPropertyComponentDefaults;\n\n      this.route =\n         values.route || (this.name || this.label).replaceAll(\" \", \"_\");\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      this.menuType = values.menuType || \"menu\";\n      // {string}  [\"menu\", \"tab\"]\n      // indicates if this Page was added as a Mobile App's \"menu\" or \"Tab\"\n\n      this.defaultPage = values.defaultPage || 0;\n      // {bool}  1|0\n      // indicates if this is the default page that is loaded when the mobile app\n      // is started.\n      // NOTE: only 1 Page in a Mobile App can have this setting = 1.\n\n      this.settings.hideTitle = parseInt(\n         values.settings.hideTitle ?? DV.hideTitle\n      );\n      // {bool} 1|0\n      // By default an ABMobilePage will display it's this.label for a title\n      // on the page.  Setting this to TRUE (1) will hide the title.\n\n      this.settings.hideTabs = parseInt(\n         values.settings.hideTabs ?? DV.hideTabs\n      );\n      // {bool} 1|0\n      // By default, pages will show any Tab options on their display.  Set this\n      // to 1 to not show the tab options for this Page. (good for pages that\n      // are linkedPages with forms )\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`,\n               {\n                  appID: this.application.id,\n                  pageID: this.id,\n                  missingPageID: id,\n               }\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      // this.settings.columns = this.settings.columns || 1;\n      // this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABMobilePage\n            // be sure to remove any of it's ABMobilePage as well\n            // This cleans out any dangling ABDefinitions\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABMobilePage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            // make sure .defaultPage is properly set\n            if (this.defaultPage) {\n               return this.application.setPageDefault(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABMobilePage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance() {\n      console.warn(\n         \"This version of ABMobilePage hasn't updated it's refreshInstance()\",\n         this\n      );\n      return this;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABMobilePages for this ABMobilePage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABMobilePages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABMobilePages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         // if (this._pages && this._pages.length > 0) {\n         //    result = this._pages.filter(filter);\n\n         //    if (result.length < 1) {\n         //       this._pages.forEach((p) => {\n         //          var subPages = p.pages(filter, deep);\n         //          if (subPages && subPages.length > 0) {\n         //             result = subPages;\n         //          }\n         //       });\n         //    }\n         // }\n         result = this.application._searchDeep(this, \"_pages\", filter);\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABMobilePage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABMobilePage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABMobilePage that is tied to this\n    * ABMobilePage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABMobilePage}\n    */\n   pageNew(values) {\n      // make sure this is an ABMobilePage description\n      values.key = ABMobilePageDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABMobilePage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABMobilePage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages((p) => p.id != page.id);\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABMobilePageDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABMobilePage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABMobilePage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABMobileViewDefaults = {\n   key: \"mobile-view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABMobileViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABMobileViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABMobileViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || this.viewKey(),\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         // accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || this.viewKey();\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      // this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label =\n               this.parent.label +\n               \".\" +\n               (this.field?.()?.columnName ?? this.defaults.key);\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   // isAccessibleForRoles(roles) {\n   //    var foundRole = false;\n\n   //    var accessibleRoles = Object.keys(this.accessLevels) || [];\n   //    (roles || []).forEach((r) => {\n   //       if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n   //          foundRole = true;\n   //       }\n   //    });\n\n   //    return foundRole;\n   // }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   // getUserAccess() {\n   //    // by default everyone has no access\n   //    var accessLevel = 0;\n\n   //    if (this.application.isAccessManaged) {\n   //       // check to see if the current users is the access manager\n   //       var isAccessManager = false;\n   //       // first check if manager is defined by their role\n   //       if (parseInt(this.application.accessManagers.useRole) == 1) {\n   //          // if so check if any of the user's role match the managers\n   //          this.AB.Account.roles().forEach((role) => {\n   //             if (\n   //                this.application.accessManagers.role.indexOf(\n   //                   role.id || role.uuid\n   //                ) > -1\n   //             ) {\n   //                // if so set the access level to full access\n   //                isAccessManager = true;\n   //                accessLevel = 2;\n   //             }\n   //          });\n   //       }\n   //       // if the user isn't already set as the manager and the manager is defined by their account\n   //       if (\n   //          !isAccessManager &&\n   //          parseInt(this.application.accessManagers.useAccount) == 1\n   //       ) {\n   //          // check if the user's account matches the managers\n   //          if (\n   //             this.application.accessManagers.account.indexOf(\n   //                this.AB.Account.uuid() + \"\"\n   //             ) > -1\n   //          ) {\n   //             // if so set the access level to full access\n   //             isAccessManager = true;\n   //             accessLevel = 2;\n   //          }\n   //       }\n\n   //       // if the user is not the manager check if the page has access levels defined for roles\n   //       if (\n   //          this.accessLevels &&\n   //          Object.keys(this.accessLevels).length > 0 &&\n   //          !isAccessManager\n   //       ) {\n   //          // check to see if the user's roles matches one of the roles defined\n   //          this.AB.Account.roles().forEach((role) => {\n   //             var currentRole = this.accessLevels[role.id || role.uuid];\n   //             if (currentRole && parseInt(currentRole) > accessLevel)\n   //                // if the access level is higher than a previous role set to the new level\n   //                accessLevel = parseInt(currentRole);\n   //          });\n   //       }\n   //    } else {\n   //       accessLevel = 2;\n   //    }\n\n   //    return accessLevel;\n   // }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"mobile-form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"mobile-form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"mobile-detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"mobile-detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"mobile-page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\n               \"mobile-form\",\n               \"grid\",\n               \"line\",\n               \"area\",\n               \"bar\",\n               \"gantt\",\n               \"kanban\",\n            ].indexOf(this.key) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"mobile-form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\n                  \"button\",\n                  \"label\",\n                  \"mobile-page\",\n                  \"tab\",\n                  \"viewcontainer\",\n               ].indexOf(this.key) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `MobileView[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   // updateAccessLevels(roleId, accessLevel) {\n   //    if (parseInt(accessLevel) == 0) {\n   //       if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n   //    } else {\n   //       this.accessLevels[roleId] = accessLevel;\n   //    }\n\n   //    return this.save(false, false);\n   // }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         // result = result.concat(this._views.filter(filter));\n\n         // this._views.forEach((v) => {\n         //    var subViews = v.views(filter, deep);\n         //    if (subViews && subViews.length > 0) {\n         //       result = result.concat(subViews);\n         //    }\n         // });\n         result = this.application._searchDeep(this, \"_views\", filter);\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewByID()\n    *\n    * return the specific View referenced by the given ID.\n    *\n    * @param {uuid} ID\n    *        the {ABMobileView}.id of the child view we are requesting\n    *\n    * @return {ABMobileView || undefined}\n    */\n   viewByID(ID) {\n      return this.views((v) => v.id == ID, true)[0];\n   }\n\n   /**\n    * @method viewNew()\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   // viewDestroy(view) {\n   //    console.error(\"DEPRECIATED: where is this called?\");\n   //    return this.viewRemove(view);\n   // }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // the default widget doesn't.\n      // only those that actually do, should override this.\n      return false;\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"mobile-page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"mobile-button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormButtonCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      Object.keys(ABViewFormButtonPropertyComponentDefaults).forEach((k) => {\n         let val =\n            this.settings[k] ?? ABViewFormButtonPropertyComponentDefaults[k];\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // just ignore the error and save val\n         }\n         this.settings[k] = val;\n      });\n\n      // this.settings.includeSave = JSON.parse(\n      //    this.settings.includeSave ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeSave\n      // );\n      // this.settings.includeCancel = JSON.parse(\n      //    this.settings.includeCancel ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeCancel\n      // );\n      // this.settings.includeReset = JSON.parse(\n      //    this.settings.includeReset ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeReset\n      // );\n\n      // this.settings.isDefault = JSON.parse(\n      //    this.settings.isDefault ||\n      //       ABViewFormButtonPropertyComponentDefaults.isDefault\n      // );\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABMobileViewFormCheckboxDefaults = {\n   key: \"mobile-checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormCheckboxCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormCheckboxPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABMobileViewFormConnectDefaults = {\n   key: \"mobile-connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormConnectCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABMobileViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"mobile-form\", // unique key identifier for this ABMobileViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABMobileViewFormCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"mobile-label\", \"mobile-button\", \"mobile-text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    * return an array of all the ABViewFormField children\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewFormField that this fn\n    *\t       returns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) =>\n               comp instanceof this.AB.Class.ABMobileViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * @method addFieldToForm()\n    * Create a New Form Item on this Form from a given ABFieldXXX object.\n    * @param {ABFieldXXX} field\n    * @param {int} yPosition\n    * @return {ABMobileViewFormXXX}\n    */\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      // TODO: figure out how to decode the Data Field and return a form\n      // element.\n\n      var fieldComponent = field.formComponentMobile();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"mobile-fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormCustomCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormDatepickerDefaults = {\n   key: \"mobile-date\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormDatepickerCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormDatetimePropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormDatetimeDefaults = {\n   key: \"mobile-datetime\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"Date and Time\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormDatetimeCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormDatetimeDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormDatetimeDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormDatetimePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormEmailPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormEmailDefaults = {\n   key: \"mobile-email\", // {string} unique key for this view\n   icon: \"envelope\", // {string} fa-[icon] reference for this view\n   labelKey: \"Email\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormEmailCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormEmailDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormEmailDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormEmailPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormFilePropertyComponentDefaults = {};\n\nconst ABViewFormFileDefaults = {\n   key: \"mobile-file\",\n   // {string} unique key for this view\n   icon: \"file\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"file\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormFileCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormFileDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormFileDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormFilePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormFormulaPropertyComponentDefaults = {};\n\nconst ABViewFormFormulaDefaults = {\n   key: \"mobile-formula\",\n   // {string} unique key for this view\n   icon: \"circle-o-notch\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"Formula\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormFormulaCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormFormulaDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormFormulaPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormFile = require(\"../../platform/mobile/ABMobileViewFormFile\");\n\nconst ABViewFormImagePropertyComponentDefaults = {};\n\nconst ABViewImageFileDefaults = {\n   key: \"mobile-image\",\n   // {string} unique key for this view\n   icon: \"file-image-o\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"Image\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormImageCore extends ABMobileViewFormFile {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewImageFileDefaults\n      );\n   }\n\n   static common() {\n      return ABViewImageFileDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormImagePropertyComponentDefaults;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABMobileViewFormItemCore extends ABMobileView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABMobileViewFormNumberDefaults = {\n   key: \"mobile-numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormNumberCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABMobileViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n};\n","const ABMobileViewFormCustom = require(\"../../platform/mobile/ABMobileViewFormCustom\");\n\nconst ABMobileViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABMobileViewFormReadonlyDefaults = {\n   key: \"mobile-fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormReadonly extends ABMobileViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormReadonlyPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormSelectSingle = require(\"../../platform/mobile/ABMobileViewFormSelectSingle\");\n\nconst ABMobileViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABMobileViewFormSelectMultipleDefaults = {\n   key: \"mobile-selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormSelectMultipleCore extends (\n   ABMobileViewFormSelectSingle\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormSelectMultiplePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABMobileViewFormSelectSingleDefaults = {\n   key: \"mobile-selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormSelectSingleCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormSelectSinglePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n   placeholder: \"\", // default placeholder text\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"mobile-textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormTextboxCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   toObj() {\n      // placeholder is a multilingual value:\n      this.unTranslate(this.settings, this.settings, [\"placeholder\"]);\n\n      return super.toObj();\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // placeholder is a multilingual value:\n      this.unTranslate(this.settings, this.settings, [\"placeholder\"]);\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewLabelCore extends ABMobileView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n   hideTitle: 0,\n   hideTabs: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // we do if we have a setting for linkPageAdd\n      return this.settings.linkPageAdd != \"\";\n   }\n};\n","/**\n * ABProcessLane\n * manages the lanes in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABProcessParticipant = require(\"../../platform/process/ABProcessParticipant\");\n\nconst ABProcessLaneDefaults = {\n   type: \"process.lane\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\"\n   // {string} .icon\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessLaneCore extends ABProcessParticipant {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessLaneDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.type = attributes.type || ABProcessLaneDefaults.type;\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   // toObj() {\n   //     // default label value\n   //     if (!this.label && this.name && this.name != \"\") {\n   //         this.label = this.name;\n   //     }\n\n   //     // untranslate this object:\n   //     var data = super.toObj();\n\n   //     var fieldsToSave = [\n   //         \"id\",\n   //         \"name\",\n   //         \"type\",\n   //         \"processID\",\n   //         \"diagramID\",\n   //         \"where\"\n   //     ];\n   //     fieldsToSave.forEach((f) => {\n   //         data[f] = this[f];\n   //     });\n\n   //     return data;\n   // }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABProcessParticipantDefaults = {\n   type: \"process.participant\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\" // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessParticipantCore extends ABMLClass {\n   constructor(attributes, process, AB) {\n      super([\"label\"], AB);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n\n      this.fromValues(attributes);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessParticipantDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // These Values are needed By ABDefinition:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || ABProcessParticipantDefaults.type;\n      this.key = attributes.key || ABProcessParticipantDefaults.type;\n\n      // Process Values:\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneIDs = attributes.laneIDs || [];\n      this.stashed = false;\n      if (attributes.stashed && attributes.stashed != \"\") {\n         this.stashed = attributes.stashed;\n      }\n\n      function validChecker(attribute) {\n         return typeof attribute != \"undefined\" && attribute != null;\n      }\n\n      this.useRole = 0;\n      if (validChecker(attributes.useRole)) {\n         this.useRole = parseInt(attributes.useRole);\n      }\n\n      this.role = 0;\n      if (validChecker(attributes.role)) {\n         this.role = attributes.role;\n      }\n\n      this.useAccount = 0;\n      if (validChecker(attributes.useAccount)) {\n         this.useAccount = parseInt(attributes.useAccount);\n      }\n\n      this.account = 0;\n      if (validChecker(attributes.account)) {\n         this.account = attributes.account;\n      }\n\n      this.useField = 0;\n      if (validChecker(attributes.useField)) {\n         this.useField = parseInt(attributes.useField);\n      }\n\n      this.userField = [];\n      if (validChecker(attributes.userField)) {\n         this.userField = attributes.userField;\n      }\n\n      // depreciated\n      this.fields = [];\n      if (validChecker(attributes.fields)) {\n         this.fields = attributes.fields;\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneIDs\",\n         \"where\",\n         \"useRole\",\n         \"role\",\n         \"useAccount\",\n         \"account\",\n         \"useField\",\n         \"userField\",\n         \"fields\",\n         \"stashed\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * @method onProcessReady()\n    * perform any tasks/checks necessary after the parent Process is\n    * setup and ready.\n    */\n   onProcessReady() {}\n};\n","/*\n * ABProcessTaskManager\n *\n * An interface for managing the different ABProcessTasks in AppBuilder.\n *\n */\n\n/*\n * Tasks\n * A name => ABProcessElement hash of the different ABProcessElements available.\n */\nvar Tasks = {};\n\n/*\n * DEFINITIONTYPES\n * a hash of BPMN:Element.type to Default values\n * for each of our Process Objects.\n *\n * NOTE: For Tasks, the key should be target.type,\n * for Triggers or End elements, the key should be\n * the target.eventDefinitionType\n */\nvar DEFINITIONTYPES = {};\n\nvar AllProcessElements = [\n   require(\"../../platform/process/tasks/ABProcessEnd\"),\n   require(\"../../platform/process/tasks/ABProcessGatewayExclusive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskEmail\"),\n   require(\"../../platform/process/tasks/ABProcessTaskService\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingJEArchive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceCalculate\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceInsertRecord\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceQuery\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl\"),\n   require(\"../../platform/process/tasks/ABProcessTaskSubProcess\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUser\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserApproval\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserExternal\"),\n   require(\"../../platform/process/tasks/ABProcessTrigger\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerLifecycle\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerTimer\"),\n];\n\nAllProcessElements.forEach((ELEMENT) => {\n   Tasks[ELEMENT.defaults().key] = ELEMENT;\n\n   switch (ELEMENT.defaults().category) {\n      case \"start\":\n      case \"end\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.eventDefinitionType\n         ] = ELEMENT.defaults();\n         break;\n\n      case \"gateway\":\n      case \"task\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.type\n         ] = ELEMENT.defaults();\n         break;\n   }\n});\n\nmodule.exports = {\n   /*\n    * @function allTasks\n    * return all the currently defined ABProcessTasks in an array.\n    * @return [{ABProcessTask},...]\n    */\n   allTasks: function () {\n      var tasks = [];\n      for (var t in Tasks) {\n         tasks.push(Tasks[t]);\n      }\n      return tasks;\n   },\n\n   /*\n    * @function newTask\n    * return an instance of an ABProcessTask based upon the values.type value.\n    * @return {ABProcessTask}\n    */\n   newTask: function (values, process, AB) {\n      if (values.key) {\n         return new Tasks[values.key](values, process, AB);\n      } else {\n         //// TODO: what to do here?\n      }\n   },\n\n   DiagramReplaceDefinitionsForType: function (type) {\n      var definitions = AllProcessElements.filter((e) => {\n         return e.defaults().category == type;\n      }).map((e) => {\n         return e.DiagramReplace();\n      });\n      return definitions;\n   },\n\n   StartEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"start\");\n   },\n\n   Gateways: function () {\n      return this.DiagramReplaceDefinitionsForType(\"gateway\");\n   },\n\n   Tasks: function () {\n      return this.DiagramReplaceDefinitionsForType(\"task\");\n   },\n\n   EndEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"end\");\n   },\n\n   definitionForElement: function (element) {\n      // pull the key from the embedded .eventDefinition\n      // if there is one\n      var key = null;\n      if (element.businessObject.eventDefinitions) {\n         var def = element.businessObject.eventDefinitions[0];\n         if (def) {\n            key = def.$type;\n         }\n      }\n\n      // if not, then just use the base .type\n      if (!key) {\n         key = element.type;\n      }\n\n      return DEFINITIONTYPES[key];\n   },\n};\n\n","var ABMLClass = require(\"../../../platform/ABMLClass\");\n\nmodule.exports = class ABProcessTaskCore extends ABMLClass {\n   constructor(attributes, process, AB, defaultValues) {\n      super([\"label\"], AB);\n\n      this.defaults = defaultValues || { key: \"core\", icon: \"core\" };\n      // {obj} .defaults\n      // a value hash of default values for an ABProcessTask\n      // NOTE: needs to be set before .fromValues()\n\n      this.fromValues(attributes);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n      // {ABProcess} .process\n      // The parent ABProcess this process element is a part of.\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n      this.state = null;\n   }\n\n   ///\n   /// Static Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // ABDefinition Related fields:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process.task.unknown\";\n\n      // ABProcess related fields:\n      this.key = attributes.key || this.defaults.key || \"?key?\";\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneDiagramID = attributes.laneDiagramID || \"?laneID?\";\n      // laneDiagramID : connects to the parent object that defines any\n      //      default User information for the Task.  In our case, it\n      //      might be a {ABProcessParticipant} object, or a {ABProcessLane}\n      //      object.  by default, a diagram's Participant obj doesn't define\n      //      any lanes, and therefore can provide that info.  Once a lane\n      //      is added, however, an object is assigned to it, and the\n      //      Lane will provide that info.\n\n      // initialize any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            if (typeof attributes[s] == \"undefined\") this[s] = null;\n            else this[s] = attributes[s];\n         });\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneDiagramID\",\n         \"key\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      // save any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            data[s] = this[s];\n         });\n      }\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * errorConfig()\n    * Respond with an error when expected configuration parameters do not\n    * pull data.\n    * @param {obj} instance\n    *        the instance data of this task\n    * @param {string} msg\n    *        the display message for this error.\n    * @param {array[string]} fields\n    *        an array of parameter keys that should be included in the error\n    *        for additional information.\n    * @return {Promise.reject(error)}\n    */\n   errorConfig(instance, msg, fields = []) {\n      this.log(instance, msg);\n      var error = new Error(`${this.type}: ${msg}`);\n      var info = { task: this };\n      if (!Array.isArray(fields)) fields = [fields];\n      fields.forEach((field) => {\n         info[field] = this[field];\n      });\n      this.AB.notify.builder(error, info);\n      return Promise.reject(error);\n   }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context\n    *        the context data of the process instance\n    * @param {obj} defaults\n    *        any values to include from our child classes\n    * @param {obj} val\n    *        any values to override the default state\n    */\n   initState(context, defaults, val) {\n      defaults = defaults || {};\n      if (!val) {\n         val = defaults;\n         defaults = {};\n\n         // in this case, then auto initi blank instanceValues:\n         if (this.defaults && this.defaults.instanceValues) {\n            this.defaults.instanceValues.forEach((v) => {\n               defaults[v] = null;\n            });\n         }\n      }\n\n      context.taskState = context.taskState || {};\n\n      // don't overwrite your settings if they already exist:\n      if (!context.taskState[this.diagramID]) {\n         context.taskState[this.diagramID] = {\n            initialized: true,\n            status: \"initialized\",\n         };\n         for (var d in defaults) {\n            context.taskState[this.diagramID][d] = defaults[d];\n         }\n         for (var v in val) {\n            context.taskState[this.diagramID][v] = val[v];\n         }\n      }\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return false;\n   }\n\n   /**\n    * log()\n    * enter a log in the current process instance\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {...} ...allArgs the remaining parameters sent to the log\n    */\n   log(instance, ...allArgs) {\n      var text = `${this.diagramID} : ${\n         this.name ? this.name : this.key\n      } : ${allArgs.join(\" \")}`;\n      instance.log.push(text);\n   }\n\n   /**\n    * myLane()\n    * return the ABProcessParticipant | ABProcessLane element we are\n    * in.\n    * @return {ABProcessParticipant|ABProcessLane}\n    */\n   myLane() {\n      return this.process.elementForDiagramID(this.laneDiagramID);\n   }\n\n   /**\n    * myState()\n    * return the current state values for this ABProcessTask\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {obj}\n    */\n   myState(instance) {\n      return instance.context.taskState[this.diagramID];\n   }\n\n   /**\n    * nextTasks()\n    * follow the current instance diagram and return the next task(s)\n    * after this task.\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {array}  [ABProcessTask, ...] or {null} if an error\n    */\n   nextTasks(instance) {\n      var nextTasks = [];\n\n      var myDiagramObj = instance.hashDiagramObjects[this.diagramID];\n      if (!myDiagramObj) {\n         var error = new Error(\n            `Configuration Error: Did not find my definition for dID[${this.diagramID}]`\n         );\n         this.onError(instance, error);\n         return null;\n      }\n\n      // myDiagramObj :\n      // {\n      //     \"bpmn2:outgoing\": [{\"_text\": \"SequenceFlow_00fbxm3\"} ...],\n      //     \"_attributes\": {id: \"StartEvent_1\"},\n      //     \"_type\": \"start\"\n      // }\n\n      // find my possible exits:\n      var exitFlows = myDiagramObj[\"bpmn2:outgoing\"];\n      if (!exitFlows) {\n         var error = new Error(\n            `Configuration Error: Did not find any outgoing flows for dID[${this.diagramID}]`\n         );\n         this.AB.notify.builder(error, { task: this });\n         this.onError(instance, error);\n         return null;\n      }\n\n      if (!Array.isArray(exitFlows)) {\n         exitFlows = [exitFlows];\n      }\n\n      var tasksFromFlow = (flow) => {\n         // follow a flow and grab each of it's exit tasks\n         // place them into nextTasks[];\n\n         var flowObj = instance.hashDiagramObjects[flow[\"_text\"]];\n         if (!flowObj) return;\n\n         var targetIDs = flowObj[\"_attributes\"][\"targetRef\"];\n         if (!targetIDs) return;\n\n         if (!Array.isArray(targetIDs)) {\n            targetIDs = [targetIDs];\n         }\n\n         targetIDs.forEach((tid) => {\n            var targetTask = this.process.elementForDiagramID(tid);\n            if (targetTask) {\n               if (nextTasks) {\n                  nextTasks.push(targetTask);\n               }\n            } else {\n               var error = new Error(\n                  `Configuration Error: No ProcessTask instance for diagramID[${tid}]`\n               );\n               this.AB.notify.builder(error, { task: this });\n               this.onError(instance, error);\n               nextTasks = null;\n            }\n         });\n      };\n\n      exitFlows.forEach((f) => {\n         tasksFromFlow(f);\n      });\n\n      return nextTasks;\n   }\n\n   /**\n    * onError()\n    * perform the following actions (log it) on an error.\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {Error} error\n    */\n   onError(instance, error) {\n      if (error) {\n         var text = `${error.toString()}`;\n         this.log(instance, text);\n      }\n      var myState = this.myState(instance);\n      myState.status = \"error\";\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return null;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      return null;\n   }\n\n   /**\n    * hashProcessDataValues()\n    * return a hash of live Process Data Values\n    * @param {obj} instance\n    * @return {array} | null\n    */\n   hashProcessDataValues(instance) {\n      var listDataFields = this.process.processDataFields(this);\n      var currentProcessValues = {};\n      listDataFields.forEach((f) => {\n         currentProcessValues[f.key] = this.process.processData(this, [\n            instance,\n            f.key,\n         ]);\n      });\n      return currentProcessValues;\n   }\n\n   /**\n    * reset()\n    * prepare this task to run again if it was already completed.\n    *\n    * This might happen in a process where a loop is formed and tasks\n    * are repeated until a certain outcome.\n    *\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   reset(instance) {\n      // a task wants to run me.  Possibly again.\n      var myState = this.myState(instance);\n\n      // if I haven't setup my state (why?) then just\n      // do that again:\n      if (!myState) {\n         this.initState(instance.context);\n      } else {\n         // if I have already \"completed\" and we are being\n         // asked to run again (it's possible)\n         if (myState.status == \"completed\" || myState.status == \"error\") {\n            // remove my current state\n            delete instance.context.taskState[this.diagramID];\n\n            // store a new state in the context\n            this.initState(instance.context);\n\n            // remember our previous state\n            var newState = this.myState(instance);\n            newState._prevState = myState;\n            this.log(instance, \" Reset() called. Running again. \");\n         }\n      }\n   }\n\n   /**\n    * stateCompleted()\n    * mark this task has having completed.\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   stateCompleted(instance) {\n      var myState = this.myState(instance);\n      myState.status = \"completed\";\n   }\n\n   /**\n    * stateUpdate()\n    * update my state values with the given values data\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {obj} values    the new state values\n    */\n   stateUpdate(instance, values) {\n      values = values || {};\n      var myState = this.myState(instance);\n      for (var v in values) {\n         myState[v] = values[v];\n      }\n   }\n\n   /**\n    * wantToDoSomething()\n    * determine if this task still has something to do.\n    * @param {obj} instance  the instance data of the process we are working on\n    * @return {bool} true if there is still pending actions\n    */\n   wantToDoSomething(instance) {\n      var state = this.myState(instance);\n      if (state) {\n         return state.status != \"completed\" && state.status != \"error\";\n      } else {\n         // my state wasn't defined?\n         console.warn(\n            \"ABProcessTaskCore:wantToDoSomething(): called without having initialized our state first.\",\n            instance\n         );\n         // initialize our state and try again\n         this.initState(instance.context);\n         return this.wantToDoSomething(instance);\n      }\n   }\n\n   /**\n    * @method onProcessReady()\n    * Perform any setup actions after the parent process has indicated it is \"ready\"\n    */\n   onProcessReady() {}\n\n   get startElements() {\n      let startElems =\n         this.process.elements(\n            (elem) =>\n               elem && elem.defaults && elem.defaults.category === \"start\"\n         ) || [];\n      return startElems;\n   }\n\n   get previousElements() {\n      return this.process.connectionPreviousTask(this);\n   }\n\n   get objectOfStartElement() {\n      const startElem = this.startElements[0];\n      if (!startElem) return null;\n\n      return this.AB.objectByID(startElem.objectID);\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElements[0];\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEndDefaults = {\n   category: \"end\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"stop\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   key: \"End\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEndCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.end\";\n      super(attributes, process, AB, ABProcessTaskEndDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEndDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Terminate End Event\",\n         actionName: \"replace-with-terminate-end\",\n         className: \"bpmn-icon-end-event-terminate\",\n         target: {\n            type: \"bpmn:EndEvent\",\n            eventDefinitionType: \"bpmn:TerminateEventDefinition\",\n         },\n      };\n   }\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         triggered: false,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return true;\n   }\n\n   /**\n    * nextTasks()\n    * return the next tasks to be run after this task is complete.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve([])\n    */\n   nextTasks(instance) {\n      // I'm an End Event.  There are no nextTasks()\n      return [];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessGatewayExclusiveDefaults = {\n   category: \"gateway\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GatewayExclusive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"conditions\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessGatewayExclusiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.gateway.exclusive\";\n      super(attributes, process, AB, ABProcessGatewayExclusiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessGatewayExclusiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Exclusive Gateway\",\n         actionName: \"replace-with-exclusive-gateway\",\n         className: \"bpmn-icon-gateway-xor\",\n         target: {\n            type: \"bpmn:ExclusiveGateway\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.conditions = this.conditions || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEmailDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"to\",\n      \"from\",\n      \"subject\",\n      \"message\",\n      \"toCustom\",\n      \"fromCustom\",\n      \"toUsers\",\n      \"fromUsers\",\n      \"toCustomFields\",\n      \"fromCustomFields\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"email\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Email\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEmailCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.email\";\n      super(attributes, process, AB, ABProcessTaskEmailDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEmailDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Send Task\",\n         actionName: \"replace-with-send-task\",\n         className: \"bpmn-icon-send\",\n         target: {\n            type: \"bpmn:SendTask\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         this[f] = attributes[f];\n      });\n   }\n\n   /**\n    * onProcessReady()\n    * Perform our warnings checks once the parent Process is ready\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         to: [],\n         from: [],\n         subject: this.subject,\n         message: this.message,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingBatchProcessingDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingBatchProcessing\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectBatch\",\n      \"processBatchValue\",\n      \"fieldBatchEntries\",\n      \"fieldBatchFinancialPeriod\",\n      \"objectJE\",\n      \"fieldJEAccount\",\n      \"fieldJERC\",\n      \"fieldJEStatus\",\n      \"fieldJEStatusComplete\",\n      \"objectBR\",\n      \"fieldBRFinancialPeriod\",\n      \"fieldBRAccount\",\n      \"fieldBRRC\",\n      \"fieldBREntries\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingBatchProcessingCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.batchProcessing\";\n      super(attributes, process, AB, AccountingBatchProcessingDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingBatchProcessingDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPValue\",\n      \"objectFP\",\n      \"objectGL\",\n      \"objectAcc\",\n      \"fieldFPStart\",\n      \"fieldFPOpen\",\n      \"fieldFPStatus\",\n      \"fieldFPActive\",\n      \"fieldGLStarting\",\n      \"fieldGLRunning\",\n      \"fieldGLAccount\",\n      \"fieldGLRc\",\n      \"fieldGLDebit\",\n      \"fieldGLCredit\",\n      \"fieldAccType\",\n      \"fieldAccAsset\",\n      \"fieldAccExpense\",\n      \"fieldAccLiabilities\",\n      \"fieldAccEquity\",\n      \"fieldAccIncome\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpClose\";\n      super(attributes, process, AB, AccountingFPCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPYearCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPYearClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPYearValue\",\n      \"objectFPYear\",\n      \"objectFPMonth\",\n      \"objectGL\",\n      \"objectAccount\",\n      \"valueFundBalances\",\n      \"valueNetIncome\",\n      \"fieldFPYearStart\",\n      \"fieldFPYearEnd\",\n      \"fieldFPYearStatus\",\n      \"fieldFPYearActive\",\n      \"fieldFPMonthStart\",\n      \"fieldFPMonthEnd\",\n      \"fieldGLStartBalance\",\n      \"fieldGLRunningBalance\",\n      \"fieldGLrc\",\n      \"fieldAccNumber\",\n      \"fieldAccType\",\n      \"fieldAccTypeIncome\",\n      \"fieldAccTypeExpense\",\n      \"fieldAccTypeEquity\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPYearCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpYearClose\";\n      super(attributes, process, AB, AccountingFPYearCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPYearCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet AccountingJEArchiveDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"archive\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingJEArchive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processBatchValue\",\n      \"objectBatch\",\n      \"objectBalance\",\n      \"objectJE\",\n      \"objectJEArchive\",\n\n      \"fieldBatchFiscalMonth\",\n      \"fieldJeAccount\",\n      \"fieldJeRC\",\n      \"fieldJeArchiveBalance\",\n      \"fieldBrFiscalMonth\",\n      \"fieldBrAccount\",\n      \"fieldBrRC\",\n      \"fieldsMatch\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingJEArchiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.jeArchive\";\n      super(attributes, process, AB, AccountingJEArchiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingJEArchiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet CalculateDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"calculator\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Calculate\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formulaText\"],\n};\n\nmodule.exports = class CalculateTaskCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.calculate\";\n      super(attributes, process, AB, CalculateDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return CalculateDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      const label = `${this.label}->Value`;\n      // this is a calculate task, so let's include a fake ABFieldNumber\n      // for the .field value, so other tasks that limit their operations\n      // to fields can use this as a number\n      if (!this._fakeNum) {\n         this._fakeObj = this.AB.objectNew({});\n         this._fakeNum = this.AB.fieldNew(\n            { key: \"number\", name: label, label },\n            this._fakeObj\n         );\n      }\n      return {\n         key: `${this.id}.value`,\n         label,\n         field: this._fakeNum,\n      };\n   }\n};\n","/**\n * ABProcessTaskServiceCore\n *\n * This defines the base Service Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a ServiceTask performs a dedicated operation on the server.\n *  - performing a query, looking up data, etc...\n *\n */\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskServiceDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskService\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service\";\n      super(attributes, process, AB, ABProcessTaskServiceDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Service Task\",\n         actionName: \"replace-with-service-task\",\n         className: \"bpmn-icon-service\",\n         target: {\n            type: \"bpmn:ServiceTask\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskGetResetPasswordUrlDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GetResetPasswordUrl\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"email\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskGetResetPasswordUrlCore extends (\n   ABProcessElement\n) {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.getResetPasswordUrl\";\n      super(attributes, process, AB, ABProcessTaskGetResetPasswordUrlDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskGetResetPasswordUrlDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.url`,\n         label: `${this.label}->URL`,\n      };\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet InsertRecordDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"InsertRecord\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectID\",\n      \"fieldValues\",\n      \"isRepeat\",\n      \"repeatMode\",\n      \"repeatColumn\",\n   ],\n};\n\nmodule.exports = class InsertRecordCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.insertRecord\";\n      super(attributes, process, AB, InsertRecordDefaults);\n\n      this.results = [];\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return InsertRecordDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.isRepeat = JSON.parse(attributes.isRepeat || false);\n   }\n\n   get startElement() {\n      let startElem = null;\n      let currProcess = this.process;\n\n      // Find the start (trigger) task\n      while (!startElem && currProcess) {\n         startElem = currProcess.elements(\n            (elem) => elem?.defaults?.category == \"start\"\n         )[0];\n\n         // If .currProcess is a sub task, then go to the parent process for get the start task\n         currProcess = currProcess.process;\n      }\n\n      return startElem;\n   }\n\n   get previousElement() {\n      return this.process.connectionPreviousTask(this)[0];\n   }\n\n   get objectOfStartElement() {\n      let startElem = this.startElement;\n      if (!startElem) return null;\n\n      let startElemObj = this.AB.objectByID(startElem.objectID);\n      return startElemObj;\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElement;\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n\n   get fieldRepeat() {\n      let obj = this.objectOfStartElement;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.repeatColumn)[0];\n   }\n\n   /**\n    * processDataFields()\n    * return a single available data field from this element\n    * this will be the record inserted by this task\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.[PK]`,\n            label: `${this.label}-> Inserted record [PK]`,\n            field: {\n               id: this.id,\n               object: { id: this.objectID },\n               key: \"InsertedRecord\",\n               columnName: \"uuid\",\n            },\n            object: this.objectID,\n            set: true,\n         },\n      ];\n   }\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n     toObj() {\n         var data = super.toObj();\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             data[f] = this[f];\n         });\n \n         return data;\n     }\n     */\n\n   ////\n   //// Process Instance Methods\n   ////\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABQLManager = require(\"../../../platform/ql/ABQLManager.js\");\n\nconst ABProcessTaskServiceQueryDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskServiceQuery\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"qlObj\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceQueryCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.query\";\n      super(attributes, process, AB, ABProcessTaskServiceQueryDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceQueryDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Before we make instances of qlObj:\n      this._datasources = [];\n\n      // comvert our qlObj into an ABQLxxx instance.\n      if (this.qlObj) {\n         this.qlObj = ABQLManager.fromAttributes(this.qlObj, this, this.AB);\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const data = super.toObj();\n\n      // convert qlObj into obj format:\n      if (this.qlObj) data.qlObj = this.qlObj.toObj();\n\n      return data;\n   }\n\n   registerDatasource(obj) {\n      this._datasources.push(obj);\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        const myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // in this Task, we can return the Response to the UserForm\n      let fields = null;\n\n      if (this._datasources.length > 0) {\n         fields = [];\n\n         this._datasources.forEach((s) => {\n            const param = s.processDataField(this.id, this.label);\n\n            if (param) {\n               fields.push(param);\n            }\n         });\n      }\n\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      const parts = key.split(\".\");\n\n      if (parts[0] === this.id) {\n         const myState = this.myState(instance);\n\n         return myState[parts[1]];\n      }\n\n      return null;\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet SubProcessDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"object-group\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"SubProcess\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"isEnable\",\n      \"parameterId\",\n      \"connectionAttrs\",\n      \"elementIDs\",\n      \"loopType\",\n   ],\n};\n\nconst NOSPAM = {\n   /*message : bool */\n};\n// prevent sending the same message over and over.\n\nmodule.exports = class SubProcessCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.subProcess\";\n      super(attributes, process, AB, SubProcessDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return SubProcessDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"Sub Process\",\n         actionName: \"replace-with-subprocess\",\n         className: \"bpmn-icon-subprocess-expanded\",\n         target: {\n            type: \"bpmn:SubProcess\",\n            isExpanded: true,\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Convert string to boolean\n      this.isEnable = this.isEnable == null ? true : JSON.parse(this.isEnable);\n\n      let currElements = this._elements || {};\n      this._unknownElementIDs = [];\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         let ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this._unknownElementIDs.push(eID);\n            }\n         }\n      });\n\n      this._unknownElementIDs.forEach((eID) => {\n         let key = `Process[${this.processID}] Task[${this.label}] is referencing an unknown element id:[${eID}]`;\n         if (!NOSPAM[key]) {\n            let err = new Error(key);\n            this.AB.notify.builder(err, { processTask: this.id, eID });\n            NOSPAM[key] = true;\n         }\n      });\n\n      this._connections = attributes.connectionAttrs || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let data = super.toObj();\n\n      data.elementIDs = [];\n      for (let e in this._elements) {\n         data.elementIDs.push(this._elements[e].id);\n      }\n\n      data.connectionAttrs = this._connections;\n\n      return data;\n   }\n\n   /**\n    * @method processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      if (this.parameterId == null) return [];\n\n      // only call processDataFields once, filter it to get the different queries\n      let dataFieldsAll = this.process.processDataFields(this) || [];\n\n      // get the subtask data\n      let dataFieldOpt = dataFieldsAll.filter(\n         (opt) => opt.key === this.parameterId\n      )[0];\n\n      // get data from insert tasks\n      let dataFieldsAllInserted = dataFieldsAll.filter(\n         (opt) => (opt?.field?.key ?? opt?.field) === \"InsertedRecord\"\n      );\n\n      if (dataFieldOpt == null) return [];\n\n      let result = [];\n\n      // Connect field type\n      if (\n         dataFieldOpt.field &&\n         dataFieldOpt.field.key == \"connectObject\" &&\n         dataFieldOpt.field.datasourceLink &&\n         dataFieldOpt.field.datasourceLink.fields\n      ) {\n         result.push({\n            key: `${this.id}.uuid`,\n            label: `${this.label}->Repeat Data.ID`,\n            object: dataFieldOpt.field.datasourceLink,\n         });\n\n         dataFieldOpt.field.datasourceLink.fields().forEach((f) => {\n            result.push({\n               key: `${this.id}.${f.id}`,\n               label: `${this.label}->Repeat Data.${f.label}`,\n               field: f,\n               object: f.object,\n            });\n         });\n      }\n      // Other field types\n      else {\n         result.push({\n            key: dataFieldOpt.field\n               ? `${this.id}.${dataFieldOpt.field.id}`\n               : `${this.id}.subProcess`,\n            label: `${this.label}->Repeat Data`,\n            field: dataFieldOpt.field,\n            object: dataFieldOpt.object,\n         });\n      }\n\n      dataFieldsAllInserted.forEach((opt) => {\n         result.push({\n            key: `${opt.key || opt.id}`,\n            label: `Parent Process Data->${opt.label}`,\n            field: opt.field,\n            object: opt.object,\n         });\n      });\n\n      // Get any tasks that exist inside the subprocess\n      let previousFields = this.process.processDataFields.call(\n         this,\n         currElement\n      );\n      if (previousFields && previousFields.length > 0) {\n         result = result.concat(previousFields);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      let instance = params[0];\n      let key = params[1];\n      let data;\n\n      if (instance && key?.startsWith?.(this.id)) {\n         let fieldId = key.split(\".\")[1];\n         let myState = this.myState(instance);\n         let stateData = myState ? myState.data : null;\n         data = stateData;\n\n         if (stateData && fieldId) {\n            let dataFieldOpt = (\n               this.process.processDataFields(this) || []\n            ).filter((opt) => opt.key == this.parameterId)[0];\n\n            if (dataFieldOpt?.field?.key == \"connectObject\") {\n               if (!Array.isArray(stateData)) stateData = [stateData];\n\n               // Extract data\n               data = stateData.map((item) => {\n                  if (fieldId == \"uuid\" || fieldId == \"id\") {\n                     return item.uuid || item.id || item;\n                  } else if (dataFieldOpt.field.datasourceLink) {\n                     let returnField = dataFieldOpt.field.datasourceLink.fields(\n                        (f) => f.id == fieldId\n                     )[0];\n                     if (returnField) return item[returnField.columnName];\n                     else return item;\n                  }\n               });\n            }\n         }\n      }\n\n      // Filter none data items\n      if (Array.isArray(data)) data = data.filter((d) => d != null);\n\n      if (data == null || !data.length)\n         data = this.process.processData.call(this, currElement, params);\n\n      if (data == null || !data.length)\n         data = this.process.processData(this, params);\n\n      return data;\n   }\n\n   allPreviousTasks(...params) {\n      return this.process.allPreviousTasks.call(this, ...params);\n   }\n\n   allPreviousConnectionsForElement(...params) {\n      return this.process.allPreviousConnectionsForElement.call(\n         this,\n         ...params\n      );\n   }\n\n   allPreviousConnectionsForConnection(...params) {\n      return this.process.allPreviousConnectionsForConnection.call(\n         this,\n         ...params\n      );\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * @method connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      return this.process.connections.call(this, fn);\n   }\n\n   /**\n    * @method connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      if (!dID) return;\n\n      return this.process.connectionForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsIncoming.call(this, dID);\n   }\n\n   /**\n    * @method connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsOutgoing.call(this, dID);\n   }\n\n   /**\n    * @method connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      if (!element) return;\n\n      this.process.connectionRemove.call(this, element);\n   }\n\n   /**\n    * @method connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      if (!element) return;\n\n      return this.process.connectionSimplyElement.call(this, element);\n   }\n\n   /**\n    * @method connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      if (!element) return;\n\n      this.process.connectionUpsert.call(this, element);\n   }\n\n   /**\n    * @method connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      if (!currElement) return;\n\n      return this.process.connectionPreviousTask.call(this, currElement);\n   }\n\n   /**\n    * @method elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      return this.process.elements.call(this, fn);\n   }\n\n   /**\n    * @method elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      if (!element) return;\n\n      this.process.elementAdd.call(this, element);\n   }\n\n   /**\n    * @method elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      if (!dID) return null;\n\n      return this.process.elementForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      if (!def) return;\n\n      this.process.elementRemove.call(this, def);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABFieldList = require(\"../../../platform/dataFields/ABFieldList.js\");\n\nvar ABProcessTaskApprovalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Approval\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserApprovalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user.approval\";\n      super(attributes, process, AB, ABProcessTaskApprovalDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskApprovalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      function fixBoolean(obj) {\n         if (obj) {\n            Object.keys(obj).forEach((k) => {\n               if (obj[k] == \"false\") {\n                  obj[k] = false;\n               } else if (obj[k] == \"true\") {\n                  obj[k] = true;\n               } else if (typeof obj[k] == \"object\") {\n                  fixBoolean(obj[k]);\n               }\n            });\n         }\n      }\n      fixBoolean(this.formBuilder);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   /*     \n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskApprovalDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n*/\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {};\n        ABProcessTaskApprovalDefaults.instanceValues.forEach((v) => {\n            myDefaults[v] = null;\n        });\n\n        super.initState(context, myDefaults, val);\n    }\n*/\n\n   /*\n    * preProcessFormIOComponents()\n    * we need to parse the form.io components to ensure the proper columnName\n    * and labels are being used. We also will translate the columnNames at this\n    * point in the code\n    */\n   preProcessFormIOComponents() {\n      var fields = this.process.processDataFields(this);\n      if (fields && this.formBuilder && this.formBuilder.components) {\n         this.formBuilder.components.forEach((c) => {\n            if (c.abFieldID) {\n               fields.filter((entry) => {\n                  if (entry.field?.id == c.abFieldID) {\n                     c.label = entry.field.label;\n                     c.key = entry.key;\n                     if (c.data?.values && entry.field.settings.options) {\n                        var vals = [];\n                        entry.field.settings.options.forEach((opt) => {\n                           vals.push({\n                              label: opt.text,\n                              value: opt.id,\n                           });\n                        });\n                        c.data.values = vals;\n                     }\n                  }\n               });\n            } else if (c.components && c.components.length) {\n               c.key = c.path;\n               c.components.forEach((o) => {\n                  if (o.abFieldID) {\n                     // these are plucked conneted values\n                     // gather up all their fields to be used\n                     var pluck = fields.filter((f) => {\n                        return f.key == c.path;\n                     })[0];\n                     if (!pluck) return;\n                     pluck.object.fields().filter((entry) => {\n                        if (entry?.id == o.abFieldID) {\n                           o.label = entry.label;\n                           o.key = entry.columnName;\n                           if (o.data?.values && entry.settings.options) {\n                              var vals = [];\n                              entry.settings.options.forEach((opt) => {\n                                 vals.push({\n                                    label: opt.text,\n                                    value: opt.id,\n                                 });\n                              });\n                              o.data.values = vals;\n                           }\n                        }\n                     });\n                  }\n               });\n            }\n         });\n      }\n      return this.formBuilder;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // we need to get the button events defined by the form.io formBuilder\n      var options = [];\n      this.formBuilder.components.forEach((comp) => {\n         if (comp.type == \"button\" && comp.action == \"event\" && comp.event) {\n            options.push({\n               id: comp.event,\n               text: comp.label,\n            });\n         }\n      });\n      // in this Task, we can return the Response to the UserForm\n      // The Response can be in the form of a List Field, with one or more\n      // return options.\n\n      var myID = this.diagramID;\n\n      // create an ABFieldList object:\n      // make sure the options follow what is currently defined for our\n      // responses:\n      var myObj = this.AB.objectNew({});\n      var listField = new ABFieldList(\n         {\n            id: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            columnName: `${myID}.userFormResponse`,\n            settings: {\n               options: options,\n            },\n         },\n         myObj\n      );\n\n      return [\n         {\n            key: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            field: listField,\n            object: null,\n         },\n      ];\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.diagramID) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n         }\n      }\n      return null;\n   }\n};\n","/**\n * ABProcessTaskUserCore\n *\n * This defines the base User Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a UserTask expects a human user to perform an action.  These\n * actions are in the possible forms:\n *  - confirm offline action\n *  - approve data\n *  - fill out a form\n *\n */\n\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskUserDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"user\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskUser\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user\";\n      super(attributes, process, AB, ABProcessTaskUserDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"User Task\",\n         actionName: \"replace-with-user-task\",\n         className: \"bpmn-icon-user\",\n         target: {\n            type: \"bpmn:UserTask\",\n         },\n      };\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         roles: [],\n         ui: null,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserExternalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"External\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"url\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {\n   who: 0,\n   toUsers: null,\n   url: \"\",\n};\n\nmodule.exports = class ABProcessTaskUserExternalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.external\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserExternalDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserExternalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.userFormResponse`,\n            label: `${this.label}->Response`,\n         },\n      ];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTriggerDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Trigger\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTriggerDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTriggerDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Signal Start Event\",\n         actionName: \"replace-with-signal-start\",\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"bpmn:SignalEventDefinition\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.triggerKey = attributes.triggerKey || \"triggerKey.??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.triggerKey = this.triggerKey;\n\n      return data;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"objectID\",\n      \"lifecycleKey\" /* , \"triggerKey\" is tracked in ABProcessTrigger */,\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TriggerLifecycle\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerLifecycle extends ABProcessTrigger {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTaskTriggerLifecycleDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Object Lifecycle Trigger\",\n         actionName: \"replace-with-signal-lifecycle-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalLifecycle\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.objectID = attributes.objectID || \"objID.??\";\n      this.lifecycleKey = attributes.lifecycleKey || \"lifecycle.key??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.objectID = this.objectID;\n      data.lifecycleKey = this.lifecycleKey;\n      return data;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      var fields = null;\n      if (this.objectID) {\n         fields = [];\n         var object = this.AB.objectByID(this.objectID);\n         if (object) {\n            var myID = this.diagramID;\n            object.fields().forEach((field) => {\n               fields.push({\n                  key: `${myID}.${field.id}`,\n                  label: `${this.label}->${object.label}->${field.label}`,\n                  field,\n                  object,\n               });\n            });\n            fields.push({\n               key: `${myID}.uuid`,\n               label: `${this.label}->${object.label}`,\n               field: null,\n               object,\n            });\n         } else {\n            // OK, so we have an this.objectID defined, but we can't find it.\n            // that's something we need to alert:\n            var error = new Error(\n               `ABProcessTriggerLifecycleCore.processDataFields():TaskID[${this.id}]: could not find referenced object by ID [${this.objectID}]`\n            );\n            this.AB.notify.builder(error, {\n               task: this.id,\n               objID: this.objectID,\n            });\n         }\n      }\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      var parts = key.split(\".\");\n      if (parts[0] == this.diagramID) {\n         var myState = this.myState(instance);\n         if (myState[\"data\"]) {\n            var object = this.AB.objectByID(this.objectID);\n            var field = object.fields((f) => {\n               return f.id == parts[1];\n            })[0];\n            if (field) {\n               if (parts[2]) {\n                  return field[parts[2]].call(field, myState[\"data\"]);\n               } else {\n                  // instance.context.data[field.column_name];\n                  // if field is \"calculate\" or \"TextFormula\" data is not stored\n                  // in data base and we need to run format method\n                  if ([\"calculate\", \"TextFormula\"].indexOf(field.key) != -1) {\n                     return field.format(myState[\"data\"]);\n                  } else if (\n                     field.key == \"connectObject\" ||\n                     field.key == \"user\"\n                  ) {\n                     return (\n                        myState[\"data\"][field.relationName()] ||\n                        myState[\"data\"][field.columnName]\n                     );\n                  } else {\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            } else if (parts[1] == \"uuid\") {\n               return myState[\"data\"][\"uuid\"];\n            } else {\n               // parts[1] should be a field.id\n               var object = this.AB.objectByID(this.objectID);\n               var field = object.fields((f) => {\n                  return f.id == parts[1];\n               })[0];\n               if (field) {\n                  if (parts[2]) {\n                     return field[parts[2]].call(field, myState[\"data\"]);\n                  } else {\n                     // instance.context.data[field.column_name];\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            }\n         }\n      }\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      var objects = null;\n      if (this.objectID) {\n         objects = [this.AB.objectByID(this.objectID)];\n      }\n      return objects;\n   }\n};\n","const ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"repeatEvery\",\n      \"repeatTime\",\n      \"repeatDaily\",\n      \"repeatWeekly\",\n      \"repeatMonthly\",\n      \"isEnabled\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"clock-o\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TimerStartEvent\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   repeatEvery: \"daily\",\n   repeatTime: \"01:00\",\n   repeatDaily: \"day\",\n   repeatWeekly: \"FRI\",\n   repeatMonthly: \"last\",\n   isEnabled: true,\n};\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTrigger {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"trigger\";\n      super(\n         attributes,\n         process,\n         application,\n         ABProcessTaskTriggerLifecycleDefaults\n      );\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Timer Start Event\",\n         actionName: \"replace-with-signal-timer-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-timer\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalTriggerTimer\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.repeatEvery =\n         attributes.repeatEvery ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatEvery;\n\n      this.repeatDaily =\n         attributes.repeatDaily ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatDaily;\n\n      this.repeatWeekly =\n         attributes.repeatWeekly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatWeekly;\n\n      this.repeatMonthly =\n         attributes.repeatMonthly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatMonthly;\n\n      // Convert UTC to local time\n      if (attributes.repeatTime) {\n         let timeVals = attributes.repeatTime.split(\":\");\n         let currDate = new Date();\n         currDate.setUTCHours(timeVals[0]);\n         currDate.setUTCMinutes(timeVals[1]);\n         this.repeatTime = `${currDate.getHours()}:${currDate.getMinutes()}`;\n      } else {\n         this.repeatTime = ABProcessTaskTriggerLifecycleDefaults.repeatTime;\n      }\n\n      if (typeof attributes.isEnabled != \"undefined\") {\n         this.isEnabled = JSON.parse(attributes.isEnabled);\n      } else {\n         this.isEnabled = ABProcessTaskTriggerLifecycleDefaults.isEnabled;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.repeatEvery = this.repeatEvery;\n      data.repeatDaily = this.repeatDaily;\n      data.repeatWeekly = this.repeatWeekly;\n      data.repeatMonthly = this.repeatMonthly;\n\n      // Convert local time to UTC\n      data.repeatTime = this.repeatTime;\n      if (data.repeatTime && data.repeatTime instanceof Date) {\n         data.repeatTime = `${data.repeatTime.getUTCHours()}:${data.repeatTime.getMinutes()}`;\n      }\n\n      data.isEnabled = this.isEnabled;\n\n      return data;\n   }\n\n   getCronExpression() {\n      let timeVals = this.repeatTime.split(\":\");\n      let second = \"*\";\n      let minute = timeVals[1];\n      let hour = timeVals[0];\n      let day;\n      let month;\n      let dayWeek;\n      let year = \"*\";\n\n      switch (this.repeatEvery) {\n         case \"daily\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatDaily == \"weekday\" ? \"1-5\" : \"*\";\n            break;\n         case \"weekly\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatWeekly;\n            break;\n         case \"monthly\":\n            day = this.repeatMonthly;\n            month = \"*\";\n            dayWeek = \"*\";\n            break;\n      }\n\n      return `${second} ${minute} ${hour} ${day} ${month} ${dayWeek} ${year}`;\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nvar ABEmitter = require(\"../../platform/ABEmitter\");\nclass ABQLCore extends ABEmitter {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super();\n\n      // manage the incoming Parameter Definitions\n      if (!Array.isArray(parameterDefinitions)) {\n         parameterDefinitions = [parameterDefinitions];\n      }\n\n      this.parameterDefinitions = parameterDefinitions;\n\n      this.object = prevOP ? prevOP.object : null;\n      // {ABObject}\n      // The current {ABObject} the current Query Language Operation is associated\n      // with.\n\n      // if the previous Operation defined an .objectOut then our .object is THAT\n      // one.\n      if (prevOP && prevOP.objectOut) this.object = prevOP.objectOut;\n\n      this.prevOP = prevOP;\n      this.task = task;\n      // {ABProcessTaskxxx}\n      // This is running under a specific ABProcessTaskServiceQuery.  When\n      // searching for data from the Process, we must go through this.task\n      // to do so.\n\n      this.AB = AB;\n      this.next = null;\n\n      this.fromAttributes(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {}\n\n   fromAttributes(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n\n      // super.fromValues(attributes);\n      this.key = this.constructor.key ?? null;\n\n      // this.entryComplete = attributes.entryComplete || false;\n      this.params = attributes.params ?? {};\n      // {hash}\n      // The configuration values entered by the AppBuilder UI for this\n      // operation.\n\n      this.objectID = attributes.objectID || null;\n\n      // be sure to do a hard lookup if an objectID was saved:\n      if (this.objectID) this.object = this.objectLookup(this.objectID);\n\n      this.initObject(attributes);\n\n      // at least dump a warning here:\n      if (this.objectID && !this.object)\n         this.AB.notify.developer(\n            new Error(\n               `ABQLCore.fromAttributes(): unable to initialize ABObject [${this.objectID}]`\n            ),\n            {\n               attributes,\n               objectID: this.objectID,\n            }\n         );\n\n      if (attributes.next) {\n         let nextOP = null;\n\n         (this.NextQLOps ?? this.constructor.NextQLOps).forEach((OP) => {\n            if (OP.key === attributes.next.key) nextOP = OP;\n         });\n\n         if (nextOP) {\n            // exact match, so add next:\n            const qlOP = new nextOP(attributes.next, this, this.task, this.AB);\n\n            this.next = qlOP;\n         }\n      }\n   }\n\n   /**\n    * @method objectLookup()\n    * return a matching {ABObject} that is represented by the given id.\n    * NOTE: we will try to match on: our initial .objectID first, then\n    * the given objID.\n    * NOTE: this will match an object.id as well as object.label\n    * @param {string} objID\n    */\n   objectLookup(objID) {\n      return this.AB.objects((o) => {\n         const quotedLabel = `\"${o.label}\"`;\n\n         return (\n            // o.id === this.objectID ||\n            o.id === objID || quotedLabel.indexOf(objID) === 0\n         );\n      })[0];\n   }\n\n   /**\n    * @method availableProcessDataFieldsHash()\n    * return a { \"field.key\" => {processFieldDef} } hash of the currently\n    * available fields in the process.\n    * @return {obj}\n    */\n   availableProcessDataFieldsHash() {\n      const availableProcessDataFields =\n         this.task.process.processDataFields(this.task) ?? [];\n      const hashFieldIDs = {};\n\n      availableProcessDataFields.forEach((f) => {\n         if (f.field) {\n            hashFieldIDs[f.field.id] = f;\n         } else {\n            hashFieldIDs[f.key] = f;\n         }\n      });\n\n      return hashFieldIDs;\n   }\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {}\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABQL instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const obj = {\n         key: this.constructor.key,\n         // entryComplete: this.entryComplete,\n         params: this.params,\n         // currQuery: this.currQuery,\n         // queryValid: this.queryValid,\n         objectID: this.object?.id ?? null,\n      };\n\n      if (this.next) {\n         obj.next = this.next.toObj();\n      }\n\n      return obj;\n   }\n}\n\nmodule.exports = ABQLCore;\n","/*\n * ABQLFindCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst NextQLOps = require(\"./ABQLSet.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLFind task is complete.  In this case the {ABQLSet} operations come\n// next.  {ABQLSet} operations work on a Set|{Array} or data results.\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectConditions\",\n      name: \"cond\",\n   },\n];\n\nclass ABQLFindCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLFindCore.key = \"find\";\nABQLFindCore.label = \"find\";\nABQLFindCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLFindCore;\n","/*\n * ABQLManagerCore\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst QLObject = require(\"../../platform/ql/ABQLRootObject.js\");\nconst QLOps = [QLObject];\n\nconst ABQLManagerCore = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current ABFactory we are operating under.\n    * @return {ABQL} | null\n    */\n   fromAttributes: function (attributes, task, AB) {\n      if (!attributes) return null;\n\n      const matchingOPs = [];\n\n      ABQLManagerCore.QLOps.forEach((Op) => {\n         if (Op.key === attributes.key) matchingOPs.push(Op);\n      });\n\n      if (matchingOPs.length === 1) {\n         // let this Operation initialize and return the last OP\n         // in the chain\n         const qlOP = new matchingOPs[0](attributes, task, AB);\n\n         return qlOP;\n      } else return null;\n   },\n\n   /**\n    * @array QLOps\n    * An array of the root QL Operations.\n    */\n   QLOps: QLOps,\n};\nmodule.exports = ABQLManagerCore;\n","/*\n * ABQLRootObjectCore\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\n// Define the Operations that can be performed off of a RootObject.\n// Each Root Object might have a different set of Operations, so we\n// define them here.\nconst QLFind = require(\"../../platform/ql/ABQLFind.js\");\nconst NextQLOps = [QLFind];\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectName\",\n      name: \"name\",\n   },\n];\n\nclass ABQLObjectCore extends ABQL {\n   constructor(attributes, task, AB) {\n      // NOTE: keep this so we can insert the prevOp == null\n      super(attributes, ParameterDefinitions, null, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {\n      if (!this.object && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) {\n            this.objectID = this.params[objNameDef.name];\n            this.object = this.objectLookup(this.objectID);\n         }\n\n         if (!this.object) {\n            this.warningMessage(\"has no object set.\", {\n               objectID: this.objectID,\n            });\n         }\n      }\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      // if we don't have an objectID, but we have an objectName parameter\n      // definition then save that as our objectID\n      if (!obj.objectID && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) obj.objectID = this.params[objNameDef.name];\n      }\n\n      return obj;\n   }\n}\n\nABQLObjectCore.key = \"object\";\nABQLObjectCore.label = \"object\";\nABQLObjectCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLObjectCore;\n","/*\n * ABQLRow\n *\n * Defines all the QL operations that can be performed on a Row of data. This is a\n * Single row/instance of an object.\n *\n */\n\nconst QLUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst QLSave = require(\"../../platform/ql/ABQLRowSave\");\nconst QLPluck = require(\"../../platform/ql/ABQLRowPluck\");\n\nmodule.exports = [QLUpdate, QLSave, QLPluck];\n","/*\n/*\n * ABQLRowPluckCore\n *\n * An ABQLRowPluckCore can process a value of data and puck out a specified\n * field to then make an object of values that only contain that field.\n *\n */\n\n// const ABQLValue = require(\"./ABQLValue.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\nconst ABQLSetPluck = require(\"../../platform/ql/ABQLSetPluck.js\");\nconst ABQLRowUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst ABQLRowSave = require(\"../../platform/ql/ABQLRowSave.js\");\n\nclass ABQLRowPluckCore extends ABQLSetPluck {\n   // Dynamic NextQLOps\n   get NextQLOps() {\n      let nextQLOps = [];\n\n      const field = this.field ?? this.object.fieldByID(this.fieldID) ?? null;\n\n      // Update .NextQLOps WARN: update to static it affects to every ABQLRowPluck instances.\n      switch (field?.key) {\n         // M:1 M:N connect field, then set ABQLSet to next steps\n         case \"connectObject\":\n            if (field.settings.linkType === \"many\") {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // return ABQLRow.js\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         case \"user\":\n            // TODO set this up corectlys\n            if (\n               field.settings.linkType === \"many\" ||\n               field.settings.isMultiple // may be unnessicary\n            ) {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // default\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key ||\n                  NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n\n         default:\n            // Normal field and _PK\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) => NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n      }\n\n      return nextQLOps;\n   }\n}\n\nABQLRowPluckCore.key = \"row_pluck\";\nABQLRowPluckCore.label = \"Read the value from the field\";\nABQLRowPluckCore.NextQLOps = []; // Static NextQLOps\n\nmodule.exports = ABQLRowPluckCore;\n","/*\n/*\n * ABQLRowSaveCore\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSave = require(\"../../platform/ql/ABQLSetSave.js\");\n\nclass ABQLRowSaveCore extends ABQLSetSave {}\n\nABQLRowSaveCore.key = \"row_save\";\nABQLRowSaveCore.label = \"Save the value as\";\nABQLRowSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLRowSaveCore;\n","/*\n * ABQLRowUpdateCore\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLRow = require(\"./ABQLRow.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectValues\",\n      name: \"values\",\n   },\n];\n\nclass ABQLRowUpdateCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLRowUpdateCore.key = \"update\";\nABQLRowUpdateCore.label = \"Update this record\";\nABQLRowUpdateCore.NextQLOps = [];\n// NOTE: .NextQLOps => see the #Hack in the constructor\n\nmodule.exports = ABQLRowUpdateCore;\n","/*\n * ABQLSet\n *\n * Here we define the group of operations that can be performed on a SET of data.\n * A SET is an array of objects/row data.\n *\n */\n\nmodule.exports = [\n   require(\"../../platform/ql/ABQLSetFirst.js\"),\n   require(\"../../platform/ql/ABQLSetPluck.js\"),\n   require(\"../../platform/ql/ABQLSetSave.js\"),\n];\n","/*\n/*\n * ABQLSetFirstCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst ABQLRow = require(\"./ABQLRow.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLSetFirst task is complete.  In this case the {ABQLRow} operations come\n// next.  {ABQLRow} operations work on a single row of data.\n\nclass ABQLSetFirstCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, [], prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLSetFirstCore.key = \"first\";\nABQLSetFirstCore.label = \"Select the first record\";\nABQLSetFirstCore.NextQLOps = ABQLRow;\n\nmodule.exports = ABQLSetFirstCore;\n","/*\n/*\n * ABQLSetPluckCore\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field to then make an array of values that only contain that field.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectFields\",\n      name: \"fieldID\",\n   },\n];\n\nclass ABQLSetPluckCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      // we need to gather our .field and .objectOut before we\n      // allow our base class to continue forward:\n\n      this.fieldID = attributes.fieldID;\n      this.field = this.object?.fieldByID(this.fieldID);\n\n      //// TODO: figure out how to dynamically update the next row of options\n      //// based upon the current choice of field.\n      // // based upon the type of field, we now configure what next steps\n      // // are available.\n      // if (this.field) {\n      //    // if connected, then we can stay with same .NextQLOps\n      //    // so we can just leave what we did above.\n\n      //    // if a discreet value, then we need to remove SetPluck\n      //    if (!this.field.isConnection) {\n      //       this.constructor.NextQLOps = [\n      //          ...this.prevOP.constructor.NextQLOps,\n      //       ].filter((o) => o.key != this.constructor.key);\n      //    }\n      // }\n\n      if (attributes.objectOutID)\n         this.objectOut = this.objectLookup(attributes.objectOutID);\n\n      super.fromAttributes(attributes);\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.fieldID) {\n         obj.fieldID = this.fieldID;\n\n         if (this.objectOut) obj.objectOutID = this.objectOut.id;\n      } else {\n         obj.fieldID = this.params.field || null;\n\n         const field = this.object.fieldByID(obj.fieldID);\n\n         if (field?.isConnection) obj.objectOutID = field.datasourceLink.id;\n      }\n\n      return obj;\n   }\n}\n\nABQLSetPluckCore.key = \"set_pluck\";\nABQLSetPluckCore.label = \"Read the value from the field\";\nABQLSetPluckCore.NextQLOps = [];\n\nmodule.exports = ABQLSetPluckCore;\n","/*\n/*\n * ABQLSetSaveCore\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"taskParam\",\n      name: \"task_param\",\n   },\n];\n\nclass ABQLSetSaveCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // TODO: register with the task that we can provide data.\n      if (this.taskParam) {\n         task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      super.fromAttributes(attributes);\n\n      this.taskParam = attributes.taskParam || this.params.task_param;\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      obj.taskParam = this.taskParam || this.params.task_param;\n\n      return obj;\n   }\n\n   processDataField(id, label) {\n      // we have to report back on:\n      // key:  id.taskParam\n      // label: label->taskParam\n      // object: ABObject\n      // field: ABField\n      // set : {bool}\n\n      let field = null;\n      // {ABField}\n      // if the value being stored is NOT a connectObject, then it is\n      // a particular field in the previous object.\n\n      // if we are saving a specific field of an Object, pass that\n      // ABField along:\n      if (this.prevOP?.field?.key !== \"connectObject\")\n         field = this?.prevOP?.field;\n\n      return {\n         key: `${id}.${this.taskParam || this.params.task_param}`,\n         label: `${label}->${this.taskParam || this.params.task_param}`,\n         field: field,\n         object: this.object,\n         set: true,\n      };\n   }\n}\n\nABQLSetSaveCore.key = \"set_save\";\nABQLSetSaveCore.label = \"Save the value as\";\nABQLSetSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLSetSaveCore;\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCSVExporterDefaults = {\n   key: \"csvExporter\", // unique key identifier for this ABViewForm\n   icon: \"download\", // icon reference: (without 'fa-' )\n   labelKey: \"CSV Exporter\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewCSVExporterPropertyComponentDefaults = {\n   dataviewID: null,\n   where: null,\n   buttonLabel: \"Export CSV\",\n   filename: \"exportCSV\",\n   hasHeader: true,\n   width: 150,\n};\n\nmodule.exports = class ABViewCSVExporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVExporterDefaults\n      );\n   }\n\n   static common() {\n      return ABViewCSVExporterDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCSVExporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert to boolean\n      if (typeof values.settings.hasHeader == \"string\")\n         this.settings.hasHeader = JSON.parse(values.settings.hasHeader);\n\n      if (this.settings.hasHeader == null)\n         this.settings.hasHeader =\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader;\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         values.settings.width ||\n            ABViewCSVExporterPropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n\nconst ABViewCSVImporterDefaults = {\n   key: \"csvImporter\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"upload\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"CSV Importer\",\n   // {string}\n   // the multilingual label key for the class label\n   // NOTE: will be used as L(labelKey)\n};\n\nconst ABViewCSVImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   availableFieldIds: [],\n   //{array}\n   // A list of ABField.ids that are allowed to be imported using this widget.\n\n   buttonLabel: \"Upload CSV\",\n   // {string}\n   // The Label(key) to display on the initial button\n\n   width: 0,\n   // {integer}\n   // Width of the Popup.\n\n   recordRules: [],\n   // {array}  [ {RecordRule}, ... ]\n   // A list of ABViewRuleListFormRecordRules that should be performed upon\n   // each row of data imported.\n   // The Array should look like:\n   // [{\n   //    action: {string},\n   //    when: [\n   //       {\n   //          fieldId: {UUID},\n   //          comparer: {string},\n   //          value: {string}\n   //       }\n   //    ],\n   //    values: [\n   //       {\n   //          fieldId: {UUID},\n   //          value: {object}\n   //       }\n   //    ]\n   // }]\n};\n\nmodule.exports = class ABViewCSVImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVImporterDefaults\n      );\n   }\n\n   /**\n    * @method common()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * @return {json}\n    */\n   static common() {\n      return ABViewCSVImporterDefaults;\n   }\n\n   /**\n    * @method defaultValues()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * Component that is displayed on the UI.\n    * @return {json}\n    */\n   static defaultValues() {\n      return ABViewCSVImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewCSVImporterPropertyComponentDefaults.width\n      );\n   }\n\n   get RecordRule() {\n      let object = this.datacollection?.datasource;\n      if (!object) return;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      rowDatas.forEach((row) => {\n         this.RecordRule?.processPre({ data: row.data || row, form: this });\n      });\n   }\n\n   doRecordRules(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      if (!this.RecordRule) return Promise.resolve();\n\n      let tasks = [];\n\n      rowDatas.forEach((row) => {\n         tasks.push(\n            this.RecordRule.process({ data: row.data || row, form: this })\n         );\n      });\n\n      return Promise.all(tasks);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCarouselPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n\n   width: 460,\n   height: 275,\n   showLabel: true,\n   hideItem: false,\n   hideButton: false,\n   navigationType: \"corner\", // \"corner\" || \"side\"\n   filterByCursor: false,\n\n   detailsPage: null, // uuid\n   detailsTab: null, // uuid\n   editPage: null, // uuid\n   editTab: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"carousel\", // {string} unique key for this view\n   icon: \"clone\", // {string} fa-[icon] reference for this view\n   labelKey: \"Carousel\", // {string} the multilingual label key for the class label\n};\n\nfunction parseIntOrDefault(_this, key) {\n   if (typeof _this.settings[key] != \"undefined\") {\n      _this.settings[key] = parseInt(_this.settings[key]);\n   } else {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nfunction parseOrDefault(_this, key) {\n   try {\n      _this.settings[key] = JSON.parse(_this.settings[key]);\n   } catch (e) {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nmodule.exports = class ABViewCarouselCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCarouselPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      parseIntOrDefault(this, \"width\");\n      parseIntOrDefault(this, \"height\");\n\n      // json\n      parseOrDefault(this, \"showLabel\");\n      parseOrDefault(this, \"hideItem\");\n      parseOrDefault(this, \"hideButton\");\n\n      this.settings.navigationType =\n         this.settings.navigationType ||\n         ABViewCarouselPropertyComponentDefaults.navigationType;\n\n      parseOrDefault(this, \"filterByCursor\");\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   get imageField() {\n      let dc = this.datacollection;\n      if (!dc) return null;\n\n      let obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.field);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartAreaPropertyComponentDefaults = {\n   areaType: \"area\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"area\", // {string} unique key for this view\n   icon: \"area-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Area\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartAreaCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartAreaPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.areaType =\n         this.settings.areaType ||\n         ABViewChartAreaPropertyComponentDefaults.areaType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartAreaPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartAreaPropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartAreaPropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartAreaPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartAreaPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartAreaPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"areaLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartBarPropertyComponentDefaults = {\n   barType: \"bar\",\n   barPreset: \"column\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"bar\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Bar\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartBarCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartBarPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.barType =\n         this.settings.barType ||\n         ABViewChartBarPropertyComponentDefaults.barType;\n\n      this.settings.barPreset =\n         this.settings.barPreset ||\n         ABViewChartBarPropertyComponentDefaults.barPreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartBarPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartBarPropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartBarPropertyComponentDefaults.height\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartBarPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartBarPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartBarPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"barLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewChartPropertyComponentDefaults = {\n   dataviewID: \"\",\n   columnValue: \"\",\n   columnLabel: \"\",\n   columnValue2: \"\",\n   isPercentage: 1,\n   showLabel: 1,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   multipleSeries: 0,\n};\n\nconst ABViewChartDefaults = {\n   key: \"chart\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Chart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewChartDefaults);\n   }\n\n   static common() {\n      return ABViewChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewChartPropertyComponentDefaults.dataviewID;\n\n      this.settings.columnValue =\n         this.settings.columnValue ??\n         ABViewChartPropertyComponentDefaults.columnValue;\n\n      this.settings.columnLabel =\n         this.settings.columnLabel ??\n         ABViewChartPropertyComponentDefaults.columnLabel;\n\n      this.settings.columnValue2 =\n         this.settings.columnValue2 ??\n         ABViewChartPropertyComponentDefaults.columnValue2;\n\n      this.settings.isPercentage = parseInt(\n         this.settings.isPercentage ??\n            ABViewChartPropertyComponentDefaults.isPercentage\n      );\n\n      this.settings.showLabel = parseInt(\n         this.settings.showLabel ??\n            ABViewChartPropertyComponentDefaults.showLabel\n      );\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewChartPropertyComponentDefaults.labelPosition;\n\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ??\n            ABViewChartPropertyComponentDefaults.labelWidth\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPropertyComponentDefaults.height\n      );\n\n      this.settings.multipleSeries = parseInt(\n         this.settings.multipleSeries ??\n            ABViewChartPropertyComponentDefaults.multipleSeries\n      );\n\n      this.translate(this, this, [\"chartLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      const viewsToAllow = [\"label\", \"pie\", \"bar\", \"line\", \"area\"];\n      return this.application.viewAll((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   labelField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnLabel);\n   }\n\n   valueField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue);\n   }\n\n   valueField2() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue2);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartLinePropertyComponentDefaults = {\n   lineType: \"line\",\n   linePreset: \"plot\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"line\", // {string} unique key for this view\n   icon: \"line-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Line\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartLineCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartLinePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.lineType =\n         this.settings.lineType ||\n         ABViewChartLinePropertyComponentDefaults.lineType;\n\n      this.settings.linePreset =\n         this.settings.linePreset ||\n         ABViewChartLinePropertyComponentDefaults.linePreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartLinePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartLinePropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartLinePropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartLinePropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartLinePropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartLinePropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"lineLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartPiePropertyComponentDefaults = {\n   pieType: \"pie\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   innerFontSize: 12,\n   labelFontSize: 12,\n};\n\nconst ABViewDefaults = {\n   key: \"pie\", // {string} unique key for this view\n   icon: \"pie-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pie\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartPieCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPiePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.pieType =\n         this.settings.pieType ||\n         ABViewChartPiePropertyComponentDefaults.pieType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartPiePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartPiePropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPiePropertyComponentDefaults.height\n      );\n\n      this.settings.innerFontSize = parseInt(\n         this.settings.innerFontSize ??\n            ABViewChartPiePropertyComponentDefaults.innerFontSize\n      );\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartPiePropertyComponentDefaults.labelFontSize\n      );\n\n      this.translate(this, this, [\"pieLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCommentPropertyComponentDefaults = {\n   dataviewID: null,\n   columnUser: null,\n   columnComment: null,\n   columnDate: null,\n   height: 300,\n   label: \"\", // label is required and you can add more if the component needs them\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n};\n\nconst ABViewDefaults = {\n   key: \"comment\", // {string} unique key for this view\n   icon: \"comments\", // {string} fa-[icon] reference for this view\n   labelKey: \"Comment\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCommentCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCommentPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      // this.settings.format = parseInt(this.settings.format);\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.height = parseInt(this.settings.height || 0);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   getCurrentUserId() {\n      const userObject = this.getUsers();\n      const currentUser = this.AB.Account.username();\n      //Anonymous User = 0\n\n      if (!userObject) return;\n\n      return userObject.findIndex((e) => e.value === currentUser) + 1;\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((e) => {\n         return {\n            id: e.username,\n            value: e.username,\n            image: e.image_id,\n         };\n      });\n   }\n\n   getUserField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnUser);\n   }\n\n   getCommentField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnComment);\n   }\n\n   getDateField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnDate);\n   }\n\n   getUserData() {\n      let UserImageField = this.AB.objectUser().fieldByID(\n         \"6383ce19-b344-44ee-87e6-decced7361f8\"\n      );\n\n      var userObject = this.getUsers();\n      var userList = [];\n\n      if (!userObject) return;\n\n      userObject.forEach((item, index) => {\n         var imageURL = \"\";\n         if (item.image) {\n            imageURL = UserImageField.urlImage(item.image);\n         }\n         var user = { id: index + 1, value: item.value, image: imageURL };\n         userList.push(user);\n      });\n      return userList;\n   }\n\n   model() {\n      let dv = this.datacollection;\n      if (!dv) return null; // TODO: refactor in v2\n\n      // get ABModel\n      let model = dv.model; // already notified\n      if (!model) return null;\n\n      return model;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewPropertyDefaults = {\n   dataviewID: null,\n   filterConditions: {},\n};\n\nconst ABViewDefaults = {\n   key: \"conditionalcontainer\", // unique key identifier for this ABView\n   icon: \"shield\", // icon reference: (without 'fa-' )\n   labelKey: \"Conditional Container\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConditionalContainerCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      const L = (...params) => this.AB.Multilingual.label(...params);\n\n      // the conditional container always has 'If' and 'Else' panels\n      if (this.views((v) => v instanceof ABViewContainer).length < 2) {\n         this._views = [];\n\n         // 'If' panel\n         const ifPanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"If\"),\n               name: \"If\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(ifPanel);\n\n         // 'Else' panel\n         const elsePanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"Else\"),\n               name: \"Else\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(elsePanel);\n      }\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * For a Conditional Container, we don't allow any other items to be placed on it.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewConnectDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"connect-data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connected Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConnectDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewConnectDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","/*\n * ABViewContainerCore\n *\n * An ABViewContainerCore defines a UI display component.\n *\n * A container might have multiple columns of display info.\n *\n */\n\nconst ABView = require(\"../../platform/views/ABView\");\n\n// function L(key, altText) {\n// \treturn AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"viewcontainer\", // {string} unique key for this view\n   icon: \"braille\", // {string} fa-[icon] reference for this view\n   labelKey: \"Container\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columns: 1,\n   gravity: 1,\n   movable: true,\n   removable: true,\n};\n\nmodule.exports = class ABViewContainerCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columns = parseInt(\n         this.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      if (typeof this.settings.gravity != \"undefined\") {\n         this.settings.gravity.map(function (gravity) {\n            return parseInt(gravity);\n         });\n      }\n\n      if (this.settings.removable != null) {\n         this.settings.removable = JSON.parse(this.settings.removable); // convert to boolean\n      } else {\n         this.settings.removable = ABPropertyComponentDefaults.removable;\n      }\n\n      if (this.settings.movable != null) {\n         this.settings.movable = JSON.parse(this.settings.movable); // convert to boolean\n      } else {\n         this.settings.movable = ABPropertyComponentDefaults.movable;\n      }\n   }\n\n   viewsSortByPosition() {\n      // Sort views from y, x positions\n      return this.views().sort((a, b) => {\n         if (a.position.y == b.position.y) return a.position.x - b.position.x;\n         else return a.position.y - b.position.y;\n      });\n   }\n\n   // saveReorder() {\n   //    return this.application.viewReorder(this);\n   // }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABViewDefaults = {\n   key: \"view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // // NOTE: ensure we have a uuid() set:\n      // if (!this.id) {\n      //    this.id = this.application.uuid();\n      // }\n\n      // this.application.unTranslate(this, this, [\"label\"]);\n\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || \"view\",\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || \"view\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label = this.parent.label + \".\" + this.defaults.key;\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      // convert from \"0\" => 0\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      var accessibleRoles = Object.keys(this.accessLevels) || [];\n      (roles || []).forEach((r) => {\n         if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n            foundRole = true;\n         }\n      });\n\n      return foundRole;\n   }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   getUserAccess() {\n      // by default everyone has no access\n      var accessLevel = 0;\n\n      if (this.application.isAccessManaged) {\n         // check to see if the current users is the access manager\n         var isAccessManager = false;\n         // first check if manager is defined by their role\n         if (parseInt(this.application.accessManagers.useRole) == 1) {\n            // if so check if any of the user's role match the managers\n            this.AB.Account.roles().forEach((role) => {\n               if (\n                  this.application.accessManagers.role.indexOf(\n                     role.id || role.uuid\n                  ) > -1\n               ) {\n                  // if so set the access level to full access\n                  isAccessManager = true;\n                  accessLevel = 2;\n               }\n            });\n         }\n         // if the user isn't already set as the manager and the manager is defined by their account\n         if (\n            !isAccessManager &&\n            parseInt(this.application.accessManagers.useAccount) == 1\n         ) {\n            // check if the user's account matches the managers\n            if (\n               this.application.accessManagers.account.indexOf(\n                  this.AB.Account.uuid() + \"\"\n               ) > -1\n            ) {\n               // if so set the access level to full access\n               isAccessManager = true;\n               accessLevel = 2;\n            }\n         }\n\n         // if the user is not the manager check if the page has access levels defined for roles\n         if (\n            this.accessLevels &&\n            Object.keys(this.accessLevels).length > 0 &&\n            !isAccessManager\n         ) {\n            // check to see if the user's roles matches one of the roles defined\n            this.AB.Account.roles().forEach((role) => {\n               var currentRole = this.accessLevels[role.id || role.uuid];\n               if (currentRole && parseInt(currentRole) > accessLevel)\n                  // if the access level is higher than a previous role set to the new level\n                  accessLevel = parseInt(currentRole);\n            });\n         }\n      } else {\n         accessLevel = 2;\n      }\n\n      return accessLevel;\n   }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlView() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   /**\n    * @method urlView\n    * return a string pointer to this object's views.\n    * @return {string}\n    */\n   urlView() {\n      return this.urlPointer() + \"/_views/\";\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\"form\", \"grid\", \"line\", \"area\", \"bar\", \"gantt\", \"kanban\"].indexOf(\n               this.key\n            ) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\"button\", \"label\", \"page\", \"tab\", \"viewcontainer\"].indexOf(\n                  this.key\n               ) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `View[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   updateAccessLevels(roleId, accessLevel) {\n      if (parseInt(accessLevel) == 0) {\n         if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n      } else {\n         this.accessLevels[roleId] = accessLevel;\n      }\n\n      return this.save(false, false);\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         result = result.concat(this._views.filter(filter));\n\n         this._views.forEach((v) => {\n            var subViews = v.views(filter, deep);\n            if (subViews && subViews.length > 0) {\n               result = result.concat(subViews);\n            }\n         });\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewNew()\n    *\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewDestroy(view) {\n      console.error(\"DEPRECIATED: where is this called?\");\n      return this.viewRemove(view);\n   }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid,\n   viewType: \"advanced\",\n   showFilter: 1,\n   showSort: 1,\n};\n\nconst ABViewDefaults = {\n   key: \"data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetail = require(\"../../platform/views/ABViewDetail\");\n\nconst ABViewDataviewPropertyComponentDefaults = {\n   xCount: 1, // {int} the number of columns per row (need at least one)\n   detailsPage: \"\",\n   detailsTab: \"\",\n   editPage: \"\",\n   editTab: \"\",\n};\n\nconst ABViewDataviewDefaults = {\n   key: \"dataview\", // {string} unique key for this view\n   icon: \"th\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data view\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataviewCore extends ABViewDetail {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewDataviewDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDataviewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataviewPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.xCount = parseInt(\n         this.settings.xCount || ABViewDataviewPropertyComponentDefaults.xCount\n      );\n      this.settings.detailsPage =\n         this.settings.detailsPage ||\n         ABViewDataviewPropertyComponentDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ||\n         ABViewDataviewPropertyComponentDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ||\n         ABViewDataviewPropertyComponentDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ||\n         ABViewDataviewPropertyComponentDefaults.editTab;\n   }\n\n   parentDetailComponent() {\n      let dataview = null;\n\n      let curr = this;\n      while (curr.key != \"dataview\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"dataview\") {\n         dataview = curr;\n      }\n\n      return dataview;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCheckboxPropertyComponentDefaults = {};\n\nconst ABViewDetailCheckboxDefaults = {\n   key: \"detailcheckbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCheckboxCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCheckboxPropertyComponentDefaults;\n   }\n};\n","// const ABViewDetailSelectivity = require(\"../../platform/views/ABViewDetailSelectivity\");\nconst ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n};\n\nconst ABViewDefaults = {\n   key: \"detailconnect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailConnectCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewDetailDefaults = {\n   key: \"detail\", // {string} unique key for this view\n   icon: \"file-text-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Detail\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewDetailPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 0,\n};\n\nmodule.exports = class ABViewDetailCore extends ABViewContainer {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDetailDefaults);\n   }\n\n   static common() {\n      return ABViewDetailDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewDetailPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewDetailPropertyComponentDefaults.showLabel\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ||\n            ABViewDetailPropertyComponentDefaults.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewDetailPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      let viewsToAllow = [\"label\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   addFieldToDetail(field, yPosition) {\n      if (field == null) return;\n\n      let newView = field.detailComponent().newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings ?? {};\n      newView.settings.fieldId = field.id;\n      newView.settings.labelWidth =\n         this.settings.labelWidth ||\n         ABViewDetailPropertyComponentDefaults.labelWidth;\n\n      // keep alias to support Query that contains alias name\n      // [alias].[columnName]\n      newView.settings.alias = field.alias;\n\n      // TODO : Default settings\n\n      newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCustomPropertyComponentDefaults = {};\n\nconst ABViewDetailCustomDefaults = {\n   key: \"detailcustom\", // {string} unique key for this view\n   icon: \"dot-circle-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCustomCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCustomPropertyComponentDefaults;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailImagePropertyComponentDefaults = {\n   height: 80,\n   width: 120,\n};\n\nconst ABViewDetailImageDefaults = {\n   key: \"detailimage\", // {string} unique key for this view\n   icon: \"image\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailImageCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailImageDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailImageDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailImagePropertyComponentDefaults.height\n      );\n      this.settings.width = parseInt(\n         this.settings.width ?? ABViewDetailImagePropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nmodule.exports = class ABViewDetailItemCore extends ABViewWidget {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   detailComponent() {\n      let detailView = null;\n\n      let curr = this;\n      while (\n         !curr.isRoot() &&\n         curr.parent &&\n         curr.key != \"detail\" &&\n         curr.key != \"dataview\"\n      ) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\" || curr.key == \"dataview\") {\n         detailView = curr;\n      }\n\n      return detailView;\n   }\n\n   field() {\n      let detailComponent = this.detailComponent();\n      if (detailComponent == null) return null;\n\n      let datacollection = detailComponent.datacollection;\n      if (datacollection == null) return null;\n\n      let object = datacollection.datasource;\n      if (object == null) return null;\n\n      let field = object.fields((v) => v.id == this.settings.fieldId)[0];\n\n      // set .alias to support queries that contains alias name\n      // [aliasName].[columnName]\n      if (field && this.settings.alias) {\n         field.alias = this.settings.alias;\n      }\n\n      return field;\n   }\n\n   getCurrentData() {\n      let detailCom = this.detailComponent();\n      if (!detailCom) return null;\n\n      let dv = detailCom.datacollection;\n      if (!dv) return null;\n\n      let field = this.field();\n      if (!field) return null;\n\n      let currData = dv.getCursor();\n      if (currData) return currData[field.columnName];\n      else return null;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailTextPropertyComponentDefaults = {\n   height: 0,\n};\n\nconst ABViewDetailTextDefaults = {\n   key: \"detailtext\", // {string} unique key for this view\n   icon: \"etsy\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.text\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTextDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTextDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailTextPropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {};\n\nconst ABViewDetailTreeDefaults = {\n   key: \"detailtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTreeDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = {\n   buttonlabel: \"Download DOCX\",\n   dataviewID: null,\n   width: 0,\n   filename: \"\", // uuid\n   filelabel: \"output.docx\",\n   language: \"en\", // en\n   toolbarBackground: \"ab-background-default\",\n   buttonPosition: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"docxBuilder\", // {string} unique key for this view\n   icon: \"file-word-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"DOCX Builder\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDocxBuilderCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDocxBuilderPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"filelabel\", \"buttonlabel\"]);\n\n      let obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewDocxBuilderPropertyComponentDefaults.width\n      );\n\n      this.translate(this, this, [\"filelabel\", \"buttonlabel\"]);\n   }\n\n   uploadUrl() {\n      // TODO: Convert this to use ABFactory.urlFileUpload() or a ABFieldFile\n      // to get the URL:\n\n      const object = this.datacollection.datasource;\n\n      // NOTE: file-upload API needs to have the id of ANY field.\n      const field = object ? object.fields()[0] : null;\n\n      return `/file/upload/${object?.id}/${field?.id}/1`;\n   }\n\n   downloadUrl() {\n      return `/file/${this.settings.filename}`;\n   }\n\n   get languageCode() {\n      return (\n         this.settings.language ||\n         ABViewDocxBuilderPropertyComponentDefaults.language\n      );\n   }\n\n   get datacollections() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) return [];\n\n      let dvList = dataviewID.split(\",\") || [];\n\n      return this.AB.datacollections((dv) => dvList.indexOf(dv.id) > -1) || [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"ab.components.button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormButtonCore extends ABView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      this.settings.includeSave = JSON.parse(\n         this.settings.includeSave ||\n            ABViewFormButtonPropertyComponentDefaults.includeSave\n      );\n      this.settings.includeCancel = JSON.parse(\n         this.settings.includeCancel ||\n            ABViewFormButtonPropertyComponentDefaults.includeCancel\n      );\n      this.settings.includeReset = JSON.parse(\n         this.settings.includeReset ||\n            ABViewFormButtonPropertyComponentDefaults.includeReset\n      );\n\n      this.settings.isDefault = JSON.parse(\n         this.settings.isDefault ||\n            ABViewFormButtonPropertyComponentDefaults.isDefault\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABViewFormCheckboxDefaults = {\n   key: \"checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCheckboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCheckboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   // objectWorkspace: {\n   //    filterConditions: {\n   //       // array of filters to apply to the data table\n   //       glue: \"and\",\n   //       rules: [],\n   //    },\n   // },\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABViewFormConnectDefaults = {\n   key: \"connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormConnectCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"form\", // unique key identifier for this ABViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABViewFormCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"label\", \"layout\", \"button\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    *\n    * return an array of all the ABViewFormField children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViewFormField that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) => comp instanceof ABViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      var fieldComponent = field.formComponent();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCustom extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABViewFormDatepickerDefaults = {\n   key: \"datepicker\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormDatepickerCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABViewFormComponentCore extends ABView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormJsonPropertyComponentDefaults = {\n   type: \"string\", // 'string', 'systemObject' or 'filter'\n};\n\nconst ABViewFormJsonDefaults = {\n   key: \"json\", // {string} unique key for this view\n   icon: \"brackets-curly\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.json\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormJsonCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormJsonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormJsonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormJsonPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABViewFormNumberDefaults = {\n   key: \"numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormNumberCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABViewFormReadonlyDefaults = {\n   key: \"fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormReadonlyPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"multicombo\", // 'richselect' or 'radio'\n};\n\nconst ABSelectMultipleDefaults = {\n   key: \"selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectMultipleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectMultiplePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABSelectSingleDefaults = {\n   key: \"selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectSingleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectSinglePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTextboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormTreePropertyComponentDefaults = {};\n\nconst ABTreeDefaults = {\n   key: \"formtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTreeCore extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABTreeDefaults);\n   }\n\n   static common() {\n      return ABTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTreePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGanttPropertyComponentDefaults = {\n   dataviewID: \"\",\n   // {string}\n   // {ABDatacollection.id} of the datacollection that contains the data for\n   // the Gantt chart.\n\n   titleFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n\n   startDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the start date\n\n   endDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the end date\n\n   durationFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that contains the duration\n\n   progressFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that marks the progress\n\n   notesFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n};\n\nconst ABViewDefaults = {\n   key: \"gantt\", // {string} unique key for this view\n   icon: \"tasks\", // {string} fa-[icon] reference for this view\n   labelKey: \"Gantt\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewGanttCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGanttPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      Object.keys(ABViewGanttPropertyComponentDefaults).forEach((k) => {\n         this.settings[k] =\n            this.settings[k] || ABViewGanttPropertyComponentDefaults[k];\n      });\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGridPropertyComponentDefaults = {\n   label: \"\",\n   // {string}\n   // label is required and you can add more if the component needs them\n\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n   dataviewID: \"\",\n   // {uuid}\n   // uuid of ABDataCollection that drives the data for our Grid\n\n   padding: 17,\n   // {int}\n   // the default padding surrounding the component\n\n   showToolbar: 1,\n   // {bool}\n   // do we show our toolbar?\n\n   isEditable: 0,\n   // {bool}\n   // do we allow editing in the grid?\n\n   massUpdate: 0,\n   // {bool}\n   // do we allow the Mass Update capability? (row checkboxes and the\n   // MassUpdate popup)\n\n   allowDelete: 0,\n   // {bool}\n   // do we allow deleting multiple rows at a time? Mass Delete.\n\n   // isFilterable:0,\n\n   isSortable: 1,\n   // {bool}\n   // do we allow the sort options.\n\n   isExportable: 0,\n   // {bool}\n   // do we enable the webix export from grid capabilities?\n\n   // linkedObject:'',\n   // linkedField:'',\n   // linkedPage:'',\n   // linkedPageView:'',\n   // linkedEditPage:'',\n   // linkedEditPageForm:'',\n\n   detailsPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the details component.\n\n   detailsTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the details component.\n   // NOTE: if your details is embedded on a TAB, we need both the\n   // .detailsPage & .detailsTab to successfully show the item.\n\n   editPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the edit component.\n\n   editTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the edit component.\n   // NOTE: if your editor is embedded on a TAB, we need both the\n   // .editPage & .editTab to successfully show the form.\n\n   trackView: 0,\n   // {bool}\n   // Do we offer the ability to track changes to this object/row?\n\n   frozenColumnID: \"\",\n   // {ABField.id}\n   // id of column you want to stop freezing the left hand side at.\n\n   hiddenFields: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add hidden:true to\n\n   summaryColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the SUM footer to\n\n   countColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the Count footer to\n\n   // TODO: get rid of objectWorkspace!\n   objectWorkspace: {\n      // sortFields:[], // array of columns with their sort configurations\n      // filterConditions:[], // array of filters to apply to the data table\n      frozenColumnID: \"\", // id of column you want to stop freezing\n      hiddenFields: [], // array of [ids] to add hidden:true to\n      summaryColumns: [],\n      countColumns: [],\n   },\n   gridFilter: {\n      filterOption: 1,\n      userFilterPosition: \"toolbar\",\n      isGlobalToolbar: 1,\n   },\n   // summaryFields: [], // array of [field ids] to add the summary column in footer\n   // countFields: [], // array of [field ids] to add the summary column in footer\n\n   height: 0,\n   // {int}\n   // The Height of our Grid.\n   // See ../views/ABViewDataview.js\n\n   hideHeader: 0,\n   labelAsField: 0,\n   hideButtons: 0,\n   groupBy: \"\", // id of field\n\n   // TODO: add to ABDesigner.interface design:\n   columnConfig: [],\n   // {array} [ {columnHeader}, {columnHeader} ... ]\n   // An array of column headers for the grid to display. These should\n   // be generated at Design time, and can allow the designer to ORDER the\n   // columns, assign column widths, fillspace, etc...\n   //    {columnHeader}\n   //    The minimum amount of information a Grid needs for it's customization\n   //    .id {string} ABField.columnName\n   //    .fieldId {string} ABField.id\n   //    .width {int}\n   //    .fillspace {bool}\n   //    .minwidth\n   //\n   //    When displaying column headers, we will ask the\n   //    CurrentObject.columnHeaders(), and then modify them with our settings\n   //    here.\n\n   saveLocal: 1,\n   // {bool}\n   // Allow saving of local changes to our grid display. This will enable\n   // a user to modify the Grid display locally.\n};\n\nconst ABViewDefaults = {\n   key: \"grid\", // {string} unique key for this view\n   icon: \"table\", // {string} fa-[icon] reference for this view\n   labelKey: \"Grid\", // {string} the multilingual label key for the class label\n};\n\n/**\n * @function settingsDefault()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that are NOT TRUTHY ... so not for numeric\n * 1 or 0.\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefault(base, field) {\n   if (typeof base[field] == \"undefined\") {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n      return;\n   }\n   base[field] = base[field] || ABViewGridPropertyComponentDefaults[field];\n}\n\n/**\n * @function settingsDefaultJSON()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that ARE TRUTHY ... so for numeric 1 or 0\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefaultJSON(base, field) {\n   try {\n      base[field] = JSON.parse(base[field]);\n   } catch (e) {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n   }\n}\n\nmodule.exports = class ABViewGridCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGridPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      settingsDefault(this.settings, \"dataviewID\");\n\n      // Convert to boolean\n      // these values are sometimes 0 (number) at this point so the JSON.parse\n      // with the || (or) statement was always falling to the default so I am\n      // trying to parse the value...if it fails we use the default value\n      settingsDefaultJSON(this.settings, \"padding\");\n      settingsDefaultJSON(this.settings, \"showToolbar\");\n      settingsDefaultJSON(this.settings, \"isEditable\");\n      settingsDefaultJSON(this.settings, \"massUpdate\");\n      settingsDefaultJSON(this.settings, \"allowDelete\");\n      // this.settings.isFilterable = JSON.parse(this.settings.isFilterable || ABViewGridPropertyComponentDefaults.isFilterable);\n      settingsDefaultJSON(this.settings, \"isSortable\");\n      settingsDefaultJSON(this.settings, \"isExportable\");\n      settingsDefaultJSON(this.settings, \"hideHeader\");\n      settingsDefaultJSON(this.settings, \"labelAsField\");\n      settingsDefaultJSON(this.settings, \"hideButtons\");\n      settingsDefaultJSON(this.settings, \"columnConfig\");\n      settingsDefaultJSON(this.settings, \"saveLocal\");\n\n      this.settings.gridFilter =\n         this.settings.gridFilter ||\n         ABViewGridPropertyComponentDefaults.gridFilter;\n\n      try {\n         this.settings.gridFilter.filterOption = JSON.parse(\n            this.settings.gridFilter.filterOption\n         );\n      } catch (e) {\n         this.settings.gridFilter.filterOption =\n            ABViewGridPropertyComponentDefaults.gridFilter.filterOption;\n      }\n\n      try {\n         this.settings.gridFilter.isGlobalToolbar = JSON.parse(\n            this.settings.gridFilter.isGlobalToolbar\n         );\n      } catch (e) {\n         this.settings.gridFilter.isGlobalToolbar =\n            ABViewGridPropertyComponentDefaults.gridFilter.isGlobalToolbar;\n      }\n\n      // this.settings.linkedObject = this.settings.linkedObject || ABViewGridPropertyComponentDefaults.linkedObject;\n      // this.settings.linkedField = this.settings.linkedField || ABViewGridPropertyComponentDefaults.linkedField;\n      // this.settings.linkedPage = this.settings.linkedPage || ABViewGridPropertyComponentDefaults.linkedPage;\n      // this.settings.linkedPageView = this.settings.linkedPageView || ABViewGridPropertyComponentDefaults.linkedPageView;\n      // this.settings.linkedEditPage = this.settings.linkedEditPage || ABViewGridPropertyComponentDefaults.linkedEditPage;\n      // this.settings.linkedEditPageForm = this.settings.linkedEditPageForm || ABViewGridPropertyComponentDefaults.linkedEditPageForm;\n\n      settingsDefault(this.settings, \"detailsPage\");\n      settingsDefault(this.settings, \"editPage\");\n      settingsDefault(this.settings, \"detailsTab\");\n      settingsDefault(this.settings, \"editTab\");\n      settingsDefaultJSON(this.settings, \"trackView\");\n\n      // TODO: remove objectworkspace!\n      // this.settings.objectWorkspace =\n      //    this.settings.objectWorkspace ||\n      //    ABViewGridPropertyComponentDefaults.objectWorkspace;\n\n      // if (typeof this.settings.objectWorkspace != \"undefined\") {\n      //    if (typeof this.settings.objectWorkspace.sortFields == \"undefined\")\n      //       this.settings.objectWorkspace.sortFields = [];\n      //    if (\n      //       typeof this.settings.objectWorkspace.filterConditions == \"undefined\"\n      //    )\n      //       this.settings.objectWorkspace.filterConditions = [];\n      //    if (typeof this.settings.objectWorkspace.frozenColumnID == \"undefined\")\n      //       this.settings.objectWorkspace.frozenColumnID = \"\";\n      //    if (typeof this.settings.objectWorkspace.hiddenFields == \"undefined\")\n      //       this.settings.objectWorkspace.hiddenFields = [];\n      //    if (typeof this.settings.objectWorkspace.summaryColumns == \"undefined\")\n      //       this.settings.objectWorkspace.summaryColumns = [];\n      //    if (typeof this.settings.objectWorkspace.countColumns == \"undefined\")\n      //       this.settings.objectWorkspace.countColumns = [];\n      // }\n\n      var owFields = [\n         \"sortFields\",\n         \"filterConditions\",\n         \"frozenColumnID\",\n         \"hiddenFields\",\n         \"summaryColumns\",\n         \"countColumns\",\n      ];\n      // Transition: if we have an .objectWorkspace, copy those values in here:\n      if (this.settings.objectWorkspace) {\n         owFields.forEach((f) => {\n            if (!this.settings[f])\n               this.settings[f] = this.settings.objectWorkspace[f];\n         });\n      }\n\n      // make sure they have actual default values now.\n      owFields.forEach((f) => {\n         settingsDefault(this.settings, f);\n      });\n\n      // we are not allowed to have sub views:\n      this._views = [];\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   removeField(field, cb) {\n      let shouldSave = false;\n\n      // check to see if there is a frozenColumnID and if it matches the\n      // deleted field\n      if (this.settings?.frozenColumnID == field.columnName) {\n         // remove the column name from the frozen column id\n         this.settings.frozenColumnID = \"\";\n         // flag the object to be saved later\n         shouldSave = true;\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.hiddenFields?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.hiddenFields.indexOf(field.columnName);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.hiddenFields.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are Summary fields\n      if (this.settings.summaryColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.summaryColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.summaryColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.countColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.countColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.countColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n      // if settings were changed call the callback\n\n      cb(null, shouldSave);\n   }\n\n   copyUpdateProperyList() {\n      return [\"detailsPage\", \"detailsTab\", \"editPage\", \"editTab\"];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewImagePropertyComponentDefaults = {\n   filename: \"\",\n   width: 200,\n   height: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"image\", // {string} unique key for this view\n   icon: \"picture-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewImageCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewImagePropertyComponentDefaults.width\n      );\n      this.settings.height = parseInt(\n         this.settings.height || ABViewImagePropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewKanbanPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   editFields: [],\n   // {array}\n   // An array of {ABField.id} that determines which fields should show up\n   // in the editor.\n\n   verticalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the Vertical Grouping\n   // of the Kanban.\n\n   horizontalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the horizontal Grouping\n   // of the Kanban.\n\n   ownerField: \"\",\n   // {ABFieldUser.id}\n   // the .id of the ABFieldUser instance that determines the owner of the\n   // entries.\n\n   template: \"\",\n   // {json}\n   // The {ABViewText} definition used to display the template for this KanBan.\n   //\n   // A display template used for displaying the information in each Card. The\n   // template is a basic string with special placeholders:  {field.id}\n   // Given a row of data, the current object will scan the template for any\n   // placeholders matching one of it's fields, and then update it with the\n   // current value.\n};\n\nconst ABViewDefaults = {\n   key: \"kanban\",\n   // {string}\n   // unique key identifier for this ABView object\n\n   icon: \"columns\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"Kanban\",\n   // {string}\n   // the multilingual label key\n   // NOTE: will be used as L(labelKey)\n};\n\nmodule.exports = class ABViewKanbanCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // set a default .template value\n      if (!this.settings.template) {\n         this.settings.template = { id: `${this.id}_template`, key: \"text\" };\n         this.settings.template.text = this.settings.textTemplate;\n      }\n\n      this.TextTemplate = this.AB.viewNewDetatched(this.settings.template);\n   }\n\n   toObj() {\n      var obj = super.toObj();\n      obj.settings.template = this.TextTemplate.toObj();\n      // NOTE: this corrects the initial save where this.id == undefined\n      // all the rest will set the .id correctly.\n      obj.settings.template.id = `${this.id}_template`;\n      return obj;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewKanbanPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst PropertyComponentDefaults = {\n   label: \"\",\n   numColumns: 1, // The number of columns for this layout\n};\n\nconst ABViewDefaults = {\n   key: \"layout\", // {string} unique key for this view\n   icon: \"columns\", // {string} fa-[icon] reference for this view\n   labelKey: \"Layout\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLayoutCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return PropertyComponentDefaults;\n   }\n\n   /**\n    * @method addColumn\n    * method to actually add a new ABView as one of our columns.\n    * This is called by the static .addView() method.\n    */\n   addColumn() {\n      this._views.push(\n         this.application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n            },\n            this.application,\n            this\n         )\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      if (isEdited) {\n         // if the layout component is being edited in the editor (isEdited == true)\n         // then we return [];\n         return [];\n      } else {\n         // the layout view doesn't care what components are offered, it get's\n         // the list from it's parent view.\n         // ## NOTE: layout views should not be root views.\n         if (this.parent) {\n            return this.parent.componentList(false);\n         } else {\n            return [];\n         }\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewMenuPropertyComponentDefaults = {\n   orientation: \"x\",\n   buttonStyle: \"ab-menu-default\",\n   menuAlignment: \"ab-menu-left\",\n   menuInToolbar: 1,\n   menuPadding: 10,\n   menuTheme: \"bg_gray\",\n   menuPosition: \"left\",\n   menuTextLeft: \"\",\n   menuTextRight: \"\",\n   menuTextCenter: \"\",\n   // [\n   // \t\t{\n   //\t\t\tpageId: uuid,\n   //\t\t\ttabId: uuid,\n   //\t\t\ttype: string, // \"page\", \"tab\"\n   //\t\t\tisChecked: bool,\n   //\t\t\taliasname: string,\n   //\t\t\ttranslations: []\n   //\t\t}\n   // ]\n   pages: [],\n   order: [],\n};\n\nconst ABMenuDefaults = {\n   key: \"menu\", // {string} unique key for this view\n   icon: \"th-large\", // {string} fa-[icon] reference for this view\n   labelKey: \"Menu\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewMenuCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMenuDefaults);\n   }\n\n   static common() {\n      return ABMenuDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewMenuPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewMenu instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n      if (this.settings.pages) {\n         this.settings.pages.forEach((page) => {\n            this.unTranslate(page, page, [\"aliasname\"]);\n         });\n      }\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.translate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n\n      this.settings.pages =\n         this.settings.pages || ABViewMenuPropertyComponentDefaults.pages;\n\n      for (var i = 0; i < this.settings.pages.length; i++) {\n         var page = this.settings.pages[i];\n         if (page instanceof Object) {\n            page.isChecked = JSON.parse(page.isChecked || false);\n\n            this.translate(page, page, [\"aliasname\"]);\n         }\n         // Compatible with old data\n         else if (typeof page == \"string\") {\n            this.settings.pages[i] = {\n               pageId: page,\n               isChecked: true,\n            };\n         }\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   ClearPagesInView(view) {\n      // clear menu items\n      if (view && view.count() > 1) {\n         view.find({}).forEach((item) => {\n            view.remove(item.id);\n         });\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   AddPagesToView(view, pages) {\n      if (!view || !pages) return;\n\n      (pages || []).forEach((displayPage) => {\n         if (displayPage.isChecked) {\n            let existsPage = this.application.pages(\n               (p) => p.id == displayPage.pageId,\n               true\n            )[0];\n            if (!existsPage) return;\n\n            var pageAccessLevel = existsPage.getUserAccess();\n            if (pageAccessLevel == 0) return;\n\n            if (displayPage.tabId) {\n               let existsTab = this.application.views(\n                  (v) => v.id == displayPage.tabId,\n                  true\n               )[0];\n               if (!existsTab) return;\n\n               var tabAccessLevel = existsTab.getUserAccess();\n               if (tabAccessLevel == 0) return;\n            }\n\n            let label = this.getAliasname(displayPage);\n            // create a temporaty store for the menu item\n            var menuItem;\n            // check if page has a parent or not\n            if (displayPage.parent && displayPage.parent != \"0\") {\n               // if page has a parent attempt to grab its submenu\n               menuItem = view.getSubMenu(displayPage.parent);\n            } else {\n               // if the page doesn't have parent use the current menu\n               menuItem = view;\n            }\n            // if the menu item doesn't have a menu selected find it\n            if (menuItem == null) {\n               // get the menu item\n               var curMenu = view.getMenuItem(displayPage.parent);\n               // create a submenu placeholder\n               curMenu.submenu = [];\n               // update the menu with the new submenu included\n               view.refresh(displayPage.parent);\n               // get the submenu we just created\n               menuItem = view.getSubMenu(displayPage.parent);\n            }\n            if (menuItem.exists(displayPage.tabId || displayPage.pageId))\n               return;\n            // add a new item to the menu/submenu\n            menuItem.add(\n               {\n                  id: displayPage.tabId || displayPage.pageId,\n                  value: label,\n                  type: displayPage.type,\n                  pageId: displayPage.pageId,\n                  icon: displayPage.icon\n                     ? \"fa fa-fw fa-\" + displayPage.icon\n                     : \"\",\n               },\n               displayPage.position ? parseInt(displayPage.position) : 0\n            );\n         }\n      });\n   }\n\n   /**\n    * @method getAliasname\n    * @param pageInfo - an object in settings\n    * {\n    * \tpageId: uuid,\n    * \ttabId: uuid,\n    * \ttype: string, - \"page\" or \"tab\"\n    * \tisChecked: bool,\n    * \taliasname: string,\n    *\ttranslations: []\n    *}\n    *\n    * @return {string}\n    */\n   getAliasname(pageInfo) {\n      var lang = this.AB.Multilingual.currentLanguage();\n      var translation = pageInfo.translations.filter((t) => {\n         return t.language_code == lang;\n      });\n\n      var label = \"\";\n\n      if (translation.length) {\n         if (translation[0].aliasname) {\n            label = translation[0].aliasname;\n         } else if (translation[0].label) {\n            label = translation[0].label;\n         }\n      }\n\n      // Just in case there isn't one stored in the translations yet\n      if (!label && pageInfo.aliasname) {\n         label = pageInfo.aliasname;\n      }\n\n      // if alias is empty, then find label of page or tab\n      if (\n         !label ||\n         // remove [en] or [th] etc.\n         !label.replace(/\\[.{2,}\\]/g, \"\")\n      ) {\n         // first check to see if we are actually on a page\n         // if not recursivly look up for the nearest parent page\n         var pageId;\n         if (pageInfo.pageId) {\n            pageId = pageInfo.pageId;\n         } else {\n            pageId = this.getParentPageId(pageInfo);\n         }\n         // find label of the actual page\n         var page = this.application.pages((p) => p.id == pageId, true)[0];\n         if (page) {\n            // find label of the tab view\n            if (pageInfo.type == \"tab\" || pageInfo.key == \"viewcontainer\") {\n               var tabView = page.views(\n                  (v) => v.id == pageInfo.tabId || v.id == pageInfo.id,\n                  true\n               )[0];\n               if (tabView) {\n                  label = tabView.label;\n               }\n            } else {\n               label = page.label;\n            }\n         }\n      }\n\n      return label;\n   }\n\n   getParentPageId(currentView) {\n      if (currentView.key != \"page\") {\n         return this.getParentPageId(currentView.parent);\n      } else {\n         return currentView.id;\n      }\n   }\n\n   copy(lookUpIds, parent) {\n      return super.copy(lookUpIds, parent).then((result) => {\n         // update ids of page's settings\n         (result.settings.pages || []).forEach((p, i) => {\n            let page = result.settings.pages[i];\n\n            // Compatible with old data\n            if (typeof page == \"string\") {\n               result.settings.pages[i] = lookUpIds[page];\n            } else {\n               page.pageId = lookUpIds[page.pageId];\n               page.tabId = lookUpIds[page.tabId];\n            }\n         });\n\n         return result.save().then(() => {\n            return result;\n         });\n      });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewPDFImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   fieldID: null,\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nconst ABViewDefaults = {\n   key: \"pdfImporter\", // {string} unique key for this view\n   icon: \"file-pdf-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"PDF Importer\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPDFImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPDFImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewPDFImporterPropertyComponentDefaults.dataviewID;\n\n      this.settings.fieldID =\n         this.settings.fieldID ??\n         ABViewPDFImporterPropertyComponentDefaults.fieldID;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings ?? {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   doSubmitRules(rowDatas) {\n      const object = this.datacollection.datasource;\n\n      const SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      if (rowDatas && !Array.isArray(rowDatas)) rowDatas = [rowDatas];\n\n      rowDatas?.forEach((rowData) => {\n         SubmitRules.process({ data: rowData, form: this });\n      });\n   }\n};\n","/*\n * ABViewPage\n *\n * An ABView that represents a \"Page\" in the system.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-' )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\", // 'page', 'popup' or 'reportPage'\n   popupWidth: 700,\n   popupHeight: 450,\n   pageWidth: null,\n   fixedPageWidth: 0,\n   pageBackground: \"ab-background-default\",\n};\n\nmodule.exports = class ABViewPageCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABViewPage, but has\n      // different implications ... so we default an ABViewPage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   static getPageActionKey(view) {\n      return [\n         \"opstools\",\n         \"AB_\" + String(view.application.name).replace(/[^a-z0-9]/gi, \"\"),\n         String(view.name)\n            .replace(/[^a-z0-9]/gi, \"\")\n            .toLowerCase(),\n         \"view\",\n      ].join(\".\");\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewPage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n\n      obj.myAppID = this.myAppID;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.AB.error(\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      this.settings.columns = this.settings.columns || 1;\n      this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABViewPage\n            // be sure to remove any of it's ABViewPages as well\n            // This cleans out any dangling ABDefinitions and cleans up the\n            // OpsPortal Permissions:\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n\n      // return new Promise((resolve, reject) => {\n      //    // verify we have been .save() before:\n      //    if (this.id) {\n      //       this.application\n      //          .viewDestroy(this)\n      //          .then(() => {\n      //             // remove the page in list\n      //             var parent = this.parent || this.application;\n      //             var remainingPages = parent.pages((p) => {\n      //                return p.id != this.id;\n      //             });\n      //             parent._pages = remainingPages;\n\n      //             resolve();\n      //          })\n      //          .catch(reject);\n      //    } else {\n      //       resolve(); // nothing to do really\n      //    }\n      // });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABViewPage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABViewPage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance() {\n      console.warn(\n         \"This version of ABViewPage hasn't updated it's refreshInstance()\",\n         this\n      );\n      return this;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABViewPages for this ABViewPage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABViewPages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         if (this._pages && this._pages.length > 0) {\n            result = this._pages.filter(filter);\n\n            if (result.length < 1) {\n               this._pages.forEach((p) => {\n                  var subPages = p.pages(filter, deep);\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n               });\n            }\n         }\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABViewPage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABViewPage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABViewPage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      values.key = ABViewDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABViewPage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABViewPage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for views in this application.\n    * @return {string}\n    */\n   urlPage() {\n      return this.urlPointer() + \"/_pages/\";\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlPage() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABViewDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABViewPage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABViewPage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewPivotPropertyComponentDefaults = {\n   dataviewID: null,\n   removeMissed: 0,\n   totalColumn: 0,\n   separateLabel: 0,\n   min: 0,\n   max: 0,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"pivot\", // {string} unique key for this view\n   icon: \"cube\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pivot\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPivotCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPivotPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Convert to boolean\n      this.settings.removeMissed = JSON.parse(\n         this.settings.removeMissed ||\n            ABViewPivotPropertyComponentDefaults.removeMissed\n      );\n      this.settings.totalColumn = JSON.parse(\n         this.settings.totalColumn ||\n            ABViewPivotPropertyComponentDefaults.totalColumn\n      );\n      this.settings.separateLabel = JSON.parse(\n         this.settings.separateLabel ||\n            ABViewPivotPropertyComponentDefaults.separateLabel\n      );\n      this.settings.min = JSON.parse(\n         this.settings.min || ABViewPivotPropertyComponentDefaults.min\n      );\n      this.settings.max = JSON.parse(\n         this.settings.max || ABViewPivotPropertyComponentDefaults.max\n      );\n\n      if (this.settings.structure && typeof this.settings.structure == \"string\")\n         this.settings.structure = JSON.parse(this.settings.structure);\n\n      // \"0\" -> 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewPivotPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.views = [];\n      obj.settings = obj.settings || {};\n\n      if (this.settings.structure)\n         obj.settings.structure = JSON.stringify(this.settings.structure);\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewReportManagerPropertyComponentDefaults = {\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      text: \"\", // id of a LongText field\n      queries: \"\", // id of a json field\n   },\n   datacollectionIDs: [],\n   editMode: 0,\n   hideCommonTab: 0,\n   hideDataTab: 0,\n   hideViewTab: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"reportsManager\", // {string} unique key for this view\n   icon: \"wpforms\", // {string} fa-[icon] reference for this view\n   labelKey: \"Reports Manager\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewReportsManagerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewReportManagerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewReportManagerPropertyComponentDefaults).forEach(\n         (key1) => {\n            if (\n               typeof ABViewReportManagerPropertyComponentDefaults[key1] ===\n                  \"object\" &&\n               !Array.isArray(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               )\n            ) {\n               parsedSettings[key1] = {};\n\n               Object.keys(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               ).forEach((key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1]?.[key2] ??\n                     ABViewReportManagerPropertyComponentDefaults[key1][key2];\n               });\n\n               return;\n            }\n\n            parsedSettings[key1] =\n               this.settings[key1] ??\n               ABViewReportManagerPropertyComponentDefaults[key1];\n         }\n      );\n\n      this.settings = parsedSettings;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings || {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewSchedulerPropertyComponentDefaults = {\n   readonly: 0,\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      start: \"\", // id of a DateTime field\n      end: \"\", // id of a DateTime field\n      allDay: \"\", // id of a Checkbox field\n      repeat: \"\", // id of a String field\n      calendar: \"\", // id of a String field\n      color: \"\", // id of a String field\n      sectionID: \"\", // id of a String field\n      unitID: \"\", // id of a String field\n      notes: \"\", // id of a LongText field\n      originID: \"\", // id of a LongText field\n   },\n   calendarDataviewID: \"\",\n   calendarDataviewFields: {\n      title: \"\", // id of a String field\n      color: \"\", // id of a String field\n      active: \"\", // id of a Checkbox field\n   },\n   timeline: {\n      day: 1,\n      week: 1,\n      month: 1,\n      year: 1,\n      agenda: 1,\n      timeline: 1,\n      units: 1,\n   },\n   timelineSectionList: \"\",\n   unitList: \"\",\n   export: {\n      excel: 0,\n      csv: 0,\n      pdf: 0,\n   },\n};\n\nconst ABViewDefaults = {\n   key: \"scheduler\",\n   // {string}\n   // unique key for this view\n\n   icon: \"calendar\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Scheduler\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewSchedulerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewSchedulerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"scheduler\"]);\n\n      const obj = super.toObj();\n\n      obj.views = [];\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n      this.settings.dataviewFields = this.settings.dataviewFields || {};\n      this.settings.calendarDataviewFields =\n         this.settings.calendarDataviewFields || {};\n      this.settings.timeline = this.settings.timeline || {};\n      this.settings.export = this.settings.export || {};\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewSchedulerPropertyComponentDefaults).forEach((key1) => {\n         if (\n            typeof ABViewSchedulerPropertyComponentDefaults[key1] === \"object\"\n         ) {\n            parsedSettings[key1] = {};\n\n            Object.keys(ABViewSchedulerPropertyComponentDefaults[key1]).forEach(\n               (key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1][key2] ??\n                     ABViewSchedulerPropertyComponentDefaults[key1][key2];\n               }\n            );\n\n            return;\n         }\n\n         parsedSettings[key1] =\n            this.settings[key1] ??\n            ABViewSchedulerPropertyComponentDefaults[key1];\n      });\n\n      this.settings = parsedSettings;\n\n      // if this is being instantiated on a read from the Property UI,\n      this.scheduler =\n         values.scheduler || ABViewSchedulerPropertyComponentDefaults.scheduler;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"scheduler\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewTabPropertyComponentDefaults = {\n   height: 0,\n   minWidth: 0,\n   stackTabs: 0, // use sidebar view instead of tabview\n   darkTheme: 0, // set dark theme css or not\n   sidebarWidth: 200, // width of sidebar menu when stacking tabs\n   sidebarPos: \"left\", // the default position of sidebar\n   iconOnTop: 0, // do you want to put the icon above the text label?\n   hintID: null, // store the ID of a webix hint tutorial for this view\n};\n\nconst ABViewTabDefaults = {\n   key: \"tab\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"Tab\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTabCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewTabDefaults);\n   }\n\n   static common() {\n      return ABViewTabDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTabPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(this.settings.height);\n      this.settings.minWidth = parseInt(this.settings.minWidth || 0);\n      this.settings.stackTabs = parseInt(this.settings.stackTabs);\n      this.settings.darkTheme = parseInt(this.settings.darkTheme);\n      this.settings.sidebarWidth = parseInt(this.settings.sidebarWidth);\n      this.settings.sidebarPos = this.settings.sidebarPos;\n      this.settings.iconOnTop = parseInt(this.settings.iconOnTop);\n   }\n\n   addTab(tabName, tabIcon) {\n      return this.application\n         .viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: tabName,\n               tabicon: tabIcon,\n            },\n            this.application,\n            this\n         )\n         .save();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewTextPropertyComponentDefaults = {\n   text: \"\",\n   // {string}\n   // A multilingual text template that is used to display a given set of\n   // values.\n\n   height: 0,\n   // {integer}\n   // The default height of this widget.\n\n   dataviewID: null,\n   // {uuid}\n   // The {ABDataCollection.id} of the datacollection this ABViewText is\n   // pulling data from.\n   // In most usage situations this ABView is tied to the data in an\n   // ABDataCollection.  However, it is possible for an ABObject to be\n   // directly assigned to the ABView, and that will be used instead.\n};\n\nconst ABViewDefaults = {\n   key: \"text\",\n   // {string}\n   // unique key for this view\n\n   icon: \"font\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Text\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTextCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"text\"]);\n\n      var obj = super.toObj();\n      obj.views = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewTextPropertyComponentDefaults.height\n      );\n\n      // if this is being instantiated on a read from the Property UI,\n      this.text = values.text || ABViewTextPropertyComponentDefaults.text;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return ABDatacollection of this form\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollection() {\n      if (this.parent?.key == \"dataview\") {\n         return this.AB.datacollectionByID(this.parent.settings.dataviewID);\n      } else {\n         return this.AB.datacollectionByID(this.settings.dataviewID);\n      }\n   }\n\n   fieldKey(field) {\n      let label = field.label || \"\";\n      label = label.replace(/\\(/g, \"\\\\(\");\n      label = label.replace(/\\)/g, \"\\\\)\");\n      return label;\n   }\n\n   displayText(val, componentID) {\n      var result = this.text;\n\n      let clearTemplateValue = (result) => {\n         return result.replace(/{(.*?)}/g, \"\");\n      };\n\n      var dv = this.datacollection;\n      // if (!dv) return clearTemplateValue(result);\n\n      var object = dv?.datasource ?? this._object;\n      if (!object) return clearTemplateValue(result);\n\n      const rowData = val || dv.getCursor() || {};\n\n      object.fields().forEach((f) => {\n         // add \\\\ in front of the regular expression special charactors\n         // let label = f.label || \"\";\n         // label = label.replace(/\\(/g, \"\\\\(\");\n         // label = label.replace(/\\)/g, \"\\\\)\");\n         let label = this.fieldKey(f);\n\n         var template = new RegExp(\"{\" + label + \"}\", \"g\");\n\n         // IDEA: I'd like to keep all the image url logic INSIDE the ABFieldImage\n         // object.  Is there some way we can simply call: f.imageTemplate(rowData)\n         // and parse the results for the url to display here?\n\n         var data = f.format(rowData);\n         if (f.key == \"image\") {\n            var fData = data;\n            data = f.urlImage(fData);\n\n            // Question: should we change f.urlImage() to return the defaultImageUrl\n            // if fData is \"\" and .useDefaultImage = true?\n\n            if (\n               !fData &&\n               f.settings.defaultImageUrl &&\n               f.settings.useDefaultImage\n            ) {\n               data = f.urlImage(f.settings.defaultImageUrl);\n\n               ////\n               //// James:  Revisit this and make sure we are handling things ok now.\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n               // } else if (\n               //    fData != \"\" &&\n               //    result.indexOf(\"onload\") == -1 &&\n               //    componentID\n               // ) {\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n            } else {\n               ////\n               //// James: It looks like this routine assumes the this.text template will\n               //// only have 1 <img> tag in it.  Is that necessarilly true?\n               ////\n               //// If NOT, then we need to rethink this next line:\n\n               result = result.replace(\n                  \"img\",\n                  \"img onerror='this.parentNode.removeChild(this);' \"\n               );\n            }\n         }\n\n         result = result.replace(template, data);\n      });\n\n      // Support {uuid} tag in tempalte\n      result = result.replace(/{PK}/g, rowData[object.PK()]);\n\n      return result;\n   }\n\n   objectLoad(object) {\n      this._object = object;\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewDefaults = {\n   key: \"viewwidget\", // {string} unique key for this view\n   icon: \"circle-o-notch \", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.widget\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columnSpan: 1,\n   rowSpan: 1,\n};\n\nmodule.exports = class ABViewWidgetCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columnSpan = parseInt(\n         this.settings.columnSpan || ABPropertyComponentDefaults.columnSpan\n      );\n      this.settings.rowSpan = parseInt(\n         this.settings.rowSpan || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationCore = require(\"../core/ABApplicationCore.js\");\n\nconst ABViewPage = require(\"./views/ABViewPage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplication extends ABApplicationCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // now listen for any updates to our managed objects\n      this._handler_page_updated = (definition) => {\n         // we want to keep the same pageID order:\n         var newPages = [];\n         this.pages().forEach((pg) => {\n            if (pg.id === definition.id) {\n               newPages.push(pg.refreshInstance(this));\n               return;\n            }\n            newPages.push(pg);\n         });\n\n         this._pages = newPages;\n\n         // var currPage = this._pages.find((p) => p.id === definition.id);\n         // if (currPage) {\n         //    this._pages = this._pages.filter((p) => p.id != currPage.id);\n         //    this._pages.push(currPage.refreshInstance());\n         // }\n      };\n      this._pages.forEach((p) => {\n         p.on(\"definition.updated\", this._handler_page_updated);\n      });\n   }\n\n   static applications(/*fn = () => true*/) {\n      console.error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      return null;\n   }\n   static applicationForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   static definitionForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.definitionForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   areaKey() {\n      return this.AB.kebabCase(`ab-${this.name}`);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABApplication.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.applicationByID(this.id);\n\n      // remove my listeners\n      this._pages.forEach((p) => {\n         p.removeListener(\"definition.updated\", this._handler_page_updated);\n      });\n\n      return newObj;\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method _listInsert()\n    * save the given entity into our desired list:\n    * @param {varid} entity\n    * @param {string} key\n    *        the key of the list we are managing\n    * @return {Promise}\n    */\n   async _listInsert(entity, key) {\n      var isIncluded = this[key].indexOf(entity.id) != -1;\n      if (!isIncluded) {\n         this[key].push(entity.id);\n         await this.save();\n      }\n   }\n\n   async _listRemove(entity, key) {\n      var begLen = this[key].length;\n      this[key] = this[key].filter((id) => {\n         return id != entity.id;\n      });\n      // if there was a change then save this.\n      if (begLen != this[key].length) {\n         await this.save();\n      }\n   }\n\n   /**\n    * @method datacollectionInsert()\n    * persist the current ABDataCollection in our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionInsert(dc) {\n      return this._listInsert(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method datacollectionRemove()\n    * remove the given ABDataCollection from our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionRemove(dc) {\n      return this._listRemove(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method objectInsert()\n    * persist the current ABObject in our list of .objectIDs.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectInsert(object) {\n      return this._listInsert(object, \"objectIDs\");\n   }\n\n   /**\n    * @method objectRemove()\n    * remove the current ABObject from our list of .objectIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectRemove(object) {\n      return this._listRemove(object, \"objectIDs\");\n   }\n\n   /**\n    * @method processInsert()\n    * persist the current ABProcess in our list of .processIDs.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processInsert(process) {\n      return this._listInsert(process, \"processIDs\");\n   }\n\n   /**\n    * @method processRemove()\n    * remove the current ABProcess from our list of .processIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processRemove(process) {\n      return this._listRemove(process, \"processIDs\");\n   }\n\n   /**\n    * @method queryInsert()\n    * persist the current ABObjectQuery in our list of .queryIDs.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryInsert(query) {\n      return this._listInsert(query, \"queryIDs\");\n   }\n\n   /**\n    * @method queryRemove()\n    * remove the current ABObjectQuery from our list of .queryIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryRemove(query) {\n      return this._listRemove(query, \"queryIDs\");\n   }\n\n   /**\n    * @method exportIDs()\n    * export any relevant .ids for the necessary operation of this application.\n    * @param {array} ids\n    *         the array of ids to insert any relevant .ids into\n    */\n   exportIDs(ids) {\n      // make sure we don't get into an infinite loop:\n      if (ids.indexOf(this.id) > -1) return;\n\n      ids.push(this.id);\n\n      // start with Objects:\n      this.objectsIncluded().forEach((o) => {\n         o.exportIDs(ids);\n      });\n\n      // get all Hints\n      this.hintsIncluded().forEach((h) => {\n         h.exportIDs(ids);\n      });\n\n      // Queries\n      this.queriesIncluded().forEach((q) => {\n         q.exportIDs(ids);\n      });\n\n      // Datacollections\n      // NOTE: currently the server doesn't make instances of DataCollections\n      // so we manually parse the related info here:\n      this.datacollectionIDs.forEach((dID) => {\n         if (ids.indexOf(dID) > -1) return;\n\n         var def = this.AB.definitionByID(dID);\n         if (def) {\n            ids.push(dID);\n            if (def.settings.datasourceID) {\n               var object = this.AB.objectByID(def.settings.datasourceID);\n               if (object) {\n                  object.exportIDs(ids);\n               }\n            }\n         }\n      });\n\n      // Processes\n      this.processes().forEach((p) => {\n         p.exportIDs(ids);\n      });\n\n      // Pages\n      // NOTE: currently the server doesn't make instances of ABViews\n      // so we manually parse the object data here:\n      var parseView = (view) => {\n         if (ids.indexOf(view.id) > -1) return;\n         ids.push(view.id);\n         (view.pageIDs || []).forEach((pid) => {\n            var pdef = this.AB.definitionByID(pid);\n            if (pdef) {\n               parseView(pdef);\n            }\n         });\n\n         (view.viewIDs || []).forEach((vid) => {\n            var vdef = this.AB.definitionByID(vid);\n            if (vdef) {\n               parseView(vdef);\n            }\n         });\n      };\n\n      var pageIDs = this._pages.map((p) => p.id);\n      (pageIDs || []).forEach((pid) => {\n         var pdef = this.AB.definitionByID(pid);\n         if (pdef) {\n            parseView(pdef);\n         }\n      });\n\n      // return only unique entries:\n      ids = this.AB.uniq(ids);\n   }\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPage\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      return new ABViewPage(values, this);\n   }\n\n   /**\n    * @method pageInsert()\n    * Insert a new ABViewPage into this Application.\n    * @param {ABViewPage} page\n    *        The instance of the page to save.\n    * @return {Promise}\n    */\n   async pageInsert(page) {\n      // var isIncluded = this.pageByID(page.id);\n      var isIncluded = this._pages.filter((p) => p.id == page.id)[0];\n      if (!isIncluded) {\n         this._pages.push(page);\n         // Save our own Info:\n         return this.save();\n      }\n   }\n\n   /**\n    * @method pageRemove()\n    * remove the current ABViewPage from our list of pages.\n    * @param {ABViewPage} page\n    * @return {Promise}\n    */\n   async pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n   }\n\n   save() {\n      // if someone just changed the name of our ABApplication, reflect that\n      // in our Def.Name\n      if (this.name != this.label) {\n         this.name = this.label;\n      }\n      return super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      //\n      // check for valid object references:\n      //\n      var checks = {\n         objectIDs: \"object\",\n         queryIDs: \"query\",\n         datacollectionIDs: \"datacollection\",\n      };\n\n      Object.keys(checks).forEach((k) => {\n         this[k].forEach((id) => {\n            var def = this.AB.definitionByID(id);\n            if (!def) {\n               this.warningsMessage(` is referencing a missing ${checks[k]}`, {\n                  appID: this.id,\n                  id,\n               });\n            }\n         });\n      });\n\n      //\n      // Make sure there is some way to access this Application:\n      //\n      if (this.roleAccess.length == 0 && !this.isAccessManaged) {\n         this.warningsMessage(\" has no Role assigned, and is unaccessible.\");\n      }\n\n      // do our Role references exist?\n      var allRoles = this.AB.Account.rolesAll().map((r) => r.id);\n      this.roleAccess.forEach((r) => {\n         if (allRoles.indexOf(r) == -1) {\n            this.warningsMessage(\n               `Specified Role Access [${r}] does not exist in this system`,\n               { role: r }\n            );\n         }\n      });\n\n      // Make sure all our Pages perform a new warningsEval();\n      this.pages().forEach((p) => {\n         p.warningsEval();\n      });\n   }\n\n   warningsAll() {\n      var warnings = [].concat(this._warnings);\n      [\n         \"objectsIncluded\",\n         \"queriesIncluded\",\n         \"datacollectionsIncluded\",\n         \"processes\",\n         \"pages\",\n         // \"views\", // <-- these are gathered in \"pages\"\n      ].forEach((k) => {\n         this[k]().forEach((o) => {\n            warnings = warnings.concat(o.warningsAll());\n         });\n      });\n\n      return warnings;\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Application[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   /**\n    * @method mobileAppNew()\n    *\n    * return an instance of a new (unsaved) ABMobileApp that is tied to this\n    * ABApplication.\n    *\n    * @return {ABMobileApp}\n    */\n   // mobileAppNew(values) {\n   //    return new ABMobileApp(values, this);\n   // }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationMobileCore = require(\"../core/ABApplicationMobileCore.js\");\n\nconst ABViewPageMobile = require(\"./mobile/ABMobilePage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplicationMobile extends (\n   ABApplicationMobileCore\n) {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPageMobile\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPageMobile}\n    */\n   pageNew(values) {\n      const newPage = new ABViewPageMobile(values, this);\n      newPage.parent = this;\n      return newPage;\n   }\n\n   async setPageDefault(page) {\n      if (this.pageDefault != page.id) {\n         let oldPage = this.pageByID(this.pageDefault, true);\n         if (oldPage) {\n            oldPage.defaultPage = 0;\n            await oldPage.save();\n         }\n\n         this.pageDefault = page.id;\n         await this.save();\n      }\n   }\n};\n","const ABEmitter = require(\"./ABEmitter\");\n\nconst CustomComponentManager = require(\"../../webix_custom_components/customComponentManager\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABComponent extends ABEmitter {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, AB) {\n      super();\n\n      // Transition Code:\n      // make sure we have an this.AB\n      if (App && App.AB) {\n         this.AB = App.AB;\n      }\n\n      // passed in AB will override\n      if (AB) {\n         this.AB = AB;\n         // {ABFactory} AB\n      }\n\n      if (!App) {\n         if (AB._App) {\n            App = AB._App;\n         } else {\n            App = {\n               uuid: AB.Webix.uid(),\n\n               /*\n                * AB\n                * the {ABFactory} for our interface.\n                */\n               AB: AB,\n\n               /*\n                * actions:\n                * a hash of exposed application methods that are shared among our\n                * components, so one component can invoke an action that updates\n                * another component.\n                */\n               actions: {},\n\n               /*\n                * config\n                * webix configuration settings for our current browser\n                */\n               config: AB.UISettings.config(),\n\n               /*\n                * custom\n                * a collection of custom components for this App Instance.\n                */\n               custom: null,\n\n               /*\n                * Icons\n                * this will provide you with the list of avaialbe font awesome 4.7.0 icons to use in interface building\n                */\n               icons: AB.UISettings.icons,\n\n               Label: L,\n\n               /*\n                * labels\n                * a collection of labels that are common for the Application.\n                */\n               labels: {\n                  add: L(\"Add\"),\n                  create: L(\"Create\"),\n                  delete: L(\"Delete\"),\n                  edit: L(\"Edit\"),\n                  export: L(\"Export\"),\n                  formName: L(\"Name\"),\n                  import: L(\"Import\"),\n                  rename: L(\"Rename\"),\n                  ok: L(\"Ok\"),\n\n                  cancel: L(\"Cancel\"),\n                  save: L(\"Save\"),\n\n                  yes: L(\"Yes\"),\n                  no: L(\"No\"),\n\n                  none: L(\"None\"),\n                  close: L(\"Close\"),\n\n                  default: L(\"Default\"),\n                  defaultPlaceholder: L(\"Enter default value\"),\n\n                  disable: L(\"Disable\"),\n\n                  required: L(\"Required\"),\n                  unique: L(\"Unique\"),\n\n                  invalidMessage: {\n                     required: L(\"This field is required\"),\n                  },\n\n                  createErrorMessage: L(\"System could not create <b>{0}</b>.\"),\n                  createSuccessMessage: L(\"<b>{0}</b> is created.\"),\n\n                  updateErrorMessage: L(\"System could not update <b>{0}</b>.\"),\n                  updateSucessMessage: L(\"<b>{0}</b> is updated.\"),\n\n                  deleteErrorMessage: L(\"System could not delete <b>{0}</b>.\"),\n                  deleteSuccessMessage: L(\"<b>{0}</b> is deleted.\"),\n\n                  renameErrorMessage: L(\"System could not rename <b>{0}</b>.\"),\n                  renameSuccessMessage: L(\"<b>{0}</b> is renamed.\"),\n\n                  // Data Field  common Property labels:\n                  dataFieldHeaderLabel: L(\"Section Title\"),\n                  dataFieldHeaderLabelPlaceholder: L(\"Section Name\"),\n\n                  dataFieldLabel: L(\"Label\"),\n                  dataFieldLabelPlaceholder: L(\"Label\"),\n\n                  dataFieldColumnName: L(\"Field Name\"),\n                  dataFieldColumnNamePlaceholder: L(\"Database field name\"),\n\n                  dataFieldShowIcon: L(\"show icon?\"),\n\n                  componentDropZone: L(\"add widgets here\"),\n               },\n\n               /*\n                * unique()\n                * A function that returns a globally unique Key.\n                * @param {string} key   The key to modify and return.\n                * @return {string}\n                */\n               unique: function (key) {\n                  return `${key}${this.uuid}`;\n               },\n            };\n            AB._App = App;\n         }\n      }\n\n      if (!App.custom) {\n         if (!AB.custom) {\n            var componentManager = new CustomComponentManager();\n            componentManager.initComponents(App);\n         } else {\n            App.custom = AB.custom;\n         }\n      }\n\n      this.App = App;\n\n      this.idBase = idBase || \"?idbase?\";\n   }\n\n   actions(_actions) {\n      console.error(\"!!! REFACTOR out .actions()\");\n      if (_actions) {\n         for (var a in _actions) {\n            this.App.actions[a] = _actions[a];\n         }\n      }\n   }\n\n   Label() {\n      return (...params) => {\n         // console.error(\"!! App.label() depreciated.\");\n         return this.AB.Multilingual.label(...params);\n      };\n   }\n\n   unique(key) {\n      return this.App.unique(`${this.idBase}_${key}`);\n   }\n};\n","const ABObjectQuery = require(\"./ABObjectQuery\");\nconst ABDataCollectionCore = require(\"../core/ABDataCollectionCore\");\n\nmodule.exports = class ABDataCollection extends ABDataCollectionCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.setMaxListeners(0);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDataCollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *       .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      this.AB.emit(\"ab.datacollection.update\", {\n         datacollectionId: this.id,\n      });\n      return this;\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n      var L = this.AB.Label();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.datacollections((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   /**\n    * currentUserUsername\n    * must return the proper value for the current user that would match a \"user\" field\n    * in an object.\n    * This is platform dependent, so must be implemented by a child object.\n    * @return {string}\n    */\n   currentUserUsername() {\n      return this.AB.Account.username();\n   }\n\n   ///\n   /// Data\n   ///\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      // this.initialized = true;  // <<---- DO NOT SET THIS HERE\n\n      super.init();\n\n      //// Now connect our platform hub to our Object Triggers:\n\n      // events\n      this.AB.on(\"ab.datacollection.create\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.create\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.update\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.update\", data);\n      });\n\n      // We are subscribing to notifications from the server that an item may\n      // be stale and needs updating\n      // We will improve this later and verify that it needs updating before\n      // attempting the update on the client side\n      this.AB.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.stale\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.delete\", data);\n      });\n\n      this.bindParentDc();\n   }\n\n   bindParentDc() {\n      // if we pass the master datacollection and the field it is linked to\n      // we want to bind it with that field as second param so dataFeed is\n      // used on the slave datacollection\n      let dataCollectionLink = this.datacollectionLink;\n      let fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         let dc = this.__dataCollection;\n         // the second param is the field id we bind the data to the master with\n         dc.bind(dataCollectionLink.__dataCollection, fieldLink.id);\n         // defining dataFeed allows us to query the database when the table is scrolled\n         dc.define(\"dataFeed\", (value, params) => {\n            let cursorUpdated = false;\n            // check if the current cursor was updated\n            if (dc.__prevLinkDcCursor != value) {\n               cursorUpdated = true;\n            }\n\n            dc.__prevLinkDcCursor = this?.datacollectionLink?.getCursor()?.id;\n\n            // NOTE: If no cursor of the parent DC, then show empty list\n            if (\n               this.datacollectionLink &&\n               value == null &&\n               dc.__prevLinkDcCursor == null\n            ) {\n               this.clearAll();\n            }\n            // this is the same item that was already bound...don't reload data\n            else if (cursorUpdated) {\n               // now that we have the modified wheres the dataCollections wheres\n               // need to be modified for subsequent loads on scroll so lets set them\n               // this.reloadWheres(wheres);\n\n               // reload data\n               this.reloadData(0, 20);\n            }\n         });\n      }\n   }\n\n   loadData(start, limit = 20) {\n      return super.loadData(start, limit).catch((err) => {\n         // hideProgressOfComponents() is a platform specific action.\n         this.hideProgressOfComponents();\n         this.emit(\"loadData\", {});\n\n         // propagate the error here:\n         if (err) {\n            throw err;\n         }\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      // Web Platform:\n\n      // data check:\n      if (data.data && !Array.isArray(data.data)) {\n         data.data = [data.data];\n      }\n\n      // standardize the heights\n\n      /*\n       // In v2: we move the row height calculation into the Interface designer.\n       //\n\n      // calculate default value of $height of rows\n      let obj = this.datasource;\n      let defaultHeight = 0;\n      let minHeight = 0;\n      let imageFields = obj.fields((f) => f.key == \"image\");\n      let hiddenFields = obj.objectWorkspace.hiddenFields;\n      imageFields.forEach(function (f) {\n         if (hiddenFields.indexOf(f.columnName) == -1) {\n            if (\n               parseInt(f.settings.useHeight) == 1 &&\n               parseInt(f.settings.imageHeight) > minHeight\n            ) {\n               minHeight = parseInt(f.settings.imageHeight) + 20;\n            } else {\n               minHeight = 100;\n            }\n         }\n      });\n      if (minHeight > 0) {\n         defaultHeight = minHeight;\n      }\n\n      (data.data || []).forEach((d) => {\n         // define $height of rows to render in webix elements\n         if (\n            d.properties != null &&\n            d.properties.height != \"undefined\" &&\n            parseInt(d.properties.height) > 0\n         ) {\n            d.$height = parseInt(d.properties.height);\n         } else if (defaultHeight > 0) {\n            d.$height = defaultHeight;\n         }\n      });\n      */\n\n      return super.processIncomingData(data).then(() => {\n         // Web Platform:\n         // when that is done:\n         this.hideProgressOfComponents();\n      });\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method attachFlexlayout\n    *\n    *\n    * @param {Object} component - a webix flexlayout element instance\n    */\n   attachFlexlayout(component) {\n      var dc = this.__dataCollection;\n\n      // prevent attach many times\n      if (this.__flexComponentIds.indexOf(component.config.id) > -1) {\n         return;\n      } else {\n         // keep component id to an array\n         this.__flexComponentIds.push(component.config.id);\n      }\n   }\n\n   /**\n    * @method bind\n    *\n    *\n    * @param {Object} component - a webix element instance\n    */\n   bind(component) {\n      var dc = this.__dataCollection;\n\n      // prevent bind many times\n      // keep component id to an array\n      if (this.__bindComponentIds.indexOf(component.config.id) === -1)\n         this.__bindComponentIds.push(component.config.id);\n\n      if ($$(component.config.id).data?.find?.({}).length > 0) return;\n\n      if (\n         component.config.view == \"datatable\" ||\n         component.config.view == \"dataview\" ||\n         component.config.view == \"treetable\" ||\n         component.config.view == \"kanban\"\n      ) {\n         if (dc) {\n            var items = dc.count();\n            if (\n               items == 0 &&\n               (this._dataStatus == this.dataStatusFlag.notInitial ||\n                  this._dataStatus == this.dataStatusFlag.initializing) &&\n               component.showProgress\n            ) {\n               component.showProgress({ type: \"icon\" });\n            }\n\n            component.define(\"datafetch\", 20);\n            component.define(\"datathrottle\", 500);\n\n            // initial data of treetable\n            if (component.config.view == \"treetable\") {\n               if (\n                  this.datasource &&\n                  this.datasource.isGroup &&\n                  this.__treeCollection\n               ) {\n                  component.define(\"data\", this.__treeCollection);\n                  component.refresh();\n               } else {\n                  // NOTE: tree data does not support dynamic loading when scrolling\n                  // https://forum.webix.com/discussion/3078/dynamic-loading-in-treetable\n                  component.define(\"data\", []);\n                  component.parse(dc.find({}));\n               }\n            } else {\n               component.data.sync(dc);\n            }\n\n            // Implement .onDataRequest for paging loading\n            if (!this.settings.loadAll) {\n               component.___AD = component.___AD || {};\n               // if (component.___AD.onDataRequestEvent) component.detachEvent(component.___AD.onDataRequestEvent);\n               if (!component.___AD.onDataRequestEvent) {\n                  component.___AD.onDataRequestEvent = component.attachEvent(\n                     \"onDataRequest\",\n                     (start, count) => {\n                        if (component.showProgress)\n                           component.showProgress({ type: \"icon\" });\n\n                        // load more data to the data collection\n                        dc.loadNext(count, start);\n\n                        return false; // <-- prevent the default \"onDataRequest\"\n                     }\n                  );\n               }\n\n               // // NOTE : treetable should use .parse or TreeCollection\n               // // https://forum.webix.com/discussion/1694/tree-and-treetable-using-data-from-datacollection\n               // if (\n               //    component.config.view == \"treetable\" &&\n               //    !this.datasource.isGroup\n               // ) {\n               //    component.___AD = component.___AD || {};\n               //    if (!component.___AD.onDcLoadData) {\n               //       component.___AD.onDcLoadData = () => {\n               //          component.parse(dc.find({}));\n               //       };\n\n               //       this.on(\"loadData\", component.___AD.onDcLoadData);\n               //    }\n               // }\n            }\n         } else {\n            component.data.unsync();\n         }\n      } else if (component.bind) {\n         if (dc) {\n            // Do I need to check if there is any data in the collection before binding?\n            component.bind(dc);\n         } else {\n            component.unbind();\n         }\n\n         if (component.refresh) component.refresh();\n      }\n   }\n\n   unbind(component) {\n      if (!component) return;\n\n      component.detachEvent(\"onDataRequest\");\n      if (component.___AD) {\n         if (component.___AD.onDataRequestEvent)\n            delete component.___AD.onDataRequestEvent;\n\n         if (component.___AD.onDcLoadData) {\n            if (this.off) this.off(\"loadData\", component.___AD.onDcLoadData);\n            delete component.___AD.onDcLoadData;\n         }\n      }\n\n      if (component.data && component.data.unsync) {\n         component.data.unsync();\n         component.define(\"data\", []);\n      }\n\n      if (component.unbind) component.unbind();\n\n      if (component.refresh) component.refresh();\n\n      // remove from array\n      this.__bindComponentIds = (this.__bindComponentIds || []).filter(\n         (id) => id != component.config.id\n      );\n   }\n\n   hideProgressOfComponents() {\n      this.__bindComponentIds.forEach((comId) => {\n         if ($$(comId) && $$(comId).hideProgress) $$(comId).hideProgress();\n      });\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(data) {\n      // get a webix data collection\n      let dc = new webix.DataCollection({\n         data: data || [],\n      });\n\n      this._extendCollection(dc);\n\n      return dc;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      // get a webix data collection\n      let treeStore = new webix.TreeCollection();\n\n      this._extendCollection(treeStore);\n\n      return treeStore;\n   }\n\n   _extendCollection(dataStore) {\n      // Apply this data collection to support multi-selection\n      // https://docs.webix.com/api__refs__selectionmodel.html\n      webix.extend(dataStore, webix.SelectionModel);\n\n      dataStore.___AD = dataStore.___AD || {};\n\n      // Implement .onDataRequest for paging loading\n      if (!this.settings.loadAll) {\n         if (!dataStore.___AD.onDataRequestEvent) {\n            dataStore.___AD.onDataRequestEvent = dataStore.attachEvent(\n               \"onDataRequest\",\n               (start, count) => {\n                  if (start < 0) start = 0;\n\n                  // load more data to the data collection\n                  this.loadData(start, count);\n\n                  return false; // <-- prevent the default \"onDataRequest\"\n               }\n            );\n         }\n\n         if (!dataStore.___AD.onAfterLoadEvent) {\n            dataStore.___AD.onAfterLoadEvent = dataStore.attachEvent(\n               \"onAfterLoad\",\n               () => {\n                  this.emit(\"loadData\", {});\n               }\n            );\n         }\n      }\n\n      // override unused functions of selection model\n      dataStore.addCss = function () {};\n      dataStore.removeCss = function () {};\n      dataStore.render = function () {};\n\n      if (!dataStore.___AD.onAfterLoad) {\n         dataStore.___AD.onAfterLoad = dataStore.attachEvent(\n            \"onAfterLoad\",\n            () => {\n               this.hideProgressOfComponents();\n            }\n         );\n      }\n   }\n\n   parseTreeCollection(data = {}) {\n      if (\n         !(this.__datasource instanceof ABObjectQuery) ||\n         !this.__datasource.isGroup ||\n         !this.__treeCollection\n      )\n         return;\n\n      let addRowToTree = (join = {}, parentAlias = null) => {\n         let alias = join.alias;\n\n         (data.data || []).forEach((row) => {\n            let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n            if (!dataId) return;\n\n            // find parent nodes\n            let parentItemIds = [];\n            let parentId =\n               row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n            if (parentId) {\n               parentItemIds = this.__treeCollection\n                  .find(\n                     (item) =>\n                        item._alias == parentAlias && item._dataId == parentId\n                  )\n                  .map((item) => item.id);\n            }\n\n            // check exists\n            let exists = this.__treeCollection.find((item) => {\n               return (\n                  item._alias == alias &&\n                  item._dataId == dataId &&\n                  (parentItemIds.length == 0 ||\n                     parentItemIds.indexOf(item.$parent) > -1)\n               );\n            }, true);\n            if (exists) return;\n\n            let treeNode = {};\n            treeNode._alias = alias;\n            treeNode._dataId = dataId;\n            treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n            Object.keys(row).forEach((propName) => {\n               // Pull value from alias\n               if (propName.indexOf(`${alias}.`) == 0) {\n                  treeNode[propName] = row[propName];\n               }\n            });\n\n            if (row.translations) treeNode.translations = row.translations;\n\n            // child nodes\n            if (parentItemIds.length > 0)\n               parentItemIds.forEach((parentItemId) => {\n                  this.__treeCollection.add(treeNode, null, parentItemId);\n               });\n            // root node\n            else this.__treeCollection.add(treeNode, null);\n         });\n\n         // Sub-joins\n         (join.links || []).forEach((link) => {\n            addRowToTree(link, alias);\n         });\n      };\n\n      // Show loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         //// Webix Command here:\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.showProgress)\n            boundComp.showProgress({ type: \"icon\" });\n\n         if (boundComp.data && boundComp.data.unsync) boundComp.data.unsync();\n      });\n\n      addRowToTree(this.__datasource.joins());\n\n      // Hide loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.hideProgress) boundComp.hideProgress();\n         boundComp.define(\"data\", this.__treeCollection);\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.datasource) {\n         this.warningsMessage(`doesn't have a datasource.`);\n      } else if (this.linkDatacollectionID) {\n         const linkDC = this.AB.datacollectionById(this.linkDatacollectionID);\n\n         if (!linkDC)\n            this.warningsMessage(\n               `can't resolve linkDatacollectionID[${this.linkDatacollectionID}]`\n            );\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Datacollection[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   get userScopes() {\n      return this.AB.Account.scopes();\n   }\n};\n","var ABDefinitionCore = require(\"../core/ABDefinitionCore\");\n\nmodule.exports = class ABDefinition extends ABDefinitionCore {\n   // constructor(attributes, AB) {\n   //    super(attributes, AB);\n   // }\n};\n","/**\n * ABEmitter\n *\n * This is the platform dependent implementation of an Emitter object.\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = class ABEmitter extends EventEmitter {\n   constructor() {\n      super(/*{ maxListeners: 0 }*/);\n   }\n};\n","const ABHintCore = require(\"../core/ABHintCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABHint extends ABHintCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy(App) {\n      // debugger;\n      // remove all my Elements\n      var allSteps = this.steps();\n      var allDestroy = [];\n      allSteps.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n      // remove reference on App and View\n      let hintIndex = App.hintIDs.indexOf(this.id);\n      if (hintIndex > -1) {\n         App.hintIDs.splice(hintIndex, 1);\n         App.save();\n      }\n\n      let view = App.views((v) => {\n         return v.id == this.settings.view;\n      })[0];\n\n      if (view) {\n         delete view.settings.hintID;\n         view.save();\n      }\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  webix.message({\n                     text: L(\"Tutorial Deleted\"),\n                     type: \"success\",\n                     expire: 3000,\n                  });\n                  resolve();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n\n   createHintUI() {\n      // if already loaded skip\n      if ($$(this.id)) return;\n\n      let steps = [];\n      let next = 0;\n      let display = webix.storage.cookie.get(this.id);\n      if (display?.hide) return;\n      let dontShow = `<label class=\"dontShow\">\n                        <input onclick=\"webix.storage.cookie.put(this.dataset.hintId, {'hide': this.checked});\" data-hint-id=\"${\n                           this.id\n                        }\" type=\"checkbox\">\n                        ${L(\"Don't show this again.\")}\n                     </label>`;\n      this.stepIDs.forEach((step) => {\n         next++;\n         let newStep = {};\n         newStep.id = this._steps[step].id;\n         newStep.el = this._steps[step].settings.el;\n         newStep.event = this._steps[step].settings.event;\n         newStep.title = this._steps[step].name;\n         newStep.text = this._steps[step].text + dontShow;\n         if (this.stepIDs[next]) {\n            newStep.nextEl = this._steps[this.stepIDs[next]].settings.el;\n            if (newStep.nextEl) {\n               newStep.hintId = this.id;\n               newStep.eventEl = \"button\"; // added this so we do not trigger a second advance on the hint when triggering the click below\n               newStep.next = function (event) {\n                  let nextEl = this.nextEl;\n                  let theNextEl = document.querySelector(nextEl);\n                  if (theNextEl && theNextEl.checkVisibility()) {\n                     return false;\n                  } else {\n                     document.querySelector(this.el).click();\n                     return false;\n                  }\n               };\n            }\n         }\n         if (newStep.el) steps.push(newStep);\n      });\n\n      let ui = {\n         view: \"hint\",\n         id: this.id,\n         steps: steps,\n         on: {\n            onNext: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n            onPrevious: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n         },\n      };\n\n      webix.delay(\n         () => {\n            try {\n               webix.ui(ui).start();\n            } catch (err) {\n               this.AB.notify.developer(err, {\n                  context:\n                     \"ABHint.createUIHint() error calling webix.ui(ui).start()\",\n                  ui,\n               });\n            }\n         },\n         null,\n         null,\n         2000\n      );\n\n      // $$(this.id);\n   }\n};\n","const ABIndexCore = require(\"../core/ABIndexCore\");\n\nmodule.exports = class ABIndex extends ABIndexCore {\n   // constructor(attributes, object) {\n   //    super(attributes, object);\n   // }\n\n   /**\n    * @method save()\n    * persist this instance of ABIndex with it's parent ABObject\n    * @return {Promise}\n    */\n   save() {\n      return super\n         .save()\n         .then(() => this.object.indexSave(this))\n         .then(() => this.migrateCreate());\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABIndex\n    * also remove it from our parent ABObject\n    * @return {Promise}\n    */\n   destroy() {\n      return new Promise((resolve, reject) => {\n         if (this.id) {\n            this.migrateDrop()\n               .then(() => {\n                  return super.destroy();\n               })\n               .then(() => this.object.indexRemove(this))\n               .then(resolve)\n               .catch(reject);\n         } else {\n            resolve();\n         }\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      if (this.fields.length == 0) {\n         this.warningsMessage(`is not referencing any fields`);\n      }\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `Index[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n         // data: this.toObj(),\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n      });\n   }\n};\n","/**\n * ABMLClass\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This platform ABMLClass will define 2 methods that allow for the translation\n * untranslation of this data.\n */\nvar ABMLClassCore = require(\"../core/ABMLClassCore\");\n\nmodule.exports = class ABMLClass extends ABMLClassCore {\n   constructor(fieldList, AB) {\n      super(fieldList, AB);\n\n      this._warnings = [];\n      // {array}\n      // an array of warning messages for this object.\n      // each warning entry should be in the format:\n      // WarningMessage: {\n      //    message: {string} \"message to display\"\n      //    data: {json} additional debugging information\n      // }\n   }\n\n   // fromValues(attributes) {\n   //    super.fromValues(attributes);\n   // }\n\n   /**\n    * @method warnings()\n    * returns the stored warnings for this ONE object.\n    * @return {array} WarningMessage\n    */\n   warnings() {\n      return this._warnings;\n   }\n\n   /**\n    * @method warningsEval()\n    * This method causes an object to re-evaluate it's settings to see if there\n    * are any potential errors.\n    */\n   warningsEval() {\n      this._warnings = [];\n   }\n\n   /**\n    * @method warningsAll()\n    * returns all relevant warnings for the current Object. This includes any\n    * sub fields, links, views, etc...\n    * @return {array} warning structures\n    *          [ {WarningMessage}, ... ]\n    */\n   warningsAll() {\n      return this.warnings();\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return this.AB.Account.language() || \"en\";\n   }\n\n   /**\n    * @method destroy()\n    * remove this definition.\n    * @return {Promise}\n    */\n   async destroy() {\n      var def = this.toDefinition();\n      if (def.id) {\n         return def.destroy().catch((err) => {\n            if (err.toString().indexOf(\"No record found\") > -1) {\n               // this is weird, but not breaking:\n               console.log(\n                  `ABMLClass.destroy(): could not find record for id[${def.id}]`\n               );\n               console.log(def);\n               return;\n            }\n            throw err;\n         });\n      }\n      return Promise.resolve();\n   }\n\n   /**\n    * @method save()\n    * persist this definition of our {ABxxx} Object\n    * @return {Promise}\n    */\n   async save() {\n      var def = this.toDefinition();\n      // if not name, try to use our label as the name\n      def.name = def.name || this.name || this.label || \"name\";\n      var data = await def.save();\n      if (!this.id) {\n         this.id = data.id;\n      }\n   }\n};\n","const ABModelCore = require(\"../core/ABModelCore\");\n\n//\n// ABModel\n//\n// Represents the Data interface for an ABObject data.\n//\n// 2 ways to use an ABModel to load a DataTable:\n// \tMethod 1:\n// \tgather all the data externally and send to the DataTable\n//\t\tModel.findAll()\n//\t\t.then((data)=>{\n//\t\t\tDataTable.parse(data);\n//\t\t})\n//\n// \tMethod 2:\n// \tSet the Model object with a condition / skip / limit, then\n// \tuse it to load the DataTable:\n//\t\tModel.where({})\n//\t\t.skip(XX)\n//\t\t.limit(XX)\n//\t\t.loadInto(DataTable);\n\nfunction errorPopup(error) {\n   // Show the pop up\n   if (error && error.data && error.data.error == \"READONLY\") {\n      webix.alert({\n         title: \"Your action is blocked\",\n         ok: \"Ok\",\n         text: error.data.message || \"\",\n         type: \"alert-warning\",\n      });\n   }\n}\n\n/*\n * @function no_socket_trigger()\n * a common routine to trigger an update.\n * In the case where our AB.Network.type() isn't a socket implementation\n * we need to manually trigger the expected socket events ourselves.\n * This fn() attempts to simulate the socket responses in such a case.\n * @param {ABModel} model\n *        The ABModel currently processing the network transaction.\n * @param {string} key\n *        The socket update trigger we are simulating.\n * @param {json} data\n *        The relevant response from our network transaction.\n */\nfunction no_socket_trigger(model, key, data) {\n   // If we do not have socket updates available, then trigger an\n   // update event with this data.\n   if (model.AB.Network.type() != \"socket\") {\n      model.AB.emit(key, {\n         objectId: model.object.id,\n         data,\n      });\n   }\n}\n\nmodule.exports = class ABModel extends ABModelCore {\n   constructor(object) {\n      super(object);\n\n      this.handler_create = (...params) => {\n         this.handler_common(\"ab.datacollection.create\", ...params);\n      };\n\n      this.handler_delete = (...params) => {\n         this.handler_common(\"ab.datacollection.delete\", ...params);\n      };\n\n      this.handler_findAll = (...params) => {\n         this.handler_common(null, ...params);\n      };\n\n      this.handler_logs = (context, err, data) => {\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         context.resolve?.(data);\n      };\n\n      this.handler_update = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_common = (key, context, err, data) => {\n         // key: {string} the relevant socket event key\n         //      can be null if not relevant.\n         // context : {obj} any provided context data provided on the\n         //           this.AB.Network.get() call.\n         // err: {Error} any returned error message from api\n         // data: {obj} returned data from the model-get api in format:\n         //       {data: [], total_count: 1, pos: 0, offset: 0, limit: 0}\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n\n         // let jobID = this.AB.jobID();\n         // console.log(`${jobID} : normalization begin`);\n         // let timeFrom = performance.now();\n         if (key) {\n            // on \"update\" & \"create\" we want to normalizeData()\n            if (key.indexOf(\"delete\") == -1) {\n               this.normalizeData(data);\n            }\n         } else {\n            // on a findAll we normalize data.data\n            this.normalizeData(data.data);\n         }\n         // let timeTo = performance.now();\n         // console.log(`${jobID} : normalization end:  ${timeTo - timeFrom}ms`);\n\n         context.resolve?.(data);\n\n         if (key) {\n            no_socket_trigger(this, key, data);\n         }\n      };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      return this.AB.Network[method](params);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      values.batch.map((vals) => {\n         return this.prepareMultilingualData(vals.data);\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err, data) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            this.normalizeData(data);\n            resolve(data);\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a create event\n            // triggerEvent('create', this.object, data);\n         });\n\n         this.AB.Network.post(\n            {\n               url: this.object.urlRestBatch(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: {},\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // FIX: now with sockets, the triggers are fired from socket updates.\n            //    // trigger a create event\n            //    // triggerEvent('create', this.object, data);\n            // })\n            .catch(reject);\n      });\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      this.prepareMultilingualData(values);\n\n      // add default values record if no value is passed for column\n      this.object.fields().forEach((f) => {\n         if (values[f.columnName] === undefined) {\n            f.defaultValue(values);\n         }\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_create);\n         this.AB.Network.post(\n            {\n               url: this.object.urlRest(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_delete);\n         this.AB.Network[\"delete\"](\n            {\n               url: this.object.urlRestItem(id),\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      cond = cond || {};\n\n      // \t\t// prepare our condition:\n      // \t\tvar newCond = {};\n\n      // \t\t// if the provided cond looks like our { where:{}, skip:xx, limit:xx } format,\n      // \t\t// just use this one.\n      // \t\tif (cond.where) {\n      // \t\t\tnewCond = cond;\n      // \t\t} else {\n\n      // \t\t\t// else, assume the provided condition is the .where clause.\n      // \t\t\tnewCond.where = cond;\n      // \t\t}\n\n      // /// if this is our depreciated format:\n      // if (newCond.where.where) {\n      // \tOP.Error.log('Depreciated Embedded .where condition.');\n      // }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_findAll);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRest(),\n               params: cond,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data.data);\n\n            //    resolve(data);\n            // })\n            .catch((err) => {\n               if (err && err.code) {\n                  switch (err.code) {\n                     case \"ER_PARSE_ERROR\":\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Parse Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n\n                     default:\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Unknown Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n                  }\n               }\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method loadInto\n    * loads the current values into the provided Webix DataTable\n    * @param {DataTable} DT  A Webix component that can dynamically load data.\n    */\n   loadInto(DT) {\n      // if a limit was applied, then this component should be loading dynamically\n      if (this._limit) {\n         DT.define(\"datafetch\", this._limit);\n         DT.define(\"datathrottle\", 250); // 250ms???\n\n         // catch the event where data is requested:\n         // here we will do our own findAll() so we can persist\n         // the provided .where condition.\n\n         // oh yeah, and make sure to remove any existing event handler when we\n         // perform a new .loadInto()\n         DT.___AD = DT.___AD || {};\n         if (DT.___AD.onDataRequestEvent) {\n            DT.detachEvent(DT.___AD.onDataRequestEvent);\n         }\n         DT.___AD.onDataRequestEvent = DT.attachEvent(\n            \"onDataRequest\",\n            (start, count) => {\n               var cond = {\n                  where: this._where,\n                  sort: this._sort,\n                  limit: count,\n                  skip: start,\n               };\n\n               if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n               this.findAll(cond).then((data) => {\n                  /*\n                   // In V2: we move the row height processing into \n                   // the interface designer \n\n                  data.data.forEach((item) => {\n                     if (\n                        item.properties != null &&\n                        item.properties.height != \"undefined\" &&\n                        parseInt(item.properties.height) > 0\n                     ) {\n                        item.$height = parseInt(item.properties.height);\n                     } else if (parseInt(this._where.height) > 0) {\n                        item.$height = parseInt(this._where.height);\n                     }\n                  });\n                  */\n                  DT.parse(data);\n\n                  if (DT.hideProgress) DT.hideProgress();\n               });\n\n               return false; // <-- prevent the default \"onDataRequest\"\n            }\n         );\n\n         DT.refresh();\n      }\n\n      // else just load it all at once:\n      var cond = {};\n      if (this._where) cond.where = this._where;\n      if (this._sort) cond.sort = this._sort;\n      if (this._limit != null) cond.limit = this._limit;\n      if (this._skip != null) cond.skip = this._skip;\n\n      if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n      this.findAll(cond)\n         .then((data) => {\n            // v2: we no longer process item $height\n            /*\n            data.data.forEach((item) => {\n               if (\n                  item.properties != null &&\n                  item.properties.height != \"undefined\" &&\n                  parseInt(item.properties.height) > 0\n               ) {\n                  item.$height = parseInt(item.properties.height);\n               } else if (parseInt(this._where.height) > 0) {\n                  item.$height = parseInt(this._where.height);\n               }\n            });\n            */\n\n            DT.parse(data);\n\n            if (DT.hideProgress) DT.hideProgress();\n         })\n         .catch((err) => {\n            console.error(\"!!!!!\", err);\n         });\n   }\n\n   /**\n    * @method logs()\n    * return the log history related to this model's ABObject.\n    * @param {hash} options\n    *        a key=>value hash of optional search criteria\n    *        .rowId {string} the uuid of the individual entry we are querying\n    *        .levelName {string} the type of entry [\"insert\", \"update\", \"delete\"]\n    *        .username {string} the entries associated with the given user\n    *        .startDate {date} entries that happened ON or AFTER this date\n    *        .endDate {date} entries that happened ON or BEFORE this date\n    *        .start {integer} paging control: how many entries to skip\n    *        .limit {integer} paging control: only return this # entries\n    * @return {Promise}\n    */\n   logs(options) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_logs);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRestLog(),\n               params: options,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            if (err && err.code) {\n               this.AB.notify.developer(err, {\n                  context: \"AppBuilder:ABModel:logs(): Error\",\n                  options,\n               });\n            }\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method limit\n    * set the limit value for this set of data\n    * @param {integer} limit  the number or elements to return in this call\n    * @return {ABModel} this object that is chainable.\n    */\n   limit(limit) {\n      this._limit = limit;\n      return this;\n   }\n\n   /**\n    * @method skip\n    * set the skip value for this set of data\n    * @param {integer} skip  the number or elements to skip\n    * @return {ABModel} this object that is chainable.\n    */\n   skip(skip) {\n      this._skip = skip;\n      return this;\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_update);\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestItem(id),\n               params: values,\n            },\n            { key: jobID, context: { resolve, reject } }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // If we do not have socket updates available, then trigger an\n            //    // update event with this data.\n            //    if (this.AB.Network.type() != \"socket\") {\n            //       this.AB.emit(\"ab.datacollection.update\", {\n            //          objectId: this.object.id,\n            //          data,\n            //       });\n            //    }\n            // })\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err /*, data */) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            // this.normalizeData(data);\n            resolve(true);\n            // what about checking for socket updates?\n         });\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestBatch(),\n               params: {\n                  rowIds,\n                  values,\n               },\n            },\n            { key: jobID, context: {} }\n         )\n            // .then(() => {\n            //    resolve(true);\n            // })\n            .catch(reject);\n      });\n   }\n};\n","//\n// ABModelAPI\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelAPI extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond = {}) {\n      cond.isAPI = true;\n      cond.url = this.object?.request?.url;\n\n      return super.findAll(cond);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchCreate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   async create(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.create() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.delete() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.update() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchUpdate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","//\n// ABModelQuery\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelQuery extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchCreate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.create() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.delete() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.update() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchUpdate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","const ABObjectCore = require(\"../core/ABObjectCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n// NOTE: this has been moved to NetworkRestSocket:\n//\n// // Start listening for server events for object updates and call triggerEvent as the callback\n// if (typeof io != \"undefined\") {\n//    io.socket.on(\"ab.object.update\", function (msg) {\n//       AB.emit(\"ab.object.update\", {\n//          objectId: msg.objectId,\n//          data: msg.data,\n//       });\n//    });\n// } else {\n//    console.error(\"TODO: ABObject: configure Socket.io\");\n// }\n\n// io.socket.on(\"ab.object.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObject extends ABObjectCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen for our ABFields.\"definition.updated\"\n      this.fields().forEach((f) => {\n         f.on(\"definition.updated\", (field) => {\n            // create a new Field with the updated def\n            var def = this.AB.definitionByID(field.id);\n            if (!def) return;\n\n            var newField = this.AB.fieldNew(def, this);\n\n            // we want to keep the same fieldID order:\n            var newFields = [];\n            this.fields().forEach((f) => {\n               if (f.id === field.id) {\n                  newFields.push(newField);\n                  return;\n               }\n               newFields.push(f);\n            });\n\n            this._fields = newFields;\n         });\n      });\n\n      // listen\n      // this.AB.on(\"ab.object.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our migrateXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this._handler_object_migrate = (context, err, response) => {\n         // NOTE:\n         var pending = this._pendingNetworkRequests?.[context.uuid];\n         if (err) {\n            pending?.reject(err);\n            return;\n         }\n         pending?.resolve(response);\n      };\n      this.AB.Network.on(\"object.migrate\", this._handler_object_migrate);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABObject.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.objectByID(this.id);\n\n      // prevent doing this multiple times:\n      if (this._pendingNetworkRequests) {\n         // remove object.migrate listener\n         this.AB.Network.removeListener(\n            \"object.migrate\",\n            this._handler_object_migrate\n         );\n\n         // transfer the pending network requests\n         newObj._pendingNetworkRequests = this._pendingNetworkRequests;\n         this._pendingNetworkRequests = null;\n      }\n\n      return newObj;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\tlabelFormat: 'xxxxx',\n\t\t\tisImported: 1/0,\n\t\t\tisExternal: 1/0,\n\t\t\turlPath:'string',\n\t\t\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\t\t\ttranslations:[\n\t\t\t\t{}\n\t\t\t],\n\t\t\tfields:[\n\t\t\t\t{ABDataField}\n\t\t\t]\n\t\t}\n\t\t*/\n\n      super.fromValues(attributes);\n\n      if (this.workspaceViews) this.workspaceViews.fromObj(attributes);\n   }\n\n   //// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.objects((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Object name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      // Check the common validations:\n      // TODO:\n      // if (!inputValidator.validate(values.label)) {\n      // \t_logic.buttonSaveEnable();\n      // \treturn false;\n      // }\n\n      return validator;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(data) {\n      var validator = this.AB.Validation.validator();\n      this.fields().forEach((f) => {\n         // check if value was passed, if so validate it\n         if (data.hasOwnProperty(f.columnName)) f.isValidData(data, validator);\n      });\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @param {obj} values  the initial values for this field.\n    *\t\t\t\t\t\t{ key:'{string}'} is required\n    * @return {ABField}\n    */\n   // fieldNew ( values ) {\n   // \t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n   // \treturn ABFieldManager.newField( values, this );\n   // }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      /*\n        return new Promise((resolve, reject) => {\n            // Remove the import object, then its model will not be destroyed\n            if (this.isImported) {\n                this.application\n                    .objectDestroy(this)\n                    .catch(reject)\n                    .then(() => {\n                        resolve();\n                    });\n\n                return;\n            }\n\n            // OK, some of our Fields have special follow up actions that need to be\n            // considered when they no longer exist, so before we simply drop this\n            // object/table, drop each of our fields and give them a chance to clean up\n            // what needs cleaning up.\n\n            // ==> More work, but safer.\n            var fieldDrops = [];\n            this.fields().forEach((f) => {\n                fieldDrops.push(f.destroy());\n            });\n\n            Promise.all(fieldDrops)\n                .then(() => {\n                    return new Promise((next, err) => {\n                        // now drop our table\n                        // NOTE: our .migrateXXX() routines expect the object to currently exist\n                        // in the DB before we perform the DB operations.  So we need to\n                        // .migrateDrop()  before we actually .objectDestroy() this.\n                        this.migrateDrop()\n                            .then(() => {\n                                // finally remove us from the application storage\n                                return this.application.objectDestroy(this);\n                            })\n                            .then(next)\n                            .catch(err);\n                    });\n                })\n\n                // flag .disable to queries who contains this removed object\n                .then(() => {\n                    return new Promise((next, err) => {\n                        this.application\n                            .queries(\n                                (q) =>\n                                    q.objects((o) => o.id == this.id).length > 0\n                            )\n                            .forEach((q) => {\n                                q._objects = q.objects((o) => o.id != this.id);\n\n                                q.disabled = true;\n                            });\n\n                        next();\n                    });\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n */\n\n      var removeFromApplications = () => {\n         var allRemoves = [];\n         this.AB.applications().forEach((app) => {\n            allRemoves.push(app.objectRemove(this));\n         });\n         return Promise.all(allRemoves);\n      };\n\n      var disableRelatedQueries = () => {\n         return new Promise((next /*, err */) => {\n            this.AB.queries(\n               (q) => q.objects((o) => o.id == this.id).length > 0\n            ).forEach((q) => {\n               // q._objects = q.objects((o) => o.id != this.id);\n\n               q.disabled = true;\n            });\n\n            next();\n         });\n      };\n\n      try {\n         // 1) remove us from all Application:\n         await removeFromApplications();\n\n         // 2) disable any connected Queries\n         await disableRelatedQueries();\n\n         // if an imported Object (FederatedTable, Existing Table, etc...)\n         // then skip this step\n         if (this.isImported) {\n            return Promise.resolve();\n         }\n\n         // time to remove my table:\n         // NOTE: our .migrateXXX() routines expect the object to currently exist\n         // in the DB before we perform the DB operations.  So we need to\n         // .migrateDrop()  before we actually .destroy() this.\n         await this.migrateDrop();\n\n         // now remove my definition\n\n         // start with my fields:\n         var fieldDrops = [];\n\n         // Only ABObjects should attempt any fieldDrops.\n         // ABObjectQueries can safely skip this step:\n         if (this.type == \"object\") {\n            var allFields = this.fields();\n            this._fields = []; // clear our field counter so we don't retrigger\n            // this.save() on each field.destroy();\n\n            allFields.forEach((f) => {\n               fieldDrops.push(f.destroy());\n            });\n         }\n         await Promise.all(fieldDrops);\n\n         await super.destroy();\n         this.emit(\"destroyed\");\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.destroy(): error destroying object.\",\n         });\n      }\n\n      // return Promise.resolve()\n      //    .then(() => {\n      //       // 1) remove us from all Application:\n      //       return removeFromApplications();\n      //    })\n      //    .then(() => {\n      //       // 2) disable any connected Queries\n      //       return disableRelatedQueries();\n      //    })\n      //    .then(() => {\n      //       // if an imported Object (FederatedTable, Existing Table, etc...)\n      //       // then skip this step\n      //       if (this.isImported) {\n      //          return Promise.resolve();\n      //       }\n\n      //       // time to remove my table:\n      //       // NOTE: our .migrateXXX() routines expect the object to currently exist\n      //       // in the DB before we perform the DB operations.  So we need to\n      //       // .migrateDrop()  before we actually .destroy() this.\n      //       return this.migrateDrop();\n      //    })\n      //    .then(() => {\n      //       // now remove my definition\n\n      //       // start with my fields:\n      //       var fieldDrops = [];\n\n      //       // Only ABObjects should attempt any fieldDrops.\n      //       // ABObjectQueries can safely skip this step:\n      //       if (this.type == \"object\") {\n      //          var allFields = this.fields();\n      //          this._fields = []; // clear our field counter so we don't retrigger\n      //          // this.save() on each field.destroy();\n\n      //          allFields.forEach((f) => {\n      //             fieldDrops.push(f.destroy());\n      //          });\n      //       }\n\n      //       return Promise.all(fieldDrops)\n      //          .then(() => {\n      //             // now me.\n      //             return super.destroy();\n      //          })\n      //          .then(() => {\n      //             this.emit(\"destroyed\");\n      //          });\n      //    });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      var isAdd = false;\n\n      // if this is our initial save()\n      if (!this.id) {\n         this.label = this.label || this.name;\n         isAdd = true;\n      }\n\n      try {\n         await super.save();\n         if (isAdd && !skipMigrate) {\n            await this.migrateCreate();\n         }\n         return this;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.save()\",\n            obj: this.toObj(),\n         });\n         throw err;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.objectWorkspaceViews = this.workspaceViews?.toObj();\n\n      return result;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network.post(\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   migrateDrop() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network[\"delete\"](\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth /*, oldWidth */) {\n      var fieldID = null;\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == columnName) {\n            fieldID = this._fields[i].id;\n            break;\n            // this._fields[i].settings.width = newWidth;\n         }\n      }\n\n      // Johnny: This is better but still not right.  the ABObject should not be\n      // storing sizes for field widths.  That is a function of the UI and which\n      // Grid is being displayed.  THAT GRID should be storing a column width\n      // locally.\n      // TODO: once we have v2 in place.\n\n      var fieldSettings = this.AB.localSettings(fieldID);\n      fieldSettings = fieldSettings || {};\n      fieldSettings.width = newWidth;\n\n      return this.AB.localSettings(fieldID, fieldSettings);\n      // return this.save();\n   }\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      summaryColumns = summaryColumns || [];\n      countColumns = countColumns || [];\n\n      var headers = [];\n      // var columnNameLookup = {};\n\n      // get the header for each of our fields:\n      this.fields().forEach((f) => {\n         var header = f.columnHeader({\n            isObjectWorkspace: isObjectWorkspace,\n            editable: isEditable,\n         });\n\n         if (isEditable) {\n            header.validationRules = f.settings.validationRules;\n         }\n\n         header.alias = f.alias || undefined; // query type\n         header.fieldID = f.id;\n         // header.fieldURL = f.urlPointer();\n\n         // if the field specifies a width\n         if (f.settings.width != 0) {\n            header.width = f.settings.width;\n         }\n\n         // if the User has already updated a local width for this\n         var fieldSettings = this.AB.localSettings(f.id);\n         if (fieldSettings && fieldSettings.width) {\n            if (!header.width || fieldSettings.width > header.width) {\n               // set column width to the customized width\n               header.width = fieldSettings.width;\n            }\n         }\n\n         if (!header.width) {\n            // set column width to adjust:true by default;\n            header.adjust = true;\n         }\n\n         // add the summary footer\n         if (summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               header.footer = { content: \"totalColumn\", field: f };\n            } else {\n               header.footer = { content: \"summColumn\" };\n            }\n         }\n         // add the count footer\n         else if (countColumns.indexOf(f.id) > -1)\n            header.footer = { content: \"countColumn\" };\n\n         headers.push(header);\n         // columnNameLookup[header.id] = f.columnName; // name => id\n      });\n\n      // update our headers with any settings applied in the Object Workspace\n      /*\n      // In v2: this is handled by the ABDesigner\n      //\n      if (isObjectWorkspace) {\n         let hiddenFieldList = [];\n\n         if (hiddenFieldNames && hiddenFieldNames.length > 0)\n            hiddenFieldList = hiddenFieldNames;\n         // else if (this.workspaceHiddenFields)\n         //    hiddenFieldList = this.workspaceHiddenFields;\n\n         if (hiddenFieldList.length > 0) {\n            hiddenFieldList.forEach((hfID) => {\n               headers.forEach((h) => {\n                  if (columnNameLookup[h.id] == hfID) {\n                     h.hidden = true;\n                  }\n               });\n            });\n         }\n      }\n      */\n\n      return headers;\n   }\n\n   // after a component has rendered, tell each of our fields to perform\n   // any custom display operations\n   // @param {Webix.DataStore} data a webix datastore of all the rows effected\n   //        by the render.\n   customDisplays(data, App, DataTable, rowIds, isEditable) {\n      if (!data || !data.getFirstId) return;\n\n      // var fields = this.fields(f => this.workspaceHiddenFields.indexOf(f.columnName) < 0);\n      let fields = [];\n      DataTable.eachColumn((columnName) => {\n         let field = this.fields((f) => f.columnName == columnName)[0];\n         if (field) fields.push(field);\n      });\n\n      if (rowIds != null) {\n         rowIds.forEach((id) => {\n            let row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  let node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n         });\n      } else {\n         let id = data.getFirstId();\n         while (id) {\n            var row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  var node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n            id = data.getNextId(id);\n         }\n      }\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = `{${defaultField.id}}`;\n         else\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`; // show id of row\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   currentView() {\n      return this.workspaceViews.getCurrentView();\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.fields().forEach((f) => {\n         allWarnings = allWarnings.concat(f.warnings());\n      });\n\n      this.indexes().forEach((i) => {\n         allWarnings = allWarnings.concat(i.warnings());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allFields = this.fields();\n\n      if (allFields.length == 0) {\n         this.warningsMessage(\"has no fields\");\n      }\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      (this._unknownIndex || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown index id[${id}]`);\n      });\n\n      allFields.forEach((f) => {\n         f.warningsEval();\n      });\n\n      this.indexes().forEach((i) => {\n         i.warningsEval();\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Object[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n      // this.emit(\"warning\", warnMsg, data);\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const atomicjs = require(\"atomicjs\");\nconst ABObjectApiCore = require(\"../core/ABObjectApiCore\");\n\nmodule.exports = class ABObjectApi extends ABObjectApiCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   async fetchData(insertDataMax = 20) {\n      if (this.isFetched) return;\n\n      const headers = this.headers;\n\n      const response = await atomicjs(this.request.url, {\n         method: this.request.verb,\n         headers,\n         data: {},\n         timeout: null,\n         withCredentials: false,\n      });\n\n      let parsedResponse = this.dataFromKey(response);\n\n      const model = this.model();\n\n      if (parsedResponse.length == null || parsedResponse.length === 0) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[f.columnName];\n         });\n\n         await model.create(data);\n\n         return;\n      }\n\n      let pendingModelCreate = [];\n\n      for (let i = 0; i < parsedResponse.length; i++) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[i][f.columnName];\n         });\n\n         pendingModelCreate.push(model.create(data));\n\n         if (pendingModelCreate % insertDataMax === 0)\n            await Promise.all(pendingModelCreate);\n      }\n\n      if (pendingModelCreate.length > 0) await Promise.all(pendingModelCreate);\n\n      this.isFetched = true;\n\n      await this.save();\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      return await super.save(true);\n   }\n};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectExternal\n * These are ABObjects that ... (might need to be refactored out?)\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectExternal extends ABObject {};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectImport\n * These are ABObjects that were Imported from existing Tables in the\n * system.\n *\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectImport extends ABObject {};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nconst ABObjectQueryCore = require(\"../core/ABObjectQueryCore\");\n\nvar ABFactory = null;\nif (typeof io != \"undefined\") {\n   io.socket.on(\"ab.query.update\", function (msg) {\n      if (ABFactory) {\n         ABFactory.emit(\"ab.query.update\", {\n            queryId: msg.queryId,\n            data: msg.data,\n         });\n      } else {\n         console.error(\n            \"ABObjectQuery:: received io.socket msg before ABFactory is defined\"\n         );\n         console.error(\"TODO: move this to ABFactory!\");\n      }\n   });\n} else {\n   console.error(\"TODO: install socket.io client for sails updates.\");\n}\n\n// io.socket.on(\"ab.query.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObjectQuery extends ABObjectQueryCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      if (!ABFactory) {\n         ABFactory = AB;\n      }\n      // listen\n      this.AB.on(\"ab.query.update\", (data) => {\n         if (this.id == data.queryId) this.fromValues(data.data);\n      });\n\n      // .fromValues() should already have been called in super()\n      // so now add in our conditionScan()\n      // NOTE: this can be folded into the Core once filterComplex\n      // is fully implemented and not on Platform only.\n\n      // now scan our conditions to make sure they are\n      // 1) reference fields that exist in our Query\n      // 2) completely filled out conditions.\n      this.conditionScan(this.where);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObjectQuery\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   // destroy() {\n   //    return super.destroy().then(() => {\n   //       console.error(\"Move .queryRemove() to Appbuilder Designer.\");\n   //       // return this.AB.queryRemove(this);\n   //    });\n   // }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObjectQuery with it's parent ABApplication\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   // async save() {\n   //    try {\n   //       await super.save();\n   //       return this;\n   //    } catch (err) {\n   //       this.AB.notify.developer(err, {\n   //          context: \"ABObjectQuery.save()\",\n   //          query: this.toObj(),\n   //       });\n   //       throw err;\n   //    }\n   // }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *             { }\n    * @param {bool} shouldAliasColumn\n    *        should we add the object alias to the columnNames?\n    *        this is primarily used on the web client\n    */\n   importFields(fieldSettings) {\n      super.importFields(fieldSettings);\n\n      this._fields.forEach((fieldEntry) => {\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         fieldEntry.field.columnName = `${fieldEntry.alias}.${fieldEntry.field.columnName}`;\n      });\n   }\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth, oldWidth) {\n      let field = this.fields((f) => f.columnName == columnName)[0];\n      if (field) {\n         field.settings.width = newWidth;\n\n         return this.save();\n      } else {\n         return Promise.resolve();\n      }\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      var headers = super.columnHeaders(\n         isObjectWorkspace,\n         isEditable,\n         summaryColumns,\n         countColumns,\n         hiddenFieldNames\n      );\n\n      headers.forEach((h) => {\n         // pull object by alias\n         let object = this.objectByAlias(h.alias);\n         if (!object) return;\n\n         let field = object.fieldByID(h.fieldID);\n         if (!field) return;\n\n         // NOTE: query v1\n         let alias = \"\";\n         if (Array.isArray(this.joins())) {\n            alias = field.object.name;\n         } else {\n            alias = h.alias;\n         }\n\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         h.id = `${alias}.${field.columnName}`;\n\n         // label\n         if (this.settings && this.settings.hidePrefix) {\n            h.header = `${field.label || \"\"}`;\n         } else {\n            h.header = `${field.object.label || \"\"}.${field.label || \"\"}`;\n         }\n\n         // icon\n         if (field.settings && field.settings.showIcon) {\n            h.header = `<span class=\"webix_icon fa fa-${field.fieldIcon()}\"></span>${\n               h.header\n            }`;\n         }\n\n         // If this query supports grouping, then add folder icon to display in grid\n         if (this.isGroup) {\n            let originTemplate = h.template;\n\n            h.template = (item, common) => {\n               if (item[h.id])\n                  return (\n                     common.icon(item, common) +\n                     (originTemplate\n                        ? originTemplate(item, common, item[h.id])\n                        : item[h.id])\n                  );\n               else return \"\";\n            };\n         }\n\n         h.adjust = true;\n         h.minWidth = 220;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @method conditionScan()\n    * Scan the provided condition object and determine if there are any\n    * configuration issues.\n    * @param {obj} rule\n    *        the QueryBuilder rule that we are scanning.\n    * @param {array} listWarnings\n    *        An array of warnings that we should add our notices to.\n    */\n   conditionScan(rule) {\n      if (!rule) {\n         return;\n      }\n\n      if (rule.glue) {\n         (rule.rules || []).forEach((r) => {\n            this.conditionScan(r);\n         });\n         return;\n      }\n\n      // 1) we need to have any key as one of our fields.\n      let field = this.fieldByID(rule.key);\n      if (!field && rule.key != \"this_object\") {\n         this.warningsMessage(\n            \"condition does not reference one of our fields\",\n            {\n               rule,\n            }\n         );\n      }\n\n      // 2) completely filled out conditions.\n      if (!this._conditionCheck) {\n         this._conditionCheck = this.AB.filterComplexNew(\n            `${this.id}_conditionCheck`\n         );\n         // {FilterComplex} ._conditionCheck\n         // has our .isConditionComplete() method.\n      }\n      if (!this._conditionCheck.isConditionComplete(rule)) {\n         this.warningsMessage(\"incomplete condition definition\", {\n            rule,\n         });\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      this.conditionScan(this.where);\n\n      /// include importFields() warnings:\n      this.__missingObject.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: could not resolve object[${\n               f.objectID\n            }] for fieldSetting ${JSON.stringify(f)}`,\n            {\n               fieldInfo: f,\n            }\n         );\n      });\n\n      this.__missingFields.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: Object[${f.objID}] could not find field[${\n               f.fieldID\n            }] for fieldSetting ${JSON.stringify(f.fieldInfo)}`,\n            {\n               object: f.objID,\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__cantFilter.forEach((f) => {\n         this.warningsMessage(\n            `Field[${f.field.id}] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] did not pass .canFilterField`,\n            {\n               field: f.field.toObj(),\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__duplicateFields.forEach((f) => {\n         this.warningsMessage(\n            `Field[${\n               f.fieldInfo.fieldID\n            }] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] is a duplicate`,\n            {\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__linkProblems.forEach((f) => {\n         this.warningsMessage(f.message, f.data);\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Query[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABProcessCore = require(\"../core/ABProcessCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcess extends ABProcessCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this._unknownShapes = [];\n      // {array} [ BPMN:Shape, ... ]\n      // Generic Shapes that are added to the Process are registered here.\n      // We will list these as warnings to the ABDesigner.\n\n      // listen\n      this.AB.on(\"ab.abprocess.update\", (data) => {\n         if (this.id == data.objectId) this.fromValues(data.data);\n      });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // remove all my Elements\n      var allElements = this.elements();\n      var allDestroy = [];\n      allElements.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  // allow normal processing to contine now:\n                  resolve();\n               })\n               .then(() => {\n                  // in the background\n                  // remove this reference from ALL Applications that link\n                  // to me:\n                  console.error(\n                     \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n                  );\n                  var appsWithProcess = this.AB.applications().find((a) => {\n                     return a.hasProcess(this);\n                  });\n                  if (appsWithProcess.length > 0) {\n                     appsWithProcess.forEach((a) => {\n                        a.processRemove(this);\n                     });\n                  }\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // if this is an update:\n      // if (this.id) {\n      // \treturn ABDefinition.update(this.id, this.toDefinition());\n      // } else {\n\n      // \treturn ABDefinition.create(this.toDefinition());\n      // }\n\n      // make sure all our tasks have save()ed.\n      var allSaves = [];\n      var allTasks = this.elements();\n      allTasks.forEach((t) => {\n         allSaves.push(t.save());\n      });\n      return Promise.all(allSaves).then(() => {\n         // now we can save our Process definition\n         return this.toDefinition()\n            .save()\n            .then((data) => {\n               // if I didn't have an .id then this was a create()\n               // and I need to update my data with the generated .id\n\n               if (!this.id) {\n                  this.id = data.id;\n               }\n\n               // Also, our embedded elements now all have .ids\n               // where they might not have before.  So now\n               // rebuild our this._elements hash with all id\n               var _new = {};\n               let _old = this._elements;\n               Object.keys(this._elements).forEach((k) => {\n                  _new[this._elements[k].id] = this._elements[k];\n               });\n               this._elements = _new;\n\n               // check to see if an update happened and then make\n               // sure we have that saved.\n               let needSave = false;\n               Object.keys(_new).forEach((k) => {\n                  if (!_old[k]) {\n                     needSave = true;\n                  }\n               });\n\n               if (needSave) {\n                  return this.save();\n               }\n            });\n      });\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.processes((o) => {\n            return o.name.toLowerCase() == this.name.toLowerCase();\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcess[OBJ]}\n    */\n   elementNewForModelDefinition(element) {\n      var task = this.AB.processElementNewForModelDefinition(element, this);\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   /**\n    * @method unknownShape()\n    * store a reference to a BPMN Shape that is in our XML diagram,\n    * but we don't have an element for.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShape(shape) {\n      this.unknownShapeRemove(shape);\n      this._unknownShapes.push(shape);\n   }\n\n   /**\n    * @method unknownShapeRemove()\n    * make sure we no longer track the provided BPMN Shape as an unknown shape.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShapeRemove(shape) {\n      this._unknownShapes = this._unknownShapes.filter((s) => s.id != shape.id);\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.elements().forEach((e) => {\n         e.warningsEval();\n         allWarnings = allWarnings.concat(e.warnings());\n      });\n\n      if (this.elements().length == 0) {\n         allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      }\n\n      // perform a check of our xml document to see if we have any unknown\n      // shapes\n      if (!this._DOMParser) {\n         if (window.DOMParser) {\n            // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n            this._DOMParser = function (xmlStr) {\n               return new window.DOMParser().parseFromString(\n                  xmlStr,\n                  \"text/xml\"\n               );\n            };\n         } else if (\n            typeof window.ActiveXObject != \"undefined\" &&\n            new window.ActiveXObject(\"Microsoft.XMLDOM\")\n         ) {\n            this._DOMParser = function (xmlStr) {\n               var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n               xmlDoc.async = \"false\";\n               xmlDoc.loadXML(xmlStr);\n               return xmlDoc;\n            };\n         } else {\n            throw new Error(\"No XML parser found\");\n         }\n      }\n\n      // find any references to our generic shapes\n      let xml = this._DOMParser(this.xmlDefinition);\n      const genericShapes = [\n         \"bpmn2:startEvent\",\n         \"bpmn2:task\",\n         \"bpmn2:endEvent\",\n      ];\n      genericShapes.forEach((s) => {\n         let allElements = xml.getElementsByTagName(s);\n         for (let x = 0; x < allElements.length; x++) {\n            // if we don't know about this shape\n            let ele = allElements[x];\n            let myEle = this.elementForDiagramID(allElements[x].id);\n            if (!myEle) {\n               this.unknownShape(allElements[x]);\n            }\n         }\n      });\n\n      // if any unknown shapes have been reported:\n      if (this._unknownShapes.length) {\n         allWarnings.push({\n            message: \"Generic Tasks still undefined.\",\n            data: {},\n         });\n      }\n\n      return allWarnings;\n   }\n};\n","const ABStepCore = require(\"../core/ABStepCore\");\n\n// let L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABStep extends ABStepCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // debugger;\n\n      return new Promise((resolve, reject) => {\n         this.toDefinition()\n            .destroy()\n            .then(() => {\n               resolve();\n            })\n            .catch((err) => {\n               reject(err);\n            });\n      });\n\n      // remove all my Elements\n      // var allElements = this.elements();\n      // var allDestroy = [];\n      // allElements.forEach((e) => {\n      //    allDestroy.push(e.destroy());\n      // });\n\n      // return Promise.all(allDestroy).then(() => {\n      //    // now remove myself\n      //    return new Promise((resolve, reject) => {\n      //       this.toDefinition()\n      //          .destroy()\n      //          .then(() => {\n      //             // allow normal processing to contine now:\n      //             resolve();\n      //          })\n      //          .then(() => {\n      //             // in the background\n      //             // remove this reference from ALL Applications that link\n      //             // to me:\n      //             console.error(\n      //                \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n      //             );\n      //             var appsWithProcess = this.AB.applications().find((a) => {\n      //                return a.hasProcess(this);\n      //             });\n      //             if (appsWithProcess.length > 0) {\n      //                appsWithProcess.forEach((a) => {\n      //                   a.processRemove(this);\n      //                });\n      //             }\n      //          })\n      //          .catch((err) => {\n      //             reject(err);\n      //          });\n      //    });\n      // });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      // debugger;\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n};\n","const ABViewManagerCore = require(\"../core/ABViewManagerCore\");\n\nmodule.exports = class ABViewManager extends ABViewManagerCore {};\n","const ABViewManagerMobileCore = require(\"../core/ABViewManagerMobileCore\");\n\nmodule.exports = class ABViewManagerMobile extends ABViewManagerMobileCore {};\n","var L = null;\n// multilingual Label fn()\n\nmodule.exports = class CSVImporter {\n   constructor(Label) {\n      // {ABMultilingual.label()} function.\n      //\n      if (!L) {\n         L = Label;\n\n         // if this was a v1: App param:\n         if (Label.Label) {\n            L = Label.Label;\n         }\n      }\n   }\n\n   /**\n    * @method getSeparateItems()\n    * Return the options of how the CSV values are separated.\n    * @return {array}  [ {id, value} ... ]\n    */\n   getSeparateItems() {\n      return [\n         { id: \",\", value: L(\"Comma (,)\") },\n         { id: \"\\t\", value: L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\") },\n         { id: \";\", value: L(\"Semicolon (;)\") },\n         { id: \"s\", value: L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    * @param {*} fileInfo\n    *        https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo)) return Promise.reject();\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new window.FileReader();\n         reader.onload = (e) => {\n            let result = [];\n\n            // split lines\n            let dataRows = reader.result\n               .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n               .filter((row) => row && row.length > 0);\n\n            // split columns\n            (dataRows || []).forEach((row) => {\n               let dataCols = [];\n               if (separatedBy == \",\") {\n                  // NOTE: if the file contains ,, .match() can not reconize this empty string\n                  row = row.replace(/,,/g, \", ,\");\n\n                  // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n                  dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n               } else {\n                  dataCols = row.split(separatedBy);\n               }\n\n               result.push(dataCols.map((dCol) => this.reformat(dCol)));\n            });\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method getGuessDataType\n    * return our best guess of what type of data for the requested column.\n    * @param {array} dataRows\n    *        The data we are evaluating:\n    *        [\n    *           [\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    *           [\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t ]\n    * @param colIndex {Number}\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         // {various} the data pulled from the requested row/column\n         repeatNum = 10;\n      // {integer} how many rows do we want to scan trying to find a value\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data == null || data == \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         // determine which type of string this might be:\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","const FilterComplexCore = require(\"../core/FilterComplexCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n/**\n * @function _toInternal()\n * translate our external QB conditions into our internal format that\n * makes the cond.rule unique by adding the field.id to the rule.\n * @param {obj} cond - {\n *                         rules: [\n *                            {\n *                               alias: string || undefined,\n *                               key: uuid,\n *                               rule: string,\n *                               value: object,\n *                            }\n *                         ]\n *                      }\n *        the QB condition format we use exernally in our AB system.\n */\nfunction _toInternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.key) {\n      // Convert to format\n      // {\n      //    glue: \"and\",\n      //    rules: [\n      //       {\n      //          field: \"test_col\",\n      //          condition: { type: \"greater\", filter: 100 },\n      //       },\n      //    ],\n      // }\n      const field = fields.filter((f) => f.id == cond.key)[0];\n      cond.field = field?.id;\n\n      cond.condition = {\n         type: cond.rule,\n         filter: cond.value,\n      };\n\n      if (Array.isArray(cond.value)) cond.includes = cond.value;\n      else cond.includes = cond.value?.split?.(\",\") ?? [];\n\n      if (field?.key == \"date\" || field?.key == \"datetime\") {\n         cond.condition.filter = cond.condition.filter\n            ? AB.rules.toDate(cond.condition.filter)\n            : null;\n\n         cond.includes = cond.includes.map((v) => AB.rules.toDate(v));\n      }\n\n      delete cond.key;\n      delete cond.rule;\n      delete cond.value;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toInternal(r, fields);\n      });\n   }\n}\n\n/**\n * @function _toExternal()\n * translate our internal QB conditions into our external format that\n * where the cond.rule no longer has the field.id.\n * @param {obj} cond - {\n *                         glue: \"and\",\n *                         rules: [\n *                            {\n *                               field: \"test_col\",\n *                               condition: { type: \"greater\", filter: 100 },\n *                            },\n *                         ],\n *                      }\n *        the QB condition format we use internally\n */\nfunction _toExternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.field) {\n      let field = fields.filter((f) => f.id == cond.field)[0];\n      // cond.alias = alias || undefined;\n      cond.key = field?.id ?? cond.field;\n      cond.condition = cond.condition ?? {};\n      cond.rule = cond.condition.type;\n\n      let values =\n         cond.includes.map((v) => (v instanceof Date ? v.toISOString() : v)) ??\n         [];\n\n      // Convert multi-values to a string\n      if (cond.condition.filter) {\n         if (cond.condition.filter instanceof Date) {\n            if (values.indexOf(cond.condition.filter.toISOString()) < 0) {\n               values.push(cond.condition.filter);\n            }\n         } else if (values.indexOf(cond.condition.filter) < 0)\n            values.push(cond.condition.filter);\n      }\n\n      cond.value = values\n         .map((v) => {\n            // Convert date format\n            if (field && (field.key == \"date\" || field.key == \"datetime\"))\n               return field.exportValue(new Date(v));\n\n            return v;\n         })\n         .join(\",\");\n\n      delete cond.field;\n      delete cond.type;\n      delete cond.includes;\n      delete cond.condition;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toExternal(r, fields);\n      });\n   }\n}\n\nmodule.exports = class FilterComplex extends FilterComplexCore {\n   constructor(idBase, AB, options = {}) {\n      idBase = idBase ?? \"ab_filterComplex\";\n\n      super(idBase, AB);\n\n      this._options = options ?? {};\n\n      this._initComplete = false;\n      // {bool}\n      // trying to prevent multiple .init() from being called due to\n      // various ways of initializing the component.\n\n      this.observing = false;\n      // {bool}\n      // try to prevent multiple observers generating >1 \"changed\"\n      // event.\n\n      let labels = (this.labels = {\n         common: (AB._App ?? {}).labels,\n         component: {\n            and: L(\"And\"),\n            or: L(\"Or\"),\n\n            thisObject: L(\"This Object\"),\n            inQuery: L(\"In Query\"),\n            notInQuery: L(\"Not In Query\"),\n            inQueryField: L(\"By Query Field\"),\n            notInQueryField: L(\"Not By Query Field\"),\n\n            inQueryFieldQueryPlaceholder: L(\"Choose a Query\"),\n            inQueryFieldFieldPlaceholder: L(\"Choose a Field\"),\n\n            sameAsUser: L(\"Same As User\"),\n            notSameAsUser: L(\"Not Same As User\"),\n\n            sameAsField: L(\"Same As Field\"),\n            notSameAsField: L(\"Not Field\"),\n\n            inDataCollection: L(\"In Data Collection\"),\n            notInDataCollection: L(\"Not In Data Collection\"),\n\n            containsCondition: L(\"contains\"),\n            notContainsCondition: L(\"doesn't contain\"),\n            isCondition: L(\"is\"),\n            isNotCondition: L(\"is not\"),\n            isEmpty: L(\"is empty\"),\n            isNotEmpty: L(\"is not empty\"),\n\n            beforeCondition: L(\"is before\"),\n            afterCondition: L(\"is after\"),\n            onOrBeforeCondition: L(\"is on or before\"),\n            onOrAfterCondition: L(\"is on or after\"),\n            beforeCurrentCondition: L(\"is before current date\"),\n            afterCurrentCondition: L(\"is after current date\"),\n            onOrBeforeCurrentCondition: L(\"is on or before current date\"),\n            onOrAfterCurrentCondition: L(\"is on or after current date\"),\n            onLastDaysCondition: L(\"last ... days\"),\n            onNextDaysCondition: L(\"next ... days\"),\n\n            equalCondition: L(\":\"),\n            notEqualCondition: L(\"≠\"),\n            lessThanCondition: L(\"<\"),\n            moreThanCondition: L(\">\"),\n            lessThanOrEqualCondition: L(\"≤\"),\n            moreThanOrEqualCondition: L(\"≥\"),\n\n            equalListCondition: L(\"equals\"),\n            notEqualListCondition: L(\"does not equal\"),\n\n            checkedCondition: L(\"is checked\"),\n            notCheckedCondition: L(\"is unchecked\"),\n\n            isCurrentUserCondition: L(\"is current user\"),\n            isNotCurrentUserCondition: L(\"is not current user\"),\n            containsCurrentUserCondition: L(\"contains current user\"),\n            notContainsCurrentUserCondition: L(\"does not contain current user\"),\n\n            contextDefaultOption: L(\"choose option\"),\n            equalsProcessValue: L(\"equals process value\"),\n            notEqualsProcessValueCondition: L(\"not equals process value\"),\n            inProcessValueCondition: L(\"in process value\"),\n            notInProcessValueCondition: L(\"not in process value\"),\n         },\n      });\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         popup: this.unique(`${idBase}_popup`),\n         querybuilder: this.unique(`${idBase}_querybuilder`),\n         save: this.unique(`${idBase}_save`),\n      });\n\n      // Set current username\n      this.Account.username = this.AB.Account.username();\n\n      this._settings.recordRuleFieldOptions = [];\n\n      // webix UI definition:\n      this.ui = {\n         rows: [\n            {\n               view: \"layout\",\n               type: \"clean\",\n               borderless: this._options.borderless ?? true,\n               rows: [\n                  {\n                     id: ids.querybuilder,\n                     view: \"query\",\n                     data: () => [],\n                     // data: async (field) => await this.pullOptions(field),\n                     fields: [],\n                     disabled: true,\n                     height: this._options.height,\n                  },\n               ],\n            },\n            {\n               id: ids.save,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Save\"),\n               hidden: this._options.isSaveHidden ?? false,\n               click: () => {\n                  if (this.myPopup) this.myPopup.hide();\n                  this.emit(\"save\", this.getValue());\n               },\n            },\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options) {\n      if (this._initComplete) return;\n\n      super.init(options);\n\n      const el = $$(this.ids.querybuilder);\n\n      if (el) {\n         if (!this.observing) {\n            this.__blockOnChange = true;\n            el.getState().$observe(\"value\", (v) => {\n               if (this.__blockOnChange) return false;\n\n               this.emit(\"changed\", this.getValue());\n            });\n            this.__blockOnChange = false;\n\n            // HACK!! The process of setting the $observe() is actually\n            // calling the cb() when set.  This is clearing our .condition\n            // if we call init() after we have setValues(). which can happen\n            // when using the popUp() method.\n            let _cond = this.condition;\n            this.condition = _cond;\n            this.observing = true;\n         }\n         this._initComplete = true;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      let helper = () => true;\n\n      let $query = $$(this.ids.querybuilder);\n      if ($query) {\n         helper = $query.getFilterFunction();\n         return helper(rowData);\n      } else {\n         return super.isValid(rowData, condition);\n      }\n   }\n\n   /**\n    * @method isConditionComplete()\n    * Check a given condition entry and indicate if it is fully\n    * filled out.\n    * @param {obj} cond\n    *        The Condition object we are checking.  If a Macro\n    *        condition if provided: { glue:\"and\", rules:[] } then\n    *        this method will return True/False if All rules are\n    *        complete.\n    *        If an individual rule is provided, then it evaluates\n    *        the completness of that rule. { key, rule, value }\n    * @return {bool}\n    */\n   isConditionComplete(cond) {\n      if (!cond) return false;\n\n      let isComplete = true;\n      // start optimistically.\n\n      if (cond.glue) {\n         (cond.rules ?? []).forEach((r) => {\n            isComplete = isComplete && this.isConditionComplete(r);\n         });\n      } else {\n         // every condition needs a .key & .rule\n         if (!cond.key || cond.key == \"\") {\n            isComplete = false;\n         }\n\n         if (!cond.rule || cond.rule == \"\") {\n            isComplete = false;\n         }\n\n         if (isComplete) {\n            switch (cond.rule) {\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n               case \"same_as_user\":\n               case \"not_same_as_user\":\n               case \"less_current\":\n               case \"greater_current\":\n               case \"less_or_equal_current\":\n               case \"greater_or_equal_current\":\n               case \"is_empty\":\n               case \"is_not_empty\":\n               case \"checked\":\n               case \"unchecked\":\n                  // There are only a few rules that don't need a\n                  // value\n                  break;\n\n               default:\n                  // The rest do need a .value\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  break;\n            }\n         }\n      }\n\n      return isComplete;\n   }\n\n   setValue(settings) {\n      super.setValue(settings);\n      this.condition = settings;\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!settings) {\n            // Clear settings value of webix.query\n            el.define(\"value\", {\n               glue: \"and\",\n               rules: [],\n            });\n            return;\n         }\n\n         let qbSettings = this.AB.cloneDeep(settings);\n\n         // Settings should match a condition built upon our QB format:\n         // {\n         //    glue:\"and\",\n         //    rules:[\n         //       {\n         //          key:\"uuid\",\n         //          rule:\"\",\n         //          value:\"\"\n         //       }\n         //    ]\n         // }\n         // externally our key should be the field.id and the rules should be\n         // the \"contains\", \"not_contains\", \"equal\" ... keywords.\n         // However, internally, we convert these rules into .ids that are\n         // unique for each field (see uiInit()).  So when we bring in settings\n         // we need to translate them into our internal format:\n\n         _toInternal(qbSettings, this._Fields);\n\n         this.__blockOnChange = true;\n         el.define(\"value\", qbSettings);\n         this.__blockOnChange = false;\n      }\n   }\n\n   getValue() {\n      if ($$(this.ids.querybuilder)) {\n         let settings = this.AB.cloneDeep(\n            $$(this.ids.querybuilder).getState().value ?? {}\n         );\n\n         // what we pull out of the QB will have .rules in our internal format:\n         // {field.id}_{rule}  (see uiInit() )\n         // But we need to store them in our generic QB format for use outside\n         // our FilterComplex widget.\n         _toExternal(settings, this._Fields);\n         this.condition = settings;\n      }\n\n      return super.getValue();\n   }\n\n   fieldsLoad(fields = [], object = null) {\n      super.fieldsLoad(fields, object);\n      this.uiInit();\n   }\n\n   toShortHand() {\n      return \"Add Filters\";\n   }\n\n   uiInit() {\n      this.uiQueryCustomValue();\n\n      let el = $$(this.ids.querybuilder);\n      if (el) {\n         // Clear fields\n         while (el.config.fields.length > 0) {\n            el.config.fields.pop();\n         }\n         // Set fields\n         (this.fieldsToQB() ?? []).forEach((f) => {\n            el.config.fields.push(f);\n         });\n         if (el.config.fields.length) {\n            el.enable();\n         } else {\n            this.setValue(\"\");\n            el.disable();\n         }\n      }\n   }\n\n   // HACK: have to overwrite Webix Query's function to support our custom input requirement.\n   // HooWoo\n   uiQueryCustomValue() {\n      const $el = $$(this.ids.querybuilder);\n      if (!$el) return;\n\n      // window.query.views.filter.prototype.CreateFilter = (\n      $el.$app.require(\"jet-views\", \"filter\").prototype.CreateFilter = (\n         field,\n         type,\n         format,\n         conditions,\n         place\n      ) => {\n         let inputs = this.uiValue(field);\n\n         let ui = {\n            id: place.config.id,\n            view: \"filter\",\n            localId: \"filter\",\n            conditions: conditions,\n            field: field,\n            mode: type,\n            template: function (o) {\n               let str = o[field];\n               let parser =\n                  format ?? (type == \"date\" ? webix.i18n.dateFormatStr : null);\n               if (parser) str = parser(str);\n               return str;\n            },\n            inputs: inputs,\n            margin: 6,\n         };\n\n         let filter = webix.ui(ui, place);\n\n         // let data = [];\n         // const $query = $$(this.ids.querybuilder);\n         // if ($query) {\n         //    data = $query.app.getService(\"backend\").data(field);\n         // }\n         // filter.parse(data);\n\n         return filter;\n      };\n   }\n\n   uiValue(fieldColumnName) {\n      let result;\n\n      // Special case: this_object\n      if (fieldColumnName == \"this_object\") {\n         return []\n            .concat(this.uiQueryValue(\"this_object\"))\n            .concat(this.uiDataCollectionValue(\"this_object\"))\n            .concat(this.uiCustomValue(\"this_object\"))\n            .concat(this.uiContextValue(\"this_object\", \"uuid\"));\n      }\n\n      let field = (this._Fields ?? []).filter(\n         (f) => f.id == fieldColumnName\n      )[0];\n\n      switch (field?.key) {\n         case \"boolean\":\n            result = this.uiNoneValue(field);\n            break;\n         case \"connectObject\":\n            result = []\n               .concat(this.uiQueryValue(field))\n               .concat(this.uiUserValue(field))\n               .concat(this.uiDataCollectionValue(field))\n               .concat(this.uiContextValue(field))\n               .concat(this.uiNoneValue());\n            break;\n         case \"date\":\n         case \"datetime\":\n            result = [\"datepicker\", \"daterangepicker\"];\n            break;\n         case \"list\":\n            result = this.uiListValue(field);\n            break;\n         case \"user\":\n            result = []\n               .concat(this.uiNoneValue())\n               .concat(this.uiUserValue(field));\n            break;\n         // case \"number\":\n         //    result = [\"text\"];\n         //    break;\n         case \"string\":\n         case \"LongText\":\n         case \"email\":\n            result = this.uiNoneValue();\n            break;\n      }\n\n      // Add filter options to Custom index\n      const LinkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      if (\n         field?.settings?.isCustomFK &&\n         // 1:M\n         (LinkType == \"one:many\" ||\n            // 1:1 isSource = true\n            (LinkType == \"one:one\" && field?.settings?.isSource))\n      ) {\n         result = (result ?? []).concat(this.uiTextValue(field));\n      } else if (field?.key != \"connectObject\") {\n         result = (result ?? [])\n            .concat(this.uiTextValue(field))\n            .concat(this.uiQueryFieldValue(field))\n            .concat(this.uiContextValue(field));\n      }\n      // Special case: from Process builder\n      // .processFieldsLoad()\n      else if (fieldColumnName.indexOf(\"uuid\") > -1) {\n         result = this.uiContextValue(null, fieldColumnName);\n      }\n\n      if (this._settings.isRecordRule) {\n         result = (result ?? []).concat(this.uiRecordRuleValue(field));\n      }\n\n      result = (result ?? []).concat(this.uiCustomValue(field));\n\n      return result;\n   }\n\n   uiNoneValue() {\n      return [\n         {\n            batch: \"none\",\n            borderless: true,\n            view: \"template\",\n            template: \"\",\n         },\n      ];\n   }\n\n   uiBooleanValue(field) {\n      return [\n         {\n            batch: \"boolean\",\n            view: \"checkbox\",\n         },\n      ];\n   }\n\n   uiTextValue(field) {\n      return [\n         {\n            batch: \"text\",\n            view: \"text\",\n            on: {\n               onAfterRender: function () {\n                  // HACK: focus on webix.text and webix.textarea\n                  // Why!! If the parent layout has zIndex lower than 101,\n                  // then is not able to focus to webix.text and webix.textarea\n                  let $layout =\n                     this.queryView(function (a) {\n                        return !a.getParentView();\n                     }, \"parent\") ?? this;\n                  $layout.$view.style.zIndex = 202;\n               },\n            },\n         },\n      ];\n   }\n\n   uiQueryValue(field) {\n      let options = [];\n\n      let isQueryField =\n         this._QueryFields?.filter((f) => f.id == field.id).length > 0;\n\n      // populate the list of Queries for this_object:\n      if (field == \"this_object\" && this._Object) {\n         options = this.queries((q) => q.canFilterObject(this._Object));\n      }\n      // populate the list of Queries for a query field\n      else if (isQueryField) {\n         options = this.queries(\n            (q) =>\n               (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n               q.canFilterObject(field.datasourceLink)\n         );\n      }\n\n      options?.forEach((q) => {\n         options.push({\n            id: q.id,\n            value: q.label,\n         });\n      });\n\n      return [\n         {\n            batch: \"query\",\n            view: \"combo\",\n            options: options ?? [],\n         },\n      ];\n   }\n\n   uiListValue(field) {\n      return [\n         {\n            batch: \"list\",\n            view: \"combo\",\n            options: field?.settings?.options?.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiUserValue(field) {\n      return [\n         {\n            batch: \"user\",\n            view: \"combo\",\n            options: this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiDataCollectionValue(field) {\n      let linkObjectId;\n      if (field == \"this_object\" && this._Object) {\n         linkObjectId = this._Object.id;\n      } else {\n         linkObjectId = field?.settings?.linkObject;\n      }\n\n      return [\n         {\n            batch: \"datacollection\",\n            view: \"combo\",\n            options: linkObjectId\n               ? this.AB.datacollections(\n                    (dc) => dc?.datasource?.id == linkObjectId\n                 ).map((dc) => {\n                    return {\n                       id: dc.id,\n                       value: dc.label,\n                    };\n                 })\n               : [],\n         },\n      ];\n   }\n\n   uiQueryFieldValue(field) {\n      return [\n         {\n            batch: \"queryField\",\n            view: \"combo\",\n            placeholder: this.labels.component.inQueryFieldQueryPlaceholder,\n            options: this.queries(\n               (q) => this._Object == null || q.id != this._Object.id\n            ).map((q) => {\n               return {\n                  id: q.id,\n                  value: q.label,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiRecordRuleValue(field) {\n      return [\n         {\n            batch: \"recordRule\",\n            view: \"select\",\n            options: this._settings.recordRuleFieldOptions ?? [],\n         },\n      ];\n   }\n\n   uiContextValue(field, processFieldKey = null) {\n      const processFields = (this._ProcessFields ?? [])\n         .filter((pField) => {\n            if (!pField) return false;\n\n            let result = false;\n            switch (field) {\n               case \"this_object\":\n                  result =\n                     this._Object.id === pField.object?.id && !pField.field;\n\n                  break;\n\n               default:\n                  switch (field.key) {\n                     case \"boolean\":\n                        result = [\"boolean\"].includes(pField.field?.key);\n\n                        break;\n\n                     case \"connectObject\":\n                        result =\n                           field.settings.linkObject ===\n                           (pField.field?.object.id ?? pField.object.id);\n\n                        if (!field.settings.isCustomFK) {\n                           result = result && !pField.field;\n\n                           break;\n                        }\n\n                        result =\n                           result &&\n                           (field.settings.indexField ||\n                              field.settings.indexField2) === pField.field?.id;\n\n                        break;\n\n                     case \"date\":\n                     case \"datetime\":\n                        result = [\"date\", \"datetime\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"calculate\":\n                     case \"formula\":\n                     case \"number\":\n                        result = [\"calculate\", \"formula\", \"number\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"string\":\n                     case \"LongText\":\n                     case \"email\":\n                     case \"AutoIndex\":\n                     case \"list\":\n                        result = [\n                           \"string\",\n                           \"LongText\",\n                           \"email\",\n                           \"AutoIndex\",\n                           \"list\",\n                        ].includes(pField.field?.key);\n\n                        break;\n\n                     case \"user\":\n                        result = [\"user\"].includes(pField.field?.key);\n\n                        break;\n\n                     default:\n                        if (pField.key) {\n                           // uuid\n                           const processFieldId = pField.key.split(\".\").pop();\n\n                           result =\n                              processFieldId === field.id ||\n                              processFieldId === field.key ||\n                              processFieldId === processFieldKey ||\n                              pField.key === processFieldKey;\n                        }\n\n                        break;\n                  }\n\n                  break;\n            }\n\n            return result;\n         })\n         .map((e) => {\n            return {\n               id: e.key,\n               value: L(\"context({0})\", [e.label]),\n            };\n         });\n\n      if (!processFields) return [];\n\n      return [\n         {\n            batch: \"context\",\n            view: \"select\",\n            options: [\n               {\n                  id: \"empty\",\n                  value: this.labels.component.contextDefaultOption,\n               },\n               ...processFields,\n            ],\n         },\n      ];\n   }\n\n   uiCustomValue(field) {\n      if (!field) return [];\n\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id ?? field] ?? {};\n      return options.values ?? [];\n   }\n\n   popUp(...options) {\n      const condition = Object.assign({}, this.condition);\n\n      if (!this.myPopup) {\n         let ui = {\n            id: this.ids.popup,\n            view: \"popup\",\n            height: 400,\n            width: 800,\n            body: this.ui,\n         };\n\n         if (!$$(this.ids.popup)) {\n            this.myPopup = webix.ui(ui);\n            this.init(this._settings);\n            if (this._Fields) {\n               this.fieldsLoad(this._Fields, this._Object);\n            }\n\n            // NOTE: do this, before the .setValue() operation, as we need to have\n            // our fields and filters defined BEFORE a setValue() is performed.\n            // this.uiInit();\n\n            if (condition) {\n               this.setValue(condition);\n            }\n\n            this.myPopup.show(...options);\n         } else {\n            $$(this.ids.popup).show(...options);\n         }\n      } else {\n         this.myPopup.show(...options);\n      }\n   }\n\n   /**\n    * @method addCustomOption\n    *\n    * @param {string|uuid} fieldId\n    * @param {Object} options - {\n    *                               conditions: [],\n    *                               values: []\n    *                           }\n    */\n   addCustomOption(fieldId, options = {}) {\n      this._customOptions = this._customOptions ?? {};\n      this._customOptions[fieldId] = options;\n   }\n};\n","const RowFilterCore = require(\"../core/RowFilterCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class RowFilter extends RowFilterCore {\n   constructor(App, idBase, AB) {\n      super(App, idBase, AB);\n\n      console.error(\"TODO: Switch RowFilter => FilterComplex\");\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         component: this.unique(`${idBase}_rowFilter`),\n         filterForm: this.unique(`${idBase}_rowFilter_form`),\n         addNewFilter: this.unique(`${idBase}_rowFilter_addNewFilter`),\n\n         glue: this.unique(`${idBase}_rowFilter_glue`),\n         field: this.unique(`${idBase}_rowFilter_field`),\n         rule: this.unique(`${idBase}_rowFilter_rule`),\n         inputValue: this.unique(`${idBase}_rowFilter_inputValue`),\n\n         queryCombo: this.unique(`${idBase}_rowFilter_queryCombo`),\n         queryFieldCombo: this.unique(`${idBase}_rowFilter_queryFieldCombo`),\n         queryFieldComboQuery: this.unique(\n            `${idBase}_rowFilter_queryFieldComboQuery`\n         ),\n         queryFieldComboField: this.unique(\n            `${idBase}_rowFilter_queryFieldComboField`\n         ),\n         fieldMatch: this.unique(`${idBase}_rowFilter_fieldMatchCombo`),\n\n         dataCollection: this.unique(`${idBase}_rowFilter_dataCollection`),\n\n         listOptions: this.unique(`${idBase}_rowFilter_listOptions`),\n\n         datePicker: this.unique(`${idBase}_rowFilter_datePicker`),\n      });\n\n      // Set current username\n      // this.Account.username = this.AB.Account.username();\n\n      var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      // Default options list to push to all fields\n      this.queryFieldOptions = [\n         {\n            value: L(\"By Query Field\"),\n            id: \"in_query_field\",\n         },\n         {\n            value: L(\"Not In Query\"),\n            id: \"not_in_query_field\",\n         },\n      ];\n\n      this.recordRuleOptions = [];\n      this.recordRuleFieldOptions = [];\n\n      let _logic = this._logic || {};\n\n      /**\n       * @method getFieldList\n       * return field list to render options\n       */\n      _logic.getFieldList = () => {\n         return (this._Fields || []).map((f) => {\n            let label = f.label;\n\n            // include object's name to options\n            if (this._settings.showObjectName && f.object) {\n               label = f.object.label + \".\" + f.label;\n            }\n\n            return {\n               id: f.id,\n               value: label,\n               alias: f.alias || undefined, // ABObjectQuery\n            };\n         });\n      };\n\n      _logic.getFilterUI = () => {\n         let instance = this;\n         let config_settings = this.config_settings || {};\n\n         return {\n            id: \"f\" + webix.uid(),\n            isolate: true,\n            cols: [\n               {\n                  // Add / Or\n                  view: \"combo\",\n                  id: ids.glue,\n                  width: 80,\n                  value: config_settings.glue || \"and\",\n                  options: [\n                     {\n                        value: L(\"And\"),\n                        id: \"and\",\n                     },\n                     {\n                        value: L(\"Or\"),\n                        id: \"or\",\n                     },\n                  ],\n                  on: {\n                     onChange: function (newVal, oldVal) {\n                        _logic.selectCombineCondition(newVal);\n                     },\n                  },\n               },\n               {\n                  // Field list\n                  view: \"combo\",\n                  id: ids.field,\n                  suggest: {\n                     on: {\n                        onBeforeShow: function () {\n                           this.define(\"width\", 400);\n                           this.resize();\n                        },\n                     },\n                     data: _logic.getFieldList(),\n                  },\n                  on: {\n                     onChange: function (columnId) {\n                        var $viewCond = this.getParentView();\n                        _logic.selectField(columnId, $viewCond);\n                     },\n                  },\n               },\n               // Comparer\n               {\n                  id: ids.rule,\n                  width: 220,\n                  cells: [\n                     {},\n                     // Query\n                     {\n                        batch: \"query\",\n                        view: \"combo\",\n                        value: \"in_query\",\n                        options: [\n                           {\n                              value: L(\"In Query\"),\n                              id: \"in_query\",\n                           },\n                           {\n                              value: L(\"Not In Query\"),\n                              id: \"not_in_query\",\n                           },\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is empty\"),\n                              id: \"is_empty\",\n                           },\n                           {\n                              value: L(\"is not empty\"),\n                              id: \"is_not_empty\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                           {\n                              value: L(\"In Data Collection\"),\n                              id: \"in_data_collection\",\n                           },\n                           {\n                              value: L(\"Not In Data Collection\"),\n                              id: \"not_in_data_collection\",\n                           },\n                        ].concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n\n                     // Date\n                     {\n                        batch: \"date\",\n                        view: \"combo\",\n                        value: \"less\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is before\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\"is after\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"is on or before\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"is on or after\"),\n                              id: \"greater_or_equal\",\n                           },\n                           {\n                              value: L(\"is before current date\"),\n                              id: \"less_current\",\n                           },\n                           {\n                              value: L(\"is after current date\"),\n                              id: \"greater_current\",\n                           },\n                           {\n                              value: L(\"is on or before current date\"),\n                              id: \"less_or_equal_current\",\n                           },\n                           {\n                              value: L(\"is on or after current date\"),\n                              id: \"greater_or_equal_current\",\n                           },\n                           {\n                              value: L(\"last ... days\"),\n                              id: \"last_days\",\n                           },\n                           {\n                              value: L(\"next ... days\"),\n                              id: \"next_days\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\":\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"≠\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"<\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\">\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"≤\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"≥\"),\n                              id: \"greater_or_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        value: \"is_current_user\",\n                        options: [\n                           {\n                              value: L(\"is current user\"),\n                              id: \"is_current_user\",\n                           },\n                           {\n                              value: L(\"is not current user\"),\n                              id: \"is_not_current_user\",\n                           },\n                           {\n                              value: L(\"contains current user\"),\n                              id: \"contain_current_user\",\n                           },\n                           {\n                              value: L(\"does not contain current user\"),\n                              id: \"not_contain_current_user\",\n                           },\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               // Value\n               {\n                  id: ids.inputValue,\n                  isolate: true,\n                  cells: [\n                     {\n                        batch: \"empty\",\n                     },\n\n                     // Query\n                     {\n                        id: ids.queryCombo,\n\n                        batch: \"query\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Query Field\n                     {\n                        id: ids.queryFieldCombo,\n                        batch: \"queryField\",\n                        rows: [\n                           {\n                              id: ids.queryFieldComboQuery,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Query\"),\n                              on: {\n                                 onChange: function (value) {\n                                    var $viewComparer = this.getParentView();\n                                    var $viewCond = $viewComparer\n                                       .getParentView()\n                                       .getParentView();\n                                    _logic.onChangeQueryFieldCombo(\n                                       value,\n                                       $viewCond\n                                    );\n\n                                    _logic.onChange();\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.queryFieldComboField,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Field\"),\n                              on: {\n                                 onChange: _logic.onChange,\n                              },\n                           },\n                        ],\n                     },\n\n                     // Field match\n                     {\n                        id: ids.fieldMatch,\n                        batch: \"fieldMatch\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Data collection\n                     {\n                        id: ids.dataCollection,\n                        batch: \"dataCollection\",\n                        view: \"richselect\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Date\n                     {\n                        // inputView.format = field.getDateFormat();\n                        batch: \"date\",\n                        id: ids.datePicker,\n                        view: \"datepicker\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"text\",\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onTimedKeyPress: function () {\n                              if (this.validate()) _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        id: ids.listOptions,\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"checkbox\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        options: this.AB.Account.userList().map((u) => {\n                           return {\n                              id: u.username,\n                              value: u.username,\n                           };\n                        }),\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewForm = this.getFormView();\n\n                     var indexView = $viewForm.index(this.getParentView());\n\n                     _logic.addNewFilter(indexView + 1);\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewCond = this.getParentView();\n\n                     _logic.removeNewFilter($viewCond);\n                  },\n               },\n            ],\n         };\n      };\n\n      _logic.getAddButtonUI = () => {\n         return {\n            view: \"button\",\n            id: ids.addNewFilter,\n            css: \"webix_primary\",\n            type: \"form\",\n            label: L(\"Add a filter\"),\n            click: () => {\n               _logic.addNewFilter();\n            },\n         };\n      };\n\n      _logic.addNewFilter = (index, fieldId) => {\n         var viewId;\n         var ui = _logic.getFilterUI();\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            viewId = $viewForm.addView(ui, index);\n\n            _logic.toggleAddNewButton();\n\n            // select a option of field\n            if (fieldId) _logic.selectField(fieldId, $$(viewId), true);\n         }\n\n         return viewId;\n      };\n\n      _logic.removeNewFilter = function ($viewCond) {\n         var $viewForm = $$(ids.filterForm);\n\n         $viewForm.removeView($viewCond);\n\n         _logic.toggleAddNewButton();\n\n         _logic.onChange();\n      };\n\n      _logic.toggleAddNewButton = function () {\n         if (!$$(ids.filterForm)) return;\n\n         // Show \"Add new filter\" button\n         if ($$(ids.filterForm).getChildViews().length < 1) {\n            $$(ids.filterForm).hide();\n            $$(ids.addNewFilter).show();\n         }\n         // Hide \"Add new filter\" button\n         else {\n            $$(ids.filterForm).show();\n            $$(ids.addNewFilter).hide();\n         }\n      };\n\n      _logic.selectCombineCondition = (val, ignoreNotify) => {\n         // define combine value to configuration\n         this.config_settings.glue = val;\n\n         // update value of every combine conditions\n         var $viewConds = $$(ids.filterForm).getChildViews();\n         $viewConds.forEach((v) => {\n            if (v.$$ && v.$$(ids.glue)) v.$$(ids.glue).setValue(val);\n         });\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.selectField = (columnId, $viewCond, ignoreNotify) => {\n         if (!this._Fields) return;\n\n         var field = this._Fields.filter((f) => f.id == columnId)[0];\n         if (!field) return;\n\n         // switch view\n         batchName = field.key;\n         if (field.id == \"this_object\") batchName = \"query\";\n         // Special this object query\n         else if (batchName == \"LongText\" || batchName == \"combined\")\n            batchName = \"string\";\n         else if (field.key == \"formula\") batchName = \"number\";\n         var isQueryField =\n            this._QueryFields.filter((f) => {\n               return f.id == field.id;\n            }).length > 0;\n         if (isQueryField) {\n            // we chose a connectField which is now a Query type\n            batchName = \"query\";\n         }\n         $viewCond.$$(ids.rule).showBatch(batchName);\n         $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n         let options = [];\n         let Queries = [];\n\n         // populate the list of Queries for this_object:\n         if (field.id == \"this_object\" && this._Object) {\n            Queries = this.queries((q) => q.canFilterObject(this._Object));\n         }\n         // populate the list of Queries for a query field\n         else if (isQueryField) {\n            Queries = this.queries((q) => {\n               return (\n                  (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n                  q.canFilterObject(field.datasourceLink)\n               );\n            });\n         }\n\n         Queries.forEach((q) => {\n            options.push({\n               id: q.id,\n               value: q.label,\n            });\n         });\n         $viewCond\n            .$$(ids.inputValue)\n            .$$(ids.queryCombo)\n            .define(\"options\", options);\n         $viewCond.$$(ids.inputValue).$$(ids.queryCombo).refresh();\n\n         // populate options of list\n         if (field.key == \"list\") {\n            let listOptions = field.settings.options.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.listOptions)\n               .define(\"options\", listOptions);\n            $viewCond.$$(ids.inputValue).$$(ids.listOptions).refresh();\n         }\n         // set format of datepicker\n         else if (field.key == \"date\") {\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.datePicker)\n               .define(\"format\", field.getFormat());\n            $viewCond.$$(ids.inputValue).$$(ids.datePicker).refresh();\n         }\n\n         var rule = null,\n            ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.getList) {\n            let defaultOpt = ($viewComparer.getList().config.data || [])[0];\n            if (defaultOpt) {\n               $viewComparer.setValue(defaultOpt.id);\n            }\n\n            // rule = $viewComparer.getValue();\n            // if (rule == \"in_query_field\" || rule == \"not_in_query_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n            // } else if (rule == \"same_as_field\" || rule == \"not_same_as_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n            // }\n         }\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.onChangeRule = (rule, $viewCond, notify = false) => {\n         switch (rule) {\n            case \"contains\":\n            case \"not_contains\":\n            case \"equals\":\n            case \"not_equal\":\n               // For \"connect_fields\" search by CUSTOM index value\n               if (batchName == \"query\") {\n                  $viewCond.$$(ids.inputValue).showBatch(\"string\");\n               }\n               // If want to call notify or call .onChange(), then pass notify is true.\n               // _logic.onChange();\n               break;\n\n            case \"is_current_user\":\n            case \"is_not_current_user\":\n            case \"contain_current_user\":\n            case \"not_contain_current_user\":\n            case \"same_as_user\":\n            case \"not_same_as_user\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n               // clear and disable the value field\n               $viewCond.$$(ids.inputValue).showBatch(\"empty\");\n               _logic.onChange();\n               break;\n\n            case \"last_days\":\n            case \"next_days\":\n               // Show the number input\n               $viewCond.$$(ids.inputValue).showBatch(\"number\");\n               break;\n\n            case \"in_query_field\":\n            case \"not_in_query_field\":\n               // populate the list of Queries for this_object:\n               var options = [];\n\n               // Get all application's queries\n               this.queries(\n                  (q) => this._Object == null || q.id != this._Object.id\n               ).forEach((q) => {\n                  options.push({\n                     id: q.id,\n                     value: q.label,\n                  });\n               });\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .define(\"options\", options);\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n               break;\n\n            case \"same_as_field\":\n            case \"not_same_as_field\":\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.fieldMatch)\n                  .define(\"options\", this.recordRuleFieldOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.fieldMatch).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n               break;\n\n            case \"in_data_collection\":\n            case \"not_in_data_collection\": {\n               let dcOptions = [];\n\n               // pull data collection list\n\n               // get id of the link object\n               let linkObjectId,\n                  columnId = $viewCond.$$(ids.field).getValue();\n               if (columnId == \"this_object\" && this._Object) {\n                  linkObjectId = this._Object.id;\n               } else {\n                  let field = this._Fields.filter((f) => f.id == columnId)[0];\n                  if (field) linkObjectId = field.settings.linkObject;\n               }\n\n               if (this._Application && linkObjectId) {\n                  this._Application\n                     .datacollections(\n                        (dc) =>\n                           dc.datasource && dc.datasource.id == linkObjectId\n                     )\n                     .forEach((dc) => {\n                        dcOptions.push({\n                           id: dc.id,\n                           value: dc.label,\n                        });\n                     });\n               }\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.dataCollection)\n                  .define(\"options\", dcOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.dataCollection).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"dataCollection\");\n               break;\n            }\n\n            default:\n               // Show the default value inputs\n               $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n               if (notify) _logic.onChange();\n\n               break;\n         }\n      };\n\n      _logic.onChangeQueryFieldCombo = (value, $viewCond) => {\n         // populate the list of Queries for this_object:\n         let options = [];\n         // Get all queries fields\n         let Query = this.queries((q) => {\n            return q.id == value;\n         })[0];\n         if (Query) {\n            Query.fields((f) => {\n               return !f.isConnection;\n            }).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: q.object.label + \".\" + q.label,\n               });\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.queryFieldComboField)\n               .define(\"options\", options);\n            $viewCond.$$(ids.inputValue).$$(ids.queryFieldComboField).refresh();\n         }\n\n         // _logic.onChange();\n      };\n\n      _logic.onChange = () => {\n         if (!this.__blockOnChange) {\n            // refresh config settings before notify\n            _logic.getValue();\n\n            console.warn(\"convert RowFilter.callback.onChange() to .emit()\");\n            _logic.callbacks.onChange();\n            this.emit(\"change\");\n         }\n\n         return false;\n      };\n\n      _logic.blockOnChange = () => {\n         this.__blockOnChange = true;\n      };\n\n      _logic.unblockOnChange = () => {\n         this.__blockOnChange = false;\n      };\n\n      /**\n       * @method getValue\n       *\n       * @return {JSON} -\n       * {\n       * \t\tglue: '', // 'and', 'or'\n       *\t\trules: [\n       *\t\t\t{\n       *\t\t\t\tkey:\t'column name',\n       *\t\t\t\trule:\t'rule',\n       *\t\t\t\tvalue:\t'value'\n       *\t\t\t}\n       *\t\t]\n       * }\n       */\n      _logic.getValue = () => {\n         let config_settings = {\n            glue: \"and\",\n            rules: [],\n         };\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            $viewForm.getChildViews().forEach(($viewCond, index) => {\n               if (index == 0) {\n                  config_settings.glue = $viewCond.$$(ids.glue).getValue();\n               }\n\n               var $fieldElem = $viewCond.$$(ids.field);\n               if (!$fieldElem) return;\n\n               /* field id */\n               var fieldId = $fieldElem.getValue();\n               if (!fieldId) return;\n\n               /* alias */\n               var alias;\n               var selectedOpt = $viewCond\n                  .$$(ids.field)\n                  .getPopup()\n                  .config.body.data.filter((opt) => opt.id == fieldId)[0];\n               if (selectedOpt) alias = selectedOpt.alias || undefined;\n\n               /* rule */\n               var rule = null,\n                  ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n                  $viewComparer = $viewCond\n                     .$$(ids.rule)\n                     .queryView({ id: ruleViewId });\n               if ($viewComparer && $viewComparer.getValue)\n                  rule = $viewComparer.getValue();\n\n               /* value */\n               var value = null,\n                  valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n                  $viewConditionValue = $viewCond\n                     .$$(ids.inputValue)\n                     .queryView({ id: valueViewId });\n               if ($viewConditionValue && $viewConditionValue.getValue) {\n                  value = $viewConditionValue.getValue();\n               } else if (\n                  $viewConditionValue &&\n                  $viewConditionValue.getChildViews()\n               ) {\n                  var vals = [];\n                  $viewConditionValue.getChildViews().forEach((element) => {\n                     vals.push($$(element).getValue());\n                  });\n                  value = vals.join(\":\");\n               }\n\n               // Convert date format\n               if (value instanceof Date) {\n                  let dateField = this._Fields.filter(\n                     (f) => f.id == fieldId\n                  )[0];\n                  if (dateField) {\n                     value = dateField.exportValue(value);\n                  } else {\n                     value = value.toISOString();\n                  }\n               }\n\n               config_settings.rules.push({\n                  alias: alias || undefined,\n                  key: fieldId,\n                  rule: rule,\n                  value: value,\n               });\n            });\n         }\n\n         this.config_settings = config_settings;\n\n         return this.config_settings;\n      };\n\n      // webix UI definition:\n      this.ui = {\n         id: ids.component,\n         rows: [\n            {\n               view: \"form\",\n               id: ids.filterForm,\n               hidden: true,\n               elements: [],\n            },\n            _logic.getAddButtonUI(),\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options = {}) {\n      super.init(options);\n\n      // register our callbacks:\n      for (var c in this._logic.callbacks) {\n         this._logic.callbacks[c] = options[c] || this._logic.callbacks[c];\n      }\n\n      if (options.showObjectName)\n         this._settings.showObjectName = options.showObjectName;\n\n      if (options.isRecordRule) {\n         this.recordRuleOptions = [\n            {\n               value: L(\"Same As Field\"),\n               id: \"same_as_field\",\n            },\n            {\n               value: L(\"Not Field\"),\n               id: \"not_same_as_field\",\n            },\n         ];\n         this.recordRuleFieldOptions = options.fieldOptions;\n      }\n   }\n\n   setValue(settings) {\n      settings = settings || {};\n\n      super.setValue(settings);\n\n      let ids = this.ids;\n      let logic = this._logic;\n\n      // block .onChange event\n      logic.blockOnChange();\n\n      let config_settings = this.AB.cloneDeep(settings);\n      config_settings.rules = config_settings.rules || [];\n\n      // Redraw form with no elements\n      var $viewForm = $$(ids.filterForm);\n      if ($viewForm) webix.ui([], $viewForm);\n\n      // Add \"new filter\" button\n      if (config_settings.rules.length == 0) {\n         logic.toggleAddNewButton();\n      }\n\n      config_settings.rules.forEach((f) => {\n         var viewId = logic.addNewFilter(),\n            $viewCond = $$(viewId);\n\n         if ($viewCond == null) return;\n\n         var field = this._Fields.filter((col) => col.id == f.key)[0];\n\n         // \"and\" \"or\"\n         $viewCond.$$(ids.glue).define(\"value\", config_settings.glue);\n         $viewCond.$$(ids.glue).refresh();\n\n         // Select Field\n         $viewCond.$$(ids.field).define(\"value\", f.key);\n         $viewCond.$$(ids.field).refresh();\n         logic.selectField(f.key, $viewCond, true);\n\n         // Comparer\n         var ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.setValue) {\n            $viewComparer.define(\"value\", f.rule);\n            $viewComparer.refresh();\n         }\n\n         // if (f.rule == \"in_query_field\" || f.rule == \"not_in_query_field\" || f.rule == \"same_as_field\" || f.rule == \"not_same_as_field\") {\n         $viewCond.blockEvent();\n         logic.onChangeRule(f.rule, $viewCond);\n         $viewCond.unblockEvent();\n         // }\n\n         // Input\n         var valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n            $viewConditionValue = $viewCond\n               .$$(ids.inputValue)\n               .queryView({ id: valueViewId });\n         if ($viewConditionValue && $viewConditionValue.setValue) {\n            // convert to Date object\n            if (\n               field &&\n               field.key == \"date\" &&\n               f.value &&\n               (f.rule == \"less\" ||\n                  f.rule == \"greater\" ||\n                  f.rule == \"less_or_equal\" ||\n                  f.rule == \"greater_or_equal\")\n            ) {\n               $viewConditionValue.define(\"value\", new Date(f.value));\n            } else {\n               $viewConditionValue.define(\"value\", f.value);\n            }\n\n            $viewConditionValue.refresh();\n         } else if (\n            $viewConditionValue &&\n            $viewConditionValue.getChildViews()\n         ) {\n            let vals = (f.value || \"\").split(\":\");\n            let index = 0;\n            $viewConditionValue.getChildViews().forEach((element) => {\n               $$(element).blockEvent();\n               $$(element).setValue(vals[index]);\n               if (index == 0) {\n                  logic.onChangeQueryFieldCombo(vals[index], $viewCond);\n               }\n               $$(element).unblockEvent();\n               // $$(element).refresh();\n               index++;\n            });\n         }\n\n         if (field && field.key == \"user\") {\n            $viewCond.blockEvent();\n            logic.onChangeRule(f.rule, $viewCond);\n            $viewCond.blockEvent();\n         }\n      });\n\n      // unblock .onChange event\n      logic.unblockOnChange();\n   }\n\n   /**\n    * @method isComplete()\n    * returns a truthy value representing whether or not our current condition\n    * expression is fully completed.  Then externally checks can be made to\n    * verify if the data is complete.\n    * @return {bool}\n    */\n   isComplete() {\n      if (!this._completeConditions) {\n         this._completeConditions = this.AB.filterComplexNew(\n            `${this.ids.component}_iscomplete`\n         );\n      }\n\n      return this._completeConditions.isConditionComplete(this.getValue());\n   }\n};\n","// const ABComponent = require(\"./ABComponent\");\nimport ClassUI from \"../../ui/ClassUI\";\nconst ABViewForm = require(\"../platform/views/ABViewForm\");\n\nlet L = null;\n\nclass RowUpdater extends ClassUI {\n   constructor(idBase, AB) {\n      super(idBase, {\n         form: `${idBase}_rowUpdaterForm`,\n         addNew: `${idBase}_rowUpdaterAddNew`,\n         field: `${idBase}_rowUpdaterField`,\n      });\n\n      this.idBase = idBase;\n\n      this._Object = null;\n      // {ABObject}\n      // The ABObject we are building a form for.\n\n      this._mockFormWidget = null;\n      // {ABViewForm}\n      // When building our form components to display, they need a\n      // ABViewForm to be associated with.\n\n      this.AB = AB;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   /**\n    * @method uiItem()\n    * Return the webix description of a new field/value row.\n    * @return {json}\n    */\n   uiItem() {\n      const self = this;\n\n      return {\n         rows: [\n            {\n               view: \"layout\",\n               isolate: true,\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     id: this.ids.field,\n                     options: this.getFieldList(true),\n                     on: {\n                        onChange: async function (columnId) {\n                           const $viewItem = this.getParentView();\n\n                           await self.selectField(columnId, $viewItem);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"To\"),\n                  },\n                  {\n                     view: \"segmented\",\n                     value: \"custom\",\n                     height: 40,\n                     maxWidth: 160,\n                     options: [\n                        { id: \"custom\", value: L(\"Custom\") },\n                        { id: \"process\", value: L(\"Process\") },\n                     ],\n                     hidden:\n                        this._extendedOptions == null ||\n                        !this._extendedOptions.length,\n                     on: {\n                        onChange: function (val) {\n                           const $viewItem = this.getParentView();\n\n                           self.toggleCustomProcessOption(\n                              $viewItem,\n                              val == \"process\"\n                           );\n                        },\n                     },\n                  },\n                  // Field value\n                  {},\n                  // Extended value\n                  {\n                     hidden: true,\n                  },\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n\n                     click: function () {\n                        const $viewCond = this.getParentView().getParentView();\n\n                        self.removeItem($viewCond);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   /**\n    * @method ui()\n    * return the webix description of our Entry form.\n    * @return {json}\n    */\n   ui() {\n      // webix UI definition:\n      return {\n         rows: [\n            {\n               view: \"form\",\n               id: this.ids.form,\n               hidden: true,\n               borderless: true,\n               elements: [],\n            },\n            {\n               view: \"button\",\n               id: this.ids.addNew,\n               icon: \"fa fa-plus\",\n               type: \"iconButton\",\n               label: L(\"Add field to edit\"),\n               click: () => {\n                  this.addItem();\n               },\n            },\n         ],\n      };\n   }\n\n   init(AB) {\n      const $form = $$(this.ids.form);\n      if ($form) AB.Webix.extend($form, AB.Webix.ProgressBar);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method addItem()\n    * Add another field/value entry item to our form.\n    * @param {integer} index\n    *        which position in the list of form elements do we want to\n    *        insert the new row.\n    * @return {string} the webix .id of the new row we just added.\n    */\n   addItem(index) {\n      const $form = $$(this.ids.form);\n      const remainFields = this.getFieldList(true);\n\n      if (remainFields.length < 1) return;\n\n      const ui = this.uiItem();\n      const viewId = $form.addView(ui, index);\n\n      this.toggleForm();\n\n      return viewId;\n   }\n\n   /**\n    * @method getFieldList()\n    * Return an array of options in a webix.list format that represents the\n    * possible fields that can be selected on the current ABObject.\n    * @param {bool} excludeSelected\n    *        should we exclude from the list the fields that are ALREADY\n    *        displayed on the form?\n    * @return {array} [ { id, value }, ... ]\n    *         id: ABField.id\n    *         value: ABField.label\n    */\n   getFieldList(excludeSelected) {\n      let options = (this._Object.fields() || []).map((f) => {\n         return {\n            id: f.id,\n            value: f.label,\n         };\n      });\n\n      if (excludeSelected) {\n         const $form = $$(this.ids.form);\n\n         $form.getChildViews().forEach(($viewCond) => {\n            // Ignore \"Add new\" button\n            if (!$viewCond || !$viewCond.$$) return;\n\n            const $fieldElem = $viewCond.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            options = options.filter((opt) => opt.id != fieldId);\n         });\n      }\n      return options;\n   }\n\n   /**\n    * @method getValue\n    * Return an array of field:value results that have been entered on this\n    * form.\n    * @return {Array}\n    *         [\n    *            {\n    *               fieldId: {UUID}\n    *               isProcessValue: {Boolean} - If it is true, then value is from Process parameter\n    *               value: {Object}\n    *            },\n    *            ...\n    *         ]\n    */\n   getValue() {\n      const result = [];\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         $form.getChildViews().forEach(($viewContainer) => {\n            const $viewItem = $viewContainer.getChildViews()[0];\n\n            // Ignore \"Add new\" button\n            if (!$viewItem || !$viewItem.$$) return;\n\n            const $fieldElem = $viewItem.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            let $customValueElem = $viewItem.getChildViews()[4];\n            $customValueElem = this._pullInputElement($customValueElem);\n\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            if (!$customValueElem && !$processValueElem) return;\n\n            const fieldInfo = this._Object.fieldByID(fieldId);\n            const val = {\n               fieldId: fieldId,\n            };\n\n            // Custom value\n            if ($customValueElem && $customValueElem.isVisible()) {\n               if (\n                  fieldInfo.key === \"connectObject\" ||\n                  fieldInfo.key === \"user\"\n               )\n                  val.value = fieldInfo.getValue($customValueElem);\n               else if (\n                  fieldInfo.key === \"date\" ||\n                  fieldInfo.key === \"datetime\"\n               ) {\n                  const currDateCheckbox =\n                     $customValueElem.getChildViews()[0] ?? $customValueElem;\n\n                  if (currDateCheckbox.getValue() == true)\n                     val.value = \"ab-current-date\";\n                  else {\n                     const datePicker =\n                        $customValueElem.getChildViews()[1] ?? $customValueElem;\n\n                     val.value = fieldInfo.getValue(datePicker);\n                  }\n               }\n               // Get value from data field manager\n               else val.value = fieldInfo.getValue($customValueElem);\n            }\n            // Process value\n            else if ($processValueElem && $processValueElem.isVisible()) {\n               val.isProcessValue = true;\n               val.value = $processValueElem.getValue();\n            }\n\n            // Add to output\n            result.push(val);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method objectLoad\n    * Load the Object we are currently working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._Object = object;\n\n      this._mockApp = this.AB.applicationNew({});\n      this._mockFormWidget = new ABViewForm(\n         {\n            settings: {\n               showLabel: false,\n               labelWidth: 0,\n            },\n         },\n         this._mockApp // just need any ABApplication here\n      );\n      this._mockFormWidget.objectLoad(object);\n\n      this.setValue(null); // clear\n   }\n\n   /**\n    * @method removeItem\n    * Remove the current form row.\n    * @param {webix.view} $viewCond\n    *        This is the webix.view that contains the whole value row\n    *        we are removing.\n    */\n   removeItem($viewCond) {\n      const $form = $$(this.ids.form);\n\n      $form.removeView($viewCond);\n      this.toggleForm();\n   }\n\n   /**\n    * @method selectField\n    * Update the value display when a field is selected. Changing to a\n    * different field will change the types of values that can be entered.\n    * @param {string} columnId\n    *        The field.uuid of the object that was selected.\n    * @param {webix.view} $viewItem\n    *        The webix.view that contains the value expression of the field\n    *        that was selected.\n    */\n   async selectField(columnId, $viewItem) {\n      const field = this._Object.fieldByID(columnId);\n\n      if (!field) {\n         this.AB.notify.builder(\n            new Error(`could not find field for id[${columnId}]`),\n            {\n               context: \"RowUpdater.selectField() could not find a field\",\n               fieldID: columnId,\n            }\n         );\n\n         return;\n      }\n\n      const fieldComponent = field.formComponent(),\n         formFieldWidget = fieldComponent.newInstance(\n            this._mockApp,\n            this._mockFormWidget\n         ),\n         formFieldComponent = formFieldWidget.component(\n            this.AB._App,\n            this.idBase\n         );\n      const childViews = $viewItem.getChildViews();\n\n      let inputView =\n         typeof formFieldComponent.ui == \"function\"\n            ? formFieldComponent.ui()\n            : formFieldComponent.ui;\n\n      // Add extended value options\n      $viewItem.removeView(childViews[5]);\n\n      if (this._extendedOptions?.length)\n         $viewItem.addView(\n            {\n               view: \"richselect\",\n               options: this._extendedOptions,\n               hidden: true,\n            },\n            5\n         );\n      else\n         $viewItem.addView(\n            {\n               hidden: true,\n            },\n            5\n         );\n\n      await this.busy();\n\n      // WORKAROUND: add '[Current User]' option to the user data field\n      switch (field.key) {\n         case \"connectObject\":\n         case \"user\":\n            inputView = inputView.rows[0].rows[0];\n            inputView.suggest.body.data =\n               (await field.getOptions()).map((e) => {\n                  return {\n                     id: field.getRelationValue(e),\n                     value: e.text,\n                  };\n               }) ?? [];\n\n            if (field.key === \"user\")\n               inputView.suggest.body.data.unshift({\n                  id: \"ab-current-user\",\n                  value: \"ab-current-user\",\n                  // This one is saved with the \"value\" not \"id\".\n                  // value: L(\"Current User\"),\n               });\n\n            break;\n\n         case \"date\":\n         case \"datetime\":\n            inputView = {\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     labelWidth: 0,\n                     labelRight: L(\"Current Date/Time\"),\n                     on: {\n                        onChange: function (newVal) {\n                           const layout = this.getParentView();\n\n                           if (!layout) return;\n\n                           const datePicker = layout.getChildViews()[1];\n\n                           if (!datePicker) return;\n\n                           newVal ? datePicker.hide() : datePicker.show();\n                        },\n                     },\n                  },\n                  inputView,\n               ],\n            };\n\n            break;\n      }\n\n      // Change component to display value\n      $viewItem.removeView(childViews[4]);\n      $viewItem.addView(inputView, 4);\n\n      formFieldComponent.init();\n\n      // Show custom display of data field\n      if (field.customDisplay)\n         field.customDisplay({}, this.AB._App, childViews[4].$view);\n\n      this.toggleCustomProcessOption(\n         $viewItem,\n         childViews[3].getValue() === \"process\"\n      );\n      $$($viewItem).adjust();\n      $viewItem.getFormView().adjust();\n\n      this.ready();\n   }\n\n   /**\n    * @method setValue\n    * Given the previous settings, redraw the form with the field/value\n    * entries.\n    * @param {array} settings\n    *        [\n    *           {\n    *              fieldId: {UUID}\n    *              value: {Object|String}\n    *           }, ...\n    *        ]\n    */\n   setValue(settings) {\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      // Redraw form with no elements\n      webix.ui([], $form);\n\n      settings = settings || [];\n      if (settings.length < 1) return;\n\n      settings.forEach(async (item) => {\n         const $viewContainer = $$(this.addItem());\n         const $viewItem = $viewContainer.getChildViews()[0];\n         const $valueTypeButton = $viewItem.queryView(\n            { view: \"segmented\" },\n            \"self\"\n         );\n\n         $valueTypeButton.setValue(item.isProcessValue ? \"process\" : \"custom\");\n\n         const $field = $viewItem.$$(this.ids.field);\n\n         $field.define(\"value\", item.fieldId);\n         $field.refresh();\n\n         await this.selectField(item.fieldId, $viewItem);\n\n         const fieldInfo = this._Object.fieldByID(item.fieldId);\n\n         if (!fieldInfo) return;\n\n         // Set process value\n         if (item.isProcessValue) {\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            $processValueElem.setValue?.(item.value);\n\n            return;\n         }\n\n         // Set custom value\n         let $customValueElem = $viewItem.getChildViews()[4];\n         $customValueElem = this._pullInputElement($customValueElem);\n         const rowData = {};\n\n         rowData[fieldInfo.columnName] = item.value?.value ?? item.value;\n         fieldInfo.setValue($customValueElem, rowData);\n\n         // Set \"Current Date/Time\" check box\n         if (\n            (fieldInfo.key == \"date\" || fieldInfo.key == \"datetime\") &&\n            rowData[fieldInfo.columnName] == \"ab-current-date\" &&\n            $customValueElem.config.view == \"checkbox\"\n         ) {\n            $customValueElem.setValue(true);\n         }\n      });\n\n      this.toggleForm();\n   }\n\n   /**\n    * @method toggleForm\n    * decide if the form with the field/value elements should be displayed.\n    */\n   toggleForm() {\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         const childViews = $form.getChildViews();\n\n         if (childViews && childViews.length) $form.show();\n         else $form.hide();\n         $form.adjust();\n      }\n   }\n\n   setExtendedOptions(options) {\n      this._extendedOptions = options;\n   }\n\n   toggleCustomProcessOption($viewItem, showProcessOption) {\n      const $customOption = $viewItem.getChildViews()[4];\n      const $processOption = $viewItem.getChildViews()[5];\n\n      if (showProcessOption) {\n         $customOption.hide();\n         $processOption.show();\n      } else {\n         $customOption.show();\n         $processOption.hide();\n      }\n   }\n\n   async busy() {\n      $$(this.ids.addNew).disable();\n\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      if (!$form.showProgress) await this.init(this.AB);\n\n      $form.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      $$(this.ids.addNew).enable();\n      $$(this.ids.form).hideProgress();\n   }\n\n   _pullInputElement($elem) {\n      if (!$elem?.getValue && $elem?.getChildViews) {\n         return (\n            $elem\n               .getChildViews()\n               .filter((childView) => childView.getValue)[0] ?? $elem\n         );\n      } else {\n         return $elem;\n      }\n   }\n}\n\nexport default RowUpdater;\n","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABFieldCore = require(\"../../core/dataFields/ABFieldCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABField extends ABFieldCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.AB.on(\"ab.abdefinition.update\", (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n         }\n      });\n\n      //  \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      //  \tthis.defaults = fieldDefaults;\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n      // \t\tcolumnName:'column_name',\t// a valid mysql table.column name\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      // \t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n      // \t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n      // \t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n      // \t\t\twidth: {int}\t\t\t// width of display column\n\n      // \t\t// specific for dataField\n      // \t\t},\n      // \t\ttranslations:[]\n      // \t}\n\n      // \tthis.fromValues(values);\n\n      // this.object = object;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static editorValues(settings) {\n      const obj = {\n         label: settings.label,\n         columnName: settings.columnName,\n         settings: settings,\n      };\n\n      delete settings.label;\n      delete settings.columnName;\n\n      return obj;\n   }\n\n   addValidation(ids, settings) {\n      const App = this.object.application.App;\n      const Filter = this.AB.filterComplexNew(\n         `${this.id}_field_validation_rules`\n      );\n      $$(ids.filterComplex).addView({\n         view: \"form\",\n         css: \"abValidationForm\",\n         cols: [\n            {\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"invalidMessage\",\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     value:\n                        settings && settings.invalidMessage\n                           ? settings.invalidMessage\n                           : \"\",\n                     label: L(\"Invalid Message\"),\n                  },\n                  Filter.ui,\n               ],\n            },\n            {\n               view: \"button\",\n               css: \"webix_danger\",\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  const $viewCond = this.getParentView();\n                  $$(ids.filterComplex).removeView($viewCond);\n               },\n            },\n         ],\n      });\n      $$(Filter.ids.save).hide();\n      // Filter.applicationLoad(this.object.application);\n      Filter.fieldsLoad(this.object.fields());\n      if (settings && settings.rules) Filter.setValue(settings.rules);\n   }\n\n   /*\n    * @method isValid\n    * check the current values to make sure they are valid.\n    * Here we check the default values provided by ABField.\n    *\n    * @return null or [{OP.Validation.validator()}] objects.\n    */\n   isValid() {\n      const validator = this.AB.Validation.validator();\n\n      // .columnName must be unique among fileds on the same object\n      const isNameUnique =\n         this.object.fields((f) => {\n            return (\n               f.id != this.id &&\n               f.columnName.toLowerCase() == this.columnName.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"columnName\",\n            L(\n               \"Field columnName must be unique ({0} already used in this Object)\",\n               [this.columnName]\n            )\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save() before:\n      if (!this.id) return;\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      await this.migrateDrop();\n\n      // the server still references an ABField in relationship to it's\n      // ABObject, so we need to destroy the Field 1st, then remove it\n      // from it's object.\n      await super.destroy();\n\n      await this.object.fieldRemove(this);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABField with it's parent ABObject\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      let isAdd = false;\n      // if this is our initial save()\n      if (!this.id) {\n         isAdd = true;\n      }\n\n      // Whenever we update our settings, make sure any\n      // existing rows that have NULL values for this field\n      // are updated to have our current .default value.\n      if (!isAdd && this.settings.required && this.settings.default) {\n         const model = this.object.model();\n\n         // pull rows that has null value\n         const result = await model.findAll({\n            where: {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.id,\n                     rule: \"is_null\",\n                  },\n               ],\n            },\n         });\n\n         const tasks = [];\n\n         // updating ...\n         result.data.forEach((d) => {\n            if (!d[this.columnName]) d[this.columnName] = this.settings.default;\n\n            tasks.push(model.update(d.id, d));\n         });\n\n         await Promise.all(tasks);\n      }\n\n      // New ABDefinition method of saving:\n      // when this is done, we now have an .id\n      await super.save();\n\n      // incase this was an ADD operation, make sure the\n      // parent Obj now includes this object:\n      // NOTE: must be done after the .save() so we have an .id\n      await this.object.fieldAdd(this);\n\n      // perform any server side migrations for this Field:\n\n      // but not connectObject fields:\n      // ABFieldConnect.migrateXXX() gets called from the UI popupNewDataField\n      // in order to handle the timings of the 2 fields that need to be created\n      if (!this.isConnection && !skipMigrate) {\n         const fnMigrate = isAdd ? this.migrateCreate() : this.migrateUpdate();\n         await fnMigrate;\n      }\n\n      return this;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateUpdate() {\n      return this.AB.Network.put({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @function columnHeader\n    * Return the column header for a webix grid component for this specific\n    * data field.\n    * @param {Object} options\n    * {\n    *    isObjectWorkspace: {bool},  is this being used in the Object workspace.\n    *    width: {int},\n    *    height: {int},\n    *    editable: {bool}\n    * }\n    * @return {obj}  configuration obj\n    */\n   columnHeader(options) {\n      options = options || {};\n\n      const config = {\n         id: this.columnName, // this.id,\n         header: this.label,\n      };\n\n      if (options.isObjectWorkspace && this.settings.showIcon) {\n         config.header = `<span class=\"webix_icon fa fa-${this.fieldIcon()}\"></span>${\n            config.header\n         }`;\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.  If this isn't\n    * a standard value display (think image, Map, graph, etc...) then use this\n    * method to create the display in the table/grid cell.\n    * @param {object} row\n    *        is the {name=>value} hash of the current row of data.\n    * @param {App} App\n    *        the shared ui App object useful more making globally\n    *\t\t\t unique id references.\n    * @param {HtmlDOM} node\n    *        the HTML Dom object for this field's display.\n    * @param {object} options\n    *        option of additional settings\n    */\n   customDisplay(row, App, node, options) {}\n\n   /*\n    * @function customEdit\n    *\n    *\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      return true;\n   }\n\n   /**\n    * @method getValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   getValue(item, rowData) {\n      return item.getValue();\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    */\n   setValue(item, rowData, defaultValue) {\n      if (!item) return;\n\n      let val;\n\n      if (\n         (rowData == null || rowData[this.columnName] == null) &&\n         defaultValue != null\n      ) {\n         val = defaultValue;\n      } else if (rowData && rowData[this.columnName] != null) {\n         val = rowData[this.columnName];\n      } else {\n         val = rowData;\n      }\n\n      item.setValue(val);\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent(formKey) {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n\n      let FC = {\n         // .common() is used to create the display in the list\n         common: () => {\n            return {\n               key: formKey,\n\n               // // but since this is a common place holder: use the\n               // // multilingual label here:\n               // labelKey: 'ab.abfield.labelPlaceholder',\n               // icon:  'square'\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // NOTE: in case you were wondering, the base ABField\n            // \t\t will just return a label with 'ABFieldPlaceholder'\n            // \t\t as the text.  Any sub class of ABField should overwrite\n            // \t\t this and return an actual Form Component.\n\n            // store object id and field id to field component\n            const values = FC.common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n            // ABFieldPlaceholder.formatTitle();\n            // ABFieldPlaceholder.text = \"ABFieldPlaceholder\";\n\n            return ABFieldPlaceholder;\n         },\n      };\n      return FC;\n   }\n\n   /**\n    * @method detailComponent\n    */\n   detailComponent() {\n      return {\n         common: () => {\n            return {\n               icon: \"square\",\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // store object id and field id to field component\n            const values = this.detailComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method getSettings()\n    * return a copy of this.settings.\n    * @return {object}\n    */\n   getSettings() {\n      return Object.assign({}, this.settings);\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `${this.fieldKey()}[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABFieldAutoIndexCore = require(\"../../core/dataFields/ABFieldAutoIndexCore\");\n\nmodule.exports = class ABFieldAutoIndex extends ABFieldAutoIndexCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldAutoIndex\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldBooleanCore = require(\"../../core/dataFields/ABFieldBooleanCore\");\n\nmodule.exports = class ABFieldBoolean extends ABFieldBooleanCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = \"template\";\n      config.css = \"center\";\n      config.template = (row, common, value, config) => {\n         // Group header\n         if (row.$group) return row[this.columnName];\n\n         // editable\n         if (options.editable) {\n            return (\n               '<div class=\"ab-boolean-display\">' +\n               common.checkbox(row, common, value, config) +\n               \"</div>\"\n            );\n         }\n\n         // readonly\n         else {\n            if (value)\n               return \"<div class='webix_icon fa fa-check-square-o'></div>\";\n            else return \"<div class='webix_icon fa fa-square-o'></div>\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"checkbox\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-checkbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcheckbox\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCalculateCore = require(\"../../core/dataFields/ABFieldCalculateCore\");\n\nmodule.exports = class ABFieldCalculate extends ABFieldCalculateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCalculate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCombineCore = require(\"../../core/dataFields/ABFieldCombineCore\");\n\nmodule.exports = class ABFieldCombine extends ABFieldCombineCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCombine\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this.settings.combinedFields.split(\",\") || []).forEach((id) => {\n         var field = this.object.fieldByID(id);\n         if (!field) {\n            this.warningsMessage(`dependent field[${id}] not found.`, {\n               fieldID: id,\n               combinedFields: this.settings.combinedFields,\n            });\n         }\n      });\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldConnect extends ABFieldConnectCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save()d before:\n      if (!this.id) return Promise.resolve();\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      // this.migrateDrop()\n      //    // .then(() => {\n      //    //    // NOTE : prevent recursive remove connected fields\n      //    //    // - remove this field from JSON\n      //    //    this.object._fields = this.object.fields((f) => {\n      //    //       return f.id != this.id;\n      //    //    });\n      //    // })\n      //    .then(() => {\n      //       // Save JSON of the object\n      //       return this.object.fieldRemove(this);\n      //    })\n      await super.destroy();\n\n      // Now we need to remove our linked Object->field\n\n      const linkObject = this.datasourceLink;\n      if (!linkObject) return Promise.resolve(); // already notified\n\n      const linkField = this.fieldLink;\n      if (!linkField) return Promise.resolve(); // already notified\n\n      // destroy linked field\n      return linkField.destroy();\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method pullRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData = [];\n\n      const data = super.pullRelationValues(row);\n      const linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         } else if (typeof data == \"string\") {\n            selectedData = { text: data };\n         }\n      }\n\n      return selectedData;\n   }\n\n   columnHeader(options) {\n      options = options || {};\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      if (options.filters == null) {\n         options.filters = {};\n      }\n\n      var multiselect = this.settings.linkType == \"many\";\n\n      config.editor = multiselect ? \"multiselect\" : \"combo\";\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n      config.template = (row) => {\n         var selectedData = field.pullRelationValues(row);\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               values.push(\n                  `<div class='webix_multicombo_value'><span>${val.value}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n               );\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData.value) {\n            let clear = \"\";\n            if (options.editable) {\n               clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n            }\n            values.push(\n               `<div class='webix_multicombo_value'>${clear}<span class=\"ellip\">${selectedData.value}</span></div>`\n            );\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n\n      config.suggest = {\n         on: {\n            onBeforeShow: function () {\n               field.openOptions(this);\n            },\n         },\n\n         // Support partial matches\n         filter: ({ value }, search) =>\n            (value ?? \"\").toLowerCase().includes((search ?? \"\").toLowerCase()),\n      };\n\n      if (multiselect) {\n         config.suggest.view = \"checksuggest\";\n         config.suggest.button = true;\n      }\n\n      return config;\n   }\n\n   openOptions($suggest) {\n      // PREVENT repeatedly pull data:\n      // If not a x->1 relation and the options list was populated, then skip\n      const $list = $suggest.getList();\n      if (this.settings.linkViaType != \"one\") {\n         if (($list?.find({}) ?? []).length) return;\n      }\n\n      // Listen create/update events of the linked object, then clear data list to re-populate\n      [\"create\", \"update\"].forEach((key) => {\n         if (this[`_dc_${key}_event`]) return;\n\n         this[`_dc_${key}_event`] = this.AB.on(\n            `ab.datacollection.${key}`,\n            (res) => {\n               if (this.datasourceLink.id == res.objectId) $list.clearAll();\n            }\n         );\n      });\n\n      this.getAndPopulateOptions($suggest, null, this);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n\n   //// NOTE: why do we pass in row, App, and node?  is this something we do in our external components?\n   ////       are these values present when this Object is instanciated? Can't we just pass these into the\n   ////       object constructor and have it internally track these things?\n   customEdit(row, /*App,*/ node) {\n      // var selectedData = this.pullRelationValues(row);\n      // this._selectedData = selectedData;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"connect\");\n   }\n\n   formComponentMobile() {\n      if (this.settings.linkType == \"many\") {\n         return super.formComponent(\"mobile-selectmultiple\");\n      }\n      return super.formComponent(\"mobile-selectsingle\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailconnect\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method getOptions\n    * show options list in selectivity\n    *\n    * @return {Promise}\n    */\n   async getOptions(whereClause, term, sort, editor) {\n      const theEditor = editor;\n\n      if (theEditor) {\n         // PREVENT: repeatly refresh data too often\n         if (theEditor._getOptionsThrottle) {\n            clearTimeout(theEditor._getOptionsThrottle);\n            // NOTE: remove variables that reference the Promise and Resolve to let GC cleans up.\n            // https://dev.to/xnimorz/js-promises-3-garbage-collection-and-memory-leaks-2oi7?fbclid=IwAR1wqgNz2KqchaM7eRkclR6YWHT01eva4y5IWpnaY0in6BrxmTAtpNCnEXM\n            delete theEditor._timeToPullData;\n            delete theEditor._getOptionsResolve;\n         }\n         theEditor._timeToPullData = await new Promise((resolve) => {\n            theEditor._getOptionsResolve = resolve;\n            theEditor._getOptionsThrottle = setTimeout(() => {\n               resolve(true);\n            }, 100);\n         });\n         if (!theEditor._timeToPullData) return;\n      }\n\n      return new Promise((resolve, reject) => {\n         let haveResolved = false;\n         // {bool}\n         // have we already passed back a result?\n\n         const respond = (options) => {\n            // filter the raw lookup with the provided search term\n            options = options.filter((item) => {\n               if (item.text.toLowerCase().includes(term.toLowerCase())) {\n                  return true;\n               }\n            });\n\n            if (!haveResolved) {\n               haveResolved = true;\n               resolve(options);\n            } else {\n               // if we have already resolved() then .emit() that we have\n               // updated \"option.data\".\n               this.emit(\"option.data\", options);\n            }\n         };\n\n         // Prepare Where clause\n\n         const where = this.AB.cloneDeep(whereClause || {});\n         sort = sort || [];\n\n         if (!where.glue) where.glue = \"and\";\n\n         if (!where.rules) where.rules = [];\n\n         term = term || \"\";\n\n         // check if linked object value is not define, should return a empty array\n         if (!this.settings.linkObject) return [];\n\n         // if options was cached\n         // if (this._options != null) return resolve(this._options);\n\n         const linkedObj = this.datasourceLink;\n\n         // System could not found the linked object - It may be deleted ?\n         if (linkedObj == null) throw new Error(\"No linked object\");\n\n         const linkedCol = this.fieldLink;\n\n         // System could not found the linked field - It may be deleted ?\n         if (linkedCol == null) throw new Error(\"No linked column\");\n\n         // Get linked object model\n         const linkedModel = linkedObj.model();\n\n         // M:1 - get data that's only empty relation value\n         if (\n            this.settings.linkType == \"many\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            where.rules.push({\n               key: linkedCol.id,\n               rule: \"is_null\",\n            });\n            // where[linkedCol.columnName] = null;\n         }\n         // 1:1\n         else if (\n            this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            // 1:1 - get data is not match link id that we have\n            if (this.settings.isSource == true) {\n               // NOTE: make sure \"haveNoRelation\" shows up as an operator\n               // the value \":0\" doesn't matter, we just need 'haveNoRelation' as an operator.\n               // newRule[linkedCol.id] = { 'haveNoRelation': 0 };\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"have_no_relation\",\n               });\n            }\n            // 1:1 - get data that's only empty relation value by query null value from link table\n            else {\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"is_null\",\n               });\n               // newRule[linkedCol.id] = 'null';\n               // where[linkedCol.id] = null;\n            }\n         }\n\n         const storageID = this.getStorageID(where);\n\n         Promise.resolve()\n            .then(async () => {\n               // Mar 23, 2023 disabling local storage of options because users\n               // were reporting not seeing the correct options list with either\n               // new, updated or deleted records that should or should not appear\n               return false;\n               // Get Local Storage unless xxx->one connected field\n               if (this?.settings?.linkViaType != \"one\") {\n                  // We store the .findAll() results locally and return that for a\n                  // quick response:\n                  return await this.AB.Storage.get(storageID);\n               }\n            })\n            .then(async (storedOptions) => {\n               if (storedOptions) {\n                  // immediately respond with our stored options.\n                  this._options = storedOptions;\n                  return respond(this._options);\n               }\n               // Pull linked object data\n               let options = function () {\n                  return linkedModel.findAll({\n                     where: where,\n                     sort: sort,\n                     populate: false,\n                  });\n               };\n\n               // placeholder for selected options\n               let selected = function () {\n                  return new Promise((resolve, reject) => {\n                     // empty data array to pass to all()\n                     resolve({ data: [] });\n                  });\n               };\n\n               // we also need to get selected values of xxx->one connections\n               // if we are looking at a field in a form we look at linkViaOneValues\n               // if we are looking at a grid we are editing we look at theEditor?.config?.value\n               if (\n                  this?.settings?.linkViaType == \"one\" &&\n                  (this?.linkViaOneValues || theEditor?.config?.value)\n               ) {\n                  let values = \"\";\n                  // determine if we are looking in a grid or at a form field\n                  if (\n                     (theEditor?.config?.view == \"multicombo\" ||\n                        theEditor?.config?.view == \"combo\") &&\n                     this?.linkViaOneValues\n                  ) {\n                     values = this?.linkViaOneValues;\n                  } else if (theEditor?.config?.value) {\n                     if (Array.isArray(theEditor.config.value)) {\n                        values = theEditor?.config?.value.join();\n                     } else {\n                        values = theEditor?.config?.value;\n                     }\n                  }\n                  let whereRels = {};\n                  let sortRels = [];\n\n                  whereRels.glue = \"or\";\n                  whereRels.rules = [];\n\n                  values.split(\",\").forEach((v) => {\n                     whereRels.rules.push({\n                        key: \"uuid\",\n                        rule: \"equals\",\n                        value: v,\n                     });\n                  });\n                  selected = function () {\n                     return linkedModel.findAll({\n                        where: whereRels,\n                        sort: sortRels,\n                        populate: false,\n                     });\n                  };\n               }\n               try {\n                  const results = await Promise.all([options(), selected()]);\n\n                  // combine options and selected items and\n                  // put the selected options at the top of the list\n                  const result = results[1].data.concat(results[0].data);\n\n                  // store results in _options\n                  this._options = result.data || result || [];\n\n                  // populate display text\n                  (this._options || []).forEach((opt) => {\n                     opt.text = linkedObj.displayData(opt);\n                     opt.value = opt.text;\n                  });\n\n                  // 8/10/2023 - We are not actually using this (see line 338) - If we need to store\n                  // user data in local storage we should encrypt it.\n                  // cache options if not a xxx->one connection\n                  // if (this?.settings?.linkViaType != \"one\") {\n                  //    this.AB.Storage.set(storageID, this._options);\n                  // }\n                  return respond(this._options);\n               } catch (err) {\n                  this.AB.notify.developer(err, {\n                     context:\n                        \"ABFieldConnect:getOptions(): unable to retrieve options from server\",\n                     field: this.toObj(),\n                     where,\n                  });\n\n                  haveResolved = true;\n                  throw err;\n               }\n            });\n      });\n   }\n\n   getStorageID(where) {\n      return `${this.id}-${JSON.stringify(where)}`;\n   }\n\n   async clearStorage(where) {\n      const storageID = this.getStorageID(where);\n      await this.AB.Storage.set(storageID, null);\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               if (itemObj && itemObj.id) {\n                  vals.push(itemObj.id);\n               } else {\n                  vals.push(val);\n               }\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            } else {\n               vals.push(value);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         if (!value) {\n            return [];\n         } else {\n            let returnVals = [];\n            let vals = value.split(\",\");\n            vals.forEach((val) => {\n               returnVals.push(this.getItemFromVal(val));\n            });\n            return returnVals;\n         }\n      } else {\n         let item = this.getItemFromVal(value);\n         return item;\n      }\n   }\n\n   getAndPopulateOptions(editor, options, field, form) {\n      if (!editor) return Promise.resolve([]);\n\n      const theEditor = editor;\n      // if editor has options and is xxx->one store the options on the field\n      if (\n         this?.settings?.linkViaType == \"one\" &&\n         theEditor.getValue() &&\n         !field.linkViaOneValues\n      ) {\n         field.linkViaOneValues = theEditor.getValue();\n      }\n\n      // if we are filtering based off another selectivity's value we\n      // need to do it on fetch each time because the value can change\n      // copy the filters so we don't add to them every time there is a change\n      const combineFilters = options?.filters\n         ? Object.assign({}, options.filters)\n         : { glue: \"and\", rules: [] };\n\n      if (options?.filterByConnectValues) {\n         const parseFilterByConnectValues = (conditions, values, depth = 0) => {\n            const valuesByDepth = values.filter((e) => e?.depth === depth);\n\n            return [\n               ...conditions.rules.map((e) => {\n                  if (e.glue)\n                     return {\n                        glue: e.glue,\n                        rules: parseFilterByConnectValues(e, values, depth + 1),\n                     };\n\n                  const value = valuesByDepth.filter(\n                     (ef) => ef.key === e.key && ef.value === e.value\n                  )[0];\n\n                  if (!value) return e;\n\n                  const $parentField = value?.filterValue?.config.id\n                     ? $$(value.filterValue.config.id)\n                     : null;\n\n                  if (!$parentField)\n                     throw Error(\n                        \"Some parent field's view components don't exist\"\n                     );\n\n                  const parentValue = value?.filterValue\n                     ? $parentField.getValue() ?? \"\"\n                     : \"\";\n\n                  let newVal = \"\";\n\n                  if (parentValue) {\n                     if (value.filterColumn) {\n                        const filterField = field.object.fieldByID(\n                           value.filterValue.config.dataFieldId\n                        );\n                        let valItem;\n\n                        // When options does not load yet, then pull select value from DC\n                        if (!filterField._options?.length) {\n                           const linkedField =\n                              (form.datacollection.datasource?.fields(\n                                 (f) =>\n                                    f.id == value.value ||\n                                    f.columnName == value.value\n                              ) ?? [])[0];\n\n                           if (linkedField) {\n                              // Get values from DC\n                              const formVals = form.datacollection?.getCursor();\n\n                              valItem =\n                                 formVals[linkedField.relationName()] ??\n                                 formVals[value.value];\n                           }\n                        } else {\n                           valItem = filterField.getItemFromVal(parentValue);\n                        }\n\n                        if (valItem) {\n                           newVal = valItem[value.filterColumn];\n                        } else {\n                           newVal = parentValue;\n                        }\n                     } else {\n                        newVal = parentValue;\n                     }\n                  }\n\n                  return {\n                     key: e.key,\n                     rule: \"equals\",\n                     value: newVal,\n                  };\n               }),\n            ];\n         };\n\n         combineFilters.rules = parseFilterByConnectValues(\n            combineFilters,\n            options.filterByConnectValues\n         );\n      }\n\n      if (!this.handlerOptionData) {\n         this.handlerOptionData = (data) => {\n            if (theEditor.$destructed) {\n               this.removeListener(\"option.data\", this.handlerOptionData);\n               return;\n            }\n            this.populateOptions(theEditor, data, field, form, true);\n         };\n      }\n\n      // try to make sure we don't continually add up listeners.\n      this.removeListener(\"option.data\", this.handlerOptionData).once(\n         \"option.data\",\n         this.handlerOptionData\n      );\n\n      return new Promise((resolve, reject) => {\n         this.getOptions(\n            combineFilters,\n            \"\",\n            options?.sort ?? \"\",\n            theEditor\n         ).then((data) => {\n            this.populateOptions(theEditor, data, field, form, true);\n            resolve(data);\n         });\n      });\n   }\n\n   populateOptions(theEditor, data, field, form, addCy) {\n      if (theEditor == null || theEditor.$destructed) return;\n\n      theEditor.blockEvent();\n      theEditor.getList().clearAll();\n      theEditor.getList().define(\"data\", data);\n      if (addCy) {\n         this.populateOptionsDataCy(theEditor, field, form);\n      }\n      if (theEditor.getValue?.() && data?.length) {\n         let currVal = theEditor.getValue();\n         // in a multiselect environment, the current val can be an encoded string:\n         // \"id1,id2\".  Break this into an array:\n         if (field.linkType() == \"many\" && typeof currVal == \"string\") {\n            currVal = currVal.split(\",\");\n         }\n         if (!Array.isArray(currVal)) {\n            currVal = [currVal];\n         }\n\n         let selectedVals = [];\n         currVal.forEach((cVal) => {\n            // Check exists item\n            const isExists = data.some((d) => d.id == cVal);\n\n            if (isExists) {\n               selectedVals.push(cVal);\n            }\n\n            // if we couldn't find it by it's .id, then check to see\n            // if there is a custom index (.indexField  .indexField2)\n            // that does match.\n            // Select option item from custom index value\n            if (\n               !isExists &&\n               field.isConnection &&\n               (field.indexField || field.indexField2)\n            ) {\n               const selectedItem = data.filter(\n                  (d) =>\n                     d[field.indexField?.columnName ?? \"\"] == cVal ||\n                     d[field.indexField2?.columnName ?? \"\"] == cVal\n               )[0];\n\n               if (selectedItem) selectedVals.push(selectedItem.id);\n            }\n         });\n\n         theEditor.setValue(selectedVals);\n      }\n      theEditor.unblockEvent();\n   }\n\n   populateOptionsDataCy(theEditor, field, form) {\n      if (theEditor?.$destructed) return;\n\n      // Add data-cy attributes\n      if (theEditor?.getList) {\n         if (!theEditor.getPopup) return;\n         var popup = theEditor.getPopup();\n         if (!popup) return;\n         theEditor.getList().data.each((option) => {\n            if (!option) return;\n            var node = popup.$view.querySelector(\n               \"[webix_l_id='\" + option.id + \"']\"\n            );\n            if (!node) return;\n            node.setAttribute(\n               \"data-cy\",\n               `${field.key} options ${option.id} ${field.id} ${form?.id}`\n            );\n         });\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this._options || [];\n      if (options.length > 0) {\n         for (let i = 0; i < options.length; i++) {\n            if (\n               this.indexField &&\n               options[i][this.indexField.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else if (\n               this.indexField2 &&\n               options[i][this.indexField2.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else {\n               if (\n                  options[i].id == val ||\n                  options[i].value == val ||\n                  options[i][this.indexField?.columnName ?? \"\"] == val ||\n                  options[i][this.indexField2?.columnName ?? \"\"] == val\n               ) {\n                  item = options[i];\n                  break;\n               }\n            }\n         }\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         let vals = [];\n         if (item.getValue()) {\n            let val = item.getValue().split(\",\");\n            val.forEach((record) => {\n               vals.push(item.getList().getItem(record));\n            });\n         }\n         return vals;\n      } else {\n         if (item.getValue()) {\n            return item.getList().getItem(item.getValue());\n         } else {\n            return \"\";\n         }\n      }\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n      // if (AB.isEmpty(rowData)) return; removed because sometimes we will\n      // want to set this to empty\n      let val = this.pullRelationValues(rowData);\n      // put in current values as options so we can display them before\n      // the rest of the options are fetched when field is clicked\n      if (item.getList && item.getList().count() == 0) {\n         if (this.settings.linkType !== \"one\" && !Array.isArray(val)) {\n            val = [val];\n         }\n\n         const $list = item.getList();\n\n         $list.define(\"data\", val);\n         $list.refresh();\n      }\n\n      item.setValue(\n         Array.isArray(val)\n            ? val.map((e) => e.id ?? e.uuid ?? e).join(\",\")\n            : val.id ?? val.uuid ?? val\n      );\n   }\n\n   /**\n    * @method pullRecordRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRecordRelationValues(record) {\n      var selectedData = [];\n\n      var data = record;\n      var linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         }\n      }\n\n      return selectedData;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      var linkField = this.fieldLink;\n      if (!linkField) {\n         this.warningsMessage(\n            `is unable to find linked field[${this.settings.linkColumn}]`,\n            {\n               linkColumn: this.settings.linkColumn,\n            }\n         );\n      }\n\n      let linkObj = this.datasourceLink;\n      if (!linkObj) {\n         this.warningsMessage(\n            `is unable to find linked object[${this.settings.linkObject}]`,\n            {\n               linkObject: this.settings.linkObject,\n            }\n         );\n      }\n   }\n};\n","const ABFieldDateCore = require(\"../../core/dataFields/ABFieldDateCore\");\n\nmodule.exports = class ABFieldDate extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // if (this.settings.includeTime)\n      // config.editor = \"datetime\";\n      // else\n      config.editor = this.AB.Account?.language() == \"th\" ? \"thaidate\" : \"date\";\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"mobile-date\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-date\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   dateToString(dateFormat, dateData) {\n      return webix.Date.dateToStr(dateFormat)(dateData);\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n\n      // Return longdate if option 4 or 5\n      if (dateFormat >= 4) {\n         return webix.i18n.longDateFormatStr(dateObj);\n      } else {\n         return webix.i18n.dateFormatStr(dateObj);\n      }\n   }\n};\n","const ABFieldDateTimeCore = require(\"../../core/dataFields/ABFieldDateTimeCore\");\n\nmodule.exports = class ABFieldDateTime extends ABFieldDateTimeCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // Ignore date\n      if (this.settings.dateFormat == 1) {\n         config.editor = \"time\";\n      } else {\n         config.editor =\n            this.AB.Account?._config?.languageCode == \"th\"\n               ? \"thaidatetime\"\n               : \"datetime\";\n      }\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"mobile-datetime\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-datetime\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n      const timeToStr = webix.Date.dateToStr(this.getTimeFormat());\n\n      if (dateFormat >= 4) {\n         return `${webix.i18n.longDateFormatStr(dateObj)} ${timeToStr(\n            dateObj\n         )}`;\n      } else {\n         return `${webix.i18n.dateFormatStr(dateObj)} ${timeToStr(dateObj)}`;\n      }\n   }\n};\n","const ABFieldEmailCore = require(\"../../core/dataFields/ABFieldEmailCore\");\n\nmodule.exports = class ABFieldEmail extends ABFieldEmailCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-email\",\n            settings: {},\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldFileCore = require(\"../../core/dataFields/ABFieldFileCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldFile extends ABFieldFileCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related file.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (!this.id) {\n            resolve();\n            return;\n         }\n\n         // Ask the user what to do about the existing file:\n         webix.confirm({\n            title: L(\"Keep Files?\"),\n            message: L(\"Do you want to keep the files referenced by {0}?\", [\n               this.label,\n            ]),\n            callback: async (result) => {\n               // update this setting so the server can respond correctly in\n               // ABFieldFile.migrateDrop()\n               this.settings.removeExistingData = result ? 0 : 1;\n\n               try {\n                  await this.save();\n\n                  // TODO: a reminder that you still got alot on the server to do!\n                  webix.alert({\n                     title: \"!! TODO !!\",\n                     text: \"Tell a Developer to actually pay attention to this!\",\n                  });\n\n                  // now the default .destroy()\n                  await super.destroy();\n\n                  resolve();\n               } catch (err) {\n                  reject(err);\n               }\n            },\n         });\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFile\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = false;\n\n      const editable = options.editable;\n\n      // populate our default template:\n      config.template = (obj) => {\n         if (obj.$group) return this.dataValue(obj);\n\n         const fileDiv = [\n            '<div class=\"ab-file-data-field\" style=\"float: left;\">',\n            '<div class=\"webix_view ab-file-holder\">',\n            '<div class=\"webix_template\">',\n            this.fileTemplate(obj, editable),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return fileDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      options = options || {};\n\n      let typesList = [];\n      let maximumSize = 0;\n\n      if (this.settings.limitFileType && this.settings.fileType) {\n         typesList = this.settings.fileType.split(\",\");\n      }\n\n      if (this.settings.limitFileSize && this.settings.fileSize) {\n         maximumSize = this.settings.fileSize;\n      }\n\n      // \t\t// safety check:\n      // \t\t// webix seems to crash if you specify a .container that doesn't exists:\n      // \t\t// Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-file-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         // \t\t\t// use a webix component for displaying the content.\n         // \t\t\t// do this so I can use the progress spinner\n\n         const webixContainer = webix.ui({\n            view: \"template\",\n            container: parentContainer,\n\n            template: this.fileTemplate(row, options.editable),\n\n            borderless: true,\n            width: 160,\n            height: 60,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         // \t\t\t////\n         // \t\t\t//// Prepare the Uploader\n         // \t\t\t////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload(true);\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = typesList;\n                  if (acceptableTypes && acceptableTypes != \"\") {\n                     const type = item.type.toLowerCase();\n                     if (acceptableTypes.indexOf(type) == -1) {\n                        webix.message(\n                           L(\"Only [{0}] files are supported\", [\n                              acceptableTypes.join(\", \"),\n                           ])\n                        );\n                        return false;\n                     }\n                  }\n\n                  //verify file size\n                  //Convert to MegaBytes\n                  if (maximumSize > 0) {\n                     const acceptableSizes = maximumSize * 1000000;\n                     if (item.size > acceptableSizes) {\n                        webix.message(\n                           L(\"Maximum file size is {0}MB\", [maximumSize])\n                        );\n                        return false;\n                     }\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  // this.showFile(idBase, response.data.uuid);\n\n                  const values = {};\n                  values[this.columnName] = {};\n                  values[this.columnName].uuid = response.data.uuid;\n                  values[this.columnName].filename = item.name;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldFile.onFileUpload(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error loading file\"), {\n                     message:\n                        \"ABFieldFile:onFileUploadError(): Error loading file\",\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // open file upload dialog when's click\n         node.addEventListener(\"click\", (e) => {\n            if (e.target.className.indexOf(\"delete-image\") > -1) {\n               this.deleteFile = true;\n            }\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      if (this.deleteFile == true) {\n         // remove the property because it is only needed to prevent the file dialog from showing\n         delete this.deleteFile;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: \"\",\n            text: L(\"Are you sure you want to remove this file?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n\n                  values[this.columnName] = {};\n\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"ABFieldFile:customEdit(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n                  // update value in the form component\n                  else {\n                     this.setValue($$(node), values);\n                  }\n               }\n            },\n         });\n      } else {\n         const rowData = this.dataValue(row);\n         if (!rowData || !rowData.uuid) {\n            const uploaderId = node.dataset[\"uploaderId\"],\n               uploader = $$(uploaderId);\n\n            if (uploader && uploader.fileDialog)\n               uploader.fileDialog({ rowid: row.id });\n         }\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-file\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcustom\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   //File Template\n\n   fileTemplate(obj, editable) {\n      let iconDisplay = \"\";\n      let fileDisplay = \"display:none;\";\n      let fileURL = \"\";\n\n      let value = \"\";\n      let name = \"\";\n\n      const rowData = this.dataValue(obj);\n      if (rowData) {\n         value = rowData.uuid;\n         name = rowData.filename;\n      }\n\n      if (value && name) {\n         iconDisplay = \"display:none;\";\n         fileDisplay = \"\";\n         fileURL = \"/file/\" + value;\n      }\n\n      const html = [\n         `<div class=\"file-data-field-icon\" style=\"text-align: center; height: inherit; display: table-cell; vertical-align: middle; border: 2px dotted #CCC; background: #FFF; border-radius: 10px; font-size: 11px; line-height: 13px; padding: 0 10px; ${iconDisplay}\"><i class=\"fa fa-file fa-2x\" style=\"opacity: 0.6; font-size: 32px; margin-top: 3px; margin-bottom: 5px;\"></i>${\n            editable ? `<br/>${L(\"Drag and drop or click here\")}` : \"\"\n         }</div>`,\n         `<div class=\"file-data-field-name\" style=\" width:100%; height:100%; position:relative; \"><a target=\"_blank\" href=\"${fileURL}\">${\n            name || \"\"\n         }</a>${\n            editable\n               ? `<a style=\"${fileDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n               : \"\"\n         }</div>`,\n      ].join(\"\");\n\n      return html;\n   }\n\n   getValue(item, rowData) {\n      const file = item.$view.querySelector(\".file-data-field-name\");\n      const fileLink = file.querySelector(\"a\");\n\n      return {\n         uuid: file.getAttribute(\"file-uuid\"),\n         filename: fileLink.innerHTML,\n      };\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const fileicon = domNode.querySelector(\".file-data-field-icon\");\n      if (fileicon) fileicon.style.display = val && val.uuid ? \"none\" : \"block\";\n\n      const file = domNode.querySelector(\".file-data-field-name\");\n      if (file) {\n         const fileDeleteIcon = file.querySelector(\".ab-delete-photo\");\n         if (fileDeleteIcon)\n            fileDeleteIcon.style.display = val && val.uuid ? \"block\" : \"none\";\n\n         file.style.display = val && val.uuid ? \"block\" : \"none\";\n         if (val && val.uuid) file.setAttribute(\"file-uuid\", val.uuid);\n         else file.removeAttribute(\"file-uuid\");\n\n         const fileLink = file.querySelector(\"a\");\n         const fileURL = \"/file/\" + (val ? val.uuid : \"\");\n         fileLink.href = fileURL;\n         fileLink.innerHTML = val ? val.filename : \"\";\n      }\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method urlFile\n    * return the url to use to reference the file by it's id.\n    * @param {string} id uuid reference of this file.\n    * @return {string}\n    */\n   urlFile(id) {\n      return `/file/${id}`;\n   }\n};\n","const ABFieldFormulaCore = require(\"../../core/dataFields/ABFieldFormulaCore\");\n\nmodule.exports = class ABFieldFormula extends ABFieldFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldImageCore = require(\"../../core/dataFields/ABFieldImageCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldImage extends ABFieldImageCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related images.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (this.id) {\n            // Ask the user what to do about the existing images:\n            webix.confirm({\n               title: L(\"Keep Images?\"),\n               message: L(\"Do you want to keep the images referenced by {0}?\", [\n                  this.label,\n               ]),\n               callback: async (result) => {\n                  // update this setting so the server can respond correctly in\n                  // ABFieldImage.migrateDrop()\n                  this.settings.removeExistingData = result ? 0 : 1;\n\n                  try {\n                     await this.save();\n\n                     // TODO: a reminder that you still got alot on the server to do!\n                     webix.alert({\n                        title: \"!! TODO !!\",\n                        text: \"ABFieldImage.destroy(): Tell a Developer to actually pay attention to this!\",\n                     });\n\n                     await super.destroy();\n\n                     resolve();\n                  } catch (err) {\n                     reject(err);\n                  }\n               },\n            });\n         } else {\n            resolve(); // nothing to do really\n         }\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj, formId) {\n      // if formId is passed the field is in a form view not a grid and\n      // we won't have the obj and each time this\n      // field is in a form it will conflict with the last one rendered\n      if (formId) {\n         return `${this.columnName.replace(/ /g, \"_\")}-${formId}-image`;\n      } else {\n         return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-image`;\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldImage\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      config.editor = false; // 'text';  // '[edit_type]'   for your unique situation\n      // config.sort   = 'string' // '[sort_type]'   for your unique situation\n\n      let containerHeight = \"100%\";\n      let imageHeight = \"100%\";\n      let width = \"100%\";\n      let imageSrcHeight = \"100%\";\n      if (field.settings.useWidth) {\n         config.width = field.settings.imageWidth || 100;\n         const heightVal =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight + 20\n               : 80;\n         containerHeight = `${heightVal}px`;\n         width = `${field.settings.imageWidth || 100}px`;\n         imageHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 80;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 60;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      } else if (options.width) {\n         config.width = options.width || 100;\n         width = `${options.width || 100}px`;\n         imageHeight = options.width;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = options.width;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n      if (\n         field.settings.useHeight &&\n         field.settings.imageHeight &&\n         field.settings.imageHeight != \"NaN\"\n      ) {\n         config.height = field.settings.imageHeight || 0;\n         containerHeight = parseInt(config.height) + 20;\n         containerHeight = `${containerHeight}px`;\n         imageHeight = parseInt(config.height);\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = parseInt(config.height);\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n\n      const editable = options.editable;\n\n      // populate our default template:\n      // debugger;\n      config.template = (obj) => {\n         if (obj.$group) return obj[this.columnName];\n\n         const widthStyle = `width: ${width}; height: ${containerHeight}`;\n\n         const imageStyle = `width: ${width}; height: ${imageHeight}`;\n\n         const imgDiv = [\n            `<div class=\"ab-image-data-field\" style=\"float: left; ${widthStyle}\">`,\n            `<div class=\"webix_view ab-image-holder\" style=\"${imageStyle}\">`,\n            '<div class=\"webix_template\">',\n            this.imageTemplate(obj, {\n               editable: editable,\n               height: imageSrcHeight,\n               width: width,\n            }),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return imgDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    * @param {object} options - {\n    * \t\teditable {Bool}   where or not this field is currently editable\n    * \t\tformId {string}   the id of the presenting form if any\n    * }\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      // safety check:\n      // webix seems to crash if you specify a .container that doesn't exists:\n      // Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         let imgHeight = 0;\n         if (this.settings.useHeight) {\n            imgHeight = parseInt(this.settings.imageHeight) || imgHeight;\n         }\n\n         let imgWidth = 0;\n         if (this.settings.useWidth) {\n            imgWidth = parseInt(this.settings.imageWidth) || imgWidth;\n         }\n\n         if (options.height) imgHeight = options.height;\n\n         if (options.width) imgWidth = options.width;\n         //// TODO: actually pay attention to the height and width when\n         //// displaying the images.\n\n         // use a webix component for displaying the content.\n         // do this so I can use the progress spinner\n         const webixContainer = webix.ui({\n            view: \"template\",\n            css: \"ab-image-holder\",\n            // id: ids.container,\n            container: parentContainer,\n\n            template: this.imageTemplate(row, {\n               editable: options.editable,\n               height: imgHeight ? imgHeight + \"px\" : 0,\n               width: imgWidth ? imgWidth + \"px\" : 0,\n            }),\n\n            borderless: true,\n            height: imgHeight,\n            width: imgWidth,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         ////\n         //// Prepare the Uploader\n         ////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n            return;\n         }\n\n         const url = this.urlUpload();\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            // id:ids.uploader,\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            status: (f) => {\n               if (f.percent) {\n                  webixContainer.hideProgress();\n                  webixContainer.showProgress({\n                     type: \"top\",\n                     position: f.percent / 100,\n                  });\n               }\n            },\n            // formData:{\n            // \tappKey:application.name,\n            // \tpermission:actionKey,\n            // \tisWebix:true,\n            // \timageParam:'upload'\n            // },\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: (item) => {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = [\n                     \"jpg\",\n                     \"jpeg\",\n                     \"bmp\",\n                     \"png\",\n                     \"gif\",\n                     \"webp\",\n                  ];\n                  const type = item.type.toLowerCase();\n                  if (acceptableTypes.indexOf(type) == -1) {\n                     webix.message(\n                        L(\"Only [{0}] images are supported\", [\n                           acceptableTypes.join(\", \"),\n                        ])\n                     );\n                     return false;\n                  }\n                  this.uploadInProgress = true;\n                  // Display the image from local file\n                  var reader = new FileReader();\n                  reader.onload = (e) => {\n                     this.showImage(null, node, e.target.result);\n                     webixContainer.showProgress({\n                        type: \"top\",\n                        delay: 2000,\n                     });\n                  };\n                  reader.readAsDataURL(item.file);\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  this.showImage(response.data.uuid, node);\n                  this.uploadInProgress = false;\n\n                  const values = {};\n                  values[this.columnName] = response.data.uuid;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if (\n                           $$(node) &&\n                           $$(node).getItem &&\n                           $$(node).getItem(row.id)\n                        ) {\n                           $$(node).updateItem(row.id, values);\n                        } else {\n                           // if you scroll the table the connection to the datatable is lost so we need to find it again\n                           const dataTable =\n                              document.querySelector(\".webix_dtable\");\n                           if ($$(dataTable) && $$(dataTable).getItem(row.id))\n                              $$(dataTable).updateItem(row.id, values);\n                        }\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldImage.onFileUpload(): model.update(): error updating our entry\",\n                           field: this.toObj(),\n                           row,\n                           values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error uploading image\"), {\n                     context: \"ABFieldImage. uploader. onFileUploadError():\",\n                     field: this.toObj(),\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // if we are working in a datagrid we need to add a click event to\n         // check if the user is clicking on the delete button\n         if (node.className == \"webix_cell\") {\n            node.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  this.deleteImage = true;\n               }\n            });\n         }\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, id, evt) {\n      if (\n         (evt && evt.target.className.indexOf(\"delete-image\") > -1) ||\n         this.deleteImage\n      ) {\n         delete this.deleteImage;\n         if (!row.removeDefaultImage) {\n            row.removeDefaultImage = [];\n         }\n         row.removeDefaultImage[this.columnName] = true;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: L(\"Are you sure you want to remove this image?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\"; // removing the reference to the image here\n\n                  try {\n                     await this.object.model().update(row.id, values);\n\n                     // update the client side data object as well so other data changes won't cause this save to be reverted\n                     if ($$(node) && $$(node).updateItem)\n                        $$(node).updateItem(row.id, values);\n\n                     // update value in the form component\n                     this.setValue($$(node), values);\n                  } catch (err) {\n                     node.classList.add(\"webix_invalid\");\n                     node.classList.add(\"webix_invalid_cell\");\n\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ABFieldImage: customEdit(): Error updating our entry\",\n                        field: this.toObj(),\n                        row: row,\n                        values: values,\n                     });\n                  }\n               }\n            },\n         });\n      } else {\n         const uploaderId = node.dataset[\"uploaderId\"],\n            uploader = $$(uploaderId);\n\n         if (uploader && uploader.fileDialog)\n            uploader.fileDialog({ rowid: row.id });\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-image\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailimage\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   imageTemplate(obj, options) {\n      options = options || {};\n      options.height = options.height || \"100%\";\n      options.width = options.width || \"100%\";\n\n      // deault view is icon:\n      let iconDisplay = \"\";\n      let imageDisplay = \"display:none;\";\n      let imageURL = \"\";\n\n      let value = \"\";\n      let isRemoveDefaultImage = false;\n      if (obj[this.columnName]) {\n         value = obj[this.columnName];\n      }\n      if (obj.removeDefaultImage) {\n         if (obj.removeDefaultImage[this.columnName]) {\n            isRemoveDefaultImage = obj.removeDefaultImage[this.columnName];\n         }\n      }\n\n      if (value) {\n         iconDisplay = \"display:none;\";\n         imageDisplay = \"\";\n         imageURL = `background-image:url('${this.urlImage(value)}');`;\n      } else {\n         if (this.settings.useDefaultImage && !isRemoveDefaultImage) {\n            iconDisplay = \"display:none;\";\n            imageDisplay = \"\";\n            imageURL = `background-image:url('${this.urlImage(\n               this.settings.defaultImageUrl\n            )}');`;\n         }\n      }\n\n      let html = [\n         `<div class=\"image-data-field-icon\" style=\"${iconDisplay}\">#drag#</div>` +\n            `<div class=\"image-data-field-image\" style=\"${imageDisplay} height:${options.height}; ${imageURL}\">#remove#</div>`,\n      ].join(\"\");\n\n      html = html.replace(\n         \"#drag#\",\n         options.editable\n            ? `<div>${L(\"Drag and drop or click here\")}</div>`\n            : \"\"\n      );\n      html = html.replace(\n         \"#remove#\",\n         options.editable\n            ? `<a style=\"${imageDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n            : \"\"\n      );\n\n      return html;\n   }\n\n   showImage(uuid, node, url) {\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.querySelector(\".image-data-field-icon\").style.display =\n            \"none\";\n         const image = parentContainer.querySelector(\".image-data-field-image\");\n         image.style.display = \"\";\n         image.style.backgroundImage = `url('${url ?? this.urlImage(uuid)}')`;\n         image.setAttribute(\"image-uuid\", uuid);\n      }\n   }\n\n   getValue(item, rowData) {\n      const image = item.$view.querySelector(\".image-data-field-image\");\n      return image.getAttribute(\"image-uuid\");\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const imageIcon = domNode.querySelector(\".image-data-field-icon\");\n      if (imageIcon) imageIcon.style.display = val ? \"none\" : \"\";\n\n      const image = domNode.querySelector(\".image-data-field-image\");\n      if (image) {\n         const imageDeleteIcon = image.querySelector(\".ab-delete-photo\");\n         if (imageDeleteIcon)\n            imageDeleteIcon.style.display = val ? \"block\" : \"none\";\n\n         image.style.display = val ? \"block\" : \"none\";\n\n         if (val) {\n            image.style.backgroundImage = `url('${this.urlImage(val)}')`;\n            image.setAttribute(\"image-uuid\", val);\n         } else {\n            image.removeAttribute(\"image-uuid\");\n         }\n      }\n   }\n\n   /**\n    * @method toBase64\n    *\n    * @param {Object} rowData\n    *\n    * @return {Promise} - {\n    * \t\tdata: string,\n    * \t\twidth: number,\n    * \t\theight: number\n    * }\n    */\n   toBase64(rowData) {\n      return new Promise((resolve, reject) => {\n         if (!rowData[this.columnName]) return resolve(null);\n\n         const img = new Image();\n         img.crossOrigin = \"Anonymous\";\n         img.onerror = function (err) {\n            reject(err);\n         };\n         img.onload = function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL();\n            const imageData = {\n               data: dataURL,\n               width: img.width,\n               height: img.height,\n            };\n            resolve(imageData);\n         };\n\n         img.src = this.urlImage(rowData[this.columnName]);\n      });\n   }\n\n   /**\n    * @method urlImage()\n    * return the url to use to reference the image by it's id.\n    * @param {string} id\n    *        the file.uuid reference of this image.\n    * @return {string}\n    */\n   urlImage(id) {\n      return `/file/${id}`;\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n      if (this.uploadInProgress)\n         validator.addError(this.columnName, L(\"Image still uploading\"));\n   }\n\n   rotateLeft(imgFile) {\n      return this.AB.Network.put({\n         url: `/image/rotate/${imgFile}?direction=left`,\n      });\n   }\n\n   rotateRight(imgFile) {\n      return this.AB.Network.put({\n         url: `/image/rotate/${imgFile}?direction=right`,\n      });\n   }\n};\n","const ABFieldJsonCore = require(\"../../core/dataFields/ABFieldJsonCore\");\n\nmodule.exports = class ABFieldJson extends ABFieldJsonCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldJson\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // config.editor = null; // read only for now\n      config.editor = \"text\";\n      config.css = \"textCell\";\n\n      // when called by ABViewFormCustom, will need a .template() fn.\n      // currently we don't need to return anything so ...\n      config.template = () => \"\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // read-only for now\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"json\",\n            settings: {\n               type: \"string\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n      item.config.value = rowData[this.columnName];\n   }\n};\n","const ABFieldListCore = require(\"../../core/dataFields/ABFieldListCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldList extends ABFieldListCore {\n   constructor(values, object) {\n      super(values, object);\n\n      // this._Selectivity = new ABFieldSelectivity(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   save() {\n      return super.save().then(() => {\n         // Now we want to clear out any entries that had values == to item removed from our list:\n         if (this.pendingDeletions.length) {\n            const model = this.object.model();\n\n            if (this.settings.isMultiple == true) {\n               // find all the entries that have one of the deleted values:\n               // use Promise to prevent issues with data being loaded before it is deleted on client side\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n                  let numToDo = 0;\n\n                  model\n                     .findAll({})\n                     .then((list) => {\n                        list = list.data || list;\n\n                        // for each list item\n                        list.forEach((item) => {\n                           if (Array.isArray(item[this.columnName])) {\n                              // get fields not in pendingDeletions\n                              let remainingFields = item[\n                                 this.columnName\n                              ].filter((i) => {\n                                 return (\n                                    this.pendingDeletions.indexOf(i.id) == -1\n                                 );\n                              });\n\n                              if (\n                                 remainingFields.length !=\n                                 item[this.columnName].length\n                              ) {\n                                 numToDo++;\n\n                                 // update value to new field list\n                                 if (remainingFields.length == 0) {\n                                    remainingFields = \"\";\n                                 }\n                                 const value = {};\n                                 value[this.columnName] = remainingFields;\n                                 model.update(item.id, value).then(() => {\n                                    // if ($$(node) && $$(node).updateItem)\n                                    //    $$(node).updateItem(value.id, value);\n                                    numDone++;\n                                    if (numDone >= numToDo) {\n                                       resolve();\n                                    }\n                                 });\n                              }\n                           }\n                        });\n                        if (numToDo == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            } else {\n               // find all the entries that have one of the deleted values:\n               const where = {};\n               where[this.columnName] = this.pendingDeletions;\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n\n                  model\n                     .findAll(where)\n                     .then((list) => {\n                        // make sure we just work with the { data:[] } that was returned\n                        list = list.data || list;\n\n                        // for each one, set the value to ''\n                        // NOTE: jQuery ajax routines filter out null values, so we can't\n                        // set them to null. :(\n                        // const numDone = 0;\n                        const value = {};\n                        value[this.columnName] = \"\";\n\n                        list.forEach((item) => {\n                           model.update(item.id, value).then(() => {\n                              numDone++;\n                              if (numDone >= list.length) {\n                                 resolve();\n                              }\n                           });\n                        });\n                        if (list.length == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            }\n         }\n      });\n   }\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldList\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      var formClass = \"\";\n      var placeHolder = \"\";\n      if (options.editable) {\n         formClass = \" form-entry\";\n         placeHolder = `<span style='color: #CCC; padding: 0 5px;'>${L(\n            \"Select item\"\n         )}</span>`;\n      }\n      var isRemovable = options.editable && !this.settings.required;\n\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n\n      config.template = (rowData) => {\n         let selectedData = rowData[this.columnName];\n         if (selectedData == null) return \"\";\n         if (this.settings.isMultiple) {\n            selectedData = _getSelectedOptions(this, rowData);\n         }\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         let hasCustomColor = \"\";\n         let optionHex = \"\";\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               if (this.settings.hasColors && val.hex) {\n                  hasCustomColor = \"hascustomcolor\";\n                  optionHex = `background: ${val.hex};`;\n               }\n               if (val.text) {\n                  values.push(\n                     `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'><span>${val.text}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n                  );\n               }\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData) {\n            let selectedObj = selectedData;\n            if (typeof selectedData == \"string\") {\n               selectedObj = this.getItemFromVal(selectedData);\n            }\n            if (!selectedObj) return \"\";\n            if (this.settings.hasColors && selectedObj.hex) {\n               hasCustomColor = \"hascustomcolor\";\n               optionHex = `background: ${selectedObj.hex};`;\n            }\n            if (selectedObj.text) {\n               let clear = \"\";\n               if (options.editable && !this.settings.required) {\n                  clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n               }\n               values.push(\n                  `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'>${clear}<span class=\"ellip\">${selectedObj.text}</span></div>`\n               );\n            }\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n      config.editor = this.settings.isMultiple ? \"multiselect\" : \"combo\";\n      config.suggest = {\n         button: true,\n         data: this.settings.options.map(function (opt) {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n      if (this.settings.isMultiple) {\n         config.suggest.view = \"checksuggest\";\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      if (!node.querySelector) return;\n\n      var clearButton = node.querySelector(\n         \".selectivity-single-selected-item-remove\"\n      );\n      if (clearButton) {\n         clearButton.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            var values = {};\n            values[this.columnName] = \"\";\n            this.object\n               .model()\n               .update(row.id, values)\n               .then(() => {\n                  // update the client side data object as well so other data changes won't cause this save to be reverted\n                  $$(node)?.updateItem?.(row.id, values);\n               })\n               .catch((err) => {\n                  node.classList.add(\"webix_invalid\");\n                  node.classList.add(\"webix_invalid_cell\");\n\n                  this.AB.notify.developer(err, {\n                     message:\n                        \"ABFieldList:customDisplay(): Error updating our entry.\",\n                     row: row,\n                     values: \"\",\n                     field: this.toObj(),\n                  });\n               });\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customEdit(row, App, node) {\n   //    return super.customEdit(row, App, node);\n   // }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"selectmultiple\" : \"selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple\n               ? \"mobile-selectmultiple\"\n               : \"mobile-selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"detailtext\" : \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      if (this.settings.isMultiple) {\n         let returnVals = [];\n         let vals = value.split(\",\");\n         vals.forEach((val) => {\n            returnVals.push(this.getItemFromVal(val));\n         });\n         return returnVals;\n      } else {\n         return value;\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this.options();\n      if (options.length > 1) {\n         options.forEach((option) => {\n            if (option.id == val) {\n               item = option;\n               return false;\n            }\n         });\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item, rowData) {\n      return this.editParse(item.getValue());\n   }\n\n   getSelectedOptions(field, rowData = {}) {\n      let result = [];\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData) {\n         if (Array.isArray(rowData)) {\n            result = rowData;\n         } else {\n            result.push(rowData);\n         }\n      }\n      if (result.length) {\n         if (typeof result == \"string\") result = JSON.parse(result);\n\n         // Pull text with current language\n         if (this.settings) {\n            result = (this.settings.options || []).filter((opt) => {\n               return (\n                  (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                     .length > 0\n               );\n            });\n         }\n      }\n\n      return result;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      if (this.settings.isMultiple) {\n         // do we need anything here?\n      } else {\n         super.setValue(item, rowData);\n      }\n   }\n};\n\n// == Private methods ==\nfunction _getSelectedOptions(field, rowData = {}) {\n   let result = [];\n   if (rowData[field.columnName] != null) {\n      result = rowData[field.columnName];\n\n      if (typeof result == \"string\") result = JSON.parse(result);\n\n      // Pull text with current language\n      if (field.settings) {\n         result = (field.settings.options || []).filter((opt) => {\n            return (\n               (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                  .length > 0\n            );\n         });\n      }\n   }\n\n   return result;\n}\n","const ABFieldLongTextCore = require(\"../../core/dataFields/ABFieldLongTextCore\");\n\nmodule.exports = class ABFieldLongText extends ABFieldLongTextCore {\n   constructor(values, object) {\n      super(values, object);\n\n      /*\n\t\t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n\t\t}\n\t\t*/\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldLongText\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\"; // '[edit_type]'   for your unique situation\n      // config.sort = 'string' // '[sort_type]'   for your unique situation\n      config.template = (obj, common, value, col, ind) => {\n         return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldNumberCore = require(\"../../core/dataFields/ABFieldNumberCore\");\n\nlet INIT_EDITOR = false;\n// {bool} INIT_EDITOR\n// Transition code between previous Framework and current.\n// we now need to wait until webix is declared or accessible globally.\n\nmodule.exports = class ABFieldNumber extends ABFieldNumberCore {\n   constructor(values, object) {\n      if (!INIT_EDITOR) {\n         // NOTE: if you need a unique [edit_type] by your returned config.editor above:\n         webix.editors.number = webix.extend(\n            {\n               // TODO : Validate number only\n            },\n            webix.editors.text\n         );\n         INIT_EDITOR = true;\n      }\n      super(values, object);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   // return the grid column header definition for this instance of ABFieldNumber\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"number\"; // [edit_type] simple inline editing.\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"numberbox\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-numberbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","/*\n * ABFieldSelectivity\n *\n * An ABFieldSelectivity defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABField = require(\"./ABField\");\n\nconst defaultSettings = {\n   allowClear: true,\n   removeOnly: false,\n   readOnly: false,\n   showDropdown: true,\n   placeholder: \"\",\n   multiple: false,\n};\n\nconst ABFieldSelectivityDefaults = {\n   key: \"selectivity\",\n};\n\nmodule.exports = class ABFieldSelectivity extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldSelectivityDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return {\n         key: \"selectivity\",\n         icon: \"bars\",\n         menuName: \"\",\n         description: \"\",\n      };\n   }\n\n   selectivityRender(domNode, settings, App, row) {\n      if (domNode == null) return;\n\n      const cypress = settings.dataCy || \"\";\n      domNode.setAttribute(\"data-cy\", cypress);\n\n      // setting up our specific settings:\n      settings = settings || {};\n      for (const dv in defaultSettings) {\n         if (settings[dv] === null) {\n            settings[dv] = null;\n         } else {\n            settings[dv] = settings[dv] || defaultSettings[dv];\n         }\n      }\n\n      if (\n         settings.multiple &&\n         settings.items &&\n         settings.data &&\n         settings.data.length\n      ) {\n         settings.data.forEach(function (d) {\n            settings.items.map(function (i) {\n               if (i.id == d.id) d.hex = i.hex;\n            });\n         });\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      } else if (settings[\"data\"] == null || settings[\"data\"] == \"\") {\n         settings[\"data\"] = this.prepareData([], settings.multiple);\n      } else {\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      }\n\n      // store the field id so we can look it up on click events later\n      settings[\"field\"] = this.id;\n\n      // Prevent render selectivity duplicate\n      if (domNode.selectivity != null) {\n         // Refresh selectivity settings\n         domNode.selectivity.setOptions(settings);\n\n         return;\n      }\n\n      settings.element = domNode;\n\n      // Render selectivity\n      let selectivityInput;\n      if (settings.multiple) {\n         if (settings.isUsers) {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: #eee !important; color: #666 !important; box-shadow: inset 0px 1px 1px #333;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-user\" style=\"color: #666; opacity: 0.6;\"></i> \n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t\t${!settings.isLabelHidden ? options.text : \"\"}\n\t\t\t\t\t\t\t\t${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\" style=\"color: #333;\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         } else {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: ${options.hex} !important;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n                        ${\n                           settings.editPage\n                              ? ` <a class=\"selectivity-multiple-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>`\n                              : \"\"\n                        }\n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n                        ${!settings.isLabelHidden ? options.text : \"\"}\n                        ${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         }\n         selectivityInput = new Selectivity.Inputs.Multiple(settings);\n\n         domNode.selectivity = selectivityInput;\n         this.selectivitySetBadge(domNode, App, row);\n      } else {\n         settings.templates = {\n            singleSelectedItem: function (options) {\n               return `<span class=\"selectivity-single-selected-item\" data-item-id=\"${\n                  options.uuid\n               }\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t${\n                        settings.editPage\n                           ? '<a class=\"selectivity-single-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>'\n                           : \"\"\n                     }\n                     ${\n                        settings.additionalText\n                           ? settings.additionalText(options)\n                           : \"\"\n                     }\n                     ${!settings.isLabelHidden ? options.text : \"\"}\n                     ${\n                        options.removable\n                           ? '<a class=\"selectivity-single-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>'\n                           : \"\"\n                     }\n\t\t\t\t\t\t</span>`;\n            },\n         };\n\n         selectivityInput = new Selectivity.Inputs.Single(settings);\n         domNode.selectivity = selectivityInput;\n      }\n\n      if (settings.editPage) {\n         const trigerEditPageEvent = () => {\n            const instance = this;\n            const editMenus = document.querySelectorAll(\n               \".selectivity-single-selected-item-edit, .selectivity-multiple-selected-item-edit\"\n            );\n            for (let i = 0; i < editMenus.length; i++) {\n               const eMenu = editMenus[i];\n               if (eMenu && !eMenu.__hasClickEvent) {\n                  eMenu.addEventListener(\n                     \"click\",\n                     function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        const parentElm = this.parentElement;\n                        if (!parentElm) return;\n\n                        const rowId = parentElm.getAttribute(\"data-item-id\");\n                        if (!rowId) return;\n\n                        const fieldId = parentElm.getAttribute(\"data-field-id\");\n                        if (!fieldId) return;\n\n                        const thisField = instance.object.fieldByID(fieldId);\n                        if (!thisField) return;\n\n                        thisField.emit(\"editPage\", rowId);\n                     },\n                     true\n                  );\n                  eMenu.__hasClickEvent = true;\n               }\n            }\n         };\n\n         setTimeout(() => {\n            trigerEditPageEvent();\n\n            domNode.addEventListener(\"change\", () => {\n               trigerEditPageEvent();\n            });\n         }, 500);\n      }\n\n      // WORKAROUND : remove caret icon of selectivity\n      if (settings.readOnly) {\n         const caretElems = domNode.getElementsByClassName(\"selectivity-caret\");\n         for (let i = 0; i < caretElems.length; i++) {\n            const caretElm = caretElems[i];\n            if (caretElm) {\n               caretElm.parentNode.removeChild(caretElm);\n            }\n         }\n      }\n\n      // remember our settings values\n      this.selectivitySettings = settings;\n   }\n\n   selectivityGet(domNode) {\n      if (domNode && domNode.selectivity) {\n         if (this.selectivitySettings && this.selectivitySettings.multiple) {\n            // on a multiple select, return an array of results, or empty array\n            return domNode.selectivity.getData() || [];\n         } else {\n            // if a single select, return the object or null\n            return domNode.selectivity.getData() || null;\n         }\n      } else {\n         if (this.selectivitySettings && this.selectivitySettings.multiple)\n            return [];\n         else return null;\n      }\n   }\n\n   selectivitySet(domNode, data) {\n      if (!domNode || !domNode.selectivity) return;\n\n      data = this.prepareData(data, domNode.selectivity.options.multiple);\n\n      if (\n         (Array.isArray(data) && data[0]) || // Check Array\n         (data && data.id)\n      )\n         // Check a object\n         domNode.selectivity.setData(data);\n      else domNode.selectivity.clear();\n   }\n\n   selectivityDestroy(domNode) {\n      if (domNode && domNode.selectivity) {\n         domNode.selectivity.destroy();\n\n         delete domNode.selectivity;\n      }\n   }\n\n   prepareData(data, multiple = true) {\n      if (!data && multiple) {\n         return [];\n      } else if (multiple && data && Array.isArray(data) && data.length == 0) {\n         return [];\n      } else if (!multiple && data && Array.isArray(data) && data.length == 0) {\n         return null;\n      } else if (!data && !multiple) {\n         return null;\n      }\n\n      if (typeof data == \"string\" && data.length > 0) {\n         try {\n            data = JSON.parse(data);\n         } catch (e) {\n            // not JSON parsable, so convert to\n            data = { id: data, text: data };\n         }\n      }\n\n      // if single select, then it should be object\n      if (!multiple && Array.isArray(data)) {\n         data = data[0];\n      } else if (multiple && !Array.isArray(data)) {\n         data = [data];\n      }\n\n      // check to see if id is present on each item\n      if (multiple) {\n         data.forEach((d) => {\n            if (!d.id && d.uuid) {\n               d.id = d.uuid;\n            }\n         });\n      } else {\n         if (!data.id && data.uuid) data.id = data.uuid;\n      }\n\n      if (data == null && multiple) {\n         data = [];\n      }\n\n      return data;\n   }\n\n   selectivitySetBadge(domNode) {\n      if (!domNode.clientHeight) return;\n      const innerHeight = domNode.clientHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         let values = [];\n         if (domNode && domNode.selectivity)\n            values = domNode.selectivity.getValue() || [];\n\n         count = values.length;\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               // v2: this just updated the $height property for this row\n               // we don't do that anymore:\n               // anchor.addEventListener(\"click\", function () {\n               //    App.actions.onRowResizeAuto(row.id, innerHeight);\n               // });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n};\n","const ABFieldStringCore = require(\"../../core/dataFields/ABFieldStringCore\");\n\nmodule.exports = class ABFieldString extends ABFieldStringCore {\n   // constructor(values, object) {\n   //    super(values, object);\n\n   // {\n   //   settings: {\n   // \t  default: 'string',\n   // \t  supportMultilingual: 1/0\n   //   }\n   // }\n\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldString\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n      config.css = \"textCell\";\n      // config.sort   = 'string'\n      config.template = (obj, common, value /* , col, ind */) => {\n         // if this isn't part of a group header display the default format\n         if (!obj.$group) {\n            return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   /**\n    * @method formComponentMobile\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldTextFormulaCore = require(\"../../core/dataFields/ABFieldTextFormulaCore\");\n\nmodule.exports = class ABFieldTextFormula extends ABFieldTextFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldTextFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(/* row, App, node, options */) {}\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return null;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldTreeCore = require(\"../../core/dataFields/ABFieldTreeCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldTree extends ABFieldTreeCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj) {\n      return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-tree`;\n   }\n\n   // return the grid column header definition for this instance of ABFieldTree\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      let formClass = \"\";\n      let placeHolder = \"\";\n      if (options.isForm) {\n         formClass = \" form-entry\";\n         placeHolder =\n            \"<span style='color: #CCC; padding: 0 5px;'>\" +\n            L(\"Select items\") +\n            \"</span>\";\n      }\n\n      const width = options.width;\n\n      config.template = (obj) => {\n         if (obj.$group) return obj[field.columnName];\n\n         const branches = [];\n         let selectOptions = this.AB.cloneDeep(field.settings.options);\n         selectOptions = new webix.TreeCollection({\n            data: selectOptions,\n         });\n\n         let values = obj;\n         if (obj[field.columnName] != null) {\n            values = obj[field.columnName];\n         }\n\n         selectOptions.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  selectOptions.data.each(function (par) {\n                     if (selectOptions.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values'>\";\n         if (branches.length == 0) {\n            nodeHTML += placeHolder;\n         } else {\n            branches.forEach(function (item) {\n               nodeHTML +=\n                  '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                  myHex +\n                  ' !important;\">' +\n                  item +\n                  \"</span>\";\n            });\n         }\n         nodeHTML += \"</div>\";\n\n         // field.setBadge(node, App, row);\n\n         if (width) {\n            return (\n               '<div style=\"margin-left: ' +\n               width +\n               'px;\" class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         } else {\n            return (\n               '<div class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      const field = this;\n\n      if (options.isForm) {\n         if (!row || row.length == 0) {\n            node.innerHTML =\n               \"<div class='list-data-values form-entry'><span style='color: #CCC; padding: 0 5px;'>\" +\n               L(\"Select items\") +\n               \"</span></div>\";\n            return;\n         }\n\n         const branches = [];\n         options = this.AB.cloneDeep(field.settings.options);\n         options = new webix.TreeCollection({\n            data: options,\n         });\n\n         let values = row;\n         if (row[field.columnName] != null) {\n            values = row[field.columnName];\n         }\n\n         options.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  options.data.each(function (par) {\n                     if (options.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values form-entry'>\";\n         branches.forEach(function (item) {\n            nodeHTML +=\n               '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n               myHex +\n               ' !important;\">' +\n               item +\n               \"</span>\";\n         });\n         nodeHTML += \"</div>\";\n\n         node.innerHTML = nodeHTML;\n      }\n\n      field.setBadge(node, App, row);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, component) {\n      const idBase = App.unique(this.idCustomContainer(row));\n      const idPopup = `${idBase}-popup`;\n      const idTree = `${idBase}-tree`;\n      const view = $$(node);\n      const field = this;\n      const parentComponent = component;\n      let values = {};\n      let firstRender = true;\n\n      function getValues(field, row) {\n         let values = {};\n         if (\n            typeof field != \"undefined\" &&\n            typeof field.columnName != \"undefined\" &&\n            typeof row[field.columnName] != \"undefined\"\n         ) {\n            values = row[field.columnName];\n         }\n         return values;\n      }\n\n      function populateTree(field, vals) {\n         values = getValues(field, vals);\n\n         const $Tree = $$(idTree);\n         $Tree.blockEvent(); // prevents endless loop\n\n         const options = field.AB.cloneDeep(field.settings.options);\n         $Tree.clearAll();\n         $Tree.parse(options);\n         $Tree.refresh();\n         $Tree.uncheckAll();\n         $Tree.openAll();\n\n         if (values != null && values.length) {\n            values.forEach(function (id) {\n               if ($Tree.exists(id)) {\n                  $Tree.checkItem(id);\n                  const dom = $Tree.getItemNode(id);\n                  dom.classList.add(\"selected\");\n               }\n            });\n         }\n         $Tree.unblockEvent();\n      }\n\n      if ($$(idPopup)) {\n         $$(idPopup).show();\n         populateTree(this, row);\n      } else {\n         webix\n            .ui({\n               id: idPopup,\n               view: \"popup\",\n               width: 500,\n               height: 400,\n               on: {\n                  onShow: () => {\n                     if (firstRender == true) populateTree(this, row);\n\n                     firstRender = false;\n                  },\n               },\n               body: {\n                  id: idTree,\n                  view: \"tree\",\n                  css: \"ab-data-tree\",\n                  template: function (obj, common) {\n                     return (\n                        \"<label>\" +\n                        common.checkbox(obj, common) +\n                        \"&nbsp;\" +\n                        obj.text +\n                        \"</label>\"\n                     );\n                  },\n                  on: {\n                     onItemCheck: async function (id, value, event) {\n                        const dom = this.getItemNode(id);\n                        const tree = this;\n                        if (value == true) {\n                           dom.classList.add(\"selected\");\n                        } else {\n                           dom.classList.remove(\"selected\");\n                        }\n                        // works for the same-level children only\n                        // except root items\n                        if (this.getParentId(id)) {\n                           tree.blockEvent(); // prevents endless loop\n\n                           let rootid = id;\n                           while (this.getParentId(rootid)) {\n                              rootid = this.getParentId(rootid);\n                              if (rootid != id) tree.uncheckItem(rootid);\n                           }\n\n                           this.data.eachSubItem(rootid, function (item) {\n                              if (item.id != id) tree.uncheckItem(item.id);\n                           });\n\n                           tree.unblockEvent();\n                        } else {\n                           tree.blockEvent(); // prevents endless loop\n                           this.data.eachSubItem(id, function (obj) {\n                              if (obj.id != id) tree.uncheckItem(obj.id);\n                           });\n                           tree.unblockEvent();\n                        }\n                        const values = {};\n                        values[field.columnName] = $$(idTree).getChecked();\n\n                        if (row.id) {\n                           // pass null because it could not put empty array in REST api\n                           if (values[field.columnName].length == 0)\n                              values[field.columnName] = \"\";\n\n                           try {\n                              await field.object.model().update(row.id, values);\n\n                              // update the client side data object as well so other data changes won't cause this save to be reverted\n                              if (view && view.updateItem) {\n                                 view.updateItem(row.id, values);\n                              }\n                           } catch (err) {\n                              node.classList.add(\"webix_invalid\");\n                              node.classList.add(\"webix_invalid_cell\");\n\n                              this.AB.notify.developer(err, {\n                                 message:\n                                    \"ABFieldTree:onItemClick(): Error updating our entry.\",\n                                 row: row,\n                                 values: values,\n                              });\n                           }\n                        } else {\n                           const rowData = {};\n                           rowData[field.columnName] = $$(idTree).getChecked();\n\n                           field.setValue($$(parentComponent.ui.id), rowData);\n                        }\n                     },\n                  },\n               },\n            })\n            .show(node, {\n               x: -7,\n            });\n      }\n      return false;\n   }\n\n   setBadge(domNode, row) {\n      const field = this;\n      domNode = domNode.querySelector(\".list-data-values\");\n      const innerHeight = domNode.scrollHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         if (row[field.columnName] && row[field.columnName].length)\n            count = row[field.columnName].length;\n         else count = 0;\n\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               anchor.addEventListener(\"click\", function (event) {\n                  // v2: this was just saving the new height to the\n                  // field properties. We don't do that anymore:\n                  // App.actions.onRowResizeAuto(row.id, innerHeight);\n                  event.stopPropagation();\n               });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"formtree\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtree\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   getValue(item, rowData) {\n      let values = {};\n      values = item.getValues();\n      return values;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return false;\n\n      const val = rowData[this.columnName] || [];\n\n      item.setValues(val);\n      // get dom\n      const dom = item.$view.querySelector(\".list-data-values\");\n\n      if (!dom) return false;\n\n      // set value to selectivity\n      this.customDisplay(val, this.App, dom, {\n         editable: true,\n         isForm: true,\n      });\n\n      setTimeout(function () {\n         let height = 33;\n         if (dom.scrollHeight > 33) {\n            height = dom.scrollHeight;\n         }\n         item.config.height = height + 5;\n         item.resize();\n      }, 200);\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\nconst ABFieldUserCore = require(\"../../core/dataFields/ABFieldUserCore\");\n\nmodule.exports = class ABFieldUser extends ABFieldUserCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   async save() {\n      // Add new\n      if (this.id == null) {\n         const SiteUser = this.AB.objectUser();\n         const Defaults = ABFieldUserCore.defaults();\n\n         this.settings.linkObject = SiteUser.id;\n         this.settings.isCustomFK = 1;\n\n         if (this.settings.isMultiple) {\n            this.settings.indexField2 = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"many\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         } else {\n            this.settings.indexField = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"one\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         }\n\n         // TODO: .fieldCustomNew() for saving \"local\" changes.\n         // NOTE: The Object adding this Field sees it's data as a ABFieldUser\n         //       connection.\n         //       However, the SiteUser will see the data as a ABFieldConnect\n         //       connection\n         const linkCol = SiteUser.fieldNew({\n            key: ABFieldConnectCore.defaults().key,\n            columnName: `${this.object.name}_${this.label}`,\n            label: this.object.label,\n            settings: {\n               showIcon: this.settings.showIcon,\n               linkObject: this.object.id,\n               linkType: this.settings.linkViaType,\n               linkViaType: this.settings.linkType,\n               isCustomFK: this.settings.isCustomFK,\n               indexField: this.settings.indexField,\n               indexField2: this.settings.indexField2,\n               isSource: 0,\n            },\n         });\n\n         // // Create definitions of the connected fields\n         // // NOTE: skip directly to the ABMLClass.save() to avoid the\n         // // migrations caused during the ABField.save() operations.\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         // linkCol.settings.linkColumn = this.id;\n         // await ABFieldUserCore.prototype.save.call(linkCol);\n\n         // // Update the id value of linked field to connect together\n         // this.settings.linkColumn = linkCol.id;\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         let newDef = await this.toDefinition().save();\n         this.id = newDef.id;\n\n         linkCol.settings.linkColumn = this.id;\n         let newLinkDef = await linkCol.toDefinition().save();\n         linkCol.id = newLinkDef.id;\n\n         this.settings.linkColumn = linkCol.id;\n         await this.toDefinition().save();\n\n         // Add fields to Objects\n         await this.object.fieldAdd(this);\n\n         await SiteUser.fieldAdd(linkCol);\n\n         // Create column to DB\n         await this.migrateCreate();\n\n         await linkCol.migrateCreate();\n\n         return this;\n      } else {\n         return super.save();\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldUser\n\n   columnHeader(options) {\n      // debugger;\n      options = this.setDisplayOptions(options);\n      return super.columnHeader(options);\n   }\n\n   /**\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customDisplay(row, App, node, options = {}) {\n   //    debugger;\n   //    options = this.setDisplayOptions(options);\n   //\n   //    return super.customDisplay(row, App, node, options);\n   // }\n\n   setDisplayOptions(options) {\n      options = options || {};\n      options.editable =\n         this.settings.editable != null ? this.settings.editable : true;\n\n      options.isLabelHidden =\n         this.settings.isShowUsername != null\n            ? !this.settings.isShowUsername\n            : false;\n\n      options.additionalText = (opt) => {\n         if (!this.settings.isShowProfileImage) return \"\";\n\n         if (opt.image_id)\n            return `<img src='/file/${opt.image_id}' style='border-radius:100%; object-fit: cover; margin: 0 5px 0 -10px;' width='28' height='28' />`;\n         else return '<i style=\"opacity: 0.6;\" class=\"fa fa-user\"></i> ';\n      };\n\n      return options;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (this.settings.isCurrentUser) {\n         if (this.settings.isMultiple) {\n            values[this.columnName] = [\n               {\n                  id: this.AB.Account.username(),\n                  text: this.AB.Account.username(),\n               },\n            ];\n         } else {\n            values[this.columnName] = this.AB.Account.username();\n         }\n      }\n   }\n\n   getValue(item) {\n      let val = super.getValue(item);\n\n      if (val) {\n         if (typeof val == \"string\")\n            val = val.replace(/ab-current-user/g, this.AB.Account.username());\n         else if (Array.isArray(val))\n            val = val.map((v) =>\n               (v?.username ?? v?.uuid ?? v?.id ?? v)?.replace(\n                  /ab-current-user/g,\n                  this.AB.Account.username()\n               )\n            );\n      }\n\n      return val;\n   }\n\n   setValue(item, rowData) {\n      let val = rowData[this.columnName];\n      // Select \"[Current user]\" to update\n      if (val == \"ab-current-user\") val = this.AB.Account.username();\n\n      rowData[this.columnName] = val;\n\n      super.setValue(item, rowData);\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((u) => {\n         const result = {\n            id: u.username,\n            image: u.image_id,\n         };\n\n         if (this.settings.isMultiple) {\n            result.text = u.username;\n         } else {\n            result.value = u.username;\n         }\n\n         return result;\n      });\n   }\n\n   getOptions(...params) {\n      return super.getOptions(...params).then((options) => {\n         // in a ABFieldUser, our options.id elements need to have\n         // the username, not the .uuid:\n         (options || []).forEach((o) => {\n            if (o.username) {\n               o.id = o.username;\n            }\n         });\n\n         return options;\n      });\n   }\n};\n","const ABMobilePageCore = require(\"../../core/mobile/ABMobilePageCore\");\n\nmodule.exports = class ABMobilePage extends ABMobilePageCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // check to see if I've been updated, if so, alert my parent:\n      this.__Handler_ABDEF_UPDATED = (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n            this.AB.off(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n         }\n      };\n      this.AB.on(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n\n      // check to see if any of my child pages have been updated and\n      // update my defintion of them:\n      this.__Handler_DEF_UPDATED = (page) => {\n         // create a new Field with the updated def\n         var def = this.AB.definitionByID(page.id);\n         if (!def) return;\n\n         var newPage = this.pageNew(def);\n\n         // we want to keep the same pageID order:\n         var newPages = [];\n         this.pages().forEach((pg) => {\n            if (pg.id === page.id) {\n               newPages.push(newPage);\n               return;\n            }\n            newPages.push(pg);\n         });\n\n         this._pages = newPages;\n\n         page.off(\"definition.updated\", this.__Handler_DEF_UPDATED);\n      };\n      this.pages().forEach((p) => {\n         p.on(\"definition.updated\", this.__Handler_DEF_UPDATED);\n      });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABMobilePage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance(parent) {\n      // create a new Field with the updated def\n      var def = this.AB.definitionByID(this.id);\n      if (!def) return;\n\n      var newPage = (parent ?? this.parent)?.pageNew(def);\n\n      try {\n         // detatch ourself from other emitters:\n         this.AB.off(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n         this.pages().forEach((pg) => {\n            pg.removeAllListeners(\"definition.updated\");\n         });\n      } catch (e) {\n         debugger;\n         console.error(e);\n      }\n\n      return newPage;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let allViews = this.views();\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no widgets\");\n      }\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABMobileViewCore = require(\"../../core/mobile/ABMobileViewCore.js\");\n\nmodule.exports = class ABMobileView extends ABMobileViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"mobile-view\",\n         \"mobile-page\",\n         // \"formpanel\",\n         // \"viewcontainer\",\n         // // not allowed Detail's widgets\n         // \"detailcheckbox\",\n         // \"detailcustom\",\n         // \"detailconnect\",\n         // \"detailimage\",\n         // \"detailselectivity\",\n         // \"detailtext\",\n         // \"detailtree\",\n         // // not allowed Form's widgets\n         // \"button\",\n         // \"checkbox\",\n         // \"connect\",\n         // \"datepicker\",\n         // \"fieldcustom\",\n         // \"textbox\",\n         // \"numberbox\",\n         // \"selectsingle\",\n         // \"selectmultiple\",\n         // \"formtree\",\n         // \"fieldreadonly\",\n         // // not allowed Chart's Widgets\n         // \"pie\",\n         // \"bar\",\n         // \"line\",\n         // \"area\",\n         // // not allowed Report page\n         // \"report\",\n         // \"reportPage\",\n         // \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our sub views\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABMobileViewFormCore = require(\"../../core/mobile/ABMobileViewFormCore\");\n\nconst ABMobileViewFormButton = require(\"./ABMobileViewFormButton\");\n\nmodule.exports = class ABMobileViewForm extends ABMobileViewFormCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method refreshDefaultButton()\n    * On the ABDesigner once a Form Field is added/removed from a form, we want\n    * to make sure the default Form Button is pushed down to the bottom of the\n    * list of form Items.\n    * @param {obj} ids\n    *        The id hash of the webix widgets that show the fields.\n    * @return {ABMobileViewFormButton}\n    */\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABMobileViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABMobileViewFormButton.newInstance(\n            this.application,\n            this\n         );\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views((v) => v.id != defaultButton.id);\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.dataviewID) {\n         this.warningsMessage(`does not have a DataCollection assigned.`);\n      } else {\n         let DC = this.datacollection;\n         if (!DC) {\n            this.warningsMessage(\n               `references an unknown DataCollection [${this.settings.dataviewID}].`\n            );\n         }\n      }\n   }\n};\n","const ABMobileViewFormButtonCore = require(\"../../core/mobile/ABMobileViewFormButtonCore\");\n\nmodule.exports = class ABMobileViewFormButton extends (\n   ABMobileViewFormButtonCore\n) {};\n","const ABMobileViewFormCheckboxCore = require(\"../../core/mobile/ABMobileViewFormCheckboxCore\");\n\nmodule.exports = class ABMobileViewFormCheckbox extends (\n   ABMobileViewFormCheckboxCore\n) {};\n","const ABMobileViewFormConnectCore = require(\"../../core/mobile/ABMobileViewFormConnectCore\");\n\n// const ABViewPropertyAddPage =\n//    require(\"./viewProperties/ABViewPropertyAddPage\").default;\n// const ABViewPropertyEditPage =\n//    require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\n// const ABViewFormConnectPropertyComponentDefaults =\n//    ABMobileViewFormConnectCore.defaultValues();\n\n// const ABPopupSort = require(\"../../../ABDesigner/ab_work_object_workspace_popupSortFields\");\n\n// let FilterComponent = null;\n// let SortComponent = null;\n\nmodule.exports = class ABMobileViewFormConnect extends (\n   ABMobileViewFormConnectCore\n) {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Does this do anything here?\n      // this.addPageTool.fromSettings(this.settings);\n      // this.editPageTool.fromSettings(this.settings);\n   }\n\n   // static get addPageProperty() {\n   //    return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   // }\n\n   // static get editPageProperty() {\n   //    return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   // component() {\n   //    return new ABViewFormConnectComponent(this);\n   // }\n\n   // get addPageTool() {\n   //    if (this.__addPageTool == null)\n   //       this.__addPageTool = new ABViewPropertyAddPage();\n\n   //    return this.__addPageTool;\n   // }\n\n   // get editPageTool() {\n   //    if (this.__editPageTool == null)\n   //       this.__editPageTool = new ABViewPropertyEditPage();\n\n   //    return this.__editPageTool;\n   // }\n};\n","const ABMobileViewFormCustomCore = require(\"../../core/mobile/ABMobileViewFormCustomCore\");\n\nmodule.exports = class ABMobileViewFormCustom extends (\n   ABMobileViewFormCustomCore\n) {};\n","const ABMobileViewFormDateCore = require(\"../../core/mobile/ABMobileViewFormDateCore\");\n\nmodule.exports = class ABMobileViewFormDate extends ABMobileViewFormDateCore {};\n","const ABMobileViewFormDatetimeCore = require(\"../../core/mobile/ABMobileViewFormDatetimeCore\");\n\nmodule.exports = class ABMobileViewFormDatetime extends (\n   ABMobileViewFormDatetimeCore\n) {};\n","const ABMobileViewFormEmailCore = require(\"../../core/mobile/ABMobileViewFormEmailCore\");\n\nmodule.exports = class ABMobileViewFormEmail extends (\n   ABMobileViewFormEmailCore\n) {};\n","const ABMobileViewFormFileCore = require(\"../../core/mobile/ABMobileViewFormFileCore\");\n\nmodule.exports = class ABMobileViewFormFile extends ABMobileViewFormFileCore {};\n","const ABMobileViewFormFormulaCore = require(\"../../core/mobile/ABMobileViewFormFormulaCore\");\n\nmodule.exports = class ABMobileViewFormFormula extends (\n   ABMobileViewFormFormulaCore\n) {};\n","const ABMobileViewFormImageCore = require(\"../../core/mobile/ABMobileViewFormImageCore\");\n\nmodule.exports = class ABMobileViewFormImage extends (\n   ABMobileViewFormImageCore\n) {};\n","const ABMobileViewFormItemCore = require(\"../../core/mobile/ABMobileViewFormItemCore\");\n\nmodule.exports = class ABMobileViewFormItem extends ABMobileViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   // warningsEval() {\n   //    super.warningsEval();\n   //    this.warningsMessage(`FormItem Test Warning.`);\n   // }\n};\n","const ABMobileViewFormNumberCore = require(\"../../core/mobile/ABMobileViewFormNumberCore\");\n\nmodule.exports = class ABMobileViewFormNumber extends (\n   ABMobileViewFormNumberCore\n) {};\n","const ABMobileViewFormReadonlyCore = require(\"../../core/mobile/ABMobileViewFormReadonlyCore\");\n\nmodule.exports = class ABMobileViewFormReadonly extends (\n   ABMobileViewFormReadonlyCore\n) {};\n","const ABMobileViewFormSelectMultipleCore = require(\"../../core/mobile/ABMobileViewFormSelectMultipleCore\");\n\nmodule.exports = class ABMobileViewFormSelectMultiple extends (\n   ABMobileViewFormSelectMultipleCore\n) {};\n","const ABMobileViewFormSelectSingleCore = require(\"../../core/mobile/ABMobileViewFormSelectSingleCore\");\n\nmodule.exports = class ABMobileViewFormSelectSingle extends (\n   ABMobileViewFormSelectSingleCore\n) {};\n","const ABMobileViewFormTextboxCore = require(\"../../core/mobile/ABMobileViewFormTextboxCore\");\n\nmodule.exports = class ABMobileViewFormTextbox extends (\n   ABMobileViewFormTextboxCore\n) {\n   // warningsEval() {\n   //    super.warningsEval();\n   //    this.warningsMessage(`${k} references an unknown Page.`);\n   // }\n};\n","const ABMobileViewLabelCore = require(\"../../core/mobile/ABMobileViewLabelCore\");\n// const ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABMobileViewLabel extends ABMobileViewLabelCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   // component() {\n\n   //    // return new ABViewLabelComponent(this);\n   // }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABMobileViewListCore = require(\"../../core/mobile/ABMobileViewListCore\");\n\nmodule.exports = class ABMobileViewList extends ABMobileViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   warningsEval() {\n      super.warningsEval();\n\n      [\"linkPageAdd\", \"linkPageDetail\"].forEach((k) => {\n         if (this.settings[k]) {\n            let page = this.application.pageByID(this.settings[k], true);\n            if (!page) {\n               this.warningsMessage(`${k} references an unknown Page.`);\n            }\n         }\n      });\n   }\n};\n","/**\n * ABProcessLane\n * manages a lane in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nvar ABProcessLaneCore = require(\"../../core/process/ABProcessLaneCore\");\n\nmodule.exports = class ABProcessLane extends ABProcessLaneCore {\n   // constructor(attributes, process, application) {\n   //    super(attributes, process, application);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   transferParticipantWhereToMe(id) {\n      var myParticipant = this.process.elementForDiagramID(id);\n      if (myParticipant) {\n         // if I haven't already set my where clause, and my Participant\n         // has one, then take it:\n         if (!this.stashed && myParticipant.stashed) {\n            var copyParams = [\n               \"stashed\",\n               \"useRole\",\n               \"role\",\n               \"useAccount\",\n               \"account\",\n            ];\n            copyParams.forEach((p) => {\n               var swap = this[p];\n               this[p] = myParticipant[p];\n               myParticipant[p] = swap; // ?? do this ??\n            });\n         }\n      }\n   }\n\n   /**\n    * fromElement()\n    * initialize this Lane's values from the given BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n\n      // on creation, if I have child objects, then move the .where definition\n      // from my parent Participant to ME\n      if (element.children && element.children.length > 0) {\n         if (element.parent && element.parent.type == \"bpmn:Participant\") {\n            this.transferParticipantWhereToMe(element.parent.id);\n         }\n      } else {\n         // this info might just reside in the .parent.children[]\n         if (\n            element.parent &&\n            element.parent.children &&\n            element.parent.children.length > 0\n         ) {\n            element.parent.children.forEach((child) => {\n               if (child.type != \"bpmn:Lane\") {\n                  // if child has lanes\n                  if (\n                     child.businessObject.lanes &&\n                     child.businessObject.lanes.length > 0\n                  ) {\n                     // if lane is me\n                     var myLane = child.businessObject.lanes.find((l) => {\n                        return l.id == this.diagramID;\n                     });\n                     if (myLane) {\n                        this.transferParticipantWhereToMe(element.parent.id);\n\n                        // tell child I'm it's lane:\n                        var objChild = this.process.elementForDiagramID(\n                           child.id\n                        );\n                        if (objChild) {\n                           objChild.setLane(this);\n                        }\n                     }\n                  }\n               }\n            });\n         }\n      }\n\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Lane with information that was relevant\n    * from the provided BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // if I picked up a new task, inform it I am it's lane:\n   }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system (when there are no lanes defined)\n * and provide a way to lookup a SiteUser.\n */\nvar ABProcessParticipantCore = require(\"../../core/process/ABProcessParticipantCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessParticipant extends ABProcessParticipantCore {\n   // constructor(attributes, process, AB) {\n   //    super(attributes, process, AB);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   /**\n    * fromElement()\n    * initialize this Participant's values from the given BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Participant with information that was relevant\n    * from the provided BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      if (defElement.children) {\n         var laneIDs = [];\n         defElement.children.forEach((c) => {\n            if (c.type == \"bpmn:Lane\") {\n               laneIDs.push(c.id);\n            }\n         });\n         this.laneIDs = laneIDs;\n      }\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this objec.\n    * @return {json}\n    */\n   diagramProperties() {\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n   }\n};\n","const ABProcessElementCore = require(\"../../../core/process/tasks/ABProcessElementCore.js\");\n\nmodule.exports = class ABProcessElement extends ABProcessElementCore {\n   // constructor(attributes, process, AB, defaultValues) {\n   //    super(attributes, process, AB, defaultValues);\n\n   //    // listen\n   // }\n\n   /**\n    * @method destroy()\n    * remove this task definition.\n    * @return {Promise}\n    */\n   destroy() {\n      ////\n      //// TODO: once our core conversion is complete, this .save() can be\n      //// moved to ABProcessTaskCore, and our ABDefinition.save() can take\n      //// care of the proper method to save depending on the current Platform.\n      ////\n      // return this.toDefinition()\n      //     .destroy()\n\n      return super.destroy().then(() => {\n         return this.process.elementRemove(this);\n      });\n   }\n\n   isValid() {\n      /*\n        var validator = OP.Validation.validator();\n\n        // label/name must be unique:\n        var isNameUnique =\n            this.AB.processes((o) => {\n                return o.name.toLowerCase() == this.name.toLowerCase();\n            }).length == 0;\n        if (!isNameUnique) {\n            validator.addError(\n                \"name\",\n                L(\n                    \"ab.validation.object.name.unique\",\n                    `Process name must be unique (\"${this.name}\"\" already used in this Application)`\n                )\n            );\n        }\n\n        return validator;\n        */\n\n      // var isValid =\n      //     this.AB.processes((o) => {\n      //         return o.name.toLowerCase() == this.name.toLowerCase();\n      //     }).length == 0;\n      // return isValid;\n\n      return true;\n   }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   findLane(curr, cb) {\n      if (!curr) {\n         cb(null, null);\n         return;\n      }\n\n      // if current object has a LANE definition, use that one:\n      if (curr.lanes && curr.lanes.length > 0) {\n         cb(null, curr.lanes[0]);\n      } else if (curr.$type == \"bpmn:Participant\") {\n         // if the current is a Participant, take that one\n         cb(null, curr);\n      } else {\n         // else move upwards and check again:\n         curr = curr.$parent;\n         this.findLane(curr, cb);\n      }\n   }\n\n   setLane(Lane) {\n      this.laneDiagramID = Lane.diagramID;\n   }\n\n   /**\n    * fromElement()\n    * initialize this Task's values from the given BPMN:Element\n    * @param {BPMNElement}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Task_08j07ni\",\n                \"width\": 100,\n                \"height\": 80,\n                \"type\": \"bpmn:SendTask\",\n                \"x\": 20,\n                \"y\": -2130,\n                \"order\": {\n                    \"level\": 5\n                },\n                \"businessObject\": {\n                    \"$type\": \"bpmn:SendTask\",\n                    \"id\": \"Task_08j07ni\",\n                    \"name\": \"ffff\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": 20,\n                            \"y\": -2130,\n                            \"width\": 100,\n                            \"height\": 80\n                        },\n                        \"id\": \"SendTask_0iidv6o_di\"\n                    }\n\n                    // Some elements (like EndEvents) have:\n                    .eventDefinitions: [\n                        {\n                            $type: \"actual bpmn:ElementType\",\n                            ...\n                        }\n                    ]\n                },\n                \"incoming\":[],\n                \"outgoing\":[]\n            }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // our lane may have changed:\n      var currObj = defElement.businessObject;\n      this.findLane(currObj, (err, obj) => {\n         if (obj) {\n            this.laneDiagramID = obj.id;\n         } else {\n            // if my parent shape is a Participant, then use that:\n            if (\n               defElement.parent &&\n               defElement.parent.type == \"bpmn:Participant\"\n            ) {\n               this.laneDiagramID = defElement.parent.id;\n            } else {\n               this.laneDiagramID = null;\n            }\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      const warnings = this.warnings();\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n            warn: warnings.length ? warnings : null,\n         },\n      ];\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ui = {\n         id: id,\n         view: \"label\",\n         label: \"this task has not implement properties yet...\",\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {}\n\n   /**\n    * property()\n    * return the specific property value if it exists.\n    * @return {mixed} | undefined\n    */\n   property(id) {\n      if ($$(id)) {\n         return $$(id).getValue();\n      }\n   }\n\n   /**\n    * switchTo()\n    * replace this object with an instance of one of our child classes:\n    * @param {ABProcessTask*} child\n    *        an instance of the new Process Task we are replaced with.\n    * @param {string} propertiesID\n    *        the webix ui.id container for the properties panel.\n    */\n   switchTo(child, propertiesID) {\n      // remove myself from our containing process's elements\n      this.process.elementRemove(this);\n\n      // add the new Process WITH the same id\n      this.process.elementAdd(child);\n\n      // show the child properties:\n      child.propertiesShow(propertiesID);\n\n      this.emit(\"switchTo\", child);\n   }\n\n   /**\n    * @method warningsEval()\n    * re-evaluate our warnings for this Process Task.\n    * Most of our ProcessTasks need to also verify data related to\n    * other available tasks, so we need to call the onProcessReady()\n    * so we can access those values.\n    */\n   warningsEval() {\n      super.warningsEval();\n      this.onProcessReady();\n\n      // if this isn't an end type of task, then there must be\n      // > 0 next tasks\n      if (!this.isEndTask()) {\n         const myOutgoingConnections = this.process.connectionsOutgoing(\n            this.diagramID\n         );\n         if (myOutgoingConnections.length < 1) {\n            this.warningMessage(\"should have another task after this one\");\n         }\n      }\n   }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(msg, data = {}) {\n      let message = `${this.defaults.key}[${\n         this.label ? this.label : this.name\n      }]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABProcessEndCore = require(\"../../../core/process/tasks/ABProcessEndCore.js\");\n\nmodule.exports = class ABProcessEnd extends ABProcessEndCore {\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n};\n","const ABProcessGatewayExclusiveCore = require(\"../../../core/process/tasks/ABProcessGatewayExclusiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessGatewayExclusive extends (\n   ABProcessGatewayExclusiveCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      // the first entry is for the gateway element itself\n      var properties = super.diagramProperties();\n      /*[\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n      */\n\n      // now add any additional updates for each of our connections:\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         properties.push({\n            id: conn.id,\n            def: {\n               name: this.conditions[conn.id]?.label ?? \"\",\n            },\n         });\n      });\n      return properties;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      // make sure we have > 1 connection.\n      const myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      if (myOutgoingConnections.length < 2) {\n         this.warningMessage(\"should have multiple outgoing connections\");\n      }\n\n      // make sure there is no more then 1 connection that doesn't have\n      // a condition:\n      let numCondWithOne = 0;\n      myOutgoingConnections.forEach((c) => {\n         if ((this.conditions[c.id]?.filterValue.rules?.length ?? 0) == 0) {\n            numCondWithOne++;\n         }\n      });\n\n      if (numCondWithOne > 1) {\n         this.warningMessage(\n            \"should not have more than 1 unfiltered connection.\"\n         );\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskEmailCore = require(\"../../../core/process/tasks/ABProcessTaskEmailCore.js\");\n\nmodule.exports = class ABProcessTaskEmail extends ABProcessTaskEmailCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      // check for warnings:\n\n      if (!this.subject) {\n         this.warningMessage(\"is missing a subject\");\n      }\n\n      if (!this.message) {\n         this.warningMessage(\"is missing a message\");\n      }\n\n      this.verifySetting(\"to\");\n      this.verifySetting(\"from\");\n      this.verifyNextLane(\"to\");\n      if (this.from == \"0\") {\n         let thisLane = this.myLane();\n         if (!thisLane) {\n            this.warningMessage(\n               \"can not resolve the lane participant for [.from] field.\"\n            );\n         }\n      }\n      this.verifyRoleAccount(\"to\", \"toUsers\");\n      this.verifyRoleAccount(\"from\", \"fromUsers\");\n   }\n\n   /**\n    * @method verifySetting()\n    * make sure the given field key has a value assigned.\n    * @param {string} key\n    *        the property of this object to check. (to, from)\n    */\n   verifySetting(key) {\n      if (this[key] == \"\") {\n         this.warningMessage(`does not have a [${key}] setting.`);\n      }\n   }\n\n   /**\n    * @method verifyNextLane()\n    * make sure we can access a Lane for the given property key.\n    * The \"to\" field can reference the \"Next Participant\". This checks to\n    * see if we can reference a lane for the next task.\n    * @param {string} key\n    *        the property that has the value for Next Participant. [to]\n    */\n   verifyNextLane(key) {\n      if (this[key] === \"0\") {\n         // Next Participant\n         // we need to resolve our next task and see if we can pull the participant info from it.\n\n         let nextTasks = this.process.connectionNextTask(this);\n         let nextLanesResolved = true;\n         nextTasks.forEach((t) => {\n            let lane = t.myLane();\n            if (!lane) {\n               nextLanesResolved = false;\n            }\n         });\n         if (!nextLanesResolved || nextTasks.length == 0) {\n            this.warningMessage(\n               `can not resolve next lane participant for [${key}] field.`\n            );\n         }\n      }\n   }\n\n   /**\n    * @method verifyRoleAccount()\n    * Check to see if the provided property is set to use a Role/Account for\n    * the email, and make sure there are values set for what is chosen.\n    * @param {string} key\n    *        the property we are currently validating.\n    * @param {string} valKey\n    *        the property that contains the specific value object.\n    */\n   verifyRoleAccount(key, valKey) {\n      if (this[key] == \"1\") {\n         if (this[valKey]) {\n            if (this[valKey].useRole) {\n               if (this[valKey].role.length == 0) {\n                  this.warningMessage(`can not resolve [${key}] Role setting.`);\n               }\n            }\n            if (this[valKey].useAccount) {\n               if (this[valKey].account.length == 0) {\n                  this.warningMessage(\n                     `can not resolve [${key}] Account setting.`\n                  );\n               }\n            }\n            // TODO:\n            // if (this[valKey].userFields.length > 0) {\n            //    // how to know if this is a problem?\n            // }\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCore.js\");\n\nmodule.exports = class ABProcessTaskService extends ABProcessTaskServiceCore {};\n","const AccountingBatchProcessingCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingBatchProcessing extends (\n   AccountingBatchProcessingCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         fieldBatchEntries: `${id}_fieldBatchEntries`,\n         fieldBatchFinancialPeriod: `${id}_fieldBatchFinancialPeriod`,\n         objectJE: `${id}_objectJE`,\n         fieldJEAccount: `${id}_fieldJEAccount`,\n         fieldJERC: `${id}_fieldJERC`,\n         fieldJEStatus: `${id}_fieldJEStatus`,\n         fieldJEStatusComplete: `${id}_fieldJEStatusComplete`,\n         objectBR: `${id}_objectBR`,\n         fieldBRFinancialPeriod: `${id}_fieldBRFinancialPeriod`,\n         fieldBRAccount: `${id}_fieldBRAccount`,\n         fieldBRRC: `${id}_fieldBRRC`,\n         fieldBREntries: `${id}_fieldBREntries`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      //\n      // set up field settings:\n      //\n\n      var blankField = {\n         id: 0,\n         value: L(\"Select a Field\"),\n      };\n      // blankField : generic Select a field entry\n\n      function defaultFields(objID) {\n         // create a new options array of Field Choices for the given obj.id\n\n         var fields = [blankField];\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      }\n\n      function updateFields(fieldPickers, fieldValues, defaultValue) {\n         // update the list of field select choices with the new field choices\n\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               // if (defaultValue) {\n               //    picker.define(\"value\", defaultValue);\n               // } else {\n               //    picker.define(\"value\", fieldValues[0].value);\n               // }\n               picker.refresh();\n               picker.show();\n            }\n         });\n      }\n\n      var batchFields = defaultFields(this.objectBatch);\n      // batchFields : the default list of fields for the Batch Object\n\n      var fieldPickersBatch = [\n         ids.fieldBatchEntries,\n         ids.fieldBatchFinancialPeriod,\n      ];\n      // fieldPickersBatch : the list of field selects to update for the Batch\n      //      object.\n\n      var jeFields = defaultFields(this.objectJE);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersJE = [\n         ids.fieldJEAccount,\n         ids.fieldJERC,\n         ids.fieldJEStatus,\n      ];\n      // fieldPickersJE : the list of field selects to update for the Journal Entry\n      //      object.\n\n      function compileStatusValues(statusField) {\n         var values = [{ id: 0, value: L(\"Select the Complete Value\") }];\n         if (statusField && statusField.options) {\n            statusField.options().forEach((o) => {\n               values.push({ id: o.id, value: o.text });\n            });\n         }\n         return values;\n      }\n\n      function updatePickerStatusComplete(values) {\n         var wbxComplete = $$(ids.fieldJEStatusComplete);\n         if (wbxComplete) {\n            // update fieldJEStatusComplete options\n            wbxComplete.define(\"options\", values);\n            wbxComplete.refresh();\n            // show fieldJEStatusComplete\n            wbxComplete.show();\n         }\n      }\n\n      function onStatusComplete(newVal) {\n         // pull the ABField object from newValue\n         var jeEntryID = $$(ids.objectJE).getValue();\n         var jeEntry = objectList.find((o) => o.id == jeEntryID);\n         if (jeEntry && jeEntry.object) {\n            var statusField = jeEntry.object.fieldByID(newVal);\n            if (statusField && statusField.options) {\n               // get the options as an []\n               jeFieldStatusValues = compileStatusValues(statusField);\n\n               updatePickerStatusComplete(jeFieldStatusValues);\n            }\n         }\n      }\n\n      var jeFieldStatusValues = compileStatusValues();\n      // jeFieldStatusValues : the list of status options from the fieldJEStatus\n      //      selected entry.\n\n      var brFields = defaultFields(this.objectBR);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersBR = [\n         ids.fieldBRFinancialPeriod,\n         ids.fieldBRAccount,\n         ids.fieldBRRC,\n         ids.fieldBREntries,\n      ];\n      // fieldPickersBR : the list of field selects to update for the Balance Record\n      //      object.\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        batchFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBatch, batchFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchEntries,\n               view: \"select\",\n               label: L(\"Batch->JE[]\"),\n               value: this.fieldBatchEntries,\n               name: \"fieldBatchEntries\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBatchFinancialPeriod,\n               view: \"select\",\n               label: L(\"Batch->FinancialPeriod\"),\n               value: this.fieldBatchFinancialPeriod,\n               name: \"fieldBatchFinancialPeriod\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"Journal Entry Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        jeFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersJE, jeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEAccount,\n               view: \"select\",\n               label: L(\"JE->Account\"),\n               value: this.fieldJEAccount,\n               name: \"fieldJEAccount\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJERC,\n               view: \"select\",\n               label: L(\"JE->RC\"),\n               value: this.fieldJERC,\n               name: \"fieldJERC\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJEStatus,\n               view: \"select\",\n               label: L(\"JE->Status\"),\n               value: this.fieldJEStatus,\n               name: \"fieldJEStatus\",\n               options: jeFields,\n               hidden: true,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        onStatusComplete(newVal);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEStatusComplete,\n               view: \"select\",\n               label: L(\"JE->Status->Complete\"),\n               value: this.fieldJEStatusComplete,\n               name: \"fieldJEStatusComplete\",\n               options: jeFieldStatusValues,\n               hidden: true,\n            },\n            {\n               id: ids.objectBR,\n               view: \"select\",\n               label: L(\"Balance Record\"),\n               value: this.objectBR,\n               name: \"objectBR\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        brFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBR, brFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBRFinancialPeriod,\n               view: \"select\",\n               label: L(\"BR->FP\"),\n               value: this.fieldBRFinancialPeriod,\n               name: \"fieldBRFinancialPeriod\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRAccount,\n               view: \"select\",\n               label: L(\"BR->Account\"),\n               value: this.fieldBRAccount,\n               name: \"fieldBRAccount\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRRC,\n               view: \"select\",\n               label: L(\"BR->RC\"),\n               value: this.fieldBRRC,\n               name: \"fieldBRRC\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBREntries,\n               view: \"select\",\n               label: L(\"BR->Entries\"),\n               value: this.fieldBREntries,\n               name: \"fieldBREntries\",\n               options: brFields,\n               hidden: true,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      // if there are already default values for our Objects,\n      // unhide the field selectors:\n      if (this.objectBatch && this.objectBatch != 0) {\n         updateFields(fieldPickersBatch, batchFields);\n      }\n\n      if (this.objectJE && this.objectJE != 0) {\n         updateFields(fieldPickersJE, jeFields);\n      }\n\n      if (this.fieldJEStatus) {\n         onStatusComplete(this.fieldJEStatus);\n      }\n\n      if (this.objectBR && this.objectBR != 0) {\n         updateFields(fieldPickersBR, brFields);\n      }\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPClose extends AccountingFPCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPValue: `${id}_processFPValue`,\n         objectFP: `${id}_objectFP`,\n         objectGL: `${id}_objectGL`,\n         objectAcc: `${id}_objectAcc`,\n         fieldFPStart: `${id}_fieldFPStart`,\n         fieldFPOpen: `${id}_fieldFPOpen`,\n         fieldFPStatus: `${id}_fieldFPStatus`,\n         fieldFPActive: `${id}_fieldFPActive`,\n         fieldGLStarting: `${id}_fieldGLStarting`,\n         fieldGLRunning: `${id}_fieldGLRunning`,\n         fieldGLAccount: `${id}_fieldGLAccount`,\n         fieldGLRc: `${id}_fieldGLRc`,\n         fieldGLDebit: `${id}fieldGLDebit`,\n         fieldGLCredit: `${id}_fieldGLCredit`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccAsset: `${id}_fieldAccAsset`,\n         fieldAccExpense: `${id}_fieldAccExpense`,\n         fieldAccLiabilities: `${id}_fieldAccLiabilities`,\n         fieldAccEquity: `${id}_fieldAccEquity`,\n         fieldAccIncome: `${id}_fieldAccIncome`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      };\n\n      let getStatusFieldOptions = (statusFieldId) => {\n         let result = [];\n         let fpObject = this.AB.objectByID(this.objectFP);\n         if (!fpObject) return result;\n\n         let fpStatusField = fpObject.fieldByID(statusFieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateFPFields = (fpFields) => {\n         [ids.fieldFPStart, ids.fieldFPOpen, ids.fieldFPStatus].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", fpFields);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateFPStatusFields = (fpStatusOptions) => {\n         $$(ids.fieldFPActive).define(\"options\", fpStatusOptions);\n         $$(ids.fieldFPActive).refresh();\n      };\n\n      let updateGLFields = (glFields) => {\n         [\n            ids.fieldGLRunning,\n            ids.fieldGLAccount,\n            ids.fieldGLRc,\n            ids.fieldGLDebit,\n            ids.fieldGLCredit,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", glFields);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccAsset,\n            ids.fieldAccExpense,\n            ids.fieldAccLiabilities,\n            ids.fieldAccEquity,\n            ids.fieldAccIncome,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let fpFields = getFieldOptions(this.objectFP);\n      let glFields = getFieldOptions(this.objectGL);\n      let accFields = getFieldOptions(this.objectAcc);\n      let fpStatusFields = getStatusFieldOptions(this.fieldFPStatus);\n      let accTypeOptions = getListOptions(this.objectAcc, this.fieldAccType);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Value\"),\n               value: this.processFPValue,\n               name: \"processFPValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFP,\n               view: \"select\",\n               label: L(\"FP Object\"),\n               value: this.objectFP,\n               name: \"objectFP\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        fpFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFPFields(fpFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"GL Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        glFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateGLFields(glFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAcc,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAcc,\n               name: \"objectAcc\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        accFields = getFieldOptions(newVal);\n                        updateAccFields(accFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPStart,\n               view: \"select\",\n               label: L(\"FP -> Start\"),\n               value: this.fieldFPStart,\n               name: \"fieldFPStart\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPOpen,\n               view: \"select\",\n               label: L(\"FP -> Open\"),\n               value: this.fieldFPOpen,\n               name: \"fieldFPOpen\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPStatus,\n               view: \"select\",\n               label: L(\"FP -> Status\"),\n               value: this.fieldFPStatus,\n               name: \"fieldFPStatus\",\n               options: fpFields,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        fpStatusFields = getStatusFieldOptions(newVal);\n                        updateFPStatusFields(fpStatusFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPActive,\n               view: \"select\",\n               label: L(\"FP -> Active\"),\n               value: this.fieldFPActive,\n               name: \"fieldFPActive\",\n               options: fpStatusFields,\n            },\n            {\n               id: ids.fieldGLStarting,\n               view: \"select\",\n               label: L(\"GL -> Starting BL\"),\n               value: this.fieldGLStarting,\n               name: \"fieldGLStarting\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRunning,\n               view: \"select\",\n               label: L(\"GL -> Running BL\"),\n               value: this.fieldGLRunning,\n               name: \"fieldGLRunning\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLAccount,\n               view: \"select\",\n               label: L(\"GL -> Account\"),\n               value: this.fieldGLAccount,\n               name: \"fieldGLAccount\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLRc,\n               name: \"fieldGLRc\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLDebit,\n               view: \"select\",\n               label: L(\"GL -> Debit\"),\n               value: this.fieldGLDebit,\n               name: \"fieldGLDebit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLCredit,\n               view: \"select\",\n               label: L(\"GL -> Credit\"),\n               value: this.fieldGLCredit,\n               name: \"fieldGLCredit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAcc || $$(ids.objectAcc).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccAsset,\n               view: \"select\",\n               label: L(\"Acc -> Asset\"),\n               value: this.fieldAccAsset,\n               name: \"fieldAccAsset\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccExpense,\n               name: \"fieldAccExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccLiabilities,\n               view: \"select\",\n               label: L(\"Acc -> Liabilities\"),\n               value: this.fieldAccLiabilities,\n               name: \"fieldAccLiabilities\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccEquity,\n               name: \"fieldAccEquity\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccIncome,\n               name: \"fieldAccIncome\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPYearCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPYearClose extends AccountingFPYearCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPYearValue: `${id}_processFPYearValue`,\n         objectFPYear: `${id}_objectFPYear`,\n         objectFPMonth: `${id}_objectFPMonth`,\n         objectGL: `${id}_objectGL`,\n         objectAccount: `${id}_objectAccount`,\n         valueFundBalances: `${id}_valueFundBalances`,\n         valueNetIncome: `${id}_valueNetIncome`,\n         fieldFPYearStart: `${id}_fieldFPYearStart`,\n         fieldFPYearEnd: `${id}_fieldFPYearEnd`,\n         fieldFPYearStatus: `${id}_fieldFPYearStatus`,\n         fieldFPYearActive: `${id}_fieldFPYearActive`,\n         fieldFPMonthStart: `${id}_fieldFPMonthStart`,\n         fieldFPMonthEnd: `${id}_fieldFPMonthEnd`,\n         fieldGLStartBalance: `${id}_fieldGLStartBalance`,\n         fieldGLRunningBalance: `${id}_fieldGLRunningBalance`,\n         fieldGLrc: `${id}_fieldGLrc`,\n         fieldAccNumber: `${id}_fieldAccNumber`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccTypeIncome: `${id}_fieldAccTypeIncome`,\n         fieldAccTypeExpense: `${id}_fieldAccTypeExpense`,\n         fieldAccTypeEquity: `${id}_fieldAccTypeEquity`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID, fieldKey) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object\n                  .fields((f) => f.key == fieldKey)\n                  .forEach((f) => {\n                     fields.push({ id: f.id, value: f.label, field: f });\n                  });\n            }\n         }\n         return fields;\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateAccNumberFields = (accNumberFields) => {\n         $$(ids.fieldAccNumber).define(\"options\", accNumberFields);\n         $$(ids.fieldAccNumber).refresh();\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccTypeIncome,\n            ids.fieldAccTypeExpense,\n            ids.fieldAccTypeEquity,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearDateOptions = (fpYearDateOptions) => {\n         [ids.fieldFPYearStart, ids.fieldFPYearEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpYearDateOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearStatusOptions = (fpYearStatusFields) => {\n         $$(ids.fieldFPYearStatus).define(\"options\", fpYearStatusFields);\n         $$(ids.fieldFPYearStatus).refresh();\n      };\n\n      let updateFPYearActiveOptions = (fpYearStatusOptions) => {\n         $$(ids.fieldFPYearActive).define(\"options\", fpYearStatusOptions);\n         $$(ids.fieldFPYearActive).refresh();\n      };\n\n      let updateFPMonthDateFields = (fpMonthDateOpts) => {\n         [ids.fieldFPMonthStart, ids.fieldFPMonthEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpMonthDateOpts);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateGlNumberFields = (glNumberOptions) => {\n         [ids.fieldGLStartBalance, ids.fieldGLRunningBalance].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", glNumberOptions);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateGlConnectFields = (glRcOptions) => {\n         $$(ids.fieldGLrc).define(\"options\", glRcOptions);\n         $$(ids.fieldGLrc).refresh();\n      };\n\n      let fpYearDateFields = getFieldOptions(this.objectFPYear, \"date\");\n      let fpYearStatusFields = getFieldOptions(this.objectFPYear, \"list\");\n      let fpYearStatusOptions = getListOptions(\n         this.objectFPYear,\n         this.fieldFPYearStatus\n      );\n      let fpMonthDateFields = getFieldOptions(this.objectFPMonth, \"date\");\n      let glNumberFields = getFieldOptions(this.objectGL, \"number\");\n      let glRcFields = getFieldOptions(this.objectGL, \"connectObject\");\n      let accNumberFields = getFieldOptions(this.objectAccount, \"number\");\n      let accTypeFields = getFieldOptions(this.objectAccount, \"list\");\n      let accTypeOptions = getListOptions(\n         this.objectAccount,\n         this.fieldAccType\n      );\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPYearValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Year Value\"),\n               value: this.processFPYearValue,\n               name: \"processFPYearValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFPYear,\n               view: \"select\",\n               label: L(\"FP Year Object\"),\n               value: this.objectFPYear,\n               name: \"objectFPYear\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPYearDateOptions(fpYearDateFields);\n\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateFPYearStatusOptions(accTypeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectFPMonth,\n               view: \"select\",\n               label: L(\"FP Month Object\"),\n               value: this.objectFPMonth,\n               name: \"objectFPMonth\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpMonthDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPMonthDateFields(fpMonthDateFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"Balance Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        glNumberFields = getFieldOptions(newVal, \"number\");\n                        updateGlNumberFields(glNumberFields);\n\n                        glRcFields = getFieldOptions(newVal, \"connectObject\");\n                        updateGlConnectFields(glRcFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAccount,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAccount,\n               name: \"objectAccount\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateAccFields(accTypeFields);\n\n                        accNumberFields = getFieldOptions(newVal, \"number\");\n                        updateAccNumberFields(accNumberFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.valueFundBalances,\n               view: \"text\",\n               label: L(\"Fund Balances Code\"),\n               value: this.valueFundBalances,\n               name: \"valueFundBalances\",\n            },\n            {\n               id: ids.valueNetIncome,\n               view: \"text\",\n               label: L(\"Net Income Code\"),\n               value: this.valueNetIncome,\n               name: \"valueNetIncome\",\n            },\n            {\n               id: ids.fieldFPYearStart,\n               view: \"select\",\n               label: L(\"FP Year -> Start\"),\n               value: this.fieldFPYearStart,\n               name: \"fieldFPYearStart\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearEnd,\n               view: \"select\",\n               label: L(\"FP Year -> End\"),\n               value: this.fieldFPYearEnd,\n               name: \"fieldFPYearEnd\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearStatus,\n               view: \"select\",\n               label: L(\"FP Year -> Status\"),\n               value: this.fieldFPYearStatus,\n               name: \"fieldFPYearStatus\",\n               options: fpYearStatusFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearStatusOptions = getListOptions(\n                           this.objectFPYear || $$(ids.objectFPYear).getValue(),\n                           newVal\n                        );\n                        updateFPYearActiveOptions(fpYearStatusOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPYearActive,\n               view: \"select\",\n               label: L(\"FP Year -> Active\"),\n               value: this.fieldFPYearActive,\n               name: \"fieldFPYearActive\",\n               options: fpYearStatusOptions,\n            },\n            {\n               id: ids.fieldFPMonthStart,\n               view: \"select\",\n               label: L(\"FP Month -> Start\"),\n               value: this.fieldFPMonthStart,\n               name: \"fieldFPMonthStart\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldFPMonthEnd,\n               view: \"select\",\n               label: L(\"FP Month -> End\"),\n               value: this.fieldFPMonthEnd,\n               name: \"fieldFPMonthEnd\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldGLStartBalance,\n               view: \"select\",\n               label: L(\"GL -> Start Balance\"),\n               value: this.fieldGLStartBalance,\n               name: \"fieldGLStartBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLRunningBalance,\n               view: \"select\",\n               label: L(\"GL -> Running Balance\"),\n               value: this.fieldGLRunningBalance,\n               name: \"fieldGLRunningBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLrc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLrc,\n               name: \"fieldGLrc\",\n               options: glRcFields,\n            },\n            {\n               id: ids.fieldAccNumber,\n               view: \"select\",\n               label: L(\"Acc -> Account Number\"),\n               value: this.fieldAccNumber,\n               name: \"fieldAccNumber\",\n               options: accNumberFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accTypeFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAccount ||\n                              $$(ids.objectAccount).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccTypeIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccTypeIncome,\n               name: \"fieldAccTypeIncome\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccTypeExpense,\n               name: \"fieldAccTypeExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccTypeEquity,\n               name: \"fieldAccTypeEquity\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingJEArchiveCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingJEArchive extends AccountingJEArchiveCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         objectBalance: `${id}_objectBalance`,\n         objectJE: `${id}_objectJE`,\n         objectJEArchive: `${id}_objectJEArchive`,\n\n         fieldBatchFiscalMonth: `${id}_fieldBatchFiscalMonth`,\n         fieldJeAccount: `${id}_fieldJeAccount`,\n         fieldJeRC: `${id}_fieldJeRC`,\n         fieldJeArchiveBalance: `${id}_fieldJeArchiveBalance`,\n         fieldBrFiscalMonth: `${id}_fieldBrFiscalMonth`,\n         fieldBrAccount: `${id}_fieldBrAccount`,\n         fieldBrRC: `${id}_fieldBrRC`,\n\n         fieldsMatch: `${id}_fieldsMatch`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      let processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      let objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getConnectFieldOptions = (objectId) => {\n         let object = this.AB.objectByID(objectId);\n         if (!object) return [];\n\n         let options = object\n            .fields((f) => f.isConnection)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         options.unshift({\n            id: 0,\n            value: L(\"Select a Field\"),\n         });\n\n         return options;\n      };\n\n      let updateFields = (fieldPickers, fieldValues) => {\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               picker.refresh();\n               picker.show();\n            }\n         });\n      };\n\n      let refreshBatchFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldBatchFiscalMonth], options);\n      };\n\n      let refreshBRFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields(\n            [ids.fieldBrAccount, ids.fieldBrFiscalMonth, ids.fieldBrRC],\n            options\n         );\n      };\n\n      let refreshJeFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeAccount, ids.fieldJeRC], options);\n      };\n\n      let refreshJeArchiveFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeArchiveBalance], options);\n      };\n\n      let refreshFieldsMatch = () => {\n         let $fieldsMatch = $$(ids.fieldsMatch);\n         if (!$fieldsMatch) return;\n\n         // clear form\n         webix.ui([], $fieldsMatch);\n\n         let JEObj = this.AB.objectByID(this.objectJE);\n         if (!JEObj) return;\n\n         let JEArchiveObj = this.AB.objectByID(this.objectJEArchive);\n         if (!JEArchiveObj) return;\n\n         // create JE acrhive field options to the form\n         JEArchiveObj.fields().forEach((f) => {\n            let jeFields = [];\n\n            if (f.isConnection) {\n               jeFields = JEObj.fields((fJe) => {\n                  return (\n                     fJe.isConnection &&\n                     fJe.settings &&\n                     f.settings &&\n                     fJe.settings.linkObject == f.settings.linkObject &&\n                     fJe.settings.linkType == f.settings.linkType &&\n                     fJe.settings.linkViaType == f.settings.linkViaType &&\n                     fJe.settings.isCustomFK == f.settings.isCustomFK\n                  );\n               });\n            } else {\n               jeFields = JEObj.fields((fJe) => fJe.key == f.key);\n            }\n\n            jeFields = jeFields.map((fJe) => {\n               return {\n                  id: fJe.id,\n                  value: fJe.label,\n               };\n            });\n\n            $fieldsMatch.addView({\n               view: \"select\",\n               name: f.id,\n               label: f.label,\n               options: jeFields,\n            });\n         });\n\n         $fieldsMatch.setValues(this.fieldsMatch || {});\n      };\n\n      let fieldBatchList = getConnectFieldOptions(this.objectBatch);\n      let fieldBalanceList = getConnectFieldOptions(this.objectBalance);\n      let fieldJeList = getConnectFieldOptions(this.objectJE);\n      let fieldJeArchiveList = getConnectFieldOptions(this.objectJEArchive);\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 180,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBatch = newVal;\n                     refreshBatchFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchFiscalMonth,\n               view: \"select\",\n               label: L(\"Batch -> Fiscal Month\"),\n               value: this.fieldBatchFiscalMonth,\n               name: \"fieldBatchFiscalMonth\",\n               options: fieldBatchList,\n            },\n            {\n               id: ids.objectBalance,\n               view: \"select\",\n               label: L(\"BR Object\"),\n               value: this.objectBalance,\n               name: \"objectBalance\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBalance = newVal;\n                     refreshBRFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBrFiscalMonth,\n               view: \"select\",\n               label: L(\"BR -> Fiscal Month\"),\n               value: this.fieldBrFiscalMonth,\n               name: \"fieldBrFiscalMonth\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrAccount,\n               view: \"select\",\n               label: L(\"BR -> Account\"),\n               value: this.fieldBrAccount,\n               name: \"fieldBrAccount\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrRC,\n               view: \"select\",\n               label: L(\"BR -> RC\"),\n               value: this.fieldBrRC,\n               name: \"fieldBrRC\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"JE Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJE = newVal;\n                     refreshJeFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeAccount,\n               view: \"select\",\n               label: L(\"JE -> Account\"),\n               value: this.fieldJeAccount,\n               name: \"fieldJeAccount\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.fieldJeRC,\n               view: \"select\",\n               label: L(\"JE -> RC\"),\n               value: this.fieldJeRC,\n               name: \"fieldJeRC\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.objectJEArchive,\n               view: \"select\",\n               label: L(\"JE Archive Object\"),\n               value: this.objectJEArchive,\n               name: \"objectJEArchive\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJEArchive = newVal;\n                     refreshJeArchiveFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeArchiveBalance,\n               view: \"select\",\n               label: L(\"JE Archive -> BR\"),\n               value: this.fieldJeArchiveBalance,\n               name: \"fieldJeArchiveBalance\",\n               options: fieldJeArchiveList,\n            },\n            {\n               view: \"fieldset\",\n               label: \"Fields Matching\",\n               body: {\n                  id: ids.fieldsMatch,\n                  view: \"form\",\n                  borderless: true,\n                  elements: [],\n               },\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      refreshFieldsMatch();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         if (s === \"fieldsMatch\") {\n            this[s] = $$(ids.fieldsMatch).getValues();\n         } else {\n            this[s] = this.property(ids[s]);\n         }\n      });\n   }\n};\n","const CalculateTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCalculateCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class CalculateTask extends CalculateTaskCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.formulaText) {\n         this.warningMessage(\"is missing a formula.\");\n      }\n\n      if (this.formulaText) {\n         const hash = {};\n         (this.process.processDataFields(this) || []).forEach((item) => {\n            hash[`{${item.label}}`] = item;\n         });\n\n         let exp = new RegExp(`{[^}]*}`, \"g\");\n         let entries = this.formulaText.match(exp) || [];\n         entries.forEach((entry) => {\n            if (!hash[entry]) {\n               this.warningMessage(\n                  `could not resolve process value [${entry}]`\n               );\n            }\n         });\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskServiceGetResetPasswordUrlCore = require(\"../../../core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js\");\n\nmodule.exports = class ABProcessTaskServiceGetResetPasswordUrl extends (\n   ABProcessTaskServiceGetResetPasswordUrlCore\n) {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.email) {\n         this.warningMessage(\"is missing the email address.\");\n      }\n\n      const processData = (this.process.processDataFields(this) ?? [])\n         .filter((item) => item.field?.key == \"email\")\n         .map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n      if (processData.length == 0) {\n         this.warningMessage(\"has no previous tasks exporting email fields.\");\n      }\n   }\n};\n","const InsertRecordTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceInsertRecordCore.js\");\n\nmodule.exports = class InsertRecordTask extends InsertRecordTaskCore {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.objectID) {\n         this.warningMessage(\"has no Object set.\");\n      }\n\n      const fv = Object.keys(this.fieldValues || {}) || [];\n      if (fv.length == 0) {\n         this.warningMessage(\"has no fields set\");\n      } else {\n         let isSet = false;\n         fv.forEach((f) => {\n            if (\n               this.fieldValues[f]?.set != \"0\" &&\n               this.fieldValues[f]?.value != null\n            ) {\n               isSet = true;\n            }\n         });\n         if (!isSet) {\n            this.warningMessage(\"has no fields set\");\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceQueryCore = require(\"../../../core/process/tasks/ABProcessTaskServiceQueryCore.js\");\n\nconst ABQLManager = require(\"../../ql/ABQLManager.js\");\n\nmodule.exports = class ABProcessTaskServiceQuery extends (\n   ABProcessTaskServiceQueryCore\n) {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      this.attributes = attributes;\n   }\n\n   ABQLManager() {\n      return ABQLManager;\n   }\n\n   warnings() {\n      // first get all our embedded QL Command warnings\n      let qlWarnings = [];\n      if (this.qlObj) {\n         qlWarnings = qlWarnings.concat(this.qlObj.warnings());\n      }\n      // run the QL Warnings through our .warningMessage() to get a message\n      // that includes this task's name:\n      qlWarnings.forEach((w) => {\n         if (w?.message) this.warningMessage(w.message);\n      });\n      let myWarnings = super.warnings();\n      return myWarnings.filter((w) => w); // filter out any undefined.\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (this.qlObj) {\n         this.qlObj.warningsEval();\n      } else {\n         this.warningMessage(`has no Query defined.`);\n      }\n\n      if (!this.name) {\n         this.warningMessage(\"does not have a name.\", {\n            attributes: this.attributes,\n         });\n      }\n\n      let hasSave = false;\n      let curr = this.qlObj;\n      while (curr) {\n         if (curr.key === \"row_save\" || curr.key === \"set_save\") {\n            hasSave = true;\n            curr = null; // just stop here.\n         } else {\n            curr = curr.next;\n         }\n      }\n\n      if (!hasSave) {\n         this.warningMessage(\"requires at least one Save operation.\");\n      }\n   }\n};\n","const SubProcessCore = require(\"../../../core/process/tasks/ABProcessTaskSubProcessCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class SubProcess extends SubProcessCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /*\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         isEnable: `${id}_isEnable`,\n         parameterId: `${id}_parameterId`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      // Pull query tasks option list\n      let parameterOptions = (this.process.processDataFields(this) || []).map(\n         (item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         }\n      );\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 120,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.isEnable,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               value: this.isEnable,\n            },\n            {\n               id: ids.parameterId,\n               view: \"richselect\",\n               label: L(\"Repeat for\"),\n               options: parameterOptions,\n               value: this.parameterId,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.isEnable = this.property(ids.isEnable);\n      this.parameterId = this.property(ids.parameterId);\n   }\n   */\n\n   /**\n    * @method diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties(bpmnModeler) {\n      let props = super.diagramProperties();\n      props = props || [{}];\n      props[0].def = props[0].def || {};\n\n      if (this.parameterId != null) {\n         props[0].def = props[0].def || {};\n         props[0].def.loopCharacteristics = bpmnModeler\n            .get(\"moddle\")\n            .create(\"bpmn:MultiInstanceLoopCharacteristics\");\n         props[0].def.loopCharacteristics.isSequential = true;\n      }\n\n      return props;\n   }\n\n   /**\n    * @method onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      let loopCharacteristics =\n         defElement.loopCharacteristics ||\n         defElement.businessObject.loopCharacteristics ||\n         {};\n\n      switch (loopCharacteristics.$type) {\n         case \"bpmn:MultiInstanceLoopCharacteristics\":\n            this.loopType = loopCharacteristics.isSequential\n               ? \"sequential\"\n               : \"parallel\";\n            break;\n         case \"bpmn:StandardLoopCharacteristics\":\n            this.loopType = \"looping\";\n            break;\n      }\n   }\n\n   /**\n    * @method destroy()\n    * destroy this sub process and inside tasks\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // reuse .destroy function of ABProcess\n      // to clear tasks within this sub process\n      return this.process.destroy.call(this);\n   }\n\n   /**\n    * @method save()\n    * persist this sub process\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // reuse .save function of ABProcess\n      // to update tasks within this sub process\n      return this.process.save.call(this);\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcessParticipant|ABProcessLane|ABProcessElement}\n    *\n    */\n   elementNewForModelDefinition(element) {\n      let task = this.AB.processElementNewForModelDefinition(element, this);\n\n      // Add a new task to this sub process\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownElementIDs || []).forEach((eID) => {\n         this.warningMessage(\n            `is referencing an unknown process element id[${eID}]`,\n            { process: this.id, eID }\n         );\n      });\n   }\n};\n","const ABProcessTaskUserCore = require(\"../../../core/process/tasks/ABProcessTaskUserCore.js\");\n\nmodule.exports = class ABProcessTaskUser extends ABProcessTaskUserCore {};\n","const ABProcessTaskUserApprovalCore = require(\"../../../core/process/tasks/ABProcessTaskUserApprovalCore.js\");\n\nmodule.exports = class ABProcessTaskUserApproval extends (\n   ABProcessTaskUserApprovalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskUserExternalCore = require(\"../../../core/process/tasks/ABProcessTaskUserExternalCore.js\");\n\nmodule.exports = class ABProcessTaskUserExternal extends (\n   ABProcessTaskUserExternalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTriggerCore = require(\"../../../core/process/tasks/ABProcessTriggerCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTrigger extends ABProcessTriggerCore {};\n","const ABProcessTriggerLifecycleCore = require(\"../../../core/process/tasks/ABProcessTriggerLifecycleCore.js\");\n\nmodule.exports = class ABProcessTriggerLifecycle extends (\n   ABProcessTriggerLifecycleCore\n) {};\n","const ABProcessTriggerTimerCore = require(\"../../../core/process/tasks/ABProcessTriggerTimerCore.js\");\n\nconst START_URL = \"/process/timer/#id#/start\";\nconst STOP_URL = \"/process/timer/#id#/stop\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTriggerTimerCore {\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    */\n   save() {\n      return (\n         Promise.resolve()\n            .then(() => super.save())\n            // Restart the timer\n            .then((result) => {\n               return this.AB.Network.put({\n                  url: (this.isEnabled ? START_URL : STOP_URL).replace(\n                     \"#id#\",\n                     this.id\n                  ),\n               });\n            })\n      );\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nconst ABQLCore = require(\"../../core/ql/ABQLCore.js\");\nconst RowUpdater = require(\"../RowUpdater.js\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABQL extends ABQLCore {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super(attributes, parameterDefinitions, prevOP, task, AB);\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      // const allColumns = row.getChildViews();\n      // allColumns.shift(); // remove selector\n      this.parameterDefinitions.forEach((pDef) => {\n         // const col = allColumns.shift();\n         const myID = this.uiID(id);\n\n         this.ids = this.toIDs(myID);\n         this.params = this.params ?? {};\n\n         let $uiCondition = null;\n\n         switch (pDef.type) {\n            case \"objectFields\":\n               this.params[pDef.name] = $$(this.ids.objectfields).getValue();\n\n               break;\n\n            case \"objectName\":\n               this.params[pDef.name] = $$(this.ids.objectname).getValue();\n\n               break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n               $uiCondition = $$(this.ids.condition);\n\n               if ($uiCondition) {\n                  const condition = $uiCondition.getValue();\n\n                  if (condition && condition !== \"\") {\n                     this.params[pDef.name] = JSON.parse(condition);\n                  }\n               }\n\n               break;\n\n            case \"taskParam\":\n               this.params[pDef.name] = $$(this.ids.taskparam).getValue();\n\n               break;\n         }\n      });\n   }\n\n   /*\n    * @method toIDs()\n    * generate a set of unique webix ids to use for our UI.\n    * @param {string} myID\n    *        the unique id generated by .uiID()\n    */\n   toIDs(myID) {\n      return {\n         condition: `${myID}_condition`,\n         objectfields: `${myID}_objectfields`,\n         objectname: `${myID}_objname`,\n         popup: `${myID}_popup`,\n         select: `${myID}_select`,\n         shorthand: `${myID}_shorthand`,\n         taskparam: `${myID}_taskparam`,\n         spacer: `${myID}_spacer`,\n      };\n   }\n\n   /**\n    * @method uiAddParamForDef()\n    * Add an operation parameter for each parameterDefinition we have defined.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParamForDef(pDef, id, ui) {\n      // params are added to a .col[] definition.\n      // if our ui isn't down to the current .col element, then drill down\n      if (!ui.cols) {\n         if (ui.rows) {\n            for (let i = 0; i < ui.rows.length; i++)\n               if (ui.rows[i].cols) {\n                  this.uiAddParamForDef(pDef, id, ui.rows[i]);\n\n                  break;\n               }\n         } else throw new Error(\"provided ui is not able to add a parameter!\");\n\n         return;\n      }\n\n      const paramUI = this.uiParamUI(pDef, id);\n\n      if (paramUI) {\n         // if we only have 1 param\n         if (this.parameterDefinitions.length === 1) {\n            ui.cols.pop();\n            ui.cols.push(paramUI);\n         }\n         // if we haven't already added a parameter\n         else {\n            // create a row stack of parameters:\n            if (ui.cols.length < 3)\n               ui.cols.push({\n                  rows: [paramUI],\n               });\n            // add to the current stack of parameters\n            else ui.cols[2].rows.push(paramUI);\n         }\n      }\n   }\n\n   /**\n    * @method uiAddNext()\n    * Add the next row selector for this operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddNext(id, ui) {\n      const uiRow = this.uiNextRow(id);\n\n      // if we have a next operation defined, then add on the ui definitions\n      // for that operation:\n      if (this.next) {\n         this.next.uiAddParams(id, uiRow);\n         ui.rows.push(uiRow);\n         this.next.uiAddNext(id, ui);\n      }\n      // otherwise we just leave the selector:\n      else ui.rows.push(uiRow);\n   }\n\n   /**\n    * @method uiAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParams(id, ui) {\n      this.parameterDefinitions.forEach((pDef) => {\n         this.uiAddParamForDef(pDef, id, ui);\n      });\n   }\n\n   /*\n    * @method uiID()\n    * generate a unique webix id for this operation.\n    * @param {string} id\n    *        the webix id of the base property.query holder\n    */\n   uiID(id) {\n      if (this.prevOP) return `${this.prevOP.uiID(id)}_${this.constructor.key}`;\n\n      return `${id}_${this.constructor.key}`;\n   }\n\n   /*\n    * uiXXX Operations:\n    * are UI building operations that are performed BEFORE the webix UI\n    * is generated.  They work by filling out a {ui} object definition\n    * that webix will eventually create into the DOM.\n    *\n    * viewXXX Operations:\n    * are UI building operations that are performed AFTER the webix UI\n    * is generated. They work by adding in child views to an existing\n    * DOM.\n    */\n\n   /**\n    * @method uiNextRow()\n    * return the webix UI definition for the next of UI chaining.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiNextRow(id) {\n      const options = this.constructor.NextQLOps.map((op) => {\n         return { id: op.key, value: op.label };\n      });\n\n      options.unshift({ id: 0, value: L(\"choose next operation\") });\n\n      const myID = this.uiID(id);\n      const ids = this.toIDs(myID);\n\n      const uiRow = {\n         cols: [\n            {\n               id: ids.select,\n               view: \"select\",\n               value: this.next ? this.next.constructor.key : 0,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     const resetValue = () => {\n                        const select = $$(ids.select);\n\n                        select.blockEvent();\n                        select.setValue(oldValue);\n                        select.unblockEvent();\n                     };\n\n                     if (newValue === oldValue) return;\n\n                     const newOP = this.constructor.NextQLOps.find(\n                        (op) => op.key === newValue\n                     );\n\n                     if (!newOP) {\n                        resetValue();\n\n                        return;\n                     }\n\n                     const thisRow = $$(ids.select).getParentView();\n                     const thisQuery = thisRow.getParentView();\n                     const addOP = () => {\n                        if (newOP) {\n                           const nextOP = new newOP(\n                              {},\n                              this,\n                              this.task,\n                              this.AB\n                           );\n\n                           this.next = nextOP;\n\n                           nextOP.viewAddParams(id, thisRow);\n                           nextOP.viewAddNext(id, thisQuery);\n                        }\n                     };\n\n                     // if there are rows after this one, then warn\n                     // about changing\n                     const allRows = thisQuery.getChildViews();\n\n                     if (allRows.length - 1 > allRows.indexOf(thisRow))\n                        webix.confirm({\n                           title: L(\"continue?\"),\n                           text: L(\n                              \"changing this rule will reset any following rules.\"\n                           ),\n                           ok: L(\"Yes\"),\n                           cancel: L(\"No\"),\n                           callback: (result) => {\n                              if (result) {\n                                 // remove the current additional Rows:\n                                 let ir = allRows.length - 1;\n\n                                 while (\n                                    allRows[ir].config.id !== thisRow.config.id\n                                 ) {\n                                    thisQuery.removeView(allRows[ir]);\n                                    ir--;\n                                 }\n\n                                 // now remove the parameters\n                                 const allCols = thisRow.getChildViews();\n\n                                 let ic = allCols.length;\n\n                                 while (ic > 1) {\n                                    thisRow.removeView(allCols[ic - 1]);\n                                    ic--;\n                                 }\n\n                                 addOP();\n                              } else resetValue();\n                           },\n                        });\n                     else addOP();\n                  },\n               },\n            },\n            {\n               id: ids.spacer,\n            },\n         ],\n      };\n\n      return uiRow;\n   }\n\n   uiNextRowSelectorRefresh(id) {\n      const $select = $$(this.ids.select);\n\n      if (!$select) return;\n\n      const uiNextRow = this.uiNextRow(id);\n\n      const uiNextCol =\n         uiNextRow.cols.filter((c) => c.id == $select.config.id)[0] ??\n         uiNextRow.cols[1];\n\n      if (uiNextCol) AB.Webix.ui(uiNextCol, $select);\n   }\n\n   /**\n    * @method uiParamUI()\n    * return the webix UI definition for the parameter entry of this current\n    * operation.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiParamUI(pDef, id) {\n      const uiConfig = AB.Config.uiSettings();\n\n      let myID = this.uiID(id);\n\n      this.ids = this.toIDs(myID);\n\n      let paramUI = null;\n      let options = null;\n      let Filter = null;\n      let hashFieldIDs = null;\n      let initialCond = null;\n      let displayLabel = null;\n      let initialValue = null;\n      let Updater = null;\n      let popUp = null;\n\n      // now add the parameter\n      switch (pDef.type) {\n         case \"objectFields\":\n            // an objectFields parameter returns a select list of fields\n            // available on an Object.\n            if (this.object)\n               options = this.object.fields().map((f) => {\n                  return { id: f.id, value: f.label, icon: `fa fa-${f.icon}` };\n               });\n\n            options.unshift({\n               id: \"_PK\",\n               value: \"[PK]\",\n            });\n\n            // if not set, default .fieldID to the 1st entry in options\n            // so we will have a default.  In use, if a user sees the\n            // 1st item and continues on, then we will have chosen it.\n            if (!this.fieldID && options.length > 0) {\n               // act like it was selected:\n               this.params[pDef.name] = options[0].id;\n               this.paramChanged(pDef, id);\n            }\n\n            paramUI = {\n               id: this.ids.objectfields,\n               view: \"richselect\",\n               label: L(\"Field\"),\n               labelWidth: 70,\n               value: this.fieldID,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectName\":\n            // an objectName parameter returns a select list of available\n            // objects in this ABFactory.\n            options = this.AB.objects().map((o) => {\n               return { id: o.id, value: o.label };\n            });\n\n            if (!this.objectID && options.length > 0) {\n               this.objectID = options[0].id;\n               this.params[pDef.name] = this.objectID;\n               this.paramChanged(pDef);\n            }\n\n            paramUI = {\n               id: this.ids.objectname,\n               view: \"select\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: this.objectID,\n               options: options,\n               on: {\n                  onChange: (newValue /*, oldValue */) => {\n                     this.params = this.params ?? {};\n\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectConditions\":\n            // objectConditions: returns a filter text summary, that when\n            // clicked, pops up a Filter Entry Popup.\n            // the actual value is stored in a hidden field.\n\n            // we will create a new FilterComplex() object to use for our\n            // filtering.\n            // Our goal is to create a special filter entry for each avaiable\n            // process data value that is available.\n            // A filter entry needs to look like:\n            // {\n            //     id: `{string}`,      // A unique id selector for this filter\n            //     name: `{string}`,    // the operation name displayed\n            //     type, {obj}          // an object defining the editor to show\n            //     fn: ()=>{}           // a function used for filtering elements\n            // }\n            //\n            // In our filters, we are assigning filters to EACH field by the\n            // field.id.  So the type definition needs to look like:\n            // {\n            //     \"uniqueID of the field (field.id)\" : {webixUI definition}\n            // }\n\n            Filter = this.AB.filterComplexNew(id);\n            hashFieldIDs = this.availableProcessDataFieldsHash();\n\n            if (this.object) {\n               Filter.fieldsLoad(this.object.fields(), this.object);\n               // NOTE: this will create default filters based upon the\n               // object fields() and their types\n\n               // Now we need to add in the Process Data Fields:\n               // for each Process Data Field that matches our same object\n               const foundFields = Object.keys(hashFieldIDs).map(\n                  (f) => hashFieldIDs[f]\n               );\n\n               Filter.processFieldsLoad(foundFields);\n               /*\n               (foundFields ?? []).forEach((processField) => {\n                  const type = {};\n                  if (processField.field) {\n                     type[processField.field.id] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  } else {\n                     // if there is no .field, it is probably an embedded special field\n                     // like: .uuid\n                     const key = processField.key.split(\".\").pop();\n                     type[key] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  }\n\n                  // add an \"equals\" and \"not equals\" filter for each:\n                  Filter.filterAdd([\n                     {\n                        id: `context_equals`,\n                        name: `equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a === b;\n                        }\n                     },\n                     {\n                        id: `context_not_equal`,\n                        name: `not equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a !== b;\n                        }\n                     }\n                  ]);\n                  \n               }); */\n            }\n\n            // every time the Filter \"saves\" it's data, it emits this event:\n            // take the given condition and store it in our hidden element.\n            Filter.on(\"save\", (condition) => {\n               // @param {obj} condition an object describing the filter\n               // condition.\n\n               this.params = this.params ?? {};\n               this.params[pDef.name] = condition;\n\n               const shortHand = $$(this.ids.shorthand);\n\n               shortHand.define({\n                  label: Filter.toShortHand(),\n               });\n               shortHand.refresh();\n\n               // NOTE: the hidden element is a text field, so convert the\n               // {condition object} => a string\n               const elCondition = $$(this.ids.condition);\n\n               elCondition.define({\n                  value: JSON.stringify(this.params[pDef.name]),\n               });\n               elCondition.refresh();\n            });\n\n            // create the initial condition value from our inputs.\n            initialCond = \"\";\n\n            if (this.params && this.params[pDef.name]) {\n               Filter.setValue(this.params[pDef.name]);\n               initialCond = JSON.stringify(this.params[pDef.name]);\n            } else {\n               Filter.setValue(null);\n            }\n\n            // what we show on the panel, is a text representation\n            // of the current condition.\n            displayLabel = Filter.toShortHand();\n\n            paramUI = {\n               rows: [\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: displayLabel,\n                     on: {\n                        onItemClick: () => {\n                           Filter.popUp($$(this.ids.shorthand), null, {\n                              pos: \"center\",\n                           });\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the condition\n                  // value we will parse out later\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialCond,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"objectValues\":\n            // objectValues : shows a condenced textual representation of the\n            // field => value changes.  Clicking on the text will show a popup\n            // that allows you to add/remove additional field updates for\n            // the current object.\n\n            initialValue = \"\";\n            Updater = new RowUpdater(myID, this.AB);\n\n            if (this.object) Updater.objectLoad(this.object);\n\n            // Set processed data key to value options\n            Updater.setExtendedOptions(\n               (this.task.process.processDataFields(this.task) ?? []).map(\n                  (item) => {\n                     return {\n                        id: item.key,\n                        value: item.label,\n                     };\n                  }\n               )\n            );\n\n            // NOTE: .setValue() must be called once the RowUpdater is already\n            // displayed.  See the end of popUp() below:\n            if (this.params && this.params[pDef.name]) {\n               Updater.setValue(this.params[pDef.name]);\n               initialValue = JSON.stringify(this.params[pDef.name]);\n            }\n\n            popUp = () => {\n               // show the RowUpdater in a popup:\n               const ui = {\n                  id: this.ids.popup,\n                  view: \"popup\",\n                  position: \"center\",\n                  minWidth: 700,\n                  modal: true,\n                  resize: true,\n                  body: {\n                     rows: [\n                        {\n                           height: 30,\n                           borderless: true,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value: \"X\",\n                                 width: 30,\n                                 click: () => {\n                                    $$(this.ids.popup).hide();\n                                 },\n                              },\n                           ],\n                        },\n                        Updater.ui(),\n                        {\n                           view: \"button\",\n                           value: L(\"Save\"),\n                           css: \"webix_primary\",\n                           click: () => {\n                              this.params = this.params ?? {};\n                              this.params[pDef.name] = Updater.getValue();\n                              const sh = $$(this.ids.shorthand);\n\n                              sh.define({\n                                 badge: this.params[pDef.name].length,\n                              });\n                              sh.refresh();\n\n                              const cond = $$(this.ids.condition);\n\n                              cond.define({\n                                 value: JSON.stringify(this.params[pDef.name]),\n                              });\n                              cond.refresh();\n\n                              $$(this.ids.popup).hide();\n                           },\n                        },\n                     ],\n                  },\n               };\n\n               // create and show the popup\n               this._myPopup = webix.ui(ui);\n               this._myPopup.show();\n\n               // NOTE: on a RowUpdater, the values need to be set\n               // AFTER it is displayed:\n               if (this.params && this.params[pDef.name])\n                  Updater.setValue(this.params[pDef.name]);\n            };\n\n            paramUI = {\n               rows: [\n                  // the textual shorthand for these values\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: L(\"Update Popout\"),\n                     badge: this.params[pDef.name]?.length,\n                     on: {\n                        onItemClick: () => {\n                           popUp();\n                        },\n                     },\n                  },\n                  // the hidden field that contains the results\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialValue,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"taskParam\":\n            paramUI = {\n               id: this.ids.taskparam,\n               view: \"text\",\n               label: L(\"Variable\"),\n               labelWidth: 70,\n               value: this.params[pDef.name],\n               placeholder: L(\"Enter parameter name\"),\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n      }\n\n      return paramUI;\n   }\n\n   /**\n    * @method viewAddNext()\n    * Add the next selector row After this Operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} topView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the top container that is adding a new\n    *        row for each operation.\n    */\n   viewAddNext(id, topView) {\n      const uiRow = this.uiNextRow(id);\n\n      topView.addView(uiRow);\n   }\n\n   /**\n    * @method viewAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} rowView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the ROW that the parameters are added to\n    */\n   viewAddParams(id, rowView) {\n      const params = [];\n\n      this.parameterDefinitions.forEach((pDef) => {\n         // get the definition from .uiParamUI()\n         params.push(this.uiParamUI(pDef, id));\n      });\n\n      let toInsert = null;\n\n      // stack parameters in a row if there are more than 1\n      if (params.length > 1)\n         toInsert = {\n            rows: params,\n         };\n      else toInsert = params.pop();\n\n      if (toInsert) {\n         rowView.removeView(rowView.getChildViews()[1]);\n         rowView.addView(toInsert);\n      }\n   }\n\n   warnings() {\n      let myWarnings = this._warnings || [];\n      if (this.next)\n         myWarnings = myWarnings.concat(this.next.warnings()).filter((w) => w);\n      return this.AB.uniq(myWarnings);\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      if (this.next) this.next.warningsEval();\n   }\n\n   // warningsAll() {\n   //    let myWarnings = this.warnings();\n   //    if (this.next) {\n   //       myWarnings = myWarnings.concat(this.next.warningsAll());\n   //    }\n   //    return myWarnings;\n   // }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(message) {\n      // this.emit(\"warning\", `${this.key}: ${message}`);\n      this._warnings = this._warnings || [];\n      this._warnings.push({ message: `${this.key}: ${message}` });\n   }\n\n   ////\n   //// QueryString Parser routines:\n   ////\n}\n\nmodule.exports = ABQL;\n","/*\n * ABQLFind\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\nconst ABQLFindCore = require(\"../../core/ql/ABQLFindCore.js\");\n\nclass ABQLFind extends ABQLFindCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLFind;\n","/*\n * ABQLManager\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst ABQLManagerCore = require(\"../../core/ql/ABQLManagerCore.js\");\nconst ABQLRootObject = require(\"./ABQLRootObject.js\");\n\nconst ABQLManager = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current {ABFactory} active for this interface.\n    * @return {ABQL} | null\n    */\n   fromAttributes: ABQLManagerCore.fromAttributes,\n\n   /**\n    * @method ids()\n    * return a set of unique webix ids for the ui portions of this object.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @return {object}\n    */\n   ids: (id) => {\n      return {\n         root: `${id}_root`,\n         select: `${id}_root_select`,\n         options: `${id}_root_options`,\n      };\n   },\n\n   /**\n    * @method builder\n    * return a UI component like object that will display the QL builder.\n    * The component will support:\n    *\t\t.ui(id) : returns a webix ui definition for the current builder\n    *\t\t.init(id) : performs any special actions to prepare the webix ui\n    * @param {object} rootOP\n    *\t\t  the root ABQLxxxx operation\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} active for this display.\n    * @return {object}\n    */\n   builder: (rootOP, task, AB) => {\n      // const rootOP = this.fromAttributes(attributes, task, AB);\n      // const L = (...params) => AB.Multilingual.label(...params);\n\n      return {\n         ui: (id) => {\n            rootOP = rootOP ?? new ABQLRootObject({}, task, AB);\n\n            const ids = ABQLManager.ids(id);\n            const ui = {\n               rows: [\n                  {\n                     id: ids.root,\n                     cols: [],\n                  },\n               ],\n            };\n\n            rootOP.uiAddParams(id, ui);\n            rootOP.uiAddNext(id, ui);\n\n            return ui;\n         },\n         init: (id) => {},\n      };\n   },\n\n   /**\n    * @method parse\n    * step through the current properties panel and decode the QL objects\n    * and their parameters.\n    * Return the .toOBJ() attributes definition as a result.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} object that is currently active.\n    * @return {object}\n    */\n   parse: (id, task, AB) => {\n      const ids = ABQLManager.ids(id);\n      const root = $$(ids.root);\n\n      if (!root) {\n         console.warn(\"ABQLManager.parse(): unable to find root element\");\n\n         return;\n      }\n\n      // get all the input rows\n      const rows = root.getParentView().getChildViews();\n\n      const parseCurrent = (rows, options, prevOP) => {\n         if (rows.length === 0) return null;\n\n         const row = rows.shift();\n\n         // get which operation was selected\n         // find the operation selector (skip any indents)\n         const views = row.getChildViews();\n\n         let selector = views.shift();\n\n         while (!selector?.getValue) selector = views.shift();\n\n         const value = selector.getValue();\n\n         // figure out the QLOP object\n         const OP = options.find((o) => {\n            return o.key === value || o.key === ABQLRootObject.key;\n         });\n\n         if (OP) {\n            let currOP = null;\n\n            if (prevOP) currOP = new OP({}, prevOP, task, AB);\n            else currOP = new OP({}, task, AB);\n\n            // now get currOP to initialize from it's parameters:\n            currOP.parseRow(row, id);\n\n            // carry forward any .object info if not already established\n            // by the .parseRow():\n            if (!currOP.object && prevOP) {\n               currOP.object = prevOP.object;\n               currOP.objectID = currOP.object?.id ?? null;\n            }\n\n            const nextRow = parseCurrent(\n               rows,\n               currOP.constructor.NextQLOps,\n               currOP\n            );\n\n            currOP.next = nextRow;\n\n            return currOP;\n         }\n\n         return null;\n      };\n\n      const operation = parseCurrent(rows, ABQLManagerCore.QLOps, null);\n\n      return operation;\n   },\n};\n\nmodule.exports = ABQLManager;\n","/*\n * ABQLRootObject\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQLRootObjectCore = require(\"../../core/ql/ABQLRootObjectCore.js\");\n\nclass ABQLObject extends ABQLRootObjectCore {\n   // constructor(attributes, task, application) {\n   //     // NOTE: keep this so we can insert the prevOp === null\n   //     super(attributes, ParameterDefinitions, null, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"name\") {\n         this.objectID = this.params[pDef.name];\n         this.object = this.objectLookup(this.objectID);\n\n         // ?? is this correct?\n         // if we already have created a .next operation, and we have\n         // just changed our .object, pass that information forward.\n         if (this.next) this.next.object = this.object;\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      // for an Object operation, we need to set our .objectID after\n      // the values are parsed.\n\n      if (this.params.name) {\n         this.objectID = this.params.name;\n         this.object = this.objectLookup(this.params.name);\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.object) {\n         this.warningMessage(\"has no object set.\", {\n            objectID: this.objectID,\n         });\n      }\n   }\n}\n\nmodule.exports = ABQLObject;\n","const ABQLRowPluckCore = require(\"../../core/ql/ABQLRowPluckCore.js\");\n\nclass ABQLRowPluck extends ABQLRowPluckCore {\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n\n      // Re-generate next select options\n      if (pDef.name === \"fieldID\") this.uiNextRowSelectorRefresh(id);\n   }\n}\n\nmodule.exports = ABQLRowPluck;\n","/*\n * ABQLRowSave\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLRowSaveCore = require(\"../../core/ql/ABQLRowSaveCore.js\");\n\nclass ABQLRowSave extends ABQLRowSaveCore {\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n   }\n}\n\nmodule.exports = ABQLRowSave;\n","/*\n * ABQLRowUpdate\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQLRowUpdateCore = require(\"../../core/ql/ABQLRowUpdateCore.js\");\n\nclass ABQLRowUpdate extends ABQLRowUpdateCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   //     // #Hack! : when an Operation provides the same .NextQlOps that it\n   //     // was defined in, we can't require it again ==> circular dependency.\n   //     // so we manually set it here from the operation that created us:\n   //     this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLRowUpdate;\n","/*\n * ABQLSetFirst\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQLSetFirstCore = require(\"../../core/ql/ABQLSetFirstCore.js\");\n\nclass ABQLSetFirst extends ABQLSetFirstCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLSetFirst;\n","/*\n * ABQLSetPluck\n *\n * An ABQLSetPluck can process a set (array) of data and pluck out a specified\n * field from each row to then make an array of values that only contain that \n * field.\n * \n * Example: \narray = [\n {\n\tname: \"Neo\",\n\temail: \"neo@thematrix.com\",\n\trelationships: [ { morpheous}, {trinity} ]\n },\n {\n\tname: \"trinity\",\n\temail: \"trinity@thematrix.com\",\n\trelationships: [ {neo}, {morpheous} ]\n },\n {\n\tname: \"morpheous\",\n\temail: \"morpheous@thematrix.com\",\n\trelationships: [ {neo}, {trinity}]\n }\n\n]\n\npluck(\"email\") :\n\t[\n\t\t\"neo@thematrix.com\",\n\t\t\"trinity@thematrix.com\",\n\t\t\"morpheous@thematrix.com\"\n\t]\n\npluck(\"relationships\"):\n\t[\n\t\t{neo},\n\t\t{trinity},\n\t\t{morpheous}\n\t]\n *\n */\n\nconst ABQLSetPluckCore = require(\"../../core/ql/ABQLSetPluckCore.js\");\n\nclass ABQLSetPluck extends ABQLSetPluckCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"fieldID\") {\n         // debugger;\n         this.fieldID = this.params[pDef.name];\n         // v2 method:\n         // this.field = this.object.fieldByID(this.fieldID);\n         this.field = this.object.fieldByID(this.fieldID);\n\n         // v2 method:\n         // if (this.field && this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n\n            // ?? is this correct?\n            // if we already have created a .next operation, and we have\n            // just changed our .object, pass that information forward.\n            if (this.next) this.next.object = this.objectOut;\n         }\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * NOTE: in this process our .object and .objectOut isn't as simple\n    * as the other QL node types.  We'll have to interpolate our values\n    * from the given fieldID in our property panel.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.fieldID = this.params.fieldID;\n\n      // we now have to build backwards from the current fieldID to set our\n      // relevant .object and .objectOut\n      this.AB.objects((o) => {\n         if (!this.field) {\n            // const field = o.fieldByID(this.fieldID);\n            const field = o.fieldByID(this.fieldID);\n\n            if (field) this.field = field;\n         }\n      });\n\n      if (this.field) {\n         this.object = this.field.object;\n\n         // v2 method:\n         // if (this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n         }\n      }\n   }\n}\n\nmodule.exports = ABQLSetPluck;\n","/*\n * ABQLSetSave\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSaveCore = require(\"../../core/ql/ABQLSetSaveCore.js\");\n\nclass ABQLSetSave extends ABQLSetSaveCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"task_param\") {\n         this.taskParam = this.params[pDef.name];\n      }\n   }\n\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.taskParam = this.params[\"task_param\"];\n\n      if (!this.registered) {\n         this.task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.taskParam || this.taskParam === \"\") {\n         this.warningMessage(\"requires a name to save our data as.\");\n      }\n   }\n}\n\nmodule.exports = ABQLSetSave;\n","const ABViewCore = require(\"../../core/views/ABViewCore.js\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nmodule.exports = class ABView extends ABViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewComponent(this);\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"view\",\n         \"page\",\n         \"formpanel\",\n         \"viewcontainer\",\n         // not allowed Detail's widgets\n         \"detailcheckbox\",\n         \"detailcustom\",\n         \"detailconnect\",\n         \"detailimage\",\n         \"detailselectivity\",\n         \"detailtext\",\n         \"detailtree\",\n         // not allowed Form's widgets\n         \"button\",\n         \"checkbox\",\n         \"connect\",\n         \"datepicker\",\n         \"fieldcustom\",\n         \"textbox\",\n         \"numberbox\",\n         \"selectsingle\",\n         \"selectmultiple\",\n         \"formtree\",\n         \"fieldreadonly\",\n         // not allowed Chart's Widgets\n         \"pie\",\n         \"bar\",\n         \"line\",\n         \"area\",\n         // not allowed Report page\n         \"report\",\n         \"reportPage\",\n         \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll(); // ABViewManager.allViews();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABViewCSVExporterCore = require(\"../../core/views/ABViewCSVExporterCore\");\nconst ABViewCSVExporterComponent = require(\"./viewComponent/ABViewCSVExporterComponent\");\n\nmodule.exports = class ABViewCSVExporter extends ABViewCSVExporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewCSVExporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../core/views/ABViewCSVImporterCore\");\nconst ABViewCSVImporterComponent = require(\"./viewComponent/ABViewCSVImporterComponent\");\n\nmodule.exports = class ABViewCSVImporter extends ABViewCSVImporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(idBase) {\n      return new ABViewCSVImporterComponent(this, idBase);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.availableFieldIds?.length) {\n         this.warningsMessage(\"has no fields set for matching import data\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewCarouselComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewCarousel_${baseView.id}`,\n         Object.assign(\n            {\n               carousel: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_doOnShow = () => {\n         this.onShow();\n      };\n\n      this._handler_doReload = () => {\n         // this.datacollection?.reloadData();\n      };\n\n      this._handler_doFilter = (fnFilter, filterRules) => {\n         // NOTE: fnFilter is depreciated and will be removed.\n\n         // this.onShow(filterRules);\n         const dv = this.datacollection;\n\n         if (!dv) return;\n\n         dv.filterCondition(filterRules);\n         dv.reloadData();\n      };\n\n      this._handler_busy = () => {\n         this.busy();\n      };\n\n      this._handler_ready = () => {\n         this.ready();\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      this.filterUI = baseView.filterHelper; // component(/* App, idBase */);\n      this.linkPage = baseView.linkPageHelper.component(/* App, idBase */);\n\n      const spacer = {};\n      const settings = this.settings;\n\n      if (settings.width === 0)\n         Object.assign(spacer, {\n            width: 1,\n         });\n\n      const _ui = super.ui([\n         {\n            borderless: true,\n            cols: [\n               spacer, // spacer\n               {\n                  borderless: true,\n                  rows: [\n                     this.filterUI.ui(), // filter UI\n                     {\n                        id: ids.carousel,\n                        view: \"carousel\",\n                        cols: [],\n                        width: settings.width,\n                        height: settings.height,\n                        navigation: {\n                           items: !settings.hideItem,\n                           buttons: !settings.hideButton,\n                           type: settings.navigationType,\n                        },\n                        on: {\n                           onShow: () => {\n                              const activeIndex = $$(\n                                 ids.carousel\n                              ).getActiveIndex();\n\n                              this.switchImage(activeIndex);\n                           },\n                        },\n                     },\n                  ],\n               },\n               spacer, // spacer\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) {\n         AB.notify.builder(`Datacollection is ${dv}`, {\n            message: \"This is an invalid datacollection\",\n         });\n\n         return;\n      }\n\n      const object = dv.datasource;\n\n      if (!object) {\n         AB.notify.developer(`Object is ${dv}`, {\n            message: \"This is an invalid object\",\n         });\n\n         return;\n      }\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n      dv.on(\"loadData\", this._handler_doOnShow);\n\n      dv.removeListener(\"update\", this._handler_doReload);\n      dv.on(\"update\", this._handler_doReload);\n\n      dv.removeListener(\"delete\", this._handler_doReload);\n      dv.on(\"delete\", this._handler_doReload);\n\n      dv.removeListener(\"create\", this._handler_doReload);\n      dv.on(\"create\", this._handler_doReload);\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n      dv.on(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n      dv.on(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n         dv.on(\"changeCursor\", this._handler_doOnShow);\n      }\n\n      const baseView = this.view;\n\n      // filter helper\n      baseView.filterHelper.objectLoad(object);\n      baseView.filterHelper.viewLoad(this);\n\n      this.filterUI.init(this.AB);\n      this.filterUI.removeListener(\"filter.data\", this._handler_doFilter);\n      this.filterUI.on(\"filter.data\", this._handler_doFilter);\n\n      // link page helper\n      this.linkPage.init({\n         view: baseView,\n         datacollection: dv,\n      });\n\n      // set data-cy\n      const $carouselView = $$(this.ids.carousel)?.$view;\n\n      if ($carouselView) {\n         $carouselView.setAttribute(\n            \"data-cy\",\n            `${baseView.key} ${baseView.id}`\n         );\n         $carouselView\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button previous ${baseView.id}`\n            );\n         $carouselView\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button next ${baseView.id}`\n            );\n      }\n   }\n\n   /**\n    * @method detatch()\n    * Will make sure all our handlers are removed from any object\n    * we have attached them to.\n    *\n    * You'll want to call this in situations when we are dynamically\n    * creating and recreating instances of the same Widget (like in\n    * the ABDesigner).\n    */\n   detatch() {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n\n      if (this._handler_doReload) {\n         dv.removeListener(\"update\", this._handler_doReload);\n         dv.removeListener(\"delete\", this._handler_doReload);\n         dv.removeListener(\"create\", this._handler_doReload);\n      }\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor)\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n   }\n\n   myTemplate(row) {\n      if (row?.src) {\n         const settings = this.settings;\n\n         return `<div class=\"ab-carousel-image-container\">\n            <link rel=\"preload\" href=\"${\n               row.src\n            }\" as=\"image\" fetchpriotity=\"low\"/>\n            <img id=\"${this.ids.component}-${row.id}\" src=\"${\n            row.src\n         }\" class=\"content\" ondragstart=\"return false\" loading=\"lazy\" />\n            ${\n               settings.showLabel\n                  ? `<div class=\"ab-carousel-image-title\">${\n                       row.label || \"\"\n                    }</div>`\n                  : \"\"\n            }\n            <div class=\"ab-carousel-image-icon\">\n            ${\n               settings.detailsPage || settings.detailsTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n                  : \"\"\n            }\n            ${\n               settings.editPage || settings.editTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n                  : \"\"\n            }\n               <span ab-row-id=\"${row.id}\" ab-img-file=\"${\n            row.imgFile\n         }\" class=\"webix_icon ab-carousel-rotate-left fa fa-rotate-left\"></span>\n               <span ab-row-id=\"${row.id}\" ab-img-file=\"${\n            row.imgFile\n         }\" class=\"webix_icon ab-carousel-rotate-right fa fa-rotate-right\"></span>\n               <span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>\n               <span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>\n            </div>\n         </div>`;\n      }\n      // empty image\n      else return \"\";\n   }\n\n   busy() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.disable();\n      $carousel?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.enable();\n      $carousel?.hideProgress?.();\n   }\n\n   async switchImage(currentPosition) {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // Check want to load more images\n      if (\n         currentPosition >= this._imageCount - 1 && // check last image\n         dv.totalCount > this._rowCount\n      ) {\n         // loading cursor\n         this.busy();\n\n         try {\n            await dv.loadData(this._rowCount || 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message:\n                  \"ABViewCarousel:switchImage():Error when load data from a Data collection\",\n            });\n         }\n\n         this.ready();\n      }\n   }\n\n   onShow(fnFilter = this.filterUI.getFilter()) {\n      const ids = this.ids;\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const obj = dv.datasource;\n\n      if (!obj) return;\n\n      const field = this.view.imageField;\n\n      if (!field) return;\n\n      if (dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n\n         // it will call .onShow again after dc loads completely\n         return;\n      }\n\n      const settings = this.settings;\n\n      let rows = dv.getData(fnFilter);\n\n      // Filter images by cursor\n      if (settings.filterByCursor) {\n         const cursor = dv.getCursor();\n\n         if (cursor)\n            rows = rows.filter(\n               (r) =>\n                  (r[obj.PK()] || r.id || r) ===\n                  (cursor[obj.PK()] || cursor.id || cursor)\n            );\n      }\n\n      const images = [];\n\n      rows.forEach((r) => {\n         const imgFile = r[field.columnName];\n\n         if (imgFile) {\n            const imgData = {\n               id: r.id,\n               src: `/file/${imgFile}`,\n               imgFile,\n            };\n\n            // label of row data\n            if (settings.showLabel) imgData.label = obj.displayData(r);\n\n            images.push({\n               css: \"image\",\n               borderless: true,\n               template: (...params) => {\n                  return this.myTemplate(...params);\n               },\n               data: imgData,\n            });\n         }\n      });\n\n      const ab = this.AB;\n\n      // insert the default image to first item\n      if (field.settings.defaultImageUrl)\n         images.unshift({\n            css: \"image\",\n            template: (...params) => this.myTemplate(...params),\n            data: {\n               id: ab.uuid(),\n               src: `/file/${field.settings.defaultImageUrl}`,\n               label: this.label(\"Default image\"),\n            },\n         });\n\n      // empty image\n      if (images.length < 1)\n         images.push({\n            rows: [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: settings.height,\n                  label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n               },\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  label: this.label(\"No image\"),\n               },\n            ],\n         });\n\n      // store total of rows\n      this._rowCount = rows.length;\n\n      // store total of images\n      this._imageCount = images.length;\n\n      const $carousel = $$(ids.carousel);\n      const abWebix = ab.Webix;\n\n      if ($carousel) {\n         // re-render\n         abWebix.ui(images, $carousel);\n\n         // add loading cursor\n         abWebix.extend($carousel, abWebix.ProgressBar);\n\n         // link pages events\n         const editPage = settings.editPage;\n         const detailsPage = settings.detailsPage;\n\n         // if (detailsPage || editPage) {\n         $carousel.$view.onclick = async (e) => {\n            if (e.target.className) {\n               if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(editPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-detail\") > -1\n               ) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(detailsPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n               ) {\n                  $carousel.define(\"css\", \"fullscreen\");\n                  abWebix.fullscreen.set(ids.carousel, {\n                     head: {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        elements: [\n                           {},\n                           {\n                              view: \"icon\",\n                              icon: \"fa fa-times\",\n                              click: function () {\n                                 abWebix.html.removeCss(\n                                    $carousel.getNode(),\n                                    \"fullscreen\"\n                                 );\n                                 abWebix.fullscreen.exit();\n                              },\n                           },\n                        ],\n                     },\n                  });\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-rotate-left\") > -1\n               ) {\n                  const rowId = e.target.getAttribute(\"ab-row-id\");\n                  const imgFile = e.target.getAttribute(\"ab-img-file\");\n                  this.rotateImage(rowId, imgFile, field, \"left\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-rotate-right\") > -1\n               ) {\n                  const rowId = e.target.getAttribute(\"ab-row-id\");\n                  const imgFile = e.target.getAttribute(\"ab-img-file\");\n                  this.rotateImage(rowId, imgFile, field, \"right\");\n               }\n            }\n         };\n      }\n   }\n\n   showFilterPopup($view) {\n      this.filterUI.showPopup($view);\n   }\n\n   async rotateImage(rowId, imgFile, field, direction = \"right\") {\n      this.busy();\n\n      // call api to rotate\n      if (direction == \"left\") await field.rotateLeft(imgFile);\n      else await field.rotateRight(imgFile);\n\n      // refresh image\n      const imgElm = document.getElementById(`${this.ids.component}-${rowId}`);\n      if (imgElm) {\n         const newImgElm = imgElm.cloneNode(true);\n         imgElm.parentNode.replaceChild(newImgElm, imgElm);\n      }\n\n      this.ready();\n   }\n}\n","const ABViewCarouselCore = require(\"../../core/views/ABViewCarouselCore\");\nimport ABViewCarouselComponent from \"./viewComponent/ABViewCarouselComponent\";\n\n// const ABViewPropertyFilterData = require(\"./viewProperties/ABViewPropertyFilterData\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\");\n\nimport ABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nlet PopupCarouselFilterMenu = null;\n\nexport default class ABViewCarousel extends ABViewCarouselCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.filter);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      return new ABViewCarouselComponent(this);\n   }\n\n   get idBase() {\n      return `ABViewCarousel_${this.id}`;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null)\n         this.__filterHelper = new ABViewPropertyFilterData(\n            this.AB,\n            this.idBase\n         );\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.imageField;\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve image field[${this.settings.field}]`\n         );\n      }\n   }\n}\n","const ABViewChartCore = require(\"../../core/views/ABViewChartCore\");\nconst ABViewChartComponent = require(\"./viewComponent/ABViewChartComponent\");\n\nmodule.exports = class ABViewChart extends ABViewChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      this.refreshData();\n   }\n\n   getDCChart() {\n      if (!this._dcChart) this._dcChart = new webix.DataCollection();\n\n      return this._dcChart;\n   }\n\n   refreshData() {\n      const dc = this.datacollection;\n      if (dc == null) return this.dcChart;\n\n      const labelCol = this.labelField();\n      const valueCol = this.valueField();\n      const valueCol2 = this.valueField2();\n\n      if (!labelCol || !valueCol) return this.dcChart;\n\n      // const labelColName = labelCol.columnName;\n      const numberColName = valueCol.columnName;\n\n      let numberColName2 = \"\";\n\n      if (this.settings.multipleSeries && valueCol2) {\n         numberColName2 = valueCol2.columnName;\n      }\n\n      const colorList = [\n         \"#ee4339\",\n         \"#ee9336\",\n         \"#eed236\",\n         \"#d3ee36\",\n         \"#a7ee70\",\n         \"#58dccd\",\n         \"#36abee\",\n         \"#476cee\",\n         \"#a244ea\",\n         \"#e33fc7\",\n      ];\n\n      const dInfo = dc.getData();\n\n      let results = [];\n      let sumData = {};\n      let sumNumber = 0;\n      let sumNumber2 = 0;\n      let countNumber = dInfo.length;\n\n      dInfo.forEach((item) => {\n         const labelKey = labelCol.format(item) || item.id;\n\n         let numberVal = parseFloat(item[numberColName] || 0);\n         let numberVal2 = null;\n\n         if (this.settings.multipleSeries)\n            numberVal2 = parseFloat(item[numberColName2]) || 0;\n\n         switch (valueCol.key) {\n            //Formula Datatype\n            case \"formula\":\n               numberVal = valueCol.format(item);\n\n               break;\n\n            //Calcualte Datatype\n            case \"calculate\":\n               numberVal = parseFloat(\n                  valueCol.constructor.convertToJs(\n                     valueCol.object,\n                     valueCol.settings.formula,\n                     item,\n                     valueCol.settings.decimalPlaces\n                  )\n               );\n\n               break;\n\n            default:\n               break;\n         }\n\n         if (sumData[labelKey] == null) {\n            let label = labelKey;\n\n            // Get label of the connect field\n            if (labelCol.isConnection) {\n               let relateValues = labelCol.pullRelationValues(item);\n               if (relateValues != null) {\n                  if (Array.isArray(relateValues))\n                     label = relateValues\n                        .map((val) => val.text || \"\")\n                        .join(\", \");\n                  else label = relateValues.text;\n               }\n            }\n\n            if (this.settings.multipleSeries) {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n                  value2: 0,\n               };\n            } else {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n               };\n            }\n         }\n\n         sumData[labelKey].value += numberVal;\n         sumNumber += numberVal;\n\n         if (this.settings.multipleSeries) {\n            sumData[labelKey].value2 += numberVal2;\n            sumNumber2 += numberVal2;\n         }\n      });\n\n      let index = 0;\n\n      for (const key in sumData) {\n         let val = sumData[key].value;\n\n         if (val <= 0) continue;\n\n         // Display to percent values\n         if (this.settings.isPercentage) {\n            val = (val / sumNumber) * 100;\n            val = Math.round(val * 100) / 100; // round decimal 2 digits\n            val = val + \" %\";\n         }\n\n         if (this.settings.multipleSeries) {\n            let val2 = sumData[key].value2;\n\n            if (val2 <= 0) continue;\n\n            // Display to percent values\n            if (this.settings.isPercentage) {\n               val2 = (val2 / sumNumber2) * 100;\n               val2 = Math.round(val2 * 100) / 100; // round decimal 2 digits\n               val2 = val2 + \" %\";\n            }\n\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               value2: val2,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         } else {\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         }\n\n         index += 1;\n      }\n\n      const dcChart = this.getDCChart();\n\n      dcChart.clearAll();\n      dcChart.parse(results);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let labelField = this.labelField();\n      if (!labelField) {\n         this.warningsMessage(\n            `can't resolve label field[${this.settings.columnLabel}]`\n         );\n      }\n\n      let valueField = this.valueField();\n      if (!valueField) {\n         this.warningsMessage(\n            `can't resolve value field[${this.settings.columnValue}]`\n         );\n      }\n\n   }\n};\n","const ABViewChartAreaCore = require(\"../../core/views/ABViewChartAreaCore\");\nconst ABViewChartAreaComponent = require(\"./viewComponent/ABViewChartAreaComponent\");\n\nmodule.exports = class ABViewChartArea extends ABViewChartAreaCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartAreaComponent(this);\n   }\n};\n","const ABViewChartBarCore = require(\"../../core/views/ABViewChartBarCore\");\nconst ABViewChartBarComponent = require(\"./viewComponent/ABViewChartBarComponent\");\n\nmodule.exports = class ABViewChartBar extends ABViewChartBarCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartBarComponent(this);\n   }\n};\n","const ABViewWidget = require(\"./ABViewWidget\");\nconst ABViewChartContainerComponent = require(\"./viewComponent/ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartContainer extends ABViewWidget {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartContainerComponent(this);\n   }\n\n   get datacollection() {\n      return this.parent.datacollection;\n   }\n};\n","const ABViewChartLineCore = require(\"../../core/views/ABViewChartLineCore\");\nconst ABViewChartLineComponent = require(\"./viewComponent/ABViewChartLineComponent\");\n\nmodule.exports = class ABViewChartLine extends ABViewChartLineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartLineComponent(this);\n   }\n};\n","const ABViewChartPieCore = require(\"../../core/views/ABViewChartPieCore\");\nconst ABViewChartPieComponent = require(\"./viewComponent/ABViewChartPieComponent\");\n\nmodule.exports = class ABViewChartPie extends ABViewChartPieCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartPieComponent(this);\n   }\n};\n","const ABViewCommentCore = require(\"../../core/views/ABViewCommentCore\");\nconst ABViewCommentComponent = require(\"./viewComponent/ABViewCommentComponent\");\n\nmodule.exports = class ABViewComment extends ABViewCommentCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCommentComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.getUserField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve user field[${this.settings.columnUser}]`\n         );\n      }\n\n      field = this.getCommentField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve comment field[${this.settings.columnComment}]`\n         );\n      }\n\n      field = this.getDateField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve date field[${this.settings.columnDate}]`\n         );\n      }\n   }\n};\n","const ABViewConditionalContainerCore = require(\"../../core/views/ABViewConditionalContainerCore\");\nconst ABViewConditionalContainerComponent = require(\"./viewComponent/ABViewConditionalContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainer extends (\n   ABViewConditionalContainerCore\n) {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConditionalContainerComponent(this);\n   }\n\n   async save() {\n      const viewIf = this.views().find((v) => v.name === \"If\");\n      const viewElse = this.views().find((v) => v.name === \"Else\");\n      const pendingSave = [];\n\n      if (viewIf) pendingSave.push(viewIf.save());\n\n      if (viewElse) pendingSave.push(viewElse.save());\n\n      await Promise.all(pendingSave);\n\n      await super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (\n         !this.settings.filterConditions ||\n         this.settings.filterConditions?.rules?.length == 0\n      ) {\n         this.warningsMessage(\"has no filter conditions set\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewConnectDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewConnectDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n            },\n            ids\n         )\n      );\n\n      this.field = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            type: \"space\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"icon\",\n                  icon: \"fa fa-filter\",\n                  align: \"left\",\n                  disabled: true,\n               },\n               {\n                  view: \"combo\",\n                  id: ids.filter,\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  disabled: true,\n                  on: {\n                     onChange: (id) => this.applyConnectFilter(id),\n                  },\n               },\n               {\n                  view: \"icon\",\n                  id: ids.reset,\n                  icon: \"fa fa-times\",\n                  align: \"left\",\n                  disabled: true,\n                  tooltip: this.label(\"Renmove this filter\"),\n                  on: {\n                     onItemClick: () => this.resetConnectFilter(),\n                  },\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      const [field] = object.fields(\n         (f) => f.columnName === this.settings.field\n      );\n\n      if (!field) {\n         this.AB.notify.developer(\n            `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n            {\n               context: \"ABViewConnectDataFilterComponent.init()\",\n               data: { settings: this.settings },\n            }\n         );\n\n         return;\n      }\n\n      this.field = field;\n\n      const ids = this.ids;\n      const suggest = webix.ui({\n         view: \"suggest\",\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.filter), field, {});\n            },\n         },\n      });\n      field.getAndPopulateOptions(suggest, null, field);\n\n      const $filter = $$(ids.filter);\n\n      $filter.define(\"suggest\", suggest);\n      $filter.define(\"label\", `${this.label(\"Filter by\")} ${field.label}`);\n      $filter.enable();\n      $filter.refresh();\n   }\n\n   resetConnectFilter() {\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [] });\n      dc.reloadData();\n      // Block applyConnectFields() from triggering\n\n      const $filter = $$(ids.filter);\n\n      $filter.blockEvent();\n      $filter.setValue();\n      $filter.unblockEvent();\n      $$(ids.reset).disable();\n   }\n\n   applyConnectFilter(connectId) {\n      const filterRule = {\n         key: this.field.id,\n         rule: \"equals\",\n         value: connectId,\n      };\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [filterRule] });\n      dc.reloadData();\n      $$(this.ids.reset).enable();\n   }\n}\n","import ABViewConnectDataFilterCore from \"../../core/views/ABViewConnectDataFilterCore\";\nimport ABViewConnectDataFilterComponent from \"./viewComponent/ABViewConnectDataFilterComponent\";\n\nexport default class ABViewConnectDataFilter extends ABViewConnectDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConnectDataFilterComponent(this);\n   }\n}\n","const ABViewContainerCore = require(\"../../core/views/ABViewContainerCore\");\nconst ABViewContainerComponent = require(\"./viewComponent/ABViewContainerComponent\");\n\nmodule.exports = class ABViewContainer extends ABViewContainerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewContainerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no content\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (allViews || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\nimport ABViewCustomFilter from \"../viewProperties/ABViewPropertyFilterData\";\nimport _ from \"lodash\";\n\nexport default class ABViewDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n               sortButton: \"\",\n               filterButton: \"\",\n               globalSearchToolbar: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.field = null;\n      const ab = this.AB;\n\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n      this.PopupSortComponent = new ABPopupSortField(\n         `ABViewDataFilter_Sort_Popup_${this.settings.dataviewID}`\n      );\n      this.PopupSortComponent.init(ab);\n      this.PopupSortComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n\n      this.filterHelper = new ABViewCustomFilter(\n         this.AB,\n         `ABViewDataFilter_Filter_Popup_${this.settings.dataviewID}`\n      );\n      this.filterHelper.settings = {\n         filterOption: 1,\n         userFilterPosition: \"toolbar\",\n         isGlobalToolbar: 1,\n      };\n      this.filterHelper.init(ab);\n      this.detatch();\n      this.filterHelper.on(\"filter.data\", this._handler_filterData);\n   }\n\n   advancedUI() {\n      const compId = this.ids.component;\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            rows: [\n               {},\n               {\n                  cols: [\n                     {\n                        width: 18,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-filter\",\n                        width: 40,\n                        id: this.ids.filterButton,\n                        css: `webix_primary abFilterButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.toolbarFilter($$(this.ids.filterButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} filter button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-sort\",\n                        width: 40,\n                        id: this.ids.sortButton,\n                        css: `webix_primary abSortButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.openSort($$(this.ids.sortButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} sort button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.globalSearchToolbar,\n                        view: \"search\",\n                        placeholder: this.label(\"Search..\"),\n                        css: `abGlobalSearchField${this.settings.dataviewID}`,\n                        width: 0,\n                        attributes: {\n                           \"data-cy\": `${this.ids.component} global search`,\n                           datacollection: this.settings.dataviewID,\n                        },\n                        on: {\n                           onTimedKeyPress: () => {\n                              const searchText = $$(\n                                 this.ids.globalSearchToolbar\n                              ).getValue();\n                              // store search text in datacollection because\n                              // it is shared amoung the similar filterHelpers\n                              const dc = this.datacollection;\n                              dc.settings.objectWorkspace.searchText =\n                                 searchText;\n\n                              this.filterHelper.externalSearchText(searchText);\n                           },\n                        },\n                     },\n                     {\n                        width: 18,\n                     },\n                  ],\n               },\n               {},\n            ],\n         },\n      ];\n   }\n\n   connectedFieldUI() {\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            cols: [\n               {\n                  width: 18,\n               },\n               {\n                  rows: [\n                     {},\n                     {\n                        view: \"abslayout\",\n                        cells: [\n                           {\n                              css: \"bg_gray\",\n                              view: \"combo\",\n                              id: this.ids.filter,\n                              labelWidth: 0,\n                              relative: true,\n                              disabled: true,\n                              on: {\n                                 onChange: (id) => this.applyConnectFilter(id),\n                              },\n                           },\n                           {\n                              view: \"icon\",\n                              id: this.ids.reset,\n                              icon: \"fa fa-times\",\n                              right: 24,\n                              top: 7,\n                              width: 24,\n                              height: 24,\n                              hidden: true,\n                              tooltip: this.label(\"Remove this filter\"),\n                              on: {\n                                 onItemClick: () =>\n                                    $$(this.ids.filter).setValue(),\n                              },\n                           },\n                        ],\n                     },\n                     {},\n                  ],\n               },\n               {\n                  width: 18,\n               },\n            ],\n         },\n      ];\n   }\n\n   ui() {\n      if (this.settings.viewType == \"advanced\") {\n         if (!this?.settings?.dataviewID) return { height: 1 };\n      } else {\n         if (!this?.settings?.dataviewID || !this?.settings?.field)\n            return { height: 1 };\n      }\n\n      const ui =\n         this.settings.viewType == \"advanced\"\n            ? this.advancedUI()\n            : this.connectedFieldUI();\n      const _ui = super.ui(ui);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      if (this.settings.viewType == \"advanced\") {\n         if (this.settings.showSort) {\n            this.PopupSortComponent.objectLoad(object);\n            // if there are some preset sorts show them to user\n            this.PopupSortComponent.setSettings(\n               dv?.settings?.objectWorkspace?.sortFields\n            );\n         } else {\n            $$(this.ids.sortButton).hide();\n         }\n         if (this.settings.showFilter) {\n            this.filterHelper.objectLoad(object);\n         } else {\n            $$(this.ids.filterButton).hide();\n         }\n      } else if (this.settings.viewType == \"connected\") {\n         const [field] = object.fields(\n            (f) => f.columnName === this.settings.field\n         );\n\n         if (!field) {\n            this.AB.notify.developer(\n               `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n               {\n                  context: \"ABViewDataFilterComponent.init()\",\n                  data: { settings: this.settings },\n               }\n            );\n\n            return;\n         }\n\n         this.field = field;\n\n         const ids = this.ids;\n         const suggest = webix.ui({\n            view: \"suggest\",\n            filter: ({ value }, search) =>\n               value.toLowerCase().includes(search.toLowerCase()),\n            on: {\n               onShow: () => {\n                  field.populateOptionsDataCy($$(ids.filter), field, {});\n               },\n            },\n            showAllOptions: true,\n         });\n         field.getAndPopulateOptions(suggest, null, field);\n\n         const $filter = $$(ids.filter);\n\n         $filter.define(\"suggest\", suggest);\n         $filter.define(\n            \"placeholder\",\n            `${this.label(\"Filter by\")} ${field.label}`\n         );\n         $filter.enable();\n         $filter.refresh();\n      }\n   }\n\n   onShow() {\n      super.onShow();\n      this.updateUI();\n   }\n\n   applyConnectFilter(connectId) {\n      let filterRule = [];\n      if (connectId) {\n         $$(this.ids.reset).show();\n         filterRule = [\n            {\n               key: this.field.id,\n               rule: \"equals\",\n               value: connectId,\n            },\n         ];\n      } else {\n         $$(this.ids.reset).hide();\n      }\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: filterRule });\n      dc.reloadData();\n   }\n\n   openSort($view) {\n      this.PopupSortComponent.show($view);\n   }\n\n   /**\n    * @method callbackSortData()\n    * Process the provided sort options from our sort ui.\n    * @param {array} sortRules\n    *        Any Sort Rules added by the user.\n    */\n   async callbackSortData(sortRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.settings?.objectWorkspace?.sortFields, sortRules)) {\n         dc.settings.objectWorkspace.sortFields = sortRules;\n         await this.datacollection.reloadData();\n      }\n      this.updateUI();\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.__filterCond, filterRules)) {\n         dc.filterCondition(filterRules);\n         dc.reloadData();\n         this.updateUI();\n      }\n   }\n\n   toolbarFilter($view) {\n      this.filterHelper.showPopup($view);\n   }\n\n   updateUI() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      var filterButtons = document.getElementsByClassName(\n         `abFilterButton${this.settings.dataviewID}`\n      );\n\n      const onlyFilterRules = this.filterHelper.filterRules();\n      let filterBadge =\n         onlyFilterRules?.rules?.length > 0\n            ? onlyFilterRules?.rules?.length\n            : null;\n      for (let b of filterButtons) {\n         $$(b).define(\"badge\", filterBadge);\n         $$(b).refresh();\n      }\n\n      var sortButtons = document.getElementsByClassName(\n         `abSortButton${this.settings.dataviewID}`\n      );\n\n      const onlySortRules = dc.settings.objectWorkspace.sortFields;\n      let sortBadge = onlySortRules?.length > 0 ? onlySortRules?.length : null;\n\n      for (let b of sortButtons) {\n         $$(b).define(\"badge\", sortBadge);\n         $$(b).refresh();\n      }\n\n      var searchFields = document.getElementsByClassName(\n         `abGlobalSearchField${this.settings.dataviewID}`\n      );\n\n      const searchText = dc.settings.objectWorkspace.searchText;\n      if (searchText != null) {\n         for (let s of searchFields) {\n            var activeElement = document.activeElement;\n            if (\n               activeElement?.attributes?.datacollection?.value ==\n                  this.settings.dataviewID &&\n               activeElement == s.getElementsByTagName(\"input\")[0]\n            ) {\n               // skip the already selected input\n            } else {\n               $$(s).setValue(searchText);\n            }\n         }\n      }\n   }\n\n   detatch() {\n      this.filterHelper.removeListener(\"filter.data\", this._handler_filterData);\n      // this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n}\n","import ABViewDataFilterCore from \"../../core/views/ABViewDataFilterCore\";\nimport ABViewDataFilterComponent from \"./viewComponent/ABViewDataFilterComponent\";\n\nexport default class ABViewDataFilter extends ABViewDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataFilterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","const ABViewDataviewCore = require(\"../../core/views/ABViewDataviewCore\");\nconst ABViewDataviewComponent = require(\"./viewComponent/ABViewDataviewComponent\");\n\nconst ABViewDataviewDefaults = ABViewDataviewCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDataview extends ABViewDataviewCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.detailsPage =\n         this.settings.detailsPage ?? ABViewDataviewDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ?? ABViewDataviewDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ?? ABViewDataviewDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ?? ABViewDataviewDefaults.editTab;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDataviewComponent(this);\n   }\n};\n","const ABViewDetailCore = require(\"../../core/views/ABViewDetailCore\");\nconst ABViewDetailComponent = require(\"./viewComponent/ABViewDetailComponent\");\n\nmodule.exports = class ABViewDetail extends ABViewDetailCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDetailComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewDetailCheckboxCore = require(\"../../core/views/ABViewDetailCheckboxCore\");\nconst ABViewDetailCheckboxComponent = require(\"./viewComponent/ABViewDetailCheckboxComponent\");\n\nmodule.exports = class ABViewDetailCheckbox extends ABViewDetailCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCheckboxComponent(this);\n   }\n};\n","const ABViewDetailConnectCore = require(\"../../core/views/ABViewDetailConnectCore\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\n\nconst ABViewDetailConnectComponent = require(\"./viewComponent/ABViewDetailConnectComponent\");\n\nmodule.exports = class ABViewDetailConnect extends ABViewDetailConnectCore {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n      this.addPageTool.fromSettings(this.settings);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n};\n","const ABViewDetailCustomCore = require(\"../../core/views/ABViewDetailCustomCore\");\nconst ABViewDetailCustomComponent = require(\"./viewComponent/ABViewDetailCustomComponent\");\n\nmodule.exports = class ABViewDetailCustom extends ABViewDetailCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCustomComponent(this);\n   }\n};\n","const ABViewDetailImageCore = require(\"../../core/views/ABViewDetailImageCore\");\nconst ABViewDetailImageComponent = require(\"./viewComponent/ABViewDetailImageComponent\");\n\nmodule.exports = class ABViewDetailImage extends ABViewDetailImageCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailImageComponent(this);\n   }\n};\n","const ABViewDetailItemCore = require(\"../../core/views/ABViewDetailItemCore\");\nconst ABViewDetailItemComponent = require(\"./viewComponent/ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailItem extends ABViewDetailItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailItemComponent(this);\n   }\n};\n","const ABViewDetailTextCore = require(\"../../core/views/ABViewDetailTextCore\");\nconst ABViewDetailTextComponent = require(\"./viewComponent/ABViewDetailTextComponent\");\n\nmodule.exports = class ABViewDetailText extends ABViewDetailTextCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTextComponent(this);\n   }\n};\n","const ABViewDetailTreeCore = require(\"../../core/views/ABViewDetailTreeCore\");\nconst ABViewDetailTreeComponent = require(\"./viewComponent/ABViewDetailTreeComponent\");\n\nmodule.exports = class ABViewDetailTree extends ABViewDetailTreeCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTreeComponent(this);\n   }\n};\n","const ABViewDocxBuilderCore = require(\"../../core/views/ABViewDocxBuilderCore\");\nconst ABViewDocxBuilderComponent = require(\"./viewComponent/ABViewDocxBuilderComponent\");\n\nmodule.exports = class ABViewDocxBuilder extends ABViewDocxBuilderCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDocxBuilderComponent(this);\n   }\n\n   letUserDownload(blob, filename) {\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click();\n      a.remove(); //afterwards we remove the element again\n\n      window.URL.revokeObjectURL(url);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollections || this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.filename) {\n         this.warningsMessage(\"is missing a DOCX template file\");\n      } else {\n         // TODO: should we check for the existance of the file?\n         // this isn't currently an async friendly fn, so how?\n         // let url = this.downloadUrl();\n      }\n   }\n};\n","const ABViewFormCore = require(\"../../core/views/ABViewFormCore\");\nconst ABViewFormComponent = require(\"./viewComponent/ABViewFormComponent\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\nconst ABViewFormCustom = require(\"./ABViewFormCustom\");\nconst ABViewFormConnect = require(\"./ABViewFormConnect\");\nconst ABViewFormDatepicker = require(\"./ABViewFormDatepicker\");\nconst ABViewFormSelectMultiple = require(\"./ABViewFormSelectMultiple\");\nconst ABViewFormTextbox = require(\"./ABViewFormTextbox\");\nconst ABViewFormJson = require(\"./ABViewFormJson\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\n// const ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n// const ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\n// let PopupRecordRule = null;\n// let PopupSubmitRule = null;\n\n////\n//// LEFT OFF HERE: Review and Refactor\n////\nconst ABViewFormPropertyComponentDefaults = ABViewFormCore.defaultValues();\n\nmodule.exports = class ABViewForm extends ABViewFormCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      this._callbacks = {\n         onBeforeSaveData: () => true,\n      };\n   }\n\n   superComponent() {\n      if (this._superComponent == null)\n         this._superComponent = super.component();\n\n      return this._superComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormComponent(this);\n   }\n\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABViewFormButton.newInstance(this.application, this);\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views((v) => v.id != defaultButton.id);\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   /**\n    * @method getFormValues\n    *\n    * @param {webix form} formView\n    * @param {ABObject} obj\n    * @param {ABDatacollection} dc\n    * @param {ABDatacollection} dcLink [optional]\n    */\n   getFormValues(formView, obj, dc, dcLink) {\n      // get the fields that are on this form\n      const visibleFields = [\"id\"]; // we always want the id so we can udpate records\n      formView.getValues(function (obj) {\n         visibleFields.push(obj.config.name);\n      });\n\n      // only get data passed from form\n      const allVals = formView.getValues();\n      const formVals = {};\n      visibleFields.forEach((val) => {\n         formVals[val] = allVals[val];\n      });\n\n      // get custom values\n      this.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            comp instanceof ABViewFormConnect ||\n            comp instanceof ABViewFormDatepicker ||\n            comp instanceof ABViewFormSelectMultiple ||\n            (comp instanceof ABViewFormJson && comp.settings.type == \"filter\")\n      ).forEach((f) => {\n         const vComponent = this.viewComponents[f.id];\n         if (vComponent == null) return;\n\n         const field = f.field();\n         if (field) {\n            const getValue = vComponent.getValue ?? vComponent.logic.getValue;\n            if (getValue)\n               formVals[field.columnName] = getValue.call(vComponent, formVals);\n         }\n      });\n\n      // remove connected fields if they were not on the form and they are present in the formVals because it is a datacollection\n      obj.connectFields().forEach((f) => {\n         if (\n            visibleFields.indexOf(f.columnName) == -1 &&\n            formVals[f.columnName]\n         ) {\n            delete formVals[f.columnName];\n            delete formVals[f.relationName()];\n         }\n      });\n\n      // clear undefined values or empty arrays\n      for (const prop in formVals) {\n         if (formVals[prop] == null || formVals[prop].length == 0)\n            formVals[prop] = \"\";\n      }\n\n      // Add parent's data collection cursor when a connect field does not show\n      let linkValues;\n\n      if (dcLink) {\n         linkValues = dcLink.getCursor();\n      }\n\n      if (linkValues) {\n         const objectLink = dcLink.datasource;\n\n         const connectFields = obj.connectFields();\n         connectFields.forEach((f) => {\n            const formFieldCom = this.fieldComponents(\n               (fComp) => fComp?.field?.()?.id === f?.id\n            );\n\n            if (\n               objectLink.id == f.settings.linkObject &&\n               formFieldCom.length < 1 && // check field does not show\n               formVals[f.columnName] === undefined\n            ) {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               formVals[f.columnName] = {};\n               formVals[f.columnName][linkColName] =\n                  linkValues[linkColName] ?? linkValues.id;\n            }\n         });\n      }\n\n      // NOTE: need to pull data of current cursor to calculate Calculate & Formula fields\n      // .formVals variable does not include data that does not display in the Form widget\n      const cursorFormVals = Object.assign(dc.getCursor() ?? {}, formVals);\n\n      // Set value of calculate or formula fields to use in record rule\n      obj.fields((f) => f.key == \"calculate\" || f.key == \"formula\").forEach(\n         (f) => {\n            if (formVals[f.columnName] == null) {\n               let reCalculate = true;\n\n               // WORKAROUND: If \"Formula\" field will have Filter conditions,\n               // Then it is not able to re-calculate on client side\n               // because relational data is not full data so FilterComplex will not have data to check\n               if (f.key == \"formula\" && f.settings?.where?.rules?.length > 0) {\n                  reCalculate = false;\n               }\n\n               formVals[f.columnName] = f.format(cursorFormVals, reCalculate);\n            }\n         }\n      );\n\n      if (allVals.translations?.length > 0)\n         formVals.translations = allVals.translations;\n\n      return formVals;\n   }\n\n   /**\n    * @method validateData\n    *\n    * @param {webix form} formView\n    * @param {ABObject} object\n    * @param {object} formVals\n    *\n    * @return {boolean} isValid\n    */\n   validateData($formView, object, formVals) {\n      let list = \"\";\n\n      // validate required fields\n      const requiredFields = this.fieldComponents(\n         (fComp) =>\n            fComp?.field?.().settings?.required == true ||\n            fComp?.settings?.required == true\n      ).map((fComp) => fComp.field());\n\n      // validate data\n      const validator = object.isValidData(formVals);\n      let isValid = validator.pass();\n\n      // $$($formView).validate();\n      $formView.validate();\n      /**\n       * helper function to fix the webix ui after adding an validation error\n       * message.\n       * @param {string} col - field.columnName\n       */\n      const fixInvalidMessageUI = (col) => {\n         const $forminput = $formView.elements[col];\n         if (!$forminput) return;\n         // Y position\n         const height = $forminput.$height;\n         if (height < 56) {\n            $forminput.define(\"height\", 60);\n            $forminput.resize();\n         }\n\n         // X position\n         const domInvalidMessage = $forminput.$view.getElementsByClassName(\n            \"webix_inp_bottom_label\"\n         )[0];\n         if (!domInvalidMessage?.style[\"margin-left\"]) {\n            domInvalidMessage.style.marginLeft = `${\n               this.settings.labelWidth ??\n               ABViewFormPropertyComponentDefaults.labelWidth\n            }px`;\n         }\n      };\n\n      // Display required messages\n      requiredFields.forEach((f) => {\n         if (!f) return;\n\n         const fieldVal = formVals[f.columnName];\n         if (fieldVal == \"\" || fieldVal == null || fieldVal.length < 1) {\n            $formView.markInvalid(f.columnName, L(\"This is a required field.\"));\n            list += `<li>${L(\"Missing Required Field\")} ${f.columnName}</li>`;\n            isValid = false;\n\n            // Fix position of invalid message\n            fixInvalidMessageUI(f.columnName);\n         }\n      });\n\n      // if data is invalid\n      if (!isValid) {\n         const saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // error message\n         if (validator?.errors?.length) {\n            validator.errors.forEach((err) => {\n               $formView.markInvalid(err.name, err.message);\n               list += `<li>${err.name}: ${err.message}</li>`;\n               fixInvalidMessageUI(err.name);\n            });\n\n            saveButton?.disable();\n         } else {\n            saveButton?.enable();\n         }\n      }\n      if (list) {\n         webix.alert({\n            type: \"alert-error\",\n            title: L(\"Problems Saving\"),\n            width: 400,\n            text: `<ul style='text-align:left'>${list}</ul>`,\n         });\n      }\n\n      return isValid;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   /**\n    * @method saveData\n    * save data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async saveData($formView) {\n      // call .onBeforeSaveData event\n      // if this function returns false, then it will not go on.\n      if (!this._callbacks?.onBeforeSaveData?.()) return;\n\n      $formView.clearValidation();\n\n      // get ABDatacollection\n      const dv = this.datacollection;\n      if (dv == null) return;\n\n      // get ABObject\n      const obj = dv.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dv.model;\n      if (model == null) return;\n\n      // show progress icon\n      $formView.showProgress?.({ type: \"icon\" });\n\n      // get update data\n      const formVals = this.getFormValues(\n         $formView,\n         obj,\n         dv,\n         dv.datacollectionLink\n      );\n\n      // form ready function\n      const formReady = (newFormVals) => {\n         // clear cursor after saving.\n         if (dv) {\n            if (this.settings.clearOnSave) {\n               dv.setCursor(null);\n               $formView.clear();\n            } else {\n               if (newFormVals && newFormVals.id) dv.setCursor(newFormVals.id);\n            }\n         }\n\n         $formView.hideProgress?.();\n\n         // if there was saved data pass it up to the onSaveData callback\n         // if (newFormVals) this._logic.callbacks.onSaveData(newFormVals);\n         if (newFormVals) this.emit(\"saved\", newFormVals); // Q? is this the right upgrade?\n      };\n\n      const formError = (err) => {\n         const $saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // mark error\n         if (err) {\n            if (err.invalidAttributes) {\n               for (const attr in err.invalidAttributes) {\n                  let invalidAttrs = err.invalidAttributes[attr];\n                  if (invalidAttrs && invalidAttrs[0])\n                     invalidAttrs = invalidAttrs[0];\n\n                  $formView.markInvalid(attr, invalidAttrs.message);\n               }\n            } else if (err.sqlMessage) {\n               webix.message({\n                  text: err.sqlMessage,\n                  type: \"error\",\n               });\n            } else {\n               webix.message({\n                  text: L(\"System could not save your data\"),\n                  type: \"error\",\n               });\n               this.AB.notify.developer(err, {\n                  message: \"Could not save your data\",\n                  view: this.toObj(),\n               });\n            }\n         }\n\n         $saveButton?.enable();\n\n         $formView?.hideProgress?.();\n      };\n\n      // Load data of DCs that use in record rules\n      await this.loadDcDataOfRecordRules();\n\n      // wait for our Record Rules to be ready before we continue.\n      await this.recordRulesReady();\n\n      // update value from the record rule (pre-update)\n      this.doRecordRulesPre(formVals);\n\n      // validate data\n      if (!this.validateData($formView, obj, formVals)) {\n         // console.warn(\"Data is invalid.\");\n         $formView.hideProgress?.();\n         return;\n      }\n\n      let newFormVals;\n      // {obj}\n      // The fully populated values returned back from service call\n      // We use this in our post processing Rules\n\n      try {\n         // is this an update or create?\n         if (formVals.id) {\n            newFormVals = await model.update(formVals.id, formVals);\n         } else {\n            newFormVals = await model.create(formVals);\n         }\n      } catch (err) {\n         formError(err.data);\n         throw err;\n      }\n\n      /*\n      // OLD CODE:\n      try {\n         await this.doRecordRules(newFormVals);\n         // make sure any updates from RecordRules get passed along here.\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return newFormVals;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n         // Question:  how do we respond to an error?\n         // ?? just keep going ??\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return;\n      }\n      */\n\n      try {\n         await this.doRecordRules(newFormVals);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      // make sure any updates from RecordRules get passed along here.\n      try {\n         this.doSubmitRules(newFormVals);\n      } catch (errs) {\n         this.AB.notify.developer(errs, {\n            message: \"Error processing Submit Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      formReady(newFormVals);\n      return newFormVals;\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               // topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      let childComponent = this.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ui.id)) {\n         $$(childComponent.ui.id).focus();\n      }\n   }\n\n   async loadDcDataOfRecordRules() {\n      const tasks = [];\n\n      (this.settings?.recordRules ?? []).forEach((rule) => {\n         (rule?.actionSettings?.valueRules?.fieldOperations ?? []).forEach(\n            (op) => {\n               if (op.valueType !== \"exist\") return;\n\n               const pullDataDC = this.AB.datacollectionByID(op.value);\n\n               if (\n                  pullDataDC?.dataStatus ===\n                  pullDataDC.dataStatusFlag.notInitial\n               )\n                  tasks.push(pullDataDC.loadData());\n            }\n         );\n      });\n\n      await Promise.all(tasks)\n\n      return true;\n   }\n\n   get viewComponents() {\n      const superComponent = this.superComponent();\n      return superComponent.viewComponents;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (this.settings.recordRules) {\n         // TODO: scan recordRules for warnings\n      }\n\n      if (this.settings.submitRules) {\n         // TODO: scan submitRules for warnings.\n      }\n   }\n};\n","const ABViewFormButtonCore = require(\"../../core/views/ABViewFormButtonCore\");\nconst ABViewFormButtonComponent = require(\"./viewComponent/ABViewFormButtonComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormButtonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormButtonComponent(this);\n   }\n};\n","const ABViewFormCheckboxCore = require(\"../../core/views/ABViewFormCheckboxCore\");\nconst ABViewFormCheckboxComponent = require(\"./viewComponent/ABViewFormCheckboxComponent\");\n\nmodule.exports = class ABViewFormCheckbox extends ABViewFormCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCheckboxComponent(this);\n   }\n};\n","const ABViewFormConnectCore = require(\"../../core/views/ABViewFormConnectCore\");\nconst ABViewFormConnectComponent = require(\"./viewComponent/ABViewFormConnectComponent\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\nconst ABViewPropertyEditPage =\n   require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\nconst ABViewFormConnectPropertyComponentDefaults =\n   ABViewFormConnectCore.defaultValues();\n\nmodule.exports = class ABViewFormConnect extends ABViewFormConnectCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      // NOTE: .objectWorkspace is a v1 setting\n      // if (\n      //    !this.settings.objectWorkspace ||\n      //    !this.settings.objectWorkspace.filterConditions\n      // ) {\n      //    this.AB.error(\"Error: filter conditions do not exist\", {\n      //       error: \"filterConditions do not exist\",\n      //       viewLocation: {\n      //          application: this.application.name,\n      //          id: this.id,\n      //          name: this.label,\n      //       },\n      //       view: this,\n      //    });\n      //    // manually place an empty filter\n      //    this.settings[\"objectWorkspace\"] = {};\n      //    this.settings[\"objectWorkspace\"][\"filterConditions\"] = { glue: \"and\" };\n      // }\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n      this.editPageTool.fromSettings(this.settings);\n   }\n\n   static get addPageProperty() {\n      return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   }\n\n   static get editPageProperty() {\n      return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n\n   get editPageTool() {\n      if (this.__editPageTool == null)\n         this.__editPageTool = new ABViewPropertyEditPage();\n\n      return this.__editPageTool;\n   }\n};\n","const ABViewFormCustomCore = require(\"../../core/views/ABViewFormCustomCore\");\nconst ABViewFormCustomComponent = require(\"./viewComponent/ABViewFormCustomComponent\");\n\nmodule.exports = class ABViewFormCustom extends ABViewFormCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCustomComponent(this);\n   }\n};\n","const ABViewFormDatepickerCore = require(\"../../core/views/ABViewFormDatepickerCore\");\nconst ABViewFormDatepickerComponent = require(\"./viewComponent/ABViewFormDatepickerComponent\");\n\nmodule.exports = class ABViewFormDatepicker extends ABViewFormDatepickerCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormDatepickerComponent(this);\n   }\n};\n","const ABViewFormItemCore = require(\"../../core/views/ABViewFormItemCore\");\nconst ABViewFormItemComponent = require(\"./viewComponent/ABViewFormItemComponent\");\n\nconst ABViewFormFieldPropertyComponentDefaults =\n   ABViewFormItemCore.defaultValues();\n\nmodule.exports = class ABViewFormItem extends ABViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static get componentUI() {\n      return ABViewFormItemComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormItemComponent(this);\n   }\n\n   /**\n    * @method parentFormUniqueID\n    * return a unique ID based upon the closest form object this component is on.\n    * @param {string} key  The basic id string we will try to make unique\n    * @return {string}\n    */\n   parentFormUniqueID(key) {\n      var form = this.parentFormComponent();\n      var uniqueInstanceID;\n      if (form) {\n         uniqueInstanceID = form.uniqueInstanceID;\n      } else {\n         uniqueInstanceID = webix.uid();\n      }\n\n      return key + uniqueInstanceID;\n   }\n};\n","const ABViewFormJsonCore = require(\"../../core/views/ABViewFormJsonCore\");\nconst ABViewFormJsonComponent = require(\"./viewComponent/ABViewFormJsonComponent\");\n\nmodule.exports = class ABViewFormJson extends ABViewFormJsonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormJsonComponent(this);\n   }\n};\n","const ABViewFormNumberCore = require(\"../../core/views/ABViewFormNumberCore\");\nconst ABViewFormNumberComponent = require(\"./viewComponent/ABViewFormNumberComponent\");\n\nmodule.exports = class ABViewFormNumber extends ABViewFormNumberCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormNumberComponent(this);\n   }\n};\n","const ABViewFormReadonlyCore = require(\"../../core/views/ABViewFormReadonlyCore\");\nconst ABViewFormReadonlyComponent = require(\"./viewComponent/ABViewFormReadonlyComponent\");\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormReadonlyCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormReadonlyComponent(this);\n   }\n};\n","const ABViewFormSelectMultipleCore = require(\"../../core/views/ABViewFormSelectMultipleCore\");\nconst ABViewFormSelectMultipleComponent = require(\"./viewComponent/ABViewFormSelectMultipleComponent\");\n\nmodule.exports = class ABViewFormSelectMultiple extends (\n   ABViewFormSelectMultipleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectMultipleComponent(this);\n   }\n};\n","const ABViewFormSelectSingleCore = require(\"../../core/views/ABViewFormSelectSingleCore\");\nconst ABViewFormSelectSingleComponent = require(\"./viewComponent/ABViewFormSelectSingleComponent\");\n\nmodule.exports = class ABViewFormSelectSingle extends (\n   ABViewFormSelectSingleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectSingleComponent(this);\n   }\n};\n","const ABViewFormTextboxCore = require(\"../../core/views/ABViewFormTextboxCore\");\nconst ABViewFormTextboxComponent = require(\"./viewComponent/ABViewFormTextboxComponent\");\n\nmodule.exports = class ABViewFormTextbox extends ABViewFormTextboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTextboxComponent(this);\n   }\n};\n","const ABViewFormTreeCore = require(\"../../core/views/ABViewFormTreeCore\");\nconst ABViewFormTreeComponent = require(\"./viewComponent/ABViewFormTreeComponent\");\n\nmodule.exports = class ABViewFormTree extends ABViewFormTreeCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTreeComponent(this);\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewGanttComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGantt_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n               gantt: \"\",\n            },\n            ids\n         )\n      );\n\n      this._tempDC = null;\n      // {ABDataCollection}\n      // A link to a DC that was passed in.  NOTE: this is only for\n      // the temp DCs created in the AppBuilder Designer and passed\n      // in.  Normal DCs are handled by the default CurrentDatacollection\n      // methods.\n\n      this.TitleField = null;\n      this.StartDateField = null;\n      this.EndDateField = null;\n      this.DurationField = null;\n      this.ProgressField = null;\n      this.NotesField = null;\n\n      this.originalStartDate = null;\n      this.originalEndDate = null;\n\n      this.pendingAdds = {};\n      // {Promise}  /* id : {Promise} */\n      // In order to prevent a race condition where multiple adds can be\n      // generated on the same item, we catch the repeats and just return\n      // the same data for each.\n\n      const idGantt = this.ids.gantt;\n\n      this.ganttElement = {\n         isExistsTask: (taskId) => {\n            const localService = $$(idGantt).getService(\"local\");\n            if (!localService) return false;\n\n            const tasksData = localService.tasks();\n            if (!tasksData || !tasksData.exists) return false;\n\n            return tasksData.exists(taskId);\n         },\n         removeTask: (taskId) => {\n            if (!this.ganttElement.isExistsTask(taskId)) return;\n\n            const opsService = $$(idGantt).getService(\"operations\");\n            if (!opsService) return;\n\n            return opsService.removeTask(taskId);\n         },\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const { YEAR_SCALE, MONTH_SCALE, DAY_SCALE } = this.getConstantScales;\n      const _ui = super.ui([\n         {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"menu\",\n                  id: ids.menu,\n                  layout: \"x\",\n                  width: 300,\n                  data: [\n                     {\n                        id: \"day\",\n                        value: this.label(\"Day\"),\n                     },\n                     {\n                        id: \"week\",\n                        value: this.label(\"Week\"),\n                     },\n                     {\n                        id: \"month\",\n                        value: this.label(\"Month\"),\n                     },\n                     {\n                        id: \"year\",\n                        value: this.label(\"Year\"),\n                     },\n                  ],\n                  on: {\n                     onItemClick: (id /* , e, node */) => {\n                        this.setScale(id);\n                     },\n                  },\n               },\n            ],\n         },\n         {\n            id: ids.gantt,\n            view: \"gantt\",\n            scales: [YEAR_SCALE, MONTH_SCALE, DAY_SCALE],\n            override: new Map([\n               [\n                  gantt.services.Backend,\n                  // global webix gantt object\n                  class MyBackend extends gantt.services.Backend {\n                     async tasks() {\n                        const DC = self.CurrentDatacollection;\n                        if (!DC) return [];\n\n                        // if (DC.dataStatus != DC.dataStatusFlag.initialized) {\n                        //    await DC.loadData().catch((err) => {\n                        //       console.error(err);\n                        //    });\n                        // }\n                        return (DC.getData() || []).map((d, indx) =>\n                           self.convertFormat(d, indx)\n                        );\n                     }\n                     links() {\n                        return Promise.resolve([]);\n                     }\n                     async addTask(obj, index, parent) {\n                        if (!self.pendingAdds[obj.id]) {\n                           self.pendingAdds[obj.id] = self.taskAdd(obj);\n                        }\n                        const newTask = await self.pendingAdds[obj.id];\n                        delete self.pendingAdds[obj.id];\n                        return {\n                           id: (newTask || {}).id,\n                        };\n                     }\n                     async updateTask(id, obj) {\n                        return await self.taskUpdate(obj.id, obj);\n                     }\n                     async removeTask(id) {\n                        return await self.taskRemove(id);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // #HACK!: as of webix v.8.1.1 there is a visual glitch of the Gantt\n      // object if you replace a gantt widget with a new definition (like in\n      // the ABDesigner you can switch from Gantt1 to Gantt2 in the object\n      // workspace).  In that one case, the menu would disappear even though\n      // the data is present.  So this makes sure the menu is shown\n      const $menu = $$(this.ids.menu);\n\n      if ($menu) $menu.showItem(\"day\");\n   }\n\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return super.CurrentDatacollection || this._tempDC;\n   }\n\n   /**\n    * @method convertFormat()\n    * Convert an ABObject's row value into a gantt task data format.\n    * @param {obj} row\n    *        The current row of data returned from an ABObject.\n    * @param {int} index\n    *        The order of this task.\n    * @return {obj}\n    *         A key=>value hash corresponding to the gantt task that\n    *         represents this row of data.\n    */\n   convertFormat(row = {}, index = null) {\n      const data = {};\n      const StartDateField = this.StartDateField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (!StartDateField || (!EndDateField && !DurationField)) return data;\n\n      const currDate = new Date();\n\n      data[\"id\"] = row.id || row.uuid;\n      data[\"type\"] = \"task\";\n      data[\"parent\"] = 0;\n      data[\"open\"] = true;\n\n      // define label\n      const TitleField = this.TitleField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n\n      data[\"text\"] = TitleField\n         ? row[TitleField.columnName] || \"\"\n         : this.CurrentObject.displayData(row);\n      data[\"start_date\"] = row[StartDateField.columnName] || currDate;\n      data[\"progress\"] = ProgressField\n         ? parseFloat(row[ProgressField.columnName] || 0)\n         : 0;\n\n      if (NotesField) data[\"details\"] = row[NotesField.columnName] || \"\";\n\n      if (EndDateField)\n         data[\"end_date\"] = row[EndDateField.columnName] || currDate;\n\n      if (DurationField) data[\"duration\"] = row[DurationField.columnName] || 1;\n\n      // Default values\n      if (!data[\"end_date\"] && !data[\"duration\"]) {\n         data[\"end_date\"] = currDate;\n         data[\"duration\"] = 1;\n      }\n\n      if (index) data[\"order\"] = index;\n\n      return data;\n   }\n\n   /**\n    * @method convertValues()\n    * Convert a Gantt task into a set of values for our ABObject.\n    * @param {obj} task\n    *        The current gantt task data.\n    * @return {obj}\n    *         A key=>value hash corresponding to the ABObject that\n    *         is tied to this gantt.\n    */\n   convertValues(task) {\n      const patch = {};\n      const TitleField = this.TitleField;\n      const StartDateField = this.StartDateField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (TitleField) patch[TitleField.columnName] = task[\"text\"] || \"\";\n\n      if (StartDateField) patch[StartDateField.columnName] = task[\"start_date\"];\n\n      if (ProgressField)\n         patch[ProgressField.columnName] = parseFloat(task[\"progress\"] || 0);\n\n      if (NotesField) patch[NotesField.columnName] = task[\"details\"];\n\n      if (EndDateField) patch[EndDateField.columnName] = task[\"end_date\"];\n\n      if (DurationField) patch[DurationField.columnName] = task[\"duration\"];\n\n      return patch;\n   }\n\n   /**\n    * @method objectLoad\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      // const baseView = this.view;\n      const settings = this.settings;\n\n      if (object) {\n         this.TitleField = object.fieldByID(settings.titleFieldID);\n         this.StartDateField = object.fieldByID(settings.startDateFieldID);\n         this.EndDateField = object.fieldByID(settings.endDateFieldID);\n         this.DurationField = object.fieldByID(settings.durationFieldID);\n         this.ProgressField = object.fieldByID(settings.progressFieldID);\n         this.NotesField = object.fieldByID(settings.notesFieldID);\n      }\n   }\n\n   /**\n    * @method datacollectionLoad\n    * @param {ABDatacollection} datacollection\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const dc = this.CurrentDatacollection || datacollection;\n      if (!dc) return;\n\n      // NOTE: this can happen in the ABDesigner object workspace.\n      // we send in a temp DC with no .id\n      this._tempDC = datacollection;\n\n      // NOTE: keep .objectLoad() before any .initData() is called.\n      this.objectLoad(dc.datasource);\n\n      const eventNames = [\"create\", \"update\", \"delete\", \"initializedData\"];\n\n      eventNames.forEach((e) => {\n         if (\n            e in dc._events &&\n            this.__events.findIndex((eo) => eo.eventName === e) !== -1\n         )\n            return;\n\n         switch (e) {\n            case \"delete\":\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: \"delete\",\n                  listener: (taskId) => {\n                     // remove this task in gantt\n                     if (this.ganttElement.isExistsTask(taskId))\n                        this.ganttElement.removeTask(taskId);\n                  },\n               });\n\n               break;\n\n            default:\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: e,\n                  listener: () => {\n                     this.initData();\n                  },\n               });\n\n               break;\n         }\n      });\n   }\n\n   /**\n    * @function hide()\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   initData() {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const dataService = ganttElem.getService(\"local\");\n      if (!dataService) return;\n\n      const dcTasks = dataService.tasks();\n      if (!dcTasks) return;\n\n      // gantt v 8.1.1\n      // Note: there is a race condition that can happen here.\n      // dataService.tasks() calls the MyBackend.tasks() above which\n      // returns a Promise.\n      // when you call dcTasks.clearAll() before the promise\n      // is resolved, the gantt internally throws an error.\n      //\n      // So give webix some time to internally complete it's process\n      // before we do .clearAll();\n      setTimeout(() => {\n         dcTasks.clearAll();\n\n         const DC = this.CurrentDatacollection;\n         const gantt_data = {\n            data: DC\n               ? (DC.getData() || []).map((d, index) =>\n                    this.convertFormat(d, index)\n                 )\n               : [],\n         };\n\n         // check required fields before parse\n         if (this.StartDateField && (this.EndDateField || this.DurationField)) {\n            dcTasks.parse(gantt_data);\n         }\n\n         // Keep original start and end dates for calculate scale to display\n         const currScale = dataService.getScales();\n\n         this.originalStartDate = currScale.start;\n         this.originalEndDate = currScale.end;\n\n         this.sort();\n      }, 10);\n   }\n\n   get getConstantScales() {\n      const DAY_SCALE = { unit: \"day\", format: \"%d\" },\n         WEEK_SCALE = {\n            unit: \"week\",\n            format: (start) => {\n               const parser = webix.Date.dateToStr(\"%d %M\");\n               const wstart = webix.Date.weekStart(start);\n               const wend = webix.Date.add(\n                  webix.Date.add(wstart, 1, \"week\", true),\n                  -1,\n                  \"day\",\n                  true\n               );\n\n               return parser(wstart) + \" - \" + parser(wend);\n            },\n         },\n         MONTH_SCALE = { unit: \"month\", format: \"%F\" },\n         YEAR_SCALE = { unit: \"year\", format: \"%Y\" };\n\n      return {\n         DAY_SCALE,\n         WEEK_SCALE,\n         MONTH_SCALE,\n         YEAR_SCALE,\n      };\n   }\n\n   setScale(scale) {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const ganttData = ganttElem.getService(\"local\");\n      if (!ganttData) return;\n\n      const newScales = [];\n      const { YEAR_SCALE, MONTH_SCALE, WEEK_SCALE, DAY_SCALE } =\n         this.getConstantScales;\n\n      switch (scale) {\n         case \"day\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, DAY_SCALE);\n            break;\n\n         case \"week\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, WEEK_SCALE);\n            break;\n\n         case \"month\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE);\n            break;\n\n         case \"year\":\n            newScales.push(YEAR_SCALE);\n            break;\n      }\n\n      const abWebix = this.AB.Webix;\n      const currScale = ganttElem.getService(\"local\").getScales(),\n         start = abWebix.Date.add(this.originalStartDate, -1, scale, true),\n         end = abWebix.Date.add(this.originalEndDate, 1, scale, true);\n\n      ganttData.setScales(\n         start,\n         end,\n         currScale.precise,\n         currScale.cellWidth,\n         currScale.cellHeight,\n         newScales\n      );\n      ganttElem.$app.refresh();\n      ganttElem.getState().$batch({ top: 0, left: 0 });\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   onShow() {\n      super.onShow();\n      this.datacollectionLoad(this.datacollection);\n\n      $$(this.ids.component)?.show();\n   }\n\n   sort() {\n      // TODO: sorting;\n      return;\n      // const gantt = $$(ids.gantt).getGantt();\n      // if (!gantt) return;\n\n      // // default sort\n      // const MAX_date = new Date(8640000000000000);\n      // gantt.sort(function(a, b) {\n      //    const aStartDate = a[\"start_date\"],\n      //       aEndDate = a[\"end_date\"],\n      //       aDuration = a[\"duration\"] || 1,\n      //       bStartDate = b[\"start_date\"],\n      //       bEndDate = b[\"end_date\"],\n      //       bDuration = b[\"duration\"] || 1;\n\n      //    // if no start date, then be a last item\n      //    if (\n      //       a[this.StartDateField.columnName] == null ||\n      //       b[this.StartDateField.columnName] == null\n      //    ) {\n      //       return (\n      //          (a[this.StartDateField.columnName] || MAX_date) -\n      //          (b[this.StartDateField.columnName] || MAX_date)\n      //       );\n      //    } else if (aStartDate != bStartDate) {\n      //       return aStartDate - bStartDate;\n      //    } else if (aEndDate != bEndDate) {\n      //       return aEndDate - bEndDate;\n      //    } else if (aDuration != bDuration) {\n      //       return bDuration - aDuration;\n      //    }\n      // }, false);\n   }\n\n   async taskAdd(taskData) {\n      const patch = this.convertValues(taskData);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend addTask() method\n         // On Webix documents, the method addTask() have to return the added object so we have to pass the data we add through this method.\n         return await this.CurrentObject?.model().create(patch);\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Saving Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to save this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskAdd(): Error Saving Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskRemove(rowId) {\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend removeTask() method\n         // On Webix documents, the method removeTask() return {} (an empty object) so we return {} in removeTask() instead.\n         await this.CurrentObject.model().delete(rowId);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Removing Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to remove this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskRemove(): Error Removing Item\",\n            rowId,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskUpdate(rowId, updatedTask) {\n      const patch = this.convertValues(updatedTask);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend updateTask() method\n         // On Webix documents, the method updateTask() return {} (an empty object) so we return {} in updateTask() instead.\n         await this.CurrentObject.model().update(rowId, patch);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Updating Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to update this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskUpdate(): Error Updating Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n}\n","import ABViewGanttComponent from \"./viewComponent/ABViewGanttComponent\";\n\nconst ABViewGanttCore = require(\"../../core/views/ABViewGanttCore\");\n\nexport default class ABViewGantt extends ABViewGanttCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGanttComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (!this.settings.startDateFieldID) {\n            this.warningsMessage(`doesn't have a start date field set.`);\n         } else {\n            let field = DC.datasource?.fieldByID(\n               this.settings.startDateFieldID\n            );\n            if (!field) {\n               this.warningsMessage(\n                  `can't lookup field: startDate[${this.settings.startDateFieldID}]`\n               );\n            }\n         }\n      }\n   }\n}\n","/*\n * ABViewGridPopupExport.js\n * Manage the Popup that allows you to export data into one of our supported\n * formats.\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nexport default class ABWorkObjectPopupExport extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupExport\";\n\n      super({\n         popupExport: `${idBase}_popupExport`,\n         list: `${idBase}_popupExport_list`,\n      });\n\n      this._currentObject = null;\n      // {ABObject}\n      // The ABObject of the data we will export.  We can find out the fields\n      // from the object.\n\n      this._dataCollection = null;\n      // {ABDatacCollection}\n      // The ABDataCollection that contains the data we are going to export.\n\n      this._grid = null;\n      // {webix.grid}\n      // the current webix.grid that contains the data we are going to export.\n\n      this._filename = null;\n      // {string}\n      // the name of the desired output file.\n\n      this._hiddenFields = [];\n      // {array}\n      // An array of ABField.columnName(s) that we are not wanting to export\n   }\n\n   ui() {\n      var self = this;\n\n      // webix UI definition:\n      return {\n         view: \"popup\",\n         id: this.ids.popupExport,\n         width: 160,\n         height: 0, //150,\n         select: false,\n         hidden: true,\n         body: {\n            id: this.ids.list,\n            view: \"list\",\n            autoheight: true,\n            data: [\n               { name: \"CSV\", icon: \"file-excel-o\" },\n               { name: \"Excel\", icon: \"file-excel-o\" },\n               { name: \"PDF\", icon: \"file-pdf-o\" },\n               { name: \"PNG\", icon: \"file-image-o\" },\n            ],\n            template:\n               \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n            on: {\n               onItemClick: function (id /*, e, node */) {\n                  var component = this.getItem(id);\n                  self.export(component.name);\n               },\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n      webix.ui(this.ui());\n      $$(this.ids.popupExport).resize();\n   }\n\n   // internal business logic\n\n   /**\n    * @method dataCollectionLoad()\n    * the current ABDataCollection we are working with.\n    * @param {ABDataCollection} dc\n    */\n   dataCollectionLoad(dc) {\n      this._dataCollection = dc;\n   }\n\n   /**\n    * @method objectLoad()\n    * The current ABObject we are working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method setHiddenFields\n    * Register Fields we don't want exported in our data.\n    * @param {array} fields\n    *        An array of ABField.columnName(s) to exclude from our export.\n    */\n   setHiddenFields(fields = []) {\n      this._hiddenFields = fields ?? [];\n   }\n\n   /**\n    * @method setFilename()\n    * Register the name of the file we want our data to export as.\n    * @param {string} filename\n    */\n   setFilename(filename) {\n      this._filename = filename;\n   }\n\n   /**\n    * @method setGridComponent()\n    * Register the webix.grid that currently stores the data we are\n    * exporting.\n    * @param {webix.grid} $grid\n    */\n   setGridComponent($grid) {\n      this._grid = $grid;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    */\n   show($view) {\n      $$(this.ids.popupExport).show($view);\n   }\n\n   async export(name) {\n      let fnExport;\n\n      let columns = {};\n\n      let dc = this._dataCollection;\n      let _currentObject = this._currentObject;\n      let _grid = this._grid;\n      let _filename = this._filename;\n\n      if (\n         dc &&\n         (!dc.settings.loadAll || dc.dataStatus == dc.dataStatusFlag.notInitial)\n      ) {\n         // Load all data\n         await dc.reloadData(0, null);\n         dc.settings.loadAll = true;\n      }\n\n      // client filter data\n      // template of report\n      if (_currentObject) {\n         _currentObject.fields().forEach((f) => {\n            // hidden fields\n            if (this._hiddenFields.indexOf(f.columnName) > -1) return;\n\n            columns[f.columnName] = {\n               template: (rowData) => {\n                  return f.format(rowData);\n               },\n            };\n         });\n      }\n\n      // If there are checked items, then export them only\n      // Otherwise export all items\n      const noCheckedRow = _grid.data.find({appbuilder_select_item: 1}).length < 1;\n      const filterRow = (row) => noCheckedRow || row?.appbuilder_select_item == 1;\n\n      switch (name) {\n         case \"CSV\":\n            webix.csv.delimiter.cols = \",\";\n\n            fnExport = webix.toCSV(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filter: filterRow\n            });\n            break;\n         case \"Excel\":\n            fnExport = webix.toExcel(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               name:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PDF\":\n            fnExport = webix.toPDF(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PNG\":\n            fnExport = webix.toPNG(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               // filter: NOT SUPPORT\n            });\n            break;\n      }\n\n      try {\n         await fnExport;\n         $$(this.ids.popupExport).hide();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: `ABViewGridPopupExport:export(): System could not export: ${name}`,\n            exportType: name,\n            columns,\n            fileName: _filename,\n         });\n      }\n   }\n\n   // this.dataCollectionLoad = _logic.dataCollectionLoad;\n   // this.objectLoad = _logic.objectLoad;\n   // this.setGridComponent = _logic.setGridComponent;\n   // this.setFilename = _logic.setFilename;\n   // this.setHiddenFields = _logic.setHiddenFields;\n   // this.show = _logic.show;\n}\n","/*\n * ABViewGridPopupMassUpdate\n *\n * An ABViewGrid can offer a mass update feature.  This is a ui component\n * to help with the processing of the update.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\nimport RowUpdater from \"../RowUpdater\";\n\nvar L = null;\n\nexport default class ABViewGridPopupMassUpdate extends ClassUI {\n   //.extend(idBase, function(App) {\n\n   constructor(ABViewGridComponent, idBase) {\n      idBase = idBase || \"abviewgridpopupMassUpdate\";\n\n      super({\n         component: `${idBase}_popupMassUpdate`,\n         submit: `${idBase}_submitMassUpdate`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // Which ABObject are we currently working with.\n\n      this.GridComponent = ABViewGridComponent;\n      // {ABViewGridComponent}\n      // The current ABViewGridComponent we are working with.\n\n      this.AB = ABViewGridComponent.AB;\n      // {ABFactory}\n\n      this.rowUpdater = new RowUpdater(idBase, this.AB);\n      // {RowUpdater}\n      // An instance of our RowUpdater form builder.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         view: \"popup\",\n         id: ids.component,\n         // modal: true,\n         body: {\n            width: 500,\n            rows: [\n               // Update panel\n               this.rowUpdater.ui(),\n               { height: 15 },\n               {\n                  cols: [\n                     {},\n                     {\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        width: 100,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     {\n                        id: ids.submit,\n                        css: \"webix_primary\",\n                        view: \"button\",\n                        label: L(\"Update\"),\n                        type: \"form\",\n                        width: 120,\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      webix.ui(this.ui());\n      this.rowUpdater.init(AB);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method hide()\n    * Hide the popup.\n    */\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object & datatable\n    * @param {ABObject} object\n    *        the currently selected object.\n    * @param {webix.datatable} dataTable\n    *        the dataTable we need to run the mass update on...trust me this\n    *        will be good\n    */\n   objectLoad(object, dataTable) {\n      this.CurrentObject = object;\n      this.rowUpdater.objectLoad(object);\n      this.DataTable = dataTable;\n   }\n\n   onShow() {}\n\n   /**\n    * @method show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {json} options\n    *        Additional webix options related to the .show() method.\n    */\n   show($view, options = null) {\n      if (options != null) {\n         $$(this.ids.component).show($view, options);\n      } else {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   /**\n    * @method submit()\n    * Process the submit action by getting the values to change and then\n    * running a batchUpdate() on the items in our datatable that were selected.\n    */\n   submit() {\n      // Update values to records\n      let update_button = $$(this.ids.submit),\n         update_items = this.rowUpdater.getValue() || [];\n\n      update_button.disable();\n\n      if (!this.GridComponent) {\n         // TODO : Message\n         // console.log(\"no data collection to update\");\n         update_button.enable();\n         return;\n      } else if (update_items.length < 1) {\n         // TODO : Message\n         update_button.enable();\n         return;\n      }\n\n      let $datatable = this.GridComponent.getDataTable(); // $$(DataTable.ui.id);\n      let updatedRowIds = [];\n      $datatable.data.each(function (row) {\n         if (\n            row &&\n            row.hasOwnProperty(\"appbuilder_select_item\") &&\n            row.appbuilder_select_item == 1\n         ) {\n            updatedRowIds.push(row.id);\n         }\n      });\n\n      let vals = {};\n      update_items.forEach((item) => {\n         let fieldInfo = this.CurrentObject.fieldByID(item.fieldId);\n         if (!fieldInfo) return;\n\n         vals[fieldInfo.columnName] = item.value;\n      });\n\n      if (updatedRowIds.length > 0) {\n         webix.confirm({\n            title: L(\"Updating Multiple Records\"),\n            text: L(\"Are you sure you want to update the selected records?\"),\n            callback: (result) => {\n               if (result) {\n                  if ($datatable && $datatable.showProgress)\n                     $datatable.showProgress({ type: \"icon\" });\n\n                  let objModel = this.CurrentObject.model();\n                  objModel\n                     .batchUpdate({\n                        rowIds: updatedRowIds,\n                        values: vals,\n                     })\n                     .then(() => {\n                        // Anything we need to do after we are done.\n                        update_button.enable();\n                        this.hide();\n\n                        if ($datatable && $datatable.hideProgress)\n                           $datatable.hideProgress();\n                     })\n                     .catch((err) => {\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewGridPopupMassUpdate:submit(): Error during batchUpdate\",\n                           rowIds: updatedRowIds,\n                           values: vals,\n                        });\n                     });\n               } else {\n                  update_button.enable();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n         update_button.enable();\n         this.hide();\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupExport from \"../ABViewGridPopupExport\";\nimport ABPopupMassUpdateClass from \"../ABViewGridPopupMassUpdate\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\n\nexport default class ABViewGridComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGrid_${baseView.id}`,\n         Object.assign(\n            {\n               table: \"\",\n\n               // component: `${base}_component`,\n               toolbar: \"\",\n               buttonDeleteSelected: \"\",\n\n               buttonFilter: \"\",\n               buttonMassUpdate: \"\",\n               buttonSort: \"\",\n               buttonExport: \"\",\n\n               globalSearchToolbar: \"\",\n\n               datatable: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.handler_select = (...params) => {\n         this.selectRow(...params);\n      };\n      // {fn} .handler_select\n      // the callback fn for our selectRow()\n      // We want this called when the .datacollection we are linked to\n      // emits an \"onChange\" event.\n\n      this.detatch();\n      baseView.filterHelper.on(\"filter.data\", this._handler_filterData);\n\n      // derive these from viewGrid\n      this.id = baseView.id;\n\n      /////\n      ///// For TEsting:\n      /////\n      // this.settings.showToolbar = 1;\n      // this.settings.isEditable = 1;\n      // this.settings.isExportable = 1;\n      // this.settings.gridFilter = {\n      //    filterOption: 1,\n      //    userFilterPosition: \"form\",\n      //    isGlobalToolbar: 1,\n      // };\n\n      // this.settings.detailsPage = \"some-uuid\";\n      // this.settings.detailTab = \"some_uuid_2\";\n      // this.settings.trackView = 1;\n      /////\n      ///// end testing\n      /////\n\n      this.columnSplitLeft = 0;\n      // {integer}\n      // Which column to \"split\"/\"freeze\" from the left side of the grid.\n\n      this.columnSplitRight = 0;\n      // {integer}\n      // The # columns to the right to freeze.\n\n      // this.datacollection = null;\n      // // {ABDataCollection}\n      // // The Webix DataCollection that manages the data we are displaying.\n\n      this.validationError = false;\n      // {bool}\n      // Has a Validation Error occured?\n\n      this.linkPage = baseView.linkPageHelper.component();\n      // {ABViewPropertyLinkPage}\n      //\n\n      const idTable = this.ids.table;\n      const ab = this.AB;\n\n      this.PopupExport = new ABPopupExport(idTable);\n      this.PopupExport.init(ab);\n      // {ABViewGridPopupExport}\n      // Popup for managing how to export our data.\n\n      this.PopupMassUpdateComponent = new ABPopupMassUpdateClass(this, idTable);\n      this.PopupMassUpdateComponent.init(ab);\n      // this.PopupMassUpdateComponent.on(\"\")\n      // {}\n      // The popup for performing a Mass Edit operation.\n\n      this.PopupSortDataTableComponent = new ABPopupSortField(idTable);\n      this.PopupSortDataTableComponent.init(ab);\n      this.PopupSortDataTableComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n\n      this.skippableColumns = [\n         \"appbuilder_select_item\",\n         \"appbuilder_view_detail\",\n         \"appbuilder_view_track\",\n         \"appbuilder_view_edit\",\n         \"appbuilder_trash\",\n      ];\n      // {array}\n      // An array of column names that should be skipped from some of our\n      // event handlers.\n\n      // this.EditField = null;\n      // // {ABFieldXXX}\n      // // Which ABField is the focus of our PopupHeader menu?\n\n      // this.EditNode = null;\n      // // {HTML DOM}\n      // // The webix.$node where the ABField Header is that our PopupHeader\n      // // should be displayed at.\n\n      this.ignoreLocalSettings = false;\n      // {bool}\n      // should we ignore our local settings in our current context?\n      // (used in ABDesigner when our settings will change as we need to\n      // use those instead of the saved settings.)\n\n      this._gridSettings = null;\n      // {hash} { grid.id : [ {columnHeader}, {columnHeader} ...]}\n      // Keep a global copy of our local Grid settings, so we can optimize the header\n      // sizes.\n\n      this._isDatacollectionLoaded = false;\n   }\n\n   // {string}\n   // the unique key for ABViewGrids to store/retrieve their local settings\n   get keyStorageSettings() {\n      return \"abviewgrid_settings\";\n   }\n\n   detatch() {\n      this.view.filterHelper.removeAllListeners(\"filter.data\");\n      this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n\n   /**\n    * @method getColumnIndex()\n    * return the Datatable.getColumnIndex() value\n    * @param {string} id\n    *        the uuid of the column we are referencing.\n    * @return {integer}\n    */\n   getColumnIndex(id) {\n      let indx = this.getDataTable().getColumnIndex(id);\n      if (!this.settings.massUpdate) {\n         // the index is 0 based. So if the massUpdate feature isn't\n         // enabled, we need to add 1 to the result so they look like\n         // a 1, 2, ...\n\n         indx++;\n      }\n      return indx;\n   }\n\n   uiDatatable() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const self = this;\n\n      let view = \"datatable\";\n\n      if (settings.isTreeDatable || settings.groupBy)\n         // switch datatable to support tree\n         view = \"treetable\";\n\n      let selectType = \"cell\";\n\n      if (!settings.isEditable && (settings.detailsPage || settings.editPage))\n         selectType = \"row\";\n\n      return {\n         view,\n         id: ids.datatable,\n         resizeColumn: { size: 10 },\n         resizeRow: { size: 10 },\n         prerender: false,\n         editable: settings.isEditable,\n         fixedRowHeight: false,\n         height: settings.height || 0,\n         editaction: \"custom\",\n         select: selectType,\n         footer:\n            // show footer when there are summary columns\n            settings.summaryColumns.length > 0 ||\n            settings.countColumns.length > 0,\n         tooltip: true,\n         // tooltip: {\n         //    // id: ids.tooltip,\n         //    template: (obj, common) => {\n         //       return this.toolTip(obj, common);\n         //    },\n         //    on: {\n         //       // When showing a larger image preview the tooltip sometime displays part of the image off the screen...this attempts to fix that problem\n         //       onBeforeRender: function () {\n         //          self.toolTipOnBeforeRender(this.getNode());\n         //       },\n         //       onAfterRender: function (data) {\n         //          self.toolTipOnAfterRender(this.getNode());\n         //       },\n         //    },\n         // },\n         dragColumn: true,\n         on: {\n            onBeforeSelect: function (data, preserve) {\n               if (self.skippableColumns.indexOf(data.column) != -1) {\n                  return false;\n               } else if (settings.isEditable) {\n                  const currObject = self.datacollection.datasource;\n                  const selectField = currObject.fields(\n                     (f) => f.columnName === data.column\n                  )[0];\n\n                  if (selectField == null) return true;\n\n                  const cellNode = this.getItemNode({\n                        row: data.row,\n                        column: data.column,\n                     }),\n                     rowData = this.getItem(data.row);\n\n                  return selectField.customEdit(rowData, null, cellNode);\n               } else if (!settings.detailsPage && !settings.editPage)\n                  return false;\n            },\n            onAfterSelect: (data, preserve) => {\n               // {ABObject} data\n               //            the selected object\n               // {bool} prevent\n               //        indicates whether the previous selection state should\n               //        be saved. (is multiselect and they are holding SHIFT)\n               if (this.settings.isEditable) {\n                  this.onAfterSelect(data, preserve);\n               }\n            },\n            onBeforeEditStart: function (id) {\n               if (!this.getItem(id) == \"appbuilder_select_item\") return false;\n            },\n            onCheck: function (row, col, val) {\n               // Update checkbox data\n               if (col == \"appbuilder_select_item\") {\n                  // do nothing because we will parse the table once we decide\n                  // if we are deleting or updating rows\n                  self.toggleUpdateDelete();\n               } else {\n                  if (settings.isEditable) {\n                     // if the colum is not the select item column move on to\n                     // the next step to save\n                     const state = {\n                        value: val,\n                     };\n                     const editor = {\n                        row: row,\n                        column: col,\n                        config: null,\n                     };\n\n                     self.onAfterEditStop(state, editor);\n                  } else {\n                     const node = this.getItemNode({\n                        row: row,\n                        column: col,\n                     });\n                     const checkbox = node.querySelector(\n                        'input[type=\"checkbox\"]'\n                     );\n\n                     if (val == 1) {\n                        checkbox.checked = false;\n                     } else {\n                        checkbox.checked = true;\n                     }\n                  }\n               }\n            },\n            onBeforeEditStop: function (state, editor) {\n               // console.warn(\"!! ToDo: onBeforeEditStop()\");\n            },\n            onAfterEditStop: (state, editor, ignoreUpdate) => {\n               if (this.validationError == false)\n                  this.onAfterEditStop(state, editor, ignoreUpdate);\n            },\n            onValidationError: function () {\n               this.validationError = true;\n            },\n            onValidationSuccess: function () {\n               this.validationError = false;\n            },\n\n            // We are sorting with server side requests now so we can remove this\n            // onAfterLoad: function () {\n            //    _logic.onAfterLoad();\n            // },\n            onColumnResize: function (\n               columnName,\n               newWidth,\n               oldWidth,\n               user_action\n            ) {\n               // if we resize the delete column we want to resize the last\n               // column but Webix will not allow since the column is split\n               const rightSplitItems = [\n                  \"appbuilder_view_detail\",\n                  \"appbuilder_view_track\",\n                  \"appbuilder_view_edit\",\n                  \"appbuilder_trash\",\n               ];\n\n               if (rightSplitItems.indexOf(columnName) != -1) {\n                  // Block events so we can leave the delete column alone\n                  this.blockEvent();\n                  // keeps original width\n                  this.setColumnWidth(columnName, oldWidth);\n                  this.unblockEvent();\n                  // Listen to events again\n\n                  // find the last column's config\n                  const column = self.getLastColumn();\n\n                  columnName = column.id;\n\n                  // determine if we are making the column larger or smaller\n                  if (newWidth < oldWidth) {\n                     newWidth = column.width + 40;\n                     // add 40 because there is not any more space to drag so we\n                     // will allow 40px increments\n                  } else {\n                     newWidth = column.width - (newWidth - 40);\n                     // take the column's width and subtrack the difference of\n                     // the expanded delet column drag\n                  }\n                  // we don't want columns to be smaller than 50 ?? do we ??\n                  // I could be wrong maybe a checkbox could be smaller so this\n                  // could change\n                  if (newWidth < 50) {\n                     newWidth = 50;\n                  }\n                  // minWidth is important because we are using fillspace:true\n                  column.minWidth = newWidth;\n                  // Sets the UI\n                  this.setColumnWidth(columnName, newWidth);\n               }\n               // Saves the new width\n               if (user_action) {\n                  self.onColumnResize(\n                     columnName,\n                     newWidth,\n                     oldWidth,\n                     user_action\n                  );\n               }\n            },\n            onRowResize: (rowId) => {\n               // V2: we no longer do anything onRowResize()\n               // before we saved the row height in the record.\n               // this.onRowResize(rowId);\n            },\n            onBeforeColumnDrag: (sourceId, event) =>\n               !(this.skippableColumns.indexOf(sourceId) !== -1),\n            onBeforeColumnDrop: (sourceId, targetId, event) =>\n               // Make sure we are not trying to drop onto one of our special\n               // columns ...\n               !(this.skippableColumns.indexOf(targetId) !== -1),\n            onAfterColumnDrop: (sourceId, targetId, event) =>\n               this.onAfterColumnDrop(sourceId, targetId, event),\n            // onAfterColumnShow: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnShow()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).showField(id);\n            // },\n            // onAfterColumnHide: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnHide()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n            // },\n\n            onHeaderClick: (id, e, node) => {\n               /* if (settings.configureHeaders) */\n               this.onHeaderClick(id, e, node);\n            },\n         },\n      };\n   }\n\n   uiFilter() {\n      return this.view.filterHelper.ui();\n\n      // make sure onFilterData is now .emit()ed instead of passing in a callback.\n   }\n\n   /**\n    * @method uiToolbar()\n    * Return the webix definition for the toolbar row for our Grids.\n    * @return {json}\n    */\n   uiToolbar() {\n      const ids = this.ids;\n      const self = this;\n\n      return {\n         view: \"toolbar\",\n         id: ids.toolbar,\n         hidden: true,\n         css: \"ab-data-toolbar\",\n         cols: [\n            {\n               view: \"button\",\n               id: ids.buttonMassUpdate,\n               css: \"webix_transparent\",\n               label: this.label(\"Edit\"),\n               icon: \"fa fa-pencil-square-o\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarMassUpdate(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonDeleteSelected,\n               css: \"webix_transparent\",\n               label: this.label(\"Delete\"),\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarDeleteSelected(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonFilter,\n               css: \"webix_transparent\",\n               label: this.label(\"Filters\"),\n               icon: \"fa fa-filter\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarFilter(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonSort,\n               css: \"webix_transparent\",\n               label: this.label(\"Sort\"),\n               icon: \"fa fa-sort\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarSort(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonExport,\n               css: \"webix_transparent\",\n               label: this.label(\"Export\"),\n               icon: \"fa fa-print\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarExport(this.$view);\n               },\n            },\n            {},\n            {\n               id: ids.globalSearchToolbar,\n               view: \"search\",\n               placeholder: this.label(\"Search...\"),\n               on: {\n                  onTimedKeyPress: () => {\n                     const searchText = $$(ids.globalSearchToolbar).getValue();\n\n                     this.view.filterHelper.externalSearchText(searchText);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      const _uiGrid = {\n         id: this.ids.table,\n         type: \"space\",\n         borderless: true,\n         rows: [\n            {},\n            {\n               view: \"label\",\n               label: this.label(\"Select an object to load.\"),\n               inputWidth: 200,\n               align: \"center\",\n            },\n            {},\n         ],\n      };\n\n      const settings = this.settings;\n\n      if (this.datacollection || settings.dataviewID !== \"\") {\n         _uiGrid.padding = settings.padding;\n         _uiGrid.rows = [];\n         if (settings.showToolbar) {\n            _uiGrid.rows.push(this.uiToolbar());\n         }\n         if (this.settings.gridFilter.filterOption) {\n            _uiGrid.rows.push(this.uiFilter());\n         }\n\n         _uiGrid.rows.push(this.uiDatatable());\n      }\n\n      const _ui = super.ui([_uiGrid]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel = 2) {\n      if (AB) await super.init(AB);\n\n      const self = this;\n      const ids = this.ids;\n\n      // WORKAROUND : Where should we define this ??\n      // For include PDF.js\n      const abWebix = AB.Webix;\n\n      abWebix.codebase = \"\";\n      abWebix.cdn = \"/js/webix\";\n\n      // this shows the options to Hide, Filter, sort , etc...\n      // only in Designer?\n      // PopupHeaderEditComponent.init({\n      //    onClick: _logic.callbackHeaderEdit, // be notified when there is a change in the hidden fields\n      // });\n\n      // NOTE: register the onAfterRender() here, so it only registers\n      // one.\n      const $DataTable = this.getDataTable();\n\n      let throttleCustomDisplay = null;\n      let scrollStarted = null;\n\n      if (!$DataTable) return;\n\n      abWebix.extend($DataTable, abWebix.ProgressBar);\n\n      $DataTable.config.accessLevel = accessLevel;\n\n      if (accessLevel < 2) $DataTable.define(\"editable\", false);\n\n      const settings = this.settings;\n\n      const customDisplays = (data) => {\n         const CurrentObject = this.datacollection?.datasource;\n\n         if (!CurrentObject || !$DataTable.data) return;\n\n         const displayRecords = [];\n\n         const verticalScrollState = $DataTable.getScrollState().y,\n            rowHeight = $DataTable.config.rowHeight,\n            height =\n               $DataTable.$view.querySelector(\".webix_ss_body\").clientHeight,\n            startRecIndex = Math.floor(verticalScrollState / rowHeight),\n            endRecIndex = startRecIndex + $DataTable.getVisibleCount();\n\n         let index = 0;\n\n         $DataTable.data.order.each((id) => {\n            if (id != null && startRecIndex <= index && index <= endRecIndex)\n               displayRecords.push(id);\n\n            index++;\n         });\n\n         let editable = settings.isEditable;\n\n         if ($DataTable.config.accessLevel < 2) editable = false;\n\n         CurrentObject.customDisplays(\n            data,\n            this.AB._App,\n            $DataTable,\n            displayRecords,\n            editable\n         );\n      };\n\n      $DataTable.attachEvent(\"onAfterRender\", function (data) {\n         $DataTable.resize();\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n\n         AB.ClassUI.CYPRESS_REF($DataTable);\n         Object.keys(ids).forEach((key) => {\n            const $el = $$(ids[key]);\n            if ($el) {\n               AB.ClassUI.CYPRESS_REF($el);\n            }\n         });\n      });\n\n      // we have some data types that have custom displays that don't look\n      // right after scrolling large data sets we need to call customDisplays\n      // again\n      $DataTable.attachEvent(\"onScroll\", function () {\n         if (scrollStarted) clearTimeout(scrollStarted);\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         scrollStarted = setTimeout(() => {\n            customDisplays(this.data);\n         }, 1500);\n      });\n      $DataTable.attachEvent(\"onAfterScroll\", function () {\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n      });\n\n      // Process our onItemClick events.\n      // this is a good place to check if our delete/trash icon was clicked.\n      $DataTable.attachEvent(\"onItemClick\", function (id, e, node) {\n         // make sure we have an object selected before processing this.\n         const dc = self.datacollection;\n         const CurrentObject = dc?.datasource;\n\n         if (!CurrentObject) return;\n\n         if (settings.isEditable === 0) {\n            const items = $DataTable.getItem(id);\n         }\n         // if this was our edit icon:\n         // console.log(e.target.className);\n         if (e === \"auto\" || e.target.className.indexOf(\"eye\") > -1) {\n            // View a Details Page:\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (e.target.className.indexOf(\"pencil\") > -1) {\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         } else if (e.target.className.indexOf(\"track\") > -1)\n            self.emit(\"object.track\", CurrentObject, id.row);\n         // App.actions.openObjectTrack(CurrentObject, id.row);\n         else if (e.target.className.indexOf(\"clear-combo-value\") > -1) {\n            const clearValue = {};\n\n            clearValue[id.column] = \"\";\n\n            const updateRow = async () => {\n               try {\n                  const response = await CurrentObject.model().update(\n                     id.row,\n                     clearValue\n                  );\n\n                  // console.log(response);\n               } catch (err) {\n                  self.AB.notify.developer(err, {\n                     context: \"ABViewGridComponent.onItemClick\",\n                     message: \"Error updating item\",\n                     obj: CurrentObject.toObj(),\n                     id: id.row,\n                  });\n               }\n            };\n\n            updateRow();\n         }\n         // if this was our trash icon:\n         else if (e.target.className.indexOf(\"trash\") > -1) {\n            // If the confirm popup is showing, then skip to show a new one\n            if (!this._deleteConfirmPopup) {\n               this._deleteConfirmPopup = abWebix.confirm({\n                  title: self.label(\"Delete data\"),\n                  text: self.label(\"Do you want to delete this row?\"),\n                  callback: (result) => {\n                     delete this._deleteConfirmPopup;\n                     if (result) {\n                        const deleteRow = async () => {\n                           try {\n                              const response =\n                                 await CurrentObject.model().delete(id.row);\n\n                              if (response.numRows > 0) {\n                                 $DataTable.remove(id);\n                                 $DataTable.clearSelection();\n                              } else\n                                 abWebix.alert({\n                                    text: self.label(\n                                       \"No rows were effected.  This does not seem right.\"\n                                    ),\n                                 });\n                           } catch (err) {\n                              self.AB.notify.developer(err, {\n                                 context: \"ABViewGridComponent.onItemClick\",\n                                 message: \"Error deleting item\",\n                                 obj: CurrentObject.toObj(),\n                                 id: id.row,\n                              });\n\n                              //// TODO: what do we do here?\n                           }\n                        };\n\n                        deleteRow();\n                     }\n\n                     $DataTable.clearSelection();\n\n                     return true;\n                  },\n               });\n            }\n         } else if (settings.detailsPage.length) {\n            // If an icon wasn't selected but a details page is set\n            // view the details page\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (settings.editPage.length) {\n            // If an icon wasn't selected but an edit page is set\n            // view the edit page\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         }\n      });\n\n      // ABViewGrid Original init();\n      if (settings.showToolbar) {\n         if (\n            settings.massUpdate ||\n            settings.isSortable ||\n            settings.isExportable ||\n            (settings.gridFilter &&\n               settings.gridFilter.filterOption &&\n               settings.gridFilter.userFilterPosition === \"toolbar\")\n         )\n            $$(ids.toolbar).show();\n\n         if (!settings.massUpdate) {\n            $$(ids.buttonMassUpdate).hide();\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (!settings.allowDelete) $$(ids.buttonDeleteSelected).hide();\n\n         if (settings.gridFilter) {\n            if (\n               settings.gridFilter.filterOption !== 1 ||\n               settings.gridFilter.userFilterPosition !== \"toolbar\"\n            )\n               $$(ids.buttonFilter).hide();\n\n            if (\n               settings.gridFilter.filterOption === 3 &&\n               settings.gridFilter.globalFilterPosition === \"single\"\n            )\n               $DataTable.hide();\n\n            if (settings.gridFilter.isGlobalToolbar)\n               $$(ids.globalSearchToolbar).show();\n            else $$(ids.globalSearchToolbar).hide();\n\n            if (settings.gridFilter.filterOption)\n               this.view.filterHelper.init(this.AB);\n         }\n\n         if (!settings.isSortable) $$(ids.buttonSort).hide();\n\n         if (!settings.isExportable) $$(ids.buttonExport).hide();\n      }\n\n      if (settings.hideHeader) this.hideHeader();\n\n      const dc =\n         this.datacollection || this.AB.datacollectionByID(settings.dataviewID);\n\n      if (!this._isDatacollectionLoaded) this.datacollectionLoad(dc);\n\n      // Make sure\n      this._gridSettings =\n         this._gridSettings ||\n         (await this.AB.Storage.get(this.keyStorageSettings)) ||\n         {};\n\n      if (dc?.datasource) {\n         // TRANSITION: ABViewGrid_orig line 862 ...\n\n         this.linkPage.init({\n            view: this.view,\n            datacollection: dc,\n         });\n\n         this.refreshHeader();\n      }\n   }\n\n   /**\n    * @method busy()\n    * Indicate that our datatable is currently busy loading/processing\n    * data.\n    */\n   busy() {\n      this.getDataTable()?.showProgress?.({ type: \"icon\" });\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const ids = this.ids;\n      const $ButtonFilter = $$(ids.buttonFilter);\n\n      if ($ButtonFilter) {\n         const onlyFilterRules = this.view.filterHelper.filterRules();\n\n         $ButtonFilter.define(\"badge\", onlyFilterRules?.rules?.length ?? 0);\n         $ButtonFilter.refresh();\n      }\n\n      const dc = this.datacollection;\n\n      dc.filterCondition(filterRules);\n      dc.reloadData();\n   }\n\n   async callbackSortData(sortRules = []) {\n      const $buttonSort = $$(this.ids.buttonSort);\n\n      $buttonSort.define(\"badge\", sortRules.length || null);\n      $buttonSort.refresh();\n\n      const gridElem = this.getDataTable();\n\n      if (gridElem.data.find({}).length < gridElem.data.count()) {\n         try {\n            // NOTE: Webix's client sorting does not support dynamic loading.\n            // If the data does not be loaded, then load all data.\n            await this.datacollection.reloadData(0, 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context:\n                  \"ABViewGrid:callbackSortData(): Error perform datacollection.reloadData()\",\n            });\n         }\n      }\n\n      // wait until the grid component will done to repaint UI\n      setTimeout(() => {\n         gridElem.sort((a, b) => this.PopupSortDataTableComponent.sort(a, b));\n      }, 777);\n   }\n\n   /**\n    * @method changePage()\n    * Helper method to switch to another View.\n    * @param {ABDataCollection} dv\n    *        The DataCollection we are working with.\n    * @param {obj} rowItem\n    *        the { row:#, column:{string} } of the item that was clicked.\n    * @param {ABViewPage.uuid} page\n    *        The .uuid of the ABViewPage/ABViewTab we are to swtich to.\n    *\n    */\n   changePage(dv, rowItem, page) {\n      const rowId = rowItem?.row ?? null;\n\n      // Set cursor to data view\n      if (dv) dv.setCursor(rowId);\n\n      // Pass settings to link page module\n      if (this.linkPage) this.linkPage.changePage(page, rowId);\n      else super.changePage(page);\n   }\n\n   columnConfig(headers = []) {\n      this.settings.columnConfig = headers;\n   }\n   /**\n    * @method datacollectionLoad()\n    * Assign an ABDataCollection to this component to use instead of any\n    * provided .dataviewID in our settings.\n    * NOTE: this primarily happens in the ABDesigner's Object Workspace.\n    * @param {ABDataCollection} dc\n    */\n   datacollectionLoad(dc) {\n      const oldDC = this.datacollection;\n      this.datacollection = dc;\n\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      if ($DataTable) {\n         // preventing too many handlers\n         if (!this.__handler_dc_busy) {\n            this.__handler_dc_busy = () => {\n               this.busy();\n            };\n\n            this.__handler_dc_ready = () => {\n               this.ready();\n               this.populateGroupData();\n            };\n\n            this.__handler_dc_loadData = () => {\n               this.populateGroupData();\n            };\n         }\n\n         if (oldDC) {\n            // remove our listeners from the previous DC\n            oldDC.removeListener(\"initializingData\", this.__handler_dc_busy);\n            oldDC.removeListener(\"initializedData\", this.__handler_dc_ready);\n            oldDC.removeListener(\"loadData\", this.__handler_dc_loadData);\n         }\n\n         if (dc) {\n            if (dc.datacollectionLink && dc.fieldLink)\n               dc.bind($DataTable, dc.datacollectionLink, dc.fieldLink);\n            else dc.bind($DataTable);\n\n            // making sure we only have 1 registered listener on this dc\n            dc.removeListener(\"initializingData\", this.__handler_dc_busy);\n            dc.on(\"initializingData\", this.__handler_dc_busy);\n            dc.removeListener(\"initializedData\", this.__handler_dc_ready);\n            dc.on(\"initializedData\", this.__handler_dc_ready);\n            dc.removeListener(\"loadData\", this.__handler_dc_loadData);\n            dc.on(\"loadData\", this.__handler_dc_loadData);\n            this.grouping();\n\n            this._isDatacollectionLoad = true;\n         } else $DataTable.unbind();\n\n         // Be sure to pass on our CurrentObject to our dependent components.\n         if (CurrentObject) {\n            this.view.filterHelper.objectLoad(CurrentObject);\n            this.PopupMassUpdateComponent.objectLoad(\n               CurrentObject,\n               this.getDataTable()\n            );\n            this.PopupSortDataTableComponent.objectLoad(CurrentObject);\n\n            this.PopupExport.objectLoad(CurrentObject);\n            this.PopupExport.dataCollectionLoad(dc);\n            this.PopupExport.setGridComponent(this.getDataTable());\n            this.PopupExport.setHiddenFields(this.settings.hiddenFields);\n            this.PopupExport.setFilename(this.view.label);\n         }\n      }\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * disable the update or delete buttons in the toolbar if there no items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   disableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.disable();\n      $$(this.ids.buttonDeleteSelected)?.disable();\n      // externally indicate that no rows are selected\n      this.emit(\"selection.cleared\");\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * enable the update or delete buttons in the toolbar if there are any items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   enableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.enable();\n      $$(this.ids.buttonDeleteSelected)?.enable();\n      // externally indicate that a row has been selected\n      this.emit(\"selection\");\n   }\n\n   freezeDeleteColumn() {\n      // we are going to always freeze the delete column if the datatable\n      // is wider than the container so it is easy to get to\n      return this.getDataTable().define(\"rightSplit\", this.columnSplitRight);\n   }\n\n   /**\n    * @method getDataTable()\n    * return the webix grid component.\n    * @return {webix.grid}\n    */\n   getDataTable() {\n      return $$(this.ids.datatable);\n   }\n\n   /**\n    * @method getLastColumn\n    * return the last column of a datagrid that is resizeable\n    */\n   getLastColumn() {\n      const $DataTable = this.getDataTable();\n\n      let lastColumn = {};\n\n      // Loop through each columns config to find out if it is in the split 1 region and set it as the last item...then it will be overwritten by next in line\n      $DataTable.eachColumn((columnId) => {\n         const columnConfig = $DataTable.getColumnConfig(columnId);\n\n         if (columnConfig.split === 1) lastColumn = columnConfig;\n      });\n\n      return lastColumn;\n   }\n\n   /**\n    * @method grouping()\n    * perform any grouping operations\n    */\n   grouping() {\n      if (!this.settings.groupBy) return;\n\n      const $treetable = this.getDataTable();\n\n      // map: {\n      //     votes:[\"votes\", \"sum\"],\n      //     title:[\"year\"]\n      // }\n      const baseGroupMap = {};\n      const CurrentObject = this.datacollection.datasource;\n\n      CurrentObject.fields().forEach((f) => {\n         switch (f.key) {\n            case \"number\":\n               baseGroupMap[f.columnName] = [f.columnName, \"sum\"];\n\n               break;\n\n            case \"calculate\":\n            case \"formula\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData) return 0;\n\n                     let sum = 0;\n\n                     listData.forEach((r) => {\n                        // we only want numbers returned so pass `true` as third param\n                        // to signify that this is part of a grouping row\n                        sum += f.format(r, false, true) * 1;\n                     });\n\n                     // simulate reformat from ABFieldFormulaCore\n                     if (!f.fieldLink || f.fieldLink.key === \"calculate\")\n                        return sum;\n                     else {\n                        const rowDataFormat = {};\n\n                        rowDataFormat[f.fieldLink.columnName] = sum;\n\n                        return f.fieldLink.format(rowDataFormat);\n                     }\n                  },\n               ];\n\n               break;\n\n            case \"connectObject\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const valRelation = r[f.relationName()];\n\n                        // array\n                        if (valRelation?.length) count += valRelation.length;\n                        // object\n                        else if (valRelation) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n\n            default:\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const val = prop(r);\n\n                        // count only exists data\n                        if (val) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n         }\n      });\n\n      // set group definition\n      // $DataTable.define(\"scheme\", {\n      //    $group: {\n      //       by: settings.groupBy,\n      //       map: groupMap\n      //    }\n      // });\n\n      // NOTE: https://snippet.webix.com/e3a2bf60\n      let groupBys = (this.settings.groupBy || \"\")\n         .split(\",\")\n         .map((g) => g.trim());\n      // Reverse the array NOTE: call .group from child to root\n      groupBys = groupBys.reverse();\n\n      groupBys.forEach((colName, gIndex) => {\n         const groupMap = this.AB.cloneDeep(baseGroupMap);\n\n         let by;\n\n         // Root\n         if (gIndex === groupBys.length - 1) by = colName;\n         // Sub groups\n         else {\n            by = (row) => {\n               let byValue = row[colName];\n\n               for (let i = gIndex + 1; i < groupBys.length; i++) {\n                  byValue = `${row[groupBys[i]]} - ${byValue}`;\n               }\n\n               return byValue;\n            };\n\n            // remove parent group data\n            groupBys.forEach((gColName) => {\n               if (gColName !== colName) groupMap[gColName] = [gColName];\n            });\n         }\n\n         $treetable.data.group({\n            by: by,\n            map: groupMap,\n         });\n      });\n   }\n\n   hideHeader() {\n      const $DataTable = this.getDataTable();\n\n      $DataTable.define(\"header\", false);\n      $DataTable.refresh();\n   }\n\n   /**\n    * @function onAfterColumnDrop\n    * When an editor drops a column to save a new column order\n    * @param {string} sourceId\n    *        the columnName of the item dragged\n    * @param {string} targetId\n    *        the columnName of the item dropped on\n    * @param {event} event\n    */\n   async onAfterColumnDrop(sourceId, targetId, event) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const settings = this.settings;\n      const columnConfig = this.localSettings();\n\n      // Reorder our current columnConfig\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n\n      for (let i = 0; i < columnConfig.length; i++)\n         if (columnConfig[i].id == sourceId) {\n            itemMoved = columnConfig[i];\n            columnConfig.splice(i, 1);\n            oPos = i;\n\n            break;\n         }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (let j = 0; j < columnConfig.length; j++)\n         if (columnConfig[j].id == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) j++;\n\n            columnConfig.splice(j, 0, itemMoved);\n\n            break;\n         }\n\n      // special case: dropped on end and need to update .fillspace\n      // if (j == columnConfig.length - 1) {\n      //    if (columnConfig[j - 1].fillspace) {\n      //       columnConfig[j - 1].fillspace = false;\n      //       columnConfig[j].fillspace = true;\n      //    }\n      // }\n\n      // if we allow local changes\n      this.localSettings(columnConfig);\n\n      if (settings.saveLocal) this.localSettingsSave();\n\n      // Now emit this event, in case an external object is wanting to\n      // respond to this: ABDesigner.objectBuilder, Interface  Designer,\n      // we send back an array[ ABField.id, ...] in the order we have\n      // them.\n      this.emit(\n         \"column.order\",\n         columnConfig.map((c) => c.fieldID)\n      );\n\n      this.refreshHeader();\n\n      // CurrentObject.fieldReorder(sourceId, targetId)\n      //    .then(() => {\n      //       // reset each column after a drop so we do not have multiple fillspace and minWidth settings\n      //       var editiable = settings.isEditable;\n      //       if ($DataTable.config.accessLevel < 2) {\n      //          editiable = false;\n      //       }\n      //       var columnHeaders = CurrentObject.columnHeaders(true, editiable);\n      //       columnHeaders.forEach(function (col) {\n      //          if (col.id == sourceId && col.fillspace == true) {\n      //             columnHeader.fillspace = false;\n      //             columnHeader.minWidth = columnHeader.width;\n      //          }\n      //       });\n\n      //       _logic.callbacks.onColumnOrderChange(CurrentObject);\n      //       // freeze columns:\n      //       let frozenColumnID =\n      //          settings.frozenColumnID != null\n      //             ? settings.frozenColumnID\n      //             : CurrentObject.workspaceFrozenColumnID;\n      //       if (frozenColumnID != \"\") {\n      //          $DataTable.define(\n      //             \"leftSplit\",\n      //             $DataTable.getColumnIndex(frozenColumnID) + columnSplitLeft\n      //          );\n      //       } else {\n      //          $DataTable.define(\"leftSplit\", columnSplitLeft);\n      //       }\n      //       _logic.freezeDeleteColumn();\n      //       $DataTable.refreshColumns();\n      //    })\n      //    .catch((err) => {\n      //       OP.Error.log(\"Error saving new column order:\", {\n      //          error: err,\n      //       });\n      //    });\n   }\n\n   /**\n    * @function onAfterEditStop\n    * When an editor is finished.\n    * @param {json} state\n    * @param {} editor\n    * @param {} ignoreUpdate\n    * @return\n    */\n   async onAfterEditStop(state, editor, ignoreUpdate) {\n      // state:   {value: \"new value\", old: \"old value\"}\n      // editor:  { column:\"columnName\", row:ID, value:'value', getInputNode:fn(), config:{}, focus: fn(), getValue: fn(), setValue: function, getInputNode: function, render: function…}\n\n      const $DataTable = this.getDataTable();\n\n      // if you don't edit an empty cell we just need to move on\n      if (\n         (!state.old && state.value === \"\") ||\n         (state.old === \"\" && state.value === \"\")\n      ) {\n         $DataTable.clearSelection();\n\n         return false;\n      }\n\n      if (editor.config)\n         switch (editor.config.editor) {\n            case \"number\":\n               state.value = parseFloat(state.value);\n\n               break;\n\n            case \"datetime\":\n               state.value = state.value.getTime();\n\n               if (state && state.old && state.old.getTime)\n                  state.old = state.old.getTime();\n\n               break;\n\n            default:\n            // code block\n         }\n\n      if (state.value !== state.old) {\n         const item = $DataTable.getItem(editor.row);\n\n         item[editor.column] = state.value;\n\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid\");\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid_cell\");\n\n         const CurrentObject = this.datacollection.datasource;\n         const validator = CurrentObject.isValidData(item);\n\n         if (validator.pass()) {\n            //// Question: do we submit full item updates?  or just patches?\n            // IF Patch:\n            // var patch = {};\n            // patch.id = item.id;\n            // patch[editor.column] = item[editor.column];\n            // await CurrentObject.model().update(item.id, patch)\n\n            const ab = this.AB;\n\n            try {\n               await CurrentObject.model().update(item.id, item);\n\n               if ($DataTable.exists(editor.row)) {\n                  $DataTable.updateItem(editor.row, item);\n                  $DataTable.clearSelection();\n                  $DataTable.refresh(editor.row);\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  context: \"ABViewGrid:onAfterEditStop(): Error saving item\",\n                  item,\n                  editor,\n                  state,\n                  object: CurrentObject.toObj(),\n               });\n\n               $DataTable.clearSelection();\n\n               if (\n                  ab.Validation.isGridValidationError(\n                     err,\n                     editor.row,\n                     $DataTable\n                  )\n               ) {\n                  // Do we reset the value?\n                  // item[editor.column] = state.old;\n                  // $DataTable.updateItem(editor.row, item);\n               } else {\n                  // this was some other Error!\n               }\n            }\n            // CurrentObject.model()\n            //    .update(item.id, item)\n            //    .then(() => {\n            //       if ($DataTable.exists(editor.row)) {\n            //          $DataTable.updateItem(editor.row, item);\n            //          $DataTable.clearSelection();\n            //          $DataTable.refresh(editor.row);\n            //       }\n            //    })\n            //    .catch((err) => {\n            //       OP.Error.log(\"Error saving item:\", {\n            //          error: err\n            //       });\n\n            //       $DataTable.clearSelection();\n            //       if (\n            //          OP.Validation.isGridValidationError(\n            //             err,\n            //             editor.row,\n            //             $DataTable\n            //          )\n            //       ) {\n            //          // Do we reset the value?\n            //          // item[editor.column] = state.old;\n            //          // $DataTable.updateItem(editor.row, item);\n            //       } else {\n            //          // this was some other Error!\n            //       }\n            //    });\n         } else validator.updateGrid(editor.row, $DataTable);\n      } else $DataTable.clearSelection();\n\n      return false;\n\n      // var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n      // self.updateRowData(state, editor, ignoreUpdate)\n      //    .fail(function (err) { // Cached\n      //       item[editor.column] = state.old;\n      //       $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       $$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    })\n      //    .then(function (result) {\n      //       if (item) {\n      //          item[editor.column] = state.value;\n\n      //          if (result && result.constructor.name === 'Cached' && result.isUnsync())\n      //             item.isUnsync = true;\n\n      //          $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       }\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    });\n   }\n\n   /**\n    * @function onAfterSelect\n    * This is when a user clicks on a cell.  We use the onAfterSelect to\n    * trigger a normal .editCell() if there isn't a custom editor for this field.\n    * @param {json} data webix cell data\n    * @return\n    */\n   onAfterSelect(data /*, preserve */) {\n      // data: {row: 1, column: \"name\", id: \"1_name\", toString: function}\n      // data.row: ABObject.id\n      // data.column => columnName of the field\n\n      // Normal update data\n      this.getDataTable()?.editCell(data.row, data.column);\n   }\n\n   /**\n    * @function onColumnResizeResize\n    * This is when a user adjusts the size of a column\n    * @param {} columnName\n    * @param {int} newWidth\n    * @param {int} oldWidth\n    * @param {} user_action\n    * @return\n    */\n   async onColumnResize(columnName, newWidth, oldWidth, user_action) {\n      // update the settings\n\n      let requireRefresh = false;\n\n      const ab = this.AB;\n\n      if (newWidth < 30) {\n         newWidth = 30;\n         requireRefresh = true;\n\n         ab.Webix.message({\n            type: \"info\",\n            text: this.label(\"minimum column width is {0}\", [30]),\n            expire: 1000,\n         });\n      }\n\n      const localSettings = this.localSettings();\n\n      if (localSettings) {\n         const header = localSettings.find((h) => h.id == columnName);\n\n         if (header) {\n            header.width = newWidth;\n\n            delete header.adjust;\n         }\n      }\n\n      this.localSettings(localSettings);\n\n      if (this.settings.saveLocal) {\n         await this.localSettingsSave();\n         // for (const item in GridSettings) {\n         //    GridSettings[item].forEach((item) => {\n         //       // we cannot include field info because of the cicular structure\n         //       if (item?.footer?.field) {\n         //          delete item.footer.field;\n         //       }\n         //    });\n         // }\n         // await this.AB.Storage.set(this.keyStorageSettings, GridSettings);\n      }\n\n      // refresh the display\n      if (requireRefresh) this.refreshHeader();\n\n      this.freezeDeleteColumn();\n\n      // this.getDataTable().refreshColumns();\n\n      // TODO: allow external app to respond in special cases:\n      // eg: ABDesigner object workspace, interface builder, etc...\n      this.emit(\"column.resize\", columnName, newWidth, oldWidth);\n   }\n\n   /**\n    * @method onHeaderClick\n    * process the user clicking on the header for one of our columns.\n    */\n   onHeaderClick(id, e, node) {\n      if (this.skippableColumns.indexOf(id.column) !== -1) return false;\n\n      // save our EditNode & EditField:\n      // this.EditNode = node;\n\n      const EditField = this.datacollection.datasource.fields(\n         (f) => f.columnName === id.column\n      )[0];\n      // if (this.EditField) {\n      //    // show the popup\n      //    PopupHeaderEditComponent.show(node, this.EditField);\n      // }\n\n      this.emit(\"column.header.clicked\", node, EditField);\n\n      return false;\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      super.onShow();\n\n      // make sure our grid is properly .adjust()ed to the screen.\n      this.getDataTable()?.adjust();\n\n      const dv = this.datacollection;\n\n      if (dv)\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: this.handler_select.bind(this),\n         });\n   }\n\n   /**\n    * @method ready()\n    * Indicate that our datatable is currently ready for operation.\n    */\n   ready() {\n      const dc = this.datacollection;\n      if (\n         this.isCustomGroup &&\n         dc?.dataStatus != dc?.dataStatusFlag.initialized\n      )\n         return;\n\n      this.getDataTable()?.hideProgress?.();\n   }\n\n   /**\n    * @function refreshHeader()\n    *\n    * refresh the header for the table apart from the refresh() command\n    * @param {bool} ignoreLocal\n    *        Should we ignore our local settings and build directly from\n    *        our config settings?\n    */\n   refreshHeader(ignoreLocal = this.ignoreLocal) {\n      // columnSplitRight = 0;\n      // wait until we have an Object defined:\n      const CurrentObject = this.datacollection.datasource;\n\n      if (!CurrentObject) return;\n\n      const ids = this.ids;\n      const $DataTable = $$(ids.datatable);\n\n      if (!$DataTable) return;\n\n      const accessLevel = $DataTable.config.accessLevel;\n\n      $DataTable.define(\"leftSplit\", 0);\n      $DataTable.define(\"rightSplit\", 0);\n\n      let rowHeight = 0;\n\n      CurrentObject.imageFields().forEach((image) => {\n         const settings = image.getSettings();\n\n         if (settings.useHeight && settings.imageHeight > rowHeight)\n            rowHeight = settings.imageHeight;\n      });\n\n      if (rowHeight) $DataTable.define(\"rowHeight\", rowHeight);\n\n      // $DataTable.clearAll();\n\n      const settings = this.settings;\n\n      let editable = settings.isEditable;\n\n      if ($DataTable.config.accessLevel < 2) editable = false;\n\n      //// update DataTable structure:\n      // get column list from our local settings\n      const objColumnHeaders = CurrentObject.columnHeaders(\n         true,\n         editable,\n         // TRANSITION: moving these from .columnHeaders() to here:\n         [], //settings.summaryColumns,\n         [], //settings.countColumns,\n         [] //settings.hiddenFields\n      );\n\n      let columnHeaders = this.localSettings();\n\n      const ab = this.AB;\n\n      // if that is empty, pull from our settings.columnConfig\n      if (!columnHeaders || ignoreLocal)\n         columnHeaders = ab.cloneDeep(this.settings.columnConfig);\n\n      // if that is empty for some reason, rebuild from our CurrentObject\n      if (columnHeaders.length === 0) columnHeaders = objColumnHeaders;\n\n      // sanity check:\n      // columnHeaders can't contain a column that doesn't exist in objColumHeaders:\n      // (eg: a field might have been removed but localStorage doesn't know that )\n      const objColumnHeaderIDs = objColumnHeaders.map((h) => h.fieldID);\n\n      columnHeaders = columnHeaders.filter(\n         (c) => objColumnHeaderIDs.indexOf(c.fieldID) > -1\n      );\n\n      // default our columnConfig values to our columnHeaders:\n      columnHeaders.forEach((c) => {\n         // we want to overwrite our default settings with anything stored\n         // in local storage\n         const origCol = objColumnHeaders.find((h) => h.fieldID === c.fieldID);\n\n         // none of our functions can be stored in localStorage, so scan\n         // the original column and attach any template functions to our\n         // stashed copy.\n         // also the suggest for selects and connected fields may contain a\n         // function so go ahead and copy the original suggest to the column\n         Object.keys(origCol).forEach((k) => {\n            if (typeof origCol[k] === \"function\" || k === \"suggest\") {\n               c[k] = origCol[k];\n            }\n         });\n\n         const f = CurrentObject.fieldByID(c.fieldID);\n\n         if (!f) return;\n\n         // if it's a hidden field:\n         if (settings.hiddenFields.indexOf(f.columnName) > -1) {\n            c.hidden = true;\n         }\n\n         // add summary footer:\n         if (settings.summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\")\n               c.footer = { content: \"totalColumn\", field: f };\n            else c.footer = { content: \"summColumn\" };\n         }\n         // or add the count footer\n         else if (settings.countColumns.indexOf(f.id) > -1)\n            c.footer = { content: \"countColumn\" };\n      });\n\n      let localSettings = this.localSettings();\n\n      if (!localSettings || ignoreLocal) {\n         this.localSettings(columnHeaders);\n\n         localSettings = columnHeaders;\n      }\n\n      columnHeaders = ab.cloneDeep(localSettings);\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      columnHeaders.forEach((col) => {\n         col.fillspace = false;\n\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (col.validationRules) {\n            if (typeof col.validationRules === \"string\") {\n               col.validationRules = JSON.parse(col.validationRules);\n            }\n\n            if (col.validationRules.length) {\n               const validationUI = [];\n\n               // there could be more than one so lets loop through and build the UI\n               col.validationRules.forEach((rule) => {\n                  const Filter = ab.filterComplexNew(\n                     col.id /*+ \"_\" + webix.uid()*/\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: col.id,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n\n               // create a unique view id for popup\n               const popUpId =\n                  ids.rules + \"_\" + col.id; /* + \"_\" + webix.uid() */\n\n               // store the popup ids so we can remove the later\n               rulePops.push(popUpId);\n               // add the popup to the UI but don't show it\n               ab.Webix.ui({\n                  view: \"popup\",\n                  css: \"ab-rules-popup\",\n                  id: popUpId,\n                  body: {\n                     rows: validationUI,\n                  },\n               });\n            }\n         }\n\n         // group header\n         if (\n            settings.groupBy &&\n            (settings.groupBy || \"\").indexOf(col.id) > -1\n         ) {\n            const groupField = CurrentObject.fieldByID(col.fieldID);\n\n            if (groupField)\n               col.template = (obj, common) => {\n                  // return common.treetable(obj, common) + obj.value;\n                  if (obj.$group) {\n                     const rowData = ab.cloneDeep(obj);\n\n                     rowData[groupField.columnName] = rowData.value;\n\n                     return (\n                        common.treetable(obj, common) +\n                        groupField.format(rowData)\n                     );\n                  } else return groupField.format(obj);\n               };\n         }\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(CurrentObject.application);\n            f.filter.fieldsLoad(CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $DataTable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $DataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n               let invalidMessage = \"\";\n\n               $DataTable.$view.complexValidations[key].forEach((filter) => {\n                  // convert rowData from { colName : data } to { id : data }\n                  const newData = {};\n\n                  (CurrentObject.fields() || []).forEach((field) => {\n                     newData[field.id] = data[field.columnName];\n                  });\n\n                  // for the case of \"this_object\" conditions:\n                  if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n                  // use helper funtion to check if valid\n                  const ruleValid = filter.filters(newData);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     invalidMessage = filter.invalidMessage;\n                  }\n               });\n\n               // we also need to define an error message\n               if (!isValid)\n                  ab.Webix.message({\n                     type: \"error\",\n                     text: invalidMessage,\n                  });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $DataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $DataTable.config.rulePops = rulePops;\n         $DataTable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($DataTable.config.rulePops)\n            $DataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         // remove any validation rules from the previous table\n         $DataTable.define(\"rules\", {});\n         $DataTable.refresh();\n      }\n\n      const addedColumns = [];\n      // {array} the .id of the columnHeaders we add based upon our settings.\n      // this will help us pick the lastColumn that is part of the\n      // object.\n\n      if (settings.labelAsField) {\n         // console.log(CurrentObject);\n         columnHeaders.unshift({\n            id: \"appbuilder_label_field\",\n            header: \"Label\",\n            fillspace: true,\n            template: (obj) => CurrentObject.displayData(obj),\n            // css: { 'text-align': 'center' }\n         });\n         addedColumns.push(\"appbuilder_label_field\");\n      }\n\n      if (settings.massUpdate && accessLevel === 2) {\n         columnHeaders.unshift({\n            id: \"appbuilder_select_item\",\n            header: { content: \"masterCheckbox\", contentId: \"mch\" },\n            width: 40,\n            template: \"<div class='singleSelect'>{common.checkbox()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         this.columnSplitLeft = 1;\n         addedColumns.push(\"appbuilder_select_item\");\n      } else this.columnSplitLeft = 0;\n\n      if (settings.detailsPage !== \"\" && !settings.hideButtons) {\n         columnHeaders.push({\n            id: \"appbuilder_view_detail\",\n            header: \"\",\n            width: 40,\n            template: (obj, common) =>\n               \"<div class='detailsView'><span class='webix_icon fa fa-eye'></span></div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_detail\");\n      }\n\n      if (settings.trackView !== 0 && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_view_track\",\n            header: \"\",\n            width: 40,\n            template:\n               \"<div class='track'><span class='track fa fa-history'></span></div>\",\n            css: { \"text-align\": \"center\", cursor: \"pointer\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_track\");\n      }\n\n      if (\n         settings.editPage !== \"\" &&\n         !settings.hideButtons &&\n         accessLevel === 2\n      ) {\n         columnHeaders.push({\n            id: \"appbuilder_view_edit\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='edit'>{common.editIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_edit\");\n      }\n\n      if (settings.allowDelete && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_trash\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='trash'>{common.trashIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_trash\");\n      }\n\n      // find our last displayed column (that isn't one we added);\n      let lastCol = null;\n\n      for (let i = columnHeaders.length - 1; i >= 0; i--)\n         if (!lastCol) {\n            const col = columnHeaders[i];\n\n            if (!col.hidden && addedColumns.indexOf(col.id) === -1) {\n               lastCol = col;\n\n               break;\n            }\n         }\n\n      if (lastCol) {\n         lastCol.fillspace = true;\n         lastCol.minWidth = lastCol.width;\n         lastCol.width = 150; // set a width for last column but by default it will fill the available space or use the minWidth to take up more\n      }\n\n      $DataTable.refreshColumns(columnHeaders);\n\n      // the addedColumns represent the additional icons that can be added.\n      this.columnSplitRight = addedColumns.length;\n\n      // the .massUpdate gets added to Left so don't include that in split right:\n      if (addedColumns.indexOf(\"appbuilder_select_item\") > -1)\n         this.columnSplitRight -= 1;\n      // .columnSplitRight can't be < 0\n      if (this.columnSplitRight < 0) this.columnSplitRight = 0;\n\n      // freeze columns:\n      const frozenColumnID = settings.frozenColumnID;\n\n      if (frozenColumnID != \"\")\n         $DataTable.define(\n            \"leftSplit\",\n            $DataTable.getColumnIndex(frozenColumnID) + 1\n         );\n      else $DataTable.define(\"leftSplit\", this.columnSplitLeft);\n\n      this.freezeDeleteColumn();\n      $DataTable.refreshColumns();\n      // }\n   }\n\n   /**\n    * localSettingsSave()\n    * Persist our current working copy of our GridSettings to localStorage.\n    * @return {Promise}\n    */\n   async localSettingsSave() {\n      const ab = this.AB;\n      const savedLocalSettings =\n         (await ab.Storage.get(this.keyStorageSettings)) || {};\n      const _gridSettings = this._gridSettings;\n\n      savedLocalSettings[this.settingsID()] = _gridSettings[this.settingsID()]\n         ? _gridSettings[this.settingsID()]\n         : [];\n\n      for (const item in savedLocalSettings) {\n         savedLocalSettings[item].forEach((item) => {\n            // we cannot include field info because of the cicular structure\n            if (item?.footer?.field) delete item.footer.field;\n         });\n      }\n\n      await ab.Storage.set(this.keyStorageSettings, savedLocalSettings);\n   }\n\n   /**\n    * @method localSettings()\n    * An interface method to handle get/set operations on our local GridSettings\n    * storage.\n    * .localStorage() : a getter to return the current value\n    * .localStorage(value) : a setter to save value as our current value.\n    * @param {various} value\n    *        the value to set to our settings.\n    * @return {various}\n    */\n   localSettings(value = null) {\n      const _gridSettings = this._gridSettings;\n\n      if (value) _gridSettings[this.settingsID()] = value;\n      else return _gridSettings[this.settingsID()];\n   }\n\n   /**\n    * @method selectRow()\n    * Select the grid row that correspondes to the provided rowData.\n    * @param {json} rowData\n    *        A key=>value hash of data that matches an entry in the grid.\n    *        rowData.id should match an existing entry.\n    */\n   selectRow(rowData) {\n      const $DataTable = this.getDataTable();\n\n      if (!$DataTable) return;\n\n      if (!rowData) $DataTable.unselect();\n      else if (rowData?.id && $DataTable.exists(rowData.id))\n         $DataTable.select(rowData.id, false);\n      else $DataTable.select(null, false);\n   }\n\n   /**\n    * @method settingsID()\n    * return the unique key for this Grid + object combo to store data\n    * in our localStorage.\n    * @return {string}\n    */\n   settingsID() {\n      const CurrentObject = this.datacollection.datasource;\n\n      return `${this.id}-${CurrentObject ? CurrentObject.id : \"0\"}`;\n   }\n\n   /**\n    * @method toggleTab()\n    * recursively toggle tabs into view once a user chooses a detail/edit view\n    * to display.\n    * @param {ABView.id} parentTab\n    * @param {webix.view} wb\n    */\n   toggleTab(parentTab, wb) {\n      // find the tab || if we didn't pass and id we may have passed a domNode\n      const tab =\n         wb.getTopParentView().queryView({ id: parentTab }) || $$(parentTab);\n\n      if (!tab) return;\n\n      // set the tabbar to to the tab\n      const tabbar = tab.getParentView().getParentView();\n\n      if (!tabbar) return;\n\n      // if we have reached the top we won't have a tab\n      if (tabbar.setValue) tabbar.setValue(parentTab);\n\n      // find if it is in a multiview of a tab\n      const nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n\n      // if so then do this again\n      if (nextTab) this.toggleTab(nextTab, wb);\n   }\n\n   toggleUpdateDelete() {\n      const $DataTable = this.getDataTable();\n\n      let checkedItems = 0;\n\n      $DataTable.data.each((obj) => {\n         if (\n            typeof obj !== \"undefined\" &&\n            Object.prototype.hasOwnProperty.call(\n               obj,\n               \"appbuilder_select_item\"\n            ) &&\n            obj.appbuilder_select_item === 1\n         )\n            checkedItems++;\n      });\n\n      if (checkedItems > 0) this.enableUpdateDelete();\n      else this.disableUpdateDelete();\n   }\n\n   toolbarDeleteSelected($view) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const deleteTasks = [];\n\n      $DataTable.data.each((row) => {\n         if (\n            typeof row !== \"undefined\" &&\n            // row.hasOwnProperty(\"appbuilder_select_item\") &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item === 1\n         ) {\n            // NOTE: store a fn() to run later.\n            deleteTasks.push(() => CurrentObject.model().delete(row.id));\n         }\n      });\n\n      const abWebix = this.AB.Webix;\n\n      if (deleteTasks.length > 0)\n         abWebix.confirm({\n            title: this.label(\"Delete Multiple Records\"),\n            text: this.label(\n               \"Are you sure you want to delete the selected records?\"\n            ),\n            callback: async (result) => {\n               if (result) {\n                  // Now run those functions\n                  await Promise.all(deleteTasks.map((t) => t()));\n\n                  // Anything we need to do after we are done.\n                  this.disableUpdateDelete();\n               }\n            },\n         });\n      else\n         abWebix.alert({\n            title: this.label(\"No Records Selected\"),\n            text: this.label(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n   }\n\n   toolbarFilter($view) {\n      this.view.filterHelper.showPopup($view);\n   }\n\n   toolbarSort($view) {\n      this.PopupSortDataTableComponent.show($view);\n   }\n\n   toolbarExport($view) {\n      this.PopupExport.show($view);\n   }\n\n   toolbarMassUpdate($view) {\n      this.PopupMassUpdateComponent.show($view);\n   }\n\n   /**\n    * @function toolTip()\n    *\n    * Retrieve the items toolTip\n    */\n   toolTip(obj, common) {\n      const CurrentObject = this.datacollection.datasource;\n      const imageFieldColNames = CurrentObject.imageFields().map(\n         (f) => f.columnName\n      );\n\n      let tip = \"\";\n\n      const columnName = common.column.id.replace(\" \", \"\");\n\n      if (Array.isArray(obj[columnName])) {\n         obj[columnName].forEach(function (o) {\n            if (o.text) tip += o.text + \"<br/>\";\n         });\n      } else if (\n         typeof obj[columnName + \"__relation\"] !== \"undefined\" &&\n         typeof obj[columnName] === \"number\"\n      )\n         tip = obj[columnName + \"__relation\"].text;\n      else if (typeof obj[columnName + \"__relation\"] !== \"undefined\") {\n         let relationData = obj[columnName + \"__relation\"];\n\n         if (!Array.isArray(relationData)) relationData = [relationData];\n\n         (relationData || []).forEach(function (o) {\n            if (o) tip += o.text + \"<br/>\";\n         });\n      } else if (imageFieldColNames.indexOf(columnName) !== -1) {\n         if (!obj[columnName]) {\n            return \"\";\n         } else {\n            // TODO: we need to get this URL from the ABFieldImage object!\n            tip = `<img style='max-width: 500px; max-height: 500px;' src='/file/${obj[columnName]}' />`;\n         }\n      } else if (common.column.editor === \"date\")\n         tip = common.column.format(obj[columnName]);\n      else if (common.column.editor === \"richselect\")\n         CurrentObject.fields().forEach((f) => {\n            if (f.columnName === columnName) {\n               if (f.settings.options) {\n                  f.settings.options.forEach((o) => {\n                     if (o.id === obj[columnName]) {\n                        tip = o.text;\n                     }\n                  });\n               }\n            }\n         });\n      else tip = obj[columnName];\n\n      if (!tip) return \"\";\n      else return tip;\n   }\n\n   /**\n    * @function toolTipOnBeforeRender()\n    *\n    * Add visibility \"hidden\" to all tooltips before render so we can move to a new location without the visual jump\n    */\n   toolTipOnBeforeRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      node.style.visibility = \"hidden\";\n   }\n\n   /**\n    * @function toolTipOnAfterRender()\n    *\n    * If the tooltip is displaying off the screen we want to try to reposition it for a better experience\n    */\n   toolTipOnAfterRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      if (node.firstChild?.nodeName === \"IMG\") {\n         setTimeout(() => {\n            const imgBottom = parseInt(node.style.top.replace(\"px\", \"\")) + 500;\n            const imgRight = parseInt(node.style.left.replace(\"px\", \"\")) + 500;\n\n            if (imgBottom > window.innerHeight) {\n               const imgOffsetY = imgBottom - window.innerHeight;\n               const newTop =\n                  parseInt(node.style.top.replace(\"px\", \"\")) - imgOffsetY;\n               node.style.top = newTop + \"px\";\n            }\n\n            if (imgRight > window.innerWidth) {\n               const imgOffsetX = imgRight - window.innerWidth;\n               const newLeft =\n                  parseInt(node.style.left.replace(\"px\", \"\")) - imgOffsetX;\n               node.style.left = newLeft + \"px\";\n            }\n\n            node.style.visibility = \"visible\";\n         }, 250);\n      } else node.style.visibility = \"visible\";\n   }\n\n   get isCustomGroup() {\n      const dc = this.datacollection;\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      return (\n         $DataTable?.config?.view === \"treetable\" && !CurrentObject?.isGroup\n      );\n   }\n\n   populateGroupData() {\n      if (!this.isCustomGroup) return;\n\n      this.busy();\n\n      const dc = this.datacollection;\n      const $DataTable = this.getDataTable();\n\n      $DataTable.clearAll();\n      $DataTable.parse(dc.getData() || []);\n\n      this.grouping();\n      this.ready();\n   }\n}\n","const ABViewGridCore = require(\"../../core/views/ABViewGridCore\");\nimport ABViewGridComponent from \"./viewComponent/ABViewGridComponent\";\nimport ABViewGridFilter from \"./viewProperties/ABViewPropertyFilterData\";\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewGrid extends ABViewGridCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.gridFilter);\n   }\n\n   propertyGroupByList(ids, groupBy) {\n      let colNames = groupBy || [];\n      if (typeof colNames == \"string\") {\n         colNames = colNames.split(\",\");\n      }\n\n      let options = $$(ids.groupBy).getList().data.find({});\n\n      $$(ids.groupByList).clearAll();\n      colNames.forEach((colName) => {\n         let opt = options.filter((o) => o.id == colName)[0];\n         if (opt) {\n            $$(ids.groupByList).add(opt);\n         }\n      });\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGridComponent(this);\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null) {\n         this.__filterHelper = new ABViewGridFilter(\n            this.AB,\n            `${this.id}_filterHelper`\n         );\n      }\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let origWS = this.warningsSilent;\n      this.warningsSilent = true;\n      let DC = this.datacollection;\n      this.warningsSilent = origWS;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewGridPopupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nvar L = null;\n\nexport default class AB_Work_Object_Workspace_PopupSortFields extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupSortFields\";\n\n      super({\n         component: `${idBase}_popupSort`,\n         list: `${idBase}_popupSort_list`,\n         form: `${idBase}_popupSort_form`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // The current ABObject we are working with.\n\n      this._blockOnChange = false;\n      // {bool}\n      // Should we skip the onChange handler processing at this time?\n\n      this._settings = null;\n      // {json}\n      // default sort settings.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   uiForm() {\n      const compId = this.ids.component;\n      return {\n         view: \"form\",\n         id: this.ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: (/* id, e, node */) => {\n                     this.clickAddNewSort();\n                     this.triggerOnChange();\n                  },\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `${compId} add sort button`\n                     );\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         id: this.ids.component,\n         // autoheight:true,\n         width: 600,\n         body: this.uiForm(),\n      };\n   }\n\n   // Our init() function for setting up our UI\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      // if popup does not already exist add it\n      if (!$$(this.ids.component)) webix.ui(this.ui());\n   }\n\n   /**\n    * @function clickAddNewSort\n    * When the user clicks the \"Add New Sort\" button, this routine will\n    * add another row to the sort form.\n    * @param {string} fieldId\n    *        The ABField.id of the field to auto select in this new row.\n    * @param {string} dir\n    *        The sort order to auto select in this new row.\n    */\n   // clickAddNewSort: function(by, dir, isMulti, id) {\n   clickAddNewSort(fieldId, dir) {\n      var self = this;\n      var sort_form = $$(this.ids.form);\n\n      var viewIndex = sort_form.getChildViews().length - 1;\n      var listFields = this.getFieldList(true);\n      sort_form.addView(\n         {\n            id: \"sort\" + webix.uid(),\n            cols: [\n               {\n                  view: \"combo\",\n                  width: 220,\n                  options: listFields,\n                  on: {\n                     onChange: function (columnId) {\n                        var el = this;\n                        self.onChangeCombo(columnId, el);\n                     },\n                  },\n               },\n               {\n                  view: \"segmented\",\n                  width: 200,\n                  options: [\n                     {\n                        id: \"\",\n                        value: L(\"Please select field\"),\n                     },\n                  ],\n                  on: {\n                     onChange: (/* newv, oldv */) => {\n                        // 'asc' or 'desc' values\n                        this.triggerOnChange();\n                     },\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  width: 30,\n                  on: {\n                     onItemClick: function () {\n                        sort_form.removeView(this.getParentView());\n                        self.refreshFieldList(true);\n                        self.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         },\n         viewIndex\n      );\n\n      // Select field\n      if (fieldId) {\n         var fieldsCombo = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[0];\n         fieldsCombo.setValue(fieldId);\n      }\n      // select direction\n      if (dir) {\n         var segmentButton = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[1];\n         segmentButton.setValue(dir);\n      }\n   }\n\n   /**\n    * @function getFieldList\n    * return field list so we can present a custom UI for view\n    * @param {bool} excludeSelected\n    *        Should we ignore fields that already exist in the form?\n    * @return {array} [ { id, value } ]\n    *         an array that is compatible with the webix.list\n    *         widget.\n    */\n   getFieldList(excludeSelected) {\n      var sort_form = $$(this.ids.form),\n         listFields = [];\n\n      var allFields = this.CurrentObject.fields();\n      if (allFields.length == 0) return listFields;\n\n      // Get all fields include hidden fields\n      allFields.forEach((f) => {\n         if (f.fieldIsSortable()) {\n            listFields.push({\n               id: f.id,\n               value: f.label,\n            });\n         }\n      });\n\n      // Remove selected field\n      if (excludeSelected) {\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var selectedValue = cView.getChildViews()[0].getValue();\n               if (selectedValue) {\n                  listFields = listFields.filter((f) => f.id != selectedValue);\n               }\n            });\n         }\n      }\n      return listFields;\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object\n    * @param {ABObject} object  the currently selected object.\n    */\n   objectLoad(object) {\n      this.CurrentObject = object;\n   }\n\n   /**\n    * @method setSettings\n    * Initialize the form with a set of conditions.\n    * @param {Array} settings\n    *        The default settings for this form.\n    *        [\n    *           {\n    *              key: uuid,     // ABField.id\n    *              dir: string,   // 'asc' or 'desc'\n    *           }\n    *        ]\n    */\n   setSettings(settings) {\n      this._settings = this.AB.cloneDeep(settings);\n   }\n\n   /**\n    * @method getSettings\n    * return the current sort settings stored by this form.\n    * @return {Array} -\n    *         [\n    *            {\n    *               key: uuid,     // ABField.id\n    *               dir: string,   // 'asc' or 'desc'\n    *            }\n    *         ]\n    */\n   getSettings() {\n      var sort_form = $$(this.ids.form),\n         sortFields = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue();\n            var dir = cView.getChildViews()[1].getValue();\n            sortFields.push({\n               key: fieldId,\n               dir: dir,\n            });\n         });\n      }\n      return sortFields;\n   }\n\n   /**\n    * @method onChangeCombo()\n    * Update the display once they have chosen a field to sort by.\n    * We now need to offer the appropriate sort direction chooser.\n    * @param {string} fieldID\n    *        The value of the combo box now.\n    * @param {webix.$view} el\n    *        The current Webix.$view that was the combo box that just\n    *        changed.\n    */\n   onChangeCombo(fieldID, el) {\n      var allFields = this.CurrentObject.fields();\n      var chosenField = null,\n         sortDir = el.getParentView().getChildViews()[1],\n         // isMultiLingual = el.getParentView().getChildViews()[2],\n         // isMulti = 0,\n         options = null;\n\n      chosenField = allFields.find((f) => f.id == fieldID);\n      if (!chosenField) return;\n\n      switch (chosenField.key) {\n         case \"date\":\n            options = [\n               { id: \"asc\", value: L(\"Before -> After\") },\n               { id: \"desc\", value: L(\"After -> Before\") },\n            ];\n            break;\n         case \"number\":\n            options = [\n               { id: \"asc\", value: L(\"1 -> 9\") },\n               { id: \"desc\", value: L(\"9 -> 1\") },\n            ];\n            break;\n         case \"string\":\n         default:\n            options = [\n               { id: \"asc\", value: L(\"A -> Z\") },\n               { id: \"desc\", value: L(\"Z -> A\") },\n            ];\n            break;\n      }\n\n      sortDir.define(\"options\", options);\n      sortDir.refresh();\n\n      // if (columnConfig.settings.supportMultilingual)\n      //    isMulti = columnConfig.settings.supportMultilingual;\n\n      // isMultiLingual.setValue(isMulti);\n\n      this.refreshFieldList();\n      this.triggerOnChange();\n   }\n\n   /**\n    * @function onShow\n    * Rebuild the form when an onShow() is called.\n    */\n   onShow(view, options) {\n      var sort_form = $$(this.ids.form);\n\n      // clear field options in the form\n      webix.ui(this.uiForm(), sort_form);\n\n      var sorts = this._settings;\n      if (sorts && sorts.forEach) {\n         sorts.forEach((s) => {\n            this.clickAddNewSort(s.key, s.dir);\n         });\n      }\n\n      if (sorts == null || sorts.length == 0) {\n         this.clickAddNewSort();\n      }\n      $$(this.ids.component).show(view, options);\n   }\n\n   /**\n    * @method refreshFieldList\n    * return an updated field list so you cannot duplicate a sort\n    * @param {bool} ignoreRemoveViews\n    *\n    */\n   refreshFieldList(ignoreRemoveViews) {\n      var sort_form = $$(this.ids.form),\n         listFields = this.getFieldList(false),\n         selectedFields = [],\n         removeChildViews = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n               fieldObj = listFields.find((f) => f.id == fieldId);\n\n            if (fieldObj) {\n               // Add selected field to list\n               selectedFields.push(fieldObj);\n            } else {\n               // Add condition to remove\n               removeChildViews.push(cView);\n            }\n         });\n      }\n\n      // Remove filter conditions when column is deleted\n      if (!ignoreRemoveViews) {\n         removeChildViews.forEach(function (cView) {\n            sort_form.removeView(cView);\n         });\n      }\n\n      // Field list should not duplicate field items\n      childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n               fieldObj = listFields.filter(function (f) {\n                  return f.id == fieldId;\n               });\n\n            // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n            var selectedFieldsExcludeCurField = selectedFields.filter(function (\n               x\n            ) {\n               if (Array.isArray(fieldObj) && fieldObj.indexOf(x) !== -1) {\n                  return false;\n               }\n               return true;\n            });\n\n            // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n            var enableFields = listFields.filter(function (x) {\n               if (\n                  Array.isArray(selectedFieldsExcludeCurField) &&\n                  selectedFieldsExcludeCurField.indexOf(x) !== -1\n               ) {\n                  return false;\n               }\n               return true;\n            });\n\n            // Update field list\n            cView.getChildViews()[0].define(\"options\", enableFields);\n            cView.getChildViews()[0].refresh();\n         });\n      }\n   }\n\n   /**\n    * @function triggerOnChange\n    * This parses the sort form to build in order the sorts then saves to the application object workspace\n    */\n   triggerOnChange() {\n      // block .onChange callback\n      if (this._blockOnChange) return;\n\n      this._settings = this.getSettings();\n\n      this.emit(\"changed\", this._settings);\n   }\n\n   blockOnChange() {\n      this._blockOnChange = true;\n   }\n\n   unblockOnChange() {\n      this._blockOnChange = false;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {uuid} fieldId\n    *        the ABField.id we want to prefill the sort with\n    * @param {json} options\n    *        Additional webix.show() options parameters.\n    */\n   show($view, fieldId, options) {\n      this.blockOnChange();\n\n      this.onShow($view, options || null);\n\n      if (fieldId) {\n         this.clickAddNewSort(fieldId);\n      }\n\n      this.unblockOnChange();\n   }\n\n   /**\n    * @function sort()\n    * client sort data in list\n    *\n    * @param {Object} a\n    * @param {Object} b\n    */\n   sort(a, b) {\n      let result = 0;\n\n      const childViews = $$(this.ids.form).getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index || result != 0) return;\n\n            const fieldId = cView.getChildViews()[0].getValue();\n            const dir = cView.getChildViews()[1].getValue();\n\n            const field = this.CurrentObject.fieldByID(fieldId);\n            if (!field) return;\n\n            const by = field.columnName; // column name\n\n            let aValue = a[by],\n               bValue = b[by];\n\n            if (Array.isArray(aValue)) {\n               aValue = (aValue || [])\n                  .map(function (item) {\n                     return item.text || item;\n                  })\n                  .join(\" \");\n            }\n\n            if (Array.isArray(bValue)) {\n               bValue = (bValue ?? [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (aValue != bValue) {\n               if (dir == \"asc\") {\n                  result = aValue > bValue ? 1 : -1;\n               } else {\n                  result = aValue < bValue ? 1 : -1;\n               }\n            }\n         });\n      }\n\n      return result;\n   }\n}\n","const ABViewImageCore = require(\"../../core/views/ABViewImageCore\");\nconst ABViewImageComponent = require(\"./viewComponent/ABViewImageComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewImage extends ABViewImageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewImageComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.filename) {\n         this.warningsMessage(`has no image set`);\n      }\n   }\n};\n","const ABViewKanbanCore = require(\"../../core/views/ABViewKanbanCore\");\nconst ABViewKanbanComponent = require(\"./viewComponent/ABViewKanbanComponent\");\n\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewKanban extends ABViewKanbanCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n\n   component() {\n      return new ABViewKanbanComponent(this);\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewKanbanFormSidePanel\n *\n * Provide a form area for editing data in the Kan Ban view.\n *\n */\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\nconst ABViewForm = require(\"./ABViewForm\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\n\nvar L = null;\n// multilingual Label fn()\n\nmodule.exports = class ABWorkObjectKanBan extends ABViewComponent {\n   constructor(comKanBan, idBase, editFields) {\n      idBase = idBase || `${comKanBan.view?.id}_formSidePanel`;\n      super(idBase, {\n         form: \"\",\n      });\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n\n      this.AB = comKanBan.AB;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.editFields = editFields;\n      // {array}\n      // An array of {ABField.id} that determines which fields should show up\n      // in the editor.\n\n      this._mockApp = this.AB.applicationNew({});\n      // {ABApplication}\n      // Any ABViews we create are expected to be in relation to\n      // an ABApplication, so we create a \"mock\" app for our\n      // workspace views to use to display.\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         id: ids.component,\n         width: 300,\n         hidden: true,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Edit Record\"),\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     align: \"right\",\n                     click: (/* id */) => {\n                        this.hide();\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"scrollview\",\n               body: {\n                  rows: [\n                     {\n                        id: ids.form,\n                        view: \"form\",\n                        borderless: true,\n                        rows: [],\n                     },\n                  ],\n               },\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   hide() {\n      $$(this.ids.component)?.hide();\n\n      this.emit(\"close\");\n   }\n\n   show(data) {\n      $$(this.ids.component)?.show();\n\n      this.refreshForm(data);\n   }\n\n   isVisible() {\n      return $$(this.ids.component)?.isVisible() ?? false;\n   }\n\n   refreshForm(data) {\n      var ids = this.ids;\n      let $formView = $$(ids.form);\n      let CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject || !$formView) return;\n\n      data = data || {};\n\n      let formAttrs = {\n         id: `${this.ids.component}_sideform`,\n         key: ABViewForm.common().key,\n         settings: {\n            columns: 1,\n            labelPosition: \"top\",\n            showLabel: 1,\n            clearOnLoad: 0,\n            clearOnSave: 0,\n            labelWidth: 120,\n            height: 0,\n         },\n      };\n\n      // let form = new ABViewForm(formAttrs, this._mockApp);\n      let form = this.AB.viewNewDetatched(formAttrs);\n\n      form.objectLoad(CurrentObject);\n\n      // Populate child elements\n      CurrentObject.fields().forEach((f, index) => {\n         // if this is one of our .editFields\n         if (!this.editFields || this.editFields.indexOf(f.id) > -1) {\n            form.addFieldToForm(f, index);\n         }\n      });\n\n      // add default button (Save button)\n      form._views.push(\n         new ABViewFormButton(\n            {\n               settings: {\n                  includeSave: true,\n                  includeCancel: false,\n                  includeReset: false,\n               },\n               position: {\n                  y: CurrentObject.fields().length, // yPosition\n               },\n            },\n            this._mockApp,\n            form\n         )\n      );\n\n      // add temp id to views\n      form._views.forEach(\n         (v, index) => (v.id = `${form.id}_${v.key}_${index}`)\n      );\n\n      let formCom = form.component(this.AB._App);\n\n      // Rebuild form\n      webix.ui(formCom.ui().rows.concat({}), $formView);\n      webix.extend($formView, webix.ProgressBar);\n\n      formCom.init(\n         this.AB,\n         2,\n         {\n            onBeforeSaveData: () => {\n               // get update data\n               var formVals = form.getFormValues($formView, CurrentObject);\n\n               // validate data\n               if (!form.validateData($formView, CurrentObject, formVals))\n                  return false;\n\n               // show progress icon\n               $formView?.showProgress({ type: \"icon\" });\n\n               if (formVals.id) {\n                  CurrentObject.model()\n                     .update(formVals.id, formVals)\n                     .then((updateVals) => {\n                        this.emit(\"update\", updateVals);\n                        // _logic.callbacks.onUpdateData(updateVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():update(): Error updating value\",\n                           formVals,\n                        });\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n               // else add new row\n               else {\n                  CurrentObject.model()\n                     .create(formVals)\n                     .then((newVals) => {\n                        // _logic.callbacks.onAddData(newVals);\n                        this.emit(\"add\", newVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():.create(): Error creating value\",\n                           formVals,\n                        });\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n\n               return false;\n            },\n         },\n         2 /* NOTE: if you can see this KanBan, you should be able to see the side form? */\n      );\n\n      // display data\n      $formView.clear();\n      $formView.parse(data);\n\n      formCom.onShow(data);\n   }\n};\n","const ABViewLabelCore = require(\"../../core/views/ABViewLabelCore\");\nconst ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABViewLabel extends ABViewLabelCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLabelComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABViewLayoutCore = require(\"../../core/views/ABViewLayoutCore\");\nconst ABViewLayoutComponent = require(\"./viewComponent/ABViewLayoutComponent\");\n\nmodule.exports = class ABViewLayout extends ABViewLayoutCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLayoutComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (this._views.length == 0) {\n         this.warningsMessage(\"has no columns set.\");\n      }\n   }\n};\n","const ABViewListCore = require(\"../../core/views/ABViewListCore\");\nconst ABViewListComponent = require(\"./viewComponent/ABViewListComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewList extends ABViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewListComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewMenuCore = require(\"../../core/views/ABViewMenuCore\");\nconst ABViewMenuComponent = require(\"./viewComponent/ABViewMenuComponent\");\n\nmodule.exports = class ABViewMenu extends ABViewMenuCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewMenuComponent(this);\n   }\n};\n","const ABViewPDFImporterCore = require(\"../../core/views/ABViewPDFImporterCore\");\nconst ABViewPDFImporterComponent = require(\"./viewComponent/ABViewPDFImporterComponent\");\n\nmodule.exports = class ABViewPDFImporter extends ABViewPDFImporterCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPDFImporterComponent(this);\n   }\n};\n","const ABViewPageCore = require(\"../../core/views/ABViewPageCore\");\n\nconst ABPropertyComponentDefaults = ABViewPageCore.defaultValues();\n\nmodule.exports = class ABViewPage extends ABViewPageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var component = super.component();\n\n      component._ui = component.ui();\n\n      // wrap our ABViewContainer in our Page scrollview\n      component.ui = () => {\n         return {\n            view: \"scrollview\",\n            borderless: true,\n            css:\n               this.settings.pageBackground ||\n               ABPropertyComponentDefaults.pageBackground,\n            body: component._ui,\n         };\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               accessLevel = accessLevel ?? this.getUserAccess();\n               return newComponent.init(this.AB, accessLevel, options);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no sub views\");\n      }\n\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABViewPivotCore = require(\"../../core/views/ABViewPivotCore\");\nconst ABViewPivotComponent = require(\"./viewComponent/ABViewPivotComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPivot extends ABViewPivotCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPivotComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewReportsManagerCore = require(\"../../core/views/ABViewReportsManagerCore\");\nconst ABViewReportsManagerComponent = require(\"./viewComponent/ABViewReportsManagerComponent\");\n\nmodule.exports = class ABViewReportsManager extends ABViewReportsManagerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewReportsManagerComponent(this);\n   }\n};\n","const ABViewSchedulerCore = require(\"../../core/views/ABViewSchedulerCore\");\nconst ABViewSchedulerComponent = require(\"./viewComponent/ABViewSchedulerComponent\");\n\nmodule.exports = class ABViewScheduler extends ABViewSchedulerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewSchedulerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n   }\n};\n","const ABViewTabCore = require(\"../../core/views/ABViewTabCore\");\n\nconst ABViewTabComponent = require(\"./viewComponent/ABViewTabComponent\");\n\nmodule.exports = class ABViewTab extends ABViewTabCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTabComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no tabs set\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (this.views() || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","const ABViewTextCore = require(\"../../core/views/ABViewTextCore\");\n\nconst ABViewTextComponent = require(\"./viewComponent/ABViewTextComponent\");\n\nmodule.exports = class ABViewText extends ABViewTextCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(parentId) {\n      return new ABViewTextComponent(this, parentId);\n   }\n};\n","const ABViewWidgetCore = require(\"../../core/views/ABViewWidgetCore\");\n\nconst ABPropertyComponentDefaults = ABViewWidgetCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewWidget extends ABViewWidgetCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let base = super.component(App);\n\n      base.onShow = (viewId) => {\n         let dv = this.datacollection; // get from a function or a (get) property\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n      };\n\n      return base;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCSVExporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVExporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               buttonFilter: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.clientFilter = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            type: \"clean\",\n            borderless: true,\n            cols: [\n               {\n                  id: ids.buttonFilter,\n                  view: \"button\",\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"fa fa-filter\",\n                  borderless: true,\n                  width: 50,\n                  label: \"\",\n                  click: () => {\n                     this.showFilterPopup();\n                  },\n               },\n               {\n                  id: ids.button,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-download\",\n                  borderless: true,\n                  width: settings.width || defaultSettings.width,\n                  label: settings.buttonLabel ?? defaultSettings.buttonLabel,\n                  click: () => {\n                     this.downloadCsvFile();\n                  },\n               },\n               { fillspace: true },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      if (!this.clientFilter) {\n         const clientFilter = AB.filterComplexNew(this.ids.filterComplex);\n\n         const dc = this.datacollection;\n\n         if (dc) {\n            const obj = dc.datasource;\n\n            clientFilter.fieldsLoad(obj?.fields?.() ?? []);\n         }\n\n         clientFilter.init();\n         clientFilter.on(\"change\", (val) => {\n            this.onFilterChange(val);\n         });\n\n         this.clientFilter = clientFilter;\n      }\n   }\n\n   downloadCsvFile() {\n      let url = `/appbuilder/csv-export/${this.view.id}`;\n\n      const where = this.clientFilter.getValue();\n\n      if ((where?.rules || []).length) {\n         let qsWhere = JSON.stringify(where);\n\n         qsWhere = encodeURIComponent(qsWhere);\n         url = `${url}?where=${qsWhere}`;\n      }\n\n      window.open(url);\n   }\n\n   showFilterPopup() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      this.clientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n   }\n\n   onFilterChange() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      if (!$buttonFilter) return;\n\n      const where = this.clientFilter.getValue();\n\n      $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n      $buttonFilter.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst CSVImporter = require(\"../../CSVImporter\");\n\nmodule.exports = class ABViewCSVImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVImporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               popup: \"\",\n\n               form: \"\",\n               uploader: \"\",\n               uploadFileList: \"\",\n               separatedBy: \"\",\n               headerOnFirstLine: \"\",\n               columnList: \"\",\n\n               search: \"\",\n               datatable: \"\",\n\n               statusMessage: \"\",\n               progressBar: \"\",\n\n               linkedDataButton: \"\",\n               importButton: \"\",\n               rules: \"\",\n            },\n            ids\n         )\n      );\n\n      this.csvImporter = new CSVImporter((...args) => this.label(...args));\n      // {CSVImporter}\n      // An instance of the object that imports the CSV data.\n\n      this.validationError = false;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n   }\n\n   ui() {\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-upload\",\n                  label: this.label(\n                     settings.buttonLabel || defaultSettings.buttonLabel\n                  ),\n                  width: settings.width || defaultSettings.width,\n                  click: () => {\n                     this.showPopup();\n                  },\n               },\n               {\n                  fillspace: true,\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiConfig() {\n      const ids = this.ids;\n\n      return {\n         id: ids.form,\n         view: \"form\",\n         type: \"clean\",\n         borderless: true,\n         minWidth: 400,\n         gravity: 1,\n         elements: [\n            {\n               rows: [\n                  {\n                     id: ids.uploader,\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     css: \"webix_primary\",\n                     value: this.label(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           this._csvFileInfo = fileInfo;\n\n                           return this.loadCsvFile();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     padding: 10,\n                     rows: [\n                        {\n                           id: ids.separatedBy,\n                           view: \"richselect\",\n                           name: \"separatedBy\",\n                           label: this.label(\"Separated by\"),\n                           labelWidth: 140,\n                           options: this.csvImporter.getSeparateItems(),\n                           value: \",\",\n                           on: {\n                              onChange: () => {\n                                 this.loadCsvFile();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.headerOnFirstLine,\n                           view: \"checkbox\",\n                           name: \"headerOnFirstLine\",\n                           label: this.label(\"Header on first line\"),\n                           labelWidth: 140,\n                           disabled: true,\n                           value: true,\n                           on: {\n                              onChange: (/*newVal, oldVal*/) => {\n                                 this.populateColumnList();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           minHeight: 300,\n                           body: {\n                              padding: 10,\n                              id: ids.columnList,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiRecordsView() {\n      const ids = this.ids;\n\n      return {\n         gravity: 2,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"bg_gray\",\n               cols: [\n                  { width: 5 },\n                  {\n                     id: ids.search,\n                     view: \"search\",\n                     value: \"\",\n                     label: \"\",\n                     placeholder: this.label(\"Search records...\"),\n                     keyPressTimeout: 200,\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.search($$(ids.search).getValue());\n                        },\n                     },\n                  },\n                  { width: 2 },\n               ],\n            },\n            {\n               id: ids.datatable,\n               view: \"datatable\",\n               resizeColumn: true,\n               editable: true,\n               editaction: \"dblclick\",\n               css: \"ab-csv-importer\",\n               borderless: false,\n               tooltip: (obj) => {\n                  const tooltip = obj._errorMsg\n                     ? obj._errorMsg\n                     : \"No validation errors\";\n                  return tooltip;\n               },\n               minWidth: 650,\n               columns: [],\n               on: {\n                  onValidationError: (id, obj, details) => {\n                     // console.log(`item ${id} invalid`);\n                     let errors = \"\";\n\n                     Object.keys(details).forEach((key) => {\n                        this.$view.complexValidations[key].forEach((err) => {\n                           errors += err.invalidMessage + \"</br>\";\n                        });\n                     });\n\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"invalid\",\n                        _errorMsg: errors,\n                     });\n                     $dt.unblockEvent();\n\n                     this.validationError = true;\n                  },\n                  onValidationSuccess: (id, obj, details) => {\n                     // console.log(`item ${id} valid`);\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"valid\",\n                        _errorMsg: \"\",\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = false;\n                  },\n                  onCheck: () => {\n                     const selected = $$(ids.datatable).find({\n                        _included: true,\n                     });\n                     const $importButton = $$(ids.importButton);\n\n                     $importButton.setValue(this.labelImport(selected));\n\n                     if (this.overLimitAlert(selected)) $importButton.disable();\n                     else $importButton.enable();\n                  },\n               },\n            },\n            {\n               id: ids.progressBar,\n               height: 6,\n            },\n            {\n               cols: [\n                  {\n                     id: ids.linkedDataButton,\n                     view: \"button\",\n                     label: this.label(\"Linked Data\"),\n                     type: \"icon\",\n                     icon: \"fa fa-info\",\n                     maxWidth: 180,\n                     click: () => {\n                        this.showLinkedData();\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     name: \"import\",\n                     id: ids.importButton,\n                     label: this.label(\"Import\"),\n                     css: \"webix_primary\",\n                     disabled: true,\n                     type: \"icon\",\n                     icon: \"fa fa-upload\",\n                     click: () => {\n                        this.import();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n\n      return {\n         id: ids.popup,\n         view: \"window\",\n         hidden: true,\n         position: \"center\",\n         modal: true,\n         resize: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"label\",\n                  label: this.label(\"CSV Importer\"),\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  type: \"line\",\n                  cols: [\n                     this.uiConfig(),\n                     { width: 20 },\n                     this.uiRecordsView(),\n                     { width: 1 },\n                  ],\n               },\n               {\n                  id: ids.statusMessage,\n                  view: \"label\",\n                  align: \"right\",\n                  hidden: true,\n               },\n               {\n                  hidden: true,\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: this.label(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     /*,\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: labels.component.import,\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              _logic.import();\n                           }\n                        }*/\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      // Populate values to rules\n\n      const dc = this.datacollection;\n\n      if (dc) this.objectLoad(dc.datasource);\n\n      const abWebix = AB.Webix;\n\n      abWebix.ui(this.uiPopup());\n\n      const $form = $$(ids.form);\n\n      if ($form) abWebix.extend($form, abWebix.ProgressBar);\n\n      const $progressBar = $$(ids.progressBar);\n\n      if ($progressBar) abWebix.extend($progressBar, abWebix.ProgressBar);\n   }\n\n   showPopup() {\n      const ids = this.ids;\n\n      $$(ids.popup)?.show();\n\n      this.formClear();\n\n      // open file dialog to upload\n      $$(ids.uploader).fileDialog();\n   }\n\n   hide() {\n      $$(this.ids.popup)?.hide();\n   }\n\n   formClear() {\n      const ids = this.ids;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n\n      const $form = $$(ids.form);\n\n      $form.clearValidation();\n      $form.clear();\n\n      $$(ids.separatedBy).setValue(\",\");\n\n      this.AB.Webix.ui([], $$(ids.columnList));\n\n      $$(ids.headerOnFirstLine).disable();\n      $$(ids.importButton).disable();\n\n      $$(ids.search).setValue(\"\");\n      $$(ids.uploadFileList).clearAll();\n      $$(ids.datatable).clearAll();\n\n      const $statusMessage = $$(ids.statusMessage);\n\n      $statusMessage.setValue(\"\");\n      $statusMessage.hide();\n   }\n\n   search(searchText) {\n      const $datatable = $$(this.ids.datatable);\n\n      if (!$datatable) return;\n\n      searchText = (searchText || \"\").toLowerCase();\n\n      const matchFields = this.getMatchFields();\n\n      $datatable.filter((row) => {\n         let exists = false;\n\n         (matchFields || []).forEach((f) => {\n            if (exists) return;\n\n            exists =\n               (row[`${f.columnIndex}`] || \"\")\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(searchText) > -1;\n         });\n\n         return exists;\n      });\n   }\n\n   statusTemplate(item) {\n      let template = \"\";\n\n      if (!item) return template;\n\n      switch (item._status) {\n         case \"in-progress\":\n            template = \"<span class='fa fa-refresh'></span>\";\n            break;\n         case \"invalid\":\n            template = \"<span class='fa fa-exclamation-triangle'></span>\";\n            break;\n         case \"valid\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"done\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"fail\":\n            template = \"<span class='fa fa-remove'></span>\";\n            break;\n      }\n\n      return template;\n   }\n\n   async loadCsvFile() {\n      const _csvFileInfo = this._csvFileInfo;\n\n      if (!_csvFileInfo) return false;\n\n      const csvImporter = this.csvImporter;\n\n      if (!csvImporter.validateFile(_csvFileInfo)) {\n         this.AB.Webix.alert({\n            title: this.label(\"This file extension is not allowed\"),\n            text: this.label(\"Please only upload CSV files\"),\n            ok: this.label(\"Ok\"),\n         });\n\n         return false;\n      }\n\n      const ids = this.ids;\n\n      // show loading cursor\n      const $form = $$(ids.form);\n\n      $form?.showProgress?.({ type: \"icon\" });\n\n      // read CSV file\n      const $headerOnFirstLine = $$(ids.headerOnFirstLine);\n      const $importButton = $$(ids.importButton);\n\n      $headerOnFirstLine.enable();\n      $importButton.enable();\n\n      this._dataRows = await csvImporter.getDataRows(\n         _csvFileInfo,\n         $$(ids.separatedBy).getValue()\n      );\n\n      const _dataRows = this._dataRows;\n\n      let length = _dataRows.length;\n\n      if ($headerOnFirstLine.getValue()) length = _dataRows.length - 1;\n\n      $importButton.setValue(this.labelImport(length));\n      this.populateColumnList();\n      $form?.hideProgress?.();\n\n      return true;\n   }\n\n   removeCsvFile(fileId) {\n      $$(this.ids.uploadFileList).remove(fileId);\n      this.formClear();\n\n      return true;\n   }\n\n   populateColumnList() {\n      const self = this;\n      const ids = this.ids;\n      const abWebix = this.AB.Webix;\n\n      // clear list\n      const $columnList = $$(ids.columnList);\n\n      abWebix.ui([], $columnList);\n\n      const _dataRows = this._dataRows;\n\n      if (!_dataRows) return;\n\n      // check first line of CSV\n      const firstLine = _dataRows[0];\n\n      if (!firstLine) return;\n\n      const csvColumnList = [];\n      const fieldList = [];\n      const currentObject = this.CurrentObject;\n\n      if (currentObject)\n         fieldList.push(\n            ...currentObject.fields((f) => {\n               // available fields\n               if (\n                  this.settings.availableFieldIds?.length &&\n                  this.settings.availableFieldIds.indexOf(f.id) < 0\n               ) {\n                  return false;\n               }\n\n               // filter editable fields\n               const formComp = f.formComponent();\n\n               if (!formComp) return true;\n\n               const formConfig = formComp.common();\n\n               if (!formConfig) return true;\n\n               return formConfig.key != \"fieldreadonly\";\n            })\n         );\n\n      const csvImporter = this.csvImporter;\n\n      // check first line be header columns\n      if ($$(ids.headerOnFirstLine).getValue())\n         csvColumnList.push(\n            ...firstLine.map((colName, index) => {\n               return {\n                  id: index + 1, // webix .options list disallow value 0\n                  value: colName,\n                  key: csvImporter.getGuessDataType(_dataRows, index),\n               };\n            })\n         );\n      else\n         firstLine.forEach((e, i) => {\n            csvColumnList.push({\n               id: i + 1, // webix .options list disallow value 0\n               value: this.label(\"Column {0}\", [i + 1]),\n               key: csvImporter.getGuessDataType(_dataRows, i),\n            });\n         });\n\n      // Add unselect item\n      csvColumnList.unshift({\n         id: \"none\",\n         value: this.label(\"None\"),\n      });\n\n      // populate columns to UI\n      const uiColumns = [];\n      const selectedCsvCols = [];\n\n      fieldList.forEach((f) => {\n         // match up by data type\n         const matchCol = csvColumnList.filter(\n            (c) => c.key == f.key && selectedCsvCols.indexOf(c.id) < 0\n         )[0];\n\n         let selectVal = \"none\";\n\n         if (matchCol) {\n            selectVal = matchCol.id;\n\n            // cache\n            selectedCsvCols.push(selectVal);\n         }\n\n         let columnOptUI = {\n            view: \"richselect\",\n            gravity: 2,\n            options: csvColumnList,\n            fieldId: f.id,\n            abName: \"columnIndex\",\n            value: selectVal,\n            on: {\n               onChange: function () {\n                  self.toggleLinkFields(this);\n                  self.loadDataToGrid();\n               },\n            },\n         };\n\n         // Add date format options\n         if (f.key === \"date\") {\n            const dateSeparatorOptions = [\"/\", \"-\", \".\", \",\", \" \"];\n            const dayFormatOptions = [\n               { value: this.label(\"1 to 31\"), id: \"D\" },\n               { value: this.label(\"01 to 31\"), id: \"DD\" },\n            ];\n            const monthFormatOptions = [\n               { value: this.label(\"1 to 12\"), id: \"M\" },\n               { value: this.label(\"01 to 12\"), id: \"MM\" },\n            ];\n            const yearFormatOptions = [\n               { value: this.label(\"00 to 99\"), id: \"YY\" },\n               { value: this.label(\"2000 to 2099\"), id: \"YYYY\" },\n            ];\n            const dateOrderOptions = [\n               {\n                  value: this.label(\"D-M-Y\"),\n                  id: 1,\n               },\n               {\n                  value: this.label(\"M-D-Y\"),\n                  id: 2,\n               },\n               {\n                  value: this.label(\"Y-M-D\"),\n                  id: 3,\n               },\n               {\n                  value: this.label(\"Y-D-M\"),\n                  id: 4,\n               },\n            ];\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Separator\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"separator\",\n                     abName: \"columnDateFormat\",\n                     options: dateSeparatorOptions,\n                     value: \"/\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Day\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"day\",\n                     abName: \"columnDateFormat\",\n                     options: dayFormatOptions,\n                     value: \"D\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Month\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"month\",\n                     abName: \"columnDateFormat\",\n                     options: monthFormatOptions,\n                     value: \"M\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Year\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"year\",\n                     abName: \"columnDateFormat\",\n                     options: yearFormatOptions,\n                     value: \"YY\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Order\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"order\",\n                     abName: \"columnDateFormat\",\n                     options: dateOrderOptions,\n                     value: 1,\n                  },\n               ],\n            };\n         }\n\n         // Add connected field options\n         if (f.isConnection) {\n            let linkFieldOptions = [];\n\n            if (f.datasourceLink) {\n               linkFieldOptions = f.datasourceLink\n                  .fields((fld) => !fld.isConnection)\n                  .map((fld) => {\n                     return {\n                        id: fld.id,\n                        value: fld.label,\n                     };\n                  });\n            }\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: \"=\",\n                     labelWidth: 20,\n                     abName: \"columnLinkData\",\n                     hidden: true,\n                     options: linkFieldOptions,\n                     value: linkFieldOptions[0] ? linkFieldOptions[0].id : null,\n                  },\n               ],\n            };\n         }\n\n         uiColumns.push({\n            view: \"layout\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"template\",\n                  gravity: 1,\n                  borderless: true,\n                  css: { \"padding-top\": 10 },\n                  template: `<span class=\"fa fa-${f.icon}\"></span> ${f.label}`,\n               },\n               columnOptUI,\n            ],\n         });\n      });\n      abWebix.ui(uiColumns, $columnList);\n\n      this.loadDataToGrid();\n   }\n\n   toggleLinkFields($columnOption) {\n      if (!$columnOption) return;\n\n      const $optionPanel = $columnOption.getParentView();\n      const $linkFieldOption = $optionPanel.queryView(\n         { abName: \"columnLinkData\" },\n         \"all\"\n      )[0];\n\n      if (!$linkFieldOption) return;\n\n      if ($columnOption.getValue() === \"none\") $linkFieldOption.hide();\n      else $linkFieldOption.show();\n   }\n\n   overLimitAlert(data) {\n      const limit = 1000;\n\n      if (data.length > limit) {\n         // we only allow 1000 record imports\n         this.AB.Webix.alert({\n            title: this.label(\"Too many records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"Due to browser limitations we only allow imports of {0} records. Please upload a new CSV or deselect records to import.\",\n               [limit]\n            ),\n         });\n\n         return true;\n      }\n\n      return false;\n   }\n\n   loadDataToGrid() {\n      const ids = this.ids;\n      const $datatable = $$(ids.datatable);\n      const ab = this.AB;\n\n      if (!$datatable) return;\n\n      $datatable.clearAll();\n\n      // show loading cursor\n      $datatable.showProgress?.({ type: \"icon\" });\n\n      /** Prepare Columns */\n      const matchFields = this.getMatchFields();\n      const columns = [];\n\n      // add \"status\" column\n      columns.push({\n         id: \"_status\",\n         header: \"\",\n         template: this.statusTemplate,\n         width: 30,\n      });\n\n      // add \"checkbox\" column\n      columns.push({\n         id: \"_included\",\n         header: { content: \"masterCheckbox\" },\n         template: \"{common.checkbox()}\",\n         width: 30,\n      });\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      // populate columns\n      (matchFields || []).forEach((f) => {\n         let validationRules = f.field.settings.validationRules;\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (validationRules && typeof validationRules === \"string\")\n            validationRules = JSON.parse(validationRules);\n\n         if (validationRules?.length) {\n            const validationUI = [];\n\n            // there could be more than one so lets loop through and build the UI\n            validationRules.forEach((rule) => {\n               const Filter = ab.filterComplexNew(\n                  `${f.field.id}_${ab.Webix.uid()}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               validationUI.push(Filter.ui);\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.field.id,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n                  columnIndex: f.columnIndex,\n               });\n            });\n\n            // create a unique view id for popup\n            const popUpId = `${ids.rules}_${f.field.id}_${ab.Webix.uid()}`;\n\n            // store the popup ids so we can remove the later\n            rulePops.push(popUpId);\n            // add the popup to the UI but don't show it\n            ab.Webix.ui({\n               view: \"popup\",\n               css: \"ab-rules-popup\",\n               id: popUpId,\n               body: {\n                  rows: validationUI,\n               },\n            });\n         }\n\n         const editor = f.field?.key == \"number\" ? \"number\" : \"text\";\n\n         columns.push({\n            id: f.columnIndex,\n            header: f.field.label,\n            editor: editor,\n            template: (obj, common, value /*, col, ind */) =>\n               value.replace(/[<]/g, \"&lt;\"),\n            minWidth: 150,\n            fillspace: true,\n         });\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(App);\n            f.filter.fieldsLoad(this.CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $datatable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n               columnIndex: f.columnIndex,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $datatable.$view.complexValidations = complexValidations;\n\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n\n               $datatable.$view.complexValidations[key].forEach((filter) => {\n                  const rowValue = {};\n                  // use helper funtion to check if valid\n                  // map the column names to the index numbers of data\n                  // reformat data to display\n\n                  (matchFields || []).forEach((f) => {\n                     const record = data[f.columnIndex];\n\n                     if (\n                        f.field.key === \"date\" &&\n                        record.includes(\"Invalid date\")\n                     )\n                        isValid = false;\n\n                     rowValue[f.field.id] = record;\n                  });\n\n                  const ruleValid = filter.filters(rowValue);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     // this.AB.Webix.message({\n                     //    type: \"error\",\n                     //    text: invalidMessage\n                     // });\n                  }\n               });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $datatable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $datatable.config.rulePops = rulePops;\n         $datatable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($datatable.config.rulePops) {\n            $datatable.config.rulePops.forEach((popup) => {\n               const $popup = $$(popup);\n\n               if (!$popup) return;\n\n               $popup.destructor();\n            });\n         }\n\n         // remove any validation rules from the previous table\n         $datatable.define(\"rules\", {});\n         $datatable.refresh();\n      }\n\n      /** Prepare Data */\n      const parsedData = [];\n\n      (this._dataRows || []).forEach((row, index) => {\n         const rowValue = {\n            id: index + 1,\n         };\n\n         // reformat data to display\n         (matchFields || []).forEach((f) => {\n            const data = row[f.columnIndex - 1];\n\n            if (f.field.key === \"date\") {\n               // let dateFormat = moment(data, f.format).format(\n               //    \"YYYY-MM-DD\"\n               // );\n               // debugger;\n               let dateFormat = ab.rules.toDate(data, {\n                  format: f.format,\n               });\n               dateFormat = ab.rules.toDateFormat(dateFormat, {\n                  format: \"YYYY-MM-DD\",\n               });\n\n               if (dateFormat === \"Invalid date\")\n                  dateFormat = dateFormat + \" - \" + data;\n\n               rowValue[f.columnIndex] = dateFormat;\n            } else rowValue[f.columnIndex] = data; // array to object\n         });\n\n         // insert \"true\" value of checkbox\n         rowValue[\"_included\"] = true;\n\n         parsedData.push(rowValue);\n      });\n\n      // skip the first line\n      const isSkipFirstLine = $$(ids.headerOnFirstLine).getValue();\n\n      if (isSkipFirstLine && parsedData.length > 1) parsedData.shift();\n\n      const $importButton = $$(ids.importButton);\n\n      $importButton.setValue(this.labelImport(parsedData));\n      $datatable.refreshColumns(columns);\n      $datatable.parse(parsedData);\n\n      if (this.overLimitAlert(parsedData)) $importButton.disable();\n      else $importButton.enable();\n\n      // hide loading cursor\n      $datatable.hideProgress?.();\n   }\n\n   refreshRemainingTimeText(startUpdateTime, total, index) {\n      const ids = this.ids;\n\n      // Calculate remaining time\n      const spentTime = new Date() - startUpdateTime; // milliseconds that has passed since last completed record since start\n\n      const averageRenderTime = spentTime / index; // average milliseconds per single render at this point\n\n      const remainTime = averageRenderTime * (total - index);\n\n      let result = \"\";\n\n      // Convert milliseconds to a readable string\n      const days = (remainTime / 86400000).toFixed(0);\n      const hours = (remainTime / 3600000).toFixed(0);\n      const minutes = (remainTime / 60000).toFixed(0);\n      const seconds = (remainTime / 1000).toFixed(0);\n\n      if (seconds < 1) result = \"\";\n      else if (seconds < 60)\n         result = this.label(\"Approximately {0} second(s) remaining\", [\n            seconds,\n         ]);\n      // result = `Approximately ${seconds} second${\n      //    seconds > 1 ? \"s\" : \"\"\n      // }`;\n      else if (minutes == 1)\n         result = this.label(\"Approximately 1 minute {0} seconds remaining\", [\n            seconds - 60,\n         ]);\n      // result = `Approximately 1 minute ${seconds - 60} seconds`;\n      else if (minutes < 60)\n         result = this.label(\"Approximately {0} minutes remaining\", [minutes]);\n      else if (hours < 24)\n         result = this.label(\"Approximately {0} hour(s) remaining\", [hours]);\n      else result = this.label(\"Approximately {0} day(s) remaining\", [days]);\n\n      if (result) {\n         $$(ids.importButton)?.setValue(result);\n      } else {\n         const selected = $$(ids.datatable)?.find({ _included: true });\n         $$(ids.importButton)?.setValue(this.labelImport(selected));\n      }\n   }\n\n   /**\n    * @method getMatchFields\n    *\n    * @return {Object} - [\n    *                      {\n    *                         columnIndex: {number},\n    *                         field: {ABField},\n    *                         searchField: {ABField} [optional]\n    *                      },\n    *                      ...\n    *                    ]\n    */\n   getMatchFields() {\n      const result = [];\n      const ids = this.ids;\n\n      // get richselect components\n      const $selectorViews = $$(ids.columnList)\n         .queryView({ abName: \"columnIndex\" }, \"all\")\n         .filter((selector) => selector.getValue() != \"none\");\n\n      ($selectorViews || []).forEach(($selector) => {\n         const currentObject = this.CurrentObject;\n\n         if (!currentObject) return;\n\n         // webix .options list disallow value 0\n         const field = currentObject.fieldByID($selector.config.fieldId);\n\n         if (!field) return;\n\n         const colIndex = $selector.getValue();\n         const fieldData = {\n            columnIndex: colIndex,\n            field: field,\n         };\n\n         if (field.key === \"date\") {\n            const $optionPanel = $selector.getParentView();\n            const $dateFormatSelectors = $optionPanel.queryView(\n               { abName: \"columnDateFormat\" },\n               \"all\"\n            );\n\n            // define the column to compare data to search .id\n            if ($dateFormatSelectors) {\n               $dateFormatSelectors.forEach((selector) => {\n                  fieldData[selector.config.name] = selector.getValue();\n               });\n\n               // convert all dates into mysql date format YYYY-DD-MM\n               let format;\n\n               switch (fieldData.order) {\n                  case \"1\":\n                     format =\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"2\":\n                     format =\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"3\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day;\n                     break;\n                  case \"4\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month;\n               }\n\n               fieldData.format = format;\n            }\n         }\n\n         if (field.isConnection) {\n            const $optionPanel = $selector.getParentView();\n            const $linkDataSelector = $optionPanel.queryView(\n               { abName: \"columnLinkData\" },\n               \"all\"\n            )[0];\n\n            // define the column to compare data to search .id\n            if ($linkDataSelector) {\n               const searchField = field.datasourceLink.fieldByID(\n                  $linkDataSelector.getValue()\n               );\n\n               fieldData.searchField = searchField;\n            }\n         }\n\n         result.push(fieldData);\n      });\n\n      return result;\n   }\n\n   labelImport(selected) {\n      let length = selected;\n\n      if (Array.isArray(selected)) length = selected.length;\n\n      return this.label(\"Import {0} Records\", [length]);\n   }\n\n   /**\n    * @method import\n    *\n    * @return {Promise}\n    */\n   async import() {\n      // if (dv == null) return Promise.resolve();\n\n      // // get ABObject\n      // let obj = dv.datasource;\n\n      // Make sure we are connected to an Object\n      const currentObject = this.CurrentObject;\n\n      if (!currentObject) return;\n\n      // get ABModel\n      // let model = dv.model;\n      // if (model == null) return Promise.resolve();\n\n      const ids = this.ids;\n      const $importButton = $$(ids.importButton);\n\n      $importButton.disable();\n\n      // Show loading cursor\n      const $form = $$(ids.form);\n      const $progressBar = $$(ids.progressBar);\n\n      $form.showProgress({ type: \"icon\" });\n      $progressBar.showProgress({\n         type: \"top\",\n         position: 0.0001,\n      });\n\n      // get richselect components\n      const matchFields = this.getMatchFields();\n\n      // Get object's model\n      const objModel = currentObject.model();\n      const $datatable = $$(ids.datatable);\n      const selectedRows = $datatable.find({ _included: true });\n\n      let _currProgress = 0;\n\n      const increaseProgressing = () => {\n         _currProgress += 1;\n         $progressBar.showProgress({\n            type: \"bottom\",\n            position: _currProgress / selectedRows.length,\n         });\n      };\n      const itemFailed = (itemId, errMessage) => {\n         if ($datatable) {\n            // set \"fail\" status\n            $datatable.addRowCss(itemId, \"row-fail\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"fail\",\n               _errorMsg: errMessage,\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n\n         console.error(errMessage);\n      };\n      const abWebix = this.AB.Webix;\n      const itemInvalid = (itemId, errors = []) => {\n         if ($datatable) {\n            // combine all error messages to display in tooltip\n            const errorMsg = [];\n            // mark which column are invalid\n            errors.forEach((err) => {\n               if (!err?.name) return;\n\n               const fieldInfo = matchFields.filter(\n                  (f) => f.field && f.field.columnName == err.name\n               )[0];\n\n               errorMsg.push(err.name + \": \" + err.message);\n               // we also need to define an error message\n               // abWebix.message({\n               //    type: \"error\",\n               //    text: err.name + \": \" + err.message\n               // });\n            });\n\n            // set \"fail\" status\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"invalid\",\n               _errorMsg: errorMsg.join(\"</br>\"),\n            });\n            $datatable.unblockEvent();\n            $datatable.addRowCss(itemId, \"webix_invalid\");\n         }\n         // increaseProgressing();\n      };\n      const itemPass = (itemId) => {\n         if ($datatable) {\n            // set \"done\" status\n            $datatable.removeRowCss(itemId, \"row-fail\");\n            $datatable.addRowCss(itemId, \"row-pass\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"done\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n      };\n      const itemValid = (itemId) => {\n         if ($datatable) {\n            // mark all columns valid (just in case they were invalid before)\n            // matchFields.forEach((f) => {\n            //    $datatable.removeCellCss(\n            //       itemId,\n            //       f.columnIndex,\n            //       \"webix_invalid_cell\"\n            //    );\n            // });\n            // highlight the row\n            $datatable.removeRowCss(itemId, \"webix_invalid\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n            // $datatable.addRowCss(itemId, \"row-pass\");\n         }\n      };\n      const $statusMessage = $$(ids.statusMessage);\n      const uiCleanUp = () => {\n         // To Do anyUI updates\n         // console.log(\"ui clean up now\");\n         $importButton.enable();\n\n         // Hide loading cursor\n         $form.hideProgress();\n         $progressBar.hideProgress();\n\n         $statusMessage.setValue(\"\");\n         $statusMessage.hide();\n\n         const selected = $datatable.find({ _included: true });\n\n         $importButton.setValue(this.labelImport(selected));\n         this.emit(\"done\");\n      };\n\n      const validRows = [];\n\n      let allValid = true;\n\n      // Pre Check Validations of whole CSV import\n      // update row to green if valid\n      // update row to red if !valid\n      (selectedRows || []).forEach((data, index) => {\n         const newRowData = this.getParentValues();\n\n         matchFields.forEach((f) => {\n            if (!f.field?.key) return;\n\n            switch (f.field.key) {\n               // case \"connectObject\":\n               //    // skip\n               //    break;\n               case \"number\":\n                  if (typeof data[f.columnIndex] !== \"number\") {\n                     newRowData[f.field.columnName] = (\n                        data[f.columnIndex] || \"\"\n                     ).replace(/[^-0-9.]/gi, \"\");\n\n                     break;\n                  }\n\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n\n               default:\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n            }\n         });\n\n         let isValid = false;\n         let errorMsg = \"\";\n\n         // first check legacy and server side validation\n         const validator = currentObject.isValidData(newRowData);\n\n         isValid = validator.pass();\n         errorMsg = validator.errors;\n\n         if (isValid)\n            // now check complex field validation rules\n            isValid = $datatable.validate(data.id);\n         else {\n            allValid = false;\n\n            itemInvalid(data.id, errorMsg);\n         }\n\n         if (isValid) {\n            itemValid(data.id);\n            validRows.push({ id: data.id, data: newRowData });\n         } else allValid = false;\n\n         // $datatable.unblockEvent();\n      });\n\n      if (!allValid) {\n         // To Do anyUI updates\n         // $importButton.enable();\n         //\n         // // Hide loading cursor\n         // $form.hideProgress();\n         // $progressBar.hideProgress();\n         // $statusMessage.setValue(\"\");\n         // $statusMessage.hide();\n         //\n         // // _logic.hide();\n         //\n         // if (_logic.callbacks && _logic.callbacks.onDone)\n         //    _logic.callbacks.onDone();\n         uiCleanUp();\n\n         abWebix.alert({\n            title: this.label(\"Invalid Data\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n            ),\n         });\n\n         return;\n      }\n\n      // if pass, then continue to process each row\n      // ?? : can we process in Parallel?\n      // ?? : implement hash Lookups for connected Fields\n      const hashLookups = {};\n      // {obj}  /*  { connectField.id : { 'searchWord' : \"uuid\"}}\n      // use this hash to reduce the # of lookups needed to fill in our\n      // connected entries\n\n      const connectedFields = matchFields.filter(\n         (f) => f && f.field?.isConnection && f.searchField\n      );\n\n      const throttledSize = 10;\n      let startUpdateTime;\n      let numDone = 0;\n\n      try {\n         // forEach connectedFields in csv\n         const allLookups = [];\n\n         (connectedFields || []).forEach((f) => {\n            const connectField = f.field;\n            // const searchWord = newRowData[f.columnIndex];\n            const connectObject = connectField.datasourceLink;\n\n            if (!connectObject) return;\n\n            const connectModel = connectObject.model();\n\n            if (!connectModel) return;\n\n            const linkIdKey = connectField.indexField\n               ? connectField.indexField.columnName\n               : connectField.object.PK();\n\n            // prepare default hash entry:\n            hashLookups[connectField.id] = {};\n\n            // load all values of connectedField entries\n            const gethashLookup = async () => {\n               try {\n                  const list = await connectModel.findAll({\n                     where: {}, // !!!\n                     populate: false,\n                  });\n                  const data = list.data || list;\n\n                  (data || []).forEach((row) => {\n                     // store in hash[field.id] = { 'searchKey' : \"uuid\" }\n\n                     hashLookups[connectField.id][\n                        row[f.searchField.columnName]\n                     ] = row[linkIdKey];\n                  });\n               } catch (err) {\n                  console.error(err);\n               }\n            };\n\n            allLookups.push(gethashLookup());\n         });\n\n         await Promise.all(allLookups);\n\n         // forEach validRow\n         validRows.forEach((data) => {\n            const newRowData = data.data;\n\n            // update the datagrid row to in-progress\n            $datatable.blockEvent();\n            $datatable.updateItem(data.id, {\n               _status: \"in-progress\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n\n            // forEach ConnectedField\n            (connectedFields || []).forEach((f) => {\n               // find newRowData[field.columnName] = { field.PK : hash[field.id][searchWord] }\n               const connectField = f.field;\n               const linkIdKey = connectField.indexField\n                  ? connectField.indexField.columnName\n                  : connectField.object.PK();\n               const uuid =\n                  hashLookups[connectField.id][\n                  newRowData[connectField.columnName]\n                  ];\n\n               if (!uuid) {\n                  itemInvalid(data.id, [{ name: connectField.columnName }]);\n                  allValid = false;\n               }\n\n               newRowData[connectField.columnName] = {};\n               newRowData[connectField.columnName][linkIdKey] = uuid;\n            });\n         });\n\n         if (!allValid) {\n            abWebix.alert({\n               title: this.label(\"Invalid Data\"),\n               ok: this.label(\"Ok\"),\n               text: this.label(\n                  \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n               ),\n            });\n            uiCleanUp();\n\n            return;\n         }\n\n         // NOTE: Parallel exectuion of all these:\n         const allSaves = [];\n         const createRecord = (objModel, newRowsData, element, total) =>\n            new Promise((resolve, reject) => {\n               element.doRecordRulesPre(newRowsData);\n\n               const processResult = async () => {\n                  try {\n                     const result = await objModel.batchCreate({\n                        batch: newRowsData,\n                     });\n                     const resultErrors = result.errors;\n\n                     // Show errors of each row\n                     Object.keys(resultErrors).forEach((rowIndex) => {\n                        const error = resultErrors[rowIndex];\n\n                        if (error) {\n                           itemFailed(\n                              rowIndex,\n                              error.message || error.sqlMessage || error\n                           );\n                        }\n                     });\n\n                     const resultData = result.data;\n                     const penddingRecordRules = [];\n\n                     Object.keys(resultData).forEach((rowIndex) => {\n                        penddingRecordRules.push(\n                           new Promise((resolve, reject) => {\n                              // Process Record Rule\n                              const processRowData = async () => {\n                                 try {\n                                    await element.doRecordRules(\n                                       resultData[rowIndex]\n                                    );\n\n                                    itemPass(rowIndex);\n                                    resolve();\n                                 } catch (err) {\n                                    itemFailed(rowIndex, err);\n                                    reject(\"that didn't work\");\n                                 }\n                              };\n\n                              processRowData();\n                           })\n                        );\n                     });\n\n                     const waitPenddingRecordRules = async () => {\n                        try {\n                           await Promise.all(penddingRecordRules);\n\n                           newRowsData.forEach((row) => {\n                              // itemPass(row.id);\n                              numDone++;\n                              if (numDone % throttledSize == 0) {\n                                 this.refreshRemainingTimeText(\n                                    startUpdateTime,\n                                    validRows.length,\n                                    numDone\n                                 );\n                              }\n                           });\n\n                           if (numDone === total) {\n                              uiCleanUp();\n                              $importButton.disable();\n                           }\n\n                           resolve();\n                        } catch (err) {\n                           // newRowsData.forEach((row) => {\n                           //    itemFailed(row.id, err);\n                           // });\n                           // throw err;\n                           reject(err);\n                        }\n                     };\n\n                     await waitPenddingRecordRules();\n                  } catch (err) {\n                     console.error(err);\n                     reject(err);\n                  }\n               };\n\n               processResult();\n            });\n\n         validRows.forEach((data) => {\n            allSaves.push({ id: data.id, data: data.data });\n         });\n\n         // we are going to store these promises in an array of\n         // arrays with 50 in each sub array\n         const throttledSaves = [];\n         const total = allSaves.length;\n\n         let index = 0;\n\n         while (allSaves.length) {\n            throttledSaves[index] = allSaves.splice(0, throttledSize);\n\n            index++;\n         }\n\n         // execute the array of array of 100 promises one at at time\n         const performThrottledSaves = (\n            currentRecords,\n            remainingRecords,\n            importer,\n            total\n         ) =>\n            new Promise((resolve, reject) => {\n               // execute the next 100\n               // const requests = currentRecords.map((data) => {\n               //    return createRecord(\n               //       objModel,\n               //       data.record,\n               //       data.data,\n               //       importer\n               //    );\n               // });\n\n               const processRequest = async () => {\n                  try {\n                     await createRecord(\n                        objModel,\n                        currentRecords,\n                        importer,\n                        total\n                     );\n\n                     // when done get the next 10\n                     const nextRecords = remainingRecords.shift();\n\n                     // if there are any remaining in the group call performThrottledSaves\n                     if (nextRecords?.length) {\n                        await performThrottledSaves(\n                           nextRecords,\n                           remainingRecords,\n                           importer,\n                           total\n                        );\n                     } else {\n                        // uiCleanUp();\n                        resolve();\n                     }\n                  } catch (err) {\n                     // Handle errors here\n                     reject(err);\n                  }\n               };\n\n               processRequest();\n            });\n\n         // now we are going to processes these new containers one at a time\n         // $datatable.blockEvent();\n         // this is when the real work starts so lets begin our countdown timer now\n         startUpdateTime = new Date();\n         // get the first group of Promises out of the collection\n         const next = throttledSaves.shift();\n\n         // execute our Promise iterator\n         await performThrottledSaves(next, throttledSaves, this.view, total);\n      } catch (err) {\n         // resolve Error UI\n         abWebix.alert({\n            title: this.label(\"Error Creating Records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\"One or more records failed upon creation.\"),\n         });\n         // $datatable.unblockEvent();\n         uiCleanUp();\n         console.error(err);\n      }\n   }\n\n   // Display linked data\n   uiLinkedData() {\n      const dcLink = this.datacollection?.datacollectionLink;\n      const linkedData = dcLink?.getCursor();\n      if (!linkedData) return;\n\n      return {\n         view: \"window\",\n         modal: true,\n         resize: false,\n         head: {\n            view: \"toolbar\",\n            cols: [\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hideLinkedData();\n                  },\n               },\n            ],\n         },\n         body: {\n            view: \"property\",\n            id: \"sets\",\n            editable: false,\n            width: 400,\n            height: 200,\n            elements: [\n               { label: this.label(\"Linked Data\"), type: \"label\" },\n               {\n                  label: \"ID\",\n                  type: \"text\",\n                  value: linkedData.uuid ?? linkedData.id,\n               },\n               {\n                  label: \"Label\",\n                  type: \"text\",\n                  value: dcLink.datasource.displayData(linkedData),\n               },\n            ],\n         },\n      };\n   }\n\n   showLinkedData() {\n      const ui = this.uiLinkedData();\n      this._info_popup = this.AB.Webix.ui(ui);\n      this._info_popup.show($$(this.ids.linkedDataButton).$view, {\n         pos: \"top\",\n      });\n   }\n\n   hideLinkedData() {\n      this._info_popup?.hide();\n   }\n\n   getParentValues() {\n      const result = {};\n\n      // get ABDatacollection\n      const dc = this.datacollection;\n      const currentObject = this.CurrentObject;\n\n      // Set parent's data collection cursor\n      const dcLink = dc?.datacollectionLink;\n      const linkConnectFields = [];\n\n      let objectLink;\n      let linkValues;\n\n      if (dcLink?.getCursor()) {\n         objectLink = dcLink.datasource;\n\n         linkConnectFields.push(\n            ...currentObject.fields(\n               (f) => f.isConnection && f.settings.linkObject === objectLink.id\n            )\n         );\n\n         linkValues = dcLink.getCursor();\n      }\n\n      // Set parent's data collection cursor\n      if (objectLink && linkConnectFields.length && linkValues) {\n         linkConnectFields.forEach((f) => {\n            const linkColName = f.indexField\n               ? f.indexField.columnName\n               : objectLink.PK();\n\n            result[f.columnName] = result[f.columnName] ?? {};\n            result[f.columnName][linkColName] =\n               linkValues[linkColName] ?? linkValues.id;\n         });\n      }\n\n      return result;\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartAreaComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartArea_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.areaType,\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         series: [\n            {\n               alpha: 0.7,\n               value: \"#value#\",\n               color: \"#ee4339\",\n            },\n            {\n               alpha: 0.4,\n               value: \"#value2#\",\n               color: \"#a7ee70\",\n            },\n         ],\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartBarComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartBar_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.barType,\n         preset: settings.barPreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend:\n            settings.barType === \"bar\" || !settings.barType\n               ? settings.isLegend\n                  ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n                  : \"\"\n               : settings.isLegend\n               ? {\n                    template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                    values: [], // TODO : bug in webix 5.1.7\n                 }\n               : null,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewChartComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChart_${baseView.id}`, ids);\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $component = $$(this.ids.component);\n      const abWebix = this.AB.Webix;\n\n      if ($component) abWebix.extend($component, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const dc = this.datacollection;\n\n      if (dc) {\n         const eventNames = [\n            \"changeCursor\",\n            \"create\",\n            \"update\",\n            \"delete\",\n            \"initializedData\",\n         ];\n\n         if (\n            dc.datacollectionLink &&\n            !(\"changeCursor\" in (dc.datacollectionLink._events ?? []))\n         )\n            baseView.eventAdd({\n               emitter: dc.datacollectionLink,\n               eventName: \"changeCursor\",\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n\n         eventNames.forEach((evtName) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: evtName,\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n         });\n      }\n\n      baseView.refreshData();\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewChartContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewChartContainer_${baseView.id}`,\n         Object.assign(\n            {\n               chartContainer: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiChartComponent) {\n      const _ui = super.ui([\n         Object.assign({ id: this.ids.chartContainer }, uiChartComponent ?? {}),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n      // if (!this._isShow) {\n\n      // Mark this widget is showing\n      const baseView = this.view;\n\n      baseView._isShow = true;\n\n      this.refreshData(baseView.parent.getDCChart());\n      // }\n   }\n\n   refreshData(dcChart) {\n      const $chartContainer = $$(this.ids.chartContainer);\n      const $chartComponent = $$(this.ids.component);\n\n      if ($chartContainer?.data) $chartContainer.data.sync(dcChart);\n\n      setTimeout(() => {\n         $chartComponent?.adjust();\n         $chartContainer?.adjust();\n      }, 160);\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartLineComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartLine_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.lineType,\n         preset: settings.linePreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue,\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartPieComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartPie_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.pieType,\n         value: \"#value#\",\n         color: \"#color#\",\n         legend: settings.isLegend\n            ? {\n                 width: this.view.parent.settings.labelWidth,\n                 template: `<div style='font-size: ${settings.labelFontSize}px;'>#label#</div>`,\n              }\n            : null,\n         pieInnerText: `<div style='font-size: ${settings.innerFontSize}px;'>#value#</div>`,\n         shadow: 1,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCommentComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewComment_${baseView.id}`,\n         Object.assign(\n            {\n               comment: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const _ui = super.ui([\n         {\n            id: this.ids.comment,\n            view: \"comments\",\n            users: baseView.getUserData(),\n            currentUser: baseView.getCurrentUserId(),\n            height: this.settings.height,\n            data: this.getCommentData(),\n            on: {\n               onBeforeAdd: (id, obj, index) => {\n                  this.addComment(obj.text, new Date());\n               },\n               // NOTE: no update event of comment widget !!\n               // Updating event handles in .init function\n               // https://docs.webix.com/api__ui.comments_onbeforeeditstart_event.html#comment-4509366150\n\n               // onAfterEditStart: function (rowId) {\n               //    let item = this.getItem(rowId);\n\n               //    _logic.updateComment(rowId, item);\n               // },\n               onAfterDelete: (rowId) => {\n                  this.deleteComment(rowId);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      baseView.__dvEvents = baseView.__dvEvents || {};\n\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if ($comment) {\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) {\n            // Updating comment event\n            if (!baseView.__dvEvents.onStoreUpdated)\n               baseView.__dvEvents.onStoreUpdated =\n                  $commentList.data.attachEvent(\n                     \"onStoreUpdated\",\n                     (rowId, data, operate) => {\n                        if (operate === \"update\") {\n                           this.updateComment(rowId, (data || {}).text);\n                        }\n                     }\n                  );\n\n            // Implement progress bar\n            webix.extend($commentList, webix.ProgressBar);\n         }\n      }\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // bind dc to component\n      // dv.bind($$(ids.comment));\n\n      if (!baseView.__dvEvents.create)\n         baseView.__dvEvents.create = dv.on(\"create\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.update)\n         baseView.__dvEvents.update = dv.on(\"update\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.delete)\n         baseView.__dvEvents.delete = dv.on(\"delete\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.loadData)\n         baseView.__dvEvents.loadData = dv.on(\"loadData\", () =>\n            this.refreshComment()\n         );\n\n      $comment.refresh();\n   }\n\n   getCommentData() {\n      const baseView = this.view;\n      const dv = this.datacollection;\n\n      if (!dv) return null;\n\n      const userCol = baseView.getUserField();\n      const commentCol = baseView.getCommentField();\n      const dateCol = baseView.getDateField();\n\n      if (!userCol || !commentCol) return null;\n\n      const userColName = userCol.columnName;\n      const commentColName = commentCol.columnName;\n      const dateColName = dateCol ? dateCol.columnName : null;\n      const dataObject = dv.getData();\n      const dataList = [];\n\n      dataObject.forEach((item, index) => {\n         if (item[commentColName]) {\n            const user = baseView.getUserData().find((user) => {\n               return user.value === item[userColName];\n            });\n            const data = {\n               id: item.id,\n               user_id: user ? user.id : 0,\n               date: item[dateColName] ? new Date(item[dateColName]) : null,\n               default_date: new Date(item[\"created_at\"]),\n               text: item[commentColName],\n            };\n\n            dataList.push(data);\n         }\n      });\n\n      dataList.sort(function (a, b) {\n         if (dateColName)\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n         else\n            return (\n               new Date(a.default_date).getTime() -\n               new Date(b.default_date).getTime()\n            );\n      });\n\n      return dataList;\n   }\n\n   refreshComment() {\n      const baseView = this.view;\n\n      if (baseView.__refreshTimeout) clearTimeout(baseView.__refreshTimeout);\n\n      this.busy();\n\n      const ids = this.ids;\n\n      baseView.__refreshTimeout = setTimeout(() => {\n         const $comment = $$(ids.comment);\n\n         if (!$comment) return;\n\n         // clear comments\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) $commentList.clearAll();\n\n         // populate comments\n         const commentData = this.getCommentData();\n\n         if (commentData) {\n            $comment.parse(commentData);\n         }\n\n         // scroll to the last item\n         if ($commentList) $commentList.scrollTo(0, Number.MAX_SAFE_INTEGER);\n\n         delete baseView.__refreshTimeout;\n\n         this.ready();\n      }, 90);\n   }\n\n   addComment(commentText, dateTime) {\n      this.saveData(commentText, dateTime);\n   }\n\n   async updateComment(rowId, commentText) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return; // already notified\n\n      const commentField = baseView.getCommentField();\n\n      if (!commentField) return; // already notified\n\n      const values = {};\n\n      values[commentField.columnName] = commentText ?? \"\";\n\n      return await model.update(rowId, values);\n   }\n\n   async deleteComment(rowId) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return;\n\n      return await model.delete(rowId);\n   }\n\n   busy() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.disable();\n\n      if ($commentList.showProgress)\n         $commentList.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.enable();\n\n      if ($commentList.hideProgress) $commentList.hideProgress();\n   }\n\n   async saveData(commentText, dateTime) {\n      if (!commentText) return;\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const baseView = this.view;\n      const model = baseView.model();\n      const ab = this.AB;\n\n      if (!model) {\n         ab.notify.builder(\n            {},\n            {\n               message:\n                  \"ABViewComment.saveData(): could not pull a model to work with.\",\n               viewName: baseView.label,\n            }\n         );\n\n         return;\n      }\n\n      const comment = {};\n      const userField = baseView.getUserField();\n\n      if (userField) comment[userField.columnName] = ab.Account.username();\n\n      const commentField = baseView.getCommentField();\n\n      if (commentField) comment[commentField.columnName] = commentText;\n\n      const dateField = baseView.getDateField();\n\n      if (dateField) comment[dateField.columnName] = dateTime;\n\n      // add parent cursor to default\n      const dvLink = dv.datacollectionLink;\n\n      if (dvLink?.getCursor()) {\n         const objectLink = dvLink.datasource;\n         const fieldLink = dv.fieldLink;\n\n         if (objectLink && fieldLink) {\n            comment[fieldLink.columnName] = {};\n            comment[fieldLink.columnName][objectLink.PK()] =\n               dvLink.getCursor().id;\n         }\n      }\n\n      return await model.create(comment);\n   }\n};\n","/**\n * ABViewComponent\n * A common UI component class for our UI widgets.\n */\nimport ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewComponent extends ClassUI {\n   constructor(baseView, idBase, ids) {\n      super(idBase || `ABView_${baseView.id}`, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n      this.datacollection = baseView.datacollections || baseView.datacollection;\n\n      this.__events = [];\n      // {array}\n      // A collection of any listeners we are managing.\n      // {\n      //   emitter:   {EventEmitter} the object we are listening on\n      //   eventName: {string} the event key we are listening for\n      //   listener:  {fn} the function to call on\n      // }\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.CurrentDatacollectionID = null;\n      // {string}\n      // the ABDataCollection.id of the DC we are working with\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n   }\n\n   ui(uiComponents = []) {\n      // an ABView is a collection of rows:\n      const _ui = {\n         id: this.ids.component,\n         view: \"layout\",\n         type: \"space\",\n         rows: uiComponents,\n      };\n\n      // if this form is empty, then force a minimal row height\n      // so the component isn't completely hidden on the screen.\n      // (important in the editor so we don't loose the ability to edit the\n      // component)\n      if (!_ui.rows.length) _ui.height = 30;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      this.CurrentDatacollectionID = datacollection?.id;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object?.id;\n   }\n\n   /**\n    * @method eventAdd()\n    * Create a new listener on an object. Note, this will prevent multiple\n    * listeners being applied to the same Object.\n    * @param {object} evt\n    *        The definition of the event we are adding:\n    *        {\n    *           emitter:   {EventEmitter} the object we are listening on\n    *           eventName: {string} the event key we are listening for\n    *           listener:   {fn} the function to call on\n    *        }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      // make sure we haven't done this before:\n      const __events = this.__events;\n      const exists = __events.filter(\n         (e) => e.emitter === evt.emitter && e.eventName === evt.eventName\n         // && e.listener === evt.listener\n      );\n\n      if (!exists.length) {\n         // add to array\n         __events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventsClear()\n    * Remove all the attached event listeners and reset our tracking.\n    */\n   eventsClear() {\n      this.__events.forEach((evt) => {\n         evt.emitter.removeListener(evt.eventName, evt.listener);\n      });\n\n      this.__events = [];\n   }\n\n   /**\n    * @method waitInitializingDCEvery()\n    * Wait until the DC is initialized, checking every millisecond as specified by the parameter\n    * @param {number} milliSeconds\n    * The amount of milliseconds to recheck DC status.\n    * @param {object} dc\n    * the AB DC instance.\n    */\n\n   async waitInitializingDCEvery(milliSeconds, dc) {\n      if (!this.__isShowing || dc == null) return;\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      // load data when a widget is showing\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial) await dc.loadData();\n\n      return await new Promise((resolve) => {\n         if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n            resolve();\n\n            return;\n         }\n\n         const interval = setInterval(() => {\n            if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n               clearInterval(interval);\n\n               resolve();\n            }\n         }, milliSeconds);\n      });\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      // check if tab has a hint\n      if (this?.view?.settings?.hintID) {\n         // fetch the steps for the hint\n         let hint = this.AB.hintID(this.view.settings.hintID);\n         if (hint.settings.active) {\n            hint.createHintUI();\n         }\n      }\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n         // load data when a widget is showing\n         dc.loadData();\n   }\n}\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainerComponent extends (\n   ABViewContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewConditionalContainer_${baseView.id}`,\n         Object.assign(\n            {\n               batch: \"\",\n            },\n            ids\n         )\n      );\n\n      this._ifComponent = null;\n      this._elseComponent = null;\n\n      // Set filter value\n      this.__filterComponent = baseView.AB.filterComplexNew(\n         `${baseView.id}_filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.populateFilterComponent();\n   }\n\n   ui() {\n      const _uiConditionalContainer = {\n         id: this.ids.batch,\n         view: \"multiview\",\n         cells: [\n            {\n               batch: \"wait\",\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"label\",\n                     label: this.label(\"Please wait...\"),\n                  },\n               ],\n            },\n         ],\n      };\n      const _ui = super.ui([_uiConditionalContainer]);\n\n      _uiConditionalContainer.cells.push(\n         Object.assign({ batch: \"if\" }, this.ifComponent.ui()),\n         Object.assign({ batch: \"else\" }, this.elseComponent.ui())\n      );\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      await Promise.all([\n         this.ifComponent.init(AB, accessLevel),\n         this.elseComponent.init(AB, accessLevel),\n      ]);\n\n      this.populateFilterComponent();\n\n      const dc = this.datacollection;\n\n      if (dc) {\n         const baseView = this.view;\n\n         // listen DC events\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"loadData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"initializedData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayView(...p),\n         });\n      }\n\n      this.displayView();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.populateFilterComponent();\n      this.displayView();\n   }\n\n   get ifComponent() {\n      return (this._ifComponent =\n         this._ifComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"If\")\n            .component());\n   }\n\n   get elseComponent() {\n      return (this._elseComponent =\n         this._elseComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"Else\")\n            .component());\n   }\n\n   displayView(currData) {\n      const dc = this.datacollection;\n      const ids = this.ids;\n      const $batch = $$(ids.batch);\n\n      if (dc) {\n         if (!currData) currData = dc.getCursor();\n\n         // show 'waiting' panel\n         if (\n            !currData &&\n            (dc.dataStatus === dc.dataStatusFlag.notInitial ||\n               dc.dataStatus === dc.dataStatusFlag.initializing)\n         ) {\n            $batch?.showBatch(\"wait\");\n\n            return;\n         }\n      }\n\n      const isValid = this.__filterComponent.isValid(currData);\n\n      if (isValid) {\n         // if (isValid && currData) {\n         $batch?.showBatch(\"if\");\n         this.ifComponent?.onShow?.();\n      } else {\n         $batch?.showBatch(\"else\");\n         this.elseComponent?.onShow?.();\n      }\n   }\n\n   populateFilterComponent() {\n      const dc = this.datacollection;\n      const __filterComponent = this.__filterComponent;\n\n      if (dc?.datasource) __filterComponent.fieldsLoad(dc.datasource.fields());\n      else __filterComponent.fieldsLoad([]);\n\n      __filterComponent.setValue(\n         this.settings.filterConditions ??\n            this.view.constructor.defaultValues().filterConditions\n      );\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewContainer_${baseView.id}`, ids);\n\n      this.idBase = idBase;\n      this.options = null;\n\n      this.viewComponents = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child views that we manage\n\n      this.viewComponentIDs = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child.ui().ids of the views we manage\n\n      this._handlerChangePage = (pageId) => {\n         baseView.changePage(pageId);\n      };\n   }\n\n   ui(uiComponents) {\n      // Generate rows & cols of views to .layout\n      const views = this.view.viewsSortByPosition();\n      const rowViews = this.getElements(views);\n      const _ui = super.ui(uiComponents || rowViews);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB, accessLevel = 0, options = {}) {\n      await super.init(AB);\n\n      this.options = options;\n\n      const allInits = [];\n\n      // // register our callbacks:\n      // if (options) {\n      //    for (var c in _logic.callbacks) {\n      //       _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //    }\n      // }\n\n      // see access by CSS class\n      $$(this.ids.component)?.define(\"css\", `accessLevel-${accessLevel}`);\n\n      const viewComponents = this.viewComponents;\n\n      // attach all the .UI views:\n      for (const key in viewComponents) {\n         // skip when the view is removed.\n         if (\n            !viewComponents[key] ??\n            !this.view.views((v) => v.id === key).length\n         )\n            continue;\n\n         // Initial component along with options in case there are callbacks we need to listen for\n         if (accessLevel) {\n            allInits.push(viewComponents[key].init(AB, accessLevel, options));\n\n            continue;\n         }\n\n         $$(this.viewComponentIDs[key])?.hide();\n      }\n\n      await Promise.all(allInits);\n   }\n\n   getElements(views) {\n      const rows = [];\n      const componentMap = {};\n\n      let curRowIndex;\n      let curColIndex;\n\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n\n      views.forEach((v) => {\n         // let component = v.component(/* App, idPrefix */);\n         // NOTE: PONG - Just temporary to be compatible old & new versions\n         let component;\n\n         try {\n            component = v.component(this.idBase);\n            // make sure any existing handlers for changePage are removed.\n            v.removeAllListeners(\"changePage\");\n         } catch (err) {\n            component = v.component(this.idBase);\n\n            const ui = component.ui;\n\n            component.ui = (() => ui).bind(component);\n         }\n\n         this.viewComponents[v.id] = component;\n\n         ////\n         //// TODO: figure out the embedded Callbacks => emit()\n         ////\n         // if key == \"form\" or \"button\" register the callbacks to the parent\n         // NOTE this will only work on the last form of a page!\n         // if (v.key == \"form\" && v._logic.callbacks) {\n         //    _logic.callbacks = v._logic.callbacks;\n         // }\n\n         // Create a new row\n         if (v.position.y == null || v.position.y !== curRowIndex) {\n            curRowIndex = v.position.y || rows.length;\n            curColIndex = 0;\n\n            const rowNew = {\n               cols: [],\n            };\n\n            // Create columns following setting value\n            const colNumber = settings.columns || defaultSettings.columns;\n\n            for (let i = 0; i < colNumber; i++)\n               rowNew.cols.push({\n                  gravity: settings.gravity?.[i]\n                     ? parseInt(settings.gravity[i])\n                     : defaultSettings.gravity,\n               });\n\n            rows.push(rowNew);\n         }\n\n         // Get the last row\n         const rowIndx = rows.length - 1;\n         const curRow = rows[rowIndx];\n         const newPos = v.position.x ?? 0;\n         const mapKey = `${rowIndx}-${newPos}`;\n\n         let getGrav = 1;\n\n         if (componentMap[mapKey])\n            console.error(\n               `Component[${component?.ids?.component}] is overwriting component[${componentMap[mapKey].ids?.component}]. <-- Reorder them to fix.`\n            );\n\n         componentMap[mapKey] = component;\n\n         if (curRow.cols[newPos]?.gravity)\n            getGrav = curRow.cols[newPos].gravity;\n\n         const _ui = component.ui();\n\n         this.viewComponentIDs[v.id] = _ui.id;\n         _ui.gravity = getGrav;\n\n         // Add ui of sub-view to column\n         curRow.cols[newPos] = _ui;\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: this._handlerChangePage,\n         });\n\n         curColIndex++;\n      });\n\n      return rows;\n   }\n\n   onShow() {\n      super.onShow();\n\n      // calll .onShow in child components\n      Object.values(this.viewComponents).forEach((val) => {\n         val.onShow?.();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDetailComponent = require(\"./ABViewDetailComponent\");\nconst ABViewPropertyLinkPage =\n   require(\"../viewProperties/ABViewPropertyLinkPage\").default;\n\nmodule.exports = class ABViewDataviewComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDataview_${baseView.id}`,\n         Object.assign(\n            {\n               dataview: \"\",\n            },\n            ids\n         )\n      );\n\n      this.linkPage = null;\n   }\n\n   ui() {\n      // NOTE: need to initial the detail component here\n      // because its dom width & height values are used .template function\n      this.initDetailComponent();\n\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            id: ids.dataview,\n            view: \"dataview\",\n            scroll: \"y\",\n            sizeToContent: true,\n            css: \"borderless transparent\",\n            xCount: this.settings.xCount,\n            template: (item) => this.itemTemplate(item),\n            on: {\n               onAfterRender: () => {\n                  this.applyClickEvent();\n                  this.addCyAttribute();\n               },\n            },\n         },\n      ]);\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n      if (!dc) return;\n\n      // Initial the link page helper\n      this.linkPage = this.linkPageHelper.component();\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      const ids = this.ids;\n      const $dataView = $$(ids.dataview);\n      AB.Webix.extend($dataView, AB.Webix.ProgressBar);\n      dc.bind($dataView);\n\n      window.addEventListener(\"resize\", () => {\n         clearTimeout(this._resizeEvent);\n         this._resizeEvent = setTimeout(() => {\n            this.resize($dataView.getParentView());\n            delete this._resizeEvent;\n         }, 20);\n      });\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.resize();\n   }\n\n   resize(base_element) {\n      const $dataview = $$(this.ids.dataview);\n      $dataview.resize();\n\n      const item_width = this.getItemWidth(base_element);\n      $dataview.customize({ width: item_width });\n      $dataview.getTopParentView?.().resize?.();\n\n   }\n\n   initDetailComponent() {\n      const detailUI = this.getDetailUI();\n      this._detail_ui = this.AB.Webix.ui(detailUI);\n\n      // 2 - Always allow access to components inside data view\n      this.detailComponent.init(null, 2);\n   }\n\n   getDetailUI() {\n      const detailCom = this.detailComponent;\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n\n      const _ui = detailCom.ui();\n      // adjust the UI to make sure it will look like a \"card\"\n      _ui.type = \"clean\";\n      _ui.css = \"ab-detail-view\";\n\n      if (detailsPage || editPage) {\n         _ui.css += ` ab-detail-hover ab-record-#itemId#`;\n\n         if (detailsPage) _ui.css += \" ab-detail-page\";\n         if (editPage) _ui.css += \" ab-edit-page\";\n      }\n\n      return _ui;\n   }\n\n   itemTemplate(item) {\n      const detailCom = this.detailComponent;\n      const $dataview = $$(this.ids.dataview);\n      const $detail_item = this._detail_ui;\n\n      // Mock up data to initialize height of item\n      if (!item || !Object.keys(item).length) {\n         item = item ?? {};\n         this.datacollection?.datasource?.fields().forEach((f) => {\n            switch (f.key) {\n               case \"string\":\n               case \"LongText\":\n                  item[f.columnName] = \"Lorem Ipsum\";\n                  break;\n               case \"date\":\n               case \"datetime\":\n                  item[f.columnName] = new Date();\n                  break;\n               case \"number\":\n                  item[f.columnName] = 7;\n                  break;\n            }\n         });\n      }\n      detailCom.displayData(item);\n\n      const itemWidth =\n         $dataview.data.count() > 0\n            ? $dataview.type.width\n            : ($detail_item.$width - 20) / this.settings.xCount;\n\n      const itemHeight =\n         $dataview.data.count() > 0\n            ? $dataview.type.height\n            : $detail_item.getChildViews()?.[0]?.$height;\n\n      const tmp_dom = document.createElement(\"div\");\n      tmp_dom.appendChild($detail_item.$view);\n\n      $detail_item.define(\"width\", itemWidth - 24);\n      $detail_item.define(\"height\", itemHeight + 15);\n      $detail_item.adjust();\n\n      // Add cy attributes\n      this.addCyItemAttributes(tmp_dom, item);\n\n      return tmp_dom.innerHTML.replace(/#itemId#/g, item.id);\n   }\n\n   getItemWidth(base_element) {\n      const $dataview = $$(this.ids.dataview);\n\n      let currElem = base_element ?? $dataview;\n      let parentWidth = currElem?.$width;\n      while (currElem) {\n         if (\n            currElem.config.view == \"scrollview\" ||\n            currElem.config.view == \"layout\"\n         )\n            parentWidth =\n               currElem?.$width < parentWidth ? currElem?.$width : parentWidth;\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      if (!parentWidth)\n         parentWidth = $dataview?.getParentView?.().$width || window.innerWidth;\n\n      if (parentWidth > window.innerWidth)\n         parentWidth = window.innerWidth;\n\n      // check if the browser window minus webix default padding is the same as the parent window\n      // if so we need to check to see if there is a sidebar and reduce the usable space by the\n      // width of the sidebar\n      if (window.innerWidth - 19 <= parentWidth) {\n         const $sidebar = this.getTabSidebar();\n         if ($sidebar) {\n            parentWidth -= $sidebar.$width;\n         }\n      }\n\n      const recordWidth = Math.floor(parentWidth / this.settings.xCount);\n\n      return recordWidth;\n   }\n\n   getTabSidebar() {\n      const $dataview = $$(this.ids.dataview);\n      let $sidebar;\n      let currElem = $dataview;\n      while (currElem && !$sidebar) {\n         $sidebar = (currElem.getChildViews?.() ?? []).filter(\n            (item) => item?.config?.view == \"sidebar\"\n         )[0];\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      return $sidebar;\n   }\n\n   applyClickEvent() {\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n      if (!detailsPage && !editPage) return;\n\n      const $dataview = $$(this.ids.dataview);\n      if (!$dataview) return;\n\n      $dataview.$view.onclick = (e) => {\n         let clicked = false;\n         let divs = e.path ?? [];\n\n         // NOTE: Some web browser clients do not support .path\n         if (!divs.length) {\n            divs.push(e.target);\n            divs.push(e.target.parentNode);\n         }\n\n         if (editPage) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem_header\") > -1\n               ) {\n                  clicked = true;\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(editPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n                  break;\n               }\n            }\n         }\n\n         if (detailsPage && !clicked) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem\") > -1\n               ) {\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(detailsPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n\n                  break;\n               }\n            }\n         }\n      };\n   }\n\n   addCyAttribute() {\n      const baseView = this.view;\n      const $dataview = $$(this.ids.dataview);\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n\n      $dataview.$view.setAttribute(\n         \"data-cy\",\n         `dataview container ${name} ${baseView.id}`\n      );\n   }\n\n   addCyItemAttributes(dom, item) {\n      const baseView = this.view;\n      const uuid = item.uuid;\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n      dom.querySelector(\".webix_accordionitem_body\")?.setAttribute(\n         \"data-cy\",\n         `dataview item ${name} ${uuid} ${baseView.id}`\n      );\n      dom.querySelector(\".webix_accordionitem_button\")?.setAttribute(\n         \"data-cy\",\n         `dataview item button ${name} ${uuid} ${baseView.id}`\n      );\n   }\n\n   get detailComponent() {\n      return (this._detailComponent =\n         this._detailComponent ??\n         new ABViewDetailComponent(\n            this.view,\n            `${this.ids.component}_detail_view`\n         ));\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCheckboxComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail checkbox ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id ?? baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      let checkbox = \"\";\n\n      // Check\n      if (val && JSON.parse(val))\n         checkbox =\n            '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n      // Uncheck\n      else checkbox = '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n      super.setValue(checkbox);\n   }\n};\n","const ABObjectQuery = require(\"../../ABObjectQuery\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewDetailComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetail_${baseView.id}`, ids);\n      this.idBase = idBase;\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      // this wrapper allows the detail view to have a\n      // card appearance as well as enables the edit and\n      // details functions to work when clicked\n      return {\n         type: \"form\",\n         borderless: true,\n         rows: [\n            {\n               body: _ui,\n            },\n         ],\n      };\n   }\n\n   onShow() {\n      const baseView = this.view;\n\n      try {\n         const dataCy = `Detail ${baseView.name?.split(\".\")[0]} ${baseView.id}`;\n\n         $$(this.ids.component).$view.setAttribute(\"data-cy\", dataCy);\n      } catch (e) {\n         console.warn(\"Problem setting data-cy\", e);\n      }\n\n      // listen DC events\n      const dv = this.datacollection;\n\n      if (dv) {\n         const currData = dv.getCursor();\n\n         if (currData) this.displayData(currData);\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayData(...p),\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"create\",\n            listener: (createdRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === createdRow.id)\n                  this.displayData(createdRow);\n            },\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"update\",\n            listener: (updatedRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === updatedRow.id)\n                  this.displayData(updatedRow);\n            },\n         });\n      }\n\n      super.onShow();\n   }\n\n   displayData(rowData = {}) {\n      const views = (this.view.views() || []).sort((a, b) => {\n         if (!a?.field?.() || !b?.field?.()) return 0;\n\n         // NOTE: sort order of calculated fields.\n         // FORMULA field type should be calculated before CALCULATE field type\n         if (a.field().key === \"formula\" && b.field().key === \"calculate\")\n            return -1;\n         else if (a.field().key === \"calculate\" && b.field().key === \"formula\")\n            return 1;\n\n         return 0;\n      });\n\n      views.forEach((f) => {\n         let val;\n\n         if (f.field) {\n            const field = f.field();\n\n            if (!field) return;\n\n            // get value of relation when field is a connect field\n            switch (field.key) {\n               case \"connectObject\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"list\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  if (field.settings.isMultiple === 0) {\n                     let myVal = \"\";\n\n                     field.settings.options.forEach((options) => {\n                        if (options.id === val) myVal = options.text;\n                     });\n\n                     if (field.settings.hasColors) {\n                        let myHex = \"#66666\";\n                        let hasCustomColor = \"\";\n\n                        field.settings.options.forEach((h) => {\n                           if (h.text === myVal) {\n                              myHex = h.hex;\n                              hasCustomColor = \"hascustomcolor\";\n                           }\n                        });\n\n                        myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                     }\n\n                     val = myVal;\n                  } else {\n                     const items = [];\n\n                     let myVal = \"\";\n\n                     val.forEach((value) => {\n                        let hasCustomColor = \"\";\n                        let optionHex = \"\";\n\n                        if (field.settings.hasColors && value.hex) {\n                           hasCustomColor = \"hascustomcolor\";\n                           optionHex = `background: ${value.hex};`;\n                        }\n\n                        field.settings.options.forEach((options) => {\n                           if (options.id === value.id) myVal = options.text;\n                        });\n                        items.push(\n                           `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                        );\n                     });\n\n                     val = items.join(\"\");\n                  }\n\n                  break;\n\n               case \"user\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"file\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  break;\n\n               case \"formula\":\n                  if (rowData) {\n                     // const dv = this.datacollection;\n                     // const ds = dv ? dv.datasource : null;\n                     // const needRecalculate =\n                     //    !ds || ds instanceof ABObjectQuery ? false : true;\n\n                     // NOTE: Could not to re-calculate because `__relation` data is extracted from full data at the moment\n                     // rowData.__relation format\n                     // {\n                     //    id: \"string\"\n                     //    text: \"string\"\n                     //    translations: []\n                     //    uuid:  \"0cb52669-d626-4c9d-85ea-2d931751d0ce\"\n                     //    value: \"LABEL\"\n                     // }\n                     const needRecalculate = false;\n\n                     val = field.format(rowData, needRecalculate);\n                  }\n\n                  break;\n\n               default:\n                  val = field.format(rowData);\n               // break;\n            }\n         }\n\n         // set value to each components\n         const vComponent = f.component(this.idBase);\n\n         // vComponent?.onShow();\n\n         vComponent?.setValue?.(val);\n         vComponent?.displayText?.(rowData);\n      });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailConnectComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailConnect_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const columnName =\n                  baseView.field((fld) => fld.id === settings.fieldId)\n                     ?.columnName ?? \"\";\n               const dataCy = `detail connected ${columnName} ${\n                  settings.fieldId\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      const vals = [];\n\n      if (Array.isArray(val))\n         val.forEach((record) => {\n            vals.push(\n               `<span class=\"webix_multicombo_value\">${record.text}</span>`\n            );\n         });\n      else vals.push(`<span class=\"webix_multicombo_value\">${val.text}</span>`);\n\n      super.setValue(vals.join(\"\"));\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCustomComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCustom_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const detailView = baseView.detailComponent();\n\n      let template = field ? field.columnHeader().template({}) : \"\";\n\n      return super.ui({\n         minHeight: 45,\n         height: 60,\n         template,\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail custom ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   onShow() {\n      super.onShow;\n\n      const baseView = this.view;\n      const field = baseView.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const detailCom = baseView.detailComponent(),\n         rowData = detailCom.datacollection.getCursor() || {},\n         node = $detailItem.$view;\n\n      field.customDisplay(rowData, null, node, {\n         editable: false,\n      });\n      // Hack: remove the extra webix_template class here, which adds padding so\n      // the item is not alligned with the others\n      node.getElementsByClassName(\"webix_template\")[1].removeAttribute(\"class\");\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const rowData = {};\n\n      rowData[field.columnName] = val;\n\n      field.setValue($detailItem, rowData);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailImageComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailImage_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const _ui = {\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail image ${field?.columnName} ${field?.id} ${\n                  baseView.parentDetailComponent()?.id || baseView.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const parsedImageUrl = val || field.settings.defaultImageUrl;\n\n      if (!parsedImageUrl) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const imageUrl = field.urlImage(parsedImageUrl);\n      const settings = this.settings;\n      const width = settings.width || field.settings.imageWidth || 200;\n      const height = settings.height\n         ? `${settings.height}px`\n         : field.settings.imageHeight\n         ? `${field.settings.imageHeight}px`\n         : \"100%\";\n      const imageTemplate = [\n         `<div class=\"ab-image-data-field\">`,\n         `<div style=\"float: left; background-size: cover; background-position: center center; background-image:url('${imageUrl}');  width: ${width}px; height: ${height}; position:relative;\">`,\n         `<a href=\"${imageUrl}\" target=\"_blank\" title=\"\" class=\"fa fa-download ab-image-data-field-download\"></a>`,\n         `</div></div>`,\n      ].join(\"\");\n\n      super.setValue(imageTemplate);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SAFE_HTML_TAGS = [\"abbr\", \"acronym\", \"b\", \"blockquote\", \"br\", \"code\", \"div\", \"em\", \"i\", \"li\", \"ol\", \"p\", \"span\", \"strong\", \"table\", \"td\", \"tr\", \"ul\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\"];\n\nmodule.exports = class ABViewDetailItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDetailItem_${baseView.id}`,\n         Object.assign(\n            {\n               detailItem: \"\",\n               detailItemLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiDetailItemComponent = {}) {\n      const baseView = this.view;\n\n      // setup 'label' of the element\n      const settings = baseView.detailComponent()?.settings ?? {};\n      const field = baseView.field();\n\n      const isLabelTop = settings.labelPosition == \"top\";\n\n      const group = [];\n      /** @const group will be used later as rows or cols depending on label position */\n      if (settings.showLabel) {\n         const templateLabel = isLabelTop\n            ? \"<label style='display:block; text-align: left; line-height: 32px;' class='webix_inp_top_label'>#label#</label>\"\n            : \"<label style='display: inline-block; float: left; line-height: 32px; width:#width#px;'>#label#</label>\";\n\n         const labelUi = {\n            id: this.ids.detailItemLabel,\n            view: \"template\",\n            borderless: true,\n            height: 38,\n            template: templateLabel,\n            data: { label: field?.label ?? \"\" },\n         };\n         if (!isLabelTop) labelUi.width = settings.labelWidth + 24; // Add 24px to compensate for webix padding\n         group.push(labelUi);\n      }\n\n      let height;\n      if (field?.settings?.useHeight === 1)\n         height = parseInt(field.settings.imageHeight) || height;\n\n      const valueUi = Object.assign(\n         {\n            id: this.ids.detailItem,\n            view: \"template\",\n            borderless: true,\n            autowidth: true,\n            height,\n            isUsers: field?.key === \"user\",\n            template: isLabelTop\n               ? \"<div style='min-height: 38px'>#display#</div>\"\n               : \"<div class='ab-detail-component-holder'>#display#</div>\",\n            data: { display: \"\" }, // show empty data in template\n         },\n         uiDetailItemComponent\n      );\n      // height = 0 behaves a bit differently then autoheight here.\n      if (!valueUi.height || valueUi.height == 0) {\n         delete valueUi.height;\n         valueUi.autoheight = true;\n      }\n      group.push(valueUi);\n      const itemUi = {};\n      settings.labelPosition == \"top\"\n         ? (itemUi.rows = group)\n         : (itemUi.cols = group);\n      const _ui = super.ui([itemUi]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // async init(AB) {\n   //    await super.init(AB);\n   // }\n\n   setValue(val, detailId) {\n      const $detailItem = $$(detailId ?? this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const field = this.view.field();\n\n      switch (field?.key) {\n         case \"string\":\n         case \"LongText\":\n            const strVal = val\n               // Sanitize all of HTML tags\n               .replace(/[<]/gm, \"&lt;\")\n               // Allow safe HTML tags\n               .replace(new RegExp(`(&lt;(\\/)?(${SAFE_HTML_TAGS.join(\"|\")}))`, \"gm\"), \"<$2$3\");\n\n            $detailItem.setValues({ display: strVal });\n            break;\n         default:\n            $detailItem.setValues({ display: val });\n            break;\n      }\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTextComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailText_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n      const _ui = {\n         css: \"ab-text\",\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail text ${field?.columnName} ${field?.id} ${\n                  this.view.parentDetailComponent()?.id || this.view.parent.id\n               }`;\n\n               $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTreeComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailTree_${baseView.id}`, ids);\n   }\n\n   get className() {\n      return \"ab-detail-tree\";\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // add div of tree to detail\n      this.setValue(`<div class=\"${this.className}\"></div>`);\n   }\n\n   getDomTree() {\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      return $detailItem.$view.getElementsByClassName(this.className)[0];\n   }\n\n   setValue(val) {\n      // convert value to array\n      const vals = [];\n\n      if (val && !Array.isArray(val)) vals.push(val);\n\n      setTimeout(() => {\n         // get tree dom\n         const domTree = this.getDomTree();\n\n         if (!domTree) return false;\n\n         const field = this.view.field();\n         const branches = [];\n\n         if (typeof field.settings.options.data === \"undefined\")\n            field.settings.options = new this.AB.Webix.TreeCollection({\n               data: field.settings.options,\n            });\n\n         field.settings.options.data.each(function (obj) {\n            if (vals.indexOf(obj.id) !== -1) {\n               let html = \"\";\n               let rootid = obj.id;\n\n               while (this.getParentId(rootid)) {\n                  field.settings.options.data.each(function (par) {\n                     if (\n                        field.settings.options.data.getParentId(rootid) ===\n                        par.id\n                     ) {\n                        html = `${par.text}: ${html}`;\n                     }\n                  });\n\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n\n         let nodeHTML = \"<div class='list-data-values'>\";\n\n         branches.forEach(function (item) {\n            nodeHTML += `<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color: ${myHex} !important;\">${item}</span>`;\n         });\n\n         nodeHTML += \"</div>\";\n         domTree.innerHTML = nodeHTML;\n\n         let height = 33;\n\n         if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n         const $detailItem = $$(this.ids.detailItem);\n\n         $detailItem.config.height = height;\n         $detailItem.resize();\n      }, 50);\n   }\n};\n","const Docxtemplater = require(\"../../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../../js/jszip.min.js\");\n\nconst ABFieldConnect = require(\"../../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDocxBuilderComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDocxBuilder_${baseView.id}`,\n         Object.assign(\n            {\n               downloadButton: \"\",\n               noFileLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const buttonWidth = settings.width ?? defaultSettings.width;\n\n      let autowidth = false;\n\n      if (buttonWidth === 0) autowidth = true;\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n\n      switch (settings.buttonPosition ?? defaultSettings.buttonPosition) {\n         case \"left\":\n            break;\n         case \"center\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            rightSpacer = {\n               type: \"spacer\",\n            };\n            break;\n         case \"right\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            break;\n      }\n\n      const buttonLabelText =\n         baseView.buttonlabel ||\n         settings.buttonlabel ||\n         defaultSettings.buttonlabel; // Use || to check empty string \"\"\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"toolbar\",\n            css:\n               settings.toolbarBackground ?? defaultSettings.toolbarBackground,\n            cols: [\n               leftSpacer,\n               {\n                  id: ids.downloadButton,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-file-word-o\",\n                  label: buttonLabelText,\n                  width: settings.width || defaultSettings.width,\n                  autowidth: autowidth,\n                  click: () => {\n                     this.renderFile();\n                  },\n                  on: {\n                     // Add data-cy attribute for cypress tests\n                     onAfterRender: () => {\n                        const name = baseView.name?.replace(\".docxBuilder\", \"\");\n                        const dataCy = `docx download ${name} ${baseView.id}`;\n                        $$(ids.downloadButton)\n                           ?.$view.querySelector(\"button\")\n                           .setAttribute(\"data-cy\", dataCy);\n                     },\n                  },\n               },\n               {\n                  id: ids.noFileLabel,\n                  view: \"label\",\n                  label: this.label(\"No template file\"),\n               },\n               {\n                  type: \"spacer\",\n               },\n               rightSpacer,\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $downloadButton = $$(ids.downloadButton);\n      const $noFileLabel = $$(ids.noFileLabel);\n\n      if (this.view.settings.filename) {\n         $downloadButton.show();\n         $noFileLabel.hide();\n      } else {\n         $downloadButton.hide();\n         $noFileLabel.show();\n      }\n   }\n\n   async onShow() {\n      super.onShow;\n\n      const tasks = [];\n\n      this.view.datacollections.forEach((dc) => {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            tasks.push(dc.loadData());\n      });\n\n      // Show loading cursor\n      if (tasks.length > 0) this.busy();\n\n      await Promise.all(tasks);\n\n      // Hide loading cursor\n      this.ready();\n   }\n\n   busy() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.disable();\n      $downloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n      $downloadButton.refresh();\n   }\n\n   ready() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.enable();\n      $downloadButton.define(\"icon\", \"fa fa-file-word-o\");\n      $downloadButton.refresh();\n   }\n\n   async renderFile() {\n      this.busy();\n\n      const reportValues = this.getReportData();\n\n      // console.log(\"DOCX data: \", reportValues);\n\n      // Download images\n      const images = await this.downloadImages();\n\n      // Download the template file\n      const contentTemplateFile = await this.downloadTemplateFile();\n\n      // Generate Docx file\n      const blobFile = this.generateDocxFile(\n         contentTemplateFile,\n         reportValues,\n         images\n      );\n\n      const baseView = this.view;\n\n      // Let user download the output file\n      baseView.letUserDownload(blobFile, baseView.filelabel);\n\n      // Final step\n      this.ready();\n   }\n\n   getReportData() {\n      const result = {};\n\n      // Get current cursor\n      const datacollections = this.view.datacollections;\n      const isDcLabelAdded = datacollections.length > 1;\n\n      datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach(async (dc) => {\n            const obj = dc.datasource;\n            const objModel = obj.model();\n            const dcCursor = dc.getCursor();\n            const dcValues = [];\n            // const dataList = [];\n\n            // merge cursor to support dc and tree cursor in the report\n            // if (dcCursor) {\n            //    const treeCursor = dc.getCursor(true);\n\n            //    dataList.push(this.AB.merge({}, dcCursor, treeCursor));\n            // } else {\n            //    dataList.push(...this.AB.cloneDeep(dc.getData()));\n            // }\n\n            let where = {};\n            if (dcCursor) {\n               where = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: obj.PK(),\n                        rule: \"equals\",\n                        value: dcCursor[obj.PK()],\n                     },\n                  ],\n               };\n            } else {\n               where = this.AB.merge(\n                  where,\n                  dc.settings?.objectWorkspace?.filterConditions ?? {}\n               );\n            }\n\n            // Pull data that have full relation values.\n            // NOTE: When get data from DataCollection, those data is pruned.\n            const dataList = (\n               await objModel.findAll({\n                  disableMinifyRelation: true,\n                  populate: true,\n                  skip: 0,\n                  where,\n               })\n            ).data;\n\n            // update property names to column labels to match format names in docx file\n            const mlFields = obj.multilingualFields();\n\n            dataList.forEach((data) => {\n               let resultData;\n\n               // For support label of columns every languages\n               obj.fields().forEach((f) => {\n                  const fieldLabels = [];\n\n                  // Query Objects\n                  if (obj instanceof ABObjectQuery) {\n                     if (typeof f.object.translations === \"string\")\n                        f.object.translations = JSON.parse(\n                           f.object.translations\n                        );\n\n                     if (typeof f.translations === \"string\")\n                        f.translations = JSON.parse(f.translations);\n\n                     (f.object.translations || []).forEach((objTran) => {\n                        const fieldTran = (f.translations || []).filter(\n                           (fieldTran) =>\n                              fieldTran.language_code === objTran.language_code\n                        )[0];\n\n                        if (!fieldTran) return;\n\n                        const objectLabel = objTran.label;\n                        const fieldLabel = fieldTran.label;\n\n                        // Replace alias with label of object\n                        fieldLabels.push(`${objectLabel}.${fieldLabel}`);\n                     });\n                  }\n                  // Normal Objects\n                  else if (typeof f.translations === \"string\")\n                     f.translations = JSON.parse(f.translations);\n\n                  f.translations.forEach((tran) => {\n                     fieldLabels.push(tran.label);\n                  });\n\n                  resultData = Object.assign(\n                     resultData ?? {},\n                     this.setReportValues(data, f, fieldLabels, mlFields) ?? {}\n                  );\n\n                  // Keep ABObject into .scope of DOCX templater\n                  resultData._object = obj;\n               });\n\n               dcValues.push(resultData);\n            });\n\n            // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n            const datacollectionData =\n               dcValues.length > 1 ? dcValues : dcValues[0];\n\n            if (\n               isDcLabelAdded ||\n               (Array.isArray(datacollectionData) &&\n                  datacollectionData.length > 1)\n            )\n               (dc.translations || []).forEach((tran) => {\n                  result[tran.label] = datacollectionData;\n               });\n            else Object.assign(result, datacollectionData);\n         });\n\n      return result;\n   }\n\n   setReportValues(data, field, fieldLabels = [], multilinguageFields) {\n      const result = {};\n\n      let val = null;\n\n      result.id = data.id;\n      result[`${field.columnName}_ORIGIN`] = data[field.columnName]; // Keep origin value for compare value with custom index\n\n      const baseView = this.view;\n\n      // Translate multilinguage fields\n      if (multilinguageFields.length) {\n         const transFields = (multilinguageFields || []).filter(\n            (fieldName) => data[fieldName] != null\n         );\n\n         baseView.translate(data, data, transFields, baseView.languageCode);\n      }\n\n      // Pull value\n      if (field instanceof ABFieldConnect) {\n         // If field is connected field, then\n         // {\n         //    fieldName: {Object} or [Array]\n         // }\n         val = data[field.columnName];\n\n         if (val?.forEach)\n            val.forEach((v) => {\n               if (!v) return;\n\n               // Sentry Fix: sometimes v is just the uuid\n               // Q: what should we do in this case?\n               if (typeof v == \"string\") return;\n\n               // format relation data\n               if (field.datasourceLink) {\n                  field.datasourceLink\n                     .fields((f) => !f.isConnection)\n                     .forEach((f) => {\n                        v[`${f.columnName}_ORIGIN`] = v[f.columnName];\n\n                        v[f.columnName] = f.format(v, {\n                           languageCode: baseView.languageCode,\n                        });\n                     });\n               }\n\n               // Keep ABObject to relation data\n               if (v && typeof v === \"object\") v._object = field.datasourceLink;\n            });\n\n         // TODO\n         // data[label + '_label'] = field.format(baseData);\n      } else\n         val = field.format(data, {\n            languageCode: baseView.languageCode,\n         });\n\n      // Set value to report with every languages of label\n      fieldLabels.forEach((label) => {\n         if (val) result[label] = val;\n         else if (!result[label]) result[label] = \"\";\n      });\n\n      // normalize child items\n      if (data.data?.length) {\n         result.data = result.data || [];\n\n         (data.data || []).forEach((childItem, index) => {\n            // add new data item\n            result.data[index] = this.setReportValues(\n               childItem,\n               field,\n               fieldLabels,\n               multilinguageFields\n            );\n         });\n      }\n\n      return result;\n   }\n\n   async downloadImages() {\n      const images = {};\n      const tasks = [];\n      const addDownloadTask = (fieldImage, data = []) => {\n         data.forEach((d) => {\n            const imageVal = fieldImage.format(d);\n\n            if (imageVal && !images[imageVal]) {\n               tasks.push(\n                  new Promise((resolve, reject) => {\n                     const imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                     JSZipUtils.getBinaryContent(imgUrl, (error, content) => {\n                        if (error) return reject(error);\n\n                        // store binary of image\n                        images[imageVal] = content;\n\n                        resolve();\n                     });\n                  })\n               );\n            }\n\n            // download images of child items\n            addDownloadTask(fieldImage, d.data || []);\n         });\n      };\n\n      this.view.datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n\n            let currCursor = dc.getCursor();\n\n            if (currCursor) {\n               // Current cursor\n               const treeCursor = dc.getCursor(true);\n\n               currCursor = [this.AB.merge({}, currCursor, treeCursor)];\n            } // List of data\n            else currCursor = dc.getData();\n\n            obj.fields((f) => f instanceof ABFieldImage).forEach((f) => {\n               addDownloadTask(f, currCursor);\n            });\n         });\n\n      await Promise.all(tasks);\n\n      return images;\n   }\n\n   downloadTemplateFile() {\n      const url = this.view.downloadUrl();\n\n      return new Promise((resolve, reject) => {\n         JSZipUtils.getBinaryContent(url, (error, content) => {\n            if (error) return reject(error);\n\n            resolve(content);\n         });\n      });\n   }\n\n   generateDocxFile(contentFile, data, images) {\n      const summaries = {}; // { varName: sum number, ..., varName2: number2 }\n      const zip = new JSZip(contentFile);\n      const doc = new Docxtemplater();\n      const imageModule = new ImageModule({\n         centered: false,\n         getImage: (tagValue, tagName) => {\n            // NOTE: .getImage of version 3.0.2 does not support async\n            //       we can buy newer version to support it\n            //       https://docxtemplater.com/modules/image/\n\n            return images[tagValue] || \"\";\n         },\n         getSize: (imgBuffer, tagValue, tagName) => {\n            const defaultVal = [300, 160];\n            const baseView = this.view;\n            const dc = baseView.datacollection;\n\n            if (!dc) {\n               const dcs = baseView.datacollections;\n\n               if (dcs) {\n                  dcs.forEach((dc) => {\n                     let obj = dc.datasource;\n\n                     if (!obj) return false;\n\n                     // This is a query object\n                     if (tagName.indexOf(\".\") > -1) {\n                        let tagNames = tagName.split(\".\");\n\n                        if (!obj.objects) return false; // not a query\n\n                        obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                        if (!obj) return false;\n\n                        tagName = tagNames[1]; // Field name\n                     }\n\n                     const imageField = obj.fields(\n                        (f) => f.columnName === tagName\n                     )[0];\n\n                     if (!imageField?.settings) return false;\n\n                     if (\n                        imageField.settings.useWidth &&\n                        imageField.settings.imageWidth\n                     )\n                        defaultVal[0] = imageField.settings.imageWidth;\n\n                     if (\n                        imageField.settings.useHeight &&\n                        imageField.settings.imageHeight\n                     )\n                        defaultVal[1] = imageField.settings.imageHeight;\n\n                     return false;\n                  });\n\n                  return defaultVal;\n               } else return defaultVal;\n            } else {\n               let obj = dc.datasource;\n\n               if (!obj) return defaultVal;\n\n               // This is a query object\n               if (tagName.indexOf(\".\") > -1) {\n                  const tagNames = tagName.split(\".\");\n\n                  obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                  if (!obj) return defaultVal;\n\n                  tagName = tagNames[1]; // Field name\n               }\n\n               const imageField = obj.fields(\n                  (f) => f.columnName === tagName\n               )[0];\n\n               if (!imageField?.settings) return defaultVal;\n\n               if (\n                  imageField.settings.useWidth &&\n                  imageField.settings.imageWidth\n               )\n                  defaultVal[0] = imageField.settings.imageWidth;\n\n               if (\n                  imageField.settings.useHeight &&\n                  imageField.settings.imageHeight\n               )\n                  defaultVal[1] = imageField.settings.imageHeight;\n\n               return defaultVal;\n            }\n         },\n         // getSize: function (imgBuffer, tagValue, tagName) {\n         //    if (imgBuffer) {\n         //       var maxWidth = 300;\n         //       var maxHeight = 160;\n\n         //       // Find aspect ratio image dimensions\n         //       try {\n         //          var image = sizeOf(imgBuffer);\n         //          var ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n         //          return [image.width * ratio, image.height * ratio];\n         //       }\n         //       // if invalid image, then should return 0, 0 sizes\n         //       catch (err) {\n         //          return [0, 0];\n         //       }\n\n         //    }\n         //    else {\n         //       return [0, 0];\n         //    }\n         // }\n      });\n\n      try {\n         doc.attachModule(imageModule)\n            .loadZip(zip)\n            .setData(data)\n            .setOptions({\n               parser: function (tag) {\n                  return {\n                     get: function (scope, context) {\n                        // NOTE: AppBuilder custom filter : no return empty items\n                        if (tag.indexOf(\"data|\") === 0) {\n                           const prop = (tag.split(\"|\")[1] || \"\").trim();\n\n                           return (scope[\"data\"] || []).filter(function (item) {\n                              return item[prop] ? true : false;\n                           });\n                        }\n                        // Mark number to add to a variable\n                        else if (tag.indexOf(\"|$sum?\") > -1) {\n                           const prop = tag.split(\"|$sum?\")[0];\n                           const varName = tag.split(\"|$sum?\")[1];\n\n                           let number = scope[prop];\n\n                           if (typeof number === \"string\")\n                              number = number.replace(\n                                 /[^\\d.]/g, // return only number and dot\n                                 \"\"\n                              );\n\n                           if (!summaries[varName]) summaries[varName] = 0.0;\n\n                           summaries[varName] += parseFloat(number);\n\n                           return scope[prop];\n                        }\n                        // Show sum value ^\n                        else if (tag.indexOf(\"$sum?\") === 0) {\n                           const varName = tag.replace(\"$sum?\", \"\");\n\n                           return summaries[varName] || 0;\n                        }\n                        // // Sum number of .data (Grouped query)\n                        // else if (tag.indexOf(\"$sum|\") === 0) {\n                        //    const prop = (\n                        //       tag.split(\"|\")[1] || \"\"\n                        //    ).trim();\n\n                        //    let sum = 0;\n                        //    (scope[\"data\"] || []).forEach(\n                        //       (childItem) => {\n                        //          if (!childItem[prop]) return;\n\n                        //          let number = childItem[prop];\n                        //          if (typeof number === \"string\") {\n                        //             number = number.replace(\n                        //                /[^\\d.]/g, // return only number and dot\n                        //                \"\"\n                        //             );\n                        //          }\n\n                        //          try {\n                        //             sum += parseFloat(\n                        //                number || 0\n                        //             );\n                        //          } catch (e) {}\n                        //       }\n                        //    );\n\n                        //    // Print number with commas\n                        //    if (sum) {\n                        //       sum = sum\n                        //          .toString()\n                        //          .replace(\n                        //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                        //             \",\"\n                        //          );\n                        //    }\n\n                        //    return sum;\n                        // }\n                        // NOTE: AppBuilder custom filter of another data source\n                        else if (tag.indexOf(\"$\") === 0) {\n                           const props = tag.replace(\"$\", \"\").split(\"|\");\n                           const propSource = props[0].trim();\n                           const propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                           if (!propSource || !propFilter) return \"\";\n\n                           // Pull Index field of connect field\n                           let indexColName;\n\n                           const obj = scope._object;\n\n                           if (obj) {\n                              const connectedField = obj.fields(\n                                 (f) => f.columnName === propFilter\n                              )[0];\n\n                              if (connectedField) {\n                                 const indexField = connectedField.indexField;\n\n                                 indexColName = indexField\n                                    ? indexField.columnName\n                                    : null;\n                              }\n                           }\n\n                           let sourceVals = data[propSource];\n\n                           if (sourceVals && !Array.isArray(sourceVals))\n                              sourceVals = [sourceVals];\n\n                           const getVal = (data) =>\n                              data[`${indexColName}_ORIGIN`] || // Pull origin data to compare by custom index\n                              data[indexColName] ||\n                              data.id ||\n                              data;\n\n                           return (sourceVals || []).filter(function (item) {\n                              // Pull data of parent to compare\n                              let comparer = scope[propFilter];\n\n                              if (Array.isArray(comparer))\n                                 return (\n                                    comparer.filter(\n                                       (c) => getVal(c) === getVal(item)\n                                    ).length > 0\n                                 );\n                              else return getVal(item) === getVal(comparer);\n                           });\n                        }\n                        // ์NOTE : Custom filter\n                        else if (tag.indexOf(\"?\") > -1) {\n                           const result = scope;\n                           const prop = tag.split(\"?\")[0];\n                           const condition = tag.split(\"?\")[1];\n\n                           if (prop && condition) {\n                              let data = scope[prop];\n\n                              if (data) {\n                                 if (!Array.isArray(data)) data = [data];\n\n                                 return data.filter((d) =>\n                                    eval(condition.replace(/\\./g, \"d.\"))\n                                 );\n                              }\n                           }\n                           return result;\n                        } else if (tag === \".\") return scope;\n                        else return scope[tag];\n                     },\n                  };\n               },\n            })\n            .render(); // render the document\n      } catch (error) {\n         return error;\n      }\n\n      // Output the document using Data-URI\n      const docxFile = doc.getZip().generate({\n         type: \"blob\",\n         mimeType:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n\n      return docxFile;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormButton_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = baseView.settings ?? {};\n\n      const alignment =\n         settings.alignment || baseView.constructor.defaultValues().alignment;\n\n      const _ui = {\n         cols: [],\n      };\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"right\") {\n         _ui.cols.push({});\n      }\n\n      // cancel button\n      if (settings.includeCancel) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.cancelLabel || this.label(\"Cancel\"),\n               click: function () {\n                  self.onCancel(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button cancel ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // reset button\n      if (settings.includeReset) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.resetLabel || this.label(\"Reset\"),\n               click: function () {\n                  self.onClear(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button reset ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // save button\n      if (settings.includeSave) {\n         _ui.cols.push({\n            view: \"button\",\n            type: \"form\",\n            css: \"webix_primary\",\n            autowidth: true,\n            value: settings.saveLabel || this.label(\"Save\"),\n            click: function () {\n               self.onSave(this);\n            },\n            on: {\n               onAfterRender: function () {\n                  this.getInputNode().setAttribute(\n                     \"data-cy\",\n                     `button save ${form.id}`\n                  );\n               },\n            },\n         });\n      }\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"left\") _ui.cols.push({});\n\n      return super.ui(_ui);\n   }\n\n   onCancel(cancelButton) {\n      const baseView = this.view;\n      const settings = baseView.settings ?? {};\n\n      // get form component\n      const form = baseView.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      dc?.setCursor(null);\n\n      cancelButton?.getFormView?.().clear();\n\n      if (settings.afterCancel) form.changePage(settings.afterCancel);\n      // If the redirect page is not defined, then redirect to parent page\n      else {\n         const noPopupFilter = (p) => p.settings && p.settings.type != \"popup\";\n\n         const pageCurr = this.pageParent();\n         if (pageCurr) {\n            const pageParent = pageCurr.pageParent(noPopupFilter) ?? pageCurr;\n\n            if (pageParent) form.changePage(pageParent.id);\n         }\n      }\n   }\n\n   onClear(resetButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      if (dc) {\n         dc.setCursor(null);\n      }\n\n      resetButton?.getFormView?.().clear();\n   }\n\n   onSave(saveButton) {\n      if (!saveButton) {\n         console.error(\"Require the button element\");\n         return;\n      }\n      // get form component\n      const form = this.view.parentFormComponent();\n      const formView = saveButton.getFormView();\n\n      // disable the save button\n      saveButton.disable?.();\n\n      // save data\n      form\n         .saveData(formView)\n         .then(() => {\n            saveButton.enable?.();\n\n            //Focus on first focusable component\n            form.focusOnFirst();\n         })\n         .catch((err) => {\n            console.error(err);\n            // Catch uncaught error reported in Sentry and add context\n            // APPBUILDER-WEB-1A3(https://appdev-designs.sentry.io/issues/4631880265/)\n            try {\n               saveButton.enable?.();\n            } catch (e) {\n               this.AB.notify.developer(e, {\n                  context:\n                     \"formButton.onSave > catch err > saveButton.enable()\",\n                  buttonID: this?.view?.id,\n                  formID: this?.view?.parent?.id,\n               });\n            }\n         });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormCheckboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui({\n         view: \"checkbox\",\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormItem = require(\"../ABViewFormItem\");\nconst ABViewFormConnect = require(\"../ABViewFormConnect\");\nconst ABViewFormCustom = require(\"../ABViewFormCustom\");\nconst ABViewFormTextbox = require(\"../ABViewFormTextbox\");\nconst ABViewFormJson = require(\"../ABViewFormJson\");\n\nasync function timeout(ms) {\n   return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst fieldValidations = [];\n\nmodule.exports = class ABViewFormComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewForm_${baseView.id}`,\n         Object.assign(\n            {\n               form: \"\",\n\n               layout: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.timerId = null;\n      this._showed = false;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const superComponent = baseView.superComponent();\n      const rows = superComponent.ui().rows ?? [];\n      const fieldValidationsHolder = this.uiValidationHolder();\n      const _ui = super.ui([\n         {\n            id: this.ids.form,\n            view: \"form\",\n            abid: baseView.id,\n            rows: rows.concat(fieldValidationsHolder),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiValidationHolder() {\n      const result = [\n         {\n            hidden: true,\n            rows: [],\n         },\n      ];\n\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      const baseView = this.view;\n      const object = this.datacollection?.datasource ?? baseView._currentObject;\n\n      if (!object) return result;\n\n      const validationUI = [];\n      const existsFields = baseView.fieldComponents();\n\n      object\n         // Pull fields that have validation rules\n         .fields((f) => f?.settings?.validationRules)\n         .forEach((f) => {\n            const view = existsFields.find(\n               (com) => f.id === com.settings.fieldId\n            );\n            if (!view) return;\n\n            // parse the rules because they were stored as a string\n            // check if rules are still a string...if so lets parse them\n            if (typeof f.settings.validationRules === \"string\") {\n               f.settings.validationRules = JSON.parse(\n                  f.settings.validationRules\n               );\n            }\n\n            // there could be more than one so lets loop through and build the UI\n            f.settings.validationRules.forEach((rule, indx) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.columnName}_${indx}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               if (typeof Filter.ui === \"function\") {\n                  validationUI.push(Filter.ui());\n               } else {\n                  // Legacy v1 method:\n                  validationUI.push(Filter.ui);\n               }\n\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.columnName,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n               });\n            });\n         });\n\n      result.rows = validationUI;\n\n      return result;\n   }\n\n   async init(AB, accessLevel, options = {}) {\n      await super.init(AB);\n\n      this.view.superComponent().init(AB, accessLevel, options);\n\n      this.initCallbacks(options);\n      this.initEvents();\n      this.initValidationRules();\n\n      const abWebix = this.AB.Webix;\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         abWebix.extend($form, abWebix.ProgressBar);\n      }\n\n      if (accessLevel < 2) $form.disable();\n   }\n\n   initCallbacks(options = {}) {\n      // ? We need to determine from these options whether to clear on load?\n      if (options?.clearOnLoad) {\n         // does this need to be a function?\n         this.view.settings.clearOnLoad = options.clearOnLoad();\n      }\n      // Q: Should we use emit the event instead ?\n      const baseView = this.view;\n\n      if (options.onBeforeSaveData)\n         baseView._callbacks.onBeforeSaveData = options.onBeforeSaveData;\n      else baseView._callbacks.onBeforeSaveData = () => true;\n   }\n\n   initEvents() {\n      // bind a data collection to form component\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // listen DC events\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"changeCursor\",\n         listener: (rowData) => {\n            const baseView = this.view;\n            const linkViaOneConnection = baseView.fieldComponents(\n               (comp) => comp instanceof ABViewFormConnect\n            );\n            // clear previous xxx->one selections and add new from\n            // cursor change\n            linkViaOneConnection.forEach((f) => {\n               const field = f.field();\n               if (\n                  field?.settings?.linkViaType == \"one\" &&\n                  field?.linkViaOneValues\n               ) {\n                  delete field.linkViaOneValues;\n                  if (rowData?.[field.columnName]) {\n                     if (Array.isArray(rowData[field.columnName])) {\n                        let valArray = [];\n                        rowData[field.columnName].forEach((v) => {\n                           valArray.push(v[field.object.PK()]);\n                        });\n                        field.linkViaOneValues = valArray.join();\n                     } else {\n                        field.linkViaOneValues = rowData[field.columnName];\n                     }\n                  }\n               }\n            });\n\n            this.displayData(rowData);\n         },\n      });\n\n      const ids = this.ids;\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializingData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.disable();\n\n               $form.showProgress?.({ type: \"icon\" });\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.enable();\n\n               $form.hideProgress?.();\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"ab.datacollection.update\",\n         listener: (msg, data) => {\n            if (!data?.objectId) return;\n\n            const object = dc.datasource;\n\n            if (!object) return;\n\n            if (\n               object.id === data.objectId ||\n               object.fields((f) => f.settings.linkObject === data.objectId)\n                  .length > 0\n            ) {\n               const currData = dc.getCursor();\n\n               if (currData) this.displayData(currData);\n            }\n         },\n      });\n\n      // bind the cursor event of the parent DC\n      const linkDv = dc.datacollectionLink;\n\n      if (linkDv)\n         // update the value of link field when data of the parent dc is changed\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: (rowData) => {\n               this.displayParentData(rowData);\n            },\n         });\n   }\n\n   initValidationRules() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (!fieldValidations.length) return;\n\n      // we need to store the rules for use later so lets build a container array\n      const complexValidations = [];\n\n      fieldValidations.forEach((f) => {\n         // init each ui to have the properties (app and fields) of the object we are editing\n         f.filter.applicationLoad(dc.datasource.application);\n         f.filter.fieldsLoad(dc.datasource.fields());\n         // now we can set the value because the fields are properly initialized\n         f.filter.setValue(f.validationRules);\n\n         // if there are validation rules present we need to store them in a lookup hash\n         // so multiple rules can be stored on a single field\n         if (!Array.isArray(complexValidations[f.columnName]))\n            complexValidations[f.columnName] = [];\n\n         // now we can push the rules into the hash\n         complexValidations[f.columnName].push({\n            filters: $$(f.view).getFilterHelper(),\n            // values: $$(ids.form).getValues(),\n            invalidMessage: f.invalidMessage,\n         });\n      });\n\n      const ids = this.ids;\n\n      // use the lookup to build the validation rules\n      Object.keys(complexValidations).forEach((key) => {\n         // get our field that has validation rules\n         const formField = $$(ids.form).queryView({\n            name: key,\n         });\n\n         // store the rules in a data param to be used later\n         formField.$view.complexValidations = complexValidations[key];\n         // define validation rules\n         formField.define(\"validate\", function (nval, oval, field) {\n            // get field now that we are validating\n            const fieldValidating = $$(ids.form).queryView({\n               name: field,\n            });\n\n            // default valid is true\n            let isValid = true;\n\n            // check each rule that was stored previously on the element\n            fieldValidating.$view.complexValidations.forEach((filter) => {\n               const object = dc.datasource;\n               const data = this.getValues();\n\n               // convert rowData from { colName : data } to { id : data }\n               const newData = {};\n\n               (object.fields() || []).forEach((field) => {\n                  newData[field.id] = data[field.columnName];\n               });\n\n               // for the case of \"this_object\" conditions:\n               if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n               // use helper funtion to check if valid\n               const ruleValid = filter.filters(newData);\n\n               // if invalid we need to tell the field\n               if (!ruleValid) {\n                  isValid = false;\n                  // we also need to define an error message\n                  fieldValidating.define(\n                     \"invalidMessage\",\n                     filter.invalidMessage\n                  );\n               }\n            });\n\n            return isValid;\n         });\n\n         formField.refresh();\n      });\n   }\n\n   async onShow(data) {\n      this.saveButton?.disable();\n\n      this._showed = true;\n\n      const baseView = this.view;\n\n      // call .onShow in the base component\n      const superComponent = baseView.superComponent();\n      await superComponent.onShow();\n\n      const $form = $$(this.ids.form);\n      const dc = this.datacollection;\n\n      if (dc) {\n         // clear current cursor on load\n         // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n         const settings = this.settings;\n\n         if (settings.clearOnLoad) {\n            dc.setCursor(null);\n         }\n\n         // pull data of current cursor\n         const rowData = dc.getCursor();\n\n         if ($form) dc.bind($form);\n\n         // do this for the initial form display so we can see defaults\n         await this.displayData(rowData);\n      }\n      // show blank data in the form\n      else await this.displayData(data ?? {});\n\n      //Focus on first focusable component\n      this.focusOnFirst();\n\n      if ($form) $form.adjust();\n\n      // Load data of DCs that are use in record rules here\n      // no need to wait until they are done. (Let the save button enable)\n      // It will be re-check again when saving.\n      baseView.loadDcDataOfRecordRules();\n\n      this.saveButton?.enable();\n   }\n\n   async displayData(rowData) {\n      // If setTimeout is already scheduled, no need to do anything\n      if (this.timerId) return;\n      else this.timerId = await timeout(80);\n\n      const baseView = this.view;\n      const customFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            // rich text\n            (comp instanceof ABViewFormTextbox &&\n               comp.settings.type === \"rich\") ||\n            (comp instanceof ABViewFormJson && comp.settings.type === \"filter\")\n      );\n\n      const normalFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormItem &&\n            !(comp instanceof ABViewFormCustom)\n      );\n\n      // Set default values\n      if (!rowData) {\n         customFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            // var colName = field.columnName;\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            const defaultRowData = {};\n\n            field.defaultValue(defaultRowData);\n            field.setValue($$(comp.ids.formItem), defaultRowData);\n\n            comp?.refresh?.(defaultRowData);\n         });\n\n         normalFields.forEach((f) => {\n            if (f.key === \"button\") return;\n\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            const colName = field.columnName;\n\n            // set value to each components\n            const values = {};\n\n            field.defaultValue(values);\n            $$(comp.ids.formItem)?.setValue(values[colName] ?? \"\");\n         });\n\n         // select parent data to default value\n         const dc = this.datacollection;\n         const linkDv = dc.datacollectionLink;\n\n         if (linkDv) {\n            const parentData = linkDv.getCursor();\n\n            this.displayParentData(parentData);\n         }\n      }\n\n      // Populate value to custom fields\n      else {\n         customFields.forEach((f) => {\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            f?.field()?.setValue($$(comp.ids.formItem), rowData);\n\n            comp?.refresh?.(rowData);\n         });\n\n         normalFields.forEach((f) => {\n            if (f.key === \"button\") return;\n\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            field.setValue($$(comp.ids.formItem), rowData);\n         });\n      }\n\n      this.timerId = null;\n   }\n\n   displayParentData(rowData) {\n      const dc = this.datacollection;\n\n      // If the cursor is selected, then it will not update value of the parent field\n      const currCursor = dc.getCursor();\n      if (currCursor) return;\n\n      const relationField = dc.fieldLink;\n      if (!relationField) return;\n\n      const baseView = this.view;\n      // Pull a component of relation field\n      const relationFieldCom = baseView.fieldComponents((comp) => {\n         if (!(comp instanceof ABViewFormItem)) return false;\n\n         return comp.field()?.id === relationField.id;\n      })[0];\n      if (!relationFieldCom) return;\n\n      const relationFieldView = baseView.viewComponents[relationFieldCom.id];\n      if (!relationFieldView) return;\n\n      const $relationFieldView = $$(relationFieldView.ids.formItem),\n         relationName = relationField.relationName();\n\n      // pull data of parent's dc\n      const formData = {};\n\n      formData[relationName] = rowData;\n\n      // set data of parent to default value\n      relationField.setValue($relationFieldView, formData);\n   }\n\n   detatch() {\n      // TODO: remove any handlers we have attached.\n   }\n\n   focusOnFirst() {\n      const baseView = this.view;\n\n      let topPosition = 0;\n      let topPositionId = \"\";\n\n      baseView.views().forEach((item) => {\n         if (item.key === \"textbox\" || item.key === \"numberbox\")\n            if (item.position.y === topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n      });\n\n      const childComponent = baseView.viewComponents[topPositionId];\n\n      if (childComponent && $$(childComponent.ids.formItem))\n         $$(childComponent.ids.formItem).focus();\n   }\n\n   get saveButton() {\n      return $$(this.ids.form)?.queryView({\n         view: \"button\",\n         type: \"form\",\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormConnectComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormConnect_${baseView.id}`,\n         Object.assign(\n            {\n               popup: \"\",\n               editpopup: \"\",\n            },\n            ids\n         )\n      );\n\n      this.addPageComponent = null;\n      this.editPageComponent = null;\n   }\n\n   get field() {\n      return this.view.field();\n   }\n\n   get multiselect() {\n      return this.field?.settings.linkType == \"many\";\n   }\n\n   ui() {\n      const field = this.field;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = this.settings;\n\n      if (!field) {\n         console.error(`This field could not found : ${settings.fieldId}`);\n\n         return super.ui({\n            view: \"label\",\n            label: \"\",\n         });\n      }\n\n      const multiselect = this.multiselect; // field.settings.linkType == \"many\";\n      const formSettings = form?.settings || {};\n      const ids = this.ids;\n\n      let _ui = {\n         id: ids.formItem,\n         view: multiselect ? \"multicombo\" : \"combo\",\n         name: field.columnName,\n         required:\n            field?.settings?.required || parseInt(settings?.required) || false,\n         // label: field.label,\n         // labelWidth: settings.labelWidth,\n         dataFieldId: field.id,\n         on: {\n            onItemClick: (id, e) => {\n               if (\n                  e.target.classList.contains(\"editConnectedPage\") &&\n                  e.target.dataset.itemId\n               ) {\n                  const rowId = e.target.dataset.itemId;\n                  if (!rowId) return;\n                  this.goToEditPage(rowId);\n               }\n            },\n            onChange: (data) => {\n               this._onChange(data);\n            },\n         },\n      };\n\n      if (formSettings.showLabel) {\n         _ui.label = field.label;\n         _ui.labelWidth = formSettings.labelWidth;\n         _ui.labelPosition = formSettings.labelPosition;\n      }\n\n      this.initAddEditTool();\n\n      _ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            data: [],\n            template: `${\n               baseView?.settings?.editForm\n                  ? '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>'\n                  : \"\"\n            }#value#`,\n         },\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.formItem), field, form);\n            },\n         },\n         // Support partial matches\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n      };\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            if (settings.disable === 1) return;\n\n            const rowData = {};\n            const $formItem = $$(ids.formItem);\n\n            if ($formItem) {\n               const node = $formItem.$view;\n\n               field.customEdit(rowData, /* App,*/ node);\n            }\n         },\n      };\n\n      let apcUI = this.addPageComponent?.ui;\n      if (apcUI) {\n         // reset some component vals to make room for button\n         _ui.label = \"\";\n         _ui.labelWidth = 0;\n\n         // add click event to add new button\n         apcUI.on = {\n            onItemClick: (/*id, evt*/) => {\n               // let $form = $$(id).getFormView();\n               this.addPageComponent?.onClick(form.datacollection);\n\n               return false;\n            },\n         };\n\n         _ui = {\n            inputId: ids.formItem,\n            rows: [\n               {\n                  cols: [\n                     {\n                        view: \"label\",\n                        label: field.label,\n                        width: formSettings.labelWidth,\n                        align: \"left\",\n                     },\n                     apcUI,\n                     _ui,\n                  ],\n               },\n            ],\n         };\n\n         _ui = super.ui(_ui);\n      } else {\n         _ui = {\n            inputId: ids.formItem,\n            rows: [_ui],\n         };\n\n         _ui = super.ui(_ui);\n\n         delete _ui.rows[0].id;\n      }\n\n      return _ui;\n   }\n\n   async _onChange(data) {\n      const ids = this.ids;\n      const field = this.field;\n      const baseView = this.view;\n\n      if (this.multiselect) {\n         if (typeof data == \"string\") {\n            data = data.split(\",\");\n         }\n      }\n\n      let selectedValues;\n      if (Array.isArray(data)) {\n         selectedValues = [];\n         data.forEach((record) => {\n            selectedValues.push(record.id || record);\n            // let recordObj = record;\n            // if (typeof record != \"object\") {\n            //    // we need to convert either index or uuid to full data object\n            //    recordObj = field.getItemFromVal(record);\n            // }\n            // if (recordObj?.id) selectedValues.push(recordObj.id);\n         });\n      } else {\n         selectedValues = data;\n         if (typeof data != \"object\") {\n            // we need to convert either index or uuid to full data object\n            selectedValues = field.getItemFromVal(data);\n         }\n         // selectedValues = field.pullRecordRelationValues(selectedValues);\n         if (selectedValues?.id) {\n            selectedValues = selectedValues.id;\n         } else {\n            selectedValues = data;\n         }\n      }\n\n      // We can now set the new value but we need to block event listening\n      // so it doesn't trigger onChange again\n      const $formItem = $$(ids.formItem);\n\n      // Q: if we don't have a $formItem, is any of the rest valid?\n      if ($formItem) {\n         // for xxx->one connections we need to populate again before setting\n         // values because we need to use the selected values to add options\n         // to the UI\n         if (this?.field?.settings?.linkViaType == \"one\") {\n            this.busy();\n            await field.getAndPopulateOptions(\n               $formItem,\n               baseView.options,\n               field,\n               baseView.parentFormComponent()\n            );\n            this.ready();\n         }\n\n         $formItem.blockEvent();\n\n         const prepedVals = selectedValues.join\n            ? selectedValues.join()\n            : selectedValues;\n\n         $formItem.setValue(prepedVals);\n         $formItem.unblockEvent();\n      }\n   }\n\n   async init(AB, options) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if ($formItem) webix.extend($formItem, webix.ProgressBar);\n\n      this.initAddEditTool();\n   }\n\n   initAddEditTool() {\n      const baseView = this.view;\n\n      // Initial add/edit page tools\n      const addFormID = baseView?.settings?.formView;\n      if (addFormID && baseView && !this.addPageComponent) {\n         this.addPageComponent = baseView.addPageTool.component(\n            this.AB,\n            `${baseView.id}_${addFormID}`\n         );\n         this.addPageComponent.applicationLoad(baseView.application);\n         this.addPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n\n      const editFormID = baseView?.settings?.editForm;\n      if (editFormID && baseView && !this.editPageComponent) {\n         this.editPageComponent = baseView.editPageTool.component(\n            this.AB,\n            `${baseView.id}_${editFormID}`\n         );\n         this.editPageComponent.applicationLoad(baseView.application);\n         this.editPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n   }\n\n   async callbackSaveData(saveData) {\n      if (saveData == null) return;\n      else if (!Array.isArray(saveData)) saveData = [saveData];\n\n      const ids = this.ids;\n      const field = this.field;\n\n      // find the select component\n      const $formItem = $$(ids.formItem);\n      if (!$formItem) return;\n\n      // Refresh option list\n      this.busy();\n      field.clearStorage(this.view.settings.filterConditions);\n      const data = await field.getAndPopulateOptions(\n         $formItem,\n         this.view.options,\n         field,\n         this.view.parentFormComponent()\n      );\n      this.ready();\n\n      // field.once(\"option.data\", (data) => {\n      data.forEach((item) => {\n         item.value = item.text;\n      });\n\n      $formItem.getList().clearAll();\n      $formItem.getList().define(\"data\", data);\n\n      if (field.settings.linkType === \"many\") {\n         let selectedItems = $formItem.getValue();\n         saveData.forEach((sData) => {\n            if (selectedItems.indexOf(sData.id) === -1)\n               selectedItems = selectedItems\n                  ? `${selectedItems},${sData.id}`\n                  : sData.id;\n         });\n\n         $formItem.setValue(selectedItems);\n      } else {\n         $formItem.setValue(saveData[0].id);\n      }\n      // close the popup when we are finished\n      // $$(ids.popup)?.close();\n      // $$(ids.editpopup)?.close();\n      // });\n\n      // field.getOptions(this.settings.filterConditions, \"\");\n      // .then(function (data) {\n      //    // we need new option that will be returned from server (above)\n      //    // so we will not set this and then just reset it.\n      // });\n   }\n\n   callbackCancel() {\n      $$(this.ids?.popup)?.close?.();\n\n      return false;\n   }\n\n   callbackClearOnLoad() {\n      return true;\n   }\n\n   getValue(rowData) {\n      return this.field.getValue($$(this.ids.formItem), rowData);\n   }\n\n   formBusy($form) {\n      if (!$form) return;\n\n      $form.disable?.();\n      $form.showProgress?.({ type: \"icon\" });\n   }\n\n   formReady($form) {\n      if (!$form) return;\n\n      $form.enable?.();\n      $form.hideProgress?.();\n   }\n\n   goToEditPage(rowId) {\n      const settings = this.settings;\n\n      if (!settings.editForm) return;\n\n      const editForm = this.view.application.urlResolve(settings.editForm);\n\n      if (!editForm) return;\n\n      const $form = $$(this.ids.formItem).getFormView() || null;\n\n      // Open the form popup\n      this.editPageComponent.onClick().then(() => {\n         const dc = editForm.datacollection;\n\n         if (dc) {\n            dc.setCursor(rowId);\n\n            this.__editFormDcEvent =\n               this.__editFormDcEvent ||\n               dc.on(\"initializedData\", () => {\n                  dc.setCursor(rowId);\n               });\n         }\n      });\n   }\n\n   async onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const field = this.field;\n\n      if (!field) return;\n\n      const node = $formItem.$view;\n\n      if (!node) return;\n\n      const $node = $$(node);\n\n      if (!$node) return;\n\n      const settings = this.settings;\n      let filterConditions = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (settings?.filterConditions?.rules?.length) {\n         filterConditions = this.AB.cloneDeep(\n            this.view.settings.filterConditions\n         );\n      }\n\n      // NOTE: compatible with version 1. This code should not be here too long.\n      if (\n         !filterConditions?.rules?.length &&\n         settings?.objectWorkspace?.filterConditions?.rules?.length\n      ) {\n         filterConditions = this.AB.cloneDeep(\n            settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Add the filter connected value\n      if ((settings?.filterConnectedValue ?? \"\").indexOf(\":\") > -1) {\n         const values = settings.filterConnectedValue.split(\":\"),\n            uiConfigName = values[0],\n            connectFieldId = values[1];\n\n         filterConditions.rules.push({\n            key: connectFieldId,\n            rule: \"filterByConnectValue\",\n            value: uiConfigName,\n         });\n      }\n\n      const getFilterByConnectValues = (conditions, depth = 0) => {\n         return [\n            ...conditions.rules\n               .filter((e) => e.rule === \"filterByConnectValue\")\n               .map((e) => {\n                  const filterByConnectValue = Object.assign({}, e);\n\n                  filterByConnectValue.depth = depth;\n\n                  return filterByConnectValue;\n               }),\n         ].concat(\n            ...conditions.rules\n               .filter((e) => e.glue)\n               .map((e) => getFilterByConnectValues(e, depth + 1))\n         );\n      };\n\n      const baseView = this.view;\n      const filterByConnectValues = getFilterByConnectValues(\n         filterConditions\n      ).map((e) => {\n         for (const key in baseView.parent.viewComponents) {\n            if (\n               !(\n                  baseView.parent.viewComponents[key] instanceof\n                  this.constructor\n               )\n            )\n               continue;\n\n            const $ui = $$(\n               baseView.parent.viewComponents[key]\n                  .ui()\n                  .rows.find((vc) => vc.inputId)?.inputId\n            );\n\n            if ($ui?.config?.name === e.value) {\n               // we need to use the element id stored in the settings to find out what the\n               // ui component id is so later we can use it to look up its current value\n               e.filterValue = $ui;\n\n               break;\n            }\n         }\n\n         const ab = this.AB;\n         const field = ab\n            .objectByID(settings.objectId)\n            .fieldByID(settings.fieldId);\n         const linkedObject = ab.objectByID(field.settings.linkObject);\n         const linkedField = linkedObject.fieldByID(e.key);\n\n         if (linkedField?.settings?.isCustomFK) {\n            // finally if this is a custom foreign key we need the stored columnName by\n            // default uuid is passed for all non CFK\n            e.filterColumn = ab\n               .objectByID(linkedField.settings.linkObject)\n               .fields(\n                  (filter) =>\n                     filter.id === linkedField.settings.indexField ||\n                     linkedField.settings.indexField2\n               )[0].columnName;\n         } else e.filterColumn = null;\n\n         return e;\n      });\n\n      baseView.options = {\n         formView: settings.formView,\n         filters: filterConditions,\n         // NOTE: settings.objectWorkspace.xxx is a depreciated setting.\n         // We will be phasing this out.\n         sort: settings.sortFields ?? settings.objectWorkspace?.sortFields,\n         editable: settings.disable === 1 ? false : true,\n         editPage:\n            !settings.editForm || settings.editForm === \"none\" ? false : true,\n         filterByConnectValues,\n      };\n\n      // if this field's options are filtered off another field's value we need\n      // to make sure the UX helps the user know what to do.\n      // fetch the options and set placeholder text for this view\n      if (baseView.options.editable) {\n         const parentFields = [];\n\n         filterByConnectValues.forEach((fv) => {\n            if (fv.filterValue && fv.key) {\n               const $filterValueConfig = $$(fv.filterValue.config.id);\n\n               let parentField = null;\n\n               if (!$filterValueConfig) {\n                  // this happens in the Interface Builder when only the single form UI is displayed\n                  parentField = {\n                     id: \"perentElement\",\n                     label: this.label(\"PARENT ELEMENT\"),\n                  };\n               } else {\n                  const value = field.getValue($filterValueConfig);\n\n                  if (!value) {\n                     // if there isn't a value on the parent select element set this one to readonly and change placeholder text\n                     parentField = {\n                        id: fv.filterValue.config.id,\n                        label: $filterValueConfig.config.label,\n                     };\n                  }\n\n                  $filterValueConfig.attachEvent(\n                     \"onChange\",\n                     async (e) => {\n                        const parentVal = $filterValueConfig.getValue();\n\n                        if (parentVal) {\n                           $node.define(\"disabled\", false);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Select items\")\n                           );\n                           this.busy();\n                           await field.getAndPopulateOptions(\n                              $node,\n                              baseView.options,\n                              field,\n                              baseView.parentFormComponent()\n                           );\n                           this.ready();\n                        } else {\n                           $node.define(\"disabled\", true);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Must select item from '{0}' first.\", [\n                                 $filterValueConfig.config.label,\n                              ])\n                           );\n                        }\n\n                        // TODO: Do we need to clear selected value?\n                        // $node.setValue(\"\");\n                        $node.refresh();\n                     },\n                     false\n                  );\n               }\n\n               if (\n                  parentField &&\n                  parentFields.findIndex((e) => e.id === parentField.id) < 0\n               )\n                  parentFields.push(parentField);\n            }\n         });\n\n         if (parentFields.length && !$node.getValue()) {\n            $node.define(\"disabled\", true);\n            $node.define(\n               \"placeholder\",\n               this.label(`Must select item from '{0}' first.`, [\n                  parentFields.map((e) => e.label).join(\", \"),\n               ])\n            );\n         } else {\n            $node.define(\"disabled\", false);\n            $node.define(\"placeholder\", this.label(\"Select items\"));\n         }\n      } else {\n         $node.define(\"placeholder\", \"\");\n         $node.define(\"disabled\", true);\n      }\n\n      $node.refresh();\n\n      this.busy();\n      await field.getAndPopulateOptions(\n         // $node,\n         $formItem,\n         baseView.options,\n         field,\n         baseView.parentFormComponent()\n      );\n      this.ready();\n\n      // Add data-cy attributes\n      const dataCy = `${field.key} ${field.columnName} ${field.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      // Need to refresh selected values when they are custom index\n      this._onChange($formItem.getValue());\n   }\n\n   busy() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.disable();\n      $formItem?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.enable();\n      $formItem?.hideProgress?.();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst FocusableTemplate = require(\"../../../../webix_custom_components/focusableTemplate\");\n\nconst DEFAULT_HEIGHT = 80;\n\nmodule.exports = class ABViewFormCustomComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCustom_${baseView.id}`, ids);\n   }\n\n   get new_width() {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = baseView.settings ?? {};\n\n      let newWidth = formSettings.labelWidth;\n\n      if (settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      return newWidth;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = field?.settings ?? baseView.settings ?? {};\n\n      const requiredClass =\n         field?.settings?.required || this.settings.required\n            ? \"webix_required\"\n            : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"box-sizing: border-box; display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"box-sizing: border-box; width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 8px 0 0; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let height = 38;\n      let width = this.new_width;\n\n      if (field instanceof ABFieldImage) {\n         if (settings.useHeight) {\n            if (formSettings.labelPosition === \"top\") {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n               height += 38;\n            } else {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n            }\n         } else if (formSettings.labelPosition === \"top\") {\n            height = DEFAULT_HEIGHT + 38;\n         } else {\n            if (DEFAULT_HEIGHT > 38) {\n               height = DEFAULT_HEIGHT;\n            }\n         }\n         width =\n            settings.useWidth && settings.imageWidth ? settings.imageWidth : 0;\n      } else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         height = DEFAULT_HEIGHT;\n\n      let template = `<div class=\"customField ${formSettings.labelPosition}\">${\n         formSettings.labelPosition == \"top\" ? \"\" : templateLabel\n      }#template#</div>`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field\n               ?.columnHeader({\n                  width: width,\n                  height: height,\n                  editable: true,\n               })\n               .template({}) ?? \"\"\n         );\n\n      if (settings.useWidth == 0) {\n         template = template.replace(\n            /\"ab-image-data-field\" style=\"float: left; width: 100%/g,\n            '\"ab-image-data-field\" style=\"float: left; width: calc(100% - ' +\n               formSettings.labelWidth +\n               \"px)\"\n         );\n      }\n\n      return super.ui({\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         css: \"ab-custom-field\",\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            view: new FocusableTemplate(this.AB._App).key,\n            css: \"customFieldCls\",\n            borderless: true,\n            template: template,\n            height: height,\n            onClick: {\n               customField: (evt, e, trg) => {\n                  if (settings.disable === 1) return;\n\n                  let rowData = {};\n\n                  const formView =\n                     this?.parentFormComponent?.() ||\n                     this.view?.parentFormComponent?.();\n\n                  if (formView) {\n                     const dv = formView.datacollection;\n                     if (dv) rowData = dv.getCursor() || {};\n                  }\n\n                  // var node = $$(ids.formItem).$view;\n                  let node = $$(trg).getParentView().$view;\n                  field?.customEdit(\n                     rowData,\n                     this.AB_App,\n                     node,\n                     this.ids.formItem,\n                     evt\n                  );\n               },\n            },\n         },\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const baseView = this.view;\n      const field = baseView.field(),\n         rowData = {},\n         node = $formItem.$view;\n\n      // Add data-cy attributes\n      const dataCy = `${baseView.key} ${field.key} ${field.columnName} ${baseView.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      const options = {\n         formId: ids.formItem,\n         editable: baseView.settings.disable === 1 ? false : true,\n      };\n\n      if (field instanceof ABFieldImage) {\n         options.height = field.settings.useHeight\n            ? parseInt(field.settings.imageHeight) || DEFAULT_HEIGHT\n            : DEFAULT_HEIGHT;\n         options.width = field.settings.useWidth\n            ? parseInt(field.settings.imageWidth) || 0\n            : 0;\n      }\n\n      field.customDisplay(rowData, this.AB._App, node, options);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormDatepickerComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormDatepicker_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const field = this.view.field();\n\n      const _ui = {\n         view: \"datepicker\",\n         suggest: {\n            body: {\n               view:\n                  this.AB.Account?._config?.languageCode == \"th\"\n                     ? \"thaicalendar\"\n                     : \"calendar\",\n               on: {\n                  onAfterDateSelect: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onTodaySet: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onDateClear: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n               },\n            },\n            on: {\n               onShow: function () {\n                  const text = this.getMasterValue();\n                  const field = self.view.field();\n                  if (!text || !field) return true;\n\n                  const vals = {};\n                  vals[field.columnName] = text;\n                  const date = self.getValue(vals);\n\n                  const $calendar = this.getChildViews()[0];\n                  $calendar.setValue(date);\n               },\n            },\n         },\n      };\n\n      if (!field) return _ui;\n\n      // Ignore date - Only time picker\n      if (field.settings?.dateFormat === 1) _ui.type = \"time\";\n\n      // Date & Time picker\n      if (field.key === \"datetime\" && field.settings?.timeFormat !== 1)\n         _ui.timepicker = true;\n\n      // allows entering characters in datepicker input, false by default\n      _ui.editable = true;\n\n      // default value\n      if (_ui.value && !(_ui.value instanceof Date))\n         _ui.value = new Date(_ui.value);\n\n      // if we have webix locale set, will use the date format form there.\n      if (field !== null && !window.webixLocale) _ui.format = field.getFormat();\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const text = rowData[field.columnName];\n      if (!field || !text) return null;\n\n      // Sentry Fix: caught an error where this.AB was not set, but this.view was...\n      // attempt to catch this situation and post more data:\n      if (!this.AB) {\n         if (this.view.AB) {\n            this.AB = this.view.AB;\n         } else {\n            let errNoAB = new Error(\n               \"ABViewFormDatePicerComponent:getValue(): AB was not set.\"\n            );\n            // sentry logs the console before the error, so dump the offending view here:\n            console.log(\"view:\", JSON.stringify(this.view.toObj()));\n            throw errNoAB;\n         }\n      }\n      const date = this.AB.Webix.Date.strToDate(field.getFormat())(text);\n\n      if (this.AB.Account?._config?.languageCode == \"th\")\n         date.setFullYear(date.getFullYear() - 543);\n\n      return date;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewFormItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormItem_${baseView.id}`,\n         Object.assign({ formItem: \"\" }, ids)\n      );\n   }\n\n   ui(uiFormItemComponent = {}) {\n      // setup 'label' of the element\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field?.() || null,\n         label = \"\";\n      const settings = form?.settings || {};\n      const _uiFormItem = {\n         id: this.ids.formItem,\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label,\n      };\n\n      if (field) {\n         _uiFormItem.name = field.columnName;\n\n         // default value\n         const data = {};\n\n         field.defaultValue(data);\n\n         if (data[field.columnName]) _uiFormItem.value = data[field.columnName];\n\n         if (settings.showLabel) _uiFormItem.label = field.label;\n\n         if (field.settings.required || baseView.settings?.required)\n            _uiFormItem.required = 1;\n\n         if (baseView.settings?.disable === 1) _uiFormItem.disabled = true;\n\n         // add data-cy to form element for better testing code\n         _uiFormItem.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  const popup = this.getPopup();\n\n                  if (!popup) return;\n\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n\n                     // our option.ids are based on builder input and can include the ' character\n                     const node = popup.$view.querySelector(\n                        `[webix_l_id='${(option?.id ?? \"\")\n                           .toString()\n                           .replaceAll(\"'\", \"\\\\'\")}']`\n                     );\n\n                     if (!node) return;\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${\n                           form?.id || \"nf\"\n                        }`\n                     );\n                  });\n               }\n\n               this.getInputNode?.().setAttribute?.(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${\n                     form?.id || \"nf\"\n                  }`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _uiFormItem.validate = (val, data, colName) => {\n            const validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n\n      const _ui = super.ui([\n         Object.assign({}, _uiFormItem, uiFormItemComponent),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormJsonComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormJson_${baseView.id}`, ids);\n      if (this.settings.type == \"filter\") {\n         this.rowFilter = this.AB.filterComplexNew(\n            `${baseView.id}_filterComplex`,\n            {\n               isSaveHidden: true,\n               height: 300,\n               borderless: false,\n               showObjectName: true,\n            }\n         );\n      }\n   }\n\n   getFilterField(instance) {\n      if (\n         instance?.settings?.filterField &&\n         instance?.view?.parent?.viewComponents\n      ) {\n         let filterField = \"\";\n         for (const [key, value] of Object.entries(\n            instance.view.parent.viewComponents\n         )) {\n            if (value.settings.fieldId == instance.settings.filterField) {\n               filterField = value;\n            }\n         }\n\n         if (filterField?.ids?.formItem) {\n            return filterField.ids.formItem;\n         } else {\n            return \"\";\n         }\n      } else {\n         return \"\";\n      }\n   }\n\n   get getSystemObjects() {\n      // get list of all objects in the app\n      let objects = this.AB.objects();\n      // reformat objects into simple array for Webix multicombo\n      // if you do not the data causes a maximum stack error\n      let objectsArray = [];\n      objects.forEach((obj) => {\n         objectsArray.push({ id: obj.id, label: obj.label });\n      });\n      // return the simple array\n      return objectsArray;\n   }\n\n   refreshFilter(values) {\n      if (values) {\n         let fieldDefs = [];\n         values.forEach((obj) => {\n            let object = this.AB.objectByID(obj);\n            let fields = object.fields();\n            if (fields.length) {\n               fields.forEach((f) => {\n                  fieldDefs.push(f);\n               });\n            }\n         });\n         this.rowFilter.fieldsLoad(fieldDefs);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      } else {\n         this.rowFilter.fieldsLoad([]);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      }\n   }\n\n   getValue() {\n      return this.rowFilter.getValue();\n   }\n\n   setValue(formVals) {\n      $$(this.ids.formItem).config.value = formVals;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"string\":\n            _ui.view = \"textarea\";\n            _ui.disabled = true;\n            _ui.height = 200;\n            _ui.format = {\n               parse: function (parsed) {\n                  try {\n                     parsed = JSON.parse(parsed);\n                  } catch (err) {\n                     // already parsed\n                  }\n                  return parsed;\n               },\n               edit: function (stringify) {\n                  try {\n                     stringify = JSON.stringify(stringify);\n                  } catch (err) {\n                     // already a string\n                  }\n                  return stringify;\n               },\n            };\n            break;\n         case \"systemObject\":\n            _ui.view = \"multicombo\";\n            _ui.placeholder = this.label(\"Select one or more system objects\");\n            _ui.button = false;\n            _ui.stringResult = false;\n            _ui.suggest = {\n               selectAll: true,\n               body: {\n                  data: this.getSystemObjects,\n                  template: webix.template(\"#label#\"),\n               },\n            };\n            break;\n         case \"filter\":\n            _ui.view = \"forminput\";\n            _ui.css = \"ab-custom-field\";\n            _ui.body = this.rowFilter.ui;\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   init() {\n      // if (this.settings.type == \"filter\") {\n      //    this.rowFilter.init({ showObjectName: true });\n      // }\n   }\n\n   onShow() {\n      const _ui = this.ui();\n      if (this?.settings?.type == \"filter\") {\n         let filterField = this.getFilterField(this);\n         if (!$$(filterField)) return;\n         $$(filterField).detachEvent(\"onChange\");\n         $$(filterField).attachEvent(\"onChange\", (values) => {\n            this.refreshFilter(values);\n         });\n         this.rowFilter.init({ showObjectName: true });\n         this.rowFilter.on(\"changed\", (val) => {\n            this.setValue(val);\n         });\n         if ($$(this.ids.formItem).config.value) {\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n         } else {\n            this.rowFilter.setValue(\"\");\n         }\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst NumberTextInput = require(\"../../../../webix_custom_components/numbertext\");\n\nmodule.exports = class ABViewFormNumberComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormNumber_${baseView.id}`, ids);\n\n      this._numberTextInputKey = null;\n   }\n\n   get numberTextInputKey() {\n      return (this._numberTextInputKey =\n         this._numberTextInputKey || new NumberTextInput(this.AB._App).key);\n   }\n\n   ui() {\n      return super.ui({\n         view: this.settings.isStepper ? \"counter\" : this.numberTextInputKey,\n         type: \"number\",\n         validate: (val) => !isNaN(val * 1),\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormReadonlyComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormReadonly_${baseView.id}`,\n         Object.assign(\n            {\n               template: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         readonly: true,\n         css: \"ab-readonly-field\",\n         // name: component.ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            id: this.ids.template,\n            view: \"label\",\n            borderless: true,\n            css: { \"background-color\": \"#fff\" },\n            label: \"\",\n         },\n      };\n\n      const settings = baseView.parentFormComponent().settings || {};\n\n      if (settings.showLabel == true && settings.labelPosition == \"top\") {\n         _ui.body.height = 80;\n      } else if (field.settings.useHeight) {\n         _ui.body.height = parseInt(field.settings.imageHeight) || 38;\n      } else _ui.body.height = 38;\n\n      return super.ui(_ui);\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n      $form?.attachEvent(\"onChange\", (newv, oldv) => {\n         const rowData = $form?.getValues() ?? {};\n\n         this.refresh(rowData);\n      });\n   }\n\n   onShow() {\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      if (!field) return null;\n\n      return rowData[field.columnName];\n   }\n\n   refresh(rowData) {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field();\n\n      const formSettings = form.settings || {};\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label\">${field.label}</label>`;\n         else\n            templateLabel = `<label style=\"width: ${formSettings.labelWidth}px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\">${field.label}</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      const template =\n         `<div class=\"readonlyField\">${templateLabel}#template#</div>`.replace(\n            /#template#/g,\n            field\n               .columnHeader({\n                  width: newWidth,\n                  editable: true,\n               })\n               .template(rowData)\n         );\n\n      // Re-build template element\n      $$(this.ids.template)?.setHTML(template);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectMultipleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectMultiple_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = this.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n\n      const ids = this.ids;\n      const _ui = {\n         id: ids.formItem,\n         view: settings.type || baseView.constructor.defaultValues().type,\n         options: options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n\n      switch (_ui.view) {\n         case \"multicombo\":\n            _ui.tagMode = false;\n            _ui.css = \"hideWebixMulticomboTag\";\n            _ui.tagTemplate = (values) => {\n               const selectedOptions = [];\n               const $formItem = $$(ids.formItem) ?? $$(_ui.id);\n\n               values.forEach((val) => {\n                  selectedOptions.push($formItem.getList().getItem(val));\n               });\n\n               let vals = selectedOptions;\n\n               if (field.getSelectedOptions)\n                  vals = field.getSelectedOptions(field, selectedOptions);\n\n               const items = [];\n\n               vals.forEach((val) => {\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (field.settings.hasColors && val.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${val.hex};`;\n                  }\n\n                  const text = val.text ? val.text : val.value;\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${val.id}\"><span>${text}</span><span class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span></span>`\n                  );\n               });\n\n               return items.join(\"\");\n            };\n\n            break;\n\n         case \"checkbox\":\n            // radio element could not be empty options\n            _ui.options.push({\n               id: \"temp\",\n               value: this.label(\"Option\"),\n            });\n\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field(),\n         $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectSingleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectSingle_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = baseView.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n      else options.push(...(settings.options ?? []));\n\n      const _ui = {\n         view: settings.type || baseView.constructor.defaultValues().type,\n      };\n\n      if (field?.settings.hasColors) {\n         _ui.css = \"combowithcolors\";\n         _ui.options = {\n            view: \"suggest\",\n            body: {\n               view: \"list\",\n               data: options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text || opt.value,\n                     hex: field.settings.hasColors ? opt.hex : \"\",\n                  };\n               }),\n               template: function (value) {\n                  const items = [];\n\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (value.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${value.hex};`;\n                  }\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${value.value}</span></span>`\n                  );\n\n                  return items.join(\"\");\n               },\n            },\n         };\n      } else\n         _ui.options = options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text || opt.value,\n            };\n         });\n\n      // radio element could not be empty options\n      if (_ui.view === \"radio\" && _ui.options.length < 1)\n         _ui.options.push({\n            id: \"temp\",\n            value: this.label(\"Option\"),\n         });\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTextboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTextbox_${baseView.id}`, ids);\n      this.type =\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (this.type) {\n         case \"single\":\n            _ui.view = \"text\";\n            break;\n         case \"multiple\":\n            _ui.view = \"textarea\";\n            _ui.height = 200;\n            break;\n         case \"rich\":\n            _ui.view = \"forminput\";\n            _ui.height = 200;\n            _ui.css = \"ab-rich-text\";\n            _ui.body = {\n               view: \"tinymce-editor\",\n               value: \"\",\n               cdn: \"/js/webix/extras/tinymce\",\n               config: {\n                  plugins: \"link\",\n                  menubar: \"format edit\",\n                  toolbar:\n                     \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect | link\",\n               },\n            };\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   async onShow() {\n      if (this.type !== \"rich\") return;\n      await this.initTinyMCE();\n      const _ui = this.ui();\n      const _uiFormItem = _ui.rows[0];\n      let $formItem = $$(this.ids.formItem);\n\n      // WORKAROUND : to fix breaks TinyMCE when switch pages/tabs\n      // https://forum.webix.com/discussion/6772/switching-tabs-breaks-tinymce\n      if ($formItem) {\n         // recreate rich editor\n         $formItem = this.AB.Webix.ui(_uiFormItem, $formItem);\n\n         // Add dataCy to TinyMCE text editor\n         const baseView = this.view;\n\n         $formItem\n            .getChildViews()[0]\n            .getEditor(true)\n            .then((editor) => {\n               const dataCy = `${baseView.key} rich ${_uiFormItem.name} ${\n                  baseView.id ?? \"\"\n               } ${baseView.parent?.id ?? \"\"}`;\n\n               editor.contentAreaContainer.setAttribute(\"data-cy\", dataCy);\n            });\n      }\n   }\n\n   /**\n    * Ensure TinyMCE has been loaded and initialized.\n    */\n   async initTinyMCE() {\n      await this.AB.custom[\"tinymce-editor\"].init();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTreeComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTree_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {};\n\n      // this field may be deleted\n      if (!field) return super.ui(_ui);\n\n      const formSettings = baseView.parentFormComponent().settings || {};\n\n      const requiredClass =\n         field.settings.required === 1 ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n\n      const template = `${templateLabel}#template#`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field.columnHeader({\n               width: newWidth,\n            }).template\n         );\n\n      _ui.view = \"template\";\n      _ui.css = \"webix_el_box\";\n      _ui.height =\n         field.settings.useHeight === 1\n            ? parseInt(field.settings.imageHeight)\n            : 38;\n      _ui.borderless = true;\n\n      _ui.template = `<div class=\"customField\">${template}</div>`;\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            const rowData = {},\n               node = $$(this.ids.formItem).$view;\n\n            rowData[field.columnName] = this.getValue();\n            field.customEdit(rowData, this.AB._App, node, this);\n         },\n      };\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      let vals = $$(this.ids.formItem).getValues();\n\n      // Pass empty string if the returned values is empty array\n      if (Array.isArray(vals) && vals.length === 0) vals = \"\";\n\n      return vals;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewImageComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewImage_${baseView.id}`,\n         Object.assign({ image: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  id: this.ids.image,\n                  view: \"template\",\n                  template: \"\",\n                  height: settings.height,\n                  width: settings.width,\n               },\n               {},\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $image = $$(this.ids.image);\n      if (!$image) return;\n\n      const settings = this.settings;\n\n      if (settings.filename)\n         $image.define(\n            \"template\",\n            `<img src=\"/file/${settings.filename}\" height=\"${settings.height}\" width=\"${settings.width}\">`\n         );\n      else $image.define(\"template\", \"\");\n\n      $image.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFormSidePanel = require(\"../ABViewKanbanFormSidePanel\");\n\nmodule.exports = class ABViewKanbanComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewKanBan_${baseView.id}`,\n         Object.assign(\n            {\n               kanbanView: \"\",\n\n               kanban: \"\",\n               resizer: \"\",\n               formSidePanel: \"\",\n            },\n            ids\n         )\n      );\n\n      this.FormSide = new ABFormSidePanel(\n         this,\n         this.ids.formSidePanel,\n         this.settings.editFields\n      );\n\n      this.CurrentVerticalField = null;\n      this.CurrentHorizontalField = null;\n      this.CurrentOwnerField = null;\n\n      this.TextTemplate = baseView.TextTemplate;\n\n      this._updatingOwnerRowId = null;\n      this._ABFieldConnect = null;\n      this._ABFieldUser = null;\n      this._ABFieldList = null;\n   }\n\n   get ABFieldConnect() {\n      return (this._ABFieldConnect =\n         this._ABFieldConnect ||\n         this.AB.Class.ABFieldManager.fieldByKey(\"connectObject\"));\n   }\n\n   get ABFieldUser() {\n      return (this._ABFieldUser =\n         this._ABFieldUser || this.AB.Class.ABFieldManager.fieldByKey(\"user\"));\n   }\n\n   get ABFieldList() {\n      return (this._ABFieldList =\n         this._ABFieldList || this.AB.Class.ABFieldManager.fieldByKey(\"list\"));\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      this.linkPage = this.view.linkPageHelper.component();\n\n      const _ui = super.ui([\n         {\n            id: ids.kanbanView,\n            cols: [\n               {\n                  id: ids.kanban,\n                  view: \"kanban\",\n                  cols: [],\n                  userList: {\n                     view: \"menu\",\n                     // yCount: 8,\n                     // scroll: false,\n                     template: '<i class=\"fa fa-user\"></i> #value#',\n                     width: 150,\n                     on: {\n                        onSelectChange: function () {\n                           // get this row id from onAvatarClick event\n                           if (!self._updatingOwnerRowId) return;\n\n                           const userId = this.getSelectedId(false);\n                           if (!userId) return;\n\n                           self.updateOwner(self._updatingOwnerRowId, userId);\n                        },\n                     },\n                  },\n                  editor: false, // we use side bar\n                  users: [],\n                  tags: [],\n                  data: [],\n                  on: {\n                     onListAfterSelect: (itemId, list) => {\n                        this.CurrentDatacollection?.setCursor(itemId);\n                        this.emit(\"select\", itemId);\n\n                        // link pages events\n                        const editPage = this.settings.editPage;\n                        if (editPage)\n                           this.linkPage.changePage(editPage, itemId);\n\n                        const detailsPage = this.settings.detailsPage;\n                        if (detailsPage)\n                           this.linkPage.changePage(detailsPage, itemId);\n                     },\n                     onAfterStatusChange: (rowId, status /*, list */) => {\n                        this.updateStatus(rowId, status);\n                     },\n                     onAvatarClick: (rowId /*, ev, node, list */) => {\n                        // keep this row id for update owner data in .userList\n                        this._updatingOwnerRowId = rowId;\n                     },\n                  },\n               },\n               {\n                  id: ids.resizer,\n                  view: \"resizer\",\n                  css: \"bg_gray\",\n                  width: 11,\n                  hidden: true,\n               },\n               this.FormSide.ui(),\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const abWebix = this.AB.Webix;\n\n      if (this.$kb) abWebix.extend(this.$kb, abWebix.ProgressBar);\n\n      this.FormSide.init(AB);\n      this.FormSide.on(\"add\", (newVals) => {\n         this.saveData(newVals);\n      });\n      this.FormSide.on(\"update\", (updateVals) => {\n         this.saveData(updateVals);\n      });\n\n      let dc = this.view.datacollection;\n      if (dc) this.datacollectionLoad(dc);\n\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      this.show();\n   }\n\n   get $kb() {\n      return (this._kb = this._kb || $$(this.ids.kanban));\n   }\n\n   kanbanListTemplate() {\n      return {\n         icons: [\n            // { icon: \"mdi mdi-comment\", show: function (obj) { return !!obj.comments }, template: \"#comments.length#\" },\n            {\n               icon: \"fa fa-trash-o\",\n               click: (rowId /*, e */) => {\n                  this.removeCard(rowId);\n               },\n            },\n         ],\n         // avatar template\n         templateAvatar: (obj) => {\n            if (\n               this.CurrentOwnerField &&\n               obj[this.CurrentOwnerField.columnName]\n            )\n               return this.CurrentOwnerField.format(obj);\n            else return \"<span class='webix_icon fa fa-user'></span>\";\n         },\n         // template for item body\n         // show item image and text\n         templateBody: (data) => {\n            // if (!this.settings.template)\n            if (!this.TextTemplate.text)\n               return this.CurrentObject?.displayData(data);\n\n            // return our default text template\n            return this.TextTemplate.displayText(data);\n         },\n      };\n   }\n\n   /**\n    * @function hide()\n    *\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.kanbanView)?.hide();\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   async show() {\n      const ids = this.ids;\n\n      $$(ids.kanbanView)?.show();\n\n      this.FormSide.hide();\n\n      $$(ids.resizer)?.hide();\n\n      var CurrentObject = this.CurrentObject;\n      if (!CurrentObject) {\n         CurrentObject = this.datacollection?.datasource;\n      }\n      if (!CurrentObject) return;\n\n      // Get vertical grouping field and populate to kanban list\n      // NOTE: this field should be the select list type\n      const CurrentVerticalField = CurrentObject.fieldByID(\n         this.settings.verticalGroupingField\n      );\n      if (!CurrentVerticalField) return;\n\n      this.CurrentVerticalField = CurrentVerticalField;\n\n      let horizontalOptions = [];\n\n      const CurrentHorizontalField = CurrentObject.fieldByID(\n         this.settings.horizontalGroupingField\n      );\n\n      this.CurrentHorizontalField = CurrentHorizontalField;\n\n      if (\n         CurrentHorizontalField &&\n         CurrentHorizontalField instanceof this.ABFieldConnect\n      )\n         // Pull horizontal options\n         horizontalOptions = await CurrentHorizontalField.getOptions();\n\n      // Option format -  { id: \"1543563751920\", text: \"Normal\", hex: \"#4CAF50\" }\n      const verticalOptions = (CurrentVerticalField.settings.options || []).map(\n         (opt) => {\n            // Vertical & Horizontal fields\n            if (CurrentVerticalField && CurrentHorizontalField) {\n               let rows = [],\n                  // [{\n                  //    id: '',\n                  //    text: ''\n                  // }]\n                  horizontalVals = [];\n\n               // pull options of the Horizontal field\n               if (CurrentHorizontalField instanceof this.ABFieldList) {\n                  // make a copy of the settings.\n                  horizontalVals = (\n                     CurrentHorizontalField.settings.options || []\n                  ).map((o) => o);\n               } else if (CurrentHorizontalField instanceof this.ABFieldUser) {\n                  horizontalVals = CurrentHorizontalField.getUsers().map(\n                     (u) => {\n                        return {\n                           id: u.id,\n                           text: u.text || u.value,\n                        };\n                     }\n                  );\n               } else if (CurrentHorizontalField instanceof this.ABFieldConnect)\n                  horizontalVals = horizontalOptions.map(({ id, text }) => ({\n                     id,\n                     text,\n                  }));\n\n               horizontalVals.push({\n                  id: null,\n                  text: this.label(\"Other\"),\n               });\n\n               horizontalVals.forEach((val) => {\n                  const statusOps = {};\n\n                  statusOps[CurrentVerticalField.columnName] = opt.id;\n                  statusOps[CurrentHorizontalField.columnName] = val.id;\n\n                  // Header\n                  rows.push({\n                     template: val.text,\n                     height: 20,\n                     css: \"progress_header\",\n                  });\n\n                  // Kanban list\n                  rows.push({\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  });\n               });\n\n               return {\n                  header: opt.text,\n                  body: {\n                     margin: 0,\n                     rows: rows,\n                  },\n               };\n            }\n            // Vertical field only\n            else if (CurrentVerticalField) {\n               const statusOps = {};\n\n               statusOps[CurrentVerticalField.columnName] = opt.id;\n\n               return {\n                  header: opt.text,\n                  body: {\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  },\n               };\n            }\n         }\n      );\n\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      // Rebuild kanban that contains options\n      // NOTE: webix kanban does not support dynamic vertical list\n      abWebix.ui(verticalOptions, $$(ids.kanban));\n      $$(ids.kanban).reconstruct();\n\n      // Owner field\n      const CurrentOwnerField = CurrentObject.fieldByID(\n         this.settings.ownerField\n      );\n\n      this.CurrentOwnerField = CurrentOwnerField;\n\n      if (CurrentOwnerField) {\n         const $menuUser = $$(ids.kanban).getUserList();\n\n         $menuUser.clearAll();\n\n         if (CurrentOwnerField instanceof this.ABFieldUser) {\n            const users = ab.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            });\n\n            $menuUser.parse(users);\n         } else if (CurrentOwnerField instanceof this.ABFieldConnect) {\n            const options = await CurrentOwnerField.getOptions();\n\n            try {\n               $menuUser.parse(\n                  options.map((opt) => {\n                     return {\n                        id: opt.id,\n                        value: opt.text,\n                     };\n                  })\n               );\n            } catch (e) {\n               // TODO: remove this.  Trying to catch a random webix error:\n               // Cannot read properties of null (reading 'driver')\n               console.error(e);\n               console.warn(options);\n            }\n         }\n      }\n   }\n\n   busy() {\n      this.$kb?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      this.$kb?.hideProgress?.();\n   }\n\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      this.TextTemplate.objectLoad(object);\n      this.FormSide.objectLoad(object);\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const DC = this.CurrentDatacollection || datacollection;\n\n      if (DC) {\n         DC.bind(this.$kb);\n\n         const obj = DC.datasource;\n\n         if (obj) this.objectLoad(obj);\n\n         return;\n      }\n\n      this.$kb.unbind();\n   }\n\n   async updateStatus(rowId, status) {\n      if (!this.CurrentVerticalField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n\n      // update multi-values\n      if (status instanceof Object) patch = status;\n      // update single value\n      else patch[this.CurrentVerticalField.columnName] = status;\n\n      // update empty value\n      let needRefresh = false;\n\n      for (const key in patch)\n         if (!patch[key]) {\n            patch[key] = \"\";\n\n            // WORKAROUND: if update data is empty, then it will need to refresh\n            // the kanban after update\n            needRefresh = true;\n         }\n\n      try {\n         await this.CurrentObject?.model().update(rowId, patch);\n\n         this.ready();\n\n         if (needRefresh) this.show();\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = $$(this.ids.kanban).getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateStatus(): Error saving item:\",\n            rowId,\n            patch,\n         });\n      }\n   }\n\n   async updateOwner(rowId, val) {\n      if (!this.CurrentOwnerField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      const patch = {};\n\n      patch[this.CurrentOwnerField.columnName] = val;\n\n      try {\n         const updatedRow = await this.CurrentObject?.model().update(\n            rowId,\n            patch\n         );\n\n         // update card\n         this.$kb?.updateItem(rowId, updatedRow);\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = this.$kb.getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n\n         this.ready();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateOwner(): Error saving item:\",\n            rowId,\n            val,\n         });\n\n         this.ready();\n      }\n   }\n\n   saveData(data) {\n      // update\n      if (data.id && this.$kb.exists(data.id))\n         this.$kb.updateItem(data.id, data);\n      // insert\n      else this.$kb.add(data);\n   }\n\n   unselect() {\n      if (this.$kb)\n         this.$kb.eachList((list /*, status*/) => {\n            list?.unselect?.();\n         });\n   }\n\n   addCard() {\n      this.unselect();\n\n      // show the side form\n      this.FormSide.show();\n      $$(this.ids.resizer).show();\n   }\n\n   async removeCard(rowId) {\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      abWebix.confirm({\n         title: this.label(\"Remove card\"),\n         text: this.label(\"Do you want to delete this card?\"),\n         callback: async (result) => {\n            if (!result) return;\n\n            this.busy();\n\n            try {\n               const response = await this.CurrentObject?.model().delete(rowId);\n\n               if (response.numRows > 0) {\n                  this.$kb.remove(rowId);\n               } else {\n                  abWebix.alert({\n                     text: this.label(\n                        \"No rows were effected. This does not seem right.\"\n                     ),\n                  });\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  message: \"ABViewKanban:removeCard(): Error deleting item:\",\n                  rowId,\n               });\n            }\n\n            this.ready();\n         },\n      });\n   }\n\n   /**\n    * @method setFields()\n    * Save the current view options.\n    * @param options - {\n    *       verticalGrouping:    {ABField} - required\n    *       horizontalGrouping:  {ABField} - optional\n    *       ownerField:          {ABField} - optional\n    * }\n    */\n   setFields(options) {\n      this.CurrentVerticalField = options.verticalGrouping;\n      this.CurrentHorizontalField = options.horizontalGrouping;\n      this.CurrentOwnerField = options.ownerField;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLabelComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLabel_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      const _ui = super.ui([\n         this.uiFormatting({\n            view: \"label\",\n            // css: 'ab-component-header ab-ellipses-text',\n            label: baseView.text || \"*\",\n            align: this.settings.alignment,\n            type: {\n               height: \"auto\",\n            },\n         }),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   /**\n    * @method uiFormatting\n    * a common routine to properly update the displayed label\n    * UI with the css formatting for the given .settings\n    * @param {obj} _ui the current webix.ui definition\n    * @return {obj} a properly formatted webix.ui definition\n    */\n   uiFormatting(ui) {\n      // add different css settings based upon it's format\n      // type.\n      switch (parseInt(this.settings.format)) {\n         // normal\n         case 0:\n            ui.css = \"ab-component-label ab-ellipses-text\";\n            break;\n\n         // title\n         case 1:\n            ui.css = \"ab-component-header ab-ellipses-text\";\n            break;\n\n         // description\n         case 2:\n            ui.css = \"ab-component-description ab-ellipses-text\";\n            break;\n      }\n\n      return ui;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLayoutComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLayout_${baseView.id}`, ids);\n\n      const viewComponents = this.viewComponents ?? {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      baseView.views().forEach((v) => {\n         viewComponents[v.id] = v.component();\n      });\n\n      this.viewComponents = viewComponents;\n   }\n\n   ui() {\n      const viewComponents = this.viewComponents;\n      const uiComponents = Object.keys(viewComponents)\n         .map((vId) => viewComponents[vId].ui())\n         .filter((ui) => ui);\n\n      if (uiComponents.length == 0) {\n         uiComponents.push({});\n         uiComponents.push({\n            view: \"label\",\n            label: this.label(\"no content\"),\n         });\n         uiComponents.push({});\n      }\n\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            cols: uiComponents,\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      // make sure each of our child views get .init() called\n      baseView.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n\n         // initial sub-component\n         component?.init(AB, accessLevel);\n\n         // Trigger 'changePage' event to parent\n         baseView.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               baseView.changePage(pageId);\n            },\n         });\n      });\n   }\n\n   onShow() {\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n         component?.onShow();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewListComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewList_${baseView.id}`,\n         Object.assign({ list: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _uiList = {\n         id: this.ids.list,\n         view: \"dataview\",\n         type: {\n            width: 1000,\n            height: 30,\n         },\n         template: (item) => {\n            const field = this.view.field();\n\n            if (!field) return \"\";\n\n            return field.format(item);\n         },\n      };\n\n      // set height or autoHeight\n      if (settings.height !== 0) _uiList.height = settings.height;\n      else _uiList.autoHeight = true;\n\n      const _ui = super.ui([_uiList]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // bind dc to component\n      dc.bind($$(this.ids.list));\n      // $$(ids.list).sync(dv);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewMenuComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewMenu_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         parseInt(settings.menuInToolbar) ? this.uiToolbar() : this.uiMenu(),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiMenu() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const css = `${settings.buttonStyle || defaultSettings.buttonStyle} ${\n         settings.menuAlignment || defaultSettings.menuAlignment\n      } `;\n\n      return {\n         id: this.ids.menu,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout: settings.orientation || defaultSettings.orientation,\n         on: {\n            onMenuItemClick: (id /*, e, node */) => {\n               this.onClick(id);\n            },\n            onAfterRender: () => {\n               this.defineCypress();\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n   }\n\n   uiToolbar() {\n      const settings = this.settings;\n      const baseView = this.view;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const _uiMenu = this.uiMenu();\n\n      let elems = [];\n      let menuIncluded = false;\n\n      // Legacy support: use old settings values if translated values are not set\n      const menuTextLeft = baseView.menuTextLeft ?? settings.menuTextLeft;\n      const menuTextCenter = baseView.menuTextCenter ?? settings.menuTextCenter;\n      const menuTextRight = baseView.menuTextRight ?? settings.menuTextRight;\n\n      if (settings.menuPosition === \"left\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextLeft?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextLeft,\n            align: \"left\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"center\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextCenter?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push(\n            {},\n            {\n               view: \"label\",\n               label: menuTextCenter,\n               align: \"center\",\n               width: width,\n            },\n            {}\n         );\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"right\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextRight?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextRight,\n            align: \"right\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (menuIncluded === false) elems = [_uiMenu];\n\n      return {\n         view: \"toolbar\",\n         css: settings.menuTheme ?? defaultSettings.menuTheme,\n         padding: settings.menuPadding\n            ? parseInt(settings.menuPadding)\n            : defaultSettings.menuPadding,\n         elements: elems,\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $menu = $$(this.ids.menu);\n      const baseView = this.view;\n\n      if ($menu) {\n         const settings = this.settings;\n\n         baseView.ClearPagesInView($menu);\n\n         if (settings.order?.length) {\n            baseView.AddPagesToView($menu, settings.order);\n            // Force onAfterRender to fire\n            $menu.refresh();\n         }\n      }\n   }\n\n   onClick(itemId) {\n      const $menu = $$(this.ids.menu);\n      let $item;\n      try {\n         $item = $menu.getMenuItem(itemId);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context:\n               \"ABViewMenuComponent > onClick error gettint menu / menu item\",\n            itemId,\n            menu: {\n               id: this.view.id,\n               settings: this.view.settings,\n            },\n         });\n         return;\n      }\n      const baseView = this.view;\n\n      // switch tab view\n      if ($item.type === \"tab\") {\n         baseView.changePage($item.pageId);\n\n         const redirectPage = baseView.application.pages(\n            (p) => p.id === $item.pageId,\n            true\n         )[0];\n\n         if (!redirectPage) return;\n\n         const tabView = redirectPage.views((v) => v.id === $item.id, true)[0];\n\n         if (!tabView) return;\n\n         const tab = tabView.parent;\n\n         if (!tab) return;\n\n         this.toggleParent(tab);\n\n         // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n         const showIt = setInterval(() => {\n            if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n               clearInterval(showIt);\n\n               return;\n            }\n\n            tab.emit(\"changeTab\", tabView.id);\n         }, 100);\n         // }\n      }\n      // switch page\n      else baseView.changePage(itemId);\n   }\n\n   toggleParent(element) {\n      if (!element.parent) return false;\n\n      const parentElem = element.parent;\n\n      if (!parentElem?.parent) return false;\n\n      parentElem.parent.emit(\"changeTab\", parentElem.id);\n      this.toggleParent(parentElem.parent);\n   }\n\n   defineCypress() {\n      const $menu = $$(this.ids.menu);\n\n      if (!$menu) return;\n\n      $menu.data.each((item) => {\n         const node = $menu.getItemNode(item.id);\n\n         if (!node) return;\n\n         // get linked page/tab info so we can use its name in the data-cy\n         const viewInfo = this.AB.definitionByID(item.id);\n\n         node.setAttribute(\n            \"data-cy\",\n            `menu-item ${viewInfo?.name} ${item.id} ${this.view.id}`\n         );\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SMALL_PAGE_WIDTH = 150;\nconst BIG_PAGE_WIDTH = 250;\n\nmodule.exports = class ABViewPDFImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPDFImporter_${baseView.id}`,\n         Object.assign(\n            {\n               fileUploader: \"\",\n               uploadList: \"\",\n               dataview: \"\",\n               fullImagePopup: \"\",\n               fullImageCarousel: \"\",\n               fullImageSelectToggle: \"\",\n               fullImageLabel: \"\",\n               selectAll: \"\",\n               unselectAll: \"\",\n               submit: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const _ui = super.ui([\n         {\n            rows: [\n               {\n                  cols: [\n                     {\n                        id: ids.fileUploader,\n                        view: \"uploader\",\n                        name: \"records\",\n                        link: ids.uploadList,\n                        label: this.label(\"Upload a PDF file\"),\n                        inputWidth: 200,\n                        width: 210,\n                        accept: \"application/pdf\",\n                        multiple: false,\n                        autosend: false,\n                        type: \"icon\",\n                        icon: \"fa fa-file-pdf-o\",\n                        on: {\n                           onBeforeFileAdd: (fileInfo) => {\n                              this._csvFileInfo = fileInfo;\n                              if (!this._csvFileInfo) return false;\n\n                              this.loadFile();\n\n                              return true;\n                           },\n                        },\n                     },\n                     {\n                        id: ids.uploadList,\n                        view: \"list\",\n                        type: \"uploader\",\n                        autoheight: true,\n                        borderless: true,\n                        onClick: {\n                           webix_remove_upload: (e, id) => {\n                              this.removeFile(id);\n                           },\n                        },\n                     },\n                     {\n                        width: 10,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th-large\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displayBig();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displaySmall();\n                        },\n                     },\n                  ],\n               },\n               {\n                  height: 10,\n               },\n               {\n                  id: ids.dataview,\n                  view: \"dataview\",\n                  borderless: true,\n                  css: \"pdf-data-view\",\n                  multiselect: false,\n                  select: false,\n                  type: {\n                     template: (item) => {\n                        return this.pageTemplate(item);\n                     },\n                     width: \"auto\",\n                     height: \"auto\",\n                  },\n                  on: {\n                     onSelectChange: (pageIds) => {\n                        this.renderPageImages();\n                     },\n                     onItemClick: function (id, e, node) {\n                        // Unselect\n                        if (e?.target?.className?.includes?.(\"unselect-page\")) {\n                           self.unselect(id);\n                        }\n                        // Select\n                        else if (\n                           e?.target?.className?.includes?.(\"select-page\")\n                        ) {\n                           self.select(id);\n                        }\n                        // Zoom\n                        else if (e?.target?.className?.includes?.(\"pdf-zoom\")) {\n                           self._fullImagePopup.show();\n                           $$(self.ids.fullImageCarousel).setActiveIndex(\n                              parseInt(id ?? 0) - 1\n                           );\n                           self.refreshFullImage();\n                        }\n                     },\n                  },\n               },\n               {\n                  height: 10,\n               },\n               {\n                  cols: [\n                     {\n                        id: ids.selectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-check-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Select All\"),\n                        click: () => {\n                           this.selectAll();\n                        },\n                     },\n                     {\n                        id: ids.unselectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Unselect All\"),\n                        click: () => {\n                           this.unselectAll();\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.submit,\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-floppy-o\",\n                        disabled: true,\n                        maxWidth: 180,\n                        label: this.label(\"Submit\"),\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n      ]);\n\n      return _ui;\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n      return {\n         id: ids.fullImagePopup,\n         view: \"window\",\n         modal: true,\n         position: \"center\",\n         headHeight: 25,\n         head: {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"button\",\n                  type: \"icon\",\n                  icon: \"fa fa-times\",\n                  maxWidth: 25,\n                  height: 25,\n                  click: () => {\n                     $$(ids.fullImagePopup)?.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            rows: [\n               {\n                  id: ids.fullImageCarousel,\n                  view: \"carousel\",\n                  width: 600,\n                  height: 500,\n                  navigation: {\n                     items: true,\n                     buttons: true,\n                     type: \"side\",\n                  },\n                  cols: [],\n                  on: {\n                     onShow: () => {\n                        this.refreshFullImage();\n                     },\n                  },\n               },\n               {\n                  view: \"layout\",\n                  cols: [\n                     {\n                        id: ids.fullImageSelectToggle,\n                        view: \"toggle\",\n                        type: \"icon\",\n                        offIcon: \"fa fa-square-o\",\n                        onIcon: \"fa fa-check-square-o\",\n                        offLabel: this.label(\"Unselected\"),\n                        onLabel: this.label(\"Selected\"),\n                        width: 130,\n                        on: {\n                           onChange: (isSelected) => {\n                              const activeIndex = $$(\n                                 this.ids.fullImageCarousel\n                              ).getActiveIndex();\n                              const pageNumber = activeIndex + 1;\n\n                              if (isSelected) this.select(pageNumber);\n                              else this.unselect(pageNumber);\n                           },\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.fullImageLabel,\n                        view: \"label\",\n                        width: 120,\n                        label: `${this.label(\"Page Number\")}: ${\"#\"}`,\n                     },\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $dataview = $$(this.ids.dataview);\n      if ($dataview) this.AB.Webix.extend($dataview, webix.ProgressBar);\n\n      if (!this._fullImagePopup) {\n         const fullImagePopup = this.uiPopup();\n         this._fullImagePopup = this.AB.Webix.ui(fullImagePopup);\n      }\n   }\n\n   onShow() {\n      this.initPdfjs();\n      super.onShow();\n   }\n\n   /**\n    * Loads the pdfjs dependecies. We defer loading since it is a large library\n    * that is not needed in the initial page load.\n    */\n   async initPdfjs() {\n      if (this.pdfjs && window.pdfjsWorker) return;\n      this.busy();\n      this.pdfjs = (\n         await import(\n            /* webpackPrefetch: true */\n            \"../../../../init/pdfjs\"\n         )\n      ).default;\n\n      this.ready();\n   }\n\n   async _readFileBuffer() {\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo || !_csvFileInfo.file)\n         return Promise.resolve(new ArrayBuffer(0));\n\n      const fileReader = new FileReader();\n\n      return new Promise((resolve, reject) => {\n         fileReader.onload = (event) => {\n            const fileBuffer = event.target.result;\n            resolve(fileBuffer);\n         };\n         fileReader.onerror = (event) => {\n            reject(event);\n         };\n         fileReader.readAsArrayBuffer(_csvFileInfo.file);\n      });\n   }\n\n   async _toBlob(pageNumber, canvas) {\n      if (!canvas) return;\n\n      return new Promise((resolve, reject) => {\n         canvas.toBlob((blob) => {\n            const file = new File([blob], `${pageNumber}.png`, {\n               type: \"image/png\",\n            });\n\n            resolve(file);\n         }, \"image/png\");\n      });\n   }\n\n   async _uploadImage(pageNumber) {\n      // Create a temporary CANVAS dom to render page image with specify the height\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const canvasId = `${this.view.id}_temp_canvas`;\n      const canvas =\n         document.getElementById(canvasId) ?? document.createElement(\"canvas\");\n      canvas.id = canvasId;\n      canvas.width = $carousel.config.width - 20;\n\n      await this.showPage(pageNumber, canvas);\n      const fileBlob = await this._toBlob(pageNumber, canvas);\n\n      return new Promise((resolve, reject) => {\n         // Create a uploader to upload images\n         const $uploader = this.AB.Webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: this.field.urlUpload(),\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when upload is complete:\n               onFileUpload: (item, response) => {\n                  // RETURN HERE\n                  resolve(response?.data?.uuid);\n               },\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  reject(response);\n               },\n               onUploadComplete: () => $uploader.destructor(),\n            },\n         });\n\n         $uploader.addFile(fileBlob, fileBlob.size);\n      });\n   }\n\n   _increaseProgressValue() {\n      const $dataview = $$(this.ids.dataview);\n      const maxProgressStep = ($dataview.getSelectedId(true) ?? []).length * 2;\n\n      this._progressSteps = this._progressSteps ?? 0;\n      this._progressSteps++;\n\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: this._progressSteps / maxProgressStep,\n      });\n   }\n\n   async loadFile() {\n      this.clearDataview();\n\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo) return;\n\n      const fileBuffer = await this._readFileBuffer();\n      this._pdfDoc = await this.pdfjs.getDocument(fileBuffer).promise;\n\n      const total_page = this._pdfDoc.numPages;\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const carousel_list = [];\n      for (let pageNumber = 1; pageNumber <= total_page; pageNumber++) {\n         $dataview.add({\n            id: pageNumber,\n            pageNumber,\n         });\n\n         carousel_list.push({\n            template: (item) => {\n               return this.fullImageTemplate(item);\n            },\n            data: {\n               pageNumber,\n            },\n         });\n      }\n\n      this.renderPageImages();\n      if ($carousel) this.AB.Webix.ui(carousel_list, $carousel);\n\n      // Select all of images by default\n      this.selectAll();\n\n      $$(this.ids.submit)?.enable();\n   }\n\n   removeFile(id) {\n      $$(this.ids.uploadList)?.remove(id);\n\n      delete this._pdfDoc;\n      delete this._csvFileInfo;\n      this.clearDataview();\n\n      $$(this.ids.submit)?.disable();\n\n      return true;\n   }\n\n   pageTemplateId(pageNumber) {\n      return `pdf-importer-${this.view.id}-${pageNumber}`;\n   }\n\n   pageTemplate(item) {\n      const $dataview = $$(this.ids.dataview);\n      let selectedPageIds = $dataview.getSelectedId(true);\n\n      return `\n      <div>\n         <div class=\"pdf-data-view-item\">\n            <div>\n            ${\n               selectedPageIds.filter((pageId) => pageId == item.id).length\n                  ? '<i class=\"unselect-page fa fa-check-square-o\"></i>'\n                  : '<i class=\"select-page fa fa-square-o\"></i>'\n            }\n            </div>\n            <div style=\"width: 15px;\">\n               ${item.pageNumber}\n            </div>\n         </div>\n         <div class=\"pdf-zoom pdf-data-view-image\">\n            <canvas class=\"pdf-zoom\" width=\"${\n               this.pageItemWidth\n            }\" id=\"${this.pageTemplateId(item.pageNumber)}\"></canvas>\n            <div class=\"pdf-zoom pdf-data-view-image-icon\">\n               <i class=\"pdf-zoom fa fa-search-plus fa-4x\"></i>\n            </div>\n         </div>\n      </div>\n      `;\n   }\n\n   renderPageImages() {\n      const $dataview = $$(this.ids.dataview);\n      $dataview?.find({}).forEach((item) => {\n         const canvas_dom = document.querySelector(\n            `#${this.pageTemplateId(item.pageNumber)}`\n         );\n         this.showPage(item.pageNumber, canvas_dom);\n      });\n   }\n\n   async showPage(pageNumber, canvas_dom) {\n      if (!this._pdfDoc) return;\n\n      pageNumber = parseInt(pageNumber);\n      const page = await this._pdfDoc.getPage(pageNumber);\n      const pdf_original_width = page.getViewport({ scale: 1 }).width;\n      const scale_required = canvas_dom.width / pdf_original_width;\n\n      // get viewport to render the page at required scale\n      const viewport = page.getViewport({ scale: scale_required });\n      canvas_dom.height = viewport.height;\n\n      return page.render({\n         canvasContext: canvas_dom.getContext(\"2d\"),\n         viewport: viewport,\n      }).promise;\n   }\n\n   clearDataview() {\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n\n      $dataview?.clearAll();\n      if ($carousel)\n         this.AB.Webix.ui(\n            [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: $carousel.height,\n                  label: this.label(\"No image\"),\n               },\n            ],\n            $carousel\n         );\n   }\n\n   displaySmall() {\n      this._isDisplayBig = false;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   displayBig() {\n      this._isDisplayBig = true;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   get pageItemWidth() {\n      return this._isDisplayBig ? BIG_PAGE_WIDTH : SMALL_PAGE_WIDTH;\n   }\n\n   select(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds.push(pageNumber);\n      selectedIds = selectedIds.filter((pageId) => pageId);\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   unselect(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds = selectedIds.filter(\n         (pageId) => pageId && pageId != pageNumber\n      );\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   selectAll() {\n      $$(this.ids.dataview)?.selectAll();\n   }\n\n   unselectAll() {\n      $$(this.ids.dataview)?.unselectAll();\n   }\n\n   fullImageTemplateId(pageNumber) {\n      return `${this.pageTemplateId(pageNumber)}_full_size`;\n   }\n\n   fullImageTemplate(item) {\n      const $carousel = $$(this.ids.fullImageCarousel);\n      return `<canvas width=\"${\n         $carousel.config.width - 20\n      }\" id=\"${this.fullImageTemplateId(item.pageNumber)}\"></canvas>`;\n   }\n\n   refreshFullImage() {\n      const ids = this.ids;\n      const activeIndex = $$(ids.fullImageCarousel).getActiveIndex();\n      const pageNumber = activeIndex + 1;\n      const canvas_dom = document.querySelector(\n         `#${this.fullImageTemplateId(pageNumber)}`\n      );\n      this.showPage(pageNumber, canvas_dom);\n\n      const selectedPageIds = $$(ids.dataview).getSelectedId(true);\n      const isSelected =\n         selectedPageIds.filter((pageId) => pageId == pageNumber).length > 0;\n      $$(ids.fullImageSelectToggle).setValue(isSelected);\n\n      $$(ids.fullImageLabel).setValue(\n         `${this.label(\"Page Number\")}: ${pageNumber}`\n      );\n   }\n\n   get object() {\n      return this.view.datacollection?.datasource;\n   }\n\n   get field() {\n      return this.object?.fields?.(\n         (f) => f.id == this.view.settings.fieldID\n      )[0];\n   }\n\n   busy() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.disable();\n      $uploadList?.disable();\n      $submit?.disable();\n      $selectAll?.disable();\n      $unselectAll?.disable();\n      $selectToggle?.disable();\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: 0.001,\n      });\n   }\n\n   ready() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.enable();\n      $uploadList?.enable();\n      $submit?.enable();\n      $selectAll?.enable();\n      $unselectAll?.enable();\n      $selectToggle?.enable();\n      $dataview?.hideProgress?.();\n\n      delete this._progressSteps;\n   }\n\n   async submit() {\n      const field = this.field;\n      if (!this._pdfDoc || !field) return;\n\n      this.busy();\n\n      const ids = this.ids;\n      const $dataview = $$(ids.dataview);\n      const selectedPageIds = $dataview.getSelectedId(true) ?? [];\n      const model = field.object.model();\n      const dcLink = this.datacollection.datacollectionLink;\n      const newValues = [];\n\n      for (let i = 0; i < selectedPageIds.length; i++) {\n         const pageNumber = selectedPageIds[i];\n         if (pageNumber == null || pageNumber == \"\") return;\n\n         const uploadId = await this._uploadImage(pageNumber);\n\n         this._increaseProgressValue();\n\n         // Insert Data\n         const values = field.object.defaultValues();\n         values[field.columnName] = uploadId;\n\n         // Set linked data from the parent DC\n         const linkValues = dcLink?.getCursor();\n         if (linkValues) {\n            const objectLink = dcLink?.datasource;\n\n            const connectFields = field.object.connectFields();\n            connectFields.forEach((f) => {\n               if (\n                  objectLink.id == f.settings.linkObject &&\n                  values[f.columnName] === undefined\n               ) {\n                  const linkColName = f.indexField\n                     ? f.indexField.columnName\n                     : objectLink.PK();\n\n                  values[f.columnName] = {};\n                  values[f.columnName][linkColName] =\n                     linkValues[linkColName] ?? linkValues.id;\n               }\n            });\n         }\n\n         newValues.push(await model.create(values));\n\n         this._increaseProgressValue();\n      }\n\n      this.view.doSubmitRules(newValues);\n\n      // NOTE: trigger this event to ABViewPropertyAddPage\n      if (newValues) this.view.emit(\"saved\", newValues);\n\n      this.ready();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFieldCalculate = require(\"../../dataFields/ABFieldCalculate\");\nconst ABFieldFormula = require(\"../../dataFields/ABFieldFormula\");\nconst ABFieldNumber = require(\"../../dataFields/ABFieldNumber\");\n\nmodule.exports = class ABViewPivotComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPivot_${baseView.id}`,\n         Object.assign({ pivot: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const uiPivot = {\n         id: this.ids.pivot,\n         view: \"pivot\",\n         readonly: true,\n         removeMissed: settings.removeMissed,\n         totalColumn: settings.totalColumn,\n         separateLabel: settings.separateLabel,\n         min: settings.min,\n         max: settings.max,\n         height: settings.height,\n         fields: this._getFields(),\n         format: (value) => {\n            const decimalPlaces = settings.decimalPlaces ?? 2;\n\n            return value && value != \"0\"\n               ? parseFloat(value).toFixed(decimalPlaces || 0)\n               : value;\n         },\n         override: new Map([\n            [\n               pivot.services.Backend,\n               class MyBackend extends pivot.services.Backend {\n                  async data() {\n                     const dc = self.datacollection;\n                     if (!dc) return webix.promise.resolve([]);\n\n                     const object = dc.datasource;\n                     if (!object) return webix.promise.resolve([]);\n\n                     switch (dc.dataStatus) {\n                        case dc.dataStatusFlag.notInitial:\n                           await dc.loadData();\n                           break;\n                     }\n\n                     const data = dc.getData();\n                     const dataMapped = data.map((d) => {\n                        const result = {};\n\n                        object.fields().forEach((f) => {\n                           if (\n                              f instanceof ABFieldCalculate ||\n                              f instanceof ABFieldFormula ||\n                              f instanceof ABFieldNumber\n                           )\n                              result[f.columnName] = d[f.columnName];\n                           else result[f.columnName] = f.format(d);\n                        });\n\n                        return result;\n                     });\n\n                     return webix.promise.resolve(dataMapped);\n                  }\n               },\n            ],\n            [\n               pivot.views.table,\n               class CustomTable extends pivot.views.table {\n                  CellFormat(value) {\n                     const decimalPlaces = settings.decimalPlaces ?? 2;\n                     if (!value) value = value === 0 ? \"0\" : \"\";\n                     return value\n                        ? parseFloat(value).toFixed(decimalPlaces)\n                        : value;\n                  }\n               },\n            ],\n         ]),\n      };\n\n      if (settings.structure) uiPivot.structure = settings.structure;\n\n      const _ui = super.ui([uiPivot]);\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   _getFields() {\n      const dc = this.datacollection;\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = object.fields().map((f) => {\n         let fieldType = \"text\";\n\n         switch (f.key) {\n            case \"calculate\":\n            case \"formula\":\n            case \"number\":\n               fieldType = \"number\";\n               break;\n            case \"date\":\n            case \"datetime\":\n               fieldType = \"date\";\n               break;\n         }\n\n         return {\n            id: f.columnName,\n            value: f.label,\n            type: fieldType,\n         };\n      });\n\n      return fields;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewReportsManagerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewReportManager_${baseView.id}`,\n         Object.assign(\n            {\n               reportManager: \"\",\n            },\n            ids\n         )\n      );\n\n      this.readonly = false;\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldText = dc?.datasource.fieldByID(\n         settings.dataviewFields.text\n      )?.columnName;\n      const fieldQueries = dc?.datasource.fieldByID(\n         settings.dataviewFields.queries\n      )?.columnName;\n      const ids = this.ids;\n      class MyBackend extends reports.services.Backend {\n         async getModules() {\n            if (dc == null) return [];\n\n            await self.waitInitializingDCEvery(1000, dc);\n\n            return dc.getData().map((e) => {\n               return {\n                  id: e.id,\n                  name: e[fieldName],\n                  text: JSON.stringify(e[fieldText]),\n                  updated: e[\"updated_at\"],\n               };\n            });\n         }\n\n         async addModule(data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            const response = await dc.model.create(parsedData);\n\n            return {\n               id: response.id,\n            };\n         }\n\n         async updateModule(id, data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            let response = {};\n\n            response = await dc.model.update(id, parsedData);\n\n            return { id: response.id };\n         }\n\n         async deleteModule(id) {\n            await dc.model.delete(id);\n\n            return { id: id };\n         }\n\n         async getModels() {\n            const reportModels = {};\n\n            // If no selected DC then get all DCs\n            (settings.datacollectionIDs.length > 0\n               ? settings.datacollectionIDs\n               : self.view.application.datacollectionIDs\n            ).forEach((dcID) => {\n               const dc = ab.datacollectionByID(dcID);\n\n               if (!dc) return;\n\n               const obj = dc.datasource;\n\n               if (!obj) return;\n\n               const reportFields = self.getReportFields(dc);\n\n               // get connected data collections\n               // let linkedFields = [];\n               // (obj.connectFields() || []).forEach((f, index) => {\n               //    let connectedDcs = ab.datacollections(\n               //       (dColl) =>\n               //          dColl &&\n               //          dColl.datasource &&\n               //          dColl.datasource.id === f.settings.linkObject\n               //    );\n               //    (connectedDcs || []).forEach((linkedDc) => {\n               //       linkedFields.push({\n               //          id: index + 1,\n               //          name: linkedDc.label,\n               //          source: dc.id,\n               //          target: linkedDc.id\n               //       });\n               //    });\n               // });\n\n               // // MOCK UP for testing\n               // let linkedFields = [\n               //    {\n               //       id: \"id\",\n               //       name: \"id\",\n               //       source: \"39378ee0-38f0-4b9d-a5aa-dddc61137fcd\", // Player\n               //       target: \"0de82362-4ab5-4f0f-8cfa-d1288d173cba\" // Team\n               //    }\n               // ];\n\n               reportModels[dc.id] = {\n                  id: dc.id,\n                  name: dc.label,\n                  data: reportFields,\n                  refs: [],\n               };\n            });\n\n            return reportModels;\n         }\n\n         async getQueries() {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return [];\n\n            return (\n               (\n                  await dc.model.findAll({\n                     where: {\n                        uuid: moduleID,\n                     },\n                  })\n               ).data[0][fieldQueries] || []\n            );\n         }\n\n         async addQuery(data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryID = abWebix.uid();\n\n            queries.push(Object.assign({ id: queryID }, data));\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id: queryID };\n         }\n\n         async updateQuery(id, data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            queries[queryIndex] = Object.assign({ id }, data);\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id };\n         }\n\n         async deleteQuery(id) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = moduleData[fieldQueries] || [];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            if (queryIndex >= 0) {\n               const parsedData = {};\n\n               parsedData[fieldQueries] = queries\n                  .filter((e, i) => i !== queryIndex)\n                  .sort((a, b) => {\n                     if (a.name < b.name) return -1;\n\n                     if (a.name > b.name) return 1;\n\n                     return 0;\n                  });\n\n               await dc.model.update(moduleID, parsedData);\n            }\n\n            return { id: id };\n         }\n\n         async getData(config) {\n            let result = [];\n            let pullDataTasks = [];\n            let dcIds = [];\n            let dcData = {};\n            let reportFields = [];\n\n            // pull data of the base and join DCs\n            dcIds.push(config.data);\n            (config.joins || []).forEach((j) => {\n               dcIds.push(j.sid);\n               dcIds.push(j.tid);\n            });\n            dcIds = ab.uniq(dcIds);\n            dcIds.forEach((dcId) => {\n               pullDataTasks.push(\n                  new Promise((resolve, reject) => {\n                     const getData = async () => {\n                        try {\n                           dcData[dcId] = (await self.getData(dcId)) || [];\n\n                           resolve();\n                        } catch (err) {\n                           reject(err);\n                        }\n                     };\n\n                     getData();\n                  })\n               );\n            });\n\n            dcIds.forEach((dcId) => {\n               const dataCol = ab.datacollectionByID(dcId);\n\n               if (!dataCol) return;\n\n               reportFields = reportFields.concat(\n                  self.getReportFields(dataCol).map((f) => {\n                     // change format of id to match the report widget\n                     f.id = `${dcId}.${f.id}`; // dc_id.field_id\n                     return f;\n                  })\n               );\n            });\n\n            await Promise.all(pullDataTasks);\n\n            // the data result equals data of the base DC\n            result = dcData[config.data] || [];\n\n            if (config.joins?.length)\n               (config.joins || []).forEach((j) => {\n                  const sourceDc = ab.datacollectionByID(j.sid);\n                  if (!sourceDc) return;\n\n                  const sourceObj = sourceDc.datasource;\n                  if (!sourceObj) return;\n\n                  const targetDc = ab.datacollectionByID(j.tid);\n                  if (!targetDc) return;\n\n                  const targetObj = targetDc.datasource;\n                  if (!targetObj) return;\n\n                  const sourceLinkField = sourceObj.fieldByID(j.sf);\n                  const targetLinkField = targetObj.fieldByID(j.tf);\n                  if (!sourceLinkField && !targetLinkField) return;\n\n                  const sourceData = dcData[j.sid] || [];\n                  const targetData = dcData[j.tid] || [];\n\n                  sourceData.forEach((sData) => {\n                     targetData.forEach((tData) => {\n                        let sVal =\n                           sData[\n                              sourceLinkField\n                                 ? `${j.sid}.${sourceLinkField.columnName}.id`\n                                 : `${j.sid}.id`\n                           ] || [];\n\n                        let tVal =\n                           tData[\n                              targetLinkField\n                                 ? `${j.tid}.${targetLinkField.columnName}.id`\n                                 : `${j.tid}.id`\n                           ] || [];\n\n                        if (!Array.isArray(sVal)) sVal = [sVal];\n\n                        if (!Array.isArray(tVal)) tVal = [tVal];\n\n                        // Add joined row to the result array\n                        const matchedVal = sVal.filter(\n                           (val) => tVal.indexOf(val) > -1\n                        );\n\n                        if (matchedVal?.length) {\n                           const updateRows =\n                              result.filter(\n                                 (r) =>\n                                    r[`${j.sid}.id`] === sData[`${j.sid}.id`] &&\n                                    !r[`${j.tid}.id`]\n                              ) || [];\n\n                           if (updateRows?.length)\n                              (updateRows || []).forEach((r) => {\n                                 for (const key in tData)\n                                    if (key !== \"id\") r[key] = tData[key];\n                              });\n                           else\n                              result.push(\n                                 Object.assign(\n                                    ab.cloneDeep(sData),\n                                    ab.cloneDeep(tData)\n                                 )\n                              );\n                        }\n                     });\n                  });\n               });\n\n            // filter & sort\n            const queryVal = JSON.parse(config.query || \"{}\");\n\n            if (queryVal?.rules?.length)\n               queryVal.rules.forEach((r) => {\n                  if (!r || !r.type || !r.condition) return;\n\n                  switch (r.type) {\n                     case \"date\":\n                        // Convert string to Date object\n                        if (r.condition.filter) {\n                           if (typeof r.condition.filter === \"string\")\n                              r.condition.filter = ab.rules.toDate(\n                                 r.condition.filter\n                              );\n\n                           if (\n                              r.condition.filter.start &&\n                              typeof r.condition.filter.start === \"string\"\n                           )\n                              r.condition.filter.start = ab.rules.toDate(\n                                 r.condition.filter.start\n                              );\n\n                           if (\n                              r.condition.filter.end &&\n                              typeof r.condition.filter.end === \"string\"\n                           )\n                              r.condition.filter.end = ab.rules.toDate(\n                                 r.condition.filter.end\n                              );\n                        }\n\n                        break;\n                  }\n               });\n\n            // create a new query widget to get the filter function\n            const filterElem = abWebix.ui({\n               view: \"query\",\n               fields: reportFields,\n               value: queryVal,\n            });\n\n            // create a new data collection and apply the query filter\n            const tempDc = new abWebix.DataCollection();\n\n            tempDc.parse(result);\n\n            // filter\n            let filterFn;\n\n            try {\n               filterFn = filterElem.getFilterFunction();\n            } catch (error) {\n               // continue regardless of error\n            }\n\n            if (filterFn) tempDc.filter(filterFn);\n\n            // sorting\n            (config.sort || []).forEach((sort) => {\n               if (sort.id)\n                  tempDc.sort({\n                     as: \"string\",\n                     dir: sort.mod || \"asc\",\n                     by: `#${sort.id}#`,\n                  });\n            });\n\n            result = tempDc.serialize();\n\n            // clear\n            filterElem.destructor();\n            tempDc.destructor();\n\n            // group by\n            if (config?.group?.length) {\n               result = _.groupBy(result, (e) => {\n                  return config.group\n                     .map((column) => {\n                        const parsedColumn = column.split(\".\");\n                        const originalColumn =\n                           parsedColumn.length > 2\n                              ? `${parsedColumn[1]}.${parsedColumn[2]}`\n                              : column;\n                        const reportField = reportFields.find(\n                           (reportField) => reportField.id === originalColumn\n                        );\n\n                        switch (reportField.type) {\n                           case \"date\": {\n                              const dateStringData = abWebix.i18n.dateFormatStr(\n                                 e[originalColumn]\n                              );\n                              const parsedDateStringData =\n                                 dateStringData.split(\"/\");\n\n                              switch (parsedColumn[0]) {\n                                 case \"day\":\n                                    e[column] = parsedDateStringData[1];\n\n                                    return parsedDateStringData[1];\n\n                                 case \"month\":\n                                    e[column] = parsedDateStringData[0];\n\n                                    return parsedDateStringData[0];\n\n                                 case \"year\":\n                                    e[column] = parsedDateStringData[2];\n\n                                    return parsedDateStringData[2];\n\n                                 case \"yearmonth\": {\n                                    e[\n                                       column\n                                    ] = `${parsedDateStringData[0]}/${parsedDateStringData[2]}`;\n\n                                    return e[column];\n                                 }\n\n                                 default:\n                                    e[column] = dateStringData;\n\n                                    return dateStringData;\n\n                                 // switch (reportField.abField.key) {\n                                 //    case \"datetime\":\n                                 //       return abWebix.i18n.fullDateFormatStr(\n                                 //          e[originalColumn]\n                                 //       );\n\n                                 //    default:\n                                 //       break;\n                                 // }\n                              }\n                           }\n\n                           default:\n                              return e[originalColumn]?.toString?.();\n                        }\n                     })\n                     .join(\"\");\n               });\n\n               result = Object.values(result).map((groupedData) => {\n                  const groupedResult = {};\n\n                  (config.columns || []).forEach((col) => {\n                     const agg = col.split(\".\")[0];\n                     const rawCol = col.replace(\n                        /sum.|avg.|count.|max.|min./g,\n                        \"\"\n                     );\n\n                     switch (agg) {\n                        case \"sum\":\n                           groupedResult[col] = ab.sumBy(groupedData, rawCol);\n                           break;\n                        case \"avg\":\n                           groupedResult[col] = ab.meanBy(groupedData, rawCol);\n                           break;\n                        case \"count\":\n                           groupedResult[col] = (groupedData || []).length;\n                           break;\n                        case \"max\":\n                           groupedResult[col] =\n                              (ab.maxBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        case \"min\":\n                           groupedResult[col] =\n                              (ab.minBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        default:\n                           groupedResult[col] = groupedData[0][col];\n                           break;\n                     }\n                  });\n\n                  return groupedResult;\n               });\n            }\n\n            return result;\n         }\n\n         async getOptions(fields) {\n            return [];\n         }\n         async getFieldData(fieldId) {\n            return [];\n         }\n      }\n      class MyLocal extends reports.services.Local {\n         constructor(app) {\n            super(app);\n\n            this._currentModuleID = \"\";\n         }\n\n         getQueries() {\n            const currentModuleID = $$(ids.reportManager).getState().moduleId;\n\n            if (this._currentModuleID !== currentModuleID) {\n               this._currentModuleID = currentModuleID;\n               this._queries = null;\n            }\n\n            return super.getQueries();\n         }\n      }\n      class MyEditor extends reports.views.editor {\n         init() {\n            super.init();\n\n            if (!self.readonly || settings.editMode === 1) return;\n\n            const $tabbar = this.$$(\"tabbar\");\n\n            if (settings.hideCommonTab === 1) {\n               const listener = () => {\n                  $tabbar.callEvent(\"onChange\", [\"data\"]);\n                  $tabbar.disableOption(\"common\");\n                  self.removeListener(\"editMode.tabbar.query\", listener);\n               };\n\n               self.on(\"editMode.tabbar.query\", listener);\n            }\n\n            if (settings.hideDataTab === 1) $tabbar.disableOption(\"other\");\n\n            if (settings.hideViewTab === 1) $tabbar.disableOption(\"structure\");\n\n            this.on(this.app, \"editMode.button.back\", () => {\n               this.Reset(true);\n            });\n         }\n\n         Reset(forceReset = false) {\n            const id = this.AppState.moduleId;\n            const condition = self.readonly && !(settings.editMode === 1);\n\n            if (!condition || id == null || forceReset) super.Reset();\n\n            this.Local.getModule(id);\n         }\n\n         TrackChanges() {\n            super.TrackChanges();\n\n            if (settings.hideCommonTab) self.emit(\"editMode.tabbar.query\");\n         }\n      }\n      class MyToolBar extends reports.views.toolbar {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly && !(settings.editMode === 1)) {\n               ui.elements[5].cols = ui.elements[5].cols.map((e) =>\n                  Object.assign(e, {\n                     hidden: self.readonly && !(settings.editMode === 1),\n                  })\n               );\n\n               ui.elements[5].cols.push(\n                  {},\n                  {\n                     view: \"button\",\n                     type: \"icon\",\n                     icon: \"wxi-angle-double-left\",\n                     label: self.label(\"Back\"),\n                     localId: \"forceReset\",\n                     click: () => {\n                        return this.app.callEvent(\"editMode.button.back\", []);\n                     },\n                  }\n               );\n            }\n\n            return ui;\n         }\n      }\n      class MyEditorCommon extends reports.views[\"editor/common\"] {\n         config() {\n            const ui = super.config();\n\n            if (!self.readonly) return ui;\n\n            return Object.assign({}, ui, {\n               elements: ui.elements.map((e, i) =>\n                  Object.assign(\n                     {\n                        hidden: !(i >= 2 && i < 5),\n                     },\n                     e\n                  )\n               ),\n            });\n         }\n\n         ShowDeleteButton() {\n            super.ShowDeleteButton();\n\n            if (self.readonly) this.$$(\"delete\").hide();\n         }\n      }\n      class MyEditorData extends reports.views[\"editor/data\"] {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly) {\n               ui.rows[0].rows[0].hidden = true;\n\n               ui.rows[0].rows.unshift({\n                  label: \"Filtering query\",\n                  view: \"label\",\n                  width: 120,\n               });\n            }\n\n            return ui;\n         }\n      }\n      class MyTable extends reports.views.table {\n         // NOTE: fix format of date column type\n         GetColumnConfig(a) {\n            let config = {\n               id: a.id,\n               header:\n                  !a.meta.header || a.meta.header === \"none\"\n                     ? a.meta.name || a.name\n                     : [\n                          a.meta.name || a.name,\n                          {\n                             content:\n                                a.header === \"text\"\n                                   ? \"textFilter\"\n                                   : \"richSelectFilter\",\n                          },\n                       ],\n               type: a.type,\n               sort: \"date\",\n               width: a.width || 200,\n            };\n\n            const abField = self.AB.datacollectionByID(\n               a.mid\n            )?.datasource.fields((field) => field.columnName === a.name)[0];\n\n            switch (a.type) {\n               case \"date\":\n                  config.format = (val) => {\n                     // check valid date\n                     if (val?.getTime && !isNaN(val.getTime()))\n                        return abField?.key === \"datetime\"\n                           ? abWebix.i18n.fullDateFormatStr(val)\n                           : abWebix.i18n.dateFormatStr(val);\n                     else return \"\";\n                  };\n\n                  break;\n\n               default:\n                  config = super.GetColumnConfig(a);\n\n                  break;\n            }\n\n            return config;\n         }\n\n         async GetTableData(mod) {\n            const data = await super.GetTableData(mod);\n            const buckets = mod.buckets;\n\n            if (!buckets) return data;\n\n            if (buckets.length === 0) return data;\n\n            const columnIDs = mod.columns.map((e) => e.id);\n            const parsedBuckets = mod.buckets.filter((bucket) =>\n               columnIDs.includes(bucket.column)\n            );\n\n            if (parsedBuckets.length === 0) return data;\n\n            const records = data[0].map((e) => {\n               const parseRecord = {};\n\n               parsedBuckets.forEach((bucket) => {\n                  const options = bucket.options;\n\n                  for (let i = 0; i < options.length; i++)\n                     if (\n                        options[i].values?.includes(e[bucket.column]) ||\n                        i === options.length - 1\n                     ) {\n                        parseRecord[bucket.column] = options[i].id;\n\n                        break;\n                     }\n               });\n\n               return Object.assign({}, e, parseRecord);\n            });\n\n            return [records, data[1]];\n         }\n      }\n\n      const _ui = super.ui([\n         {\n            id: ids.reportManager,\n            view: \"reports\",\n            toolbar: true,\n            override: new Map([\n               [reports.services.Backend, MyBackend],\n               [reports.services.Local, MyLocal],\n               [reports.views.editor, MyEditor],\n               [reports.views.toolbar, MyToolBar],\n               [reports.views[\"editor/common\"], MyEditorCommon],\n               [reports.views[\"editor/data\"], MyEditorData],\n               [reports.views.table, MyTable],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n      delete _ui.height;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      this.AB = AB;\n      this.readonly = accessLevel < 2;\n\n      const $reportManager = $$(this.ids.reportManager);\n      const state = $reportManager.getState();\n\n      state.readonly = this.readonly;\n      state.mode =\n         this.readonly && this.settings.editMode === 1 ? \"edit\" : \"list\";\n   }\n\n   getReportFields(dc) {\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = [];\n\n      object.fields().forEach((f) => {\n         const columnFormat = f.columnHeader();\n\n         if (!f.isConnection) {\n            let type = \"text\";\n\n            switch (f.key) {\n               case \"boolean\":\n               case \"number\":\n               case \"date\":\n                  type = f.key;\n\n                  break;\n\n               case \"datetime\":\n                  type = \"date\";\n\n                  break;\n\n               default:\n                  break;\n            }\n\n            fields.push({\n               id: f.columnName,\n               name: f.label,\n               filter: f.fieldIsFilterable(),\n               edit: false,\n               type: type,\n               format: columnFormat.format,\n               options: columnFormat.options,\n               ref: \"\",\n               key: false,\n               show: true,\n               abField: f,\n            });\n\n            return;\n         }\n\n         if (f.isSource()) {\n            const linkedDcs = this.view.application.datacollectionsIncluded(\n               (dc) =>\n                  this.settings.datacollectionIDs.includes(dc.id) &&\n                  dc.settings.datasourceID === f.settings.linkObject\n            );\n\n            (linkedDcs || []).forEach((linkDc) => {\n               fields.push({\n                  id: f.id,\n                  name: f.label,\n                  filter: false,\n                  edit: false,\n                  type: \"reference\",\n                  ref: linkDc.id,\n                  key: false,\n                  show: false,\n               });\n            });\n         }\n      });\n\n      return fields;\n   }\n\n   async getData(datacollectionId) {\n      const datacollection = this.AB.datacollectionByID(datacollectionId);\n      if (!datacollection) return [];\n\n      const object = datacollection.datasource;\n      if (!object) return [];\n\n      await this.waitInitializingDCEvery(1000, datacollection);\n\n      const reportFields = this.getReportFields(datacollection);\n      const reportData = [];\n      const rawData = datacollection.getData();\n\n      (rawData || []).forEach((row) => {\n         const reportRow = { id: row.id };\n\n         reportRow[`${datacollection.id}.id`] = row.id;\n\n         object.fields().forEach((field) => {\n            const columnName = field.columnName;\n            const col = `${datacollection.id}.${columnName}`;\n\n            if (field) {\n               // FK value of the connect field\n               if (field.isConnection) {\n                  let $pk = field.datasourceLink.PK();\n                  if (Array.isArray(row[columnName]))\n                     reportRow[`${col}.id`] = row[columnName].map(\n                        (link) => link[$pk] || link.id || link\n                     );\n                  else if (row[columnName])\n                     reportRow[`${col}.id`] =\n                        row[columnName][$pk] ||\n                        row[columnName].id ||\n                        row[columnName];\n               } else reportRow[col] = field.format(row);\n            } else reportRow[col] = row[columnName];\n\n            const rField = reportFields.find(\n               (f) => f.id === columnName || f.id === field.id\n            );\n\n            if (!rField) return;\n\n            switch (rField.type) {\n               case \"text\":\n               case \"reference\":\n                  reportRow[col] = (reportRow[col] || \"\").toString();\n                  break;\n\n               case \"number\":\n                  reportRow[col] = parseFloat(\n                     (reportRow[col] || 0).toString().replace(/[^\\d.-]/g, \"\")\n                  );\n                  break;\n\n               case \"date\":\n                  reportRow[col] = row[columnName];\n                  if (reportRow[col]) {\n                     if (!(reportRow[col] instanceof Date))\n                        reportRow[col] = this.AB.rules.toDate(row[columnName]);\n                  } else reportRow[col] = \"\";\n                  break;\n            }\n         });\n\n         reportData.push(reportRow);\n      });\n\n      return reportData;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewSchedulerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewScheduler_${baseView.id}`,\n         Object.assign(\n            {\n               scheduler: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const ab = this.AB;\n      const self = this;\n      const abWebix = this.AB.Webix;\n      const settings = this.settings;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldStart = dc?.datasource.fieldByID(\n         settings.dataviewFields.start\n      )?.columnName;\n      const fieldEnd = dc?.datasource.fieldByID(\n         settings.dataviewFields.end\n      )?.columnName;\n      const fieldAllDay = dc?.datasource.fieldByID(\n         settings.dataviewFields.allDay\n      )?.columnName;\n      const fieldRepeat = dc?.datasource.fieldByID(\n         settings.dataviewFields.repeat\n      )?.columnName;\n      const fieldCalendar = dc?.datasource.fieldByID(\n         settings.dataviewFields.calendar\n      )?.columnName;\n      const fieldEventColor = dc?.datasource.fieldByID(\n         settings.dataviewFields.color\n      )?.columnName;\n      const fieldNotes = dc?.datasource.fieldByID(\n         settings.dataviewFields.notes\n      )?.columnName;\n      const fieldOriginID = dc?.datasource.fieldByID(\n         settings.dataviewFields.originID\n      )?.columnName;\n      const fieldSectionID = dc?.datasource.fieldByID(\n         settings.dataviewFields.sectionID\n      )?.columnName;\n      const fieldUnitID = dc?.datasource.fieldByID(\n         settings.dataviewFields.unitID\n      )?.columnName;\n      const dcCalendar = ab.datacollectionByID(\n         this.settings.calendarDataviewID\n      );\n      const fieldTitle = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.title\n      )?.columnName;\n      const fieldCalendarColor = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.color\n      )?.columnName;\n      const fieldActive = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.active\n      )?.columnName;\n      const timelineOptions = [];\n\n      Object.keys(settings.timeline).forEach((key) => {\n         if (settings.timeline[key] === 0) return;\n\n         timelineOptions.push({\n            id: `${key}`,\n            value: `${key.charAt(0).toUpperCase()}${key.slice(1)}`,\n         });\n      });\n\n      const _ui = super.ui([\n         {\n            padding: 6,\n            cols: [\n               { view: \"label\", width: 150, label: \"Export events data to: \" },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"Excel\"),\n                  hidden: settings.export.excel === 0,\n                  click: () => {\n                     abWebix.toExcel(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"CSV\"),\n                  hidden: settings.export.csv === 0,\n                  click: () => {\n                     abWebix.toCSV(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"PDF\"),\n                  hidden: settings.export.pdf === 0,\n                  click: () => {\n                     abWebix.toPDF(ids.scheduler, { autowidth: true });\n                  },\n               },\n               {},\n            ],\n         },\n         {\n            id: ids.scheduler,\n            view: \"scheduler\",\n            date: new Date(),\n            readonly: settings.readonly === 1,\n            timeline: settings.timeline.timeline === 1,\n            override: new Map([\n               [\n                  scheduler.services.Backend,\n                  class MyBackend extends reports.services.Backend {\n                     async addCalendar(obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        const response = await dcCalendar.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async addEvent(obj) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        const response = await dc.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async calendars() {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dcCalendar == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dcCalendar);\n\n                        return dcCalendar.getData().map((e) => {\n                           return {\n                              id: e.id,\n                              text: e[fieldTitle],\n                              color: e[fieldCalendarColor],\n                              active: e[fieldActive],\n                           };\n                        });\n                     }\n                     async events(params) {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dc == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dc);\n\n                        const units = await this.units();\n                        const sections = await this.sections();\n\n                        return dc.getData().map((e) => {\n                           let unitID = units.find(\n                              (u) => u.id === e[fieldUnitID]\n                           )?.id;\n                           let sectionID = sections.find(\n                              (s) => s.id === e[fieldSectionID]\n                           )?.id;\n\n                           if (sectionID == null || unitID == null) {\n                              sectionID = sectionID || \"No Section\";\n                              unitID = unitID || \"No Unit\";\n\n                              // const data = {};\n\n                              // data[fieldSectionID] = sectionID;\n                              // data[fieldUnitID] = unitID;\n\n                              // dc.model.update(e.id, data);\n                           }\n\n                           return {\n                              id: e.id,\n                              text: e[fieldName],\n                              start_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldStart]),\n                              end_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldEnd]),\n                              all_day: e[fieldAllDay],\n                              recurring: e[fieldRepeat],\n                              calendar: e[fieldCalendar],\n                              color: e[fieldEventColor],\n                              section: sectionID,\n                              units: unitID,\n                              details: e[fieldNotes],\n                              origin_id: e[fieldOriginID],\n                           };\n                        });\n                     }\n                     async removeCalendar(id) {\n                        await dcCalendar.model.delete(id);\n                     }\n                     async removeEvent(id) {\n                        await dc.model.delete(id);\n                     }\n                     async sections() {\n                        return [\n                           { text: \"No Section\", id: \"No Section\" },\n                        ].concat(\n                           settings.timelineSectionList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 text: e,\n                              };\n                           })\n                        );\n                     }\n                     async units() {\n                        return [{ id: \"No Unit\", value: \"No Unit\" }].concat(\n                           settings.unitList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 value: e,\n                              };\n                           })\n                        );\n                     }\n                     async updateCalendar(id, obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        await dcCalendar.model.update(id, data);\n                     }\n                     async updateEvent(id, obj, mode, date) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        await dc.model.update(id, data);\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/nav\"],\n                  class CustomBarsView extends scheduler.views[\"bars/nav\"] {\n                     config() {\n                        const uiNav = super.config();\n                        uiNav.width = 160;\n                        uiNav.options = timelineOptions;\n                        return uiNav;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/navpopup\"],\n                  class CustomNavPopupView extends scheduler.views[\n                     \"bars/navpopup\"\n                  ] {\n                     config() {\n                        const uiNavPopup = super.config();\n\n                        const options = timelineOptions.map((e) =>\n                           Object.assign({ icon: `shi-${e.id}` }, e)\n                        );\n\n                        if (this.app.config.calendars)\n                           uiNavPopup.body.body.rows[0].data = options;\n                        else uiNavPopup.body.data = options;\n\n                        return uiNavPopup;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"modes/day/multiday\"],\n                  class CustomModesDayMultiday extends scheduler.views[\n                     \"modes/day/multiday\"\n                  ] {\n                     LimitData(data) {\n                        // Get an error the case when the data parameter is undefined.\n                        super.LimitData(data || []);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTabComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewTab_${baseView.id}`,\n         Object.assign(\n            {\n               tab: \"\",\n\n               sidebar: \"\",\n               expandMenu: \"\",\n               collapseMenu: \"\",\n\n               popupTabManager: \"\",\n               popupTabManagerForm: \"\",\n               popupTabManagerSaveButton: \"\",\n            },\n            ids\n         )\n      );\n\n      this.viewComponents =\n         this.viewComponents ||\n         baseView\n            .views((v) => v.getUserAccess())\n            .map((v) => {\n               return {\n                  view: v,\n                  // component: v.component(App)\n               };\n            });\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      let _ui = null;\n\n      // We are going to make a custom icon using the first letter of a menu item for menu items that don't have an icon\n      // to do this we need to modify the default template with the method webix recommended form this snippet https://snippet.webix.com/b566d9f8\n      abWebix.type(abWebix.ui.tree, {\n         baseType: \"sideBar\", // inherit everything else from sidebar type\n         name: \"customIcons\",\n         icon: (obj, common) => {\n            if (obj.icon.length)\n               return [\n                  \"<span class='webix_icon webix_sidebar_icon fa fa-fw fa-\",\n                  obj.icon,\n                  \"'></span>\",\n               ].join(\"\");\n\n            return [\n               \"<span class='webix_icon webix_sidebar_icon sidebarCustomIcon'>\",\n               obj.value.charAt(0).toUpperCase(),\n               \"</span>\",\n            ].join(\"\");\n         },\n      });\n\n      const viewComponents = this.viewComponents;\n      const settings = this.settings;\n\n      if (viewComponents.length > 0) {\n         if (settings.stackTabs) {\n            // define your menu items from the view components\n            const menuItems = viewComponents.map((vc) => {\n               const view = vc.view;\n\n               return {\n                  id: `${view.id}_menu`,\n                  value: view.label,\n                  icon: view.tabicon ? view.tabicon : \"\",\n               };\n            });\n\n            if (menuItems.length) {\n               // create a menu item for the collapse option to use later\n               const collapseMenu = {\n                  id: ids.collapseMenu,\n                  value: this.label(\"Collapse Menu\"),\n                  icon: \"chevron-circle-left\",\n               };\n\n               // create a menu item from the expand option to use later\n               const expandMenu = {\n                  id: ids.expandMenu,\n                  value: this.label(\"Expand Menu\"),\n                  icon: \"chevron-circle-right\",\n                  hidden: true,\n               };\n\n               // find out what the first option is so we can set it later\n               let selectedItem = `${viewComponents[0].view.id}_menu`;\n\n               const abStorage = ab.Storage;\n               const sidebar = {\n                  view: \"sidebar\",\n                  type: \"customIcons\", // define the sidebar type with the new template created above\n                  id: ids.sidebar,\n                  height: settings.height,\n                  width: settings.sidebarWidth ? settings.sidebarWidth : 0,\n                  scroll: true,\n                  position: settings.sidebarPos ? settings.sidebarPos : \"left\",\n                  css: settings.darkTheme ? \"webix_dark\" : \"\",\n                  data: menuItems.concat(collapseMenu), // add you menu items along with the collapse option to start\n                  on: {\n                     onItemClick: (id) => {\n                        // when a menu item is clicked\n                        if (id === ids.collapseMenu) {\n                           // if it was the collapse menu item\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the collapse option from the menu\n                              $sidebar.remove(ids.collapseMenu);\n                              // add the expand option to the menu\n                              $sidebar.add(expandMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else if (id === ids.expandMenu) {\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the expand option from the menu\n                              $sidebar.remove(ids.expandMenu);\n                              // add the collapse option to the menu\n                              $sidebar.add(collapseMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else {\n                           // store the selecte menu item just in case someone toggles the menu later\n                           selectedItem = id;\n                           // if the menu item is a regular menu item\n                           // call the onShow with the view id to load the view\n\n                           id = id.replace(\"_menu\", \"\");\n                           let node = $$(id);\n                           if (node) {\n                              node.show(false, false);\n                           } else {\n                              // How often does this occure?\n                              let msg = `ABViewTabComponent[${this.name}][${this.id}] could not resolve UI panel for provided menu [${selectedItem}].`;\n                              this.AB.notify(\"developer\", msg, {});\n                           }\n                           // $$(id).show(false, false);\n\n                           // onShow(id);\n                        }\n                     },\n                     onSelectChange: () => {\n                        addDataCy();\n                     },\n                     onAfterRender: () => {\n                        addDataCy();\n                     },\n                  },\n               };\n\n               const multiview = {\n                  view: \"multiview\",\n                  id: ids.tab,\n                  keepViews: true,\n                  minWidth: settings.minWidth,\n                  cells: viewComponents.map((view) => {\n                     const tabUi = {\n                        id: view.view.id,\n                        // ui will be loaded when its tab is opened\n                        view: \"layout\",\n                        rows: [],\n                     };\n\n                     return tabUi;\n                  }),\n                  on: {\n                     onViewChange: (prevId, nextId) => {\n                        this.onShow(nextId);\n                     },\n                  },\n               };\n\n               const addDataCy = function () {\n                  const $sidebar = $$(ids.sidebar);\n\n                  // set ids of controller buttons\n                  const collapseNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.collapseMenu}\"]`\n                  );\n\n                  if (collapseNode)\n                     collapseNode.setAttribute(\n                        \"data-cy\",\n                        `tab-collapseMenu-${ids.collapseMenu}`\n                     );\n\n                  const expandNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.expandMenu}\"]`\n                  );\n\n                  if (expandNode)\n                     expandNode.setAttribute(\n                        \"data-cy\",\n                        `tab-expandMenu-${ids.expandMenu}`\n                     );\n\n                  baseView.views((view) => {\n                     const node = $sidebar?.$view?.querySelector(\n                        `[webix_tm_id=\"${view.id}_menu\"]`\n                     );\n\n                     if (!node) {\n                        return;\n                     }\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `tab-${view.name.replace(\" \", \"\")}-${view.id}-${\n                           baseView.id\n                        }`\n                     );\n                  });\n               };\n\n               let columns = [sidebar, multiview];\n\n               if (settings.sidebarPos === \"right\") {\n                  columns = [multiview, sidebar];\n               }\n\n               _ui = {\n                  cols: columns,\n               };\n            } else\n               _ui = {\n                  view: \"spacer\",\n               };\n         } else {\n            const cells = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  const tabUi = {\n                     id: view.id,\n                     // ui will be loaded when its tab is opened\n                     view: \"layout\",\n                     rows: [],\n                  };\n\n                  let tabTemplate = \"\";\n\n                  // tab icon\n                  if (view.tabicon) {\n                     if (settings.iconOnTop)\n                        tabTemplate = [\n                           \"<div class='ab-tabIconContainer'><span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span><br/>\",\n                           view.label,\n                           \"</div>\",\n                        ].join(\"\");\n                     else\n                        tabTemplate = [\n                           \"<span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span> \",\n                           view.label,\n                        ].join(\"\");\n                  }\n\n                  // no icon\n                  else tabTemplate = view.label;\n\n                  return {\n                     header: tabTemplate,\n                     body: tabUi,\n                  };\n               });\n\n            // if there are cells to display then return a tabview\n            if (cells.length) {\n               _ui = {\n                  rows: [\n                     {\n                        view: \"tabview\",\n                        id: ids.tab,\n                        minWidth: settings.minWidth,\n                        height: settings.height,\n                        tabbar: {\n                           height: 60,\n                           type: \"bottom\",\n                           css: settings.darkTheme ? \"webix_dark\" : \"\",\n                           on: {\n                              onAfterRender: () => {\n                                 baseView.views((view) => {\n                                    const node = $$(\n                                       ids.tab\n                                    )?.$view?.querySelector(\n                                       `[button_id=\"${view.id}\"]`\n                                    );\n\n                                    if (!node) return;\n\n                                    node.setAttribute(\n                                       \"data-cy\",\n                                       `tab ${view.name} ${view.id} ${baseView.id}`\n                                    );\n                                 });\n                              },\n                           },\n                        },\n                        multiview: {\n                           on: {\n                              onViewChange: (prevId, nextId) => {\n                                 this.onShow(nextId);\n                              },\n                           },\n                        },\n                        cells: cells,\n                     },\n                  ],\n               };\n            }\n            // else we return a spacer\n            else\n               _ui = {\n                  view: \"spacer\",\n               };\n         }\n      } else\n         _ui = {\n            view: \"spacer\",\n         };\n\n      _ui = super.ui([_ui]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      if ($tab) abWebix.extend($tab, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // vc.component.init(AB);\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: vc.view,\n            eventName: \"changePage\",\n            listener: (...p) => this.changePage(...p),\n         });\n      });\n\n      // Trigger 'changeTab' event to parent\n      this.eventAdd({\n         emitter: baseView,\n         eventName: \"changeTab\",\n         listener: (...p) => this.changeTab(...p),\n      });\n\n      // initialize the sidebar and figure out if it should be collased or not\n      const $sidebar = $$(ids.sidebar);\n\n      if (!$sidebar) return;\n\n      const state = await ab.Storage.get(`${ids.tab}-state`);\n\n      if (!state) return;\n\n      // create a menu item for the collapse option to use later\n      const collapseMenu = {\n         id: ids.collapseMenu,\n         value: this.label(\"Collapse Menu\"),\n         icon: \"chevron-circle-left\",\n      };\n\n      // create a menu item from the expand option to use later\n      const expandMenu = {\n         id: ids.expandMenu,\n         value: this.label(\"Expand Menu\"),\n         icon: \"chevron-circle-right\",\n         hidden: true,\n      };\n\n      // this will collapse or expand the sidebar\n      $sidebar.setState(state);\n\n      const checkCollapseMenu = $sidebar.getItem(ids.collapseMenu) ?? null;\n      const checkExpandMenu = $sidebar.getItem(ids.expandMenu) ?? null;\n\n      // if the state is collapsed we need to make sure the expand option is available\n      if (state.collapsed) {\n         if (checkCollapseMenu && checkExpandMenu)\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(expandMenu);\n      } else if (checkCollapseMenu && checkExpandMenu)\n         // $sidebar.remove(ids.collapseMenu);\n         $sidebar.add(collapseMenu);\n   }\n\n   changePage(pageId) {\n      const $tab = $$(this.ids.tab);\n\n      $tab?.blockEvent();\n      this.view.changePage(pageId);\n      $tab?.unblockEvent();\n   }\n\n   changeTab(tabViewId) {\n      const baseView = this.view;\n      const $tabViewId = $$(tabViewId);\n\n      // switch tab view\n      this.toggleParent(baseView.parent);\n\n      if (this.settings.stackTabs)\n         if (!$tabViewId.isVisible()) {\n            const showIt = setInterval(() => {\n               if ($tabViewId.isVisible()) clearInterval(showIt);\n\n               $tabViewId.show(false, false);\n            }, 200);\n         } else $$(this.ids.tab).setValue(tabViewId);\n   }\n\n   toggleParent(view) {\n      const $viewID = $$(view.id);\n\n      if (view.key === \"tab\" || view.key === \"viewcontainer\") {\n         $viewID?.show(false, false);\n      }\n      if (view.parent) {\n         this.toggleParent(view.parent);\n      }\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      let defaultViewIsSet = false;\n\n      const $sidebar = $$(ids.sidebar);\n\n      // if no viewId is given, then try to get the currently selected ID\n      if (!viewId && $sidebar)\n         viewId = $sidebar.getSelectedId().replace(\"_menu\", \"\");\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // set default view id\n         const currView = baseView.views((view) => {\n            return view.id === vc.view.id;\n         });\n\n         let accessLevel = 0;\n\n         if (currView.length) accessLevel = currView[0].getUserAccess();\n\n         // choose the 1st View if we don't have one we are looking for.\n         if (!viewId && !defaultViewIsSet && accessLevel > 0) {\n            viewId = vc.view.id;\n\n            defaultViewIsSet = true;\n         }\n\n         // create view's component once\n         const $tab = $$(ids.tab);\n         const settings = this.settings;\n\n         if (!vc?.component && vc?.view?.id === viewId) {\n            // show loading cursor\n            if ($tab?.showProgress) $tab.showProgress({ type: \"icon\" });\n\n            vc.component = vc.view.component();\n\n            const $viewID = $$(vc.view.id);\n            const ab = this.AB;\n            const abWebix = ab.Webix;\n\n            if (settings.stackTabs) {\n               // update multiview UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-multiview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            } else {\n               // update tab UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-tabview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            }\n\n            // for tabs we need to look at the view's accessLevels\n            accessLevel = vc.view.getUserAccess();\n\n            vc.component.init(ab, accessLevel);\n\n            // done\n            setTimeout(() => {\n               // $$(v.view.id).adjust();\n\n               $tab?.hideProgress?.();\n               // check if tab has a hint\n               // if (vc?.view?.settings?.hintID) {\n               //    // fetch the steps for the hint\n               //    let hint = ab.hintID(vc.view.settings.hintID);\n               //    hint.createHintUI();\n               // }\n            }, 10);\n         }\n\n         // show UI\n         if (vc?.view?.id === viewId && vc?.component?.onShow)\n            vc.component.onShow();\n\n         if (settings.stackTabs && vc?.view?.id === viewId) {\n            $$(viewId).show(false, false);\n            $sidebar.select(`${viewId}_menu`);\n         }\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTextComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewText_${baseView.id}`,\n         Object.assign(\n            {\n               text: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n\n      const _uiText = {\n         id: ids.text,\n         view: \"template\",\n         minHeight: 10,\n         css: \"ab-custom-template\",\n         borderless: true,\n      };\n\n      if (settings.height) _uiText.height = settings.height;\n      else _uiText.autoheight = true;\n\n      const _ui = super.ui([_uiText]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   displayText(value) {\n      const ids = this.ids;\n      const result = this.view.displayText(value, ids.text);\n\n      const $text = $$(ids.text);\n\n      if (!$text) return;\n\n      $text.define(\"template\", result);\n      $text.refresh();\n   }\n\n   onShow() {\n      super.onShow();\n\n      // listen DC events\n      const dataview = this.datacollection;\n      const baseView = this.view;\n\n      if (dataview && baseView.parent.key !== \"dataview\")\n         baseView.eventAdd({\n            emitter: dataview,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayText(...p),\n         });\n\n      this.displayText();\n   }\n};\n","import ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewProperty extends ClassUI {\n   // constructor() {}\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {};\n   }\n\n   /** == Property == */\n   /**\n    * @function propertyComponent\n    * return the view and logic to display in property panel\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   static propertyComponent() {\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n\n   fromSettings(settings) {\n      this.settings = settings;\n   }\n\n   toSettings() {\n      return this.settings || {};\n   }\n\n   /** == UI == */\n   /**\n    * @function component\n    * return the view and logic to display in display widget\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewFormButton from \"../ABViewFormButton\";\nimport ABViewPDFImporter from \"../ABViewPDFImporter\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyAddPage extends ABViewProperty {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         formView: \"none\", // id of form to add new data\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formView: `${idBase}_formView`,\n      };\n\n      let ui = {\n         id: ids.formView,\n         name: \"formView\",\n         view: \"richselect\",\n         label: L(\"Add New Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formView).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            let pagesHasForm = view\n               .pageRoot()\n               .pages((p) => {\n                  return p.views((v) => {\n                     return (\n                        v &&\n                        v.key == \"form\" &&\n                        v.datacollection &&\n                        v.datacollection.datasource &&\n                        v.datacollection.datasource.id ==\n                           view.field().settings.linkObject\n                     );\n                  }, true).length;\n               }, true)\n               .map((p) => {\n                  return {\n                     id: p.id,\n                     value: p.label,\n                  };\n               });\n\n            editForms = editForms.concat(pagesHasForm);\n\n            let $selector = $$(ids.formView);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.formView || this.default.formView\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            settings.formView = $$(ids.formView).getValue();\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.formView =\n         settings.formView || this.constructor.default.formView;\n   }\n\n   getIds(idBase, App) {\n      return {\n         popup: App._App.unique(`${idBase}_popup_add_new`),\n         field: idBase.split(\"_\")[1],\n         button: App._App.unique(`${idBase}_popup_add_new_button`),\n      };\n   }\n\n   component(App, idBase) {\n      // This can be overwritten by creating a different getIds before calling .super\n      let ids = this.getIds(idBase, App);\n\n      let ui = \"\";\n\n      if (\n         this.settings.formView &&\n         this.settings.formView != this.constructor.default.formView\n      ) {\n         // let iDiv = document.createElement(\"div\");\n         // iDiv.className = \"ab-connect-add-new\";\n         const dataCy = `add new CR button ${this.settings.formView} ${ids.field}`;\n         // iDiv.innerHTML = `<a href=\"javascript:void(0);\" class=\"fa fa-plus ab-connect-add-new-link\" data-cy=\"${dataCy}\"></a>`;\n         // iDiv.appendChild(node);\n         // ui = iDiv.outerHTML;\n         ui = {\n            id: ids.button,\n            view: \"button\",\n            type: \"icon\",\n            icon: \"fa fa-plus\",\n            width: 32,\n            height: 32,\n            css: \"webix_primary ab-connect-add-new-link\",\n            on: {\n               onAfterRender: () => {\n                  $$(ids.button)\n                     ?.$view.querySelector(\"button\")\n                     .setAttribute(\"data-cy\", dataCy);\n               },\n            },\n         };\n      }\n\n      let _logic = {\n         callbacks: {\n            onSaveData: (saveData) => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n            },\n            onCancel: () => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n\n               return false;\n            },\n            onClearOnLoad: () => {\n               return true;\n            },\n            clearOnLoad: () => {\n               return true;\n            },\n         },\n\n         applicationLoad: (application) => {\n            this._application = application;\n         },\n\n         onClick: (dc) => {\n            let pageId = this.settings.formView;\n            let page = this._application.pages((p) => p.id == pageId, true)[0];\n\n            return _logic.openFormPopup(page, dc);\n         },\n\n         /**\n          * @method openFormPopup\n          *\n          * @param page {ABViewPage}\n          * @param dc {ABDataCollection}\n          */\n         openFormPopup: (page, dc) => {\n            return new Promise((resolve, reject) => {\n               if (this._application == null) return resolve();\n\n               if ($$(ids.popup)) {\n                  $$(ids.popup).show();\n                  return resolve();\n               }\n\n               // Clone page so we modify without causing problems\n               let pageClone = page.clone(null, null, { ignoreSubPages: true });\n               pageClone.id = this._application.AB.uuid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               // pageClone.id = pageClone.id + \"-\" + webix.uid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               let popUpComp = pageClone.component();\n               let ui = popUpComp.ui();\n\n               // Listen 'saved' event of the form widget\n               const saveViews =\n                  pageClone.views(\n                     (v) =>\n                        v instanceof ABViewFormButton ||\n                        v instanceof ABViewPDFImporter,\n                     true\n                  ) ?? [];\n\n               saveViews.forEach((view) => {\n                  const v =\n                     view instanceof ABViewFormButton ? view.parent : view;\n                  v.on(\"saved\", (savedData) => {\n                     _logic?.callbacks?.onSaveData(savedData);\n                     // ? is there ever a case where we want to keep an add popup open after saving?\n                     // ! setting this to always close\n\n                     if ($$(ids.popup)) {\n                        $$(ids.popup).close();\n                     } else {\n                        var popup = this.getTopParentView();\n                        popup.close();\n                     }\n                  });\n               });\n\n               let popupTemplate = {\n                  view: \"window\",\n                  id: ids.popup,\n                  modal: true,\n                  position: \"center\",\n                  // position:function(stthis.__addPageToolate){\n                  // \tstate.left = x + 20this.__addPageTool; // offset the popups\n                  // \tstate.top = y + 20;this.__addPageTool\n                  // },\n                  resize: true,\n                  width: parseInt(this.settings.popupWidth) || 700,\n                  height: parseInt(this.settings.popupHeight) + 44 || 450,\n                  css: \"ab-main-container\",\n                  head: {\n                     view: \"toolbar\",\n                     css: \"webix_dark\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: page.label,\n                           css: \"modal_title\",\n                           align: \"center\",\n                        },\n                        {\n                           view: \"button\",\n                           label: L(\"Close\"),\n                           autowidth: true,\n                           align: \"center\",\n                           click: function () {\n                              var popup = this.getTopParentView();\n                              popup.close();\n                           },\n                        },\n                     ],\n                  },\n                  body: {\n                     view: \"scrollview\",\n                     scroll: true,\n                     body: ui,\n                  },\n               };\n\n               // Create popup\n               webix.ui(popupTemplate).show();\n\n               // Initial UI components\n               const accessLevel = 3; // TODO: Is it correct\n               popUpComp.init(this._application.AB, accessLevel, {\n                  onSaveData: _logic.callbacks.onSaveData,\n                  onCancelClick: _logic.callbacks.onCancel,\n                  clearOnLoad: _logic.callbacks.clearOnLoad,\n                  onClearOnLoad: _logic.callbacks.onClearOnLoad,\n               });\n\n               popUpComp.onShow();\n\n               setTimeout(async () => {\n                  _logic.setDefaultValue(dc, pageClone);\n\n                  resolve();\n               }, 100);\n            });\n         },\n\n         setDefaultValue: (dc, page) => {\n            if (!dc) return;\n\n            let obj = dc.datasource;\n            if (!obj) return;\n\n            let linkedData = dc.getCursor();\n            if (!linkedData) return;\n\n            page.views().forEach((v) => {\n               if (!v || v.key != \"form\") return;\n\n               v.views().forEach((fView) => {\n                  if (fView.key != \"connect\" || fView.settings == null) return;\n\n                  let field = fView.field();\n                  if (field == null) return;\n\n                  let objLink = field.datasourceLink;\n                  if (objLink == null || objLink.id != obj.id) return;\n\n                  let data = {};\n                  let relationName = field.relationName();\n                  data[relationName] = {\n                     id: linkedData.id,\n                  };\n\n                  // Add custom index values\n                  let indexes = obj.indexes() || [];\n                  indexes.forEach((idx) => {\n                     (idx.fields || []).forEach((f) => {\n                        data[relationName][f.columnName] =\n                           linkedData[f.columnName];\n                     });\n                  });\n\n                  // Set label of selected item\n                  if (linkedData.text) {\n                     data[relationName].text = linkedData.text;\n                     data[relationName].value = data[relationName].text;\n                  } else {\n                     let rawData = {};\n                     rawData[relationName] = linkedData;\n                     data[relationName].text = field.format(rawData);\n                     data[relationName].value = data[relationName].text;\n                  }\n\n                  let comp = v.viewComponents[fView.id];\n                  if (!comp) return;\n\n                  const ui = typeof comp.ui == \"function\" ? comp.ui() : comp.ui;\n                  const inputId = ui?.inputId || ui?.rows?.[0]?.inputId;\n\n                  if (inputId) field.setValue($$(inputId), data);\n               });\n            });\n         },\n      };\n\n      let init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n         if (ui) {\n            for (let c in options) {\n               ui.on[c] = options[c];\n            }\n         }\n      };\n\n      return {\n         ui: ui,\n         init: init,\n\n         applicationLoad: _logic.applicationLoad,\n         onClick: _logic.onClick,\n         openFormPopup: _logic.openFormPopup,\n      };\n   }\n}\n","import ABViewPropertyAddPage from \"./ABViewPropertyAddPage\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyEditPage extends ABViewPropertyAddPage {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         editForm: \"none\", // The url pointer of ABViewForm\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formEdit: `${idBase}_editForm`,\n      };\n\n      let ui = {\n         id: ids.formEdit,\n         name: \"editForm\",\n         view: \"richselect\",\n         label: L(\"Edit Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formEdit).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n            clearOnLoad: () => {\n               return false; // always false, we're trying to edit data\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n            settings.clearOnLoad = false; // doesn't work\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            (view.pageRoot().pages(() => true, true) || []).forEach((p) => {\n               if (!p) return;\n\n               p.views(() => true, true).forEach((v) => {\n                  if (\n                     v &&\n                     v.key == \"form\" &&\n                     v.datacollection &&\n                     v.datacollection.datasource &&\n                     v.datacollection.datasource.id ==\n                        view.field().settings.linkObject\n                  ) {\n                     editForms.push({\n                        id: v.urlPointer(),\n                        value: `${p.label} - ${v.label}`,\n                     });\n                  }\n               });\n            });\n\n            let $selector = $$(ids.formEdit);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.editForm || this.default.editForm\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            let $selector = $$(ids.formEdit);\n            let $selectPopup = $selector.getPopup();\n            let selectedItem = ($selectPopup.config.body.data || []).filter(\n               (opt) => opt.id == $selector.getValue()\n            )[0];\n            if (selectedItem) {\n               settings.editForm = selectedItem.id; // The url pointer of ABViewForm\n            }\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.editForm =\n         settings.editForm || this.constructor.default.editForm;\n   }\n\n   component(App, idBase) {\n      // Overwrite the popup-lookup function\n      function getIds(idBase, App) {\n         return {\n            popup: App._App.unique(`${idBase}_popup_edit_form`),\n            field: idBase.split(\"_\")[1],\n         };\n      }\n      this.getIds = getIds;\n\n      // call to addpage\n      let comp = super.component(App, idBase);\n\n      comp.onClick = () => {\n         if (\n            !this._application ||\n            !this.settings.editForm ||\n            this.settings.editForm == this.constructor.default.editForm\n         )\n            return Promise.resolve();\n\n         let form = this._application.urlResolve(this.settings.editForm);\n         if (!form) return Promise.resolve();\n\n         let page = form.pageParent();\n         if (!page) return Promise.resolve();\n\n         return comp.openFormPopup(page);\n      };\n\n      return comp;\n   }\n}\n","/*\n * ABViewPropertyFilterData\n * This is a displayable ui component that will manage displaying a\n * means of searching for the user.\n *\n * This component will emit: \"filter.data\" when one of the filter options\n * have been enabled.\n *    \"filter.data\" has 2 parameters: fnFilter, filterRules\n *       fnFilter {function} when passed a row of data from the grid,\n *                return true/false if it passes the filter.\n *       filterRules {array} of each of the filter rules that have been\n *                created. Note: the fnFilter still checks the validity\n *                of the row based on these rules.\n *                (this is used for the parent component to indicate how\n *                many rules are currently applied to the data being displayed)\n */\nconst ABMLClass = require(\"../../ABMLClass\");\nimport ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\n// const ABViewGridFilterRule = require(\"../../../rules/ABViewGridFilterRule\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass FilterRuleSettings extends ABMLClass {\n   constructor() {\n      super([\"label\"], AB);\n   }\n\n   fromSettings(settings) {\n      super.fromValues(settings);\n      this.filters = settings.filters;\n   }\n\n   toSettings() {\n      let obj = super.toObj();\n      obj.filters = this.filters;\n      return obj;\n   }\n}\n\nclass ABViewPropertyFilterDataComponent extends ABViewComponent {\n   constructor(viewPropertyFilterData, idBase) {\n      var base = idBase || viewPropertyFilterData.idBase;\n      super(base, {});\n   }\n}\n\nexport default class ABViewPropertyFilterData extends ABViewProperty {\n   constructor(AB, idBase) {\n      super(idBase, {\n         buttonAddfilter: \"\",\n         filterPanel: \"\",\n         globalFilterFormContainer: \"\",\n         globalFilterForm: \"\",\n         filterMenutoolbar: \"\",\n         resetFilterButton: \"\",\n      });\n\n      this.AB = AB;\n      this.idBase = idBase;\n      this.object = null;\n      // this.queryRules = [];\n\n      this.__externalSearchText = null;\n      // {string}\n      // External sources of text filters are stored here. This is most likely\n      // from the global search toolbar entry.\n      this.rowFilter = this.AB.filterComplexNew(`${this.ids.component}_filter`);\n      // {RowFilter}\n      // When .userFilterPosition == \"toolbar\" we use this RowFilter to\n      // display a form in a popup where the toolbar button is.\n\n      this.rowFilterForm = this.AB.filterComplexNew(\n         `${this.ids.component}_filter_form`\n      );\n      // {RowFilter}\n      // When .userFilterPosition == \"form\" we use this RowFilter to\n      // display a form under the toolbar.\n\n      this._handler_rowFilterChanged = (value) => {\n         let filterRules = value.rules || [];\n\n         // if ($$(ids.buttonFilter)) {\n         //    $$(ids.buttonFilter).define('badge', filterRules.length || null);\n         //    $$(ids.buttonFilter).refresh();\n         // }\n\n         // be notified when there is a change in the filter\n         this.triggerCallback((rowData) => {\n            return this.rowFilter.isValid(rowData);\n         }, filterRules);\n      };\n\n      this._handler_rowFilterFormChanged = () => {\n         this.triggerCallback();\n      };\n\n      this.initialized = false;\n      // {bool}\n      // make sure this is not .init() more than once\n   }\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         filterOption: 1,\n         // {integer}\n         // 0 - Not allow\n         // 1 - Enable user filter\n         // 2 - Predefined filter menu\n         // 3 - Global filter input\n\n         // filterOptions == 1 options\n         userFilterPosition: \"toolbar\",\n         // {string} the location of the filter:\n         //    \"toolbar\" : there will be an \"Add Filters\" button on\n         //                the toolbar that will trigger the form popup\n         //    \"form\"    : there will be a button under the toolbar that\n         //                will bring up the form popup.\n\n         isGlobalToolbar: 1,\n         // {boolean|truthy}\n         // when \"toolbar\" is chosen for userFilterPosition, this setting\n         // allows us to also include the search criteria specified in\n         // the search box on the toolbar.\n\n         // filterOptions == 2 options\n         // predefined filters created by the builders. There will be\n         // an area under the toolbar that displays buttons to choose\n         // between one of the predefined queryRules.\n         // queryRules: [], // An array of ABViewGridFilterRule object\n\n         // filterOptions == 3 options\n         // globalFilterPosition: \"default\",\n         // {string} [ \"default\", \"single\" ]\n         //    \"default\" : shows default grid with all potential matches\n         //    \"single\"  : grid only shows when it has a match.  only 1\n         //                match is shown. ( is this true?? )\n      };\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      settings.filterOption =\n         typeof settings.filterOption != \"undefined\"\n            ? settings.filterOption\n            : ABViewPropertyFilterData.default.filterOption;\n\n      settings.isGlobalToolbar =\n         typeof settings.isGlobalToolbar != \"undefined\"\n            ? settings.isGlobalToolbar\n            : ABViewPropertyFilterData.default.isGlobalToolbar;\n\n      this.settings = settings;\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.object = object;\n\n      if (this.rowFilter) {\n         // this.rowFilter.applicationLoad(object.application);\n         this.rowFilter.fieldsLoad(object.fields());\n      }\n\n      if (this.rowFilterForm) {\n         // this.rowFilterForm.applicationLoad(object.application);\n         this.rowFilterForm.fieldsLoad(object.fields());\n      }\n   }\n\n   viewLoad(view) {\n      this.view = view;\n   }\n\n   /** == UI == */\n   ui() {\n      var self = this;\n      var ids = this.ids;\n\n      return {\n         id: ids.filterPanel,\n         type: \"space\",\n         borderless: true,\n         padding: 0,\n         hidden: true,\n         rows: [\n            {\n               id: ids.globalFilterFormContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.globalFilterForm,\n                     view: \"text\",\n                     placeholder: L(\"Search or scan a barcode to see results\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.triggerCallback();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: function () {\n                        var $form = $$(ids.globalFilterForm);\n                        $form.setValue(\"\");\n                        $form.focus();\n                        $form.callEvent(\"onTimedKeyPress\");\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.buttonAddfilter,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Filter\"),\n               click: () => {\n                  this.rowFilterForm.popUp($$(ids.buttonAddfilter).getNode(), {\n                     pos: \"bottom\",\n                  });\n               },\n            },\n            {\n               view: \"toolbar\",\n               id: ids.filterMenutoolbar,\n               css: \"ab-data-toolbar\",\n               hidden: true,\n               cols: [\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     id: ids.resetFilterButton,\n                     label: L(\"Reset Filter\"),\n                     icon: \"fa fa-ban\",\n                     type: \"icon\",\n                     // badge: 0,\n                     autowidth: true,\n                     click: function () {\n                        self.resetFilter();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      var ids = this.ids;\n      // this.filter_popup = webix.ui({\n      //    view: \"popup\",\n      //    id: ids.component,\n      //    width: 600,\n      //    height: 400,\n      //    hidden: true,\n      //    body: this.rowFilter.ui,\n      // });\n\n      this.rowFilter.init();\n      this.rowFilter.removeListener(\"changed\", this._handler_rowFilterChanged);\n      this.rowFilter.on(\"changed\", this._handler_rowFilterChanged);\n\n      this.rowFilterForm.init();\n      this.rowFilterForm.removeListener(\n         \"changed\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"changed\", this._handler_rowFilterFormChanged);\n      this.rowFilterForm.removeListener(\n         \"save\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"save\", this._handler_rowFilterFormChanged);\n\n      $$(ids.filterPanel)?.hide();\n      $$(ids.buttonAddfilter)?.hide();\n      $$(ids.filterMenutoolbar)?.hide();\n      $$(ids.globalFilterFormContainer)?.hide();\n\n      switch (this.settings.filterOption) {\n         case 0:\n            break;\n         case 1:\n            switch (this.settings.userFilterPosition) {\n               case \"form\":\n                  $$(ids.buttonAddfilter)?.show();\n                  $$(ids.filterPanel)?.show();\n                  break;\n               case \"toolbar\":\n                  $$(ids.filterPanel)?.hide();\n                  break;\n            }\n            break;\n         case 2:\n            $$(ids.filterPanel)?.show();\n            var $filterMenutoolbar = $$(ids.filterMenutoolbar);\n            if ($filterMenutoolbar) {\n               $filterMenutoolbar.show();\n\n               // populate filter items\n               if (this.settings?.queryRules) {\n                  (this.settings.queryRules || []).forEach((qr) => {\n                     let Rule = new FilterRuleSettings();\n                     Rule.fromSettings(qr);\n                     var filterRuleButton = {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        label: Rule.label,\n                        icon: \"fa fa-filter\",\n                        type: \"icon\",\n                        // badge: 0,\n                        autowidth: true,\n                        click: () => {\n                           this.emit(\"filter.data\", null, Rule.filters);\n                           // this.selectFilter(qr.filter);\n                        },\n                     };\n                     $filterMenutoolbar.addView(filterRuleButton);\n                  });\n               }\n            }\n            break;\n         case 3:\n            $$(ids.globalFilterFormContainer)?.show();\n            $$(ids.filterPanel)?.show();\n            break;\n      }\n   }\n\n   filterRules() {\n      let rowFilterRules = null;\n\n      switch (this.settings.userFilterPosition) {\n         case \"form\":\n            rowFilterRules = this.rowFilterForm.getValue();\n            break;\n         case \"toolbar\":\n            rowFilterRules = this.rowFilter.getValue();\n            break;\n      }\n\n      return rowFilterRules;\n   }\n\n   /**\n    * @method getFilter()\n    * Return a fn() that returns {truthy} with a given row of\n    * data.\n    */\n   getFilter() {\n      // default filter\n      if (this.__currentFilter == null) {\n         // if empty search text in global single mode, then no display rows\n         if (\n            this.settings.filterOption == 3 &&\n            this.settings.globalFilterPosition == \"single\"\n         )\n            this.__currentFilter = (/* row */) => {\n               return false;\n            };\n         // always true, show every rows\n         else\n            this.__currentFilter = (/* row */) => {\n               return true;\n            };\n      }\n\n      return this.__currentFilter;\n   }\n\n   /**\n    * @method triggerCallback()\n    * We compile our current search options and emit them back to our\n    * parent container.\n    */\n   triggerCallback(/*fnFilter, filterRules*/) {\n      let searchRules = this.searchText(this.__externalSearchText);\n      let rowFilterRules = this.filterRules();\n\n      let badgeCount = 0;\n      if (rowFilterRules?.rules?.length) {\n         badgeCount = rowFilterRules?.rules?.length;\n         if (searchRules) {\n            badgeCount++;\n            rowFilterRules = {\n               glue: \"and\",\n               rules: [rowFilterRules, searchRules],\n            };\n         }\n      } else {\n         rowFilterRules = searchRules;\n      }\n\n      this.emit(\"filter.data\", null, rowFilterRules);\n\n      if (badgeCount == 0) badgeCount = false;\n      const $button = $$(this.ids.buttonAddfilter);\n      if ($button) {\n         $button.config.badge = badgeCount;\n         $button.refresh();\n      }\n   }\n\n   resetFilter() {\n      this.triggerCallback(() => true, []);\n   }\n\n   /**\n    * @method externalSearchText()\n    * Save any search criteria established from outside this filterHelper.\n    * NOTE: The ABViewGrid has a toolbar search entry that will provide\n    * this value.\n    * @param {string} search\n    *        The typed in search criteria.\n    */\n   externalSearchText(search = null) {\n      this.__externalSearchText = search;\n      this.triggerCallback(); // update each time\n   }\n\n   /**\n    * @method searchText()\n    * Retrieve the typed in search terms from the user, and convert them\n    * into a set of Rules that will modify our results.\n    * If an external search param is provided, use that instead.\n    * @param {string} externalText\n    * @return {json} The QB Rule condition for the search criteria\n    */\n   searchText(externalText) {\n      var search;\n      if (externalText) {\n         search = externalText;\n      } else {\n         search = ($$(this.ids.globalFilterForm)?.getValue() ?? \"\").trim();\n      }\n      if (!search) return null; // <-- includes \"\"\n\n      // find the individual \"terms\" that we should search for\n      let terms = search.trim().toLowerCase().split(\" \");\n\n      // build a set of conditions for each term\n      var allTerms = [];\n\n      var allFields = this.object?.fields() || [];\n\n      terms.forEach((t) => {\n         var fieldTerms = [];\n\n         // for each field, add a match condition for that field\n         // (if the field applies)\n         allFields.forEach((f) => {\n            if (f.fieldIsFilterable()) {\n               switch (f.key) {\n                  case \"number\":\n                  case \"string\":\n                  case \"LongText\":\n                  case \"email\":\n                     fieldTerms.push({\n                        key: f.id,\n                        rule: \"contains\",\n                        value: t,\n                     });\n                     break;\n\n                  case \"list\":\n                     var options = f.options();\n                     options.forEach((o) => {\n                        if (o.text.indexOf(t) > -1) {\n                           fieldTerms.push({\n                              key: f.id,\n                              rule: \"equals\",\n                              value: o.id,\n                           });\n                        }\n                     });\n                     break;\n               }\n            }\n         });\n\n         if (fieldTerms.length > 0) {\n            allTerms.push({\n               glue: \"or\",\n               rules: fieldTerms,\n            });\n         }\n      });\n\n      if (allTerms.length > 0) {\n         var searchRules = {\n            glue: \"and\",\n            rules: allTerms,\n         };\n         return searchRules;\n      } else {\n         return null;\n      }\n   }\n\n   showPopup($view) {\n      // this.filter_popup.show($view, null, { pos: \"top\" });\n      this.rowFilter.popUp($view, null, { pos: \"center\" });\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewPropertyLinkPageComponent extends ABViewComponent {\n   constructor(linkPageHelper, idBase) {\n      let base = idBase || `ABViewPropertyLinkPage_xxx`;\n      super(base, {});\n\n      this.linkPageHelper = linkPageHelper;\n      this.AB = linkPageHelper.AB;\n\n      this.view = null;\n      // {ABViewXXXX}\n      // the ABView object this link references.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The related Datacollection to this view that drives it's data.\n      // we usually have to set the cursor before the view displays the\n      // appropriate data.\n   }\n\n   ui() {\n      return {};\n   }\n\n   init(options) {\n      if (options.view) this.view = options.view;\n\n      if (options.datacollection) this.datacollection = options.datacollection;\n   }\n\n   changePage(pageId, rowId) {\n      if (this.datacollection) {\n         this.datacollection.once(\"changeCursor\", () => {\n            this.view?.changePage(pageId);\n         });\n         this.datacollection.setCursor(rowId);\n      }\n      else {\n         this.view?.changePage(pageId);\n      }\n   }\n}\n\nexport default class ABViewPropertyLinkPage extends ABViewProperty {\n   // constructor() {\n   //    super();\n   // }\n\n   /** == UI == */\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   component(v1App = false) {\n      let component = new ABViewPropertyLinkPageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (...params) => {\n               return newComponent.init(...params);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n            changePage: (...params) => {\n               return newComponent.changePage(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nmodule.exports = class ABViewQueryBuilderObjectFieldConditions {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(label) {\n      this.label = label;\n      this.ui = null;\n   }\n\n   /**\n    * cleanRules\n    * walk through all the QueryBuilder (QB) rules and make conversions\n    * of the data into their proper formats.\n    * @param {obj} rules  the {rules} obj that is returned from the QB object\n    * @param {array} fields  an array of field definitions from the QB object\n    * @param {bool} dateToString  convert Dates to String format?\n    */\n   cleanRules(rules, fields, dateToString) {\n      if (typeof dateToString == \"undefined\") dateToString = true;\n\n      // walk the given condition rules / values, walk them and make sure\n      // any given rules have properly formatted values.\n      function processCondition(rule) {\n         // make sure rule is provided\n         if (rule) {\n            if (rule.glue && rule.rules) {\n               rule.rules.forEach((r) => {\n                  processCondition(r);\n               });\n            } else {\n               // converting a single rule:\n\n               var field = fields.filter((f) => {\n                  return f.id == rule.key;\n               })[0];\n               if (field) {\n                  switch (field.type) {\n                     case \"number\":\n                     case \"formula\":\n                        // when getting data from the server, the numbers are\n                        // sent back as strings (\"100.25\").\n                        // make sure to convert strings to numbers:\n                        if (typeof rule.value == \"string\") {\n                           if (rule.value.indexOf(\".\") == -1) {\n                              rule.value = parseInt(rule.value);\n                           } else {\n                              rule.value = parseFloat(rule.value);\n                           }\n                        }\n                        break;\n                     case \"date\":\n                        // in some cases we want to convert the Date() object returned\n                        // by QueryBuilder into a string for saving on the Server.\n                        if (dateToString) {\n                           // if we have a Date() obj returned from QueryBuilder,\n                           // convert to a string format:\n                           if (rule.value instanceof Date) {\n                              rule.value = webix.i18n.dateFormatStr(rule.value);\n                           }\n                        } else {\n                           // in other cases we want to convert the string returned\n                           // by the server into a Date() for the QB\n                           if (typeof rule.value == \"string\") {\n                              rule.value = new Date(rule.value);\n                           }\n                        }\n\n                        break;\n                  }\n               }\n            }\n         }\n      }\n      processCondition(rules);\n   }\n\n   // component\n   // initialize the UI display for this popup editor.\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      var L = App.Label;\n\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: myUnique(\"qbObjectFieldConditions\"),\n         queryBuilder: myUnique(\"qBuilder\"),\n         queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n         queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n         showQBButton: myUnique(\"showQBButton\"),\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"layout\",\n         id: ids.queryBuilderLayout,\n         hidden: true,\n         type: \"line\",\n         rows: [\n            {\n               id: ids.showQBButton,\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     name: \"addqb\",\n                     value: L(\"Add Custom Conditions\"),\n                     autowidth: true,\n                     click: function () {\n                        $$(ids.queryBuilderContainer).show();\n                        $$(ids.showQBButton).hide();\n                        // _logic.buttonCancel();\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n            {\n               hidden: true,\n               id: ids.queryBuilderContainer,\n               cols: [\n                  {\n                     view: \"querybuilder\",\n                     id: ids.queryBuilder,\n                     fields: this.conditionFields(),\n                  },\n               ],\n            },\n         ],\n      };\n\n      // tack on a label if provided.\n      if (this.label) {\n         this.ui.rows[1].cols.unshift({\n            view: \"label\",\n            css: \"ab-text-bold\",\n            label: this.label,\n            width: this.AB.UISettings.config().labelWidthLarge,\n         });\n      }\n\n      // for setting up UI\n      this.init = (options) => {\n         options = options || {};\n\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         /**\n          * cleanRules\n          * walk through all the QueryBuilder (QB) rules and make conversions\n          * of the data into their proper formats.\n          * @param {obj} rules  the {rules} obj that is returned from the QB object\n          * @param {array} fields  an array of field definitions from the QB object\n          * @param {bool} dateToString  convert Dates to String format?\n          */\n         cleanRules: (rules, fields, dateToString) => {\n            this.cleanRules(rules, fields, dateToString);\n         },\n\n         getValue: () => {\n            var values = null;\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               values = QB.getValue();\n            }\n\n            // convert dates to simpler format:\n            // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n            // and webix doesn't seem to understand them when we send them back.\n            // so save simple date values: \"mm/dd/yyyy\"\n            if (values) {\n               _logic.cleanRules(values[0], values[1], true);\n            }\n\n            return values;\n         },\n\n         setValue: (values) => {\n            values = values || [];\n            if (!Array.isArray(values)) values = [values];\n            if (values.length == 0) {\n               values.push({});\n            } // push default rules\n            if (values.length < 2) {\n               values.push(this.conditionFields());\n            }\n\n            // convert dates from our server side \"string\" format into\n            // Date() objects.\n            _logic.cleanRules(values[0], values[1], false);\n\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               if (values[0] && values[0].rules && values[0].rules.length) {\n                  QB.setValue(values[0]);\n                  $$(ids.queryBuilderContainer).show();\n                  $$(ids.showQBButton).hide();\n               }\n            }\n         },\n      });\n\n      this.getValue = _logic.getValue;\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\n         \"string\",\n         \"LongText\",\n         \"number\",\n         \"date\",\n         \"email\",\n         \"formula\",\n         \"calculate\",\n      ];\n\n      var currFields = [];\n\n      if (this.currentObject) {\n         this.currentObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n\n               let type = f.key;\n               if (f.key == \"formula\" || f.key == \"calculate\") type = \"number\";\n               else if (f.key == \"LongText\") type = \"string\";\n\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: type,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // process\n   // Take the provided data and process each of our rules.\n   // @param {obj} options\n   // @return {promise}\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= this.listRules.length) {\n               resolve();\n            }\n         };\n\n         this.listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (this.listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   showQueryBuilderContainer() {\n      $$(this.ids.queryBuilderLayout).show();\n      $$(this.ids.queryBuilderContainer).show();\n      $$(this.ids.showQBButton).hide();\n   }\n\n   // // fromSettings\n   // // Create an initial set of default values based upon our settings object.\n   // // @param {obj} settings  The settings object we created in .toSettings()\n   // fromSettings (settings) {\n   // \t// settings: [\n   // \t//  { rule.settings },\n   // \t//  { rule.settings }\n   // \t// ]\n\n   // \t// clear any existing Rules:\n   // \tthis.listRules.forEach((rule)=>{\n   // \t\t$$(this.ids.rules).removeView(rule.ids.component);\n   // \t})\n   // \tthis.listRules = [];\n\n   // \tif (settings) {\n   // \t\tsettings.forEach((ruleSettings)=>{\n   // \t\t\tthis.addRule(ruleSettings);\n   // \t\t})\n   // \t}\n   // }\n\n   // // toSettings\n   // // create a settings object to be persisted with the application.\n   // // @return {array} of rule settings.\n   // toSettings () {\n   // \tvar settings = [];\n   // \tthis.listRules.forEach((r)=>{\n   // \t\tsettings.push(r.toSettings());\n   // \t})\n   // \treturn settings;\n   // }\n};\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nconst ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRule {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(listActions) {\n      this.listActions = listActions || []; // the list of Actions this Rule manages\n\n      this.actionDropList = []; // the Webix UI droplist\n      this.listActions.forEach((a) => {\n         this.actionDropList.push({ id: a.key, value: a.label });\n      });\n\n      this.selectedAction = null; // the currently selected Action.key\n      if (this.actionDropList.length > 0) {\n         this.selectedAction = this.actionDropList[0].id;\n      }\n\n      this.removable = true; // can I delete this rule?\n\n      this.currentObject = null; // What ABObject is this associated with\n      // NOTE: this is important for Actions.\n\n      this.objectQB = null; // The QueryBuilder (QB) object\n\n      this.currentForm = null;\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      // this is different because multiple instances of this View can be displayed\n      // at the same time.  So make each instance Unique:\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: myUnique(\"component\"),\n\n         selectAction: myUnique(\"chooseAction\"),\n\n         queryBuilder: myUnique(\"queryBuilder\"),\n\n         valueDisplay: myUnique(\"valueArea\"),\n      });\n\n      this.objectQB.label = L(\"When\");\n      this.objectQB.component(this.App, this.idBase);\n      this.ui = this._generateUI();\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         this.objectQB.init();\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.component(this.App, this.idBase);\n            var comp = Action.valueDisplay(ids.valueDisplay);\n\n            _logic.replaceValueDisplay(comp);\n\n            // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            comp.init();\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         replaceValueDisplay: (component) => {\n            // remove current content area:\n            var $ValueDisplay = $$(this.ids.valueDisplay);\n            if (!$ValueDisplay) return;\n\n            var children = $ValueDisplay.getChildViews();\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               $ValueDisplay.removeView(c);\n            });\n\n            $ValueDisplay.addView(component.ui);\n         },\n\n         selectAction: (newValue, oldVal) => {\n            if (newValue) {\n               $$(this.ids.component)\n                  .getChildViews()\n                  .forEach((views) => {\n                     views.show();\n                  });\n            }\n            // bonus:  save current state of previous Action\n            var prevAction = this.getAction(oldVal);\n            if (prevAction) {\n               prevAction.stashCondition(this.objectQB.getValue());\n            }\n\n            // now switch to the new Action\n            this.selectedAction = newValue;\n            var currAction = this.currentAction();\n            if (currAction) {\n               // reset Condition filters.\n               this.objectQB.setValue(currAction.condition());\n\n               // have Action display it's values form\n               currAction.component(this.App, this.idBase);\n               var component = currAction.valueDisplay(ids.valueDisplay);\n               _logic.replaceValueDisplay(component);\n               component.init();\n               // currAction.valueDisplay(ids.valueDisplay);\n            }\n         },\n      });\n   }\n\n   // not intended to be called externally\n   _generateUI() {\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rules\",\n         padding: 20,\n         // margin: 10,\n\n         // this should be a CSS setting: this.AB.Config.xxxx\n         // width: 680,\n         type: \"line\",\n         rows: [\n            {\n               view: \"template\",\n               css: \"ab-component-form-rules-delete\",\n               template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n               height: 30,\n               borderless: true,\n               hidddatasourceen: this.removable == false,\n               onClick: {\n                  \"ab-component-remove\": (e, id, trg) => {\n                     this._logic.callbacks.onDelete(this);\n                  },\n               },\n            },\n            // Action\n            {\n               id: this.ids.selectAction,\n               view: \"richselect\",\n               label: L(\"Action\"),\n               placeholder: L(\"Choose an action\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               options: this.actionDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     this._logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n\n            // Values\n            {\n               for: \"values\",\n               hidden: true,\n               cells: [\n                  {\n                     view: \"layout\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Values\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           id: this.ids.valueDisplay,\n                           view: \"layout\",\n                           rows: [\n                              {\n                                 label: L(\n                                    \" ABViewRule: This should be the Set Area\"\n                                 ),\n                                 css: \"ab-text-bold\",\n                                 height: 30,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n\n            // When\n            this.objectQB.ui,\n         ],\n      };\n   }\n\n   // return the QueryBuilder fields data for the currently selected Action.\n   conditionFields() {\n      var fields = [];\n\n      var selectedAction = this.currentAction();\n      if (selectedAction) {\n         fields = selectedAction.conditionFields();\n      }\n\n      return fields;\n   }\n\n   currentAction() {\n      return this.getAction(this.selectedAction);\n   }\n\n   getAction(key) {\n      return this.listActions.filter((a) => {\n         return a.key == key;\n      })[0];\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n      this.listActions.forEach((a) => {\n         a.objectLoad(object);\n      });\n\n      var label = L(\"When\");\n\n      this.objectQB = new ObjectQueryBuilder(label);\n      this.objectQB.objectLoad(object);\n\n      // regenerate our UI when a new object is loaded.\n      if (this.ids) {\n         this.ui = this._generateUI();\n      }\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.listActions.forEach((a) => {\n         a.formLoad(form);\n      });\n   }\n\n   processPre(options = {}) {\n      let isValid = this.isValid(options.data);\n      if (!isValid) return;\n\n      let currentAction = this.currentAction();\n      if (!currentAction) return;\n\n      currentAction.processUpdateObject({}, options.data);\n   }\n\n   // process\n   // Take the provided data and process this rule\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      var currentAction = this.currentAction();\n      if (!currentAction) return Promise.resolve();\n\n      let isValid = this.isValid(options.data);\n      if (isValid) {\n         return currentAction.process(options);\n      } else {\n         // else just resolve and continue on\n         return new Promise((resolve, reject) => {\n            resolve();\n         });\n      }\n   }\n\n   fromSettings(settings) {\n      settings = settings || {};\n\n      if (settings.selectedAction) {\n         // store our Query Rules\n         this.selectedAction = settings.selectedAction;\n         var selectedAction = this.currentAction();\n         if (!selectedAction) return;\n         selectedAction.stashCondition(settings.queryRules || {});\n\n         // if our UI components are present, populate them properly:\n         if (this.ids) {\n            // Trigger our UI to refresh with this selected Action:\n            // NOTE: this also populates the QueryBuilder\n            $$(this.ids.selectAction).setValue(this.selectedAction);\n            // this._logic.selectAction(this.selectedAction);\n         }\n\n         // now continue with setting up our settings:\n         selectedAction.fromSettings(settings.actionSettings);\n      }\n   }\n\n   toSettings() {\n      var settings = {};\n\n      if (this.selectedAction) {\n         settings.selectedAction = this.selectedAction;\n         settings.queryRules = this.objectQB.getValue();\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            settings.actionSettings = currentAction.toSettings();\n         }\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      var currAction = this.currentAction();\n      if (currAction && this.objectQB) {\n         this.objectQB.setValue(currAction.condition());\n         currAction.qbFixAfterShow();\n      }\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   async isReady() {\n      let currentAction = this.currentAction();\n      if (currentAction) {\n         return currentAction.isReady();\n      }\n      return Promise.resolve();\n   }\n\n   isValid(data = {}) {\n      const fields = this.currentObject.fields(),\n         currentAction = this.currentAction(),\n         QBCondition = currentAction.condition(),\n         query = QBCondition[0] ?? {};\n\n      const convertToNumber = (text = \"\") => {\n         // if we have multiple rules we need to check if value is already a number before converting.\n         if (typeof text == \"number\") return text;\n\n         return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n      };\n\n      // Fix string data in number type\n      // NOTE: \"1000\" > \"99\" = false    >_<!\n      fields\n         .filter(\n            (f) =>\n               f.key == \"number\" || f.key == \"calculate\" || f.key == \"formula\"\n         )\n         .forEach((f) => {\n            try {\n               // filter conditions\n               if (Array.isArray(query?.rules)) {\n                  query.rules.forEach((r) => {\n                     // NOTE: compatible with old settings\n                     if (r.key == f.id || r.key == f.columnName)\n                        r.value = convertToNumber(r.value);\n                  });\n               }\n\n               // row data\n               if (\n                  data[f.columnName] &&\n                  typeof data[f.columnName] === \"string\"\n               ) {\n                  data[f.columnName] = convertToNumber(data[f.columnName]);\n               }\n            } catch (e) {\n               // continue regardless of error\n            }\n         });\n\n      const hiddenFilter = (this.AB ?? AB).filterComplexNew(\n         `${this.idBase}_filter_complex`\n      );\n      hiddenFilter.fieldsLoad(fields, this.currentObject);\n      hiddenFilter.setValue(query);\n      hiddenFilter.init();\n\n      return hiddenFilter.isValid(data);\n\n      // var id = \"hiddenQB_\" + webix.uid();\n\n      // // if our data passes the QueryRules then tell Action to process\n      // var ui = {\n      //    id: id,\n      //    hidden: true,\n      //    view: \"querybuilder\",\n      // };\n      // var hiddenQB = webix.ui(ui);\n\n      // let currentAction = this.currentAction();\n      // var QBCondition = currentAction.condition();\n\n      // if (this.objectQB) {\n      //    this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n      // }\n\n      // let query = QBCondition[0] || {},\n      //    fields = QBCondition[1] || [];\n\n      // // hiddenQB.setValue(QBCondition);\n      // hiddenQB.setValue({\n      //    query: query,\n      //    fields: fields,\n      // });\n\n      // var QBHelper = hiddenQB.getFilterHelper();\n      // var isValid = QBHelper(data);\n\n      // hiddenQB.destructor(); // remove the QB\n\n      // return isValid;\n   }\n\n   get isPreProcess() {\n      let currentAction = this.currentAction();\n      return currentAction.isPreProcess || false;\n   }\n};\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n    */\n   constructor(App, idBase, currentForm) {\n      this.key = \"ABViewRuleAction\";\n\n      this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n      this.currentForm = null;\n\n      this.queryRules = {}; // default set of rules for the Query Builder condition\n\n      this.valueRules = {}; // the initial Value Rules for this Action\n      // The Action Subclass defines what this {} is.\n\n      this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      this.label = L(\"generic abviewruleaction\");\n\n      function myUnique(key) {\n         return App.unique(`${idBase}_${key}`);\n      }\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: `${myUnique(\"component\")}_${webix.uid()}`,\n      });\n\n      this._ui = null; // internally track our UI Component value Rules\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n      });\n   }\n\n   // condition\n   // Return the querybuilder setup structure for this Action.\n   // @return {array}  of querybuilder setup\n   //\t\t\t\t\t[\n   //\t\t\t\t\t\t{rules},\n   //\t\t\t\t\t\t[fields]\n   //\t\t\t\t\t]\n   condition() {\n      return [this.conditionRules(), this.conditionFields()];\n   }\n\n   // stashCondition\n   // capture the current set of rules provided by the QB object.\n   // This doesn't guarantee these will be saved to the App settings.\n   // Instead it is a temporary stash. Only the selected Action's\n   // values will be persisited to the App settings.\n   // @param {obj/Array} rules  The QueryBuilder rule value returned from\n   //\t\t\t\t\t\t\t .getValue()\n   //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n   //\n   stashCondition(rules) {\n      // check to see if they sent us the raw QueryBuilder values and only\n      // pull off the rules if they did\n      if (Array.isArray(rules)) {\n         rules = rules[0];\n      }\n\n      // sanity check on glue value: don't update if null or not given.\n      if (rules) {\n         // sometimes .glue is undefined  so default to 'and'\n         if (rules.glue != \"or\") rules.glue = \"and\";\n\n         this.queryRules = rules;\n      }\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      var currFields = [];\n\n      if (this.queryObject) {\n         this.queryObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: f.key,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // conditionRules()\n   // Return the current rule definition object for this Action.\n   // @return {obj}\n   conditionRules() {\n      return this.queryRules;\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      // this.currentObject = object;\t\t\t\t// DO WE NEED THIS?\n      this.queryObjectLoad(object);\n   }\n\n   // queryObjectLoad\n   // save the current object this Action is using to build query rules.\n   queryObjectLoad(object) {\n      this.queryObject = object;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      console.error(\n         \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      );\n      return new Promise((resolve, reject) => {\n         reject(\n            new Error(\n               \"ABViewRuleAction.process() should be overridden by its child class.\"\n            )\n         );\n      });\n   }\n\n   // valueDisplay\n   // create the form to collect the specific data this Action needs to function.\n   // @param {string} webixID  the $$(webixID) of the area to insert our display.\n   valueDisplay(webixID) {\n      return this.valueDisplayComponent(webixID);\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      return (this._ui = {\n         ui: {\n            template: \"ABViewRuleAction.valueDisplayComponent\",\n         },\n         init: (data) => {\n            console.error(\n               \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n            );\n            console.warn(\" --> passed in data:\", data);\n         },\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n      settings = settings ?? {};\n      this.valueRules = settings.valueRules ?? settings;\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      var settings = {};\n\n      // require the child to insert the valueRules\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   isReady() {\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      // our child classes can implement this if needed.\n      // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n   }\n};\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleList {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(childSettings) {\n      this.listRules = [];\n      this.currentObject = null;\n\n      // ensure required values:\n      childSettings = childSettings || {};\n      childSettings.labels = childSettings.labels || {};\n      childSettings.labels.header =\n         childSettings.labels.header || \"ab.components.form.ruleList\";\n      childSettings.labels.headerDefault =\n         childSettings.labels.headerDefault || \"*Rule List\";\n      this.childSettings = childSettings;\n   }\n\n   /**\n    * @method component\n    * initialize the UI display for this popup editor.\n    * @param {obj} App  The common UI App object shared among our UI components\n    * @param {string} idBase A unique Key used the the base of our unique ids\n    */\n   component(App, idBase) {\n      this.App = this.App || App;\n      this.idBase = idBase;\n\n      App = App || this.App;\n\n      this.currentForm = null;\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: `${idBase}_component`,\n         rules: `${idBase}_rules`,\n         rulesScrollview: `${idBase}_rulesScrollview`,\n\n         action: `${idBase}_action`,\n         when: `${idBase}_when`,\n\n         values: `${idBase}_values`,\n         set: `${idBase}_set`,\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"window\",\n         id: ids.component,\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: this.childSettings.labels.headerDefault,\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"iconButton\",\n                  label: L(\"Add new rule\"),\n                  width: 150,\n                  click: () => {\n                     this.addRule();\n                     console.log($$(ids.rules).$height);\n                     $$(ids.rulesScrollview).scrollTo(0, $$(ids.rules).$height);\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  view: \"scrollview\",\n                  id: ids.rulesScrollview,\n                  scroll: \"xy\",\n                  body: {\n                     view: \"layout\",\n                     id: ids.rules,\n                     margin: 20,\n                     padding: 10,\n                     rows: [],\n                  },\n               },\n               // {\n               // \tcss: { 'background-color': '#fff' },\n               // \tcols: [\n               // \t\t{\n               // \t\t\tview: \"button\",\n               // \t\t\ticon: \"plus\",\n               // \t\t\ttype: \"iconButton\",\n               // \t\t\tlabel: labels.component.addNewRule,\n               // \t\t\twidth: 150,\n               // \t\t\tclick: () => {\n               // \t\t\t\tthis.addRule();\n               // \t\t\t}\n               // \t\t},\n               // \t\t{ fillspace: true }\n               // \t]\n               // },\n               {\n                  css: { \"background-color\": \"#fff\" },\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonCancel();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"save\",\n                        label: L(\"Save\"),\n                        type: \"form\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonSave();\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // var _currentObject = null;\n      var _rules = [];\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         buttonCancel: function () {\n            $$(ids.component).hide();\n         },\n\n         buttonSave: () => {\n            var results = this.toSettings();\n\n            _logic.callbacks.onSave(results);\n            _logic.hide();\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         show: function () {\n            $$(ids.component).show();\n         },\n      });\n\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   /**\n    * @method addRule\n    * Instantiate a new Rule in our list.\n    * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n    */\n   addRule(settings) {\n      var Rule = this.getRule();\n      if (!Rule) return;\n\n      this.listRules.push(Rule);\n\n      // if we have tried to create our component:\n      if (this.ids) {\n         // if our actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            Rule.component(this.App, this.idBase); // prepare the UI component\n            var viewId = RulesUI.addView(Rule.ui);\n\n            Rule.init({\n               onDelete: (deletedRule) => {\n                  $$(this.ids.rules).removeView(Rule.ids.component);\n\n                  var index = this.listRules.indexOf(deletedRule);\n                  if (index !== -1) {\n                     this.listRules.splice(index, 1);\n                  }\n               },\n            });\n         }\n      }\n\n      if (settings) {\n         Rule.fromSettings(settings);\n      }\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      // settings: [\n      //  { rule.settings },\n      //  { rule.settings }\n      // ]\n\n      // clear any existing Rules:\n      this.listRules.forEach((rule) => {\n         if (\n            this.ids &&\n            this.ids.rules &&\n            rule &&\n            rule.ids &&\n            rule.ids.component\n         ) {\n            $$(this.ids.rules).removeView(rule.ids.component);\n         }\n      });\n      this.listRules = [];\n\n      if (settings) {\n         settings.forEach((ruleSettings) => {\n            this.addRule(ruleSettings);\n         });\n      }\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.currentObject = object;\n\n      // tell each of our rules about our object\n      this.listRules.forEach((r) => {\n         r.objectLoad(object);\n      });\n   }\n\n   processPre(options) {\n      (this.listRules || [])\n         .filter((rule) => rule.isPreProcess == true)\n         .forEach((rule) => {\n            rule.processPre(options, options.data);\n         });\n   }\n\n   /**\n    * @method process\n    * Take the provided data and process each of our rules.\n    * @param {obj} options\n    * @return {promise}\n    */\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let listRules = (this.listRules || []).filter(\n            (rule) => !rule.isPreProcess\n         );\n\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= listRules.length) {\n               resolve();\n            }\n         };\n\n         listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   /**\n    * @method toSettings\n    * create a settings object to be persisted with the application.\n    * @return {array} of rule settings.\n    */\n   toSettings() {\n      var settings = [];\n      this.listRules.forEach((r) => {\n         settings.push(r.toSettings());\n      });\n      return settings;\n   }\n\n   getRule() {\n      console.error(\n         \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n      );\n      return null;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.App = this.App || form.App;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   rulesReady() {\n      // This base class should be overwritten by any subclass that needs\n      // to prepare:\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      this.listRules.forEach((r) => {\n         r.qbFixAfterShow();\n      });\n   }\n};\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Record\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\nconst RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nconst RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\nconst RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nmodule.exports = class ABViewRuleListFormRecordRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.components.form.recordRules\",\n            headerDefault: \"*Record Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleUpdateExisting(\n            this.App,\n            `${this.idBase}_ruleActionUpdate`,\n            this.currentForm\n         ),\n         new RoleInsertConnected(\n            this.App,\n            `${this.idBase}_ruleActionInsert`,\n            this.currentForm\n         ),\n         new RoleUpdateConnected(\n            this.App,\n            `${this.idBase}_ruleActionUpdateConnected`,\n            this.currentForm\n         ),\n         new RoleRemoveConnected(\n            this.App,\n            `${this.idBase}_ruleActionRemoveConnected`,\n            this.currentForm\n         ),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      if (this.currentObject) {\n         Rule.objectLoad(this.currentObject);\n      }\n      return Rule;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our list of Rules is\n    * ready to work.\n    * @return {Promise}\n    */\n   async rulesReady() {\n      var allReady = (this.listRules || []).map((r) => r.isReady());\n      await Promise.all(allReady);\n   }\n};\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleConfirmMessage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\");\nconst RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\nconst RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\nconst RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\nconst RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nconst RuleEmail = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\");\n\nmodule.exports = class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.component.form.submitRule\",\n            headerDefault: \"*Submit Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleConfirmMessage(\n            this.App,\n            `${this.idBase}_ruleActionConfirmMessage`\n         ),\n         new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n         new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n         new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n         new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         new RuleEmail(this.App, `${this.idBase}_ruleActionEmail`),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      Rule.objectLoad(this.currentObject);\n      Rule.formLoad(this.currentForm);\n      return Rule;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleInsertConnected\n//\n// An action that allows you to insert a connected object.\n//\n// NOTE: this is very similar to the Update Connected Rule, so we subclass that one and\n// modify it to only Insert data.\n//\n//\nconst UpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleInsertConnected extends (\n   UpdateConnected\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleInsertConnected\";\n      this.label = L(\"Insert Connected Object\");\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var Component = super.valueDisplayChooser(idBase);\n\n      // in our case, there are no additional QB conditions:\n      // so overwrite the .showQBIfNeeded() routine to not show anything:\n      Component._logic.showQBIfNeeded = function () {};\n\n      return Component;\n   }\n\n   /**\n    * queryBuilderDisplay\n    * override our parent .queryBuilderDisplay to not create a new .objectQB\n    * @return {null}\n    */\n   queryBuilderDisplay() {\n      return null;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      // var condition = null; // our lookup condition\n\n      // we are going to create a new instance of the connected object\n      // and make sure our .id is in the connected object's connectionField\n      // the server side will take care of making the proper relationship.\n\n      // first, create a new set of values:\n      var newObjectValues = {};\n\n      // update them according to our rules\n      this.processUpdateObject({}, newObjectValues);\n\n      if (newObjectValues.newRecords) {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues.newRecords.forEach((r) => {\n            r[connectedObjectField.columnName] = options.data.id;\n            // perform the update/insert\n            return model.create(r);\n         });\n      } else {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues[connectedObjectField.columnName] = options.data.id;\n\n         // perform the update/insert\n         return model.create(newObjectValues);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //\tvalueRules:{}\t\t// from ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      // we don't use .qpCondition\n      delete settings.qbCondition;\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleRemoveConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionFormRecordRuleUpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleRemoveConnected extends (\n   ABViewRuleActionFormRecordRuleUpdateConnected\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleRemoveConnected\";\n      this.label = L(\"Remove Connected Record\");\n\n      this.isUpdateValueDisabled = true; // disable update data of each fields\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      let selectedField = this.selectedField();\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         // get the model from the provided Form Obj:\n         let dc = options.form.datacollection;\n         if (!dc) return resolve();\n\n         let model = dc.model;\n         if (!model) return resolve();\n\n         let updatedVals = {};\n         updatedVals[selectedField.columnName] = \"\";\n\n         model\n            .update(options.data.id, updatedVals)\n            .then(resolve)\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n                  data: options.data,\n               });\n               reject(err);\n            });\n      });\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdate\n//\n// An action that allows you to update fields on an object that was currently\n// Added/Updated.\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdate extends (\n   ABViewRuleActionObjectUpdater\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n   }\n\n   get isPreProcess() {\n      return true;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ObjectQueryBuilder = require(\"../ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdateConnected extends (\n   ABViewRuleActionObjectUpdater\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n      this.label = L(\"Update Connected Record\");\n\n      this.baseObject = null; // the object the current form is working with.\n      // Use this to find our connected fields.\n\n      this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n      // used for updating.  This should be one of the connection Fields.\n\n      this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n      this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n      this.qbCondition = null; // the QB condition entered for selecting which remote object.\n   }\n\n   // field\n\n   /**\n    * objectLoad\n    * save the current object this Action is associated with.\n    * in the case of the UpdateConnected Action, assigning us\n    * this object only impacts the queryObject.\n    *\n    * The Updater form will use another object we select in\n    * the form dropdown.\n    *\n    * @param {object} object\n    *\n    */\n   objectLoad(object) {\n      this.queryObjectLoad(object);\n      this.baseObject = object;\n\n      // now build our fieldDropList for the select\n      var connectionFields = this.connectedFieldList();\n      connectionFields.forEach((cf) => {\n         this.fieldDropList.push({\n            id: cf.id,\n            value: cf.label,\n         });\n      });\n   }\n\n   /**\n    * connectedFieldList\n    * return the fields in our .baseObject that are connections to other objects.\n    * @return {array} of {ABField}\n    */\n   connectedFieldList() {\n      var connectKey = ABFieldConnect.defaults().key;\n      if (this.baseObject && this.baseObject.fields) {\n         return this.baseObject.fields((f) => {\n            return f.key == connectKey;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * connectedObject\n    * return the ABObject associated with the selected connection field.\n    * @return {ABObject}\n    */\n   connectedObject() {\n      if (this.selectedFieldID) {\n         var selectedField = this.selectedField();\n         if (selectedField) {\n            return selectedField.datasourceLink;\n         }\n      }\n\n      return null;\n   }\n\n   /**\n    * selectedField\n    * return the selected {ABField} object.\n    * @return {ABField}\n    */\n   selectedField() {\n      return this.connectedFieldList().filter((f) => {\n         return f.id == this.selectedFieldID;\n      })[0];\n   }\n\n   /**\n    * valueDisplayComponent\n    * Return an ABView to display our values form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayComponent(idBase) {\n      if (this._uiChooser == null) {\n         this._uiChooser = this.valueDisplayChooser(idBase);\n      }\n\n      return this._uiChooser;\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         component: myUnique(\"updateConnectedValues\"),\n         updateForm: myUnique(\"updateChooser\"),\n         selectConnectedField: myUnique(\"updateSelect\"),\n         updateFieldsForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rule\",\n         rows: [\n            {\n               id: ids.selectConnectedField,\n               view: \"richselect\",\n               label: L(\"Select which connected object to update.\"),\n               labelWidth: 300,\n               value: this.selectedField,\n               options: this.fieldDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     _logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n         ],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n\n         // make sure our currently selected field is selected.\n         if (this.selectedFieldID) {\n            var select = $$(ids.selectConnectedField);\n            if (select) {\n               select.setValue(this.selectedFieldID);\n            }\n         }\n      };\n\n      var _logic = (this._logic = {\n         addDisplay: (view) => {\n            $$(ids.component).addView(view);\n         },\n\n         // removePreviousDisplays\n         // remove the previous components that reflected the conditions and\n         // update values of the previously selected field.\n         removePreviousDisplays: () => {\n            var allViews = $$(ids.component).getChildViews();\n            var cloneAllViews = [];\n            allViews.forEach((v) => {\n               cloneAllViews.push(v);\n            });\n            cloneAllViews.forEach((v) => {\n               // don't remove the field picker\n               if (v.config.id != ids.selectConnectedField) {\n                  $$(ids.component).removeView(v);\n               }\n            });\n         },\n\n         selectAction: (newVal, oldVal) => {\n            _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n            this.selectedFieldID = newVal;\n            var connectedObject = this.connectedObject();\n\n            if (connectedObject) {\n               // it is the remote object that we are allowed to Update fields on.\n               this.updateObjectLoad(connectedObject);\n               ///// NOTE: important to call super.valueDisplayComponent()\n               this.updateComponent = super.valueDisplayComponent(\n                  ids.updateFieldsForm\n               ); // parent obj\n\n               _logic.showQBIfNeeded();\n\n               // create a new blank update form\n               _logic.addDisplay(this.updateComponent.ui);\n               this.updateComponent.init();\n\n               if (this.isUpdateValueDisabled) {\n                  let $updateForm = $$(this.updateComponent.ui.id);\n                  if ($updateForm) {\n                     $updateForm.disable();\n                     $updateForm.hide();\n                  }\n               }\n            } else {\n               this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n                  fieldID: this.selectedFieldID,\n               });\n            }\n         },\n\n         showQBIfNeeded: () => {\n            //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n            //// the user the ability to set a condition on the update even if the field\n            //// is only a one to one.\n            //// If we want to remove the filter in case of a \"one\" linkType, then put\n            //// these conditions back in:\n\n            // var field = this.selectedField();\n\n            // // we don't need the QB if the destination object link type if 'one'.\n            // // there will only be one to get back, so no conditions needed.\n            // if (field.settings.linkType != 'one') {\n\n            var qbComponent = this.queryBuilderDisplay();\n\n            qbComponent.component(this.App, this.idBase);\n            _logic.addDisplay(qbComponent.ui);\n            qbComponent.init({});\n\n            // }\n         },\n\n         fromSettings: (settings) => {\n            // // first time through, be sure to set the connectedObject first\n            // this.selectedFieldID = settings.selectedFieldID;\n            // var connectedObject = this.connectedObject();\n\n            // this triggers the update of the display, creation of QB,\n            $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n            if (this.objectQB) {\n               this.objectQB.setValue(this.qbCondition);\n            }\n\n            if (this.updateComponent) {\n               this.updateComponent.fromSettings(settings);\n            }\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(rowSettings);\n               }\n            });\n\n            return settings;\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   /**\n    * queryBuilderDisplay\n    * returns our Query Builder object used in our display.\n    * It is called by the .showQBIfNeeded() method.\n    * @return {ABViewQueryBuilderObjectFieldConditions}\n    */\n   queryBuilderDisplay() {\n      if (!this.objectQB) {\n         this.objectQB = new ObjectQueryBuilder(\n            L(\"How to choose which object:\")\n         );\n\n         var connObj = this.connectedObject();\n         if (connObj) this.objectQB.objectLoad(connObj);\n      }\n      return this.objectQB;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      this._formData = options.data;\n\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      var condition = null; // our lookup condition\n\n      // modifyCondition\n      // async fn() to fill out what the condition should be for limiting the remote\n      // objects to values in use by the current object.\n      // @param {fn} cb  the callback to use when we are finished:\n      //\t\t\t\t\tcb(err, )\n      var modifyCondition = (cb) => {\n         // So, let's get a copy of our current data, with all it's connected items\n         // attached.\n         var thisModel = this.baseObject.model();\n         thisModel\n            .findConnected(connectionField.columnName, options.data)\n            .then((items) => {\n               // if we didn't get any results, then simply return\n               // NOTE: this will leave condition == null and cancel this update.\n               if (!items || items.length == 0) {\n                  cb();\n                  return;\n               }\n\n               // then use these to limit the connected data of our Action:\n\n               // get all the ids\n               var ids = items.map((i) => {\n                  return i.id;\n               });\n\n               // resulting condition: { id in [listIDs]} AND { QB Condition }\n               condition = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: `${connObj.tableName}.${connObj.PK()}`,\n                        rule: \"in\",\n                        value: ids,\n                     },\n                  ],\n               };\n\n               // check to make sure qbCondition actually has a condition before adding it\n               // to our condition:\n               if (Object.keys(this.qbCondition).length > 0) {\n                  condition.rules.push(this.qbCondition);\n               }\n\n               cb();\n            })\n            .catch(cb);\n      };\n\n      // .process() returns a Promise\n      return new Promise((resolve, reject) => {\n         // upateIt()\n         // updates a given item with our changes.\n         // @param {obj} item  the item to update\n         // @param {fn}  cb    a callback function when update is complete.\n         var updateIt = (item, cb) => {\n            let isUpdated = this.processUpdateObject({}, item);\n            if (!isUpdated) {\n               cb();\n            } else {\n               model\n                  .update(item.id, item)\n                  .then(() => {\n                     cb();\n                  })\n                  .catch((err) => {\n                     this.AB.notify.developer(err, {\n                        message:\n                           \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n                        data: options.data,\n                     });\n                     cb(err);\n                  });\n            }\n         };\n\n         // now figure out which elements belong to this object\n         // done in modifyCondition()\n         modifyCondition((err) => {\n            if (err) {\n               AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.modifyCondition: error:\",\n                  data: options.data,\n               });\n               reject(err);\n               return;\n            }\n\n            if (condition === null) {\n               // this is the case where we didn't have the proper data to complete our\n               // update.  So let's just fail gracefully, and continue on.\n\n               // QUESTION: is this the right way to handle it?\n               resolve();\n            } else {\n               // get all the entries that match our condition:\n               model\n                  .findAll({ where: condition })\n                  .then((list) => {\n                     var done = 0;\n\n                     // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n                     if (list && list.data) {\n                        list = list.data;\n                     }\n\n                     // for each entry, update it with our values:\n                     list.forEach((item) => {\n                        updateIt(item, (err) => {\n                           if (err) {\n                              return reject(err);\n                           }\n                           done++;\n                           if (done >= list.length) {\n                              // now they are all updated, so continue.\n                              resolve();\n                           }\n                        });\n                     });\n\n                     // if there were no entries to update -> continue\n                     if (list.length == 0) {\n                        resolve();\n                     }\n                  })\n                  .catch(reject);\n            }\n         }); // end modifyCondition()\n      }); // end Promise()\n   }\n\n   /**\n    * fromSettings\n    * initialize this Action = require(a given set of setting values.\n    * @param {obj} settings  the settings {} returned = require(toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      this.selectedFieldID = settings.selectedFieldID || null;\n      this.qbCondition = settings.qbCondition || {};\n\n      super.fromSettings(settings);\n\n      // if we have a display component, then populate it:\n      if (this._uiChooser) {\n         this._logic.fromSettings(settings);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //  qbCondition: [],\n      //\tvalueRules:{}\t\t// = require(ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.selectedFieldID = this.selectedFieldID;\n\n      var qbCond = null;\n      if (this.objectQB) {\n         qbCond = this.objectQB.getValue();\n         if (Array.isArray(qbCond)) {\n            qbCond = qbCond[0];\n         }\n\n         // FIX: make sure qbCond root element has a 'glue'\n         if (qbCond) {\n            qbCond.glue = qbCond.glue || \"and\";\n         }\n      }\n      settings.qbCondition = qbCond;\n\n      // if we have a display component, then request our details = require(it:\n      if (this._uiChooser) {\n         settings.valueRules = this._logic.toSettings();\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      if (this.objectQB) {\n         this.objectQB.setValue(this.qbCondition);\n      }\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleClosePopup\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleClosePopup extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleClosePopup\";\n      this.label = L(\"Close the current popup\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"layout\",\n            rows: [],\n         },\n\n         init: () => {},\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let form = options.form;\n         if (!form) return;\n\n         let popup = form.pageParent((p) => p.settings.type == \"popup\");\n         if (!popup) return;\n\n         // get the dom id of page. it is dom id that is generated in ABLiveTool.js\n         // let pageDomId = [\"ab_live_page\", popup.application.id, popup.id].join(\n         //    \"_\"\n         // );\n\n         // close current popup\n         let $popup = $$(popup.id);\n         if ($popup) $popup.hide();\n\n         // this clears the UI's record of the current form.\n         options.form.changePage(null);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleConfirmMessage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n      this.label = L(\"Show a confirmation message\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.message,\n            view: \"textarea\",\n            // label: this.labels.component.message,\n            // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            height: 130,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.message).setValue(valueRules.message || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               message: $$(ids.message).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var confirmMessage = this.valueRules.message || \"\";\n\n         webix.message({\n            text: confirmMessage,\n            type: \"info\",\n         });\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleEmail extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n      this.label = L(\"Send a custom email\");\n\n      this.queryObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.queryObject) {\n   //       this.queryObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         form: `${idBase}_form`,\n         popup: `${idBase}_popup`,\n         list: `${idBase}_fieldList`,\n         toEmailsContainer: `${idBase}_toEmailsContainer`,\n         toEmails: `${idBase}_toEmails`,\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (newVal, oldVal) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    \"Email is invalid\"\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    _logic.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        view: \"textarea\",\n                        id: ids.message,\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     // \tview: 'label',\n                     // \tlabel: 'Message',\n                     // \tcss: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     // \tview: 'forminput',\n                     // \tid: ids.message,\n                     // \tname: 'message',\n                     // \tlabel: 'Message',\n                     // \tcss: \"ab-rich-text\",\n                     // \twidth: 320,\n                     // \theight: 400,\n                     // \tbody: {\n                     // \t\tview: 'tinymce-editor'\n                     // \t}\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: function (obj, common) {\n                           return _logic.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id, e, node) {\n                              var component = this.getItem(id);\n\n                              _logic.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n\n         init: () => {\n            if (this.queryObject) {\n               $$(ids.list).parse(\n                  this.queryObject.fields((f) => f.fieldUseAsLabel())\n               );\n               $$(ids.list).refresh();\n            }\n\n            _logic.refreshUI();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.form).setValues(valueRules);\n\n            // Populate recipients\n            var recipients = valueRules.toEmails || [];\n            recipients.forEach((r) => {\n               _logic.toEmailAdd({\n                  type: r.type, // 'to', 'cc' or 'bcc'\n                  emailType: r.emailType, // 'email' or 'field'\n                  value: r.value,\n               });\n            });\n\n            _logic.refreshUI();\n         },\n\n         toSettings: () => {\n            var formVals = $$(ids.form).getValues() || {};\n\n            // Get recipients\n            var recipients = [];\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((e) => {\n                  // var type = e.queryView({ name: 'type' }).getValue();\n                  var type = \"to\"; // TODO\n                  var emailType = e.queryView({ name: \"emailType\" }).getValue();\n                  var value = e.queryView({ name: emailType }).getValue();\n\n                  recipients.push({\n                     type: type,\n                     emailType: emailType,\n                     value: value,\n                  });\n               });\n\n            // return the confirm message\n            return {\n               fromName: formVals[\"fromName\"],\n               fromEmail: formVals[\"fromEmail\"],\n               toEmails: recipients,\n               subject: formVals[\"subject\"],\n               message: formVals[\"message\"],\n            };\n         },\n\n         /**\n          * @method toEmailTemplate\n          *\n          * @param settings - {\n          * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n          * \t\t\temailType: string, // 'email' or 'field'\n          * \t\t\tvalue: string\n          * }\n          */\n         toEmailTemplate: (settings) => {\n            settings = settings || {};\n\n            return {\n               width: 320,\n               cols: [\n                  // {\n                  // \tview: 'richselect',\n                  // \tname: 'type',\n                  // \tvalue: settings.type || 'to',\n                  // \twidth: 80,\n                  // \toptions: [\n                  // \t\t{ id: 'to', value: \"To:\" },\n                  // \t\t// EmailNotification does not support cc, bcc and reply.\n                  // \t\t// { id: 'cc', value: \"Cc:\" },\n                  // \t\t// { id: 'bcc', value: \"Bcc:\" },\n                  // \t\t// { id: 'reply', value: \"Reply-To:\" }\n                  // \t]\n                  // },\n                  {\n                     view: \"richselect\",\n                     name: \"emailType\",\n                     value: settings.emailType || \"email\",\n                     width: 150,\n                     options: [\n                        {\n                           id: \"email\",\n                           value: L(\"A custom email address\"),\n                        },\n                        { id: \"field\", value: L(\"An email field\") },\n                        { id: \"query\", value: L(\"From query\") },\n                     ],\n                     on: {\n                        onChange: function (newVal, oldVal) {\n                           _logic.emailTypeChange(newVal, this);\n                        },\n                     },\n                  },\n                  {\n                     width: 150,\n                     name: \"emailValue\",\n                     visibleBatch: settings.emailType || \"email\",\n                     cols: [\n                        {\n                           view: \"text\",\n                           name: \"email\",\n                           batch: \"email\",\n                           value:\n                              settings.emailType == \"email\"\n                                 ? settings.value\n                                 : \"\",\n                           validate: webix.rules.isEmail,\n                           width: 150,\n                           on: {\n                              onChange: function (newVal, oldVal) {\n                                 _logic.toEmailValidate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"field\",\n                           batch: \"field\",\n                           value:\n                              settings.emailType == \"field\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.emailFieldOptions(),\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"query\",\n                           batch: \"query\",\n                           value:\n                              settings.emailType == \"query\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.queryOptions(),\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash-o\",\n                     width: 32,\n                     click: function () {\n                        var $toView = this.getParentView();\n\n                        _logic.toEmailRemove($toView);\n                     },\n                  },\n               ],\n            };\n         },\n\n         toEmailAdd: (settings) => {\n            var count = $$(ids.toEmails).getChildViews().length;\n\n            $$(ids.toEmails).addView(_logic.toEmailTemplate(settings), count);\n\n            _logic.refreshUI();\n         },\n\n         emailTypeChange: (type, $select) => {\n            var $recipient = $select.getParentView();\n            var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n            switch (type) {\n               case \"field\":\n                  $emailValue.showBatch(\"field\");\n                  break;\n               case \"query\":\n                  $emailValue.showBatch(\"query\");\n                  break;\n               default:\n                  $emailValue.showBatch(\"email\");\n                  break;\n            }\n\n            $$(ids.toEmailsContainer).adjust();\n         },\n\n         toEmailRemove: ($toView) => {\n            $$(ids.toEmails).removeView($toView);\n\n            _logic.refreshUI();\n         },\n\n         toEmailValidate: () => {\n            var isAllValid = true;\n\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((v) => {\n                  let emailText = v.queryView({ name: \"email\" });\n                  if (emailText.getValue() && !emailText.validate()) {\n                     isAllValid = false;\n                  }\n               });\n\n            if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n            else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n         },\n\n         fieldTemplate: (field, common) => {\n            return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n         },\n\n         emailFieldOptions: () => {\n            var existsFieldIds = [];\n            var options = [];\n\n            var fnAddOptions = (currObj, fLink) => {\n               var emailFields = currObj\n                  .fields((f) => f instanceof ABFieldEmail)\n                  .map((f) => {\n                     var optId = \"\",\n                        optLabel = \"\";\n\n                     if (fLink) {\n                        optId = `${fLink.id}|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                     } else {\n                        optId = `|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label}`;\n                     }\n\n                     return {\n                        id: optId, // linkFieldId|fieldUrl\n                        value: optLabel,\n                     };\n                  });\n\n               // TODO: prevent duplicate\n\n               options = options.concat(emailFields);\n            };\n\n            fnAddOptions(this.queryObject);\n\n            this.queryObject.connectFields().forEach((f) => {\n               // prevent looping\n               if (\n                  // - prevent include connect objects of the base object\n                  // f.datasourceLink.id == this.queryObject.id ||\n                  // - check duplicate include objects\n                  existsFieldIds.indexOf(f.id) > -1\n               )\n                  return;\n\n               // store\n               existsFieldIds.push(f.id);\n\n               // add email fields of link object\n               fnAddOptions(f.datasourceLink, f);\n            });\n\n            return options;\n         },\n\n         queryOptions: () => {\n            var options = [];\n\n            // get data collections who is query and contains email field\n            let dcQueries = this.currentForm.AB.datacollections((dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            });\n\n            dcQueries.forEach((dv) => {\n               if (dv.datasource) {\n                  dv.datasource\n                     .fields((f) => f.key == \"email\")\n                     .forEach((f) => {\n                        options.push({\n                           id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n                           value: `${dv.label}.${f.label}`,\n                        });\n                     });\n               }\n            });\n\n            return options;\n         },\n\n         enterField: (field) => {\n            var focusElem = webix.UIManager.getFocus();\n            var val = \"\";\n\n            if (\n               focusElem.config.view != \"text\" ||\n               focusElem.config.view != \"textarea\"\n            ) {\n               if (focusElem.getValue) val = focusElem.getValue();\n\n               if (focusElem.setValue)\n                  focusElem.setValue(`${val}${field.label}`);\n\n               webix.UIManager.setFocus(focusElem);\n            }\n         },\n\n         refreshUI: () => {\n            $$(ids.toEmailsContainer).adjust();\n            $$(ids.message).adjust();\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options - {\n   //\t\t\t\t\t\t\tdata: {obj} rowData,\n   //\t\t\t\t\t\t\tform: {ABViewForm}\n   //\t\t\t\t\t\t}\n   process(options) {\n      // validate sender's email is invalid\n      if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n         return Promise.resolve();\n      }\n\n      var recipients = [];\n\n      return Promise.resolve()\n         .then(() => {\n            // Pull recipients data\n            return new Promise((resolve, reject) => {\n               var tasks = [];\n\n               this.valueRules.toEmails.forEach((rec) => {\n                  tasks.push(\n                     new Promise((next, err) => {\n                        // TODO: Cc, Bcc\n\n                        // field\n                        if (rec.emailType == \"field\") {\n                           var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n                           var emailField = this.queryObject.application.urlResolve(\n                              emailFieldUrl\n                           );\n                           if (emailField) {\n                              // Pull email source object\n                              if (emailField.object.id == this.queryObject.id) {\n                                 var emailData =\n                                    options.data[emailField.columnName];\n                                 if (emailData)\n                                    recipients = recipients.concat(emailData);\n                              }\n                              // Pull emails from link object\n                              else {\n                                 let linkFieldId = rec.value.split(\"|\")[0];\n                                 let linkFields = this.queryObject.fields(\n                                    (f) =>\n                                       f instanceof ABFieldConnect &&\n                                       f.id == linkFieldId\n                                 );\n                                 linkFields.forEach((f) => {\n                                    var linkedData =\n                                       options.data[f.relationName()] || [];\n\n                                    // convert to an array\n                                    if (\n                                       linkedData &&\n                                       !Array.isArray(linkedData)\n                                    )\n                                       linkedData = [linkedData];\n\n                                    // pull email address\n                                    linkedData.forEach((d) => {\n                                       var email = d[emailField.columnName];\n                                       if (email)\n                                          recipients = recipients.concat(email);\n                                    });\n                                 });\n                              }\n\n                              next();\n                           } else {\n                              next();\n                           }\n                        }\n\n                        // query\n                        else if (rec.emailType == \"query\") {\n                           var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n                           if (!dvIdAndFieldId) return next();\n\n                           var dcId = dvIdAndFieldId.split(\"|\")[0];\n                           var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n                           var dcQuery = this.currentForm.AB.datacollectionByID(\n                              dcId\n                           );\n                           if (!dcQuery) return next();\n\n                           var field = dcQuery.datasource.fieldByID(fieldId);\n                           if (!field) return next();\n\n                           // get data of data collection\n                           dcQuery.getData().forEach((data) => {\n                              var emailAddr = data[field.columnName];\n                              if (emailAddr) recipients.push(emailAddr);\n                           });\n\n                           next();\n                        }\n\n                        // email\n                        else {\n                           recipients.push(rec.value);\n                           next();\n                        }\n                     })\n                  );\n               });\n\n               Promise.all(tasks).catch(reject).then(resolve);\n            });\n         })\n         .then(() => {\n            // send out\n            return new Promise((resolve, reject) => {\n               recipients = this.AB.uniq(recipients).filter((r) => r);\n\n               if (!recipients || recipients.length < 1) return resolve();\n\n               // replace form value to template\n               var fromName = this.valueRules.fromName,\n                  subject = this.valueRules.subject,\n                  message = this.valueRules.message;\n\n               this.queryObject\n                  .fields((f) => f.fieldUseAsLabel())\n                  .forEach((f) => {\n                     var template = new RegExp(`{${f.label}}`, \"g\"),\n                        data = f.format(options.data);\n\n                     fromName = fromName.replace(template, data);\n                     subject = subject.replace(template, data);\n                     message = message.replace(template, data);\n                  });\n\n               // send a email\n               this.AB.Network.post({\n                  url: \"/app_builder/email\",\n                  params: {\n                     fromName: fromName,\n                     fromEmail: this.valueRules.fromEmail,\n                     subject: subject,\n                     message: message,\n                     recipients: this.AB.uniq(recipients),\n                  },\n               })\n                  .then(() => {\n                     resolve();\n                  })\n                  .catch(reject);\n            });\n         });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleExistPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleExistPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleExistPage\";\n      this.label = L(\"Redirect to an existing page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         pagesAndTabs: `${idBase}_PagesAndTabs`,\n      };\n\n      this._ui = {\n         ui: { id: ids.pagesAndTabs, view: \"richselect\", options: [] },\n\n         init: () => {\n            _logic.populateOptions();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         populateOptions: () => {\n            // Pull page list to \"Redirect to an existing page\"\n            var _pageOptions = [];\n\n            /**\n             * @param pageOrTab\t{Object}\t- ABViewPage or ABViewTab\n             * @param indent\t{integer}\n             * @param type\t\t{string}\t- 'page' or 'tab'\n             * @param pageId\t{uuid}\t\t- the id of page (only tab)\n             */\n            var addPage = (pageOrTab, indent, type, pageId) => {\n               indent = indent || \"\";\n\n               let icon = \"fa fa-file-o\";\n               if (type == \"tab\") icon = \"fa fa-window-maximize\";\n\n               let pageParent = pageOrTab.pageParent();\n\n               _pageOptions.push({\n                  id: pageOrTab.id,\n                  value: indent + pageOrTab.label,\n                  type: type,\n                  pageId: pageParent ? pageParent.id : null,\n\n                  icon: icon,\n               });\n\n               if (type == \"page\" || type == \"tab\") {\n                  if (pageOrTab.pages) {\n                     pageOrTab.pages().forEach(function (p) {\n                        addPage(p, indent + \"-\", \"page\");\n                     });\n                  }\n\n                  // add 'tab' options\n                  if (pageOrTab.views) {\n                     pageOrTab\n                        .views((v) => v.key == \"tab\")\n                        .forEach((tab) => {\n                           // add 'tab view' to options\n                           tab.views().forEach((tabView) => {\n                              addPage(\n                                 tabView,\n                                 indent + \"-\",\n                                 \"tab\",\n                                 pageOrTab.id\n                              );\n                           });\n                        });\n                  }\n               }\n            };\n\n            addPage(this.currentForm.pageRoot(), \"\", \"page\");\n\n            $$(ids.pagesAndTabs).define(\"options\", _pageOptions);\n            $$(ids.pagesAndTabs).refresh();\n         },\n\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.pagesAndTabs).setValue(\n               valueRules.tabId || valueRules.pageId || \"\"\n            );\n         },\n\n         toSettings: () => {\n            var result = {};\n\n            var selectedId = $$(ids.pagesAndTabs).getValue();\n            var selectedItem = $$(ids.pagesAndTabs)\n               .getPopup()\n               .getList()\n               .config.data.filter((opt) => opt.id == selectedId)[0];\n            if (selectedItem) {\n               if (selectedItem.type == \"tab\") {\n                  // store page id and tab id\n                  result = {\n                     pageId: selectedItem.pageId,\n                     tabId: selectedId,\n                  };\n               } else {\n                  // store only page id\n                  result = {\n                     pageId: selectedId,\n                  };\n               }\n            }\n\n            // return the confirm message\n            return result;\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect page\n         if (this.valueRules.pageId) {\n            options.form.changePage(this.valueRules.pageId);\n\n            if (this.valueRules.tabId) {\n               var curPage = options.form.application.pages(\n                  (p) => p.id == this.valueRules.pageId,\n                  true\n               )[0];\n               if (!curPage) return resolve();\n\n               // switch tab\n               var tabView = curPage.views(\n                  (v) => v.id == this.valueRules.tabId,\n                  true\n               )[0];\n               if (!tabView) return resolve();\n\n               var tab = tabView.parent;\n               if (!tab) return resolve();\n\n               var toggleParent = (element) => {\n                  if (!element.parent) return false;\n                  var parentElem = element.parent;\n                  if (!parentElem.parent) return false;\n                  parentElem.parent.emit(\"changeTab\", parentElem.id);\n                  toggleParent(parentElem.parent);\n               };\n\n               toggleParent(tab);\n               let showIt = setInterval(function () {\n                  if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                     clearInterval(showIt);\n                     return;\n                  }\n                  tab.emit(\"changeTab\", tabView.id);\n               }, 100);\n            }\n         }\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleParentPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleParentPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleParentPage\";\n      this.label = L(\"Redirect to the parent page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"label\",\n            label: this.label,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n      };\n\n      var _logic = {};\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var pageCurrent = options.form.pageParent();\n         var pageParent = pageCurrent.pageParent();\n\n         // redirect page\n         options.form.changePage(pageParent.id);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleWebsite extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleWebsite\";\n      this.label = L(\"Redirect to another website URL\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         website: `${idBase}_website`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.website,\n            view: \"text\",\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.website).setValue(valueRules.website || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               website: $$(ids.website).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect to website\n         if (this.valueRules.website)\n            window.open(\n               `http://${this.valueRules.website.replace(\"http://\", \"\")}`,\n               \"_blank\"\n            );\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nmodule.exports = class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n\n      this.updateObject = null; // the object this Action will Update.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n\n      this.stashRules = {}; // keep track of rule settings among our selected objects.\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      if (this._uiUpdater == null) {\n         this._uiUpdater = this.valueDisplayList(idBase);\n      }\n\n      return this._uiUpdater;\n   }\n\n   // Our Values Display is a List of ValueRows\n   // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n   valueDisplayList(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n      var ids = {\n         updateForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         view: \"form\",\n         id: ids.updateForm,\n         elements: [],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n         _logic.setValues(valueRules);\n      };\n\n      var _logic = {\n         removeAddRow: () => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n\n            var addRow = rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            })[0];\n            if (!addRow) return;\n\n            UpdateForm.removeView(addRow);\n         },\n\n         // addRow\n         // add a new data entry to this form.\n         // @param {obj} data  (optional) initial values for this row.\n         addRow: (data) => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n            if (\n               data == null &&\n               rows.filter((r) => {\n                  return r.queryView(function (view) {\n                     return view.config.name == \"field\" && !view.getValue();\n                  });\n               }).length > 0\n            )\n               return;\n\n            // get a new Row Component\n            var row = this.valueDisplayRow(idBase);\n\n            // add row to Form\n            UpdateForm.addView(row.ui);\n\n            // initialize row with any provided data:\n            row.init({\n               onAdd: () => {\n                  // add a new Row\n                  _logic.addRow();\n               },\n               onDelete: (rowId) => {\n                  // remove a row\n                  _logic.delRow(rowId);\n               },\n               data: data,\n            });\n\n            // store this row\n            this.formRows.push(row);\n         },\n\n         delRow: (rowId) => {\n            // store this row\n            this.formRows.forEach((r, index) => {\n               if (r.ui.id == rowId) this.formRows.splice(index, 0);\n            });\n\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // remove UI\n            UpdateForm.removeView($$(rowId));\n         },\n\n         formClear: () => {\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            var children = UpdateForm.getChildViews();\n\n            // NOTE: need to clone this array, because it is connected with the UpdatForm's\n            // internal array of items.  Once we start .removeView() the element actually\n            // is removed from the internal array, which then upset's the .forEach() from\n            // properly iterating through the structure.  It results in missed items from\n            // being sent to the .forEach().\n            // So Clone it and use that for .forEach()\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               UpdateForm.removeView(c);\n            });\n\n            // clear our stored .formRows\n            this.formRows = [];\n         },\n\n         formGet: () => {\n            var UpdateForm = $$(ids.updateForm);\n            if (!UpdateForm) {\n               // this is a problem!\n               this.currentForm.AB.notify.developer(\n                  new Error(\"no webix form\"),\n                  {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:formGet  could not find webix form\",\n                     id: ids.updateForm,\n                  }\n               );\n               return null;\n            }\n\n            return UpdateForm;\n         },\n\n         setValues: (valueRules) => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n\n            valueRules = valueRules || {};\n            valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n            // find the form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // clear form:\n            _logic.formClear();\n\n            // if there are values to\n            if (valueRules.fieldOperations.length > 0) {\n               valueRules.fieldOperations.forEach((r) => {\n                  _logic.addRow(r);\n               });\n            }\n\n            // our default operation will cause an empty row to\n            // appear after our first value entry.\n            // let's remove that one, and then add a new one\n            // at the end:\n            _logic.removeAddRow();\n\n            // display an empty row\n            _logic.addRow();\n         },\n\n         fromSettings: (settings) => {\n            // Note: we just want the { valueRules:[] } here:\n            var mySettings = settings.valueRules || settings;\n\n            _logic.setValues(mySettings);\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(fr.toSettings());\n               }\n            });\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   valueDisplayRow(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         row: myUnique(\"row\"),\n         updateForm: myUnique(\"updateFormRow\"),\n         field: myUnique(\"field\"),\n         value: myUnique(\"value\"),\n         selectDc: myUnique(\"selectDc\"),\n         selectBy: myUnique(\"selectBy\"),\n         queryField: myUnique(\"queryField\"),\n         multiview: myUnique(\"multiview\"),\n         buttonAdd: myUnique(\"add\"),\n         buttonDelete: myUnique(\"delete\"),\n      };\n\n      var FilterComponent;\n\n      var _logic = {\n         callbacks: {\n            onAdd: () => {},\n            onDelete: () => {},\n         },\n\n         buttonsToggle: () => {\n            $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n            $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n         },\n\n         getFieldList: (shouldFilter) => {\n            var options = [];\n            if (this.updateObject) {\n               options = (this.updateObject.fields() || []).map((f) => {\n                  return {\n                     id: f.id,\n                     value: f.label,\n                  };\n               });\n\n               // options = (this.updateObject.fields() || [])\n               // .filter(f => {\n               //\n               // \tif (f.key != 'connectObject') {\n               // \t\treturn true;\n               // \t} else {\n               // \t\t// if this is a connection field, only return\n               // \t\t// fields that are 1:x  where this field is the\n               // \t\t// source:\n               // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n               //\n               // \t\t// 6-14-2018 Changing from only 1:x to support many\n               // \t\t// if this is a connected field, only return\n               // \t\t// fields that this is the source\n               // \t\treturn (f.isSource())\n               // \t}\n               // })\n               // .map(f => {\n               // \treturn {\n               // \t\tid: f.id,\n               // \t\tvalue: f.label\n               // \t};\n               // });\n\n               // Remove fields who are selected\n               if (shouldFilter) {\n                  // store this row\n                  var usedHash = {};\n                  this.formRows.forEach((row) => {\n                     var rowView = $$(row.ui.id);\n                     if (rowView) {\n                        var field = rowView\n                           .getChildViews()[0]\n                           .getChildViews()[1];\n                        usedHash[field.getValue()] = true;\n                     }\n                  });\n                  options = options.filter((o) => {\n                     return !usedHash[o.id];\n                  });\n               }\n            }\n            return options;\n         },\n\n         isValid: () => {\n            var validator = this.currentForm.AB.Validation.validator();\n            var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n            var FormView = valueField.getParentView().getParentView();\n\n            var field = this.getUpdateObjectField($$(ids.field).getValue());\n            if (field) {\n               var value = field.getValue(valueField, {});\n\n               // // if a standard component that supports .getValue()\n               // if (valueField.getValue) {\n               // \tvalue = valueField.getValue();\n               // } else {\n               // \t// else use for field.getValue();\n               // \tvalue = field.getValue(valueField, {});\n               // }\n\n               // our .isValidData() wants value in an object:\n               var obj = {};\n               obj[field.columnName] = value;\n\n               field.isValidData(obj, validator);\n\n               // if value is empty, this is also an error:\n               if (\n                  value == \"\" ||\n                  value == null ||\n                  (Array.isArray(value) && value.length == 0)\n               ) {\n                  validator.addError(\n                     field.columnName,\n                     L(\"A value is required\")\n                  );\n               }\n\n               // field.getParentView()  ->  row\n               // row.getParentView()  -> Form\n               FormView.clearValidation();\n               validator.updateForm(FormView);\n\n               return validator.pass();\n            } else {\n               // if we didn't find an associated field ... then this isn't good\n               // data.\n\n               //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n               // field.\n               var fieldField = $$(ids.row)\n                  .getChildViews()[0]\n                  .getChildViews()[1];\n               fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n               fieldField.define(\"invalid\", true);\n               fieldField.refresh();\n               // fieldField.markInvalid(this.labels.component.errorRequired);\n               return false;\n            }\n         },\n\n         selectField: (columnID) => {\n            var field = this.getUpdateObjectField(columnID);\n            if (!field) return;\n\n            var fieldComponent = field.formComponent(),\n               abView = fieldComponent.newInstance(field.object.application),\n               formFieldComponent = abView.component(this.App),\n               $componentView = formFieldComponent.ui,\n               $inputView;\n\n            $componentView.id = ids.value; // set our expected id\n\n            // find all the DataSources\n            var datasources = this.currentForm.AB.datacollections(\n               (dc) => dc.datasource\n            );\n\n            // create a droplist with those dataSources\n            var optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({ id: dc.id, value: dc.label });\n            });\n\n            // create a droplist with select options\n            var optionsSelectBy = [\n               { id: \"select-one\", value: L(\"Current selection\") },\n               {\n                  id: \"filter-select-one\",\n                  value: L(\"Select first after filter by...\"),\n               },\n            ];\n\n            var $optionUpdateExsits = {\n               type: \"clean\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.selectDc,\n                           view: \"combo\",\n                           options: optionsDataSources,\n                           placeholder: L(\"Choose a data source\"),\n                           on: {\n                              onChange: (newv, oldv) => {\n                                 var selectedDC =\n                                    this.currentForm.AB.datacollectionByID(\n                                       newv\n                                    );\n                                 if (\n                                    selectedDC &&\n                                    (selectedDC.sourceType == \"query\" ||\n                                       !field.isConnection)\n                                 ) {\n                                    var queryFieldOptions = [];\n                                    selectedDC.datasource\n                                       .fields()\n                                       .forEach((f) => {\n                                          queryFieldOptions.push({\n                                             id: f.id,\n                                             value: f.label,\n                                          });\n                                       });\n                                    $$(ids.queryField).define(\n                                       \"options\",\n                                       queryFieldOptions\n                                    );\n                                    $$(ids.queryField).refresh();\n                                    $$(ids.queryField).show();\n                                 } else {\n                                    $$(ids.queryField).hide();\n                                 }\n                              },\n                           },\n                        },\n                        // we will place a list of query fields if you choose a datasource that has a query source type\n                        {\n                           id: ids.queryField,\n                           view: \"combo\",\n                           hidden: true,\n                           placeholder: L(\"Choose value from...\"),\n                           options: [{ id: 1, value: \"figure this out\" }],\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.selectBy,\n                     view: \"combo\",\n                     options: optionsSelectBy,\n                     placeholder: L(\"Choose select option\"),\n                     on: {\n                        onChange: (newv, oldv) => {\n                           var $row = $$(ids.row);\n                           $row.removeView($row.getChildViews()[1]);\n                           if (newv == \"select-one\") {\n                              $row.addView({}, 1);\n                           } else {\n                              var options =\n                                 this.currentForm.datacollection.datasource\n                                    .fields()\n                                    .map(function (f) {\n                                       return {\n                                          id: f.id,\n                                          value: f.label,\n                                       };\n                                    });\n\n                              FilterComponent = this.AB.filterComplexNew(\n                                 `${idBase}_filter`\n                              );\n                              // FilterComponent.applicationLoad(\n                              //    this.currentForm.application\n                              // );\n                              FilterComponent.init({\n                                 isRecordRule: true,\n                                 recordRuleFieldOptions: options,\n                              });\n                              FilterComponent.on(\"change\", (val) => {\n                                 _logic.onFilterChange(val);\n                              });\n\n                              $row.addView(FilterComponent.ui, 1);\n\n                              var dcId = $$(ids.selectDc).getValue();\n                              var dataCollection =\n                                 this.currentForm.AB.datacollectionByID(dcId);\n                              if (dataCollection) {\n                                 _logic.populateFilters(dataCollection);\n                              }\n                           }\n                        },\n                     },\n                  },\n               ],\n            };\n\n            // WORKAROUND: add '[Current User]' option to the user data field\n            if (field.key == \"user\") {\n               $componentView.options = $componentView.options || [];\n               $componentView.options.unshift({\n                  id: \"ab-current-user\",\n                  value: L(\"[Current User]\"),\n               });\n            }\n\n            // UPDATE: ok, in practice we have not had any use cases where\n            // we want individual values on connectedObject fields, but\n            // instead we want to insert the current selected element from\n            // a relevant data view.  So, replace the fieldComponet\n            // from a connectedObject field with a list of data views that\n            // are based upon the same object we are connected to:\n            if (field.isConnection) {\n               // find the ABObject this field connects to\n               var connectedObject = field.datasourceLink;\n\n               // find all the DataSources that are based upon this ABObject\n               // to do this, we find the root Page we are on, then ask that Page for datasources:\n               datasources = datasources.filter((dc) => {\n                  return dc.datasource.id == connectedObject.id;\n               });\n\n               var dcQueries = this.currentForm.AB.datacollections((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n               datasources = datasources.concat(dcQueries);\n\n               // refresh a droplist with those dataSources\n               optionsDataSources = [];\n               datasources.forEach((dc) => {\n                  optionsDataSources.push({ id: dc.id, value: dc.label });\n               });\n\n               // add select an array value option\n               optionsSelectBy.push({\n                  id: \"filter-select-all\",\n                  value: L(\"Select all after filter by...\"),\n               });\n\n               $inputView = $optionUpdateExsits;\n\n               // and the upcoming formFieldComponent.init()\n               // doesn't need to do anything:\n               formFieldComponent = {\n                  init: function () {},\n               };\n\n               // and we reset field so it's customDisplay isn't called:\n               // field = {};\n            } else {\n               $inputView = {\n                  id: ids.multiview,\n                  view: \"multiview\",\n                  cells: [\n                     {\n                        batch: \"custom\",\n                        rows: [\n                           $componentView,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or exists value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    $multiview.showBatch(\"exist\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        // Update value from exists object\n                        batch: \"exist\",\n                        rows: [\n                           $optionUpdateExsits,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or custom value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    // clear filter view\n                                    $$(ids.selectBy).setValue(\"select-one\");\n\n                                    $multiview.showBatch(\"custom\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               };\n            }\n\n            // Change component to display this field's form input\n            var $row = $$(ids.row).getChildViews()[0];\n            $row.removeView($row.getChildViews()[3]);\n            $row.addView($inputView, 3);\n\n            formFieldComponent.init();\n\n            // Show custom display of data field\n            if (!field.isConnection && field.customDisplay) {\n               // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n               var compNodeView = $$($componentView.id).$view;\n\n               // wait until render UI complete\n               setTimeout(() => {\n                  field.customDisplay(field, this.App, compNodeView, {\n                     editable: true,\n\n                     // tree\n                     isForm: true,\n                  });\n               }, 50);\n            }\n\n            // Show the remove button\n            var $buttonRemove = $row.getChildViews()[4];\n            $buttonRemove.show();\n\n            // Add a new row\n            if (columnID) _logic.callbacks.onAdd();\n         },\n\n         setValue: (data) => {\n            $$(ids.field).setValue(data.fieldID);\n            // note: this triggers our _logic.selectField() fn.\n            var field = this.getUpdateObjectField(data.fieldID);\n            if (field) {\n               var setValueFn = () => {\n                  $$(ids.selectDc).setValue(data.value);\n                  if (data.queryField) {\n                     $$(ids.queryField).setValue(data.queryField);\n                  }\n                  var selectBy = data.selectBy || \"select-one\";\n                  $$(ids.selectBy).setValue(selectBy);\n\n                  if (selectBy != \"select-one\") {\n                     var collectionId = data.value;\n                     var dataCollection =\n                        this.currentForm.AB.datacollectionByID(collectionId);\n                     if (dataCollection && data.filterConditions) {\n                        _logic.populateFilters(\n                           dataCollection,\n                           data.filterConditions\n                        );\n                     }\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  setValueFn();\n               } else {\n                  if (data.valueType == \"exist\") {\n                     $$(ids.multiview).showBatch(\"exist\");\n\n                     setValueFn();\n                  } else {\n                     $$(ids.multiview).showBatch(\"custom\");\n\n                     // wait until render UI complete\n                     setTimeout(function () {\n                        // set value to custom field\n                        var rowData = {};\n                        rowData[field.columnName] = data.value;\n                        field.setValue($$(ids.value), rowData);\n                     }, 50);\n                  }\n               }\n            }\n         },\n\n         populateFilters: (dataView, filterConditions) => {\n            filterConditions =\n               filterConditions ||\n               ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n            // Populate data to popups\n            // FilterComponent.objectLoad(objectCopy);\n            FilterComponent.fieldsLoad(\n               dataView.datasource ? dataView.datasource.fields() : []\n            );\n            FilterComponent.setValue(filterConditions);\n         },\n\n         toSettings: () => {\n            // if this isn't the last entry row\n            // * a row with valid data has the [delete] button showing.\n            var buttonDelete = $$(ids.buttonDelete);\n            if (buttonDelete && buttonDelete.isVisible()) {\n               var data = {};\n               data.fieldID = $$(ids.field).getValue();\n\n               var $valueField = $$(ids.value);\n               var field = this.getUpdateObjectField(data.fieldID);\n\n               var getValueFn = () => {\n                  data.value = $$(ids.selectDc).getValue();\n                  data.queryField = $$(ids.queryField).getValue();\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.selectBy = $$(ids.selectBy).getValue();\n                  data.valueType = \"exist\";\n                  if (FilterComponent) {\n                     data.filterConditions = FilterComponent.getValue();\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  getValueFn();\n               } else {\n                  if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                     getValueFn();\n                  } else {\n                     data.value = field.getValue($valueField, {});\n                     data.op = \"set\"; // possible to create other types of operations.\n                     data.type = field.key;\n                     data.valueType = \"custom\";\n                  }\n               }\n\n               return data;\n            } else {\n               return null;\n            }\n         },\n      };\n\n      var _ui = {\n         id: ids.row,\n         view: \"layout\",\n         rows: [\n            {\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     name: \"field\",\n                     placeholder: L(\"Choose a field\"),\n                     id: ids.field,\n                     height: 32,\n                     options: _logic.getFieldList(true),\n                     on: {\n                        onChange: function (columnId) {\n                           _logic.selectField(columnId);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"To\"),\n                  },\n\n                  // Field value\n                  // NOTE: this view gets replaced each time a field is selected.\n                  // We replace it with a component associated with the Field\n                  {},\n\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     id: ids.buttonDelete,\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     hidden: true,\n                     click: function () {\n                        _logic.callbacks.onDelete(ids.row);\n                     },\n                  },\n               ],\n            },\n            {}, // we will add filters here if we need them\n         ],\n      };\n\n      var init = (options) => {\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         if (options.data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            _logic.setValue(options.data);\n\n            // _logic.buttonsToggle();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   getUpdateObjectField(fieldID) {\n      return (\n         this.queryObject?.fieldByID(fieldID) ??\n         this.updateObject?.fieldByID(fieldID) ??\n         this.currentForm.AB.fieldNew(\n            this.currentForm.AB.definitionByID(fieldID) ?? {},\n            this.currentForm.AB.objectNew({})\n         )\n      );\n   }\n\n   /**\n    * @method processUpdateObject\n    * Perform the specified update actions on the provided objectToUpdate\n    * @param {obj} options  Additional information required to make updates.\n    * @param {obj} objectToUpdate  The object to make the updates on.\n    * @return {boolean}   true if an update took place, false if no updates.\n    */\n   processUpdateObject(options, objectToUpdate) {\n      this._formData = objectToUpdate;\n      // return new Promise((resolve, reject) => {\n      var isUpdated = false;\n\n      this.valueRules = this.valueRules || {};\n      this.valueRules.fieldOperations = this.valueRules.fieldOperations || [];\n\n      // var allPromises = [];\n\n      // for each of our operations\n      this.valueRules.fieldOperations.forEach((op) => {\n         // op = {\n         // \tfieldID:'zzzzz',\n         //\tvalue: 'xxx',\n         //\top: 'set',\n         //  type:'',\n         //  queryField: '', // id of ABField\n         //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n         //  valueType: \"\", ['custom', 'exist']\n         // \tfilterConditions: { // array of filters to apply to the data table\n         //\t\tglue: 'and',\n         // \t\trules: []\n         //  }\n         // }\n\n         var field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n\n         var value = op.value;\n\n         if (value == \"ab-current-user\") {\n            value = this.currentForm.AB.Account.username();\n\n            // in the case of a connected Field, we use op.value to get the\n            // datacollection, and find it's currently selected value:\n         } else if (field.isConnection || op.valueType == \"exist\") {\n            // NOTE: 30 May 2018 :current decision from Ric is to limit this\n            // to only handle 1:x connections where we update the current obj\n            // with the PK of the value from the DC.\n            //\n            // In the future, if we want to handle the other options,\n            // we need to modify this to handle the M:x connections where\n            // we insert our PK into the value from the DC.\n\n            // op.value is the ABDatacollection.id we need to find\n            const dataCollection = this.currentForm.AB.datacollectionByID(\n               op.value\n            );\n            if (!dataCollection) return;\n\n            // we don't want to mess with the dataView directly since it might\n            // be used by other parts of the system and this refresh might reset\n            // it's cursor.\n            // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n            // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n            // adjust operator and switch key value to actual value when found\n            var filterConditions = this.currentForm.AB.cloneDeep(\n               op.filterConditions\n            );\n            if (filterConditions && filterConditions.rules) {\n               filterConditions.rules\n                  .filter((r) => {\n                     return (\n                        r.rule == \"same_as_field\" ||\n                        r.rule == \"not_same_as_field\"\n                     );\n                  })\n                  .forEach((item) => {\n                     var valueField =\n                        this.currentForm.datacollection.datasource.fieldByID(\n                           item.value\n                        );\n                     if (valueField.isConnection) {\n                        item.value = valueField.format(this._formData);\n                     } else {\n                        item.value = this._formData[valueField.columnName];\n                     }\n\n                     if (item.rule == \"not_same_as_field\") {\n                        item.rule = \"not equals\";\n                     } else {\n                        item.rule = \"equals\";\n                     }\n                  });\n            }\n\n            let clonedDataCollection =\n               dataCollection.filteredClone(filterConditions);\n\n            switch (op.selectBy) {\n               // the 'select-one' is getting the currently set cursor on this data collection\n               // and using that value.\n               // TODO: rename to 'select-cursor'\n               case \"select-one\":\n               default:\n                  value = clonedDataCollection.getCursor(); // dataView.getItem(dataView.getCursor());\n\n                  if (value) {\n                     // NOTE: webix documentation issue: .getCursor() is supposed to return\n                     // the .id of the item.  However it seems to be returning the {obj}\n\n                     if (op.valueType == \"exist\") {\n                        var fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        if (fieldWithValue)\n                           value = value[fieldWithValue.columnName];\n                     } else if (value.id) {\n                        value = value.id;\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (!value) break;\n\n                        if (field.isConnection) {\n                           // if we are setting a connection we do not want to pass the full object because\n                           // batch creates payload gets too large\n                           objectToUpdate[field.columnName] = {};\n                           objectToUpdate[field.columnName].id =\n                              value[field.datasourceLink.PK()];\n                           objectToUpdate[field.columnName][\n                              field.datasourceLink.PK()\n                           ] = value[field.datasourceLink.PK()];\n\n                           // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n                           if (field.settings.isCustomFK) {\n                              if (field.indexField) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField.columnName\n                                 ] = value[field.indexField.columnName];\n                              }\n                              if (field.indexField2) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField2.columnName\n                                 ] = value[field.indexField2.columnName];\n                              }\n                           }\n\n                           field.datasourceLink\n                              .fields(\n                                 (f) =>\n                                    f.key == \"combined\" || f.key == \"AutoIndex\"\n                              )\n                              .forEach((f) => {\n                                 objectToUpdate[field.columnName][\n                                    f.columnName\n                                 ] = value[f.columnName];\n                              });\n                        } else {\n                           objectToUpdate[field.columnName] = value;\n                        }\n\n                        break;\n                  }\n                  break;\n\n               // attempt to filter this data collection by the given filterConditions\n               case \"filter-select-all\":\n                  var newValues = [];\n\n                  var currRow = clonedDataCollection.getFirstRecord();\n                  while (currRow) {\n                     // do something there\n\n                     switch (clonedDataCollection.sourceType) {\n                        // case: datacollection is an object\n                        // we want to set our field to this values\n                        case \"object\":\n                           newValues.push(currRow.id);\n                           break;\n\n                        // case: datacollection is a query\n                        // our field is a pointer to an object. we want to pull out that object\n                        // from the query data.\n                        case \"query\":\n                           var fieldWithValue =\n                              clonedDataCollection.datasource.fieldByID(\n                                 op.queryField\n                              );\n\n                           var newValue = currRow[fieldWithValue.columnName];\n\n                           if (typeof newValue == \"undefined\") {\n                              newValue = currRow[fieldWithValue.relationName()];\n\n                              if (Array.isArray(newValue)) {\n                                 newValue = newValue.map((v) => {\n                                    return v.id ? v.id : v;\n                                 });\n                              } else if (newValue.id) {\n                                 newValue = newValue.id;\n                              }\n                           }\n\n                           newValues = this.currentForm.AB.uniq(\n                              newValues.concat(newValue)\n                           );\n\n                           break;\n                     }\n\n                     currRow = clonedDataCollection.getNextRecord(currRow);\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (field.linkType() == \"one\") {\n                           var updates = [];\n                           newValues.forEach((v) => {\n                              var objectToUpdateClone =\n                                 this.currentForm.AB.cloneDeep(objectToUpdate);\n                              objectToUpdateClone[field.columnName] = v;\n                              updates.push(objectToUpdateClone);\n                           });\n                           objectToUpdate.newRecords = updates;\n                        } else {\n                           objectToUpdate[field.columnName] = newValues;\n                        }\n                        break;\n                  }\n                  break;\n\n               case \"filter-select-one\":\n                  newValues = [];\n\n                  value = clonedDataCollection.getFirstRecord();\n\n                  if (value) {\n                     // case: datacollection is a query\n                     // our field is a pointer to an object. we want to pull out that object\n                     // from the query data.\n                     if (\n                        clonedDataCollection.sourceType == \"query\" ||\n                        (op.valueType == \"exist\" && op.queryField)\n                     ) {\n                        fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        newValue = value[fieldWithValue.columnName];\n\n                        if (typeof newValue == \"undefined\") {\n                           newValue = value[fieldWithValue.relationName()];\n                           if (Array.isArray(newValue)) {\n                              newValue = newValue[0];\n                           }\n                           if (newValue.id) newValue = newValue.id;\n                        }\n\n                        value = newValue;\n                     }\n                     // case: datacollection is an object\n                     // we want to set our field to this values\n                     else if (clonedDataCollection.sourceType == \"object\") {\n                        // NOTE: webix documentation issue: .getCursor() is supposed to return\n                        // the .id of the item.  However it seems to be returning the {obj}\n\n                        // we need to use the objects indexField(2) if there is one\n                        // otherwise default to the id\n                        var lookup;\n                        if (field.indexField) {\n                           lookup = field.indexField.columnName;\n                        } else if (field.indexField2) {\n                           lookup = field.indexField2.columnName;\n                        }\n                        if (lookup && value[lookup]) {\n                           value = value[lookup];\n                        } else if (value.id) {\n                           value = value.id;\n                        }\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        objectToUpdate[field.columnName] = value;\n                        break;\n                  }\n                  break;\n            }\n\n            isUpdated = true;\n\n            // allPromises.push(connectedPromise);\n         } else {\n            // var setPromise = new Promise((resolve, reject) => {\n            switch (op.op) {\n               case \"set\":\n                  objectToUpdate[field.columnName] = value;\n                  break;\n            }\n\n            isUpdated = true;\n\n            //    resolve(isUpdated);\n            // });\n\n            // allPromises.push(setPromise);\n\n            // console.log(\"finished\");\n         }\n      });\n\n      return isUpdated;\n      // Promise.all(allPromises).then(() => {\n      //    resolve(isUpdated);\n      // });\n      // });\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         let isUpdated = this.processUpdateObject({}, options.data);\n         if (!isUpdated) {\n            resolve();\n         } else {\n            // get the model from the provided Form Obj:\n            var dv = options.form.datacollection;\n            if (!dv) return resolve();\n\n            var model = dv.model;\n            model\n               .update(options.data.id, options.data)\n               .then(resolve)\n               .catch((err) => {\n                  this.currentForm.AB.notify.developer(err, {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:process  update error\",\n                     id: options.data.id,\n                     data: options.data,\n                  });\n                  reject(err);\n               });\n         }\n      });\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      super.objectLoad(object);\n      this.updateObjectLoad(object);\n   }\n\n   // updateObjectLoad\n   // save the given object as the object we will update.\n   updateObjectLoad(object) {\n      // stash rules for old object\n      if (this.updateObject) {\n         this.stashRules[this.updateObject.id] = this.valueRules;\n      }\n\n      this.updateObject = object;\n\n      // with a new updateObject, then reset our UI\n      this._uiUpdater = null;\n\n      // reload any stashed rules, or set to {}\n      this.valueRules = this.stashRules[this.updateObject.id] || {};\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // make sure UI is updated:\n      // set our updateObject\n      if (settings.updateObjectURL) {\n         var updateObject = this.currentForm.application.urlResolve(\n            settings.updateObjectURL\n         );\n         this.updateObject = updateObject;\n      }\n\n      // if we have a display component, then populate it:\n      if (this._uiUpdater) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._uiUpdater.fromSettings(settings);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._uiUpdater.toSettings();\n      settings.updateObjectURL = this.updateObject.urlPointer();\n\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * Here we need to scan each of our field operations, and verify all\n    * related data collections are initialized before we can continue.\n    * @return {Promise}\n    */\n   isReady() {\n      var allReady = [];\n      let fieldOps = this.valueRules?.fieldOperations ?? [];\n      fieldOps.forEach((op) => {\n         let field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n         if (!field.isConnection && op.valueType !== \"exist\") return;\n\n         // this references a DC\n         let DC = this.currentForm.AB.datacollectionByID(op.value);\n         if (DC?.dataStatus === DC?.dataStatusFlag.initialized) return;\n\n         // not ready yet, so wait until the 'initializedData' event\n         allReady.push(\n            new Promise((resolve /*, reject */) => {\n               DC.on(\"initializedData\", () => {\n                  resolve();\n               });\n            })\n         );\n      });\n      return Promise.all(allReady);\n   }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ImageModule=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";var DocUtils=require(\"docxtemplater\").DocUtils;DocUtils.convertPixelsToEmus=function(pixel){return Math.round(pixel*9525)};module.exports=DocUtils},{docxtemplater:5}],2:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./docUtils\");var extensionRegex=/[^.]+\\.([^.]+)/;var rels={getPrefix:function getPrefix(fileType){return fileType===\"docx\"?\"word\":\"ppt\"},getFileTypeName:function getFileTypeName(fileType){return fileType===\"docx\"?\"document\":\"presentation\"},getRelsFileName:function getRelsFileName(fileName){return fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/,\"$1\")+\".xml.rels\"},getRelsFilePath:function getRelsFilePath(fileName,fileType){var relsFileName=rels.getRelsFileName(fileName);var prefix=fileType===\"pptx\"?\"ppt/slides\":\"word\";return prefix+\"/_rels/\"+relsFileName}};module.exports=function(){function ImgManager(zip,fileName,xmlDocuments,fileType){_classCallCheck(this,ImgManager);this.fileName=fileName;this.prefix=rels.getPrefix(fileType);this.zip=zip;this.xmlDocuments=xmlDocuments;this.fileTypeName=rels.getFileTypeName(fileType);this.mediaPrefix=fileType===\"pptx\"?\"../media\":\"media\";var relsFilePath=rels.getRelsFilePath(fileName,fileType);this.relsDoc=xmlDocuments[relsFilePath]||this.createEmptyRelsDoc(xmlDocuments,relsFilePath)}_createClass(ImgManager,[{key:\"createEmptyRelsDoc\",value:function createEmptyRelsDoc(xmlDocuments,relsFileName){var mainRels=this.prefix+\"/_rels/\"+this.fileTypeName+\".xml.rels\";var doc=xmlDocuments[mainRels];if(!doc){var err=new Error(\"Could not copy from empty relsdoc\");err.properties={mainRels:mainRels,relsFileName:relsFileName,files:Object.keys(this.zip.files)};throw err}var relsDoc=DocUtils.str2xml(DocUtils.xml2str(doc));var relationships=relsDoc.getElementsByTagName(\"Relationships\")[0];var relationshipChilds=relationships.getElementsByTagName(\"Relationship\");for(var i=0,l=relationshipChilds.length;i<l;i++){relationships.removeChild(relationshipChilds[i])}xmlDocuments[relsFileName]=relsDoc;return relsDoc}},{key:\"loadImageRels\",value:function loadImageRels(){var iterable=this.relsDoc.getElementsByTagName(\"Relationship\");return Array.prototype.reduce.call(iterable,function(max,relationship){var id=relationship.getAttribute(\"Id\");if(/^rId[0-9]+$/.test(id)){return Math.max(max,parseInt(id.substr(3),10))}return max},0)}},{key:\"addExtensionRels\",value:function addExtensionRels(contentType,extension){var contentTypeDoc=this.xmlDocuments[\"[Content_Types].xml\"];var defaultTags=contentTypeDoc.getElementsByTagName(\"Default\");var extensionRegistered=Array.prototype.some.call(defaultTags,function(tag){return tag.getAttribute(\"Extension\")===extension});if(extensionRegistered){return}var types=contentTypeDoc.getElementsByTagName(\"Types\")[0];var newTag=contentTypeDoc.createElement(\"Default\");newTag.namespaceURI=null;newTag.setAttribute(\"ContentType\",contentType);newTag.setAttribute(\"Extension\",extension);types.appendChild(newTag)}},{key:\"addImageRels\",value:function addImageRels(imageName,imageData,i){if(i==null){i=0}var realImageName=i===0?imageName:imageName+(\"(\"+i+\")\");var imagePath=this.prefix+\"/media/\"+realImageName;if(this.zip.files[imagePath]!=null){return this.addImageRels(imageName,imageData,i+1)}var image={name:imagePath,data:imageData,options:{binary:true}};this.zip.file(image.name,image.data,image.options);var extension=realImageName.replace(extensionRegex,\"$1\");this.addExtensionRels(\"image/\"+extension,extension);var relationships=this.relsDoc.getElementsByTagName(\"Relationships\")[0];var newTag=this.relsDoc.createElement(\"Relationship\");newTag.namespaceURI=null;var maxRid=this.loadImageRels()+1;newTag.setAttribute(\"Id\",\"rId\"+maxRid);newTag.setAttribute(\"Type\",\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");newTag.setAttribute(\"Target\",this.mediaPrefix+\"/\"+realImageName);relationships.appendChild(newTag);return maxRid}}]);return ImgManager}()},{\"./docUtils\":1}],3:[function(require,module,exports){\"use strict\";module.exports={getImageXml:function getImageXml(rId,size){return('<w:drawing>\\n\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t<wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\\n\\t\\t\\t<wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getImageXmlCentered:function getImageXmlCentered(rId,size){return('<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\"center\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getPptxImageXml:function getPptxImageXml(rId,size,offset){return('<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\"6\" name=\"Picture 2\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\" cstate=\"print\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\"'+offset.x+'\" y=\"'+offset.y+'\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"accent1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"tx1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"bg2\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t').replace(/\\t|\\n/g,\"\")}}},{}],4:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),fileType:\"docx\",delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){var parts=parsed.slice(0,index);for(var i=parts.length-1;i>=0;i--){var part=parts[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils;DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\")},{\"./errors\":6,\"./memoize\":9,\"./module-wrapper\":11,\"./traits\":20,xmldom:23}],5:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.fileType===\"docx\"||this.fileType===\"pptx\"){this.fileTypeConfig=Docxtemplater.FileTypeConfig[this.fileType]}this.fileTypeConfig=this.options.fileTypeConfig||this.fileTypeConfig;this.options.xmlFileNames=[];return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip)}},{key:\"render\",value:function render(){var _this2=this;this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render();_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.encodeUtf8(DocUtils.xml2str(_this2.xmlDocuments[fileName]));return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":4,\"./errors\":6,\"./file-type-config\":7,\"./xml-matcher\":21,\"./xml-templater\":22}],6:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],7:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":12,\"./modules/loop\":13,\"./modules/rawxml\":14,\"./modules/render\":15,\"./modules/space-preserve\":16}],8:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":4,\"./errors\":6}],9:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],10:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],11:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],12:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));\nreturn[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":4,\"../errors\":6,\"../mergesort\":10,\"../module-wrapper\":11,\"../traits\":20}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":4,\"../module-wrapper\":11}],14:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":4,\"../errors\":6,\"../module-wrapper\":11}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":11}],16:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":11}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":4}],18:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":4,\"./scope-manager\":19}],19:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":6}],20:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){throwRawTagNotInParagraph({part:part,rootError:rootError})}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});var type=Object.prototype.toString.call(inner);if(type===\"[object Array]\"){inner=DocUtils.concatArrays(inner)}return DocUtils.concatArrays([postparsed.slice(0,left),[inner],postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":4,\"./errors\":6}],21:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":4,\"./memoize\":9}],22:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(){this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":4,\"./errors\":6,\"./lexer\":8,\"./parser.js\":17,\"./render.js\":18,\"./scope-manager\":19,\"./xml-matcher\":21}],23:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":24,\"./sax\":25}],24:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){\nreturn true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"<!--\",node.data,\"-->\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],25:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"-->\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/index.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var templates=require(\"./templates\");var DocUtils=require(\"docxtemplater\").DocUtils;var DOMParser=require(\"xmldom\").DOMParser;function isNaN(number){return!(number===number)}var ImgManager=require(\"./imgManager\");var moduleName=\"open-xml-templating/docxtemplater-image-module\";function getInnerDocx(_ref){var part=_ref.part;return part}function getInnerPptx(_ref2){var part=_ref2.part,left=_ref2.left,right=_ref2.right,postparsed=_ref2.postparsed;var xmlString=postparsed.slice(left+1,right).reduce(function(concat,item){return concat+item.value},\"\");var xmlDoc=(new DOMParser).parseFromString(\"<xml>\"+xmlString+\"</xml>\");var offset=xmlDoc.getElementsByTagName(\"a:off\");var ext=xmlDoc.getElementsByTagName(\"a:ext\");part.ext={cx:parseInt(ext[0].getAttribute(\"cx\"),10),cy:parseInt(ext[0].getAttribute(\"cy\"),10)};part.offset={x:parseInt(offset[0].getAttribute(\"x\"),10),y:parseInt(offset[0].getAttribute(\"y\"),10)};return part}var ImageModule=function(){function ImageModule(options){_classCallCheck(this,ImageModule);this.name=\"ImageModule\";this.options=options||{};this.imgManagers={};if(this.options.centered==null){this.options.centered=false}if(this.options.getImage==null){throw new Error(\"You should pass getImage\")}if(this.options.getSize==null){throw new Error(\"You should pass getSize\")}this.imageNumber=1}_createClass(ImageModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){\nvar relsFiles=docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function(file){return file.name});this.fileTypeConfig=docxtemplater.fileTypeConfig;this.fileType=docxtemplater.fileType;this.zip=docxtemplater.zip;options.xmlFileNames=options.xmlFileNames.concat(relsFiles);return options}},{key:\"set\",value:function set(options){if(options.zip){this.zip=options.zip}if(options.xmlDocuments){this.xmlDocuments=options.xmlDocuments}}},{key:\"parse\",value:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent.substring(0,2)===\"%%\"){return{type:type,value:placeHolderContent.substr(2),module:module,centered:true}}if(placeHolderContent.substring(0,1)===\"%\"){return{type:type,value:placeHolderContent.substr(1),module:module,centered:false}}return null}},{key:\"postparse\",value:function postparse(parsed){var expandTo=void 0;var getInner=void 0;if(this.fileType===\"pptx\"){expandTo=\"p:sp\";getInner=getInnerPptx}else{expandTo=this.options.centered?\"w:p\":\"w:t\";getInner=getInnerDocx}return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:expandTo})}},{key:\"render\",value:function render(part,options){this.imgManagers[options.filePath]=this.imgManagers[options.filePath]||new ImgManager(this.zip,options.filePath,this.xmlDocuments,this.fileType);var imgManager=this.imgManagers[options.filePath];if(!part.type===\"placeholder\"||part.module!==moduleName){return null}try{var tagValue=options.scopeManager.getValue(part.value);if(!tagValue){throw new Error(\"tagValue is empty\")}var imgBuffer=this.options.getImage(tagValue,part.value);var rId=imgManager.addImageRels(this.getNextImageName(),imgBuffer);var sizePixel=this.options.getSize(imgBuffer,tagValue,part.value);return this.getRenderedPart(part,rId,sizePixel)}catch(e){return{value:this.fileTypeConfig.tagTextXml}}}},{key:\"getRenderedPart\",value:function getRenderedPart(part,rId,sizePixel){if(isNaN(rId)){throw new Error(\"rId is NaN, aborting\")}var size=[DocUtils.convertPixelsToEmus(sizePixel[0]),DocUtils.convertPixelsToEmus(sizePixel[1])];var centered=this.options.centered||part.centered;var newText=void 0;if(this.fileType===\"pptx\"){newText=this.getRenderedPartPptx(part,rId,size,centered)}else{newText=this.getRenderedPartDocx(rId,size,centered)}return{value:newText}}},{key:\"getRenderedPartPptx\",value:function getRenderedPartPptx(part,rId,size,centered){var offset={x:part.offset.x,y:part.offset.y};var cellCX=part.ext.cx;var cellCY=part.ext.cy;var imgW=size[0];var imgH=size[1];if(centered){offset.x+=cellCX/2-imgW/2;offset.y+=cellCY/2-imgH/2}return templates.getPptxImageXml(rId,[imgW,imgH],offset)}},{key:\"getRenderedPartDocx\",value:function getRenderedPartDocx(rId,size,centered){return centered?templates.getImageXmlCentered(rId,size):templates.getImageXml(rId,size)}},{key:\"getNextImageName\",value:function getNextImageName(){var name=\"image_generated_\"+this.imageNumber+\".png\";this.imageNumber++;return name}}]);return ImageModule}();module.exports=ImageModule},{\"./imgManager\":2,\"./templates\":3,docxtemplater:5,xmldom:23}]},{},[])(\"/src/js/index.js\")});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Docxtemplater=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils},{\"./errors\":2,\"./memoize\":5,xmldom:19}],2:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],3:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":8,\"./modules/loop\":9,\"./modules/rawxml\":10,\"./modules/render\":11,\"./modules/space-preserve\":12}],4:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":1,\"./errors\":2}],5:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],6:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],7:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],8:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));return[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":1,\"../errors\":2,\"../mergesort\":6,\"../module-wrapper\":7,\"../traits\":16}],9:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":1,\"../module-wrapper\":7}],10:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":1,\"../errors\":2,\"../module-wrapper\":7}],11:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":7}],12:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":7}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":1}],14:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":1,\"./scope-manager\":15}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":2}],16:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag,postparsed:options.postparsed,expandTo:options.expandTo,index:options.index};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}if(xmlElement.tag.indexOf(\"<a:tc\")===0){return\"a:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){if(rootError instanceof Errors.XTTemplateError){throwRawTagNotInParagraph({part:part,rootError:rootError,postparsed:postparsed,expandTo:expandTo,index:index})}throw rootError}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});if(!inner.length){inner.expanded=[leftParts,rightParts];inner=[inner]}return DocUtils.concatArrays([postparsed.slice(0,left),inner,postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":1,\"./errors\":2}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":1,\"./memoize\":5}],18:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(to){this.filePath=to;this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":1,\"./errors\":2,\"./lexer\":4,\"./parser.js\":13,\"./render.js\":14,\"./scope-manager\":15,\"./xml-matcher\":17}],19:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":20,\"./sax\":21}],20:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"\\x3c!--\",node.data,\"--\\x3e\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],21:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"--\\x3e\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/docxtemplater.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.zip){this.updateFileTypeConfig()}return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;this.updateFileTypeConfig();return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip);return this}},{key:\"updateFileTypeConfig\",value:function updateFileTypeConfig(){this.fileType=this.zip.files[\"word/document.xml\"]?\"docx\":\"pptx\";this.fileTypeConfig=this.options.fileTypeConfig||Docxtemplater.FileTypeConfig[this.fileType];return this}},{key:\"render\",value:function render(){var _this2=this;this.options.xmlFileNames=[];this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render(to);_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.xml2str(_this2.xmlDocuments[fileName]);return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":1,\"./errors\":2,\"./file-type-config\":3,\"./module-wrapper\":7,\"./traits\":16,\"./xml-matcher\":17,\"./xml-templater\":18}]},{},[])(\"/src/js/docxtemplater.js\")});","/*!\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){\"use strict\";function d(a){if(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0;for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}}var e=a(\"./dataReader\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6}],2:[function(a,b,c){\"use strict\";var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";c.encode=function(a,b){for(var c,e,f,g,h,i,j,k=\"\",l=0;l<a.length;)c=a.charCodeAt(l++),e=a.charCodeAt(l++),f=a.charCodeAt(l++),g=c>>2,h=(3&c)<<4|e>>4,i=(15&e)<<2|f>>6,j=63&f,isNaN(e)?i=j=64:isNaN(f)&&(j=64),k=k+d.charAt(g)+d.charAt(h)+d.charAt(i)+d.charAt(j);return k},c.decode=function(a,b){var c,e,f,g,h,i,j,k=\"\",l=0;for(a=a.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");l<a.length;)g=d.indexOf(a.charAt(l++)),h=d.indexOf(a.charAt(l++)),i=d.indexOf(a.charAt(l++)),j=d.indexOf(a.charAt(l++)),c=g<<2|h>>4,e=(15&h)<<4|i>>2,f=(3&i)<<6|j,k+=String.fromCharCode(c),64!=i&&(k+=String.fromCharCode(e)),64!=j&&(k+=String.fromCharCode(f));return k}},{}],3:[function(a,b,c){\"use strict\";function d(){this.compressedSize=0,this.uncompressedSize=0,this.crc32=0,this.compressionMethod=null,this.compressedContent=null}d.prototype={getContent:function(){return null},getCompressedContent:function(){return null}},b.exports=d},{}],4:[function(a,b,c){\"use strict\";c.STORE={magic:\"\\0\\0\",compress:function(a,b){return a},uncompress:function(a){return a},compressInputType:null,uncompressInputType:null},c.DEFLATE=a(\"./flate\")},{\"./flate\":9}],5:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];b.exports=function(a,b){if(\"undefined\"==typeof a||!a.length)return 0;var c=\"string\"!==d.getTypeOf(a);\"undefined\"==typeof b&&(b=0);var f=0,g=0,h=0;b^=-1;for(var i=0,j=a.length;i<j;i++)h=c?a[i]:a.charCodeAt(i),g=255&(b^h),f=e[g],b=b>>>8^f;return b^-1}},{\"./utils\":22}],6:[function(a,b,c){\"use strict\";function d(a){this.data=null,this.length=0,this.index=0,this.zero=0}var e=a(\"./utils\");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+a+\"). Corrupted zip ?\")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo(\"string\",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1)}},b.exports=d},{\"./utils\":22}],7:[function(a,b,c){\"use strict\";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!1,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],8:[function(a,b,c){\"use strict\";var d=a(\"./utils\");c.string2binary=function(a){return d.string2binary(a)},c.string2Uint8Array=function(a){return d.transformTo(\"uint8array\",a)},c.uint8Array2String=function(a){return d.transformTo(\"string\",a)},c.string2Blob=function(a){var b=d.transformTo(\"arraybuffer\",a);return d.arrayBuffer2Blob(b)},c.arrayBuffer2Blob=function(a){return d.arrayBuffer2Blob(a)},c.transformTo=function(a,b){return d.transformTo(a,b)},c.getTypeOf=function(a){return d.getTypeOf(a)},c.checkSupport=function(a){return d.checkSupport(a)},c.MAX_VALUE_16BITS=d.MAX_VALUE_16BITS,c.MAX_VALUE_32BITS=d.MAX_VALUE_32BITS,c.pretty=function(a){return d.pretty(a)},c.findCompression=function(a){return d.findCompression(a)},c.isRegExp=function(a){return d.isRegExp(a)}},{\"./utils\":22}],9:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,e=a(\"pako\");c.uncompressInputType=d?\"uint8array\":\"array\",c.compressInputType=d?\"uint8array\":\"array\",c.magic=\"\\b\\0\",c.compress=function(a,b){return e.deflateRaw(a,{level:b.level||-1})},c.uncompress=function(a){return e.inflateRaw(a)}},{pako:25}],10:[function(a,b,c){\"use strict\";function d(a,b){return this instanceof d?(this.files={},this.comment=null,this.root=\"\",a&&this.load(a,b),void(this.clone=function(){var a=new d;for(var b in this)\"function\"!=typeof this[b]&&(a[b]=this[b]);return a})):new d(a,b)}var e=a(\"./base64\");d.prototype=a(\"./object\"),d.prototype.load=a(\"./load\"),d.support=a(\"./support\"),d.defaults=a(\"./defaults\"),d.utils=a(\"./deprecatedPublicUtils\"),d.base64={encode:function(a){return e.encode(a)},decode:function(a){return e.decode(a)}},d.compressions=a(\"./compressions\"),b.exports=d},{\"./base64\":2,\"./compressions\":4,\"./defaults\":7,\"./deprecatedPublicUtils\":8,\"./load\":11,\"./object\":14,\"./support\":18}],11:[function(a,b,c){\"use strict\";var d=a(\"./base64\"),e=a(\"./utf8\"),f=a(\"./utils\"),g=a(\"./zipEntries\");b.exports=function(a,b){var c,h,i,j;for(b=f.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:e.utf8decode}),b.base64&&(a=d.decode(a)),h=new g(a,b),c=h.files,i=0;i<c.length;i++)j=c[i],this.file(j.fileNameStr,j.decompressed,{binary:!0,optimizedBinaryString:!0,date:j.date,dir:j.dir,comment:j.fileCommentStr.length?j.fileCommentStr:null,unixPermissions:j.unixPermissions,dosPermissions:j.dosPermissions,createFolders:b.createFolders});return h.zipComment.length&&(this.comment=h.zipComment),this}},{\"./base64\":2,\"./utf8\":21,\"./utils\":22,\"./zipEntries\":23}],12:[function(a,b,c){(function(a){\"use strict\";b.exports=function(b,c){return new a(b,c)},b.exports.test=function(b){return a.isBuffer(b)}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){\"use strict\";function d(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./uint8ArrayReader\");d.prototype=new e,d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./uint8ArrayReader\":19}],14:[function(a,b,c){\"use strict\";var d=a(\"./support\"),e=a(\"./utils\"),f=a(\"./crc32\"),g=a(\"./signature\"),h=a(\"./defaults\"),i=a(\"./base64\"),j=a(\"./compressions\"),k=a(\"./compressedObject\"),l=a(\"./nodeBuffer\"),m=a(\"./utf8\"),n=a(\"./stringWriter\"),o=a(\"./uint8ArrayWriter\"),p=function(a){if(a._data instanceof k&&(a._data=a._data.getContent(),a.options.binary=!0,a.options.base64=!1,\"uint8array\"===e.getTypeOf(a._data))){var b=a._data;a._data=new Uint8Array(b.length),0!==b.length&&a._data.set(b,0)}return a._data},q=function(a){var b=p(a),c=e.getTypeOf(b);return\"string\"===c?!a.options.binary&&d.nodebuffer?l(b,\"utf-8\"):a.asBinary():b},r=function(a){var b=p(this);return null===b||\"undefined\"==typeof b?\"\":(this.options.base64&&(b=i.decode(b)),b=a&&this.options.binary?D.utf8decode(b):e.transformTo(\"string\",b),a||this.options.binary||(b=e.transformTo(\"string\",D.utf8encode(b))),b)},s=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this.options=c,this._initialMetadata={dir:c.dir,date:c.date}};s.prototype={asText:function(){return r.call(this,!0)},asBinary:function(){return r.call(this,!1)},asNodeBuffer:function(){var a=q(this);return e.transformTo(\"nodebuffer\",a)},asUint8Array:function(){var a=q(this);return e.transformTo(\"uint8array\",a)},asArrayBuffer:function(){return this.asUint8Array().buffer}};var t=function(a,b){var c,d=\"\";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},u=function(a){return a=a||{},a.base64!==!0||null!==a.binary&&void 0!==a.binary||(a.binary=!0),a=e.extend(a,h),a.date=a.date||new Date,null!==a.compression&&(a.compression=a.compression.toUpperCase()),a},v=function(a,b,c){var d,f=e.getTypeOf(b);if(c=u(c),\"string\"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=x(a)),c.createFolders&&(d=w(a))&&y.call(this,d,!0),c.dir||null===b||\"undefined\"==typeof b)c.base64=!1,c.binary=!1,b=null,f=null;else if(\"string\"===f)c.binary&&!c.base64&&c.optimizedBinaryString!==!0&&(b=e.string2binary(b));else{if(c.base64=!1,c.binary=!0,!(f||b instanceof k))throw new Error(\"The data of '\"+a+\"' is in an unsupported format !\");\"arraybuffer\"===f&&(b=e.transformTo(\"uint8array\",b))}var g=new s(a,b,c);return this.files[a]=g,g},w=function(a){\"/\"==a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf(\"/\");return b>0?a.substring(0,b):\"\"},x=function(a){return\"/\"!=a.slice(-1)&&(a+=\"/\"),a},y=function(a,b){return b=\"undefined\"!=typeof b&&b,a=x(a),this.files[a]||v.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},z=function(a,b,c){var d,g=new k;return a._data instanceof k?(g.uncompressedSize=a._data.uncompressedSize,g.crc32=a._data.crc32,0===g.uncompressedSize||a.dir?(b=j.STORE,g.compressedContent=\"\",g.crc32=0):a._data.compressionMethod===b.magic?g.compressedContent=a._data.getCompressedContent():(d=a._data.getContent(),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c))):(d=q(a),d&&0!==d.length&&!a.dir||(b=j.STORE,d=\"\"),g.uncompressedSize=d.length,g.crc32=f(d),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c)),g.compressedSize=g.compressedContent.length,g.compressionMethod=b.magic,g},A=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},B=function(a,b){return 63&(a||0)},C=function(a,b,c,d,h,i){var j,k,l,n,o=(c.compressedContent,i!==m.utf8encode),p=e.transformTo(\"string\",i(b.name)),q=e.transformTo(\"string\",m.utf8encode(b.name)),r=b.comment||\"\",s=e.transformTo(\"string\",i(r)),u=e.transformTo(\"string\",m.utf8encode(r)),v=q.length!==b.name.length,w=u.length!==r.length,x=b.options,y=\"\",z=\"\",C=\"\";l=b._initialMetadata.dir!==b.dir?b.dir:x.dir,n=b._initialMetadata.date!==b.date?b.date:x.date;var D=0,E=0;l&&(D|=16),\"UNIX\"===h?(E=798,D|=A(b.unixPermissions,l)):(E=20,D|=B(b.dosPermissions,l)),j=n.getHours(),j<<=6,j|=n.getMinutes(),j<<=5,j|=n.getSeconds()/2,k=n.getFullYear()-1980,k<<=4,k|=n.getMonth()+1,k<<=5,k|=n.getDate(),v&&(z=t(1,1)+t(f(p),4)+q,y+=\"up\"+t(z.length,2)+z),w&&(C=t(1,1)+t(this.crc32(s),4)+u,y+=\"uc\"+t(C.length,2)+C);var F=\"\";F+=\"\\n\\0\",F+=o||!v&&!w?\"\\0\\0\":\"\\0\\b\",F+=c.compressionMethod,F+=t(j,2),F+=t(k,2),F+=t(c.crc32,4),F+=t(c.compressedSize,4),F+=t(c.uncompressedSize,4),F+=t(p.length,2),F+=t(y.length,2);var G=g.LOCAL_FILE_HEADER+F+p+y,H=g.CENTRAL_FILE_HEADER+t(E,2)+F+t(s.length,2)+\"\\0\\0\\0\\0\"+t(D,4)+t(d,4)+p+y+s;return{fileRecord:G,dirRecord:H,compressedObject:c}},D={load:function(a,b){throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\")},filter:function(a){var b,c,d,f,g=[];for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],f=new s(d.name,d._data,e.extend(d.options)),c=b.slice(this.root.length,b.length),b.slice(0,this.root.length)===this.root&&a(c,f)&&g.push(f));return g},file:function(a,b,c){if(1===arguments.length){if(e.isRegExp(a)){var d=a;return this.filter(function(a,b){return!b.dir&&d.test(a)})}return this.filter(function(b,c){return!c.dir&&b===a})[0]||null}return a=this.root+a,v.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(e.isRegExp(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=y.call(this,b),d=this.clone();return d.root=c.name,d},remove:function(a){a=this.root+a;var b=this.files[a];if(b||(\"/\"!=a.slice(-1)&&(a+=\"/\"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){a=e.extend(a||{},{base64:!0,compression:\"STORE\",compressionOptions:null,type:\"base64\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:m.utf8encode}),e.checkSupport(a.type),\"darwin\"!==a.platform&&\"freebsd\"!==a.platform&&\"linux\"!==a.platform&&\"sunos\"!==a.platform||(a.platform=\"UNIX\"),\"win32\"===a.platform&&(a.platform=\"DOS\");var b,c,d=[],f=0,h=0,k=e.transformTo(\"string\",a.encodeFileName(a.comment||this.comment||\"\"));for(var l in this.files)if(this.files.hasOwnProperty(l)){var p=this.files[l],q=p.options.compression||a.compression.toUpperCase(),r=j[q];if(!r)throw new Error(q+\" is not a valid compression method !\");var s=p.options.compressionOptions||a.compressionOptions||{},u=z.call(this,p,r,s),v=C.call(this,l,p,u,f,a.platform,a.encodeFileName);f+=v.fileRecord.length+u.compressedSize,h+=v.dirRecord.length,d.push(v)}var w=\"\";w=g.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+t(d.length,2)+t(d.length,2)+t(h,4)+t(f,4)+t(k.length,2)+k;var x=a.type.toLowerCase();for(b=\"uint8array\"===x||\"arraybuffer\"===x||\"blob\"===x||\"nodebuffer\"===x?new o(f+h+w.length):new n(f+h+w.length),c=0;c<d.length;c++)b.append(d[c].fileRecord),b.append(d[c].compressedObject.compressedContent);for(c=0;c<d.length;c++)b.append(d[c].dirRecord);b.append(w);var y=b.finalize();switch(a.type.toLowerCase()){case\"uint8array\":case\"arraybuffer\":case\"nodebuffer\":return e.transformTo(a.type.toLowerCase(),y);case\"blob\":return e.arrayBuffer2Blob(e.transformTo(\"arraybuffer\",y),a.mimeType);case\"base64\":return a.base64?i.encode(y):y;default:return y}},crc32:function(a,b){return f(a,b)},utf8encode:function(a){return e.transformTo(\"string\",m.utf8encode(a))},utf8decode:function(a){return m.utf8decode(a)}};b.exports=D},{\"./base64\":2,\"./compressedObject\":3,\"./compressions\":4,\"./crc32\":5,\"./defaults\":7,\"./nodeBuffer\":12,\"./signature\":15,\"./stringWriter\":17,\"./support\":18,\"./uint8ArrayWriter\":20,\"./utf8\":21,\"./utils\":22}],15:[function(a,b,c){\"use strict\";c.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",c.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",c.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",c.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",c.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],16:[function(a,b,c){\"use strict\";function d(a,b){this.data=a,b||(this.data=f.string2binary(this.data)),this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./dataReader\"),f=a(\"./utils\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6,\"./utils\":22}],17:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(){this.data=[]};e.prototype={append:function(a){a=d.transformTo(\"string\",a),this.data.push(a)},finalize:function(){return this.data.join(\"\")}},b.exports=e},{\"./utils\":22}],18:[function(a,b,c){(function(a){\"use strict\";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,c.nodebuffer=\"undefined\"!=typeof a,c.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)c.blob=!1;else{var b=new ArrayBuffer(0);try{c.blob=0===new Blob([b],{type:\"application/zip\"}).size}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;f.append(b),c.blob=0===f.getBlob(\"application/zip\").size}catch(d){c.blob=!1}}}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],19:[function(a,b,c){\"use strict\";function d(a){a&&(this.data=a,this.length=this.data.length,this.index=0,this.zero=0)}var e=a(\"./arrayReader\");d.prototype=new e,d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./arrayReader\":1}],20:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(a){this.data=new Uint8Array(a),this.index=0};e.prototype={append:function(a){0!==a.length&&(a=d.transformTo(\"uint8array\",a),this.data.set(a,this.index),this.index+=a.length)},finalize:function(){return this.data}},b.exports=e},{\"./utils\":22}],21:[function(a,b,c){\"use strict\";for(var d=a(\"./utils\"),e=a(\"./support\"),f=a(\"./nodeBuffer\"),g=new Array(256),h=0;h<256;h++)g[h]=h>=252?6:h>=248?5:h>=240?4:h>=224?3:h>=192?2:1;g[254]=g[254]=1;var i=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=e.uint8array?new Uint8Array(i):new Array(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},j=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+g[a[c]]>b?c:b},k=function(a){var b,c,e,f,h=a.length,i=new Array(2*h);for(c=0,b=0;b<h;)if(e=a[b++],e<128)i[c++]=e;else if(f=g[e],f>4)i[c++]=65533,b+=f-1;else{for(e&=2===f?31:3===f?15:7;f>1&&b<h;)e=e<<6|63&a[b++],f--;f>1?i[c++]=65533:e<65536?i[c++]=e:(e-=65536,i[c++]=55296|e>>10&1023,i[c++]=56320|1023&e)}return i.length!==c&&(i.subarray?i=i.subarray(0,c):i.length=c),d.applyFromCharCode(i)};c.utf8encode=function(a){return e.nodebuffer?f(a,\"utf-8\"):i(a)},c.utf8decode=function(a){if(e.nodebuffer)return d.transformTo(\"nodebuffer\",a).toString(\"utf-8\");a=d.transformTo(e.uint8array?\"uint8array\":\"array\",a);for(var b=[],c=0,f=a.length,g=65536;c<f;){var h=j(a,Math.min(c+g,f));e.uint8array?b.push(k(a.subarray(c,h))):b.push(k(a.slice(c,h))),c=h}return b.join(\"\")}},{\"./nodeBuffer\":12,\"./support\":18,\"./utils\":22}],22:[function(a,b,c){\"use strict\";function d(a){return a}function e(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function f(a){var b=65536,d=[],e=a.length,f=c.getTypeOf(a),g=0,h=!0;try{switch(f){case\"uint8array\":String.fromCharCode.apply(null,new Uint8Array(0));break;case\"nodebuffer\":String.fromCharCode.apply(null,j(0))}}catch(i){h=!1}if(!h){for(var k=\"\",l=0;l<a.length;l++)k+=String.fromCharCode(a[l]);return k}for(;g<e&&b>1;)try{\"array\"===f||\"nodebuffer\"===f?d.push(String.fromCharCode.apply(null,a.slice(g,Math.min(g+b,e)))):d.push(String.fromCharCode.apply(null,a.subarray(g,Math.min(g+b,e)))),g+=b}catch(i){b=Math.floor(b/2)}return d.join(\"\")}function g(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var h=a(\"./support\"),i=a(\"./compressions\"),j=a(\"./nodeBuffer\");c.string2binary=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=String.fromCharCode(255&a.charCodeAt(c));return b},c.arrayBuffer2Blob=function(a,b){c.checkSupport(\"blob\"),b=b||\"application/zip\";try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error(\"Bug : can't construct the Blob.\")}}},c.applyFromCharCode=f;var k={};k.string={string:d,array:function(a){return e(a,new Array(a.length))},arraybuffer:function(a){return k.string.uint8array(a).buffer},uint8array:function(a){return e(a,new Uint8Array(a.length))},nodebuffer:function(a){return e(a,j(a.length))}},k.array={string:f,array:d,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(a)}},k.arraybuffer={string:function(a){return f(new Uint8Array(a))},array:function(a){return g(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:d,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(new Uint8Array(a))}},k.uint8array={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:d,nodebuffer:function(a){return j(a)}},k.nodebuffer={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return k.nodebuffer.uint8array(a).buffer},uint8array:function(a){return g(a,new Uint8Array(a.length))},nodebuffer:d},c.transformTo=function(a,b){if(b||(b=\"\"),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=k[d][a](b);return e},c.getTypeOf=function(a){return\"string\"==typeof a?\"string\":\"[object Array]\"===Object.prototype.toString.call(a)?\"array\":h.nodebuffer&&j.test(a)?\"nodebuffer\":h.uint8array&&a instanceof Uint8Array?\"uint8array\":h.arraybuffer&&a instanceof ArrayBuffer?\"arraybuffer\":void 0},c.checkSupport=function(a){var b=h[a.toLowerCase()];if(!b)throw new Error(a+\" is not supported by this browser\")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d=\"\";for(c=0;c<(a||\"\").length;c++)b=a.charCodeAt(c),d+=\"\\\\x\"+(b<16?\"0\":\"\")+b.toString(16).toUpperCase();return d},c.findCompression=function(a){for(var b in i)if(i.hasOwnProperty(b)&&i[b].magic===a)return i[b];return null},c.isRegExp=function(a){return\"[object RegExp]\"===Object.prototype.toString.call(a)},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&\"undefined\"==typeof c[b]&&(c[b]=arguments[a][b]);return c}},{\"./compressions\":4,\"./nodeBuffer\":12,\"./support\":18}],23:[function(a,b,c){\"use strict\";function d(a,b){this.files=[],this.loadOptions=b,a&&this.load(a)}var e=a(\"./stringReader\"),f=a(\"./nodeBufferReader\"),g=a(\"./uint8ArrayReader\"),h=a(\"./arrayReader\"),i=a(\"./utils\"),j=a(\"./signature\"),k=a(\"./zipEntry\"),l=a(\"./support\");a(\"./object\");d.prototype={checkSignature:function(a){var b=this.reader.readString(4);if(b!==a)throw new Error(\"Corrupted zip or bug : unexpected signature (\"+i.pretty(b)+\", expected \"+i.pretty(a)+\")\")},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=l.uint8array?\"uint8array\":\"array\",c=i.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.versionMadeBy=this.reader.readString(2),this.versionNeeded=this.reader.readInt(2),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readString(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(j.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readString(4)===j.CENTRAL_FILE_HEADER;)a=new k({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(j.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,j.LOCAL_FILE_HEADER);throw b?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip : can't find end of central directory\")}this.reader.setIndex(a);var c=a;if(this.checkSignature(j.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(a),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,j.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,j.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(e)+\" bytes.\")},prepareReader:function(a){var b=i.getTypeOf(a);if(i.checkSupport(b),\"string\"!==b||l.uint8array)if(\"nodebuffer\"===b)this.reader=new f(a);else if(l.uint8array)this.reader=new g(i.transformTo(\"uint8array\",a));else{if(!l.array)throw new Error(\"Unexpected error: unsupported type '\"+b+\"'\");this.reader=new h(i.transformTo(\"array\",a))}else this.reader=new e(a,this.loadOptions.optimizedBinaryString)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{\"./arrayReader\":1,\"./nodeBufferReader\":13,\"./object\":14,\"./signature\":15,\"./stringReader\":16,\"./support\":18,\"./uint8ArrayReader\":19,\"./utils\":22,\"./zipEntry\":24}],24:[function(a,b,c){\"use strict\";function d(a,b){this.options=a,this.loadOptions=b}var e=a(\"./stringReader\"),f=a(\"./utils\"),g=a(\"./compressedObject\"),h=a(\"./object\"),i=a(\"./support\"),j=0,k=3;d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},prepareCompressedContent:function(a,b,c){return function(){var d=a.index;a.setIndex(b);var e=a.readData(c);return a.setIndex(d),e}},prepareContent:function(a,b,c,d,e){return function(){var a=f.transformTo(d.uncompressInputType,this.getCompressedContent()),b=d.uncompress(a);if(b.length!==e)throw new Error(\"Bug : uncompressed data size mismatch\");return b}},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize==-1||this.uncompressedSize==-1)throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)\");if(b=f.findCompression(this.compressionMethod),null===b)throw new Error(\"Corrupted zip : compression \"+f.pretty(this.compressionMethod)+\" unknown (inner file : \"+f.transformTo(\"string\",this.fileName)+\")\");if(this.decompressed=new g,this.decompressed.compressedSize=this.compressedSize,this.decompressed.uncompressedSize=this.uncompressedSize,this.decompressed.crc32=this.crc32,this.decompressed.compressionMethod=this.compressionMethod,this.decompressed.getCompressedContent=this.prepareCompressedContent(a,a.index,this.compressedSize,b),this.decompressed.getContent=this.prepareContent(a,a.index,this.compressedSize,b,this.uncompressedSize),this.loadOptions.checkCRC32&&(this.decompressed=f.transformTo(\"string\",this.decompressed.getContent()),h.crc32(this.decompressed)!==this.crc32))throw new Error(\"Corrupted zip : CRC32 mismatch\");\n},readCentralPart:function(a){if(this.versionMadeBy=a.readInt(2),this.versionNeeded=a.readInt(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4),this.fileNameLength=a.readInt(2),this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");this.fileName=a.readData(this.fileNameLength),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===j&&(this.dosPermissions=63&this.externalFileAttributes),a===k&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=new e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index;for(this.extraFields=this.extraFields||{};a.index<e+this.extraFieldsLength;)b=a.readInt(2),c=a.readInt(2),d=a.readString(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=i.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=h.utf8decode(this.fileName),this.fileCommentStr=h.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileName)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileComment)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null}},b.exports=d},{\"./compressedObject\":3,\"./object\":14,\"./stringReader\":16,\"./support\":18,\"./utils\":22}],25:[function(a,b,c){\"use strict\";var d=a(\"./lib/utils/common\").assign,e=a(\"./lib/deflate\"),f=a(\"./lib/inflate\"),g=a(\"./lib/zlib/constants\"),h={};d(h,e,f,g),b.exports=h},{\"./lib/deflate\":26,\"./lib/inflate\":27,\"./lib/utils/common\":28,\"./lib/zlib/constants\":31}],26:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e=\"string\"==typeof b.dictionary?j.string2buf(b.dictionary):\"[object ArrayBuffer]\"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a(\"./zlib/deflate\"),i=a(\"./utils/common\"),j=a(\"./utils/strings\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,\"string\"==typeof a?e.input=j.string2buf(a):\"[object ArrayBuffer]\"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||(\"string\"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/deflate\":33,\"./zlib/messages\":38,\"./zlib/zstream\":40}],27:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a(\"./zlib/inflate\"),h=a(\"./utils/common\"),i=a(\"./utils/strings\"),j=a(\"./zlib/constants\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=a(\"./zlib/gzheader\"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,\"string\"==typeof a?m.input=i.binstring2buf(a):\"[object ArrayBuffer]\"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l=\"string\"==typeof p?i.string2buf(p):\"[object ArrayBuffer]\"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/constants\":31,\"./zlib/gzheader\":34,\"./zlib/inflate\":36,\"./zlib/messages\":38,\"./zlib/zstream\":40}],28:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if(\"object\"!=typeof c)throw new TypeError(c+\"must be non-object\");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],29:[function(a,b,c){\"use strict\";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c=\"\",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a(\"./common\"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{\"./common\":28}],30:[function(a,b,c){\"use strict\";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],31:[function(a,b,c){\"use strict\";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],32:[function(a,b,c){\"use strict\";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],33:[function(a,b,c){\"use strict\";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a(\"../utils/common\"),F=a(\"./trees\"),G=a(\"./adler32\"),H=a(\"./crc32\"),I=a(\"./messages\"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./messages\":38,\"./trees\":39}],34:[function(a,b,c){\"use strict\";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}b.exports=d},{}],35:[function(a,b,c){\"use strict\";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg=\"invalid literal/length code\",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg=\"invalid distance code\",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],36:[function(a,b,c){\"use strict\";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg=\"\",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg=\"incorrect header check\",c.mode=ma;break}if((15&m)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg=\"invalid window size\",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(57344&c.flags){a.msg=\"unknown header flags set\",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,\nn+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg=\"header crc mismatch\",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg=\"invalid block type\",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg=\"invalid stored block lengths\",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg=\"too many length or distance symbols\",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid code lengths set\",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg=\"invalid bit length repeat\",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg=\"invalid bit length repeat\",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg=\"invalid code -- missing end-of-block\",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid literal/lengths set\",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg=\"invalid distances set\",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg=\"invalid literal/length code\",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg=\"invalid distance code\",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg=\"invalid distance too far back\",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg=\"invalid distance too far back\",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg=\"incorrect data check\",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg=\"incorrect length check\",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a(\"../utils/common\"),t=a(\"./adler32\"),u=a(\"./crc32\"),v=a(\"./inffast\"),w=a(\"./inftrees\"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./inffast\":35,\"./inftrees\":37}],37:[function(a,b,c){\"use strict\";var d=a(\"../utils/common\"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{\"../utils/common\":28}],38:[function(a,b,c){\"use strict\";b.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],39:[function(a,b,c){\"use strict\";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a(\"../utils/common\"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{\"../utils/common\":28}],40:[function(a,b,c){\"use strict\";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomActiveList {\n   get key() {\n      return \"activelist\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.list, webix.ActiveContent);\n   }\n};\n","/*\n * countfooter\n *\n * Add the count footer to the webix's datatable.\n *\n */\n\nmodule.exports = class ABCountFooter {\n   get key() {\n      return \"countfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.countColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               var rowData = datatable.find({}) || [];\n               rowData.forEach((row) => {\n                  if (row == null) return;\n\n                  var data =\n                     row[info.columnId] || row[info.columnId + \"__relation\"];\n\n                  // array\n                  if (data && Array.isArray(data)) {\n                     result += data.length;\n                  } else if (\n                     data != null &&\n                     data != \"\" &&\n                     data != false &&\n                     data != \"false\" &&\n                     data != \"0\"\n                  ) {\n                     result += 1;\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * Custom Component Manager\n * Make sure our {ABComponent}s are initialized with our custom\n * Webix Components.\n */\n\n// Import our Custom Components here:\nvar componentList = [\n   require(\"./activelist\"),\n   require(\"./countfooter\"),\n   require(\"./datetimepicker\"),\n   require(\"./editlist\"),\n   require(\"./edittree\"),\n   require(\"./editunitlist\"),\n   require(\"./focusableTemplate\"),\n   require(\"./formioPreview\"),\n   require(\"./formioBuilder\").default,\n   require(\"./numbertext\"),\n   require(\"./thaicalendar\"),\n   require(\"./timepicker\"),\n   require(\"./tinyMce\").default,\n   require(\"./totalfooter\"),\n   require(\"./treesuggest\"),\n   // require('./savablelayout')\n];\n\nmodule.exports = class ABCustomComponentManager {\n   constructor() {}\n\n   initComponents(App) {\n      App.custom = App.custom || {};\n\n      componentList.forEach((Component) => {\n         var component = new Component(App);\n         App.custom[component.key] = component;\n      });\n\n      // Transition to v2:\n      App.AB.custom = App.custom;\n   }\n};\n","/*\n * custom_datetimepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomDateTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"datetimepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_datetimepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.datetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: \"calendar\",\n            icons: true,\n            borderless: true,\n            timepicker: true\n         }\n      };\n\n      webix.editors.datetime = webix.extend(\n         {\n            popupType: \"datetime\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n   }\n};\n","/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditTree {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"edittree\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n   }\n};\n","/*\n * custom_editunitlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditUnitList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editunitlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n      /*\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n*/\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.unitlist);\n   }\n};\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFocusableTemplate {\n   get key() {\n      return \"focusabletemplate\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         focus: function() {\n            return false;\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.template, webix.UIManager);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n * Note: Moved from ABDesigner to prevent loading formIO library globally or\n * duplicating it. Revisit when formIOv5 releases as it should then be possible\n * to package the form renderer without the builder.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n */\nimport ABLazyCustomComponent from \"./lazyComponent.js\";\nexport default class ABCustomFormBuilderBuilder extends ABLazyCustomComponent {\n   get key() {\n      return \"formiobuilder\";\n   }\n\n   constructor(App) {\n      super(App);\n      this.label = this.AB.Label();\n      this.view = this.key;\n   }\n\n   /**\n    * Load the FormIO dependency and add the component to webix\n    * @returns {Promise<null>}\n    */\n   async init() {\n      if (this.initialized) return;\n      const { FormBuilder } = await import(\n         /* webpackPrefetch: true */\n         /* webpackFetchPrioirtiy: \"low\" */\n         \"../init/formio.js\"\n      );\n      this.FormBuilder = FormBuilder;\n      // Tell Webix to create an INSTANCE of our custom component:\n      this.AB.Webix.protoUI(this.ui(), this.AB.Webix.ui.popup);\n      this.initialized = true;\n   }\n\n   /**\n    * Generate the custom webix ui\n    * @method ui\n    * @returns {Object} custom webix ui\n    */\n   ui() {\n      return {\n         name: this.key,\n         defaults: {\n            css: \"scrolly forceOpen\",\n            hidden: false,\n            autofit: true,\n         },\n         $init: async function (config) {\n            const comp = this.parseDataFields(config.dataFields);\n            const formComponents = config.formComponents\n               ? config.formComponents\n               : { components: [comp.approveButton.schema] };\n            try {\n               this.builder = new this.FormBuilder(this.$view, formComponents, {\n                  noDefaultSubmitButton: true,\n                  noNewEdit: true,\n                  builder: {\n                     basic: false,\n                     advanced: false,\n                     customBasic: false,\n                     premium: false,\n                     custom: {\n                        title: this.label(\"Fields\"),\n                        weight: 0,\n                        default: true,\n                        components: comp,\n                     },\n                     layout: {\n                        components: {\n                           table: true,\n                        },\n                     },\n                  },\n               });\n               await this.builder.ready;\n            } catch (err) {\n               this.notify(\"Error initializing formio builder\", err);\n            }\n         },\n         // set up a function that can be called to request the form schema\n         getFormData: function () {\n            return this.builder.schema;\n         },\n         // Pass functions into the Webix component to be use in $init\n         label: this.label,\n         parseDataFields: this.parseDataFields,\n         notify: this.AB.notify.developer,\n         FormBuilder: this.FormBuilder,\n      };\n   }\n\n   /**\n    * Generate the formio custom components based on the fields.\n    * Used internally in the webix component.\n    * @method parseDataFields\n    * @param {object[]} fields {field: ABField, key, label, object: ABObject}\n    * @returns {object} each key is a formio component\n    */\n   parseDataFields(fields) {\n      const components = {};\n      fields.forEach(({ field, key, label }) => {\n         if (!field) return;\n\n         const schema = {\n            abFieldID: field.id,\n            label: field.label,\n            disabled: true,\n            key,\n            _key: key,\n            type: \"textfield\",\n            input: true,\n         };\n\n         switch (field.key) {\n            case \"boolean\":\n               schema.type = \"checkbox\";\n               break;\n            case \"calculate\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = ${field.settings.formula\n                  .replace(/{/g, \"data['\")\n                  .replace(/}/g, \"']\")}`;\n               break;\n            case \"connectObject\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = data['${key}.format']`;\n               break;\n            case \"date\":\n               schema.type = \"datetime\";\n               schema.format = \"MMMM d, yyyy\";\n               break;\n            case \"datetime\":\n               schema.type = \"datetime\";\n               schema.format = \"MMMM d, yyyy h:mm a\";\n               break;\n            case \"email\":\n               schema.type = \"email\";\n               break;\n            case \"file\":\n               schema.type = \"htmlelement\";\n               schema.tag = \"a\";\n               schema.className = \"btn btn-primary btn-block\";\n               schema.content = `<i class='fa fa-paperclip'></i> {{data['${key}']?.filename ?? \"No File\"}}`;\n               schema.attrs = [\n                  {\n                     attr: \"href\",\n                     value: field.urlFile(`{{data['${key}'].uuid}}`),\n                  },\n                  {\n                     attr: \"target\",\n                     value: \"_blank\",\n                  },\n               ];\n               schema.refreshOnChange = true;\n               schema.input = false;\n               break;\n            case \"image\":\n               schema.type = \"htmlelement\";\n               schema.tag = \"img\";\n               schema.className = \"img-thumbnail max100\";\n               schema.content = \"\";\n               (schema.attrs = [\n                  {\n                     attr: \"src\",\n                     value: field.urlImage(`{{data['${key}']}}`),\n                  },\n               ]),\n                  (schema.refreshOnChange = true);\n               schema.input = false;\n               break;\n            case \"list\":\n               var values = [];\n               field.settings.options.forEach((opt) => {\n                  values.push({\n                     label: opt.text,\n                     value: opt.id,\n                  });\n               });\n               schema.type = \"select\";\n               schema.data = { values };\n               schema.multiple = field.settings.isMultiple;\n               break;\n            case \"LongText\":\n               schema.type = \"textarea\";\n               break;\n            case \"number\":\n               schema.type = \"number\";\n               break;\n            case \"TextFormula\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = '${field.settings.textFormula}'`;\n               break;\n            default:\n               break;\n         }\n         components[key] = {\n            title: label,\n            key,\n            icon: field.icon,\n            schema,\n         };\n      });\n\n      components[\"approveButton\"] = {\n         title: this.label(\"Approve Button\"),\n         key: \"approve\",\n         icon: \"check-square\",\n         schema: {\n            label: this.label(\"Approve\"),\n            type: \"button\",\n            key: \"approve\",\n            event: \"approve\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-thumbs-up\",\n            action: \"event\",\n            theme: \"success\",\n         },\n      };\n      components[\"denyButton\"] = {\n         title: this.label(\"Deny Button\"),\n         key: \"deny\",\n         icon: \"ban\",\n         schema: {\n            label: this.label(\"Deny\"),\n            type: \"button\",\n            key: \"deny\",\n            event: \"deny\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-thumbs-down\",\n            action: \"event\",\n            theme: \"danger\",\n         },\n      };\n      components[\"customButton\"] = {\n         title: this.label(\"Custom Action Button\"),\n         key: \"custom\",\n         icon: \"cog\",\n         schema: {\n            label: this.label(\"Custom Name\"),\n            type: \"button\",\n            key: \"custom\",\n            event: \"yourEvent\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-cog\",\n            action: \"event\",\n            theme: \"primary\",\n         },\n      };\n      return components;\n   }\n}\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n *\n */\nconst ABLazyCustomComponent = require(\"./lazyComponent.js\");\nmodule.exports = class ABCustomFormIOPreview extends ABLazyCustomComponent {\n   get key() {\n      return \"formiopreview\";\n   }\n\n   async init() {\n      if (this.initialized) return;\n      const { Form } = await import(\n         /* webpackPrefetch: true */\n         /* webpackFetchPrioirtiy: \"low\" */\n         \"../init/formio.js\"\n      );\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly\",\n            borderless: true,\n         },\n         $init: async function (config) {\n            this.$ready.push(() => this.initForm(config));\n         },\n\n         initForm: async (config) => {\n            var formComponents = config.formComponents ?? {};\n            var formData = config.formData ?? {};\n            const component = $$(config.id);\n            // we need to find out when we are passing an array of objects and reduce it down to an array of IDs\n            for (var data in formData) {\n               if (\n                  Array.isArray(formData[data]) &&\n                  typeof formData[data][0] == \"object\"\n               ) {\n                  formData[data] = formData[data].map((item) => item.id);\n               }\n            }\n\n            const form = new Form(component.$view, formComponents);\n            // readOnly: true\n            // sanitizeConfig: {\n            //     addTags: [\"a\", \"label\", \"img\", \"i\"],\n            //     addAttr: [\"src\", \"href\", \"class\", \"target\"]\n            // }\n            // }).then(function (form) {\n            await form.build();\n            // now that it is set up we can push it into the global var\n            // formBuilder = builder;\n            // Provide a default submission.\n            form.instance.submission = {\n               data: formData,\n            };\n            (formComponents.components || []).forEach((comp) => {\n               if (\n                  comp.type == \"button\" &&\n                  comp.action == \"event\" &&\n                  comp.event\n               ) {\n                  form.instance.once(comp.event, function (/* click */) {\n                     config?.onButton(comp.event);\n                     // _this.emit(\"button\", comp.event);\n                  });\n               }\n            });\n            // });\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      this._logic = {};\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      this.AB.Webix.protoUI(_ui, this.AB.Webix.ui.view);\n      this.initialized = true;\n   }\n};\n","/**\n * Base class for any custom webix component that we want to initalize lazily,\n * usually to reduce the dependency size required on load.\n */\nvar ABEmitter = require(\"../AppBuilder/platform/ABEmitter.js\");\nmodule.exports = class ABLazyCustomComponent extends ABEmitter {\n   constructor({ AB }) {\n      super();\n      this.initialized = false;\n      this.AB = AB;\n      this.setDefaultUI();\n   }\n\n   /**\n    * Sets a default UI used before the actual webix component is ready. Meant as\n    * a helper to future developers.\n    */\n   setDefaultUI() {\n      this.AB.Webix.protoUI(\n         {\n            name: this.key,\n            defaults: {\n               template:\n                  \"This custom webix component has not been initialized. <br>Call AB.custom.#key#.init() before using this component.\",\n               data: { key: this.key },\n            },\n            $init: () =>\n               console.warn(\n                  `${this.key} custom webix component used before being initalized`\n               ),\n         },\n         this.AB.Webix.ui.template\n      );\n   }\n};\n","/*\n * numbertext\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomNumberText {\n   get key() {\n      return \"numbertext\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n\n         defaults: {\n            css: \"webix_el_text\"\n         },\n\n         // override this function to return number value type\n         $getValue: function() {\n            var val = this.getInputNode().value;\n            if (val) return JSON.parse(val);\n            // Convert to number\n            else return \"\";\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.text);\n   }\n};\n","/*\n * Thai Calendar\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomThaiCalendar {\n   get key() {\n      return \"thaicalendar\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      this.view = this.key;\n\n      const i18n = webix.i18n;\n\n      // Our webix UI definition:\n      const _ui = {\n         name: this.key,\n         defaults: {\n            calendarHeader: function (d) {\n               return `${i18n.calendar.monthFull[d.getMonth()]} ${\n                  d.getFullYear() + 543\n               }`;\n            },\n         },\n      };\n\n      if (webix.ui.calendar.$protoWait[0]._zoom_logic) {\n         _ui._zoom_logic = AB.cloneDeep(\n            webix.ui.calendar.$protoWait[0]._zoom_logic\n         );\n         _ui._zoom_logic[1] = Object.assign(_ui._zoom_logic[1], {\n            _getTitle: this._getYearTitle,\n         });\n         _ui._zoom_logic[2] = Object.assign(_ui._zoom_logic[2], {\n            _getTitle: this._getYearRangeTitle,\n            _getContent: this._getYearContent,\n            _setContent: this._setYear,\n         });\n      }\n\n      if (webix.ui.calendar.$protoWait[0].Qd) {\n         _ui.Qd = AB.cloneDeep(webix.ui.calendar.$protoWait[0].Qd);\n         _ui.Qd[1] = Object.assign(_ui.Qd[1], {\n            Jv: this._getYearTitle,\n         });\n         _ui.Qd[2] = Object.assign(_ui.Qd[2], {\n            Jv: this._getYearRangeTitle,\n            Zv: this._getYearContent,\n            Xv: this._setYear,\n         });\n      }\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.calendar);\n\n      webix.editors.$popup.thaidate = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: false,\n         },\n      };\n\n      webix.editors.$popup.thaidatetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.thaidate = webix.extend(\n         {\n            popupType: \"thaidate\",\n         },\n         webix.editors.date\n      );\n\n      webix.editors.thaidatetime = webix.extend(\n         {\n            popupType: \"thaidatetime\",\n         },\n         webix.editors.date\n      );\n   }\n\n   _getYearTitle(date) {\n      return date.getFullYear() + 543;\n   }\n\n   _getYearRangeTitle(date, calendar) {\n      let start = date.getFullYear() + 543;\n      calendar._zoom_start_date = start = start - (start % 10) - 1;\n      return start + \" - \" + (start + 10 + 1);\n   }\n\n   _getYearContent(i, calendar) {\n      return calendar._zoom_start_date + i;\n   }\n\n   _setYear(next, i, calendar) {\n      next.setFullYear(calendar._zoom_start_date - 543 + i);\n   }\n};\n","/*\n * custom_timepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"timepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_timepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.time = {\n         view: \"popup\",\n         body: {\n            view: \"calendar\",\n            width: 220,\n            height: 200,\n            type: \"time\"\n         }\n      };\n\n      webix.editors.time = webix.extend(\n         {\n            popupType: \"time\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * tinyMce\n *\n * Create a custom webix component.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n */\nimport ABLazyCustomComponent from \"./lazyComponent.js\";\nexport default class ABCustomTinyMCE extends ABLazyCustomComponent {\n   get key() {\n      return \"tinymce-editor\";\n   }\n\n   async init() {\n      if (this.initialized) return;\n\n      await import(\n         /* webpackPrefetch: true */\n         \"../js/webix/extras/tinymce.js\"\n      );\n      this.initialized = true;\n   }\n}\n","/*\n * totalfooter\n *\n * Add the contents of records to show in footer of the webix's datatable.\n *\n */\n\nmodule.exports = class ABTotalFooter {\n   get key() {\n      return \"totalfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.totalColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               datatable.eachRow(function (row) {\n                  var record = datatable.getItem(row);\n\n                  var data = info.field.format(record);\n\n                  // array\n                  if (data) {\n                     result += parseFloat(data); // we need to use parseFloat because numbers could be decimals\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"treesuggest\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            type: \"tree\",\n            width: 0,\n            body: {\n               borderless: true,\n               select: true,\n               template: function(obj, common) {\n                  return (\n                     \"<span>\" +\n                     (obj.$count ? \"<b>\" + obj.value + \"</b>\" : obj.value) +\n                     \"</span>\"\n                  );\n               },\n               ready: function() {\n                  this.openAll();\n               },\n               on: {\n                  onAfterSelect: function(id, e) {\n                     if (this.getItem(id).$count) {\n                        this.getParentView().setMasterValue(\"\");\n                        this.show(\n                           $$(this.getParentView().config.master).getInputNode()\n                        );\n                     }\n                  }\n               }\n            }\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.suggest);\n   }\n};\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","EventEmitter","constructor","super","this","isAuthenticated","_config","_listRoles","_listScopes","_listUsers","init","AB","UserConfig","Config","userConfig","MetaConfig","metaConfig","roles","scopes","users","Network","on","context","err","data","console","error","emit","Promise","canSwitcheroo","r","uuid","length","isSwitcherood","userReal","isSystemDesigner","email","language","languageCode","logout","post","url","tenantUrl","Tenant","setting","key","fn","filter","rolesAll","username","userList","imageID","image_id","sendEmailNotifications","Alert","opts","webix","alert","title","Multilingual","label","text","message","ok","Confirm","labelYes","labelNo","cancel","confirm","callback","result","fnYes","fnNo","ConfirmDelete","Message","timeout","expire","MLClass","_missingLabelID","_missingLabels","_pluginLabelsMissing","labels","labelConfig","_languages","languageConfig","pluginLabels","currentLanguage","Account","altText","values","postMissing","arguments","Array","isArray","replace","newKey","slice","postMissingLabel","forEach","v","i","sub","replaceAll","labelPlugin","plugin","languages","pluginLoadLabels","pluginLabelReport","warn","JSON","stringify","clearTimeout","sendBatch","batchLabels","missingLabels","k","l","shift","push","then","catch","toString","indexOf","setTimeout","destroy","save","toObj","toDefinition","Atomic","parent","wildcard","newListener","maxListeners","baseURL","numRetries","_network","isRealTime","options","siteConfig","appbuilder","urlCoreServer","networkNumRetries","get","params","jobResponse","type","useThese","search","val","encodeURIComponent","join","_request","put","delete","isNetworkConnected","salSend","packet","_retry","notify","developer","publishResponse","reject","headers","authToken","Authorization","tenantID","method","statusText","Analytics","log","_err","status","responseText","parse","response","queue","resend","listSocketEvents","ev","io","socket","obj","objectByID","objectId","model","jobID","performance","op","normalizeData","isConnected","route","query","match","http","undefined","toLowerCase","request","jwres","statusCode","errStr","body","Stringify","setMaxListeners","queueLock","_queueCount","Lock","networkType","queueFlush","idConnectionCheck","window","addEventListener","_connectionCheck","isNetworkSlow","_networkSlow","registerNetworkTestWorker","worker","slow","_networkTestWorker","onmessage","category","level","networkStatus","navigator","connection","Connection","onLine","NONE","refQueue","queueCount","acquire","Storage","set","release","logError","processRequest","cb","entry","job","res","rej","reset","getTokens","tenantStorage","Webix","storage","prefix","local","value","clear","remove","clearAll","_storage","config","encrypted","textClickToEnter","String","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthLarge","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","innerWidth","icons","ABValidator","errors","addError","name","pass","fail","toValidationObject","invalidAttributes","attr","updateForm","form","vObj","Validation","isFormValidationError","updateGrid","rowID","grid","isGridValidationError","ABFactory","definitions","Dialog","ClassUI","Class","FilterComplex","ABViewManager","UISettings","validator","errorSailsCleanup","raw","hasFocused","attrs","wasForm","elements","msg","markInvalid","focus","row","Grid","wasGrid","addCellCss","refresh","clearSelection","Definitions","_plugins","_pendingNetworkRequests","fullDef","pending","pkt","newDef","definitionNew","serverDef","definitionCreate","_definitions","platformRules","toDate","dateText","ignoreTime","format","isValid","Date","toDateFormat","date","momentObj","localeCode","locale","subtractDate","number","unit","subtract","addDate","add","rules","async","allInits","all","_localSettings","json","definitionSync","def","domain","info","plugins","pluginLoad","p","cloneDeep","rest","emitData","Label","localSettings","isUUID","RegExp","test","merge","orderBy","uniq","kebabCase","sumBy","meanBy","maxBy","minBy","isString","ABMLClass","attributes","appType","versionData","versionNumber","changeLog","author","version","keepVersion","commitMessage","timestamp","toISOString","icon","isSystemObject","roleAccess","isAccessManaged","accessManagers","isTranslationManaged","translationManagers","isTutorialManaged","tutorialManagers","hintIDs","objectIDs","queryIDs","datacollectionIDs","newPages","pageIDs","definitionByID","pageNew","appID","pageID","_pages","processIDs","pID","processByID","processID","objectListSettings","isOpen","searchText","sortDirection","isGroup","translations","fromValues","ViewManager","isAccessibleForRoles","foundRole","parseInt","useRole","role","pages","isWebApp","isMobile","datacollectionsExcluded","datacollections","datacollectionsIncluded","sort","sortFn","a","b","localeCompare","objectsExcluded","objects","objectsIncluded","hintsExcluded","hints","h","hintsIncluded","connectedObjects","connectedFields","connectFields","connectedObj","f","settings","linkObject","linkedObjects","currObjID","linkedObjectID","linkedFields","columnName","deep","_searchDeep","curr","items","resultsCurr","resultsP","concat","processes","hasProcess","process","views","_views","subViews","lookDeep","view","pageViews","subPages","viewAll","allViews","queriesExcluded","queries","q","queriesIncluded","urlResolve","pointer","parts","split","parseStep","steps","urlPointer","acrossApp","urlObject","urlPage","urlQuery","objectlistIsOpen","objectlistSearchText","objectlistSortDirection","objectlistIsGroup","newView","pageByID","viewNew","application","ABViewManagerMobile","ABApplication","pageDefault","DefaultValues","object","datasourceID","linkDatacollectionID","linkFieldID","followDatacollectionID","objectWorkspace","filterConditions","glue","sortFields","loadAll","populate","isQuery","fixSelect","syncType","__dataCollection","_dataCollectionNew","refreshFilterConditions","__bindComponentIds","__flexComponentIds","_dataStatus","dataStatusFlag","notInitial","__filterCond","static","preventPopulate","__datasource","queryByID","__treeCollection","_treeCollectionNew","__isGroup","removeFromApplications","next","apps","applications","allRemoves","app","datacollectionRemove","$dc","datasource","datacollection","sourceType","datacollectionLink","datacollectionByID","fieldLink","fieldByID","initializing","initialized","dataStatus","setCursor","itemId","setCursorTree","currTreeId","getCursor","currTreeItem","getItem","_itemId","dc","__previousCursorId","exists","tc","find","treeItem","$parent","treeCursor","currId","currItem","item","currItemAndChilds","serialize","refreshLinkCursor","getFirstRecord","getFirstId","getNextRecord","record","getNextId","linkCursor","dvLink","filterData","rowData","isParentFilterValid","setStaticCursor","currentUserUsername","userFields","fields","found","currRowId","rowId","isCursorFollow","dcFollow","datacollectionFollow","loadData","filterCondition","cond","___AD","onAfterCursorChange","attachEvent","currData","isRelated","relateData","PK","needAdd","updatedVals","bad","ABObjectQuery","objList","where","newDataId","alias","objectAlias","rule","findAll","newQueryData","updatedV","isValidData","__reloadWheres","bcids","$$","pos","getParentView","index","DC","addView","L","css","click","event","reloadData","removeView","parseTreeCollection","datasourceLink","d","updateItemData","updateRelateVal","relationName","rowRelateVal","valIsRelated","updateItem","needUpdate","isExists","updatedIds","updatedTreeIds","_queryUpdateData","ABObject","count","assign","dcItem","staleRefresh","deleteId","needDelete","deletedIds","deletedTreeIds","delId","updateRelateVals","relateVal","linkDC","eventAdd","emitter","eventName","listener","currentCursor","previousCursorId","followDC","followCursor","eventRemove","start","limit","sorts","wheres","__additionalWheres","dataCollectionLink","linkCursorId","getRelationValue","unshift","skip","parentDc","waitForDataCollectionToInitialize","dcFilters","dv","_pendingLoadDataResolve","platformFind","processIncomingData","incomingData","total_count","nextData","remain","splice","parsedData","queuedParse","__totalCount","__throttleIncoming","load","reloadTimer","reloadPromise","reloadPromise__resolve","reloadPromise__reject","reloadWheres","getData","linkDv","linkObj","linkVal","totalCount","bind","unbind","removeComponent","comId","__filterDatasource","filterComplexNew","fieldsLoad","setValue","__filterDatacollection","__filterScope","scopeList","userScopes","s","allowAll","objectIds","scopeRules","sRules","scopeWhere","syncTypeFlag","server","client","oItem","tran","updatedTran","tranKey","clone","clonedDatacollection","parseMe","cursorID","filteredClone","filters","evt","__events","eventClear","removeListener","builder","definitionDestroy","definitionUpdate","ABApplicationMobile","ABDefinition","ABComponent","ABFieldManager","ABIndex","ABObjectExternal","ABObjectImport","ABObjectApi","ABDataCollection","ABHint","ABProcess","ABProcessParticipant","ABProcessLane","ABProcessTaskManager","ABStep","ABViewDetailItem","ABViewFormItem","ABMobileViewFormItem","RowFilter","hash","_allApplications","_allObjects","_allHints","_allProcesses","_allQueries","_allSteps","_allDatacollections","nameFilter","toApplicationNameFormat","toFieldRelationFormat","colName","toJunctionTableFK","objectName","fkName","substring","toJunctionTableNameFormat","appName","sourceTableName","targetTableName","toObjectNameFormat","definitionClean","allDefinitions","keyList","keyFn","objectKeysByDef","isRaw","definitionsParse","defs","applicationByID","ID","applicationNew","applicationMobileNew","datacollectionNew","fieldNew","newField","indexNew","objectNew","isExternal","isImported","isAPI","objectFile","objectLanguage","objectProcessForm","objectProcessInstance","objectRole","objectScope","objectToken","objectUser","objectKey","objectSecret","hintID","hintNew","stepID","stepNew","stepDef","hint","processNew","processElementNew","taskDef","defaults","newTask","processElementNewForModelDefinition","element","newElement","defaultDef","definitionForElement","fromElement","queryNew","rowfilterNew","App","idBase","_App","viewNewDetatched","_mockApp","_notifyInfo","moreInfo","objectID","fieldID","fieldName","datacollectionID","datacollectionName","ds","datacollectionDSID","datacollectionDSName","processName","_tenantID","user","_user","taskID","taskName","applicationID","applicationName","viewID","viewName","viewKey","Fields","FIELD","active","hasOwnProperty","description","transition","showIntroStep","stepIDs","_steps","sID","ele","stepAdd","step","stepByID","stepRemove","stepIndex","unique","fieldIDs","_unknownFieldIDs","field","fId","attributeFieldIDs","indexName","dbTableName","uniqueName","ABEmitter","fieldList","mlFields","translate","defaultTranslations","language_code","languageDefault","unTranslate","currLanguage","first","t","foundOne","trans","_where","_sort","_skip","_limit","staleRefreshInProcess","staleRefreshMap","staleRefreshPending","staleRefreshTimerID","responseContext","contextKey","contextValues","prepareMultilingualData","multilingualFields","shouldTranslate","urlParamsCreate","urlRest","urlParamsDelete","urlRestItem","urlParamsFind","urlParamsUpdate","urlRestCount","numberOfRows","currID","Err","staleRefreshProcess","currentEntries","responseHash","allKeys","findConnected","results","myObj","linkType","returnData","upsert","dateFields","calculatedFields","c","objectLink","olPK","relatedMlFields","subData","relationValue","calField","ABModelApi","readonly","apiType","isFetched","getPagingValues","pagingSettings","paging","dataFromKey","itemResult","dataKey","header","ABModel","ABObjectCore","connName","labelFormat","labelSettings","isNoLabelDisplay","tableName","primaryColumnName","transColumnName","urlPath","createdInAppID","frozenColumnID","hiddenFields","importedFieldIDs","_fields","importIndexes","indexIDs","_unknownIndex","indexes","_indexes","objectLinks","isConnection","fieldImport","fieldRemove","origLen","fid","fieldReorder","sourceId","targetId","itemMoved","oPos","j","fieldSave","fieldAdd","imageFields","isMultilingual","indexByID","indexRemove","idx","indexSave","urlRestBatch","urlRestLog","urlRestRefresh","workspaceSortFields","workspaceViews","currView","getCurrentView","workspaceFilterConditions","workspaceFrozenColumnID","workspaceHiddenFields","isReadOnly","defaultValues","defaultValue","urlField","remoteCreate","cloneOne","prop","minRelationData","colIds","colId","colIdNoBracket","displayData","labelData","defaultField","fieldUseAsLabel","trim","noLabelText","ABModelQuery","__missingObject","__missingFields","__cantFilter","__duplicateFields","__linkProblems","alias2Obj","importJoins","joins","importFields","_objectWorkspaceViews","objectWorkspaceViews","grouping","hidePrefix","exportJoins","exportFields","fieldSettings","newFields","fieldInfo","objectByAlias","_objects","objID","canFilterField","isNew","clonedField","currFields","_joins","objectBase","links","_links","uniqueObjectIDs","newLinks","storeObject","storeLinks","link","processJoin","baseObject","linkField","rootObject","canFilterObject","linkedObject","isDisabled","disabled","_concat","ABProcessTaskSubProcess","onProcessReady","xmlDefinition","currElements","_elements","elementIDs","eID","_connections","connections","diagramID","modelDefinition","modelNew","modelUpdate","xml","allConnections","connectionForDiagramID","dID","connectionsIncoming","to","connectionsOutgoing","from","connectionRemove","connectionSimplyElement","bo","businessObject","sourceRef","targetRef","connectionUpsert","simpleConn","elementAdd","elementByID","elementForDiagramID","elementRemove","isTriggeredBy","taskForTriggerKey","connectionNextTask","currElement","connectionPreviousTask","processData","tasksToAsk","allPreviousTasks","queryPreviousTasks","processDataFields","allPreviousConnectionsForConnection","conn","hashConn","allPreviousConnectionsForElement","prevConnections","task","prevTasks","processDataObjects","triggerKey","list","param","responses","processedIDs","apply","el","AllViews","Views","default","common","V","getFieldVal","pureRelationName","isNaN","_settings","condition","_QueryFields","_Fields","_logic","callbacks","onChange","removeHtmlTags","div","document","createElement","innerHTML","textContent","innerText","condResult","ruleFieldType","connectedVal","indexField","indexField2","fieldVal","getConnectFieldValue","textValid","dateValid","numberValid","listValid","booleanValid","userValid","connectFieldValid","thisObjectValid","compareValue","compareArray","queryFieldValid","Number","queryId","fieldId","qIdBase","inQueryFieldFilter","inQueryValid","inQueryFilter","dataCollectionValid","compareValueLowercase","listThisObjects","newRowData","_Object","processFieldsLoad","processFields","_ProcessFields","uiInit","fieldIsFilterable","thisObjOption","fieldsToQB","showObjectName","conditions","processFieldKeys","hasQueryField","isProcessParticipant","fieldsAddFiltersBoolean","fieldsAddFiltersConnectObject","linkViaType","isSource","fieldsAddFiltersString","opt","isCustomFK","fieldsAddFiltersDate","fieldsAddFiltersNumber","fieldsAddFiltersList","fieldsAddFiltersUser","fieldsAddFiltersThisObject","fieldsAddFiltersQuery","isRecordRule","fieldsAddFiltersRecordRule","processField","includes","processFieldId","pop","fieldsAddFiltersContext","fieldsAddFiltersCustom","dateConditions","less","component","beforeCondition","greater","afterCondition","less_or_equal","onOrBeforeCondition","greater_or_equal","onOrAfterCondition","less_current","beforeCurrentCondition","greater_current","afterCurrentCondition","less_or_equal_current","onOrBeforeCurrentCondition","greater_or_equal_current","onOrAfterCurrentCondition","last_days","onLastDaysCondition","next_days","onNextDaysCondition","condKey","batch","handler","stringConditions","contains","containsCondition","not_contains","notContainsCondition","equals","isCondition","not_equal","isNotCondition","is_empty","isEmpty","is_not_empty","isNotEmpty","numberConditions","equalCondition","notEqualCondition","lessThanCondition","moreThanCondition","lessThanOrEqualCondition","moreThanOrEqualCondition","listConditions","equalListCondition","notEqualListCondition","booleanConditions","checked","checkedCondition","unchecked","notCheckedCondition","userConditions","is_current_user","isCurrentUserCondition","is_not_current_user","isNotCurrentUserCondition","contain_current_user","containsCurrentUserCondition","not_contain_current_user","notContainsCurrentUserCondition","connectConditions","same_as_user","sameAsUser","not_same_as_user","notSameAsUser","in_data_collection","inDataCollection","not_in_data_collection","notInDataCollection","queryConditions","in_query_field","inQueryField","not_in_query_field","notInQueryField","in_query","inQuery","not_in_query","notInQuery","thisObjectConditions","recordRuleConditions","same_as_field","sameAsField","not_same_as_field","notSameAsField","contextConditions","context_equals","equalsProcessValue","context_not_equal","notEqualsProcessValueCondition","context_in","inProcessValueCondition","context_not_in","notInProcessValueCondition","_customOptions","queriesLoad","_Queries","getValue","isComplete","noValueRules","isCompleteRules","returnSingular","columnId","config_settings","queryValid","ABField","ABFieldAutoIndexDefaults","isFilterable","isSortable","menuName","supportRequire","supportUnique","useAsLabel","compatibleOrmTypes","compatibleMysqlTypes","delimiter","displayLength","previewText","delimiterItem","delimiterList","sign","displayNumber","getDelimiterSign","setValueToIndex","ABFieldBooleanDefaults","AGE","dateString","dataDate","diffYears","Math","round","floor","YEAR","getFullYear","MONTH","getMonth","DAY","getDate","DATE","getTime","HOUR","MINUTE","MINUTE_TO_HOUR","mins","hours","rhours","minutes","rminutes","parseFloat","ABFieldCalculateDefaults","formula","decimalSign","decimalPlaces","ABFieldCalculateCore","place","numberVal","calVal","dateVal","booleanVal","eval","toFixed","convertToJs","ABFieldCombinedDefaults","combinedFields","ABFieldConnectDefaults","linkColumn","fieldDefaults","names","configError","pullRelationValues","selectedData","dataValue","propName","forUpdate","reservedNames","fieldKey","fieldOrmTypes","fieldMysqlTypes","fieldIcon","fieldMenuName","fieldDescription","fieldIsSortable","fieldSupportRequire","fieldSupportQuery","supportQuery","defaultCheck","defaultVal","returnVal","showIcon","required","width","myDef","ABFieldDateDefaults","dateFormat","defaultDate","defaultDateValue","validateCondition","validateRangeUnit","validateRangeBefore","validateRangeAfter","validateStartDate","validateEndDate","dateResult","prototype","call","isFinite","startDate","endDate","startDateDisplay","getDateDisplay","endDateDisplay","minDate","maxDate","exportValue","dateObj","getFormat","dateFormatString","dateData","dateToString","RegEx","ABFieldDateCore","timeFormat","defaultTime","defaultTimeValue","baseDefault","currDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","getTimeFormat","datetimeFormat","dateToStr","ABFieldEmailDefaults","defaultCheckbox","Reg","ABFieldFileDefaults","removeExistingData","fileSize","fileType","limitFileSize","limitFileType","filename","requestParam","allParameters","myParameter","ABFieldFormulaDefaults","reCalculate","isGrouped","reformat","numData","rowDataFormat","fieldBase","filterHelper","numberList","decimalSize","getDecimalSize","multiplier","pow","sum","max","min","_rowFilter","ABFieldImageDefaults","useWidth","imageWidth","useHeight","imageHeight","useDefaultImage","defaultImageUrl","ABFieldJsonDefaults","ABFieldListDefaults","isMultiple","hasColors","multipleDefault","pendingDeletions","defaultVals","hex","optTran","ABFieldLongTextDefaults","MAX_CHAR_LENGTH","supportMultilingual","ABFieldNumberDefaults","typeFormat","typeDecimals","typeDecimalPlaces","typeRounding","typeThousands","validation","validateMinimum","validateMaximum","iL","position","places","n","errMessage","formatSign","formatList","thousandsSign","postfix","digit","formatNumber","groupDelimiter","groupSize","decimalDelimiter","negativeSign","dataStr","abs","integerStr","decimalStr","integerValue","substr","decimalVal","ABFieldStringDefaults","ABFieldTextFormulaDefaults","textFormula","setValueToFormula","formulaString","fieldRegExp","matches_field_array","autoIndexVal","setBuildinValueToFormula","matches_buildin_array","buildinList","getBuildInFunction","formula_array","isBracketInBracket","functionName","parameters_array","isMatch","resultParameters","parameter_size","getLeft","getRight","getMid","getTrim","getTrimLeft","getTrimRight","getLength","getRegExpReplace","trimLeft","getExtractRegex","getReplace","getLower","getUpper","getCapitalize","getRandom","getNumberToWords","getDateDayOfWeekName","getDateMonthOfYearName","getFormatDate","string","endPosition","endposition","reverseStr","reverseString","reverse","startPosition","trimRight","regexp","replaceString","extractResult","searchValue","replaceValue","toUpperCase","charAt","random","units","tens","scales","end","chunks","chunksLen","chunk","ints","word","words","resultFormula","ABFieldSelectivity","ABFieldTreeDefaults","ABFieldConnect","ABFieldUserDefaults","USERNAME_FIELD_ID","editable","isCurrentUser","isShowProfileImage","isShowUsername","ABMobileView","ABMobilePageDefaults","ABPropertyComponentDefaults","defaultPage","hideTitle","hideTabs","myAppID","menuType","DV","missingPageID","allPageDeletes","allPages","pageRemove","pageInsert","setPageDefault","refreshInstance","page","updateIcon","lookUpIds","mapNewIdFn","copy","ABMobileViewDefaults","labelKey","tabicon","ABViewPropertyComponentDefaults","warningsSilent","__missingViews","viewIcon","tabIcon","viewIDs","isRoot","height","x","y","dx","dy","allParents","parents","curView","parentFormComponent","parentDetailComponent","detail","pageParent","filterFn","parentPage","pageRoot","rootPage","dataviewID","_currentObject","errNoDCID","errNoDC","viewByID","viewRemove","viewInsert","viewReorder","viewId","toPosition","findIndex","allViewDeletes","wantsAdd","copyUpdateProperyList","ignoreSubPages","copiedSubPage","ignoreSubViews","copiedView","newName","allSaves","p2","vi","ABViewFormButtonPropertyComponentDefaults","includeSave","saveLabel","includeCancel","cancelLabel","includeReset","resetLabel","afterCancel","alignment","isDefault","ABViewFormButtonDefaults","ABMobileViewFormCheckboxPropertyComponentDefaults","ABMobileViewFormCheckboxDefaults","ABMobileViewFormConnectPropertyComponentDefaults","formView","popupWidth","popupHeight","ABMobileViewFormConnectDefaults","ABRecordRule","ABSubmitRule","ABViewFormDefaults","ABViewFormPropertyComponentDefaults","showLabel","labelPosition","labelWidth","clearOnLoad","clearOnSave","displayRules","editForm","recordRules","submitRules","objectLoad","componentList","viewsToAllow","fieldComponents","flattenComponents","components","comp","addFieldToForm","yPosition","fieldComponent","formComponentMobile","newInstance","RecordRule","_recordRule","formLoad","fromSettings","rulesReady","doRecordRulesPre","processPre","doRecordRules","doSubmitRules","SubmitRules","ABViewFormCustomPropertyComponentDefaults","ABViewFormCustomDefaults","ABMobileViewFormDatepickerPropertyComponentDefaults","timepicker","ABMobileViewFormDatepickerDefaults","ABMobileViewFormDatetimePropertyComponentDefaults","ABMobileViewFormDatetimeDefaults","ABMobileViewFormEmailPropertyComponentDefaults","ABMobileViewFormEmailDefaults","ABViewFormFilePropertyComponentDefaults","ABViewFormFileDefaults","ABViewFormFormulaPropertyComponentDefaults","ABViewFormFormulaDefaults","ABMobileViewFormFile","ABViewFormImagePropertyComponentDefaults","ABViewImageFileDefaults","ABViewFormFieldPropertyComponentDefaults","disable","ABMobileViewFormNumberPropertyComponentDefaults","isStepper","ABMobileViewFormNumberDefaults","ABMobileViewFormCustom","ABMobileViewFormReadonlyPropertyComponentDefaults","ABMobileViewFormReadonlyDefaults","ABMobileViewFormSelectSingle","ABMobileViewFormSelectMultiplePropertyComponentDefaults","ABMobileViewFormSelectMultipleDefaults","ABMobileViewFormSelectSinglePropertyComponentDefaults","ABMobileViewFormSelectSingleDefaults","ABViewFormTextboxPropertyComponentDefaults","placeholder","ABViewFormTextboxDefaults","ABViewLabelPropertyComponentDefaults","ABViewDefaults","formatNormal","formatTitle","formatDescription","ABViewListPropertyComponentDefaults","linkPageAdd","ABProcessLaneDefaults","ABProcessParticipantDefaults","validChecker","attribute","laneIDs","stashed","useAccount","account","useField","userField","Tasks","DEFINITIONTYPES","AllProcessElements","ELEMENT","DiagramReplace","target","eventDefinitionType","allTasks","tasks","DiagramReplaceDefinitionsForType","StartEvents","Gateways","EndEvents","eventDefinitions","$type","state","laneDiagramID","errorConfig","instance","initState","instanceValues","taskState","isEndTask","allArgs","myLane","myState","nextTasks","myDiagramObj","hashDiagramObjects","onError","exitFlows","tasksFromFlow","flow","flowObj","targetIDs","tid","targetTask","hashProcessDataValues","listDataFields","currentProcessValues","_prevState","stateCompleted","stateUpdate","wantToDoSomething","startElements","elem","previousElements","objectOfStartElement","startElem","objectOfPrevElement","prevElem","qlObj","ABProcessElement","ABProcessTaskEndDefaults","actionName","className","triggered","ABProcessGatewayExclusiveDefaults","ABProcessTaskEmailDefaults","myDefaults","subject","AccountingBatchProcessingDefaults","AccountingFPCloseDefaults","AccountingFPYearCloseDefaults","AccountingJEArchiveDefaults","CalculateDefaults","_fakeNum","_fakeObj","ABProcessTaskServiceDefaults","ABProcessTaskGetResetPasswordUrlDefaults","InsertRecordDefaults","isRepeat","startElement","currProcess","previousElement","fieldRepeat","repeatColumn","ABQLManager","ABProcessTaskServiceQueryDefaults","_datasources","fromAttributes","registerDatasource","processDataField","SubProcessDefaults","NOSPAM","isExpanded","isEnable","_unknownElementIDs","processTask","connectionAttrs","parameterId","dataFieldsAll","dataFieldOpt","dataFieldsAllInserted","previousFields","startsWith","stateData","returnField","ABFieldList","ABProcessTaskApprovalDefaults","fixBoolean","formBuilder","preProcessFormIOComponents","abFieldID","vals","path","pluck","action","myID","listField","ABProcessTaskUserDefaults","ui","ABProcessTaskUserExternalDefaults","who","toUsers","ABProcessTriggerDefaults","ABProcessTrigger","ABProcessTaskTriggerLifecycleDefaults","lifecycleKey","repeatEvery","repeatTime","repeatDaily","repeatWeekly","repeatMonthly","isEnabled","timeVals","setUTCHours","setUTCMinutes","getUTCHours","getCronExpression","day","month","dayWeek","minute","hour","parameterDefinitions","prevOP","objectOut","initObject","objectLookup","nextOP","NextQLOps","OP","qlOP","quotedLabel","availableProcessDataFieldsHash","availableProcessDataFields","hashFieldIDs","paramChanged","pDef","ABQL","ParameterDefinitions","ABQLFindCore","ABQLManagerCore","matchingOPs","QLOps","Op","ABQLObjectCore","objNameDef","warningMessage","QLUpdate","QLSave","QLPluck","ABQLSetPluck","ABQLRowUpdate","ABQLRowSave","ABQLRowPluckCore","nextQLOps","NextQLOp","ABQLSetSave","ABQLRowSaveCore","ABQLRowUpdateCore","ABQLRow","ABQLSetFirstCore","ABQLSetPluckCore","objectOutID","ABQLSetSaveCore","taskParam","registered","task_param","ABViewWidget","ABViewCSVExporterDefaults","ABViewCSVExporterPropertyComponentDefaults","buttonLabel","hasHeader","ABViewCSVImporterDefaults","ABViewCSVImporterPropertyComponentDefaults","availableFieldIds","rowDatas","ABViewCarouselPropertyComponentDefaults","hideItem","hideButton","navigationType","filterByCursor","detailsPage","detailsTab","editPage","editTab","parseIntOrDefault","_this","parseOrDefault","imageField","ABViewChartContainer","ABViewChartAreaPropertyComponentDefaults","areaType","isLegend","chartHeight","labelFontSize","stepValue","maxValue","ABViewChartBarPropertyComponentDefaults","barType","barPreset","ABViewContainer","ABViewChartPropertyComponentDefaults","columnValue","columnLabel","columnValue2","isPercentage","multipleSeries","ABViewChartDefaults","labelField","valueField","valueField2","ABViewChartLinePropertyComponentDefaults","lineType","linePreset","ABViewChartPiePropertyComponentDefaults","pieType","innerFontSize","ABViewCommentPropertyComponentDefaults","columnUser","columnComment","columnDate","getCurrentUserId","userObject","getUsers","currentUser","image","getUserField","getCommentField","getDateField","getUserData","UserImageField","imageURL","urlImage","ABViewPropertyDefaults","ifPanel","removable","elsePanel","ABViewConnectDataFilterPropertyComponentDefaults","ABView","columns","gravity","movable","viewsSortByPosition","accessLevels","accessibleRoles","getUserAccess","accessLevel","isAccessManager","currentRole","urlView","updateAccessLevels","roleId","viewDestroy","ABViewDataFilterPropertyComponentDefaults","viewType","showFilter","showSort","ABViewDetail","ABViewDataviewPropertyComponentDefaults","xCount","ABViewDataviewDefaults","dataview","ABViewDetailCheckboxPropertyComponentDefaults","ABViewDetailCheckboxDefaults","ABViewDetailPropertyComponentDefaults","ABViewDetailDefaults","addFieldToDetail","detailComponent","ABViewDetailCustomPropertyComponentDefaults","ABViewDetailCustomDefaults","ABViewDetailImagePropertyComponentDefaults","ABViewDetailImageDefaults","detailView","getCurrentData","detailCom","ABViewDetailTextPropertyComponentDefaults","ABViewDetailTextDefaults","ABViewDetailTreeDefaults","ABViewDocxBuilderPropertyComponentDefaults","buttonlabel","filelabel","toolbarBackground","buttonPosition","uploadUrl","downloadUrl","dvList","ABViewFormCheckboxPropertyComponentDefaults","ABViewFormCheckboxDefaults","ABViewFormConnectPropertyComponentDefaults","ABViewFormConnectDefaults","formComponent","ABViewFormDatepickerPropertyComponentDefaults","ABViewFormDatepickerDefaults","ABViewFormJsonPropertyComponentDefaults","ABViewFormJsonDefaults","ABViewFormNumberPropertyComponentDefaults","ABViewFormNumberDefaults","ABViewFormCustom","ABViewFormReadonlyPropertyComponentDefaults","ABViewFormReadonlyDefaults","ABViewFormSelectMultiplePropertyComponentDefaults","ABSelectMultipleDefaults","ABViewFormSelectSinglePropertyComponentDefaults","ABSelectSingleDefaults","ABViewFormTreePropertyComponentDefaults","ABTreeDefaults","ABViewGanttPropertyComponentDefaults","titleFieldID","startDateFieldID","endDateFieldID","durationFieldID","progressFieldID","notesFieldID","ABViewGridPropertyComponentDefaults","padding","showToolbar","isEditable","massUpdate","allowDelete","isExportable","trackView","summaryColumns","countColumns","gridFilter","filterOption","userFilterPosition","isGlobalToolbar","hideHeader","labelAsField","hideButtons","groupBy","columnConfig","saveLocal","settingsDefault","base","settingsDefaultJSON","owFields","removeField","shouldSave","ABViewImagePropertyComponentDefaults","ABViewKanbanPropertyComponentDefaults","editFields","verticalGroupingField","horizontalGroupingField","ownerField","template","textTemplate","TextTemplate","PropertyComponentDefaults","numColumns","addColumn","isEdited","ABViewMenuPropertyComponentDefaults","orientation","buttonStyle","menuAlignment","menuInToolbar","menuPadding","menuTheme","menuPosition","menuTextLeft","menuTextRight","menuTextCenter","order","ABMenuDefaults","isChecked","pageId","ClearPagesInView","AddPagesToView","displayPage","existsPage","tabId","existsTab","getAliasname","menuItem","getSubMenu","getMenuItem","submenu","pageInfo","lang","translation","aliasname","getParentPageId","tabView","currentView","ABViewPDFImporterPropertyComponentDefaults","pageWidth","fixedPageWidth","pageBackground","ABViewPivotPropertyComponentDefaults","removeMissed","totalColumn","separateLabel","structure","ABViewReportManagerPropertyComponentDefaults","dataviewFields","editMode","hideCommonTab","hideDataTab","hideViewTab","parsedSettings","key1","key2","ABViewSchedulerPropertyComponentDefaults","allDay","repeat","calendar","color","sectionID","unitID","notes","originID","calendarDataviewID","calendarDataviewFields","timeline","week","year","agenda","timelineSectionList","unitList","export","excel","csv","pdf","_object","scheduler","ABViewTabPropertyComponentDefaults","minWidth","stackTabs","darkTheme","sidebarWidth","sidebarPos","iconOnTop","ABViewTabDefaults","addTab","tabName","ABViewTextPropertyComponentDefaults","displayText","componentID","clearTemplateValue","fData","columnSpan","rowSpan","ABApplicationCore","ABViewPage","_handler_page_updated","definition","pg","errDepreciated","areaKey","newObj","entity","begLen","datacollectionInsert","_listInsert","_listRemove","objectInsert","objectRemove","processInsert","processRemove","queryInsert","queryRemove","exportIDs","ids","parseView","pid","pdef","vid","vdef","warningsEval","checks","warningsMessage","allRoles","warningsAll","warnings","_warnings","ABApplicationMobileCore","ABViewPageMobile","newPage","oldPage","CustomComponentManager","uid","actions","custom","create","edit","formName","import","rename","yes","no","none","close","defaultPlaceholder","invalidMessage","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","renameErrorMessage","renameSuccessMessage","dataFieldHeaderLabel","dataFieldHeaderLabelPlaceholder","dataFieldLabel","dataFieldLabelPlaceholder","dataFieldColumnName","dataFieldColumnNamePlaceholder","dataFieldShowIcon","componentDropZone","initComponents","_actions","ABDataCollectionCore","datacollectionId","bindParentDc","define","cursorUpdated","__prevLinkDcCursor","hideProgressOfComponents","attachFlexlayout","showProgress","sync","onDataRequestEvent","loadNext","unsync","detachEvent","onDcLoadData","off","hideProgress","DataCollection","_extendCollection","treeStore","TreeCollection","dataStore","extend","SelectionModel","onAfterLoadEvent","addCss","removeCss","render","onAfterLoad","addRowToTree","parentAlias","dataId","parentItemIds","parentId","_alias","_dataId","treeNode","parentItemId","boundComp","datacollectionById","ABDefinitionCore","ABHintCore","allSteps","allDestroy","hintIndex","createHintUI","cookie","hide","dontShow","newStep","nextEl","hintId","eventEl","theNextEl","querySelector","checkVisibility","onNext","boxes","querySelectorAll","display","onPrevious","delay","ABIndexCore","migrateCreate","migrateDrop","ABMLClassCore","ABModelCore","errorPopup","handler_create","handler_common","handler_delete","handler_findAll","handler_logs","handler_update","no_socket_trigger","batchCreate","once","loadInto","DT","logs","update","batchUpdate","rowIds","_handler_object_migrate","fromObj","disableRelatedQueries","fieldDrops","allFields","skipMigrate","isAdd","columnResize","newWidth","columnHeaders","isObjectWorkspace","hiddenFieldNames","columnHeader","validationRules","adjust","footer","content","customDisplays","DataTable","eachColumn","node","getItemNode","column","customDisplay","allWarnings","w","isUuid","atomicjs","ABObjectApiCore","insertDataMax","verb","withCredentials","parsedResponse","pendingModelCreate","ABObjectQueryCore","conditionScan","fieldEntry","oldWidth","originTemplate","_conditionCheck","isConditionComplete","ABProcessCore","_unknownShapes","allElements","appsWithProcess","_new","_old","needSave","elementNewForModelDefinition","unknownShape","shape","unknownShapeRemove","_DOMParser","DOMParser","xmlStr","parseFromString","ActiveXObject","xmlDoc","loadXML","getElementsByTagName","ABStepCore","ABViewManagerCore","ABViewManagerMobileCore","getSeparateItems","validateFile","fileInfo","file","extensionType","getDataRows","separatedBy","reader","FileReader","onload","dataCols","dCol","readAsText","getGuessDataType","dataRows","colIndex","line","str","FilterComplexCore","_toInternal","_toExternal","_options","_initComplete","observing","and","or","thisObject","inQueryFieldQueryPlaceholder","inQueryFieldFieldPlaceholder","contextDefaultOption","popup","querybuilder","recordRuleFieldOptions","rows","borderless","hidden","isSaveHidden","myPopup","__blockOnChange","getState","$observe","_cond","helper","$query","getFilterFunction","qbSettings","toShortHand","uiQueryCustomValue","enable","$el","$app","require","CreateFilter","inputs","uiValue","localId","mode","parser","i18n","dateFormatStr","margin","fieldColumnName","uiQueryValue","uiDataCollectionValue","uiCustomValue","uiContextValue","uiNoneValue","uiUserValue","uiListValue","LinkType","uiTextValue","uiQueryFieldValue","uiRecordRuleValue","uiBooleanValue","onAfterRender","queryView","$view","style","zIndex","isQueryField","u","linkObjectId","processFieldKey","pField","popUp","show","addCustomOption","RowFilterCore","filterForm","addNewFilter","inputValue","queryCombo","queryFieldCombo","queryFieldComboQuery","queryFieldComboField","fieldMatch","dataCollection","listOptions","datePicker","batchName","queryFieldOptions","recordRuleOptions","getFieldList","getFilterUI","isolate","cols","newVal","oldVal","selectCombineCondition","suggest","onBeforeShow","resize","$viewCond","selectField","cells","oldValue","onChangeRule","onChangeQueryFieldCombo","validate","isNumber","onTimedKeyPress","autowidth","indexView","getFormView","removeNewFilter","getAddButtonUI","$viewForm","toggleAddNewButton","getChildViews","ignoreNotify","showBatch","Queries","ruleViewId","getActiveId","$viewComparer","getList","defaultOpt","dcOptions","_Application","Query","blockOnChange","unblockOnChange","$fieldElem","selectedOpt","getPopup","valueViewId","$viewConditionValue","dateField","fieldOptions","logic","col","blockEvent","unblockEvent","_completeConditions","ABViewForm","RowUpdater","addNew","_mockFormWidget","uiItem","self","$viewItem","maxWidth","_extendedOptions","toggleCustomProcessOption","removeItem","addItem","$form","ProgressBar","toggleForm","excludeSelected","$viewContainer","$customValueElem","_pullInputElement","$processValueElem","isVisible","isProcessValue","formFieldComponent","childViews","inputView","busy","getOptions","labelRight","layout","ready","$field","setExtendedOptions","showProcessOption","$customOption","$processOption","$elem","childView","ABFieldCore","addValidation","Filter","filterComplex","fnMigrate","migrateUpdate","customEdit","formKey","FC","getSettings","ABFieldAutoIndexCore","editor","$group","detailComponentSetting","ABFieldBooleanCore","checkbox","ABFieldCombineCore","ABFieldConnectCore","multiselect","editFormat","editParse","openOptions","button","$suggest","$list","getAndPopulateOptions","whereClause","term","theEditor","_getOptionsThrottle","_timeToPullData","_getOptionsResolve","haveResolved","respond","linkedObj","linkedCol","linkedModel","showAllOptions","getStorageID","storedOptions","selected","linkViaOneValues","whereRels","sortRels","storageID","itemObj","getItemFromVal","returnVals","combineFilters","filterByConnectValues","parseFilterByConnectValues","depth","valuesByDepth","ef","$parentField","filterValue","parentValue","filterColumn","filterField","dataFieldId","valItem","linkedField","formVals","handlerOptionData","$destructed","populateOptions","addCy","populateOptionsDataCy","currVal","selectedVals","cVal","some","selectedItem","each","option","setAttribute","pullRecordRelationValues","formComponentSetting","webixLocale","longDateFormatStr","ABFieldDateTimeCore","timeToStr","ABFieldEmailCore","ABFieldFileCore","fileTemplate","typesList","maximumSize","parentContainer","webixContainer","container","domNode","urlUpload","uploader","apiOnly","upload","inputName","multiple","onBeforeFileAdd","classList","acceptableTypes","acceptableSizes","size","onFileUpload","onFileUploadError","addDropZone","dataset","deleteFile","uploaderId","fileDialog","rowid","iconDisplay","fileDisplay","fileURL","fileLink","getAttribute","fileicon","fileDeleteIcon","removeAttribute","href","isWebix","urlFile","ABFieldFormulaCore","ABFieldImageCore","idCustomContainer","formId","containerHeight","imageSrcHeight","heightVal","imageTemplate","imgHeight","imgWidth","percent","uploadInProgress","showImage","readAsDataURL","dataTable","deleteImage","removeDefaultImage","imageDisplay","isRemoveDefaultImage","html","backgroundImage","imageIcon","imageDeleteIcon","toBase64","img","Image","crossOrigin","onerror","canvas","getContext","drawImage","imageData","toDataURL","src","rotateLeft","imgFile","rotateRight","ABFieldJsonCore","ABFieldListCore","numDone","numToDo","remainingFields","_getSelectedOptions","hasCustomColor","optionHex","selectedObj","clearButton","stopPropagation","getSelectedOptions","ABFieldLongTextCore","ind","ABFieldNumberCore","INIT_EDITOR","editors","defaultSettings","allowClear","removeOnly","readOnly","showDropdown","ABFieldSelectivityDefaults","selectivityRender","cypress","dataCy","prepareData","selectivity","setOptions","selectivityInput","isUsers","templates","multipleSelectedItem","highlighted","additionalText","isLabelHidden","Selectivity","Inputs","Multiple","selectivitySetBadge","singleSelectedItem","Single","trigerEditPageEvent","editMenus","eMenu","__hasClickEvent","preventDefault","parentElm","parentElement","thisField","caretElems","getElementsByClassName","caretElm","parentNode","removeChild","selectivitySettings","selectivityGet","selectivitySet","setData","selectivityDestroy","clientHeight","badge","anchor","textnode","createTextNode","appendChild","ABFieldStringCore","ABFieldTextFormulaCore","ABFieldTreeCore","formClass","placeHolder","isForm","branches","selectOptions","rootid","getParentId","par","nodeHTML","myHex","setBadge","idPopup","idTree","parentComponent","firstRender","populateTree","getValues","$Tree","uncheckAll","openAll","checkItem","onShow","onItemCheck","dom","tree","uncheckItem","eachSubItem","getChecked","scrollHeight","setValues","ABFieldUserCore","SiteUser","Defaults","linkCol","newLinkDef","setDisplayOptions","ABMobilePageCore","__Handler_ABDEF_UPDATED","__Handler_DEF_UPDATED","removeAllListeners","ABMobileViewCore","viewsToIgnore","ABMobileViewFormCore","ABMobileViewFormButton","refreshDefaultButton","defaultButton","yList","posY","ABMobileViewFormButtonCore","ABMobileViewFormCheckboxCore","ABMobileViewFormConnectCore","__filterComponent","ABMobileViewFormCustomCore","ABMobileViewFormDateCore","ABMobileViewFormDatetimeCore","ABMobileViewFormEmailCore","ABMobileViewFormFileCore","ABMobileViewFormFormulaCore","ABMobileViewFormImageCore","ABMobileViewFormItemCore","ABMobileViewFormNumberCore","ABMobileViewFormReadonlyCore","ABMobileViewFormSelectMultipleCore","ABMobileViewFormSelectSingleCore","ABMobileViewFormTextboxCore","ABMobileViewLabelCore","ABMobileViewListCore","ABProcessLaneCore","transferParticipantWhereToMe","myParticipant","swap","children","child","lanes","objChild","setLane","defElement","ABProcessParticipantCore","diagramProperties","ABProcessElementCore","findLane","Lane","currObj","propertiesShow","propertiesStash","property","switchTo","propertiesID","ABProcessEndCore","ABProcessGatewayExclusiveCore","properties","myOutgoingConnections","numCondWithOne","ABProcessTaskEmailCore","verifySetting","verifyNextLane","verifyRoleAccount","nextLanesResolved","valKey","ABProcessTaskServiceCore","AccountingBatchProcessingCore","propertyIDs","processBatchValue","objectBatch","fieldBatchEntries","fieldBatchFinancialPeriod","objectJE","fieldJEAccount","fieldJERC","fieldJEStatus","fieldJEStatusComplete","objectBR","fieldBRFinancialPeriod","fieldBRAccount","fieldBRRC","fieldBREntries","processValues","objectList","blankField","defaultFields","updateFields","fieldPickers","fieldValues","fp","picker","batchFields","fieldPickersBatch","jeFields","fieldPickersJE","compileStatusValues","statusField","onStatusComplete","wbxComplete","jeEntryID","jeEntry","jeFieldStatusValues","brFields","fieldPickersBR","AccountingFPCloseCore","processFPValue","objectFP","objectGL","objectAcc","fieldFPStart","fieldFPOpen","fieldFPStatus","fieldFPActive","fieldGLStarting","fieldGLRunning","fieldGLAccount","fieldGLRc","fieldGLDebit","fieldGLCredit","fieldAccType","fieldAccAsset","fieldAccExpense","fieldAccLiabilities","fieldAccEquity","fieldAccIncome","getFieldOptions","getStatusFieldOptions","statusFieldId","fpObject","fpStatusField","getListOptions","fpFields","glFields","accFields","fpStatusFields","accTypeOptions","elementsConfig","fieldGLElem","updateFPFields","updateGLFields","updateAccFields","fpStatusOptions","updateAccTypeOptions","AccountingFPYearCloseCore","processFPYearValue","objectFPYear","objectFPMonth","objectAccount","valueFundBalances","valueNetIncome","fieldFPYearStart","fieldFPYearEnd","fieldFPYearStatus","fieldFPYearActive","fieldFPMonthStart","fieldFPMonthEnd","fieldGLStartBalance","fieldGLRunningBalance","fieldGLrc","fieldAccNumber","fieldAccTypeIncome","fieldAccTypeExpense","fieldAccTypeEquity","fpYearDateFields","fpYearStatusFields","fpYearStatusOptions","fpMonthDateFields","glNumberFields","glRcFields","accNumberFields","accTypeFields","fpYearDateOptions","updateFPYearStatusOptions","fpMonthDateOpts","glRcOptions","glNumberOptions","updateAccNumberFields","updateFPYearActiveOptions","AccountingJEArchiveCore","objectBalance","objectJEArchive","fieldBatchFiscalMonth","fieldJeAccount","fieldJeRC","fieldJeArchiveBalance","fieldBrFiscalMonth","fieldBrAccount","fieldBrRC","fieldsMatch","getConnectFieldOptions","refreshFieldsMatch","$fieldsMatch","JEObj","JEArchiveObj","fJe","fieldBatchList","fieldBalanceList","fieldJeList","fieldJeArchiveList","refreshBatchFields","refreshBRFields","refreshJeFields","refreshJeArchiveFields","CalculateTaskCore","formulaText","exp","ABProcessTaskServiceGetResetPasswordUrlCore","InsertRecordTaskCore","fv","isSet","ABProcessTaskServiceQueryCore","qlWarnings","hasSave","SubProcessCore","bpmnModeler","props","loopCharacteristics","isSequential","loopType","ABProcessTaskUserCore","ABProcessTaskUserApprovalCore","ABProcessTaskUserExternalCore","ABProcessTriggerCore","ABProcessTriggerLifecycleCore","ABProcessTriggerTimerCore","ABQLCore","parseRow","uiID","toIDs","$uiCondition","objectfields","objectname","taskparam","select","shorthand","spacer","uiAddParamForDef","paramUI","uiParamUI","uiAddNext","uiRow","uiNextRow","uiAddParams","newValue","resetValue","newOP","thisRow","thisQuery","addOP","viewAddParams","viewAddNext","allRows","ir","allCols","ic","uiNextRowSelectorRefresh","$select","uiNextCol","uiConfig","uiSettings","initialCond","displayLabel","initialValue","Updater","foundFields","shortHand","elCondition","onItemClick","modal","fillspace","sh","_myPopup","topView","rowView","toInsert","myWarnings","ABQLRootObject","root","rootOP","parseCurrent","selector","currOP","nextRow","ABQLRootObjectCore","ABViewCore","ABViewComponent","changePage","ABViewCSVExporterCore","ABViewCSVExporterComponent","ABViewCSVImporterCore","ABViewCSVImporterComponent","ABViewCarouselComponent","baseView","carousel","_handler_doOnShow","_handler_doReload","_handler_doFilter","fnFilter","filterRules","_handler_busy","_handler_ready","filterUI","linkPage","linkPageHelper","_ui","navigation","buttons","activeIndex","getActiveIndex","switchImage","viewLoad","$carouselView","firstElementChild","detatch","myTemplate","$carousel","currentPosition","_imageCount","_rowCount","getFilter","cursor","images","imgData","ab","align","abWebix","onclick","getNode","fullscreen","exit","head","rotateImage","showFilterPopup","showPopup","direction","imgElm","getElementById","newImgElm","cloneNode","replaceChild","ABViewCarouselCore","ABViewCarousel","__filterHelper","ABViewPropertyFilterData","__linkPageHelper","ABViewPropertyLinkPage","ABViewChartCore","ABViewChartComponent","refreshData","getDCChart","_dcChart","dcChart","labelCol","valueCol","valueCol2","numberColName","numberColName2","colorList","dInfo","sumData","sumNumber","sumNumber2","countNumber","numberVal2","relateValues","value2","val2","ABViewChartAreaCore","ABViewChartAreaComponent","ABViewChartBarCore","ABViewChartBarComponent","ABViewChartContainerComponent","ABViewChartLineCore","ABViewChartLineComponent","ABViewChartPieCore","ABViewChartPieComponent","ABViewCommentCore","ABViewCommentComponent","ABViewConditionalContainerCore","ABViewConditionalContainerComponent","viewIf","viewElse","pendingSave","ABViewConnectDataFilterComponent","idbase","applyConnectFilter","tooltip","resetConnectFilter","$filter","connectId","filterRule","ABViewConnectDataFilter","ABViewContainerCore","ABViewContainerComponent","ABViewDataFilterComponent","sortButton","filterButton","globalSearchToolbar","_handler_filterData","callbackFilterData","PopupSortComponent","sortOptions","callbackSortData","advancedUI","compId","maxHeight","toolbarFilter","getInputNode","openSort","externalSearchText","connectedFieldUI","relative","right","top","setSettings","updateUI","sortRules","filterButtons","onlyFilterRules","filterBadge","sortButtons","onlySortRules","sortBadge","searchFields","activeElement","ABViewDataFilter","ABViewDataviewCore","ABViewDataviewComponent","ABViewDetailCore","ABViewDetailComponent","ABViewDetailCheckboxCore","ABViewDetailCheckboxComponent","ABViewDetailConnectCore","ABViewPropertyAddPage","ABViewDetailConnectComponent","addPageTool","__addPageTool","ABViewDetailCustomCore","ABViewDetailCustomComponent","ABViewDetailImageCore","ABViewDetailImageComponent","ABViewDetailItemCore","ABViewDetailItemComponent","ABViewDetailTextCore","ABViewDetailTextComponent","ABViewDetailTreeCore","ABViewDetailTreeComponent","ABViewDocxBuilderCore","ABViewDocxBuilderComponent","letUserDownload","blob","URL","createObjectURL","download","revokeObjectURL","ABViewFormCore","ABViewFormComponent","ABViewFormButton","ABViewFormConnect","ABViewFormDatepicker","ABViewFormSelectMultiple","ABViewFormJson","_callbacks","onBeforeSaveData","superComponent","_superComponent","getFormValues","dcLink","visibleFields","allVals","vComponent","viewComponents","linkValues","formFieldCom","fComp","linkColName","cursorFormVals","validateData","$formView","requiredFields","fixInvalidMessageUI","$forminput","$height","domInvalidMessage","marginLeft","saveButton","clearValidation","formError","$saveButton","invalidAttrs","sqlMessage","loadDcDataOfRecordRules","recordRulesReady","newFormVals","errs","formReady","focusOnFirst","topPositionId","childComponent","actionSettings","valueRules","fieldOperations","valueType","pullDataDC","ABViewFormButtonCore","ABViewFormButtonComponent","ABViewFormCheckboxCore","ABViewFormCheckboxComponent","ABViewFormConnectCore","ABViewFormConnectComponent","ABViewPropertyEditPage","editPageTool","addPageProperty","propertyComponent","editPageProperty","__editPageTool","ABViewFormCustomCore","ABViewFormCustomComponent","ABViewFormDatepickerCore","ABViewFormDatepickerComponent","ABViewFormItemCore","ABViewFormItemComponent","componentUI","parentFormUniqueID","uniqueInstanceID","ABViewFormJsonCore","ABViewFormJsonComponent","ABViewFormNumberCore","ABViewFormNumberComponent","ABViewFormReadonlyCore","ABViewFormReadonlyComponent","ABViewFormSelectMultipleCore","ABViewFormSelectMultipleComponent","ABViewFormSelectSingleCore","ABViewFormSelectSingleComponent","ABViewFormTextboxCore","ABViewFormTextboxComponent","ABViewFormTreeCore","ABViewFormTreeComponent","ABViewGanttComponent","menu","gantt","_tempDC","TitleField","StartDateField","EndDateField","DurationField","ProgressField","NotesField","originalStartDate","originalEndDate","pendingAdds","idGantt","ganttElement","isExistsTask","taskId","localService","getService","tasksData","removeTask","opsService","YEAR_SCALE","MONTH_SCALE","DAY_SCALE","getConstantScales","setScale","override","Map","services","Backend","CurrentDatacollection","indx","convertFormat","taskAdd","taskUpdate","taskRemove","$menu","showItem","CurrentObject","convertValues","patch","datacollectionLoad","_events","eo","initData","ganttElem","dataService","dcTasks","gantt_data","currScale","getScales","WEEK_SCALE","wstart","weekStart","wend","scale","ganttData","newScales","setScales","precise","cellWidth","cellHeight","$batch","left","taskData","updatedTask","ABViewGanttCore","ABViewGantt","ABWorkObjectPopupExport","popupExport","_dataCollection","_grid","_filename","_hiddenFields","autoheight","dataCollectionLoad","setHiddenFields","setFilename","setGridComponent","$grid","fnExport","noCheckedRow","appbuilder_select_item","filterRow","toCSV","toExcel","filterHTML","toPDF","toPNG","exportType","fileName","ABViewGridPopupMassUpdate","ABViewGridComponent","submit","GridComponent","rowUpdater","update_button","update_items","$datatable","getDataTable","updatedRowIds","table","toolbar","buttonDeleteSelected","buttonFilter","buttonMassUpdate","buttonSort","buttonExport","datatable","handler_select","selectRow","columnSplitLeft","columnSplitRight","validationError","idTable","PopupExport","PopupMassUpdateComponent","PopupSortDataTableComponent","skippableColumns","ignoreLocalSettings","_gridSettings","_isDatacollectionLoaded","keyStorageSettings","getColumnIndex","uiDatatable","isTreeDatable","selectType","resizeColumn","resizeRow","prerender","fixedRowHeight","editaction","dragColumn","onBeforeSelect","preserve","cellNode","onAfterSelect","onBeforeEditStart","onCheck","toggleUpdateDelete","onAfterEditStop","onBeforeEditStop","ignoreUpdate","onValidationError","onValidationSuccess","onColumnResize","user_action","setColumnWidth","getLastColumn","onRowResize","onBeforeColumnDrag","onBeforeColumnDrop","onAfterColumnDrop","onHeaderClick","uiFilter","uiToolbar","toolbarMassUpdate","toolbarDeleteSelected","toolbarSort","toolbarExport","_uiGrid","inputWidth","codebase","cdn","$DataTable","throttleCustomDisplay","scrollStarted","displayRecords","verticalScrollState","getScrollState","rowHeight","startRecIndex","endRecIndex","getVisibleCount","CYPRESS_REF","toggleTab","clearValue","updateRow","_deleteConfirmPopup","numRows","deleteRow","globalFilterPosition","refreshHeader","$ButtonFilter","$buttonSort","gridElem","rowItem","oldDC","__handler_dc_busy","__handler_dc_ready","populateGroupData","__handler_dc_loadData","_isDatacollectionLoad","disableUpdateDelete","enableUpdateDelete","freezeDeleteColumn","lastColumn","getColumnConfig","$treetable","baseGroupMap","listData","valRelation","groupBys","g","gIndex","groupMap","by","byValue","gColName","group","localSettingsSave","old","removeCellCss","editCell","requireRefresh","EditField","isCustomGroup","ignoreLocal","objColumnHeaders","objColumnHeaderIDs","origCol","fieldValidations","rulePops","validationUI","popUpId","groupField","treetable","complexValidations","getFilterHelper","getSelectedItem","newData","destructor","addedColumns","contentId","lastCol","refreshColumns","savedLocalSettings","settingsID","unselect","parentTab","wb","tab","getTopParentView","tabbar","nextTab","checkedItems","deleteTasks","toolTip","imageFieldColNames","tip","relationData","toolTipOnBeforeRender","visibility","toolTipOnAfterRender","firstChild","nodeName","imgBottom","imgRight","innerHeight","imgOffsetY","newTop","imgOffsetX","newLeft","ABViewGridCore","ABViewGrid","propertyGroupByList","colNames","groupByList","origWS","AB_Work_Object_Workspace_PopupSortFields","_blockOnChange","uiForm","clickAddNewSort","triggerOnChange","dir","sort_form","viewIndex","listFields","onChangeCombo","refreshFieldList","cView","selectedValue","chosenField","sortDir","ignoreRemoveViews","selectedFields","removeChildViews","fieldObj","selectedFieldsExcludeCurField","enableFields","aValue","bValue","ABViewImageCore","ABViewImageComponent","ABViewKanbanCore","ABViewKanbanComponent","ABViewKanban","comKanBan","CurrentObjectID","refreshForm","formAttrs","formCom","updateVals","newVals","ABViewLabelCore","ABViewLabelComponent","ABViewLayoutCore","ABViewLayoutComponent","ABViewListCore","ABViewListComponent","ABViewMenuCore","ABViewMenuComponent","ABViewPDFImporterCore","ABViewPDFImporterComponent","ABViewPageCore","v1App","newComponent","ABViewPivotCore","ABViewPivotComponent","ABViewReportsManagerCore","ABViewReportsManagerComponent","ABViewSchedulerCore","ABViewSchedulerComponent","ABViewTabCore","ABViewTabComponent","ABViewTextCore","ABViewTextComponent","ABViewWidgetCore","clientFilter","downloadCsvFile","onFilterChange","qsWhere","open","$buttonFilter","CSVImporter","uploadFileList","headerOnFirstLine","columnList","statusMessage","progressBar","linkedDataButton","importButton","csvImporter","args","_dataRows","_csvFileInfo","accept","autosend","loadCsvFile","onClick","webix_remove_upload","removeCsvFile","populateColumnList","minHeight","uiRecordsView","keyPressTimeout","_errorMsg","details","$dt","_status","_included","$importButton","labelImport","overLimitAlert","showLinkedData","uiPopup","$progressBar","formClear","$statusMessage","matchFields","getMatchFields","columnIndex","statusTemplate","$headerOnFirstLine","fileId","$columnList","firstLine","csvColumnList","currentObject","formComp","formConfig","uiColumns","selectedCsvCols","matchCol","selectVal","columnOptUI","abName","toggleLinkFields","loadDataToGrid","dateSeparatorOptions","dayFormatOptions","monthFormatOptions","yearFormatOptions","dateOrderOptions","linkFieldOptions","fld","$columnOption","$linkFieldOption","rowValue","$popup","refreshRemainingTimeText","startUpdateTime","total","remainTime","days","seconds","$selector","fieldData","$dateFormatSelectors","separator","$linkDataSelector","searchField","objModel","selectedRows","_currProgress","increaseProgressing","itemFailed","addRowCss","itemInvalid","errorMsg","uiCleanUp","validRows","allValid","getParentValues","removeRowCss","hashLookups","allLookups","connectField","connectObject","connectModel","linkIdKey","gethashLookup","createRecord","newRowsData","resultErrors","rowIndex","resultData","penddingRecordRules","processRowData","waitPenddingRecordRules","processResult","throttledSaves","performThrottledSaves","currentRecords","remainingRecords","importer","nextRecords","uiLinkedData","linkedData","hideLinkedData","_info_popup","linkConnectFields","yAxis","xAxis","legend","series","alpha","preset","$component","eventNames","evtName","chartContainer","uiChartComponent","_isShow","$chartContainer","$chartComponent","pieInnerText","shadow","comment","getCommentData","onBeforeAdd","addComment","onAfterDelete","deleteComment","__dvEvents","$comment","$commentList","onStoreUpdated","operate","updateComment","refreshComment","userCol","commentCol","dateCol","userColName","commentColName","dateColName","dataObject","dataList","user_id","default_date","__refreshTimeout","commentData","scrollTo","MAX_SAFE_INTEGER","commentText","dateTime","saveData","commentField","CurrentDatacollectionID","uiComponents","eventsClear","milliSeconds","__isShowing","interval","setInterval","clearInterval","_ifComponent","_elseComponent","populateFilterComponent","_uiConditionalContainer","ifComponent","elseComponent","displayView","viewComponentIDs","_handlerChangePage","rowViews","getElements","componentMap","curRowIndex","curColIndex","rowNew","colNumber","rowIndx","curRow","newPos","mapKey","getGrav","initDetailComponent","scroll","sizeToContent","itemTemplate","applyClickEvent","addCyAttribute","$dataView","_resizeEvent","base_element","$dataview","item_width","getItemWidth","customize","detailUI","getDetailUI","_detail_ui","$detail_item","itemWidth","$width","itemHeight","tmp_dom","addCyItemAttributes","currElem","parentWidth","$sidebar","getTabSidebar","clicked","divs","_detailComponent","detailItem","createdRow","updatedRow","myVal","needRecalculate","$detailItem","parsedImageUrl","imageUrl","SAFE_HTML_TAGS","detailItemLabel","uiDetailItemComponent","isLabelTop","templateLabel","labelUi","valueUi","itemUi","detailId","strVal","getDomTree","domTree","Docxtemplater","ImageModule","JSZipUtils","JSZip","ABFieldImage","downloadButton","noFileLabel","leftSpacer","rightSpacer","buttonLabelText","renderFile","$downloadButton","$noFileLabel","reportValues","getReportData","downloadImages","contentTemplateFile","downloadTemplateFile","blobFile","generateDocxFile","isDcLabelAdded","dcCursor","dcValues","disableMinifyRelation","fieldLabels","objTran","fieldTran","objectLabel","fieldLabel","setReportValues","datacollectionData","multilinguageFields","transFields","childItem","addDownloadTask","fieldImage","imageVal","imgUrl","getBinaryContent","currCursor","contentFile","summaries","zip","doc","imageModule","centered","getImage","tagValue","tagName","getSize","imgBuffer","tagNames","dcs","attachModule","loadZip","tag","scope","varName","propSource","propFilter","indexColName","connectedField","sourceVals","getVal","comparer","docxFile","getZip","generate","mimeType","onCancel","onClear","onSave","cancelButton","noPopupFilter","pageCurr","resetButton","buttonID","formID","ABViewFormTextbox","timerId","_showed","fieldValidationsHolder","uiValidationHolder","abid","existsFields","com","initCallbacks","initEvents","initValidationRules","valArray","displayParentData","applicationLoad","formField","nval","oval","fieldValidating","ms","customFields","normalFields","formItem","defaultRowData","parentData","relationField","relationFieldCom","relationFieldView","$relationFieldView","formData","topPosition","editpopup","addPageComponent","editPageComponent","formSettings","goToEditPage","_onChange","initAddEditTool","selectAll","customField","trg","$formItem","apcUI","inputId","selectedValues","prepedVals","addFormID","onSaveData","callbackSaveData","onCancelClick","callbackCancel","callbackClearOnLoad","editFormID","clearStorage","selectedItems","sData","formBusy","__editFormDcEvent","$node","filterConnectedValue","uiConfigName","connectFieldId","getFilterByConnectValues","filterByConnectValue","$ui","vc","parentFields","$filterValueConfig","parentField","FocusableTemplate","new_width","requiredClass","DEFAULT_HEIGHT","paddingY","paddingX","AB_App","onAfterDateSelect","setMasterValue","onTodaySet","onDateClear","getMasterValue","errNoAB","strToDate","setFullYear","uiFormItemComponent","_uiFormItem","rowFilter","getFilterField","entries","getSystemObjects","objectsArray","refreshFilter","fieldDefs","parsed","stringResult","NumberTextInput","_numberTextInputKey","numberTextInputKey","newv","oldv","setHTML","tagMode","tagTemplate","selectedOptions","menubar","initTinyMCE","getEditor","contentAreaContainer","$image","ABFormSidePanel","kanbanView","kanban","resizer","formSidePanel","FormSide","CurrentVerticalField","CurrentHorizontalField","CurrentOwnerField","_updatingOwnerRowId","_ABFieldConnect","_ABFieldUser","_ABFieldList","fieldByKey","ABFieldUser","onSelectChange","userId","getSelectedId","updateOwner","tags","onListAfterSelect","onAfterStatusChange","updateStatus","onAvatarClick","$kb","_kb","kanbanListTemplate","removeCard","templateAvatar","templateBody","horizontalOptions","verticalOptions","horizontalVals","statusOps","reconstruct","$menuUser","getUserList","needRefresh","eachList","addCard","setFields","verticalGrouping","horizontalGrouping","uiFormatting","vId","_uiList","autoHeight","uiMenu","datatype","onMenuItemClick","defineCypress","subsign","_uiMenu","elems","menuIncluded","$item","redirectPage","toggleParent","showIt","parentElem","viewInfo","fileUploader","uploadList","fullImagePopup","fullImageCarousel","fullImageSelectToggle","fullImageLabel","unselectAll","loadFile","removeFile","displayBig","displaySmall","pageTemplate","pageIds","renderPageImages","_fullImagePopup","setActiveIndex","refreshFullImage","headHeight","offIcon","onIcon","offLabel","onLabel","isSelected","pageNumber","initPdfjs","pdfjs","pdfjsWorker","ArrayBuffer","fileReader","fileBuffer","readAsArrayBuffer","toBlob","File","canvasId","showPage","fileBlob","_toBlob","$uploader","onUploadComplete","addFile","_increaseProgressValue","maxProgressStep","_progressSteps","clearDataview","_readFileBuffer","_pdfDoc","getDocument","promise","total_page","numPages","carousel_list","fullImageTemplate","pageTemplateId","pageItemWidth","canvas_dom","getPage","pdf_original_width","getViewport","scale_required","viewport","canvasContext","_isDisplayBig","selectedIds","fullImageTemplateId","$fileUploader","$uploadList","$submit","$selectAll","$unselectAll","$selectToggle","selectedPageIds","newValues","uploadId","_uploadImage","ABFieldCalculate","ABFieldFormula","ABFieldNumber","pivot","uiPivot","_getFields","dataMapped","CellFormat","fieldType","reportManager","fieldText","fieldQueries","MyBackend","reports","waitInitializingDCEvery","updated","reportModels","dcID","reportFields","getReportFields","refs","moduleID","moduleId","moduleData","queryID","queryIndex","pullDataTasks","dcIds","dcData","sid","dcId","dataCol","sourceDc","sourceObj","targetDc","targetObj","sourceLinkField","sf","targetLinkField","tf","sourceData","targetData","tData","sVal","tVal","updateRows","queryVal","filterElem","tempDc","as","mod","_","parsedColumn","originalColumn","reportField","dateStringData","parsedDateStringData","groupedData","groupedResult","agg","rawCol","MyLocal","Local","_currentModuleID","getQueries","currentModuleID","_queries","MyEditor","$tabbar","callEvent","disableOption","Reset","forceReset","AppState","getModule","TrackChanges","MyToolBar","MyEditorCommon","ShowDeleteButton","MyEditorData","MyTable","GetColumnConfig","meta","abField","mid","fullDateFormatStr","GetTableData","buckets","columnIDs","parsedBuckets","bucket","parseRecord","columnFormat","linkedDcs","linkDc","ref","reportData","reportRow","$pk","rField","fieldStart","fieldEnd","fieldAllDay","fieldCalendar","fieldEventColor","fieldNotes","fieldOriginID","fieldSectionID","fieldUnitID","dcCalendar","fieldTitle","fieldCalendarColor","fieldActive","timelineOptions","start_date","end_date","all_day","recurring","section","origin_id","sections","uiNav","uiNavPopup","calendars","LimitData","sidebar","expandMenu","collapseMenu","popupTabManager","popupTabManagerForm","popupTabManagerSaveButton","baseType","menuItems","abStorage","toggle","addDataCy","multiview","keepViews","onViewChange","prevId","nextId","collapseNode","expandNode","tabUi","tabTemplate","$tab","changeTab","setState","checkCollapseMenu","checkExpandMenu","collapsed","tabViewId","$tabViewId","$viewID","defaultViewIsSet","_uiText","$text","ABViewProperty","toSettings","editForms","pagesHasForm","getIds","onClearOnLoad","_application","openFormPopup","pageClone","popUpComp","savedData","popupTemplate","setDefaultValue","fView","objLink","rawData","formEdit","FilterRuleSettings","buttonAddfilter","filterPanel","globalFilterFormContainer","globalFilterForm","filterMenutoolbar","resetFilterButton","__externalSearchText","rowFilterForm","_handler_rowFilterChanged","triggerCallback","_handler_rowFilterFormChanged","resetFilter","$filterMenutoolbar","queryRules","qr","Rule","filterRuleButton","rowFilterRules","__currentFilter","searchRules","badgeCount","$button","externalText","terms","allTerms","fieldTerms","ABViewPropertyLinkPageComponent","cleanRules","processCondition","myUnique","queryBuilder","queryBuilderContainer","queryBuilderLayout","showQBButton","conditionFields","QB","fieldTypes","onDone","listRules","showQueryBuilderContainer","ObjectQueryBuilder","listActions","actionDropList","selectedAction","objectQB","currentForm","selectAction","valueDisplay","_generateUI","Action","currentAction","replaceValueDisplay","onDelete","$ValueDisplay","cloneChildren","prevAction","getAction","stashCondition","currAction","hidddatasourceen","for","processUpdateObject","qbFixAfterShow","isReady","convertToNumber","hiddenFilter","isPreProcess","queryObject","conditionRules","queryObjectLoad","webixID","valueDisplayComponent","childSettings","headerDefault","rulesScrollview","when","addRule","buttonCancel","buttonSave","getRule","RulesUI","deletedRule","ruleSettings","ABViewRuleList","ABViewRule","RoleUpdateExisting","RoleInsertConnected","RoleUpdateConnected","RoleRemoveConnected","allReady","RoleConfirmMessage","RuleExistPage","RuleParentPage","RuleClosePopup","RuleWebsite","RuleEmail","UpdateConnected","valueDisplayChooser","Component","showQBIfNeeded","queryBuilderDisplay","connObj","connectedObject","connectionField","selectedField","newObjectValues","newRecords","connectedObjectField","qbCondition","ABViewRuleActionFormRecordRuleUpdateConnected","isUpdateValueDisabled","_formData","ABViewRuleActionObjectUpdater","selectedFieldID","fieldDropList","connectedFieldList","cf","connectKey","_uiChooser","selectConnectedField","updateFieldsForm","addDisplay","removePreviousDisplays","cloneAllViews","updateObjectLoad","updateComponent","$updateForm","qbComponent","formRows","fr","rowSettings","modifyCondition","updateIt","done","qbCond","ABViewRuleAction","confirmMessage","ABFieldEmail","toEmailsContainer","toEmails","isEmail","toEmailAdd","fieldTemplate","enterField","refreshUI","emailType","recipients","fromName","fromEmail","toEmailTemplate","emailTypeChange","visibleBatch","toEmailValidate","emailFieldOptions","queryOptions","$toView","toEmailRemove","$emailValue","isAllValid","emailText","existsFieldIds","fnAddOptions","fLink","emailFields","optId","optLabel","focusElem","UIManager","getFocus","setFocus","rec","emailFieldUrl","emailField","emailData","linkFieldId","dvIdAndFieldId","dcQuery","emailAddr","pagesAndTabs","_pageOptions","addPage","pageOrTab","indent","selectedId","curPage","website","ABViewRuleActionObjectUpdaterDefaults","updateObject","stashRules","_uiUpdater","valueDisplayList","removeAddRow","UpdateForm","formGet","addRow","valueDisplayRow","onAdd","delRow","mySettings","FilterComponent","selectDc","selectBy","queryField","buttonAdd","buttonDelete","buttonsToggle","shouldFilter","usedHash","FormView","getUpdateObjectField","fieldField","columnID","$inputView","$componentView","datasources","optionsDataSources","optionsSelectBy","$optionUpdateExsits","selectedDC","$row","populateFilters","dcQueries","$multiview","compNodeView","setValueFn","collectionId","dataView","$valueField","objectToUpdate","isUpdated","clonedDataCollection","fieldWithValue","currRow","updates","objectToUpdateClone","lookup","updateObjectURL","DocUtils","convertPixelsToEmus","pixel","docxtemplater","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","extensionRegex","rels","getPrefix","getFileTypeName","getRelsFileName","getRelsFilePath","ImgManager","xmlDocuments","TypeError","_classCallCheck","fileTypeName","mediaPrefix","relsFilePath","relsDoc","createEmptyRelsDoc","relsFileName","mainRels","files","str2xml","xml2str","relationships","relationshipChilds","iterable","reduce","relationship","contentType","extension","contentTypeDoc","defaultTags","types","newTag","namespaceURI","imageName","realImageName","imagePath","addImageRels","binary","addExtensionRels","maxRid","loadImageRels","getImageXml","rId","getImageXmlCentered","getPptxImageXml","offset","memoize","XMLSerializer","Errors","nullGetter","part","delimiters","mergeObjects","resObj","xmlNode","serializeToString","decodeUtf8","decodeURIComponent","escape","convertSpaces","explanation","encodeUtf8","unescape","errorHandler","charMap","regexStripRegexp","escapeRegExp","charMapRegexes","endChar","startChar","rstart","rend","wordToUtf8","utf8ToWord","concatArrays","arrays","array","spaceRegexp","fromCharCode","throwXmlTagNotFound","XTTemplateError","pregMatchAll","regex","matchArray","exec","sizeOfObject","traits","moduleWrapper","xmldom","wrapper","compiled","modules","fileTypeConfig","FileTypeConfig","xmlFileNames","loadAsync","currentFile","createTemplateClass","templatedFiles","getTemplatedFiles","_this2","baseModules","moduleFunction","optionsTransformer","asText","compile","compileFile","mapper","getRenderedMap","mapped","setTags","usedData","createTemplateClassFromContent","filePath","_this3","xmltOptions","XmlTemplater","textPath","getFullText","XmlMatcher","XTError","stack","XTScopeParserError","XTInternalError","loopModule","spacePreserveModule","rawXmlModule","expandPairTrait","PptXFileTypeConfig","tagsXmlTextArray","tagsXmlLexedArray","tagRawXml","tagTextXml","DocXFileTypeConfig","docx","pptx","inRange","range","updateInTextTag","inTextTag","offsetSort","getTag","throwUnclosedTagException","xtag","assertDelimiterOrdered","delimiterMatches","fullText","inDelimiter","lastDelimiterMatch","delimiterMatch","throwUnopenedTagException","getAllIndexes","arr","Reader","innerContentParts","full","parseDelimiters","ranges","delimiterLength","cutNext","delimiterIndex","partContent","delimitersInOffset","delimiterInOffset","xmlparsed","newArray","xmlparse","xmltags","matches","textMatchArray","othersMatchArray","contentLength","allMatches","totalMatches","tagText","_getTag","tagMatcher","other","func","stringifyJson","cache","getMinFromArrays","minIndex","totalLength","resultArray","arrayIndex","emptyFun","identity","getTraits","postparse","every","mergeSort","getExpandToDefault","throwClosingTagNotMatchOpeningTag","openingtag","closingtag","getOpenCountChange","location","getPairs","countOpen","firstTrait","currentTrait","outer","T","throwUnmatchedLoopException","_ref","_postparse","trait","pairs","expandedPairs","pair","expandTo","currentPairIndex","innerParts","newParsed","inPair","expandedPair","basePart","subparsed","dashInnerRegex","moduleName","placeHolderContent","inverted","traitName","totalValue","scopeManager","loopOver","createSubScopeManager","getInner","postparsed","paragraphParts","throwRawTagShouldBeOnlyTextInParagraph","RawXmlModule","expandToOne","Render","spacePreserve","inChunk","lexed","inPlaceHolder","tailParts","token","moduleParsed","moduleParse","ScopeManager","createBaseScopeManager","moduleRendered","moduleRender","scopePath","loopOverValue","functor","currentValue","num","isValueFalsy","functorIfInverted","rootError","lastTagIsOpenTag","innerLastTag","innerCurrentTag","addTag","expandOne","throwRawTagNotInParagraph","leftParts","rightParts","inner","xmlElements","getListXmlElements","memoized","tagsXmlArray","tagsXmlArrayJoined","charactersAddedCumulative","charactersAdded","replacerUnshift","pn","last","handleRecursiveCase","xmlMatcher","Lexer","Parser","_render","fromJson","setModules","inspect","xmllexed","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","source","sax","XMLReader","domBuilder","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","nbsp","startDocument","DOMImplementation","createDocument","documentURI","localName","qName","createElementNS","len","getURI","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","skippedEntity","endDocument","normalize","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","dest","_extends","Super","pt","ppt","__proto__","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","Node","_xmlEncoder","charCodeAt","_visitNode","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","needNamespaceDefine","isHTML","ns","pubid","sysid","internalSubset","importNode","node2","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","versions","qualifiedName","doctype","insertBefore","refChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","rtv","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","deleteData","splitText","newText","newNode","getTextContent","$$length","nameStartChar","nameChar","tagNamePattern","defaultNSMapCopy","entityReplacer","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","localNSMap","endMatch","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","attrName","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","lastIndexOf","matchs","reg","lastMatch","endDTD","_set_proto_","thiz","getLocalName","getInnerDocx","getInnerPptx","_ref2","xmlString","ext","cx","cy","imgManagers","imageNumber","relsFiles","imgManager","getNextImageName","sizePixel","getRenderedPart","getRenderedPartPptx","getRenderedPartDocx","cellCX","cellCY","imgW","imgH","expanded","xmlElement","updateFileTypeConfig","zero","byteAt","lastIndexOfSignature","readData","checkOffset","encode","decode","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","STORE","magic","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","getTypeOf","checkIndex","setIndex","readInt","readString","transformTo","readDate","base64","createFolders","compression","compressionOptions","unixPermissions","dosPermissions","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","Uint8Array","Uint16Array","Uint32Array","deflateRaw","inflateRaw","pako","support","utils","compressions","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","fileNameStr","decompressed","fileCommentStr","zipComment","isBuffer","Buffer","_data","nodebuffer","asBinary","D","utf8encode","_initialMetadata","asNodeBuffer","asUint8Array","asArrayBuffer","buffer","z","C","E","A","B","F","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","compressedObject","folder","platform","encodeFileName","CENTRAL_DIRECTORY_END","append","finalize","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","arraybuffer","uint8array","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","subarray","applyFromCharCode","byteLength","loadOptions","checkSignature","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","prepareContent","fileNameLength","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","chunkSize","windowBits","memLevel","strategy","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","I","pending_buf","pending_out","total_out","_tr_flush_block","block_start","strstart","wrap","adler","G","H","total_in","max_chain_length","prev_length","nice_match","w_size","la","w_mask","prev","ka","good_match","lookahead","match_start","window_size","hash_size","insert","ja","ins_h","hash_shift","hash_mask","J","ua","match_length","_tr_tally","max_lazy_match","M","wa","xa","last_lit","va","prev_match","U","match_available","good_length","max_lazy","nice_length","max_chain","pending_buf_size","gzhead","gzindex","$","last_flush","w_bits","hash_bits","dyn_ltree","ha","dyn_dtree","fa","bl_tree","ga","l_desc","d_desc","bl_desc","bl_count","ia","heap","ea","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","data_type","Z","na","sa","_tr_init","O","Q","X","K","N","P","R","S","W","Y","aa","ba","da","ma","oa","pa","qa","ra","ta","ya","deflateInit","deflateReset","deflateResetKeep","hcrc","extra","time","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","ca","inflateReset","inflateReset2","inflateResetKeep","inflateInit","za","Aa","Ba","Ca","inflateInfo","static_tree","extra_bits","extra_base","max_length","has_stree","dyn_tree","max_code","stat_desc","protoUI","ActiveContent","datafilter","countColumn","summColumn","datetime","popupType","EditAbility","unitlist","ABCustomFormBuilderBuilder","FormBuilder","autofit","$init","parseDataFields","dataFields","formComponents","approveButton","schema","noDefaultSubmitButton","noNewEdit","basic","advanced","customBasic","premium","weight","getFormData","_key","inputType","calculateValue","refreshOnChange","block","leftIcon","theme","ABLazyCustomComponent","Form","$ready","initForm","submission","onButton","setDefaultUI","$getValue","calendarHeader","monthFull","$protoWait","_zoom_logic","_getTitle","_getYearTitle","_getYearRangeTitle","_getContent","_getYearContent","_setContent","_setYear","Qd","Jv","Zv","Xv","thaidate","thaidatetime","_zoom_start_date","ABCustomTinyMCE","eachRow","$count","master"],"sourceRoot":""}