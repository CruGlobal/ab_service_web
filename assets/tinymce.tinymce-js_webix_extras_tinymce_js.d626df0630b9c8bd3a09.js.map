{"version":3,"file":"tinymce.tinymce-js_webix_extras_tinymce_js.d626df0630b9c8bd3a09.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAA8B;AACC;AACA;AACD;AACe;AACD,CAAC;AACU;;AAEvD;AACA;AACA;AACA;AACA,mBAAmB,mCAAmC;AACtD;AACA,OAAO;AACP;AACA,4CAA4C,sBAAsB;;AAElE;AACA;AACA;AACA;AACA,kCAAkC;;AAElC;;AAEA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,OAAO;AACP;AACA,cAAc,oEAA2B;AACzC;AACA,YAAY,oEAA2B;AACvC;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA,YAAY,mDAAY;AACxB,UAAU;AACV,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,UAAU;AACV,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,UAAU;AACV,OAAO;AACP;AACA;AACA,OAAO;AACP,IAAI;AACJ;AACA","sources":["webpack://ab_platform_web/./js/webix/extras/tinymce.js"],"sourcesContent":["import tinymce from \"tinymce\";\nimport \"tinymce/icons/default\";\nimport \"tinymce/themes/silver\";\nimport \"tinymce/plugins/link\";\nimport \"tinymce/skins/ui/oxide/skin.min.css\";\nimport \"tinymce/skins/ui/oxide/content.css\"; // content.min.css ?\nimport \"tinymce/skins/content/default/content.min.css\";\n\nwebix.protoUI(\n   {\n      name: \"tinymce-editor\",\n      defaults: {\n         config: { theme: \"silver\", statusbar: false },\n         value: \"\",\n      },\n      $init: function () {\n         webix.html.addStyle(\".tox-tinymce{ border:0px !important}\");\n\n         this._mce_id = \"webix_mce_\" + (this.config.id || webix.uid());\n         this.$view.innerHTML =\n            \"<textarea id='\" +\n            this._mce_id +\n            \"' style='width:100%; height:100%'></textarea>\";\n\n         this._waitEditor = webix.promise.defer();\n\n         this.$ready.push(this._require_tinymce_once);\n      },\n      render: function () {\n         this._set_inner_size();\n      },\n      _require_tinymce_once: function () {\n         var c = this.config;\n\n         if (c.cdn === false || window.tinymce) {\n            this._init_tinymce_once();\n            return;\n         }\n\n         var apiKey = c.apiKey ? c.apiKey : \"no-api-key\";\n         var cdn =\n            c.cdn ||\n            \"https://cdn.tiny.cloud/1/\" + apiKey + \"/tinymce/5.0.14-54\";\n\n         //path to tinymce codebase\n         window.tinyMCEPreInit = {\n            query: \"\",\n            base: cdn,\n            suffix: \".min\",\n         };\n\n         webix\n            .require([cdn + \"/tinymce.min.js\"])\n            .then(webix.bind(this._init_tinymce_once, this))\n            .catch(function (e) {\n               console.log(e);\n            });\n      },\n      _init_tinymce_once: function () {\n         if (!tinymce.dom.Event.domLoaded) {\n            // woraround event logic in tinymce\n            tinymce.dom.Event.domLoaded = true;\n         }\n\n         var editor_config = webix.copy(this.config.config || {});\n         webix.extend(\n            editor_config,\n            {\n               selector: \"#\" + this._mce_id,\n               resize: false,\n            },\n            true\n         );\n\n         var custom_setup = editor_config.setup;\n         editor_config.setup = webix.bind(function (editor) {\n            if (custom_setup) custom_setup(editor);\n            editor.on(\"init\", webix.bind(this._mce_editor_ready, this), true);\n         }, this);\n\n         webix.delay(function () {\n            tinymce.init(editor_config);\n         }, this);\n      },\n      _mce_editor_ready: function (event) {\n         this._editor = event.target;\n\n         this.setValue(this.config.value);\n         this._set_inner_size();\n         this._waitEditor.resolve(this._editor);\n      },\n      _set_inner_size: function () {\n         if (this._editor) {\n            this.$view.querySelector(\".tox-tinymce\").style.height =\n               this.$height + \"px\";\n         }\n      },\n      $setSize: function (x, y) {\n         if (webix.ui.view.prototype.$setSize.call(this, x, y)) {\n            this._set_inner_size();\n         }\n      },\n      setValue: function (value) {\n         this.config.value = value;\n         this._waitEditor.then(function (editor) {\n            editor.setContent(value);\n         });\n      },\n      getValue: function () {\n         return this._editor ? this._editor.getContent() : this.config.value;\n      },\n      focus: function () {\n         this._waitEditor.then(function (editor) {\n            editor.focus();\n         });\n      },\n      getEditor: function (wait) {\n         return wait ? this._waitEditor : this._editor;\n      },\n   },\n   webix.ui.view\n);\n"],"names":[],"sourceRoot":""}