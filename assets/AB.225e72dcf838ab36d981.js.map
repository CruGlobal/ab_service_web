{"version":3,"file":"AB.225e72dcf838ab36d981.js","mappings":"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AkB,IAClBC,sBAAuB,GAGvBC,cAAe,IACfC,eAAgB,IAChBC,cAAe,IACfC,mBAAoB,GAGpBE,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,IAGvBC,aAAc,EACdC,YAAa,EACbC,aAAc,GACdC,YAAa,GACbC,aAAc,GACdC,cAAe,IACfC,eAAgB,IAChBC,uBAAwB,GACxBC,yBAA0B,EAC1BC,yBAA0B,EAC1BC,wBAAyB,EAGzBC,gBAAiB,GACjBC,iBAAkB,GAClBC,gBAAiB,IACjBC,iBAAkB,IAClBC,kBAAmB,IACnBE,mBAAoB,EAGpBC,YAAY,GCzCf,GACGrC,OAAQ,WAEL,OAAIlD,OAAOwF,WAAa,IACd,EAEH,CACV,EACAC,MCjBO,CACJ,QACA,eACA,iBACA,eACA,iBACA,SACA,MACA,eACA,gBACA,aACA,cACA,SACA,YACA,sCACA,SACA,UACA,YACA,oBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,QACA,UACA,aACA,oBACA,oBACA,sBACA,sBACA,uBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,SACA,aACA,WACA,WACA,mBACA,8BACA,WACA,KACA,oBACA,aACA,WACA,gBACA,MACA,WACA,OACA,YACA,cACA,UACA,OACA,OACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,gBACA,eACA,eACA,kBACA,yBACA,MACA,OACA,UACA,iBACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,YACA,mBACA,UACA,YACA,QACA,YACA,cACA,OACA,OACA,OACA,OACA,WACA,aACA,UACA,YACA,MACA,MACA,WACA,aACA,WACA,WACA,MACA,aACA,MACA,aACA,WACA,mBACA,mBACA,aACA,kBACA,mBACA,SACA,eACA,MACA,aACA,aACA,cACA,sBACA,sBACA,uBACA,oBACA,WACA,kBACA,YACA,KACA,UACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,QACA,eACA,iBACA,eACA,iBACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,QACA,SACA,SACA,WACA,iBACA,cACA,YACA,UACA,QACA,QACA,QACA,iBACA,eACA,MACA,OACA,YACA,UACA,WACA,SACA,MACA,OACA,UACA,UACA,YACA,aACA,eACA,WACA,aACA,UACA,WACA,iBACA,SACA,OACA,YACA,mBACA,cACA,kBACA,OACA,aACA,OACA,OACA,QACA,MACA,UACA,YACA,WACA,WACA,OACA,WACA,SACA,YACA,UACA,aACA,UACA,OACA,SACA,eACA,WACA,WACA,kBACA,oBACA,UACA,SACA,OACA,OACA,UACA,QACA,aACA,aACA,SACA,WACA,aACA,gBACA,kBACA,kBACA,SACA,SACA,OACA,MACA,OACA,WACA,cACA,qBACA,uBACA,SACA,eACA,gBACA,uBACA,MACA,YACA,aACA,KACA,WACA,aACA,oBACA,kBACA,gBACA,eACA,MACA,OACA,SACA,cACA,OACA,iBACA,eACA,cACA,eACA,eACA,eACA,SACA,aACA,eACA,iBACA,oBACA,eACA,YACA,cACA,eACA,cACA,aACA,UACA,OACA,SACA,OACA,oBACA,UACA,cACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,cACA,gBACA,OACA,eACA,YACA,eACA,WACA,UACA,aACA,iBACA,UACA,WACA,UACA,QACA,MACA,KACA,OACA,QACA,aACA,aACA,KACA,YACA,OACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,cACA,qBACA,uBACA,qBACA,gBACA,iBACA,WACA,OACA,QACA,WACA,cACA,cACA,gBACA,cACA,cACA,eACA,YACA,eACA,eACA,iBACA,cACA,kBACA,eACA,cACA,cACA,kBACA,UACA,QACA,SACA,aACA,QACA,UACA,YACA,UACA,OACA,aACA,QACA,YACA,cACA,cACA,cACA,gBACA,iBACA,cACA,kBACA,QACA,QACA,WACA,WACA,UACA,YACA,MACA,QACA,OACA,QACA,SACA,WACA,OACA,cACA,MACA,YACA,cACA,oBACA,WACA,UACA,SACA,SACA,MACA,WACA,MACA,aACA,MACA,WACA,SACA,SACA,gBACA,OACA,UACA,QACA,UACA,aACA,WACA,YACA,YACA,YACA,aACA,cACA,aACA,OACA,WACA,kBACA,SACA,QACA,OACA,WACA,UACA,UACA,iBACA,OACA,kBACA,kBACA,mBACA,gBACA,aACA,QACA,SACA,eACA,aACA,iBACA,OACA,MACA,aACA,QACA,UACA,YACA,OACA,cACA,cACA,gBACA,gBACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,YACA,aACA,mBACA,QACA,eACA,eACA,iBACA,WACA,SACA,eACA,OACA,QACA,SACA,eACA,aACA,gBACA,QACA,UACA,SACA,cACA,eACA,iBACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,UACA,YACA,cACA,cACA,gBACA,YACA,YACA,QACA,QACA,eACA,iBACA,MACA,SACA,SACA,gBACA,kBACA,UACA,QACA,eACA,QACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,mBACA,QACA,OACA,cACA,gBACA,OACA,OACA,cACA,cACA,gBACA,UACA,YACA,QACA,eACA,eACA,KACA,SACA,WACA,kBACA,oBACA,QACA,aACA,cACA,KACA,SACA,UACA,QACA,UACA,SACA,eACA,gBACA,UACA,aACA,SACA,SACA,UACA,SACA,QACA,YACA,aACA,UACA,MACA,OACA,SACA,cACA,eACA,SACA,MACA,aACA,MACA,QACA,QACA,MACA,SACA,OACA,WACA,SACA,SACA,eACA,cACA,SACA,OACA,SACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,SACA,SACA,OACA,eACA,eACA,kBACA,gBACA,SACA,UACA,gBACA,WACA,SACA,UACA,cACA,UACA,WACA,QACA,QACA,UACA,aACA,UACA,WACA,iBACA,kBACA,cACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,aACA,gBACA,UACA,QACA,UACA,SACA,WACA,iBACA,iBACA,OACA,YACA,kBACA,iBACA,cACA,SACA,QACA,eACA,gBACA,eACA,cACA,cACA,gBACA,OACA,cACA,gBACA,cACA,gBACA,cACA,qBACA,YACA,SACA,WACA,QACA,cACA,cACA,UACA,QACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,gBACA,WACA,cACA,aACA,KACA,WACA,UACA,YACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,mBACA,mBACA,sBACA,6BACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,kBACA,oBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,YACA,QACA,cACA,kBACA,QACA,UACA,OACA,SACA,cACA,SACA,QACA,MACA,MACA,SACA,gBACA,eACA,KACA,SACA,UACA,iBACA,WACA,YACA,OACA,mBACA,aACA,SACA,SACA,aACA,WACA,SACA,MACA,MACA,OACA,cACA,gBACA,UACA,SACA,YACA,cACA,aACA,QACA,QACA,UACA,QACA,eACA,aACA,UACA,SACA,gBACA,eACA,QACA,eACA,OACA,KACA,uBACA,cACA,aACA,YACA,UACA,SACA,QACA,SACA,WACA,aACA,iBACA,OACA,cACA,eACA,iBACA,kBACA,kBACA,iBACA,UACA,MACA,YACA,aACA,aACA,UACA,SACA,OACA,cACA,eACA,sBACA,QACA,KACA,YACA,OACA,MACA,QACA,UACA,eACA,kCCxuBN,MAAMC,EACH,WAAAlU,CAAYS,GACTP,KAAKO,GAAKA,EACVP,KAAKiU,OAAS,EACjB,CAEA,QAAAC,CAASxI,EAAMhI,GACZ1D,KAAKiU,OAAO7M,KAAK,CAAEsE,KAAMA,EAAMhI,QAASA,GAC3C,CAEA,IAAAyQ,GACG,OAA6B,GAAtBnU,KAAKiU,OAAOrS,MACtB,CAEA,IAAAwS,GACG,OAAOpU,KAAKiU,OAAOrS,OAAS,CAC/B,CAEA,kBAAAyS,GACG,IAAI7I,EA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","sources":["webpack://ab_platform_web/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://ab_platform_web/./resources/Account.js","webpack://ab_platform_web/./AppBuilder/_factory_utils/Dialog.js","webpack://ab_platform_web/./resources/Multilingual.js","webpack://ab_platform_web/./resources/NetworkRest.js","webpack://ab_platform_web/./resources/NetworkRestSocket.js","webpack://ab_platform_web/./resources/Network.js","webpack://ab_platform_web/./resources/StorageLocal.js","webpack://ab_platform_web/./resources/Storage.js","webpack://ab_platform_web/./resources/Tenant.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configDesktop.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configMobile.js","webpack://ab_platform_web/./AppBuilder/uiSettings/config.js","webpack://ab_platform_web/./AppBuilder/uiSettings/icons.js","webpack://ab_platform_web/./AppBuilder/ABFactory.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationCore.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationMobileCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDataCollectionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDefinitionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFactoryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFieldManager.js","webpack://ab_platform_web/./AppBuilder/core/ABHintCore.js","webpack://ab_platform_web/./AppBuilder/core/ABIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/ABMLClassCore.js","webpack://ab_platform_web/./AppBuilder/core/ABModelCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectApiCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectApiNetsuiteCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/ABStepCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerMobileCore.js","webpack://ab_platform_web/./AppBuilder/core/FilterComplexCore.js","webpack://ab_platform_web/./AppBuilder/core/RowFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldAutoIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldBooleanCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCombineCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateTimeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFileCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldImageCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldListCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldLongTextCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldStringCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTextFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldUserCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobilePageCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormDateCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormDatetimeCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormFileCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormImageCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewTimelineCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessLaneCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessParticipantCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessTaskManager.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessElementCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessEndCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessGatewayExclusiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceInsertRecordCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskSubProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserApprovalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserExternalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserFormCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerLifecycleCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerTimerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLFindCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRootObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRow.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowUpdateCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSet.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetFirstCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVExporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCarouselCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartAreaCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartBarCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartLineCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartPieCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCommentCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConditionalContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConnectDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataSelectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataviewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDocxBuilderCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormDatepickerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGanttCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGridCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewKanbanCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLayoutCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewMenuCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPDFImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPivotCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewReportsManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewSchedulerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTabCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewWidgetCore.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplication.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplicationMobile.js","webpack://ab_platform_web/./AppBuilder/platform/ABComponent.js","webpack://ab_platform_web/./AppBuilder/platform/ABDataCollection.js","webpack://ab_platform_web/./AppBuilder/platform/ABDefinition.js","webpack://ab_platform_web/./AppBuilder/platform/ABEmitter.js","webpack://ab_platform_web/./AppBuilder/platform/ABHint.js","webpack://ab_platform_web/./AppBuilder/platform/ABIndex.js","webpack://ab_platform_web/./AppBuilder/platform/ABMLClass.js","webpack://ab_platform_web/./AppBuilder/platform/ABModel.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelApiNetsuite.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABObject.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectApiNetsuite.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectExternal.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectImport.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABProcess.js","webpack://ab_platform_web/./AppBuilder/platform/ABStep.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManager.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManagerMobile.js","webpack://ab_platform_web/./AppBuilder/platform/CSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/FilterComplex.js","webpack://ab_platform_web/./AppBuilder/platform/RowFilter.js","webpack://ab_platform_web/./AppBuilder/platform/RowUpdater.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABField.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldAutoIndex.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldBoolean.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCombine.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldConnect.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDateTime.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldEmail.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFile.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldImage.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldJson.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldList.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldLongText.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldNumber.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldSelectivity.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldString.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTextFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTree.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldUser.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobilePage.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileView.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewCustom.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormDate.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormDatetime.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormEmail.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormFile.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormFormula.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormImage.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewList.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewTimeline.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessLane.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessParticipant.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessElement.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessEnd.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessGatewayExclusive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskEmail.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskService.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingJEArchive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceInsertRecord.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceQuery.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskSubProcess.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserApproval.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserExternal.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserForm.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTrigger.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerLifecycle.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerTimer.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQL.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLFind.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLManager.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRootObject.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowSave.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetFirst.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetSave.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABView.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVExporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCarouselComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCarousel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartArea.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartBar.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartLine.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartPie.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewComment.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConditionalContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConnectDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConnectDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataSelectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataSelect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataview.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetail.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDocxBuilder.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormDatepicker.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormJson.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGanttComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupExport.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupMassUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGridComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupSortFields.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanban.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanbanFormSidePanel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLayout.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewList.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewMenu.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPDFImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPivot.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewReportsManager.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewScheduler.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewTab.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewWidget.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVExporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartAreaComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartBarComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartLineComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartPieComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCommentComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConditionalContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataviewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDocxBuilderComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormButtonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormDatepickerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormJsonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormNumberComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormReadonlyComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectMultipleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectSingleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTextboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewKanbanComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLabelComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLayoutComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewListComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewMenuComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPDFImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPivotComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewReportsManagerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewSchedulerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTabComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewProperty.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyAddPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyEditPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyFilterData.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyLinkPage.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRule.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleAction.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleList.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormRecordRules.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormSubmitRules.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleInsertConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdate.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleClosePopup.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleExistPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleParentPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleWebsite.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://ab_platform_web/./js/docxtemplater-image-module.v3.0.2.min.js","webpack://ab_platform_web/./js/docxtemplater.v3.0.12.min.js","webpack://ab_platform_web/./js/jszip.min.js","webpack://ab_platform_web/./webix_custom_components/activelist.js","webpack://ab_platform_web/./webix_custom_components/countfooter.js","webpack://ab_platform_web/./webix_custom_components/customComponentManager.js","webpack://ab_platform_web/./webix_custom_components/datetimepicker.js","webpack://ab_platform_web/./webix_custom_components/editlist.js","webpack://ab_platform_web/./webix_custom_components/edittree.js","webpack://ab_platform_web/./webix_custom_components/editunitlist.js","webpack://ab_platform_web/./webix_custom_components/focusableTemplate.js","webpack://ab_platform_web/./webix_custom_components/formioBuilder.js","webpack://ab_platform_web/./webix_custom_components/formioPreview.js","webpack://ab_platform_web/./webix_custom_components/lazyComponent.js","webpack://ab_platform_web/./webix_custom_components/numbertext.js","webpack://ab_platform_web/./webix_custom_components/thaicalendar.js","webpack://ab_platform_web/./webix_custom_components/timepicker.js","webpack://ab_platform_web/./webix_custom_components/tinyMce.js","webpack://ab_platform_web/./webix_custom_components/totalfooter.js","webpack://ab_platform_web/./webix_custom_components/treesuggest.js"],"sourcesContent":["var map = {\n\t\"./af\": 19183,\n\t\"./af.js\": 19183,\n\t\"./ar\": 31035,\n\t\"./ar-dz\": 47214,\n\t\"./ar-dz.js\": 47214,\n\t\"./ar-kw\": 40830,\n\t\"./ar-kw.js\": 40830,\n\t\"./ar-ly\": 68899,\n\t\"./ar-ly.js\": 68899,\n\t\"./ar-ma\": 77258,\n\t\"./ar-ma.js\": 77258,\n\t\"./ar-ps\": 19121,\n\t\"./ar-ps.js\": 19121,\n\t\"./ar-sa\": 64096,\n\t\"./ar-sa.js\": 64096,\n\t\"./ar-tn\": 97826,\n\t\"./ar-tn.js\": 97826,\n\t\"./ar.js\": 31035,\n\t\"./az\": 20051,\n\t\"./az.js\": 20051,\n\t\"./be\": 23813,\n\t\"./be.js\": 23813,\n\t\"./bg\": 64323,\n\t\"./bg.js\": 64323,\n\t\"./bm\": 57837,\n\t\"./bm.js\": 57837,\n\t\"./bn\": 75780,\n\t\"./bn-bd\": 25959,\n\t\"./bn-bd.js\": 25959,\n\t\"./bn.js\": 75780,\n\t\"./bo\": 81451,\n\t\"./bo.js\": 81451,\n\t\"./br\": 76480,\n\t\"./br.js\": 76480,\n\t\"./bs\": 91607,\n\t\"./bs.js\": 91607,\n\t\"./ca\": 23232,\n\t\"./ca.js\": 23232,\n\t\"./cs\": 91034,\n\t\"./cs.js\": 91034,\n\t\"./cv\": 54213,\n\t\"./cv.js\": 54213,\n\t\"./cy\": 95800,\n\t\"./cy.js\": 95800,\n\t\"./da\": 40739,\n\t\"./da.js\": 40739,\n\t\"./de\": 66951,\n\t\"./de-at\": 82181,\n\t\"./de-at.js\": 82181,\n\t\"./de-ch\": 61339,\n\t\"./de-ch.js\": 61339,\n\t\"./de.js\": 66951,\n\t\"./dv\": 16938,\n\t\"./dv.js\": 16938,\n\t\"./el\": 59573,\n\t\"./el.js\": 59573,\n\t\"./en-au\": 62458,\n\t\"./en-au.js\": 62458,\n\t\"./en-ca\": 51816,\n\t\"./en-ca.js\": 51816,\n\t\"./en-gb\": 8069,\n\t\"./en-gb.js\": 8069,\n\t\"./en-ie\": 15586,\n\t\"./en-ie.js\": 15586,\n\t\"./en-il\": 60009,\n\t\"./en-il.js\": 60009,\n\t\"./en-in\": 51207,\n\t\"./en-in.js\": 51207,\n\t\"./en-nz\": 83724,\n\t\"./en-nz.js\": 83724,\n\t\"./en-sg\": 1953,\n\t\"./en-sg.js\": 1953,\n\t\"./eo\": 1292,\n\t\"./eo.js\": 1292,\n\t\"./es\": 66328,\n\t\"./es-do\": 61452,\n\t\"./es-do.js\": 61452,\n\t\"./es-mx\": 94444,\n\t\"./es-mx.js\": 94444,\n\t\"./es-us\": 81285,\n\t\"./es-us.js\": 81285,\n\t\"./es.js\": 66328,\n\t\"./et\": 7181,\n\t\"./et.js\": 7181,\n\t\"./eu\": 62830,\n\t\"./eu.js\": 62830,\n\t\"./fa\": 19565,\n\t\"./fa.js\": 19565,\n\t\"./fi\": 85541,\n\t\"./fi.js\": 85541,\n\t\"./fil\": 65661,\n\t\"./fil.js\": 65661,\n\t\"./fo\": 26087,\n\t\"./fo.js\": 26087,\n\t\"./fr\": 25396,\n\t\"./fr-ca\": 96581,\n\t\"./fr-ca.js\": 96581,\n\t\"./fr-ch\": 81294,\n\t\"./fr-ch.js\": 81294,\n\t\"./fr.js\": 25396,\n\t\"./fy\": 12533,\n\t\"./fy.js\": 12533,\n\t\"./ga\": 55796,\n\t\"./ga.js\": 55796,\n\t\"./gd\": 50847,\n\t\"./gd.js\": 50847,\n\t\"./gl\": 60439,\n\t\"./gl.js\": 60439,\n\t\"./gom-deva\": 46514,\n\t\"./gom-deva.js\": 46514,\n\t\"./gom-latn\": 66525,\n\t\"./gom-latn.js\": 66525,\n\t\"./gu\": 34232,\n\t\"./gu.js\": 34232,\n\t\"./he\": 50915,\n\t\"./he.js\": 50915,\n\t\"./hi\": 22095,\n\t\"./hi.js\": 22095,\n\t\"./hr\": 10762,\n\t\"./hr.js\": 10762,\n\t\"./hu\": 88275,\n\t\"./hu.js\": 88275,\n\t\"./hy-am\": 73094,\n\t\"./hy-am.js\": 73094,\n\t\"./id\": 27769,\n\t\"./id.js\": 27769,\n\t\"./is\": 99676,\n\t\"./is.js\": 99676,\n\t\"./it\": 74313,\n\t\"./it-ch\": 25141,\n\t\"./it-ch.js\": 25141,\n\t\"./it.js\": 74313,\n\t\"./ja\": 11985,\n\t\"./ja.js\": 11985,\n\t\"./jv\": 53908,\n\t\"./jv.js\": 53908,\n\t\"./ka\": 32808,\n\t\"./ka.js\": 32808,\n\t\"./kk\": 33930,\n\t\"./kk.js\": 33930,\n\t\"./km\": 71532,\n\t\"./km.js\": 71532,\n\t\"./kn\": 69461,\n\t\"./kn.js\": 69461,\n\t\"./ko\": 60502,\n\t\"./ko.js\": 60502,\n\t\"./ku\": 18660,\n\t\"./ku-kmr\": 58035,\n\t\"./ku-kmr.js\": 58035,\n\t\"./ku.js\": 18660,\n\t\"./ky\": 83088,\n\t\"./ky.js\": 83088,\n\t\"./lb\": 65742,\n\t\"./lb.js\": 65742,\n\t\"./lo\": 25417,\n\t\"./lo.js\": 25417,\n\t\"./lt\": 64968,\n\t\"./lt.js\": 64968,\n\t\"./lv\": 41202,\n\t\"./lv.js\": 41202,\n\t\"./me\": 34438,\n\t\"./me.js\": 34438,\n\t\"./mi\": 18498,\n\t\"./mi.js\": 18498,\n\t\"./mk\": 6744,\n\t\"./mk.js\": 6744,\n\t\"./ml\": 63949,\n\t\"./ml.js\": 63949,\n\t\"./mn\": 4459,\n\t\"./mn.js\": 4459,\n\t\"./mr\": 46679,\n\t\"./mr.js\": 46679,\n\t\"./ms\": 56960,\n\t\"./ms-my\": 47483,\n\t\"./ms-my.js\": 47483,\n\t\"./ms.js\": 56960,\n\t\"./mt\": 99989,\n\t\"./mt.js\": 99989,\n\t\"./my\": 64978,\n\t\"./my.js\": 64978,\n\t\"./nb\": 88460,\n\t\"./nb.js\": 88460,\n\t\"./ne\": 23993,\n\t\"./ne.js\": 23993,\n\t\"./nl\": 95378,\n\t\"./nl-be\": 62678,\n\t\"./nl-be.js\": 62678,\n\t\"./nl.js\": 95378,\n\t\"./nn\": 67560,\n\t\"./nn.js\": 67560,\n\t\"./oc-lnc\": 87060,\n\t\"./oc-lnc.js\": 87060,\n\t\"./pa-in\": 62187,\n\t\"./pa-in.js\": 62187,\n\t\"./pl\": 93532,\n\t\"./pl.js\": 93532,\n\t\"./pt\": 49396,\n\t\"./pt-br\": 92485,\n\t\"./pt-br.js\": 92485,\n\t\"./pt.js\": 49396,\n\t\"./ro\": 33179,\n\t\"./ro.js\": 33179,\n\t\"./ru\": 93797,\n\t\"./ru.js\": 93797,\n\t\"./sd\": 40675,\n\t\"./sd.js\": 40675,\n\t\"./se\": 59036,\n\t\"./se.js\": 59036,\n\t\"./si\": 59160,\n\t\"./si.js\": 59160,\n\t\"./sk\": 31266,\n\t\"./sk.js\": 31266,\n\t\"./sl\": 74699,\n\t\"./sl.js\": 74699,\n\t\"./sq\": 69728,\n\t\"./sq.js\": 69728,\n\t\"./sr\": 87129,\n\t\"./sr-cyrl\": 55000,\n\t\"./sr-cyrl.js\": 55000,\n\t\"./sr.js\": 87129,\n\t\"./ss\": 74346,\n\t\"./ss.js\": 74346,\n\t\"./sv\": 9877,\n\t\"./sv.js\": 9877,\n\t\"./sw\": 918,\n\t\"./sw.js\": 918,\n\t\"./ta\": 24787,\n\t\"./ta.js\": 24787,\n\t\"./te\": 6199,\n\t\"./te.js\": 6199,\n\t\"./tet\": 91851,\n\t\"./tet.js\": 91851,\n\t\"./tg\": 33881,\n\t\"./tg.js\": 33881,\n\t\"./th\": 87828,\n\t\"./th.js\": 87828,\n\t\"./tk\": 99677,\n\t\"./tk.js\": 99677,\n\t\"./tl-ph\": 29253,\n\t\"./tl-ph.js\": 29253,\n\t\"./tlh\": 95586,\n\t\"./tlh.js\": 95586,\n\t\"./tr\": 17254,\n\t\"./tr.js\": 17254,\n\t\"./tzl\": 61192,\n\t\"./tzl.js\": 61192,\n\t\"./tzm\": 69631,\n\t\"./tzm-latn\": 72841,\n\t\"./tzm-latn.js\": 72841,\n\t\"./tzm.js\": 69631,\n\t\"./ug-cn\": 71720,\n\t\"./ug-cn.js\": 71720,\n\t\"./uk\": 28048,\n\t\"./uk.js\": 28048,\n\t\"./ur\": 86751,\n\t\"./ur.js\": 86751,\n\t\"./uz\": 96343,\n\t\"./uz-latn\": 60513,\n\t\"./uz-latn.js\": 60513,\n\t\"./uz.js\": 96343,\n\t\"./vi\": 44821,\n\t\"./vi.js\": 44821,\n\t\"./x-pseudo\": 23973,\n\t\"./x-pseudo.js\": 23973,\n\t\"./yo\": 15000,\n\t\"./yo.js\": 15000,\n\t\"./zh-cn\": 43762,\n\t\"./zh-cn.js\": 43762,\n\t\"./zh-hk\": 9246,\n\t\"./zh-hk.js\": 9246,\n\t\"./zh-mo\": 41107,\n\t\"./zh-mo.js\": 41107,\n\t\"./zh-tw\": 79014,\n\t\"./zh-tw.js\": 79014\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 35358;","var EventEmitter = require(\"events\").EventEmitter;\n\nclass Account extends EventEmitter {\n   constructor() {\n      super();\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._listRoles = null;\n      // {array}\n      // a list of all the Defined Roles in the Tenant's system.\n\n      this._listScopes = null;\n      // {array | null}\n      // a list of all the Defined Scopes in the Tenant's sytem.\n\n      this._listUsers = null;\n      // {array | null}\n      // a list of all the Defined Users in the Tenant's system.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var UserConfig = this.AB.Config.userConfig();\n      if (UserConfig) {\n         this.isAuthenticated = true;\n         this._config = UserConfig;\n      }\n\n      var MetaConfig = this.AB.Config.metaConfig();\n      if (MetaConfig) {\n         this._listRoles = MetaConfig.roles || [];\n         this._listScopes = MetaConfig.scopes || [];\n         this._listUsers = MetaConfig.users || [];\n      }\n\n      this.AB.Network.on(\"account.logout\", (context, err, data) => {\n         if (err) {\n            console.error(err);\n            return;\n         }\n         this.emit(\"logout\", data);\n      });\n\n      return Promise.resolve();\n   }\n\n   canSwitcheroo() {\n      return (\n         this.roles((r) => r.uuid === \"320ef94a-73b5-476e-9db4-c08130c64bb8\")\n            .length > 0\n      );\n   }\n\n   isSwitcherood() {\n      return this.AB.Config.userReal();\n   }\n\n   isSystemDesigner() {\n      return (\n         this.roles((r) => r.uuid === \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\")\n            .length > 0\n      );\n   }\n\n   email() {\n      return this._config?.email ?? \"\";\n   }\n\n   language() {\n      return this._config?.languageCode ?? \"en\";\n   }\n\n   logout() {\n      return this.AB.Network.post(\n         {\n            url: \"/auth/logout\",\n            data: { tenantUrl: this.AB.Tenant.setting(\"url\") },\n         },\n         {\n            key: \"account.logout\",\n            context: {},\n         }\n      );\n   }\n\n   roles(fn = () => true) {\n      return (this._config?.roles || []).filter(fn);\n   }\n   rolesAll() {\n      return this._listRoles;\n   }\n\n   scopes() {\n      return this._listScopes;\n   }\n\n   username() {\n      return this._config?.username;\n   }\n\n   userList() {\n      return this._listUsers;\n   }\n\n   uuid() {\n      return this._config?.uuid;\n   }\n\n   imageID() {\n      return this._config?.image_id;\n   }\n\n   sendEmailNotifications() {\n      return this._config?.sendEmailNotifications;\n   }\n}\n\nexport default new Account();\n","//\n// Dialog\n// A common set of UI dialogs to show the User.\n//\n// NOTE: IN TRANSITION: this is our previous method of handling\n// dialogs.  In future, refactor to use webix directly in code.\n//\n\nexport default {\n   // Instance properties\n\n   // Alert\n   // A dialogue that popup with a message, and requires an [ok] button press\n   Alert: function (opts) {\n      webix.alert({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\"opp.dialog.alert.title\", \"*Alert\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.alert.text\",\n               \"*Something is wrong.\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.dialog.alert.ok\", \"*OK\"),\n      });\n   },\n\n   // Confirm\n   // A [Yes] [No] dialogue that pops up with a message\n   Confirm: function (opts) {\n      var title =\n         opts.title ||\n         AB.Multilingual.label(\"opp.dialog.confirm.confirmTitle\", \"* Confirm\");\n      var message =\n         opts.text ||\n         opts.message ||\n         AB.Multilingual.label(\n            \"opp.dialog.confirm.confirmMsg\",\n            \"* Are you sure you want to do this?\"\n         );\n\n      var labelYes =\n         opts.labelYes ||\n         opts.ok ||\n         AB.Multilingual.label(\"opp.common.yes\", \"* yes\");\n      var labelNo =\n         opts.labelNo ||\n         opts.cancel ||\n         AB.Multilingual.label(\"opp.common.no\", \"* no\");\n\n      // var fnYes = opts.fnYes || function () { };\n      // var fnNo = opts.fnNo || function () { };\n\n      webix.confirm({\n         title: title,\n         text: message,\n\n         ok: labelYes,\n         cancel: labelNo,\n\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n\n      // bootbox.dialog({\n      //     title: title,\n      //     message: message,\n      //     buttons: {\n      //         yes: {\n      //             label: labelYes,\n      //             className: 'btn-primary',\n      //             callback: fnYes\n      //         },\n      //         no: {\n      //             label: labelNo,\n      //             className: 'btn-default',\n      //             callback: fnNo\n      //         }\n      //     }\n      // });\n   },\n\n   // ConfirmDelete\n   // A Confirm dialogue geared towards deleting items.\n   // [delete] [cancel]\n   ConfirmDelete: function (opts) {\n      this.Confirm({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteTitle\",\n               \"* Confirm Delete\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.common.delete\", \"* Delete\"),\n         cancel:\n            opts.cancel ||\n            AB.Multilingual.label(\"opp.common.cancel\", \"* Cancel\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteMsg\",\n               \"* Are you sure you want to delete this?\",\n               [\"this\"]\n            ),\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n   },\n\n   // Message\n   // A simple message displayed to the user.  Can time out\n   Message: function (opts) {\n      var message = opts.text || opts.message;\n      var timeout = opts.timeout || 2000;\n\n      webix.message({\n         text: message,\n         expire: timeout,\n      });\n   },\n};\n","/*\n * Multilingual\n * manage our multilingual Translations/Labels/etc.\n */\n\nvar MLClass = require(\"../AppBuilder/platform/ABMLClass\");\n\nclass Multilingual extends MLClass {\n   constructor() {\n      super([], {});\n      // super()\n      //    [] = no labels\n      //    {} = placeholder ABFactory entry until .init() is called.\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._missingLabelID = false;\n      this._missingLabels = {};\n      this._pluginLabelsMissing = {};\n\n      this.isLabelUpdateEnabled = false;\n      // {bool}\n      // we can only update labels on the server if this is enabled.\n      // Only on a Developers environment should we enable this:\n      // javascript console: > window.AB.Multilingual.enableLabelUpdates();\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.labels = this.AB.Config.labelConfig();\n      this._languages = this.AB.Config.languageConfig();\n\n      this.pluginLabels = {};\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   currentLanguage() {\n      return this.AB.Account.language();\n   }\n\n   enableLabelUpdates() {\n      this.isLabelUpdateEnabled = true;\n   }\n\n   label(key, altText, values = [], postMissing = true) {\n      // part of our transition: L(\"single string\") should start to work:\n      if (typeof altText == \"undefined\" && key) {\n         altText = key;\n      }\n\n      // other case: L(\"single string {0}\", [])\n      if (arguments.length == 2 && Array.isArray(altText)) {\n         values = altText;\n         altText = key;\n      }\n\n      // We need to escape \" characters or else they will get added to the the lang.js\n      // then we get errors next time we try to parse it as JSON (see appbuilder.label-missing)\n      altText = altText.replace(/\"/g, '\\\\\"');\n      key = key.replace(/\"/g, '\\\\\"');\n\n      // NOTE: transition to new Labels\n      // currently our code still uses the L(key, altText, values) format, but\n      // the labels we get back are in L(altText, values) format.\n      //\n      // we are going to keep this like this until we have a well functioning\n      // UI display of our Apps, which should flesh out most of the missing\n      // labels to our files.\n      //\n      // After that, convert our L(k, t, v) to L(t, v)\n\n      var newKey = altText;\n      if (newKey[0] == \"*\") {\n         newKey = newKey.slice(1);\n      }\n      var label = this.labels[newKey];\n      if (!label) {\n         if (postMissing) {\n            this.postMissingLabel(key, altText);\n         }\n         label = altText;\n      }\n\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      label = label.replace(/\\\\\"/g, '\"'); // unescape \" in the label\n      return label;\n   }\n\n   labelPlugin(plugin, altText, values = []) {\n      // 1st check to see if it is a common label from platform:\n      var label = this.label(altText, altText, values, false);\n      if (!label) {\n         // ok, so check to see if it is a Plugin Label:\n         label = this.pluginLabels[plugin][altText];\n      }\n      if (!label) {\n         // !! record it missing.\n         this._pluginLabelsMissing[plugin] =\n            this._pluginLabelsMissing[plugin] || {};\n         this._pluginLabelsMissing[plugin][altText] = altText;\n         label = altText;\n      }\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      return label;\n   }\n\n   languages() {\n      return this._languages;\n\n      // console.error(\n      //    \"Multilingual:languages(): Implement Language Storage/Retrieval.\"\n      // );\n      // return [];\n   }\n\n   pluginLoadLabels(key, labels) {\n      this.pluginLabels[key] = labels;\n   }\n   pluginLabelReport(key) {\n      console.warn(\"missing labels for plugin: \", key);\n      console.warn(\"current language:\", this.currentLanguage());\n      var labels = JSON.stringify(this._pluginLabelsMissing[key], null, 3);\n      console.warn(labels);\n   }\n\n   postMissingLabel(key, altText) {\n      if (!this.isLabelUpdateEnabled) return;\n\n      if (this._missingLabelID) {\n         clearTimeout(this._missingLabelID);\n      }\n      var batchLength = 50;\n      var sendBatch = () => {\n         var batchLabels = [];\n         let missingLabels = Object.keys(this._missingLabels).map(\n            (k) => this._missingLabels[k]\n         );\n         if (missingLabels.length <= batchLength) {\n            batchLabels = missingLabels;\n            this._missingLabels = {};\n         } else {\n            for (var i = 0; i <= batchLength; i++) {\n               var l = missingLabels.shift();\n               batchLabels.push(l);\n               delete this._missingLabels[l.key];\n            }\n         }\n         this.AB.Network.post({\n            url: \"/multilingual/label-missing\",\n            data: { labels: JSON.stringify(batchLabels) },\n         })\n            .then(() => {\n               if (Object.keys(this._missingLabels).length > 0) {\n                  sendBatch();\n               }\n            })\n            .catch((err) => {\n               const strErr = err.toString();\n               if (strErr.indexOf(\"unable to get\") > -1) {\n                  console.error(\n                     \"Missing language file for :\" + this.currentLanguage()\n                  );\n               }\n            });\n      };\n      this._missingLabelID = setTimeout(() => {\n         sendBatch();\n      }, 1000);\n\n      this._missingLabels[key] = { key, altText };\n   }\n   ///\n   /// Disable un-needed ABMLClass functionality\n   ///\n   /// NOTE: we are mainly Piggybacking on ABMLClass for it's\n   /// .translate() and .unTranslate() capabilities. So disable these\n   /// for good measure.\n   destroy() {\n      console.error(\"Multilingual:destroy(): Should not be called.\");\n      return Promise.resolve();\n   }\n   save() {\n      console.error(\"Multilingual:save(): Should not be called.\");\n      return Promise.resolve();\n   }\n   toObj() {\n      console.error(\"Multilingual:toObj(): Should not be called.\");\n      return {};\n   }\n   toDefinition() {\n      console.error(\"Multilingual:toDefinition(): Should not be called.\");\n      return {};\n   }\n}\n\nexport default new Multilingual();\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\n/* global Connection */\n// import Account from \"./Account\";\n// import analytics from \"./Analytics\";\n// import EventEmitter from \"eventemitter2\";\nvar EventEmitter = require(\"events\").EventEmitter;\n// import Lock from \"./Lock\";\n\n// import { storage } from \"./Storage\";\n// import Tenant from \"./Tenant\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Temp placeholders until Resources are implemented:\n\n// End Temp\n\nconst Atomic = require(\"atomicjs/dist/atomic.min.js\");\n// Atomic : a small $.ajax() replacement\n\nvar Config = null;\n// {} Config\n// the site specific configuration information\n\nclass NetworkRest extends EventEmitter {\n   constructor(parent) {\n      // {Network} parent\n\n      super({\n         wildcard: true,\n         newListener: false,\n         maxListeners: 0,\n      });\n\n      this.baseURL = null;\n      // {string} .baseURL\n      // the url of our site.\n\n      this.numRetries = 3;\n      // {int} .numRetries\n      // the number or times we should attempt to issue a network request.\n\n      this._network = parent;\n      // {Network} ._network\n      // the Parent Network Resource that the rest of the Platform actually\n      // works with.\n\n      this.isRealTime = false;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n   }\n\n   /**\n    * @method init\n    * @param {ABFactory} AB\n    * @param {object} options\n    * @param {string} options.baseURL\n    * @return {Promise}\n    */\n   init(AB, options) {\n      this.AB = AB;\n\n      Config = this.AB.Config.siteConfig();\n      options = options || {};\n      if (options) {\n         this.baseURL = options.baseURL || Config.appbuilder.urlCoreServer;\n         this.numRetries =\n            options.networkNumRetries || Config.appbuilder.networkNumRetries;\n      }\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(params, jobResponse) {\n      params.type = params.type || \"GET\";\n\n      // data sent to params on a \"GET\" request need to be converted to\n      // uri querystring values:\n      var data = params.data || params.params;\n      if (data) {\n         var useThese = [\"string\", \"number\", \"boolean\"];\n         var search = Object.keys(data)\n            .map(function (key) {\n               var val = data[key];\n               if (useThese.indexOf(typeof val) == -1) {\n                  val = JSON.stringify(val);\n               }\n               return key + \"=\" + encodeURIComponent(val);\n            })\n            .join(\"&\");\n\n         var join = \"?\";\n         if (params.url.indexOf(\"?\") > -1) {\n            join = \"&\";\n         }\n         params.url = [params.url, search].join(join);\n      }\n\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(params, jobResponse) {\n      params.type = params.type || \"POST\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(params, jobResponse) {\n      params.type = params.type || \"PUT\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(params, jobResponse) {\n      params.type = params.type || \"DELETE\";\n      return this._request(params, jobResponse);\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return this._network.isNetworkConnected();\n   }\n\n   salSend(params) {\n      return Atomic(params.url, params).then((packet) => {\n         // {json} packet\n         // the response from Atomic is in format:\n         // {data: {…}, xhr: XMLHttpRequest}\n         // we just want to send back our { status:\"\", data:xxx } packet.\n         return packet.data;\n      });\n   }\n\n   /**\n    * _request()\n    * perform the actual AJAX request for this operation.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   _request(params, jobResponse) {\n      // make sure we don't process too many retries:\n      params._retry = params._retry || 0;\n      if (params._retry >= this.numRetries) {\n         var err = new Error(\n            `Too many retries (${this.numRetries}) for ${params.url}`\n         );\n         err.code = \"E_TOMANYRETRIES\";\n         this.AB.notify.developer(err, {\n            context: \"NetworkRest:_request: Too Many Retries\",\n         });\n         // this.AB.Analytics.logError(err);\n         if (jobResponse) {\n            this._network.publishResponse(jobResponse, err);\n         }\n\n         return Promise.reject(err);\n      }\n\n      return new Promise((resolve, reject) => {\n         params.url = params.url || \"/\";\n         if (params.url[0] == \"/\") {\n            params.url = this.baseURL + params.url;\n         }\n\n         params.headers = params.headers || {};\n         if (this.AB.Account.authToken) {\n            params.headers.Authorization = this.AB.Account.authToken;\n         }\n         params.headers[\"Content-type\"] = \"application/json\";\n\n         var tenantID = this.AB.Tenant.id();\n         if (tenantID) {\n            params.headers[\"tenant-token\"] = tenantID;\n         }\n\n         // params.timeout = params.timeout || 6000;\n\n         if (this.isNetworkConnected()) {\n            params.method = params.method || params.type;\n            params.timeout = 6000; // ??\n            params.data = params.data || params.params;\n            delete params.params;\n\n            this.salSend(params)\n               .then((packet) => {\n                  // TODO: check if packet.status == \"error\"\n                  // and then .publishResponse() as an error\n\n                  //\n                  var data = packet;\n                  if (jobResponse) {\n                     this._network.publishResponse(jobResponse, null, data);\n                  }\n                  resolve(data);\n               })\n               .catch((err) => {\n                  // err.status\n                  // err.statusText\n                  // err.responseText\n                  // err.message  {socket}\n                  // err.stack    {socket}\n\n                  // if this is a network connection error, send the attempt again:\n                  if (\n                     err.statusText == \"Request timeout\" ||\n                     (err.message && err.message.indexOf(\"disconnected\") > -1)\n                  ) {\n                     //// Network Error: conneciton refused, access denied, etc...\n                     this.AB.Analytics.log(\n                        \"NetworkRest._request():network connection error detected. Trying again\"\n                     );\n\n                     params._retry++;\n\n                     // retry the attempt:\n                     this._request(params)\n                        .then((data) => {\n                           // console.log('--- timeout.then():',data);\n                           this.AB.warn(\n                              \"*** NetworkRest._request().then(): attempt resolved.\"\n                           );\n                           resolve(data);\n                        })\n                        .catch((_err) => {\n                           this.AB.notify.developer(_err, {\n                              message:\n                                 \"*** NetworkRest._request().catch(): retry failed:\",\n                           });\n                           reject(_err);\n                        });\n\n                     return;\n                  } else {\n                     // Else attempt to emit() some common Error types for\n                     // additional Platform Handling.\n                     if (err.status == 403) {\n                        this.emit(\"error.badAuth\", err);\n                     } else if (err.status >= 400 && err.status < 500) {\n                        this.emit(\"error.badRequest\", err);\n                     } else if (err.status >= 500) {\n                        this.emit(\"error.badServer\", err);\n                     }\n                  }\n\n                  var packet = null;\n                  if (err.responseText) {\n                     try {\n                        packet = JSON.parse(err.responseText);\n                     } catch (e) {\n                        /* ignore */\n                     }\n                  }\n                  // if this is an req.ab.error() response:\n                  if (packet && packet.status == \"error\") {\n                     // check if REAUTH Error:\n                     if (packet.id == 5 || packet.code == \"E_REAUTH\") {\n                        this._network.emit(\"reauth\");\n                        return;\n                     }\n\n                     this.AB.notify.developer(new Error(packet.message), {\n                        context:\n                           \"NetworkRest:_request:Error returned from Server (req.ab.error())\",\n                        data: packet.data,\n                        status: packet.status,\n                     });\n                     // this.AB.Analytics.logError(packet.data);\n                     // this.AB.error(packet.data);\n                     if (jobResponse) {\n                        this._network.publishResponse(\n                           jobResponse,\n                           packet,\n                           null\n                        );\n                     }\n                     let error = new Error(packet.message ?? packet.data);\n                     error.response = packet;\n                     error.text = packet.message;\n                     error.url = `${params.method} ${params.url}`;\n                     return reject(error);\n                  } else {\n                     // unknown/unexpected error:\n                     let error = new Error(\n                        `${err.status} ${err.statusText || err.message}: ${\n                           params.method\n                        } ${params.url}`\n                     );\n                     error.response = err.responseText;\n                     error.text = err.statusText;\n                     error.err = err;\n                     error.url = `${params.method} ${params.url}`;\n                     this.AB.notify.developer(error, {\n                        context:\n                           \"NetworkRest:_request:Unknown Error returned from server\",\n                        err,\n                        response: err.responseText,\n                        text: err.statusText || err.message,\n                        url: error.url,\n                     });\n                     // this.AB.Analytics.logError(error);\n                     // this.AB.error(error);\n                     if (jobResponse) {\n                        this._network.publishResponse(jobResponse, error);\n                     }\n                     return reject(error);\n                  }\n               });\n         } else {\n            // now Queue this request params.\n            this.AB.Analytics.log(\n               \"NetworkRest:_request(): Network is offline. Queuing request.\"\n            );\n            this._network\n               .queue(params, jobResponse)\n               .then(() => {\n                  resolve({ status: \"queued\" });\n               })\n               .catch(reject);\n         }\n      });\n   }\n\n   /**\n    * resend()\n    * processes messages that were queued due to network connectivity\n    * issues.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   resend(params, jobResponse) {\n      // var op = params.type.toLowerCase();\n      return this._request(params, jobResponse);\n   }\n}\n\nexport default NetworkRest;\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\nimport performance from \"../utils/performance\";\nimport NetworkRest from \"./NetworkRest\";\n\nconst listSocketEvents = [\n   // NOTE: ABFactory.definitionXXX() will manage emitting these\n   // events internally:\n   // \"ab.abdefinition.create\",\n   // \"ab.abdefinition.update\",\n   // \"ab.abdefinition.delete\",\n   \"ab.datacollection.create\",\n   \"ab.datacollection.update\",\n   \"ab.datacollection.stale\",\n   \"ab.datacollection.delete\",\n   \"ab.inbox.create\",\n   \"ab.inbox.update\",\n   \"ab.task.userform\",\n   // \"ab.object.update\",\n];\n// {array}\n// The io.socket.* events we are listening for that relate to our datacollection\n// maintainence.\n\nfunction socketDataSave(key, length) {\n   if (!HashSocketJobs[key]) {\n      HashSocketJobs[key] = {\n         packets: 0,\n         length: 0,\n      };\n   }\n\n   HashSocketJobs[key].packets++;\n   HashSocketJobs[key].length += length;\n}\nfunction socketDataLog(AB, key, data) {\n   let length = \"??\";\n   try {\n      length = JSON.stringify(data).length;\n      data.__length = length;\n   } catch (e) {\n      console.log(e);\n      //\n   }\n\n   if (data.objectId) {\n      let obj = AB.objectByID(data.objectId);\n      if (!obj) {\n         console.warn(`socket: ${key} unkown object (${length})`, data);\n      } else {\n         console.warn(\n            `socket: ${key} ${obj.label ?? obj.name}(${length})`,\n            data\n         );\n      }\n   } else {\n      console.warn(`socket: ${key} (${length})`, data);\n   }\n\n   if (data.jobID) {\n      socketDataSave(data.jobID, length);\n      socketDataSave(`${data.jobID}-${key}`, length);\n   }\n}\n\nlet HashSocketJobs = {\n   /* jobID : { #packets, length } */\n};\n\nlet keyBlacklist = {\n   /* key : true */\n};\n// a list of incoming message keys, that indicate wether or not we have\n// processed this message.  If a message has been processed, we skip it.\n\n/**\n * @function blacklistKey()\n * create a unique key for this network event.\n * @param {event} ev\n *        the incoming network event key (ab.datacollection.create)\n * @param {obj} data\n *        the related network packet of the incoming event.\n * @return {string}\n */\nfunction blacklistKey(AB, ev, data) {\n   let parts = [ev];\n\n   if (data.jobID) {\n      parts.push(data.jobID);\n   }\n\n   if (data.data) {\n      let PK = \"uuid\";\n      let obj = AB.objectByID(data.objectId);\n      if (obj) {\n         PK = obj.PK();\n      }\n      parts.push(data.data[PK] || data.data.id);\n   }\n\n   if (data.__length) {\n      parts.push(data.__length);\n   } else {\n      let length = \"??\";\n      try {\n         length = JSON.stringify(data).length;\n      } catch (e) {\n         // ignore\n      }\n      parts.push(length);\n   }\n\n   return parts.join(\"-\");\n}\n\n/**\n * @function isBlacklisted()\n * return True/False if a given key is already blacklisted.\n * @param {string} key\n *        the () we are checking\n * @return {bool}\n */\nfunction isBlacklisted(key) {\n   return keyBlacklist[key] ?? false;\n}\n\n/**\n * @function blacklist()\n * mark a given key as blacklisted. This prevents additional calls with\n * the same key from being processed.\n * A Key is only blacklisted for a given amount of time (1s by default).\n * @param {string} key\n *        the blacklistKey() we are checking\n * @param {int} time\n *        The duration in ms of how long to keep the key blacklisted.\n */\nfunction blacklist(key, time = 1000) {\n   keyBlacklist[key] = true;\n   setTimeout(() => {\n      delete keyBlacklist[key];\n   }, time);\n}\n\nclass NetworkRestSocket extends NetworkRest {\n   constructor(parent) {\n      // {Network} parent\n\n      super(parent);\n\n      this.isRealTime = true;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n\n      // Pass the io.socket.on(*) events to our AB factory.\n      listSocketEvents.forEach((ev) => {\n         io.socket.on(ev, (data) => {\n            // data should be in the format:\n            // {\n            //    objectId: {uuid},\n            //    data: {object}\n            // }\n            socketDataLog(this.AB, ev, data);\n\n            // ensure we only process a network update 1x\n            let blKey = blacklistKey(this.AB, ev, data);\n            if (isBlacklisted(blKey)) return;\n            blacklist(blKey, 5000); // now prevent additional ones\n\n            // check if the ev contains 'datacollection'\n            // and do a single normalizeData() on the incoming data here\n            // before sending it off to be processed.\n            if (ev.indexOf(\"ab.datacollection\") > -1) {\n               let values = data.data;\n               if (values) {\n                  let obj = this.AB.objectByID(data.objectId);\n                  if (obj) {\n                     if (ev != \"ab.datacollection.delete\") {\n                        // if data is packed, then unpack it\n                        let model = obj.model();\n                        if (model.isCsvPacked(values)) {\n                           let lengthPacked = data.__length;\n                           delete data.__length;\n                           values = model.csvUnpack(values);\n                           data.data = values.data;\n                           let lengthUnpacked = JSON.stringify(data).length;\n                           data.__length = lengthUnpacked;\n                           data.__lengthPacked = lengthPacked;\n                           console.log(\n                              `CSV Pack: ${lengthUnpacked} -> ${lengthPacked} (${(\n                                 (lengthPacked / lengthUnpacked) *\n                                 100\n                              ).toFixed(2)}%)`\n                           );\n                        }\n\n                        let jobID = this.AB.jobID();\n                        performance.mark(`${ev}:normalization`, {\n                           op: \"function\",\n                           data: { jobID },\n                        });\n                        model.normalizeData(data.data);\n                        performance.measure(`${ev}:normalization`);\n                     }\n                  }\n               }\n            }\n            this.AB.emit(ev, data);\n         });\n      });\n   }\n\n   //\n   // Interface API\n   //\n\n   socketLog() {\n      console.warn(JSON.stringify(HashSocketJobs, null, 4));\n   }\n\n   socketLogClear() {\n      HashSocketJobs = {};\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return io.socket.isConnected();\n   }\n\n   salSend(params) {\n      let route, query;\n      try {\n         // Extract paramitized route (ex: `/app_builder/model/:ID`) for performance tracking\n         [, route, query] = params.url.match(\n            /https?:\\/\\/[^/]+(\\/[^?]+)\\??(.*)/\n         );\n         route = route.replace(/\\b[a-fA-F\\d-]{36}\\b/g, \":ID\");\n         performance.mark(route, {\n            op: \"websocket.client\",\n            data: {\n               http: {\n                  query: query || undefined,\n                  method: params.method,\n               },\n               url: params.url,\n            },\n         });\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: `salSend() create performance.mark`,\n         });\n      }\n\n      return new Promise((resolve, reject) => {\n         params.method = params.method.toLowerCase();\n\n         io.socket.request(params, (data, jwres) => {\n            // {json} data\n            // the data response from the request\n            // {json} jwres\n            // A JSON WebSocket Response object.\n            //    {json} jwres.headers :  header values\n            //    {int}  jwres.statusCode : http response code\n            //    {json} jwres.body === resData\n\n            // if this is an  error\n            if (jwres.statusCode >= 400) {\n               // Our NetworkRest.error( err ) should be in this format:\n               // err.status\n               // err.statusText\n               // err.responseText\n\n               var errStr = jwres.error ? jwres.error.toString() : jwres.body;\n\n               var err = new Error(`Socket Error: ${errStr}`);\n               err.status = jwres.statusCode;\n               err.statusText = errStr;\n               err.responseText = jwres.body;\n\n               // on RequestTimeout:\n               // err.statusText == \"Request timeout\"\n\n               reject(err);\n            } else {\n               // some errors like socket disconnected return an Error for data\n               if (data instanceof Error) {\n                  reject(data);\n                  return;\n               }\n\n               if (typeof data == \"string\") {\n                  performance.mark(\"JSON.parse\", { op: \"serialize\" });\n                  data = JSON.parse(data);\n                  performance.measure(\"JSON.parse\");\n               }\n\n               // Got a JSON response but was the service response an error?\n               // this would be a strange case where the .statusCode < 400\n               if (data?.status == \"error\") {\n                  // make sure to reject an err.responseText = data\n                  reject({\n                     status: jwres.statusCode,\n                     responseText: JSON.Stringify(data),\n                  });\n               }\n               // Success!\n               else {\n                  performance.measure(route);\n                  resolve(data);\n               }\n            }\n         });\n      });\n   }\n}\n\nexport default NetworkRestSocket;\n","/*\n * Network.js\n * A network manager for interfacing with our AppBuilder server.\n */\n/* global Connection */\nvar EventEmitter = require(\"events\").EventEmitter;\nimport performance from \"../utils/performance\";\nimport NetworkRest from \"./NetworkRest\";\nimport NetworkRestSocket from \"./NetworkRestSocket\";\n// import NetworkRelay from \"./NetworkRelay\";\n\nclass Network extends EventEmitter {\n   constructor() {\n      super();\n\n      this.setMaxListeners(0);\n      // we'll have > 10 for sure!\n\n      this.queueLock = null;\n      // {Lock} .queueLock\n      // our semaphore for coordinating our access to our local storage.\n\n      this._config = null;\n      this._network = null;\n      // {NetworkRelay | NetworkRest | NetworkSocket}\n      // the underlying Network connection object actually performing the\n      // communications with the Server.\n      // Which one is specified in the config.appbuilder.networkType setting\n\n      this._queueCount = 0;\n      // {int} _queueCount\n      // the # of network operations currently queued, pending Network\n      // reconnect.\n\n      this.cachJobResponse = {};\n      // { jobID : { jobResponse } }\n      // hash of the queued jobResponses for network requests that are in\n      // our queue.\n      // We need to keep our own cache that isn't serialized so that once\n      // we complete the request, we can resume the resolve() promise chains\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.queueLock = new this.AB.Lock();\n\n      this._config = this.AB.Config.siteConfig();\n      if (this._config) {\n         switch (this._config.appbuilder.networkType) {\n            case \"relay\":\n               // this._network = new NetworkRelay();\n               break;\n\n            case \"socket\":\n               this._network = new NetworkRestSocket(this);\n               break;\n\n            case \"rest\":\n            default:\n               this._network = new NetworkRest(this);\n               break;\n         }\n\n         return this._network.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      //\n      // Handle reconnections and flushing the Queue:\n      //\n      if (io && io.socket) {\n         // When our Socket reconnects, be sure to flush any pending transactions.\n         io.socket.on(\"connected\", () => {\n            this.queueFlush();\n            if (this.idConnectionCheck) {\n               clearTimeout(this.idConnectionCheck);\n               this.idConnectionCheck = null;\n            }\n         });\n      } else {\n         console.error(\"!!! Network.init() : Did not find io.socket\");\n         window.addEventListener(\"online\", () => this.queueFlush());\n      }\n\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.isRealTime\n    * indicates wether or not the current network connection supports\n    * RealTime updates.\n    * @return {bool}\n    */\n   get isRealTime() {\n      return this._network.isRealTime;\n   }\n\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(...params) {\n      return this._network.get(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * this is a CREATE operation.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(...params) {\n      return this._network.post(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * This is for UPDATE/REPLACE operations to data on the server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(...params) {\n      return this._network.put(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(...params) {\n      return this._network.delete(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   _connectionCheck() {\n      // if (!this.idConnectionCheck) {\n      if (this.isNetworkConnected()) {\n         this.queueFlush().catch(() => {\n            // on an error, we are still having connection issues\n            this.idConnectionCheck = setTimeout(() => {\n               this._connectionCheck();\n            }, 250);\n         });\n         this.idConnectionCheck = null;\n      } else {\n         this.idConnectionCheck = setTimeout(() => {\n            this._connectionCheck();\n         }, 250);\n      }\n      // }\n   }\n\n   /**\n    * Check whether the network is slow\n    * @returns {Boolean}\n    */\n   isNetworkSlow() {\n      return !!this._networkSlow;\n   }\n\n   /**\n    * Register the network speed test worker\n    * @param {Worker} worker\n    * @param {boolean} slow is the current state slow?\n    */\n   registerNetworkTestWorker(worker, slow) {\n      this._networkTestWorker = worker;\n      this._networkSlow = slow;\n      this._networkTestWorker.onmessage = ({ data }) => {\n         if (this._networkSlow !== data) {\n            this._networkSlow = data;\n            this.emit(\"networkslow\", this._networkSlow);\n            // Tell sentry our network speed changed\n            performance.setContext(\"breadcrumb\", {\n               category: \"network\",\n               message: this._networkSlow\n                  ? \"Slow network detected\"\n                  : \"Network speed restored\",\n               level: \"info\",\n            });\n         }\n      };\n   }\n\n   /**\n    * @method networkStatus\n    * return the connection type currently registered with the network\n    * plugin.\n    * @return {string}\n    */\n   networkStatus() {\n      return navigator.connection.type;\n   }\n\n   /**\n    * @method isNetworkConnected\n    * return true/false if the device is currently connected to the\n    * internet.\n    * @return {bool}\n    */\n   isNetworkConnected() {\n      // if this is a Web Client and using sails.socket.io\n      if (io && io.socket && io.socket.isConnected) {\n         return io.socket.isConnected();\n      }\n\n      // if this isn't a Cordova Plugin, then return navigator data:\n      if (typeof Connection == \"undefined\") {\n         // NOTE: this technically only detects if we are connected to a\n         // network.  It doesn't guarantee we can communicate across the 'net\n         return navigator.onLine;\n      }\n\n      // Cordova Plugin:\n      return this.networkStatus() != Connection.NONE;\n   }\n\n   /**\n    * publishResponse()\n    * emit the requested response for this network operation.\n    * @param {obj} jobResponse\n    * @param {obj} error\n    * @param {obj} data\n    */\n   publishResponse(jobResponse, error, data) {\n      if (data) {\n         data = this.normalizeData(data);\n      }\n      this.emit(jobResponse.key, jobResponse.context, error, data);\n   }\n\n   normalizeData(data) {\n      // Data returning from our server is wrapped in an outer layer of\n      // information that is for our Networking API.\n      // the outer wrapper should be:\n      // on success :\n      // {\n      //   status: \"success\",\n      //   data:{Data For App}\n      // }\n      // on Error:\n      // {\n      //   status: \"error\",\n      //   id: {int} error code\n      //   ... other data here\n      // }\n\n      // we have physically received a data packet from the server,\n      // but we are informed that our transaction was problematic\n      // (400 level USER problem?)\n      if (data.status === \"error\") {\n         // TODO: review Error procedure here\n         return data;\n      }\n\n      // on success\n      // make sure we return the Application Level Data packet:\n      return data.data || data;\n   }\n\n   ////\n   //// Queued Requests\n   ////\n\n   /**\n    * refQueue()\n    * sub classes can override this for their own separate Queue Data\n    * @return {string}\n    */\n   refQueue() {\n      return \"networkQueue\";\n   }\n\n   /**\n    * queueCount()\n    * return the # of messages in the queue.\n    * @return {int}\n    */\n   queueCount() {\n      return this._queueCount;\n   }\n\n   /**\n    * Adds a request to the outgoing queue.\n    *\n    * @param {object} data\n    * @param {object} jobResponse\n    * @return {Promise}\n    */\n   queue(data, jobResponse) {\n      var refQueue = this.refQueue();\n\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n            .then((queue) => {\n               queue = queue || [];\n               let jID = this.AB.jobID();\n               this.cachJobResponse[jID] = jobResponse;\n               queue.push({ data, jobResponse: jID });\n               this.AB.log(\n                  `:::: ${queue.length} request${\n                     queue.length > 1 ? \"s\" : \"\"\n                  } queued`\n               );\n               this._queueCount = queue.length;\n               return this.AB.Storage.set(refQueue, queue);\n            })\n            .then(() => {\n               this.emit(\"queued\");\n               // if we are not already polling the network, start\n               if (!this.idConnectionCheck) {\n                  this._connectionCheck();\n               }\n               this.queueLock.release();\n               resolve();\n            })\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"Error while queueing data\",\n               });\n               this.AB.Analytics.logError(err);\n               reject(err);\n\n               this.queueLock.release();\n            });\n      });\n   }\n\n   /**\n    * queueFlush()\n    * Flush the queue and send the contents to the relay server.\n    */\n   queueFlush() {\n      var refQueue = this.refQueue();\n\n      // if we are not connected, then stop\n      if (!this.isNetworkConnected()) {\n         var error = new Error(\"Not connected to the internet.\");\n         error.code = \"E_NOTCONNECTED\";\n         return Promise.reject(error);\n      }\n\n      // otherwise, attempt to flush the queue:\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n\n            //\n            // Get queue contents\n            //\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n\n            //\n            // Send off each queued request\n            //\n            .then((queue) => {\n               // default to [] if not found\n               queue = queue || [];\n\n               let hasResponded = false;\n               let resCount = 0;\n               let resNumber = queue.length;\n\n               let done = (res, rej, err) => {\n                  if (!hasResponded) {\n                     if (err) {\n                        rej(err);\n                        hasResponded = true;\n                        return;\n                     }\n                     resCount++;\n                     if (resCount >= resNumber) {\n                        hasResponded = true;\n                        res();\n                     }\n                  }\n               };\n               // recursively process each pending queue request\n               var processRequest = (cb) => {\n                  if (queue.length == 0) {\n                     cb();\n                  } else {\n                     var entry = queue.shift();\n                     var params = entry.data;\n                     let job = this.cachJobResponse[entry.jobResponse];\n                     // var job = entry.jobResponse;\n                     this._network\n                        .resend(params, job)\n                        .then(() => {\n                           delete this.cachJobResponse[entry.jobResponse];\n                           // processRequest(cb);\n                           cb();\n                        })\n                        .catch((err) => {\n                           // if the err was due to a network connection error\n                           if (err && err.code == \"E_TOMANYRETRIES\") {\n                              cb(err);\n                              return;\n                           }\n                           // otherwise, try the next\n                           // processRequest(cb);\n                        });\n                     processRequest(cb);\n                  }\n               };\n\n               return new Promise((res, rej) => {\n                  processRequest((err) => {\n                     done(res, rej, err);\n                     // if (err) {\n                     //    rej(err);\n                     // } else {\n                     //    res();\n                     // }\n                  });\n               });\n            })\n\n            //\n            // Clear queue contents\n            //\n            .then(() => {\n               this.cachJobResponse = {};\n               this._queueCount = 0;\n               return this.AB.Storage.set(refQueue, []);\n            })\n\n            // release the Lock\n            .then(() => {\n               this.emit(\"queue.synced\");\n               return this.queueLock.release();\n            })\n\n            // all done.\n            .then(() => {\n               resolve();\n            })\n\n            // respond to errors:\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"commAPI queueFlush error\",\n               });\n               this.AB.Analytics.logError(err);\n\n               this.queueLock.release().then(() => {\n                  reject(err);\n               });\n            });\n      });\n   }\n\n   /**\n    * Reset credentials to a blank state.\n    * @return {Promise}\n    */\n   reset() {\n      return Promise.resolve();\n   }\n\n   /**\n    * type()\n    * return the type of network connection we are using.\n    * [\"rest\", \"socket\", \"relay\"]\n    * @return {string}\n    */\n   type() {\n      return this._config.appbuilder.networkType;\n   }\n\n   // uuid() {\n   //    return this.AB.uuid();\n   // }\n\n   getTokens() {\n      // called in appPage.js : openRelayLoader()\n      return {};\n   }\n}\n\nexport default new Network();\n","/*\n * StorageLocal\n *\n * An interface for storing and retrieving Client Side data.  Data stored\n * in StorageLoacal is NOT encrypted.\n *\n * This implementation is based upon the webix.storage.local library.\n * See: https://docs.webix.com/api__refs__storage.local.html\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nclass StorageLocal extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      // {Webix.storage} object.\n      // We divide the storage data according to the tenant we are working\n      // with.  This way Users who can move between different Tenants can\n      // keep their local data separated.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var tenantID = this.AB.Tenant.id();\n      if (!tenantID) {\n         tenantID = \"noAuth\";\n         // \"noAuth\" is considered the tenant on our Login sequence\n         // which should have a minimum of data stored (language maybe?)\n      }\n\n      this.tenantStorage = this.AB.Webix.storage.prefix(\n         tenantID,\n         this.AB.Webix.storage.local\n      );\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   set(key, value /* , options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.put(key, value);\n      });\n   }\n\n   get(key /*, options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.get(key);\n      });\n   }\n\n   clear(key) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.remove(key);\n      });\n   }\n\n   clearAll() {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.clear();\n      });\n   }\n}\n\nexport default new StorageLocal();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport StorageLocal from \"./StorageLocal.js\";\n\nclass Storage extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      this._config = null;\n      this._storage = null;\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var config = this.AB.Config.siteConfig();\n      if (config) {\n         if (config.storage && config.storage.encrypted) {\n            console.error(\"TODO: Implement Encrypted Storage\");\n            // this._storage = StorageEncrypted;\n            this._storage = StorageLocal;\n         } else {\n            this._storage = StorageLocal;\n         }\n\n         return this._storage.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      return Promise.resolve();\n   }\n\n   set(...params) {\n      return this._storage.set(...params);\n   }\n\n   get(...params) {\n      return this._storage.get(...params);\n   }\n\n   clear(...params) {\n      return this._storage.clear(...params);\n   }\n\n   clearAll(...params) {\n      return this._storage.clearAll(...params);\n   }\n}\n\nexport default new Storage();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nclass Tenant extends EventEmitter {\n   constructor() {\n      super();\n\n      this.text = false;\n      this._config = null;\n      this.textClickToEnter = null;\n   }\n\n   init() {\n      var config = Config.tenantConfig();\n      if (config) {\n         // check if we have options that are stored as a string\n         if (\n            typeof config.options === \"string\" ||\n            config.options instanceof String\n         ) {\n            // if we do try to parse them into a JSON object\n            try {\n               config.options = JSON.parse(config.options);\n            } catch (error) {\n               console.error(error);\n            }\n         }\n         this._config = config;\n         this.textClickToEnter = config.options.textClickToEnter;\n      }\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   id() {\n      if (!this._config || this._config.id == \"??\") {\n         return null;\n      }\n      return this._config.id;\n   }\n\n   setting(key, value) {\n      if (this._config) {\n         if (value) {\n            this._config.options[key] = value;\n            return;\n         }\n         return this._config.options[key];\n      }\n   }\n}\n\nexport default new Tenant();\n","/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\nimport Icons from \"./icons\";\n\nexport default {\n   config: function () {\n      // TODO: decide which config file to return here:\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   },\n   icons: Icons.icons,\n};\n","export default {\n   icons: [\n      \"500px\",\n      \"address-book\",\n      \"address-book-o\",\n      \"address-card\",\n      \"address-card-o\",\n      \"adjust\",\n      \"adn\",\n      \"align-center\",\n      \"align-justify\",\n      \"align-left\",\n      \"align-right\",\n      \"amazon\",\n      \"ambulance\",\n      \"american-sign-language-interpreting\",\n      \"anchor\",\n      \"android\",\n      \"angellist\",\n      \"angle-double-down\",\n      \"angle-double-left\",\n      \"angle-double-right\",\n      \"angle-double-up\",\n      \"angle-down\",\n      \"angle-left\",\n      \"angle-right\",\n      \"angle-up\",\n      \"apple\",\n      \"archive\",\n      \"area-chart\",\n      \"arrow-circle-down\",\n      \"arrow-circle-left\",\n      \"arrow-circle-o-down\",\n      \"arrow-circle-o-left\",\n      \"arrow-circle-o-right\",\n      \"arrow-circle-o-up\",\n      \"arrow-circle-right\",\n      \"arrow-circle-up\",\n      \"arrow-down\",\n      \"arrow-left\",\n      \"arrow-right\",\n      \"arrow-up\",\n      \"arrows\",\n      \"arrows-alt\",\n      \"arrows-h\",\n      \"arrows-v\",\n      \"asl-interpreting\",\n      \"assistive-listening-systems\",\n      \"asterisk\",\n      \"at\",\n      \"audio-description\",\n      \"automobile\",\n      \"backward\",\n      \"balance-scale\",\n      \"ban\",\n      \"bandcamp\",\n      \"bank\",\n      \"bar-chart\",\n      \"bar-chart-o\",\n      \"barcode\",\n      \"bars\",\n      \"bath\",\n      \"bathtub\",\n      \"battery\",\n      \"battery-0\",\n      \"battery-1\",\n      \"battery-2\",\n      \"battery-3\",\n      \"battery-4\",\n      \"battery-empty\",\n      \"battery-full\",\n      \"battery-half\",\n      \"battery-quarter\",\n      \"battery-three-quarters\",\n      \"bed\",\n      \"beer\",\n      \"behance\",\n      \"behance-square\",\n      \"bell\",\n      \"bell-o\",\n      \"bell-slash\",\n      \"bell-slash-o\",\n      \"bicycle\",\n      \"binoculars\",\n      \"birthday-cake\",\n      \"bitbucket\",\n      \"bitbucket-square\",\n      \"bitcoin\",\n      \"black-tie\",\n      \"blind\",\n      \"bluetooth\",\n      \"bluetooth-b\",\n      \"bold\",\n      \"bolt\",\n      \"bomb\",\n      \"book\",\n      \"bookmark\",\n      \"bookmark-o\",\n      \"braille\",\n      \"briefcase\",\n      \"btc\",\n      \"bug\",\n      \"building\",\n      \"building-o\",\n      \"bullhorn\",\n      \"bullseye\",\n      \"bus\",\n      \"buysellads\",\n      \"cab\",\n      \"calculator\",\n      \"calendar\",\n      \"calendar-check-o\",\n      \"calendar-minus-o\",\n      \"calendar-o\",\n      \"calendar-plus-o\",\n      \"calendar-times-o\",\n      \"camera\",\n      \"camera-retro\",\n      \"car\",\n      \"caret-down\",\n      \"caret-left\",\n      \"caret-right\",\n      \"caret-square-o-down\",\n      \"caret-square-o-left\",\n      \"caret-square-o-right\",\n      \"caret-square-o-up\",\n      \"caret-up\",\n      \"cart-arrow-down\",\n      \"cart-plus\",\n      \"cc\",\n      \"cc-amex\",\n      \"cc-diners-club\",\n      \"cc-discover\",\n      \"cc-jcb\",\n      \"cc-mastercard\",\n      \"cc-paypal\",\n      \"cc-stripe\",\n      \"cc-visa\",\n      \"certificate\",\n      \"chain\",\n      \"chain-broken\",\n      \"check\",\n      \"check-circle\",\n      \"check-circle-o\",\n      \"check-square\",\n      \"check-square-o\",\n      \"chevron-circle-down\",\n      \"chevron-circle-left\",\n      \"chevron-circle-right\",\n      \"chevron-circle-up\",\n      \"chevron-down\",\n      \"chevron-left\",\n      \"chevron-right\",\n      \"chevron-up\",\n      \"child\",\n      \"chrome\",\n      \"circle\",\n      \"circle-o\",\n      \"circle-o-notch\",\n      \"circle-thin\",\n      \"clipboard\",\n      \"clock-o\",\n      \"clone\",\n      \"close\",\n      \"cloud\",\n      \"cloud-download\",\n      \"cloud-upload\",\n      \"cny\",\n      \"code\",\n      \"code-fork\",\n      \"codepen\",\n      \"codiepie\",\n      \"coffee\",\n      \"cog\",\n      \"cogs\",\n      \"columns\",\n      \"comment\",\n      \"comment-o\",\n      \"commenting\",\n      \"commenting-o\",\n      \"comments\",\n      \"comments-o\",\n      \"compass\",\n      \"compress\",\n      \"connectdevelop\",\n      \"contao\",\n      \"copy\",\n      \"copyright\",\n      \"creative-commons\",\n      \"credit-card\",\n      \"credit-card-alt\",\n      \"crop\",\n      \"crosshairs\",\n      \"css3\",\n      \"cube\",\n      \"cubes\",\n      \"cut\",\n      \"cutlery\",\n      \"dashboard\",\n      \"dashcube\",\n      \"database\",\n      \"deaf\",\n      \"deafness\",\n      \"dedent\",\n      \"delicious\",\n      \"desktop\",\n      \"deviantart\",\n      \"diamond\",\n      \"digg\",\n      \"dollar\",\n      \"dot-circle-o\",\n      \"download\",\n      \"dribbble\",\n      \"drivers-license\",\n      \"drivers-license-o\",\n      \"dropbox\",\n      \"drupal\",\n      \"edge\",\n      \"edit\",\n      \"eercast\",\n      \"eject\",\n      \"ellipsis-h\",\n      \"ellipsis-v\",\n      \"empire\",\n      \"envelope\",\n      \"envelope-o\",\n      \"envelope-open\",\n      \"envelope-open-o\",\n      \"envelope-square\",\n      \"envira\",\n      \"eraser\",\n      \"etsy\",\n      \"eur\",\n      \"euro\",\n      \"exchange\",\n      \"exclamation\",\n      \"exclamation-circle\",\n      \"exclamation-triangle\",\n      \"expand\",\n      \"expeditedssl\",\n      \"external-link\",\n      \"external-link-square\",\n      \"eye\",\n      \"eye-slash\",\n      \"eyedropper\",\n      \"fa\",\n      \"facebook\",\n      \"facebook-f\",\n      \"facebook-official\",\n      \"facebook-square\",\n      \"fast-backward\",\n      \"fast-forward\",\n      \"fax\",\n      \"feed\",\n      \"female\",\n      \"fighter-jet\",\n      \"file\",\n      \"file-archive-o\",\n      \"file-audio-o\",\n      \"file-code-o\",\n      \"file-excel-o\",\n      \"file-image-o\",\n      \"file-movie-o\",\n      \"file-o\",\n      \"file-pdf-o\",\n      \"file-photo-o\",\n      \"file-picture-o\",\n      \"file-powerpoint-o\",\n      \"file-sound-o\",\n      \"file-text\",\n      \"file-text-o\",\n      \"file-video-o\",\n      \"file-word-o\",\n      \"file-zip-o\",\n      \"files-o\",\n      \"film\",\n      \"filter\",\n      \"fire\",\n      \"fire-extinguisher\",\n      \"firefox\",\n      \"first-order\",\n      \"flag\",\n      \"flag-checkered\",\n      \"flag-o\",\n      \"flash\",\n      \"flask\",\n      \"flickr\",\n      \"floppy-o\",\n      \"folder\",\n      \"folder-o\",\n      \"folder-open\",\n      \"folder-open-o\",\n      \"font\",\n      \"font-awesome\",\n      \"fonticons\",\n      \"fort-awesome\",\n      \"forumbee\",\n      \"forward\",\n      \"foursquare\",\n      \"free-code-camp\",\n      \"frown-o\",\n      \"futbol-o\",\n      \"gamepad\",\n      \"gavel\",\n      \"gbp\",\n      \"ge\",\n      \"gear\",\n      \"gears\",\n      \"genderless\",\n      \"get-pocket\",\n      \"gg\",\n      \"gg-circle\",\n      \"gift\",\n      \"git\",\n      \"git-square\",\n      \"github\",\n      \"github-alt\",\n      \"github-square\",\n      \"gitlab\",\n      \"gittip\",\n      \"glass\",\n      \"glide\",\n      \"glide-g\",\n      \"globe\",\n      \"google\",\n      \"google-plus\",\n      \"google-plus-circle\",\n      \"google-plus-official\",\n      \"google-plus-square\",\n      \"google-wallet\",\n      \"graduation-cap\",\n      \"gratipay\",\n      \"grav\",\n      \"group\",\n      \"h-square\",\n      \"hacker-news\",\n      \"hand-grab-o\",\n      \"hand-lizard-o\",\n      \"hand-o-down\",\n      \"hand-o-left\",\n      \"hand-o-right\",\n      \"hand-o-up\",\n      \"hand-paper-o\",\n      \"hand-peace-o\",\n      \"hand-pointer-o\",\n      \"hand-rock-o\",\n      \"hand-scissors-o\",\n      \"hand-spock-o\",\n      \"hand-stop-o\",\n      \"handshake-o\",\n      \"hard-of-hearing\",\n      \"hashtag\",\n      \"hdd-o\",\n      \"header\",\n      \"headphones\",\n      \"heart\",\n      \"heart-o\",\n      \"heartbeat\",\n      \"history\",\n      \"home\",\n      \"hospital-o\",\n      \"hotel\",\n      \"hourglass\",\n      \"hourglass-1\",\n      \"hourglass-2\",\n      \"hourglass-3\",\n      \"hourglass-end\",\n      \"hourglass-half\",\n      \"hourglass-o\",\n      \"hourglass-start\",\n      \"houzz\",\n      \"html5\",\n      \"i-cursor\",\n      \"id-badge\",\n      \"id-card\",\n      \"id-card-o\",\n      \"ils\",\n      \"image\",\n      \"imdb\",\n      \"inbox\",\n      \"indent\",\n      \"industry\",\n      \"info\",\n      \"info-circle\",\n      \"inr\",\n      \"instagram\",\n      \"institution\",\n      \"internet-explorer\",\n      \"intersex\",\n      \"ioxhost\",\n      \"italic\",\n      \"joomla\",\n      \"jpy\",\n      \"jsfiddle\",\n      \"key\",\n      \"keyboard-o\",\n      \"krw\",\n      \"language\",\n      \"laptop\",\n      \"lastfm\",\n      \"lastfm-square\",\n      \"leaf\",\n      \"leanpub\",\n      \"legal\",\n      \"lemon-o\",\n      \"level-down\",\n      \"level-up\",\n      \"life-bouy\",\n      \"life-buoy\",\n      \"life-ring\",\n      \"life-saver\",\n      \"lightbulb-o\",\n      \"line-chart\",\n      \"link\",\n      \"linkedin\",\n      \"linkedin-square\",\n      \"linode\",\n      \"linux\",\n      \"list\",\n      \"list-alt\",\n      \"list-ol\",\n      \"list-ul\",\n      \"location-arrow\",\n      \"lock\",\n      \"long-arrow-down\",\n      \"long-arrow-left\",\n      \"long-arrow-right\",\n      \"long-arrow-up\",\n      \"low-vision\",\n      \"magic\",\n      \"magnet\",\n      \"mail-forward\",\n      \"mail-reply\",\n      \"mail-reply-all\",\n      \"male\",\n      \"map\",\n      \"map-marker\",\n      \"map-o\",\n      \"map-pin\",\n      \"map-signs\",\n      \"mars\",\n      \"mars-double\",\n      \"mars-stroke\",\n      \"mars-stroke-h\",\n      \"mars-stroke-v\",\n      \"maxcdn\",\n      \"meanpath\",\n      \"medium\",\n      \"medkit\",\n      \"meetup\",\n      \"meh-o\",\n      \"mercury\",\n      \"microchip\",\n      \"microphone\",\n      \"microphone-slash\",\n      \"minus\",\n      \"minus-circle\",\n      \"minus-square\",\n      \"minus-square-o\",\n      \"mixcloud\",\n      \"mobile\",\n      \"mobile-phone\",\n      \"modx\",\n      \"money\",\n      \"moon-o\",\n      \"mortar-board\",\n      \"motorcycle\",\n      \"mouse-pointer\",\n      \"music\",\n      \"navicon\",\n      \"neuter\",\n      \"newspaper-o\",\n      \"object-group\",\n      \"object-ungroup\",\n      \"odnoklassniki\",\n      \"odnoklassniki-square\",\n      \"opencart\",\n      \"openid\",\n      \"opera\",\n      \"optin-monster\",\n      \"outdent\",\n      \"pagelines\",\n      \"paint-brush\",\n      \"paper-plane\",\n      \"paper-plane-o\",\n      \"paperclip\",\n      \"paragraph\",\n      \"paste\",\n      \"pause\",\n      \"pause-circle\",\n      \"pause-circle-o\",\n      \"paw\",\n      \"paypal\",\n      \"pencil\",\n      \"pencil-square\",\n      \"pencil-square-o\",\n      \"percent\",\n      \"phone\",\n      \"phone-square\",\n      \"photo\",\n      \"picture-o\",\n      \"pie-chart\",\n      \"pied-piper\",\n      \"pied-piper-alt\",\n      \"pied-piper-pp\",\n      \"pinterest\",\n      \"pinterest-p\",\n      \"pinterest-square\",\n      \"plane\",\n      \"play\",\n      \"play-circle\",\n      \"play-circle-o\",\n      \"plug\",\n      \"plus\",\n      \"plus-circle\",\n      \"plus-square\",\n      \"plus-square-o\",\n      \"podcast\",\n      \"power-off\",\n      \"print\",\n      \"product-hunt\",\n      \"puzzle-piece\",\n      \"qq\",\n      \"qrcode\",\n      \"question\",\n      \"question-circle\",\n      \"question-circle-o\",\n      \"quora\",\n      \"quote-left\",\n      \"quote-right\",\n      \"ra\",\n      \"random\",\n      \"ravelry\",\n      \"rebel\",\n      \"recycle\",\n      \"reddit\",\n      \"reddit-alien\",\n      \"reddit-square\",\n      \"refresh\",\n      \"registered\",\n      \"remove\",\n      \"renren\",\n      \"reorder\",\n      \"repeat\",\n      \"reply\",\n      \"reply-all\",\n      \"resistance\",\n      \"retweet\",\n      \"rmb\",\n      \"road\",\n      \"rocket\",\n      \"rotate-left\",\n      \"rotate-right\",\n      \"rouble\",\n      \"rss\",\n      \"rss-square\",\n      \"rub\",\n      \"ruble\",\n      \"rupee\",\n      \"s15\",\n      \"safari\",\n      \"save\",\n      \"scissors\",\n      \"scribd\",\n      \"search\",\n      \"search-minus\",\n      \"search-plus\",\n      \"sellsy\",\n      \"send\",\n      \"send-o\",\n      \"server\",\n      \"share\",\n      \"share-alt\",\n      \"share-alt-square\",\n      \"share-square\",\n      \"share-square-o\",\n      \"shekel\",\n      \"sheqel\",\n      \"shield\",\n      \"ship\",\n      \"shirtsinbulk\",\n      \"shopping-bag\",\n      \"shopping-basket\",\n      \"shopping-cart\",\n      \"shower\",\n      \"sign-in\",\n      \"sign-language\",\n      \"sign-out\",\n      \"signal\",\n      \"signing\",\n      \"simplybuilt\",\n      \"sitemap\",\n      \"skyatlas\",\n      \"skype\",\n      \"slack\",\n      \"sliders\",\n      \"slideshare\",\n      \"smile-o\",\n      \"snapchat\",\n      \"snapchat-ghost\",\n      \"snapchat-square\",\n      \"snowflake-o\",\n      \"soccer-ball-o\",\n      \"sort\",\n      \"sort-alpha-asc\",\n      \"sort-alpha-desc\",\n      \"sort-amount-asc\",\n      \"sort-amount-desc\",\n      \"sort-asc\",\n      \"sort-desc\",\n      \"sort-down\",\n      \"sort-numeric-asc\",\n      \"sort-numeric-desc\",\n      \"sort-up\",\n      \"soundcloud\",\n      \"space-shuttle\",\n      \"spinner\",\n      \"spoon\",\n      \"spotify\",\n      \"square\",\n      \"square-o\",\n      \"stack-exchange\",\n      \"stack-overflow\",\n      \"star\",\n      \"star-half\",\n      \"star-half-empty\",\n      \"star-half-full\",\n      \"star-half-o\",\n      \"star-o\",\n      \"steam\",\n      \"steam-square\",\n      \"step-backward\",\n      \"step-forward\",\n      \"stethoscope\",\n      \"sticky-note\",\n      \"sticky-note-o\",\n      \"stop\",\n      \"stop-circle\",\n      \"stop-circle-o\",\n      \"street-view\",\n      \"strikethrough\",\n      \"stumbleupon\",\n      \"stumbleupon-circle\",\n      \"subscript\",\n      \"subway\",\n      \"suitcase\",\n      \"sun-o\",\n      \"superpowers\",\n      \"superscript\",\n      \"support\",\n      \"table\",\n      \"tablet\",\n      \"tachometer\",\n      \"tag\",\n      \"tags\",\n      \"tasks\",\n      \"taxi\",\n      \"telegram\",\n      \"television\",\n      \"tencent-weibo\",\n      \"terminal\",\n      \"text-height\",\n      \"text-width\",\n      \"th\",\n      \"th-large\",\n      \"th-list\",\n      \"themeisle\",\n      \"thermometer\",\n      \"thermometer-0\",\n      \"thermometer-1\",\n      \"thermometer-2\",\n      \"thermometer-3\",\n      \"thermometer-4\",\n      \"thermometer-empty\",\n      \"thermometer-full\",\n      \"thermometer-half\",\n      \"thermometer-quarter\",\n      \"thermometer-three-quarters\",\n      \"thumb-tack\",\n      \"thumbs-down\",\n      \"thumbs-o-down\",\n      \"thumbs-o-up\",\n      \"thumbs-up\",\n      \"ticket\",\n      \"times\",\n      \"times-circle\",\n      \"times-circle-o\",\n      \"times-rectangle\",\n      \"times-rectangle-o\",\n      \"tint\",\n      \"toggle-down\",\n      \"toggle-left\",\n      \"toggle-off\",\n      \"toggle-on\",\n      \"toggle-right\",\n      \"toggle-up\",\n      \"trademark\",\n      \"train\",\n      \"transgender\",\n      \"transgender-alt\",\n      \"trash\",\n      \"trash-o\",\n      \"tree\",\n      \"trello\",\n      \"tripadvisor\",\n      \"trophy\",\n      \"truck\",\n      \"try\",\n      \"tty\",\n      \"tumblr\",\n      \"tumblr-square\",\n      \"turkish-lira\",\n      \"tv\",\n      \"twitch\",\n      \"twitter\",\n      \"twitter-square\",\n      \"umbrella\",\n      \"underline\",\n      \"undo\",\n      \"universal-access\",\n      \"university\",\n      \"unlink\",\n      \"unlock\",\n      \"unlock-alt\",\n      \"unsorted\",\n      \"upload\",\n      \"usb\",\n      \"usd\",\n      \"user\",\n      \"user-circle\",\n      \"user-circle-o\",\n      \"user-md\",\n      \"user-o\",\n      \"user-plus\",\n      \"user-secret\",\n      \"user-times\",\n      \"users\",\n      \"vcard\",\n      \"vcard-o\",\n      \"venus\",\n      \"venus-double\",\n      \"venus-mars\",\n      \"viacoin\",\n      \"viadeo\",\n      \"viadeo-square\",\n      \"video-camera\",\n      \"vimeo\",\n      \"vimeo-square\",\n      \"vine\",\n      \"vk\",\n      \"volume-control-phone\",\n      \"volume-down\",\n      \"volume-off\",\n      \"volume-up\",\n      \"warning\",\n      \"wechat\",\n      \"weibo\",\n      \"weixin\",\n      \"whatsapp\",\n      \"wheelchair\",\n      \"wheelchair-alt\",\n      \"wifi\",\n      \"wikipedia-w\",\n      \"window-close\",\n      \"window-close-o\",\n      \"window-maximize\",\n      \"window-minimize\",\n      \"window-restore\",\n      \"windows\",\n      \"won\",\n      \"wordpress\",\n      \"wpbeginner\",\n      \"wpexplorer\",\n      \"wpforms\",\n      \"wrench\",\n      \"xing\",\n      \"xing-square\",\n      \"y-combinator\",\n      \"y-combinator-square\",\n      \"yahoo\",\n      \"yc\",\n      \"yc-square\",\n      \"yelp\",\n      \"yen\",\n      \"yoast\",\n      \"youtube\",\n      \"youtube-play\",\n      \"youtube-square\",\n   ],\n};\n","import ABFactoryCore from \"./core/ABFactoryCore\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport performance from \"../utils/performance\";\nimport FilterComplex from \"./platform/FilterComplex\";\nimport SortPopup from \"./platform/views/ABViewGridPopupSortFields\";\nimport Papa from \"papaparse\";\n\n//\n// Our Common Resources\n//\nimport Config from \"../config/Config.js\";\n// Config : responsible for all the configuration/settings of our instance.\n\nimport Account from \"../resources/Account.js\";\n// Account : manages the current Logged in User and Account information.\n\nimport ClassUI from \"../ui/ClassUI.js\";\n\nimport Dialog from \"./_factory_utils/Dialog.js\";\n// Dialog : common UI dialogs.\n\nimport Multilingual from \"../resources/Multilingual.js\";\n// Multilingual: our interface Labels and language options\n\nimport Network from \"../resources/Network.js\";\n// Network: our interface for communicating to our server\n\nimport Storage from \"../resources/Storage.js\";\n// Storage: manages our interface for local storage\n\nimport ABViewManager from \"./core/ABViewManagerCore\";\n\nimport Tenant from \"../resources/Tenant.js\";\n// Tenant: manages the Tenant information of the current instance\n\nimport UISettings from \"./uiSettings/config.js\";\nimport ABViewComponent from \"./platform/views/viewComponent/ABViewComponent.js\";\n// UISettings: detailed settings for our common UI elements\n\nclass ABValidator {\n   constructor(AB) {\n      this.AB = AB;\n      this.errors = [];\n   }\n\n   addError(name, message) {\n      this.errors.push({ name: name, message: message });\n   }\n\n   pass() {\n      return this.errors.length == 0;\n   }\n\n   fail() {\n      return this.errors.length > 0;\n   }\n\n   toValidationObject() {\n      var obj = {\n         error: \"E_VALIDATION\",\n         invalidAttributes: {},\n      };\n\n      var attr = obj.invalidAttributes;\n\n      this.errors.forEach((e) => {\n         attr[e.name] = attr[e.name] || [];\n         attr[e.name].push(e);\n      });\n\n      return obj;\n   }\n\n   updateForm(form) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isFormValidationError(vObj, form);\n   }\n\n   updateGrid(rowID, grid) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isGridValidationError(vObj, rowID, grid);\n   }\n}\n\n//\n// AppBuilder Objects\n//\n\nclass ABFactory extends ABFactoryCore {\n   constructor(definitions) {\n      super(definitions);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // Resources\n      //\n      this.Account = Account;\n      this.Dialog = Dialog;\n      this.Multilingual = Multilingual;\n      this.Network = Network;\n      this.Storage = Storage;\n      this.Tenant = Tenant;\n      this.Webix = webix;\n\n      // Plugin Classes\n      this.ClassUI = ClassUI;\n\n      // additional Class definitions\n      this.Class.FilterComplex = FilterComplex;\n      this.Class.ABViewManager = ABViewManager;\n      this.Class.SortPopup = SortPopup;\n      this.Class.ABViewComponent = ABViewComponent;\n\n      // Temp placeholders until Resources are implemented:\n      this.Analytics = {\n         log: () => {},\n         logError: () => {},\n      };\n      this.Lock = class Lock {\n         constructor() {}\n\n         acquire() {\n            return Promise.resolve();\n         }\n         release() {\n            return Promise.resolve();\n         }\n      };\n\n      this.performance = performance;\n\n      this.UISettings = UISettings;\n\n      this.Validation = {\n         validator: () => {\n            return new ABValidator(this);\n         },\n\n         errorSailsCleanup: function (error) {\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               // dig down to sails provided error object:\n               if (\n                  error.error &&\n                  error.error == \"E_UNKNOWN\" &&\n                  error.raw &&\n                  error.raw.length > 0\n               ) {\n                  error = error.raw[0];\n               }\n\n               // drill down to the embedded .err object if it exists\n               if (error.err) {\n                  error = error.err;\n               }\n\n               // if this is from our server response:\n               if (\n                  error.data &&\n                  error.data.error &&\n                  error.data.error == \"E_VALIDATION\"\n               ) {\n                  error = error.data;\n               }\n            }\n\n            return error;\n         },\n\n         /**\n          * @function AB.Validation.isFormValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of the form elements.\n          *\n          * @codestart\n          * var form = $$('formID');\n          * var values = form.getValues();\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Form.isFormValidationError(err, form)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {obj} error\n          *        the error response object\n          * @param {obj} form\n          *        the webix form instance (or reference)\n          * @return {bool}\n          *         true if error was about a form element.\n          *         false otherwise.\n          */\n         isFormValidationError: function (error, form) {\n            var hasFocused = false;\n            // {bool} have we set focus to form component?\n\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasForm = false;\n                     for (var attr in attrs) {\n                        // if this is a field in the form:\n                        if (form.elements[attr]) {\n                           var errors = attrs[attr];\n                           var msg = [];\n                           errors.forEach(function (err) {\n                              msg.push(err.message);\n                           });\n\n                           // set the invalid error message\n                           form.markInvalid(attr, msg.join(\", \"));\n\n                           // set focus to the 1st form element we mark:\n                           if (!hasFocused) {\n                              form.elements[attr].focus();\n                              hasFocused = true;\n                           }\n\n                           wasForm = true;\n                        }\n                     }\n\n                     if (wasForm) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our form with an error\n            // this was not a validation error so return false\n            return false;\n         },\n\n         /**\n          * @method AB.Validation.isGridValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of our grid columns.\n          *\n          * @codestart\n          * var grid = $$('myGrid');\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Validation.isGridValidationError(err, editor, grid)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {Error} error\n          *        the error response object\n          * @param {integer} row\n          *        the row id of the Grid to update.\n          * @param {webix.datatable} Grid\n          *        the webix grid instance (or reference)\n          * @return {bool}\n          *         true if error was about a grid column.\n          *         false otherwise.\n          */\n         isGridValidationError: function (error, row, Grid) {\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasGrid = false;\n                     for (var attr in attrs) {\n                        Grid.addCellCss(row, attr, \"webix_invalid\");\n                        Grid.addCellCss(row, attr, \"webix_invalid_cell\");\n\n                        var msg = [];\n                        attrs[attr].forEach((e) => {\n                           msg.push(e.message);\n                        });\n\n                        webix.alert({\n                           text: attr + \": \" + msg.join(\", \"),\n                        });\n\n                        wasGrid = true;\n                     }\n\n                     Grid.refresh(row);\n                     Grid.clearSelection();\n\n                     if (wasGrid) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our Grid with an error\n            // this was not a validation error so return false\n            return false;\n         },\n      };\n\n      // TODO: make sure \"error\" s are handled and sent to logs\n      // this.on(\"error\", ()=>{ Analytics.error })\n\n      this.Definitions = {};\n      // {obj} the provided interface for working with the ABDefinition table.\n      // NOTE: on the web client, we simply perform web API calls to perform\n      // the actions.  These are defined below.\n\n      this.on(\"error\", (err) => {\n         // this simply prevents thrown errors if there are no listeners.\n         console.error(err);\n      });\n\n      this._plugins = [];\n      // {array} of loaded Plugin.applications.\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our definitionsXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this.Network.on(\"definition.create\", (context, err, fullDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: fullDef.id,\n            data: fullDef,\n         };\n         this.emit(\"ab.abdefinition.create\", pkt);\n\n         let newDef = this.definitionNew(fullDef);\n         pending?.resolve(newDef);\n      });\n\n      this.Network.on(\"definition.update\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            if (err.toString().indexOf(\"Not Found\") > -1) {\n               return this.definitionCreate(context.values)\n                  .then(pending?.resolve)\n                  .catch(pending?.reject);\n            }\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         this._definitions[context.id] = serverDef;\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: serverDef.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.update\", pkt);\n\n         pending?.resolve(serverDef);\n      });\n\n      this.Network.on(\"definition.delete\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         delete this._definitions[context.id];\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: context.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.delete\", pkt);\n\n         pending?.resolve();\n      });\n\n      //\n      // Rules\n      //\n      const platformRules = {\n         /**\n          * @method toDate\n          *\n          * @param {string} dateText\n          * @param {Object} options - {\n          *                               format: \"string\",\n          *                               ignoreTime: boolean\n          *                            }\n          * @return {Date}\n          */\n         toDate: (dateText = \"\", options = {}) => {\n            if (!dateText) return;\n\n            if (options.ignoreTime) dateText = dateText.replace(/T.*/, \"\");\n\n            let result = options.format\n               ? moment(dateText, options.format)\n               : moment(dateText);\n\n            let supportFormats = [\n               \"YYYY-MM-DD\",\n               \"YYYY/MM/DD\",\n               \"DD/MM/YYYY\",\n               \"MM/DD/YYYY\",\n               \"DD-MM-YYYY\",\n               \"MM-DD-YYYY\",\n            ];\n\n            supportFormats.forEach((format) => {\n               if (!result || !result.isValid())\n                  result = moment(dateText, format);\n            });\n\n            return new Date(result);\n         },\n\n         /**\n          * @method toDateFormat\n          *\n          * @param {Date} date\n          * @param {Object} options - {\n          *           format: \"string\",\n          *           localeCode: \"string\"\n          *         }\n          *\n          * @return {string}\n          */\n         toDateFormat: (date, options) => {\n            if (!date) return \"\";\n\n            let momentObj = moment(date);\n\n            if (options.localeCode) momentObj.locale(options.localeCode);\n\n            return momentObj.format(options.format);\n         },\n\n         /**\n          * @method subtractDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         subtractDate: (date, number, unit) => {\n            return moment(date).subtract(number, unit).toDate();\n         },\n\n         /**\n          * @method addDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         addDate: (date, number, unit) => {\n            return moment(date).add(number, unit).toDate();\n         },\n\n         /**\n          * Get today's UTC time range in \"YYYY-MM-DD HH:MM:SS\" format.\n          *\n          * It converts the start and end of today to UTC to keep things consistent\n          * across time zones. Handy when you need to deal with dates in different regions.\n          *\n          * @returns {string} UTC time range for today.\n          */\n\n         getUTCDayTimeRange: () => {\n            let now = new Date();\n            let year = now.getFullYear();\n            let month = now.getMonth();\n            let date = now.getDate();\n            let startOfDay = new Date(year, month, date, 0, 0, 0);\n            let endOfDay = new Date(year, month, date, 23, 59, 59);\n\n            // Convert to UTC by subtracting the timezone offset\n            let startOfDayUTC = new Date(\n               startOfDay.getTime() + startOfDay.getTimezoneOffset() * 60000\n            );\n            let endOfDayUTC = new Date(\n               endOfDay.getTime() + endOfDay.getTimezoneOffset() * 60000\n            );\n\n            //  Format the date in \"YYYY-MM-DD HH:MM:SS\" format\n            let formatDate = (date) => {\n               let isoString = date.toISOString();\n               return `${isoString.slice(0, 10)} ${isoString.slice(11, 19)}`;\n            };\n            return formatDate(startOfDayUTC).concat(\n               \"|\",\n               formatDate(endOfDayUTC)\n            );\n         },\n      };\n      (Object.keys(platformRules) || []).forEach((k) => {\n         this.rules[k] = platformRules[k];\n      });\n   }\n\n   /**\n    * init()\n    * prepare the ABFactory for operation. This includes parsing the\n    * definitions into useable objects, preparing the System Resources, etc.\n    * @return {Promise}\n    */\n   async init() {\n      //\n      // Prepare our Resources First\n      //\n      var allInits = [];\n\n      allInits.push(this.Account.init(this));\n      allInits.push(this.Multilingual.init(this));\n      allInits.push(this.Network.init(this));\n      allInits.push(this.Tenant.init(this));\n\n      await Promise.all(allInits);\n      await this.Storage.init(this);\n      var data = await this.Storage.get(\"local_settings\");\n      this._localSettings = data || {};\n\n      //\n      // Real Time Update Handlers\n      //\n\n      // new ABDefinition created:\n      this.on(\"ab.abdefinition.create\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"created\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition updated:\n      this.on(\"ab.abdefinition.update\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"updated\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition delete:\n      this.on(\"ab.abdefinition.delete\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         delete this._definitions[pkt.id];\n         this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      });\n\n      return super.init();\n\n      // return Promise.all(allInits)\n      //    .then(() => {\n      //       // some Resources depend on the above to be .init() before they can\n      //       // .init() themselves.\n      //       return this.Storage.init(this).then(() => {\n      //          return this.Storage.get(\"local_settings\").then((data) => {\n      //             this._localSettings = data || {};\n      //          });\n      //       });\n      //    })\n      //    .then(() => {\n      //       //\n      //       // RealTime Updates of our ABDefinitions\n      //       //\n\n      //       // new ABDefinition created:\n      //       this.on(\"ab.abdefinition.create\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"created\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition updated:\n      //       this.on(\"ab.abdefinition.update\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"updated\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition delete:\n      //       this.on(\"ab.abdefinition.delete\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          delete this._definitions[pkt.id];\n      //          this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      //       });\n\n      //       return super.init();\n      //    });\n   }\n\n   /**\n    * definiitonCreate(def)\n    * create a new ABDefinition\n    * @param {obj} def\n    *        the value hash of the new definition entry\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionCreate(def) {\n      // we will set our uuid\n      if (typeof def.id == \"undefined\") {\n         def.id = this.uuid();\n         def.json.id = def.id;\n      }\n\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.create\",\n            context: {\n               uuid,\n            },\n         };\n         this.Network.post(\n            {\n               url: `/definition/create`,\n               data: def,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to CREATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to CREATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionCreate()\",\n               message,\n               def,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionDestroy(id)\n    * delete an ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @return {Promise}\n    */\n   async definitionDestroy(id) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.delete\",\n            context: {\n               id,\n               uuid,\n            },\n         };\n         this.Network.delete(\n            {\n               url: `/definition/${id}`,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to DESTROY definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to DELETE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionDestroy()\",\n               message,\n               id,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionUpdate(id, def)\n    * update an existing ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to update.\n    * @param {obj} values\n    *        the value hash of the new definition values\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionUpdate(id, values) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.update\",\n            context: {\n               id,\n               uuid,\n               values,\n            },\n         };\n         this.Network.put(\n            {\n               url: `/definition/${id}`,\n               data: values,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to UPDATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to UPDATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionUpdate()\",\n               message,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   // definitionsParse(defs = []) {\n   //    if (!Array.isArray(defs)) {\n   //       defs = [defs];\n   //    }\n\n   //    // store/replace the incoming definitions\n   //    // 1st: insert ALL our definitions internally\n   //    defs.forEach((d) => {\n   //       this._definitions[d.id] = d;\n   //    });\n   //    // 2nd: Now we can then go through and signal the \"updates\"\n   //    // and the related objects can find their dependent definitions.\n   //    defs.forEach((d) => {\n   //       this.definitionSync(\"updated\", d.id, d);\n   //    });\n\n   //    return Promise.resolve();\n   // }\n\n   /**\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain which group of people we are sending a notification to.\n    * @param {Error} error An error object generated at the point of issue.\n    * @param {json} info Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      performance.notify(domain, error, info);\n   }\n\n   plugins() {\n      return this._plugins;\n   }\n   pluginLoad(p) {\n      this._plugins.push(p);\n   }\n\n   //\n   // Utilities\n   //\n   alert(options) {\n      this.Webix.alert(options);\n   }\n\n   cloneDeep(value) {\n      return _.cloneDeep(value);\n   }\n\n   error(message, ...rest) {\n      var emitData = {\n         message: `ABFactory[${this.Tenant.id()}]:${message.toString()}`,\n      };\n\n      console.error(emitData.message);\n      if (message instanceof Error) {\n         emitData.error = message;\n         // this dumps the error.stack\n         console.error(message);\n      }\n\n      if (rest.length > 0) {\n         rest.forEach((r) => {\n            if (r instanceof Error) {\n               emitData.error = r;\n               // this dumps the error.stack\n               console.error(r);\n            }\n\n            if (typeof r == \"object\") {\n               for (var k in r) {\n                  emitData[k] = r[k];\n                  console.error(k, r[k]);\n               }\n            }\n         });\n      }\n      this.emit(\"error\", emitData);\n   }\n\n   jobID() {\n      return nanoid();\n   }\n\n   Label() {\n      return (...params) => {\n         return this.Multilingual.label(...params);\n      };\n   }\n\n   localSettings(key, value) {\n      if (typeof value == \"undefined\") {\n         // this is a getter:\n         return this._localSettings[key];\n      } else {\n         // setting a value:\n         this._localSettings[key] = value;\n         return this.Storage.set(`local_settings`, this._localSettings);\n      }\n   }\n\n   log(message, ...rest) {\n      console.log(message);\n      rest.forEach((r) => {\n         console.log(r);\n      });\n   }\n\n   isNil(value) {\n      return _.isNil(value);\n   }\n\n   /**\n    * @method rules.isUUID\n    * evaluate a given value to see if it matches the format of a uuid\n    * @param {string} key\n    * @return {boolean}\n    */\n   isUUID(key) {\n      var checker = RegExp(\n         \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n         \"i\"\n      );\n      return checker.test(key);\n   }\n\n   merge(...params) {\n      return _.merge(...params);\n   }\n\n   orderBy(...params) {\n      return _.orderBy(...params);\n   }\n\n   uniq(...params) {\n      return _.uniq(...params);\n   }\n\n   kebabCase(...params) {\n      return _.kebabCase(...params);\n   }\n\n   sumBy(...params) {\n      return _.sumBy(...params);\n   }\n\n   meanBy(...params) {\n      return _.meanBy(...params);\n   }\n\n   maxBy(...params) {\n      return _.maxBy(...params);\n   }\n\n   minBy(...params) {\n      return _.minBy(...params);\n   }\n\n   uuid() {\n      return uuidv4();\n   }\n\n   warn(message, ...rest) {\n      console.warn(message);\n      rest.forEach((r) => {\n         console.warn(r);\n      });\n   }\n\n   isString(...params) {\n      return _.isString(params);\n   }\n\n   async scriptLoad(url) {\n      await new Promise((resolve, reject) => {\n         var cb = () => resolve();\n         // Adding the script tag to the head as suggested before\n         const head = document.head;\n         const script = document.createElement(\"script\");\n         script.type = \"text/javascript\";\n         script.src = url;\n\n         // Then bind the event to the callback function.\n         // There are several events for cross browser compatibility.\n         script.onreadystatechange = cb;\n         script.onload = cb;\n         script.onerror = () => {\n            reject(\n               new Error(\n                  `Preloader:ScriptLoad(): Error loading script (${url})`\n               )\n            );\n         };\n         // Fire the loading\n         head.appendChild(script);\n      });\n   }\n\n   async scriptLoadAll(urls) {\n      urls = urls.filter((u) => u);\n      await Promise.all(urls.map((url) => this.scriptLoad(url)));\n   }\n\n   async cssLoad(url) {\n      await new Promise((resolve, reject) => {\n         const head = document.head;\n         const link = document.createElement(\"link\");\n         link.rel = \"stylesheet\";\n         link.href = url;\n\n         link.onload = () => resolve();\n         link.onerror = () => {\n            reject(new Error(`Error loading CSS file (${url})`));\n         };\n\n         head.appendChild(link);\n      });\n   }\n\n   async cssLoadAll(urls) {\n      urls = urls.filter((u) => u);\n      await Promise.all(urls.map((url) => this.cssLoad(url)));\n   }\n\n   csvToJson(csvData) {\n      return Papa.parse(csvData, {\n         header: true,\n         skipEmptyLines: true,\n      });\n   }\n\n   jsonToCsv(jsonData) {\n      return Papa.unparse(jsonData);\n   }\n}\n\nexport default ABFactory;\n","/**\n * ABApplicationCore\n *\n * This is the core ABApplication class that manages the common operations\n * of an ABApplication across platforms.\n *\n * It's primary responsibility is to decode a given set of attributes into\n * a working instance of an ABApplication that can return instances of\n * it's defined sub objects.\n *\n * Platform Specific versions of those objects should be defined in a peer\n * directory named platform. These versions of the objects should override\n * these Core objects with platform specific methods of operation (like\n * .save()).\n *\n * Initially your target application should load your platform/ABApplication.js\n * file, which will include this file and sub class it.\n *\n * However, this file will include the remaining files from your platform/*\n * versions.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManager = require(\"../platform/ABViewManager\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nfunction toBool(val) {\n   if (typeof val == \"undefined\") {\n      return false;\n   }\n\n   if (val === \"\" || val === \"false\" || val === \"0\") {\n      return false;\n   }\n\n   if (val === \"true\" || val === \"1\") {\n      return true;\n   }\n\n   return val;\n}\n\nmodule.exports = class ABApplicationCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\", \"description\"], AB);\n\n      // attributes should be in format:\n      // {\n      //    id:##,\n      //    json:{},\n      //    name:\"XYZ\"\n      // }\n      attributes.json = attributes.json || {};\n\n      // ABApplication Attributes\n      this.id = attributes.id;\n      // {string} uuid\n\n      this.type = attributes.type || \"application\";\n      // {string} .type\n      // the ABDefinition.type of this object.\n\n      this.appType = attributes.appType || \"web\";\n      // {string} .appType\n      // the kind of Application this is. [\"web\", \"mobile\"]\n\n      this.json = attributes.json;\n      if (typeof this.json == \"string\") this.json = JSON.parse(this.json);\n      // {obj} .json\n      // the full settings of this ABApplication\n\n      this.json[\"versionData\"] = attributes.json?.versionData || {\n         versionNumber: \"1.0.0\",\n         changeLog: {\n            \"1.0.0\": {\n               author: \"N/A\",\n               version: \"1.0.0\",\n               keepVersion: 0,\n               commitMessage: \"Initial Version\",\n               timestamp: new Date().toISOString(),\n            },\n         },\n      };\n\n      if (typeof this.json.versionData == \"string\")\n         this.json.versionData = JSON.parse(this.json.versionData);\n      // {obj} .json\n      // the full version log data of this ABApplication\n\n      this.name = attributes.name || this.json.name || \"\";\n      // {string} .name\n      // the hard coded name of this ABDefinition Object, not to be confused\n      // with the .label.  The .name is created at design time and is a text\n      // reference for this object.\n\n      this.icon = attributes.icon || \"fa-rocket\";\n      // {string} .icon\n      // this is a reference to a font awesome icon including the `fa-`\n      // example `fa-child` should be stored for the `child` icon to be used\n      // if user wants to get creative they can add more to this field following\n      // these examples https://fontawesome.com/v4/examples/\n\n      this.isSystemObject = toBool(attributes.isSystemObject);\n      // {bool} .isSystemObject\n      // is this one of the integrated System Objects used by our framework?\n      // Some ABApplications and ABObjects are central to the running of the\n      // AppBuilder site.  They are marked with .isSystemObject = true;  It\n      // requires the role \"System Designer\" in order to edit/modify them.\n\n      this.roleAccess = attributes.roleAccess || [];\n      if (!Array.isArray(this.roleAccess)) {\n         this.roleAccess = [this.roleAccess];\n      }\n      this.roleAccess = this.roleAccess.filter((r) => r);\n      // {array}\n      // the {ABSiteRole.id}s of the roles allowed to work with this\n      // ABApplication. (see .isAccessManaged for more info)\n\n      this.isAccessManaged = JSON.parse(attributes.isAccessManaged || false);\n      // {bool} .isAccessManaged\n      // does this Application imploy the more sophisticated  Access\n      // permissions, or the simpler Role access permissions.\n      // {true} : allows an administrator to set which role can View|Edit|Delete\n      //          elements of an application.\n      // {false}: indicates users having one of the .roleAccess values can have\n      //          full access to this application\n\n      this.accessManagers = attributes.accessManagers;\n      if (typeof this.accessManagers == \"string\")\n         this.accessManagers = JSON.parse(this.accessManagers);\n      // {??} .accessManagers\n      // if .isAccessManaged == true, then .accessManagers contain the definitions\n      // of the detailed access permissions.\n\n      this.isTranslationManaged = JSON.parse(\n         attributes.isTranslationManaged || false\n      );\n      this.translationManagers = attributes.translationManagers;\n      if (typeof this.translationManagers == \"string\")\n         this.translationManagers = JSON.parse(this.translationManagers);\n\n      this.isTutorialManaged = JSON.parse(\n         attributes.isTutorialManaged || false\n      );\n      this.tutorialManagers = attributes.tutorialManagers;\n      if (typeof this.tutorialManagers == \"string\")\n         this.tutorialManagers = JSON.parse(this.tutorialManagers);\n\n      this.hintIDs = attributes.json.hintIDs || [];\n      // {array} .hintIDs\n      // All the {ABHint.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABHint}s are included or excluded from\n      // this app.\n\n      this.objectIDs = attributes.json.objectIDs || [];\n      // {array} .objectIDs\n      // All the {ABObject.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObject}s are included or excluded from this app.\n\n      this.queryIDs = attributes.json.queryIDs || [];\n      // {array} .queryIDs\n      // All the {ABObjectQuery.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObjectQueries}s are included or excluded from\n      // this app.\n\n      this.datacollectionIDs = attributes.json.datacollectionIDs || [];\n      // {array} .datacollectionIDs\n      // All the {ABDataCollection.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABDataCollection}s are included or excluded from\n      // this app.\n\n      // import all our {ABViewPage}s\n      let newPages = [];\n      (attributes.json.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            newPages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.id}] is referenceing an unknown Page[${id}]`,\n               {\n                  appID: this.id,\n                  pageID: id,\n               }\n            );\n            // console.error(\n            //    `App[${this.id}] is referenceing an unknown Page[${id}]`\n            // );\n         }\n      });\n      this._pages = newPages;\n      // {array} ._pages\n      // an array of all the {ABViewPages} this ABApplication offers as\n      // interfaces for working with our Data.\n      // ABViewPages operate within the confines of an ABApplication so\n      // they are created/stored/accessed from within an ABApplication\n\n      (attributes.json.processIDs || []).forEach((pID) => {\n         var p = this.AB.processByID(pID);\n         if (!p) {\n            this.emit(\n               \"warning\",\n               `Application is referencing an unknown process.`,\n               { appID: this.id, processID: pID }\n            );\n         }\n      });\n\n      this.processIDs = attributes.json.processIDs || [];\n      // {array} .processIDs\n      // an array of all the {ABProcess.id}s referenced by this Application.\n\n      // Object List Settings\n      attributes.json.objectListSettings =\n         attributes.json.objectListSettings || {};\n      this.objectListSettings = this.objectListSettings || {};\n      this.objectListSettings.isOpen = JSON.parse(\n         attributes.json.objectListSettings.isOpen || false\n      );\n      this.objectListSettings.searchText =\n         attributes.json.objectListSettings.searchText || \"\";\n      this.objectListSettings.sortDirection =\n         attributes.json.objectListSettings.sortDirection || \"asc\";\n      this.objectListSettings.isGroup = JSON.parse(\n         attributes.json.objectListSettings.isGroup || false\n      );\n\n      // let the MLClass now process the translations:\n      // transition issues:\n      attributes.translations =\n         attributes.translations || attributes.json.translations;\n\n      super.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   get ViewManager() {\n      return ABViewManager;\n   }\n\n   /// ABApplication data methods\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABApplication is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      // if we are on the basic Role assignments:\n      if (!this.isAccessManaged) {\n         (roles || []).forEach((r) => {\n            if (this.roleAccess.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n         return foundRole;\n      }\n\n      // isAccessManaged has been set, so 2 kinds of ppl can\n      // see this App\n      // 1) an AccessManager\n      if (parseInt(this.accessManagers.useRole)) {\n         (roles || []).forEach((r) => {\n            if (this.accessManagers.role.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n      }\n\n      // stop here if found.\n      if (foundRole) return foundRole;\n\n      // 2) someone who has a role that can see one of it's pages.\n      // scan each Page of this Application\n      (this.pages() || []).forEach((p) => {\n         // check to see if that page.isAccessibleForRoles()\n         if (p.isAccessibleForRoles(roles)) {\n            foundRole = true;\n         }\n      });\n      return foundRole;\n   }\n\n   get isWebApp() {\n      return this.appType == \"web\";\n   }\n\n   get isMobile() {\n      return this.appType == \"mobile\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      let versionData = this.json.versionData;\n\n      this.json = super.toObj();\n\n      this.json.name = this.name;\n\n      this.json.versionData = versionData;\n\n      this.json.objectIDs = this.objectIDs;\n\n      this.json.objectListSettings = this.objectListSettings;\n\n      this.json.hintIDs = this.hintIDs;\n\n      this.json.queryIDs = this.queryIDs;\n\n      this.json.datacollectionIDs = this.datacollectionIDs;\n\n      this.json.pageIDs = (this._pages || []).map((p) => p.id);\n\n      this.json.processIDs = this.processIDs || [];\n\n      // // for each MobileApp: compile to json\n      // var currApps = [];\n      // this._mobileApps.forEach((app) => {\n      //    currApps.push(app.toObj())\n      // })\n      // this.json.mobileApps = currApps;\n\n      return {\n         id: this.id,\n         type: this.type || \"application\",\n         appType: this.appType || \"web\",\n         name: this.name,\n         icon: this.icon,\n         isSystemObject: this.isSystemObject,\n         json: this.json,\n         roleAccess: this.roleAccess,\n         translations: this.json.translations,\n         isAccessManaged: this.isAccessManaged,\n         isTranslationManaged: this.isTranslationManaged,\n         isTutorialManaged: this.isTutorialManaged,\n         accessManagers: this.accessManagers,\n         translationManagers: this.translationManagers,\n         tutorialManagers: this.tutorialManagers,\n      };\n   }\n\n   ///\n   /// Mobile Apps\n   ///\n\n   ///\n   /// Datacollections\n   ///\n\n   // datacollectionNew(values) {\n   //    return new ABDataCollectionCore(values, this);\n   // }\n\n   datacollectionsExcluded(filter = () => true) {\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   datacollectionsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Objects\n   ///\n\n   objectsExcluded(filter = () => true) {\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   objectsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Hints\n   ///\n\n   hintsExcluded(filter = () => true) {\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) == -1;\n      }).filter(filter);\n   }\n\n   hintsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   /**\n    * @method connectedObjects()\n    *\n    * return an array of all the connected ABObjects for a given ABObject.\n    *\n    * @param {string} id\n    *        an ID of an ABObject\n    * @return {array}   array of options for webix select\n    *         [ {id, value}, ... ]\n    */\n   connectedObjects(id) {\n      console.error(\n         \"ABApplicationCore.connectedObjects(): who is calling this?\"\n      );\n\n      if (id == \"\") return [];\n\n      // Determine the object from the ID\n      var myObj = this.AB.objectByID(id);\n\n      // Get all the connected Fields for that object\n      var connectedFields = myObj.connectFields();\n      // Store the related fields associatively inside their related Objects ID\n      var connectedObj = {};\n      connectedFields.forEach((f) => {\n         connectedObj[f.settings.linkObject] = this.AB.objectByID(\n            f.settings.linkObject\n         );\n      });\n      // Look up the objects by their ID and push them in an options array\n      var linkedObjects = [];\n      Object.keys(connectedObj).forEach(function (key /*, index */) {\n         linkedObjects.push({\n            id: this[key].id,\n            value: this[key].label,\n         });\n      }, connectedObj /* = this. inside fn */);\n\n      return linkedObjects;\n   }\n\n   /**\n    * @method connectedFields()\n    * return an array of all the connected ABFields for a given ABObject\n    * @param {string} currObjID\n    *        an ID of the current ABObject\n    * @param {string} linkedObjectID\n    *        an ID of the linked ABObject\n    * @return {array}\n    *        array of options for webix select\n    */\n   connectedFields(currObjID, linkedObjectID) {\n      console.error(\"!!! Who is calling this?\");\n\n      // Determine the object from the currObjID\n      var myObj = this.AB.objectByID(currObjID);\n\n      // Get all the connected Fields for our object that match the linkedObjectID\n      var connectedFields = myObj.connectFields(\n         (f) => f.settings.linkObject == linkedObjectID\n      );\n      // Build an arry of options for the webix select\n      var linkedFields = [];\n      connectedFields.forEach((f) => {\n         linkedFields.push({ id: f.columnName, value: f.label });\n      });\n\n      return linkedFields;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    * return an array of all the ABViewPages for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewPages that this fn\n    *        returns true for.\n    * @param {boolean} deep\n    *        flag to search in sub pages\n    * @return {array}\n    *        array of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._pages || this._pages.length < 1) return result;\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         // function searchDeep(curr) {\n         //    let resultsCurr = curr._pages.filter(filter);\n\n         //    for (let p of curr._pages) {\n         //       let resultsP = searchDeep(p);\n         //       if (resultsP.length) {\n         //          resultsCurr = resultsCurr.concat(resultsP);\n         //       }\n         //    }\n         //    // if we get here, end\n         //    return resultsCurr;\n         // }\n\n         // result = searchDeep(this);\n         result = this._searchDeep(this, \"_pages\", filter);\n      }\n      // find root pages\n      else {\n         result = (this._pages || []).filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method _searchDeep()\n    * search each node of a tree and return all matches that pass the provided\n    * filter.\n    * @param {AB*} curr\n    *        An object that contains a tree structure.\n    * @param {string} key\n    *        The curr[key] reference of the array of items to search\n    * @param {function} filter\n    *        The curr[key].filter(filter) that returns true/false if a node is\n    *        to be included in the result.\n    * @return {array}\n    */\n   _searchDeep(curr, key, filter) {\n      let items = curr[key] ?? [];\n      let resultsCurr = items.filter?.(filter) ?? [];\n\n      for (let p of items) {\n         let resultsP = this._searchDeep(p, key, filter);\n         if (resultsP.length) {\n            resultsCurr = resultsCurr.concat(resultsP);\n         }\n      }\n\n      return resultsCurr;\n   }\n\n   ///\n   /// Processes\n   ///\n\n   /**\n    * @method processes()\n    * return an array of all the ABProcesses for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABProcesses that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABProcesses\n    */\n   processes(filter = () => true) {\n      return this.AB.processes((p) => {\n         return this.processIDs.indexOf(p.id) > -1;\n      }).filter(filter);\n   }\n\n   hasProcess(process) {\n      if (process && process.id) {\n         return this.processIDs.indexOf(process.id) > -1;\n      } else {\n         return false;\n      }\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    * return an array of all the Views for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of Views that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of Views\n    */\n   views(filter) {\n      var result = [];\n      var views = [];\n      var pages = [];\n\n      if (\n         (!this._pages || this._pages.length < 1) &&\n         (!this._views || this._views.length < 1)\n      )\n         return result;\n\n      function lookDeep(view) {\n         if (view._pages && view._pages.length) {\n            view._pages.forEach((p) => {\n               // check the page views recusively\n               var pageViews = p.views(filter, true);\n               // if there was a match store it\n               if (pageViews && pageViews.length > 0) {\n                  result = pageViews;\n               }\n               // if no match move on to the subpages\n               if (result.length < 1) {\n                  // loop through each subpage recursively\n                  var subPages = p.pages(filter, true);\n                  // if there was a match store it\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n                  if (result.length < 1) {\n                     lookDeep(p);\n                  }\n               }\n            });\n         }\n      }\n\n      // look at views recursively\n      if (filter) {\n         // look at views recursively (views can have subviews and so on)\n         if (this._views) {\n            views = this._views.filter(filter);\n\n            if (views.length < 1) {\n               this._views.forEach((v) => {\n                  var subViews = v.views(filter, true);\n                  if (subViews && subViews.length > 0) {\n                     views = subViews;\n                  }\n               });\n            }\n         }\n\n         // if no views of the root page match now look at the sub pages and their views\n         if (views.length) {\n            result = views;\n         } else {\n            // check the first level subpages\n            result = this._pages.filter(filter);\n\n            // if no match check each pages views and subpages\n            if (result.length < 1) {\n               // looping through pages\n               lookDeep(this);\n            }\n         }\n      }\n      // find all views\n      else {\n         // recusively gather all views on this view\n         if (this._views) {\n            views = this._views;\n            if (views.length) {\n               views.forEach((v) => {\n                  var subViews = v.views(() => true, true);\n                  if (subViews && subViews.length) {\n                     views = views.concat(subViews);\n                  }\n               });\n            }\n         }\n\n         // recursively gather all pages and their views\n         if (this._pages) {\n            pages = this._pages;\n            if (pages.length) {\n               pages.forEach((p) => {\n                  // grab all views on this page\n                  var pageViews = p.views(() => true, true);\n                  if (pageViews && pageViews.length) {\n                     views = views.concat(pageViews);\n                  }\n                  // grab all subpages on this page\n                  var subPages = p.pages(() => true, true);\n                  if (subPages && subPages.length) {\n                     pages = pages.concat(subPages);\n                     subPages.forEach((sub) => {\n                        var subViews = sub.views(() => true, true);\n                        if (subViews && subViews.length) {\n                           views = views.concat(subViews);\n                        }\n                     });\n                  }\n               });\n            }\n         }\n\n         result = result.concat(pages, views);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewAll()\n    * return a list of all the {ABViewxxx} classes available.\n    * @return {array} of ABView objects\n    */\n   viewAll(fn = () => true) {\n      return this.ViewManager.allViews(fn);\n   }\n\n   ///\n   /// Queries\n   ///\n\n   /**\n    * queriesExcluded()\n    * return a list of ABObjectQuery(s) that are not included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @return {array}\n    */\n   queriesExcluded(filter = () => true) {\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) == -1;\n      }).filter(filter);\n   }\n\n   /**\n    * queriesIncluded()\n    * return a list of ABObjectQuery(s) that are included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @param {fn} [sort] function to sort by, default is .label\n    * @return {array}\n    */\n   queriesIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Roles\n   ///\n\n   /**\n    * @method roles()\n    * return an array of all the ABRole for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which roles to return.\n    * @return {array}   array of ABRole\n    */\n   // roles(filter = () => true) {\n   //    return (this.role || []).filter(filter);\n   // }\n\n   /**\n    * @method urlResolve()\n    * given an object pointer, return the specific object referenced.\n    * pointer must start with a '#', use '/' as delimiters, and either\n    * reference an object's .id, or an object's .property.\n    * for example:\n    * #/_objects   : resolves to the array of ._objects pointed to by this\n    *               application.\n    * #/_objects/[object.id] : reolved to a specific object\n    * #/_objects/[object.id]/_fields/[field.id] : resolves to a specific data field\n    *               refereced by object.id.\n    *\n    * @param {string} pointer : the string url referencing the object you want\n    *                       to retrieve.\n    * @return {obj}\n    */\n   urlResolve(pointer) {\n      var parts = pointer.split(\"/\");\n\n      var parseStep = (obj, steps) => {\n         // we're done.  obj is what we are looking for:\n         if (steps.length == 0) {\n            return obj;\n         }\n\n         // pull the next step key:\n         var key = steps.shift();\n\n         // special case, \"#\" makes sure we are talking about the\n         // Application object\n         if (key == \"#\") {\n            return parseStep(this, steps);\n         }\n\n         // if obj is an [], then key should be an .id reference to\n         // lookup:\n         if (Array.isArray(obj)) {\n            obj = obj.filter(function (o) {\n               return o.id == key;\n            })[0];\n            return parseStep(obj, steps);\n         }\n\n         // otherwise obj should be an {} and key a property:\n         if (obj && obj[key]) {\n            return parseStep(obj[key], steps);\n         }\n\n         if (key == \"_objects\") {\n            console.error(new Error(\"REFACTOR: old objectBy url reference:\"));\n\n            // This can be gotten from our AB\n            var id = steps.shift();\n            return parseStep(this.AB.objectByID(id), steps);\n         }\n\n         // if we got here, there is an error!\n         // console.error('!!! failed to lookup url:'+pointer);\n         console.error(\"!!! failed to lookup url:\" + pointer);\n         return null;\n      };\n\n      return parseStep(this, parts);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer for this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      // NOTE: if we need to expand this to search across\n      // applications, then add in this application.id here:\n      if (acrossApp) return \"#/\" + this.id + \"/\";\n      else return \"#/\";\n   }\n\n   /**\n    * @method urlObject()\n    * return the url pointer for objects in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlObject(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_objects/\";\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for pages in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPage(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_pages/\";\n   }\n\n   /**\n    * @method urlQuery()\n    * return the url pointer for queries in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlQuery(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_queries/\";\n   }\n\n   /**\n    * @method version()\n    * return the current version of this Application.\n    * Version information is in format \"{Major}.{Minor}.{patch}\"\n    * @return {string}\n    */\n   get version() {\n      return this.json?.versionData?.versionNumber ?? \"0.0.0\";\n   }\n\n   ///\n   ///   Object List Settings\n   ///\n   get objectlistIsOpen() {\n      return this.objectListSettings.isOpen;\n   }\n\n   set objectlistIsOpen(isOpen) {\n      this.objectListSettings.isOpen = isOpen;\n   }\n\n   get objectlistSearchText() {\n      return this.objectListSettings.searchText;\n   }\n\n   set objectlistSearchText(searchText) {\n      this.objectListSettings.searchText = searchText;\n   }\n\n   get objectlistSortDirection() {\n      return this.objectListSettings.sortDirection;\n   }\n\n   set objectlistSortDirection(sortDirection) {\n      this.objectListSettings.sortDirection = sortDirection;\n   }\n\n   get objectlistIsGroup() {\n      return this.objectListSettings.isGroup;\n   }\n\n   set objectlistIsGroup(isGroup) {\n      this.objectListSettings.isGroup = isGroup;\n   }\n\n   ///\n   /// Instance generators\n   ///\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABApplication.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      // values.key = ABViewPageCore.common().key;\n      values.key = \"page\";\n\n      return this.ViewManager.newView(values, this, null);\n   }\n\n   /**\n    * @method pageByID()\n    * return pages from the given {id}\n    * @param {string} id\n    *        the uuid of the page to return.\n    * @param {bool} deep\n    *        should this search deep (through all our children's children)\n    * @return {ABViewPage}\n    */\n   pageByID(id, deep = true) {\n      return this.pages((f) => f.id == id, deep)[0];\n   }\n\n   /**\n    * @method viewNew()\n    *\n    * return an instance of a new (unsaved) ABView.\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.ViewManager.newView(values, application, parent);\n   }\n\n   ///\n   /// Utilities\n   ///\n\n   cloneDeep(/* object */) {\n      var errorDepreciated = new Error(\n         \"ABApplicationCore.cloneDeep(): Depreciated!  Use AB.cloneDeep() instead.\"\n      );\n      throw errorDepreciated;\n\n      // return JSON.parse(JSON.stringify(object));\n   }\n};\n","/**\n * ABApplicationMobileCore\n *\n * This is the core ABApplicationMobile class that manages the common operations\n * of a Mobile PWA ABApplication.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManagerMobile = require(\"../platform/ABViewManagerMobile\");\nvar ABApplication = require(\"../platform/ABApplication\");\n\nmodule.exports = class ABApplicationMobileCore extends ABApplication {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.appType = \"mobile\"; // Just making sure.\n      this.networkType = attributes.networkType;\n\n      this.pageDefault = attributes.pageDefault;\n      // {uuid}\n      // the {ABMobilePage}.uuid of the page that is our default Page.\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   get ViewManager() {\n      return ABViewManagerMobile;\n   }\n\n   pageNew(def) {\n      console.error(\"TODO: pageNew for ApplicationMobile\");\n      return null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var json = super.toObj();\n      json.appType = \"mobile\";\n      json.networkType = this.networkType;\n\n      json.pageDefault = this.pageDefault;\n\n      return json;\n   }\n};\n","/*\n * ABDataCollection\n * Defines a set of data that other parts of the Application can work with.\n * it can point to either an ABObject, or ABObjectQuery, and can have an\n * filter, and sorts defined.\n *\n *\n *\n */\n// const ABEmitter = require(\"../platform/ABEmitter\");\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\n// const ABObject = require(\"../platform/ABObject\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n// const RowFilter = require(\"../platform/RowFilter\");\n\nvar DefaultValues = {\n   id: \"uuid\",\n   label: \"\", // label\n   object: {}, // json of ABObject\n   query: {}, // json of ABObjectQuery\n   settings: {\n      datasourceID: \"\", // id of ABObject or ABObjectQuery\n      linkDatacollectionID: \"\", // id of ABDatacollection\n      linkFieldID: \"\", // id of ABField\n      followDatacollectionID: \"\", // id of ABDatacollection\n      objectWorkspace: {\n         filterConditions: {\n            // array of filters to apply to the data table\n            glue: \"and\",\n            rules: [],\n         },\n         sortFields: [], // array of columns with their sort configurations\n      },\n      loadAll: false,\n      // preventPopulate: false, depreciating in favour of populate\n      populate: true, // true/false or array of columns to populate.\n      isQuery: false, // if true it is a query, otherwise it is a object.\n\n      fixSelect: \"\", // _CurrentUser, _FirstRecord, _FirstRecordDefault or row id\n\n      syncType: 1, // 1 (Server), 2 (Client)\n   },\n};\n\nconst QueuedOperations = [];\n// {array} of operations that we want to perform but allow some space\n// between operations.\nvar _queueTimer = null;\n\nfunction runQueue() {\n   // if (!_queueTimer) {\n   //    _queueTimer = setInterval(() => {\n   //       runQueue();\n   //    }, 20);\n   // }\n   if (QueuedOperations.length == 0) {\n      // stop\n      // clearInterval(_queueTimer);\n      _queueTimer = null;\n      return;\n   }\n   var op = QueuedOperations.shift();\n   op.fn();\n   _queueTimer = setTimeout(runQueue, op.timeout);\n}\nfunction queueOperation(fn, timeout = 20) {\n   QueuedOperations.push({ fn, timeout });\n   if (!_queueTimer) {\n      runQueue();\n   }\n}\n\nmodule.exports = class ABDataCollectionCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      attributes = attributes || {};\n\n      // this.application = application;\n\n      this.fromValues(attributes);\n\n      this.__dataCollection = this._dataCollectionNew([]);\n      // {DataCollection}\n      // This is a working instance of a DataCollection, not an {ABDatacCollection}\n      // On web/mobile this is a webix component.  So keep the creation as part of\n      // the platform/ABDataCollection implementation.\n\n      // Set filter value\n      this.refreshFilterConditions();\n\n      this.__bindComponentIds = [];\n      this.__flexComponentIds = [];\n\n      // refresh a data collection\n      // this.init();\n\n      // mark data status does not be initialized\n      this._dataStatus = this.dataStatusFlag.notInitial;\n\n      this.__filterCond = null;\n      // {QueryCondition}\n      // A passed in Query Condition for filtering our DataCollection.\n      // This value is ANDed with our normal filter conditions.\n\n      this.__model = null;\n      // {ABModel}\n      // An instance of the ABModel used for this DataCollection to\n      // access data on the server.\n   }\n\n   /**\n    * contextKey()\n    *\n    * return a unique key that represents data from/for this type of object.\n    *\n    * used when creating Network jobs and needing to be notified when a job\n    * is complete.  We send a contextKey() to the Network job and then listen\n    * for it to know when it is complete.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"datacollection\";\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id;\n      // {string} .id\n      // the uuid of this ABDataCollection Definition.\n\n      this.name = values.name || null;\n      // {string} .name\n      // the unchanging name of this ABDataCollection\n\n      this.type = values.type || \"datacollection\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      values.settings = values.settings || {};\n      this.settings = this.settings || {};\n      // {obj} .settings\n      // the specific operation values for this ABDataCollection\n\n      this.settings.linkDatacollectionID =\n         values.settings.linkDatacollectionID ||\n         DefaultValues.settings.linkDatacollectionID;\n      // {string} .settings.linkDatacollectionID\n      // the uuid of another ABDataCollection that provides the link/trigger\n      // for filtering the values of this ABDataCollection.\n\n      this.settings.linkFieldID =\n         values.settings.linkFieldID || DefaultValues.settings.linkFieldID;\n      // {string} .settings.linkFieldID\n      // this.fieldLink is intended to be the way to connect to the column in\n      // the datacollectionLink that we are following.  However this field\n      // is the field in this.datasource that connects to the field in\n      // datacollectionLink that has the value we are linked to.\n      // So, If this DC(ObjB), and our datacollectionLink (ObjA)\n      // then this.fieldLink = ObjB->FieldB\n      // To find the corresponding field in ObjA, we do:\n      // this.fieldLink.fieldLink  (ObjA->FieldA)\n\n      this.settings.followDatacollectionID =\n         values.settings.followDatacollectionID ||\n         DefaultValues.settings.followDatacollectionID;\n      // {string} .settings.followDatacollectionID\n      // the uuid of another ABDataCollection that provides the follow cursor data collection\n\n      this.settings.objectWorkspace = values.settings.objectWorkspace || {\n         filterConditions:\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         sortFields: DefaultValues.settings.objectWorkspace.sortFields,\n      };\n      // {obj} .settings.objectWorkspace\n      // the default settings for what is shown in the AppBuilder's\n      // DataCollection workspace\n\n      this.settings.fixSelect = values.settings.fixSelect;\n\n      // Convert to boolean\n      this.settings.loadAll = JSON.parse(\n         values.settings.loadAll || DefaultValues.settings.loadAll\n      );\n      // {bool} .settings.loadAll\n      // do we load all the data at one time? false == load by pages.\n\n      this.settings.isQuery = JSON.parse(\n         values.settings.isQuery || DefaultValues.settings.isQuery\n      );\n      // {bool} .settings.isQuery\n      // is the data source for this ABDataCollection based upon an\n      // ABObjectQuery?\n\n      this.settings.populate = (() => {\n         // First check .populate\n         if (values.settings.populate != undefined) {\n            return values.settings.populate;\n            // Then check legacy .preventPopulate\n         } else if (\n            values.settings.preventPopulate == true ||\n            values.settings.preventPopulate == \"1\"\n         ) {\n            return false;\n         } else return DefaultValues.settings.populate;\n      })();\n      // {bool | array} populate\n      // Control whcih related connections to populate. Default, true, populates\n      // all connections. False loads no connnections. Also accepts an array of\n      // column names to load specefic connections.\n\n      // Convert to number\n      this.settings.syncType = parseInt(\n         values.settings.syncType || DefaultValues.settings.syncType\n      );\n      // {int} .settings.syncType\n      // how is the data between this ABDataCollection and it's\n      // .datasource synced?\n\n      this.__datasource = null;\n      // {obj} .__datasource\n      // the reference to the ABObject/ABObjectQuery that this ABDataCollection\n      // is based off of.\n\n      this.settings.datasourceID =\n         values.settings.datasourceID || DefaultValues.settings.datasourceID;\n      // {string} .settings.datasourceID\n      // the uuid of the .__datasource object to use\n\n      // now lookup and reference the proper datasource\n      if (this.settings.datasourceID) {\n         // check for an ABObject\n         var obj = this.AB.objectByID(this.settings.datasourceID);\n         if (!obj) {\n            // this must be an ABObjectQuery then ...\n            obj = this.AB.queryByID(this.settings.datasourceID);\n         }\n\n         if (obj) {\n            this.__datasource = obj;\n            this.settings.isQuery = obj.type === \"query\";\n            if (this.settings.isQuery) {\n               if (this.__datasource.isGroup) {\n                  if (!this.__treeCollection)\n                     this.__treeCollection = this._treeCollectionNew();\n                  // {TreeCollection}\n                  // This is a webix TreeCollection (or similar)\n                  // keep it's implementation as part of the platform\n\n                  this.__isGroup = true;\n               }\n            }\n         } else {\n            console.error(\n               `ABDataCollection[${this.name}][${this.id}] unable to find datasource [${this.settings.datasourceID}]`\n            );\n         }\n      }\n\n      // // Populate data source: ABObject or ABObjectQuery\n      // if (values.query && values.query[0]) {\n      //    this.__datasource = new ABObjectQuery(\n      //       values.query[0],\n      //       this.application\n      //    );\n      //    this.settings.isQuery = true;\n\n      //    if (this.__datasource.isGroup) {\n      //       if (!this.__treeCollection)\n      //          this.__treeCollection = this._treeCollectionNew();\n\n      //       this.__isGroup = true;\n      //    }\n      // } else if (values.object && values.object[0]) {\n      //    this.__datasource = new ABObject(values.object[0], this.application);\n      //    this.settings.isQuery = false;\n      // }\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj(); // untranslate the object\n\n      return {\n         id: this.id,\n         name: this.name || this.label,\n         type: this.type || \"datacollection\",\n         settings: this.AB.cloneDeep(this.settings || {}),\n         translations: obj.translations,\n      };\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDatacollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *      .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      return this;\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABDatacollection\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      var removeFromApplications = () => {\n         return new Promise((next, err) => {\n            // this.AB.applications().then((apps) => {\n\n            const apps = this.AB.applications();\n            // NOTE: apps is a webix datacollection\n\n            var allRemoves = [];\n\n            var appsWithObject = apps.filter((a) => {\n               return a.datacollectionsIncluded((o) => o.id == this.id);\n            });\n            appsWithObject.forEach((app) => {\n               allRemoves.push(app.datacollectionRemove(this));\n            });\n\n            return Promise.all(allRemoves).then(next).catch(err);\n            // });\n         });\n      };\n\n      return Promise.resolve()\n         .then(() => {\n            return removeFromApplications();\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @property $dc\n    * return the underlying webix datacollection\n    * @return {webix.datacollection}\n    */\n   get $dc() {\n      return this.__dataCollection;\n   }\n\n   /**\n    * @property datasource\n    * return a object of this component.\n    *\n    * @return {ABObject|ABObjectQuery}\n    */\n   get datasource() {\n      if (!this.__datasource) {\n         if (this.id && this.name) {\n            // occassionally we have blank DCs (without .id or .name)\n            // and I don't want to see errors for those\n            var err = new Error(\n               `DataCollection[${this.name}][${this.id}] missing reference datasource`\n            );\n            this.AB.notify(\"builder\", err, { datacollection: this.toObj() });\n         }\n         return null;\n      }\n      var obj = this.AB.objectByID(this.__datasource.id);\n      if (!obj) {\n         obj = this.AB.queryByID(this.__datasource.id);\n      }\n      return obj;\n   }\n\n   /**\n    * @property datasource\n    * set a object to data collection\n    *\n    * @param {ABObject|ABObjectQuery} object\n    */\n   set datasource(object) {\n      this.__datasource = object;\n\n      this.refreshFilterConditions();\n   }\n\n   /**\n    * @property sourceType\n    * return type of source.\n    *\n    * @return {string} - 'object' or 'query'\n    */\n   get sourceType() {\n      return this.settings.isQuery ? \"query\" : \"object\";\n   }\n\n   /**\n    * @method datacollectionLink\n    * return a ABDatacollection that link of this.\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollectionLink() {\n      if (!this.AB) return null;\n\n      return this.AB.datacollectionByID(this.settings.linkDatacollectionID);\n   }\n\n   /**\n    * @property fieldLink\n    * return a ABFieldConnect field that link of this.\n    *\n    * @return {ABFieldConnect}\n    */\n   get fieldLink() {\n      let object = this.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.linkFieldID);\n   }\n\n   /**\n    * @property model\n    * return a source model\n    *\n    * @return ABModel\n    */\n   get model() {\n      if (!this.__model) {\n         let object = this.datasource; // already notified\n\n         this.__model = object ? object.model() : null;\n      }\n      return this.__model;\n   }\n\n   get dataStatusFlag() {\n      return {\n         notInitial: 0,\n         initializing: 1,\n         initialized: 2,\n      };\n   }\n\n   get dataStatus() {\n      return this._dataStatus;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   setCursor(itemId) {\n      // If the static cursor is set, then this DC could not set cursor to other rows\n      if (\n         this.settings.fixSelect &&\n         (this.settings.fixSelect != \"_FirstRecordDefault\" ||\n            this.settings.fixSelect == itemId)\n      )\n         return;\n\n      if (this.__treeCollection) {\n         // set cursor of tree collection\n         this.setCursorTree(itemId);\n\n         // pull current row id\n         let currTreeId = this.__treeCollection.getCursor();\n         if (currTreeId) {\n            let currTreeItem = this.__treeCollection.getItem(currTreeId);\n            if (currTreeItem) itemId = currTreeItem._itemId;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc) {\n         // Store the old cursor id\n         this.__previousCursorId = dc.getCursor();\n\n         // clear cursor\n         if (itemId == null) {\n            dc.setCursor(null);\n         }\n         // If set rowId equal current cursor, it will not trigger .onAfterCursorChange event\n         else if (dc.getCursor() == itemId) {\n            this.emit(\"changeCursor\", this.getCursor());\n         }\n         // set new cursor\n         else if (dc.exists(itemId)) {\n            dc.setCursor(itemId);\n         }\n      }\n   }\n\n   /**\n    *\n    * @param {string|number} itemId - Id of item or Id of row data\n    */\n   setCursorTree(itemId) {\n      let tc = this.__treeCollection;\n      if (tc && tc.getCursor() != itemId) {\n         // If it is id of tree collection, then find row id of data\n         let treeCursor = tc.find({ id: itemId }, true);\n         if (treeCursor) {\n            tc.setCursor(itemId);\n         }\n         // If it is not id of tree collection, then find/set root of data\n         else {\n            let treeItem = tc.find({ _itemId: itemId, $parent: 0 }, true);\n            if (treeItem) tc.setCursor(treeItem.id);\n            else tc.setCursor(null);\n         }\n      }\n   }\n\n   getCursor(treeCursor = false) {\n      // Cursor of tree collection\n      if (treeCursor && this.__treeCollection) {\n         let currId = this.__treeCollection.getCursor();\n         if (currId) {\n            let currItem = this.__treeCollection.getItem(currId);\n\n            // filter current id for serialize\n            this.__treeCollection.filter(\n               (item) => item._itemId == currItem._itemId\n            );\n\n            // pull item with child items\n            let currItemAndChilds =\n               this.__treeCollection.serialize()[0] || null;\n\n            // refresh filter\n            this.refreshLinkCursor();\n\n            return currItemAndChilds;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      let currId = dc.getCursor();\n      let currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getFirstRecord() {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getFirstId();\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getNextRecord(record) {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getNextId(record.id);\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   /**\n    * @method refreshLinkCursor\n    *    If the data collection is bound to another and it is the child connection\n    *    it finds it's parents current set cursor and then filters its data\n    *    based off of the cursor.\n    *\n    *    In cases where a DC has set .loadAll, our job is to filter existing data\n    *    that is already loaded in the internal __dataCollection.\n    *\n    *    Otherwise this is not the place to trigger a data refresh.  We depend\n    *    on other mechanisms (.reloadData(), datacollection .select()) to trigger\n    *    an update.\n    */\n   refreshLinkCursor(force = false) {\n      // our filter conditions need to know there was an updated cursor.\n      // some of our filters are based upon our linked data.\n      this.refreshFilterConditions();\n\n      // NOTE: If DC does not set load all data, then it does not need to filter by the parent DC.\n      // because it fetch data when the cursor of the parent DC changes.\n      if (!this.settings.loadAll && !force) return;\n\n      // do not set the filter unless this dc is initialized \"dataStatusFlag==2\"\n      // if (this.dataStatus != this.dataStatusFlag.initialized) return;\n\n      // filter the data in the data collection\n      // using its parents current cursor because all the data in this child\n      // data collection has been loaded and the frontend can decide what is\n      // seen or not seen\n      let linkCursor;\n      let dvLink = this.datacollectionLink;\n      if (dvLink) {\n         linkCursor = dvLink.getCursor();\n      }\n\n      let filterData = (rowData) => {\n         // This row is not loaded yet. It will be loaded when scrolling.\n         if (rowData == null) return true;\n\n         // if link dc cursor is null:\n         // ... if there's no parent show all data\n         // ... if we have a parent hide all data - address cases where user see\n         //     unexpected data (ns_app#318) - should this be a DC setting?\n         if (!linkCursor) return dvLink ? false : true;\n         else return this.isParentFilterValid(rowData);\n      };\n\n      if (this.__dataCollection) this.__dataCollection.filter(filterData);\n      if (this.__treeCollection) this.__treeCollection.filter(filterData);\n   }\n\n   setStaticCursor() {\n      if (this.settings.fixSelect) {\n         // set cursor to the current user\n         if (this.settings.fixSelect == \"_CurrentUser\") {\n            var username = this.currentUserUsername();\n            var userFields = this.datasource.fields((f) => f.key == \"user\");\n\n            // find a row that contains the current user\n            var row = this.__dataCollection.find((r) => {\n               var found = false;\n\n               userFields.forEach((f) => {\n                  if (found || r[f.columnName] == null) return;\n\n                  if (r[f.columnName].filter) {\n                     // Array - isMultiple\n                     found =\n                        r[f.columnName].filter((data) => data.id == username)\n                           .length > 0;\n                  } else if (r[f.columnName] == username) {\n                     found = true;\n                  }\n               });\n\n               return found;\n            }, true);\n\n            // set a first row of current user to cursor\n            if (row) {\n               this.__dataCollection.setCursor(row.id);\n\n               this.setCursorTree(row.id);\n            }\n         } else if (\n            this.settings.fixSelect == \"_FirstRecord\" ||\n            this.settings.fixSelect == \"_FirstRecordDefault\"\n         ) {\n            // // find a row that contains the current user\n            // var row = this.__dataCollection.find((r) => {\n\n            //  var found = false;\n            //  if (!found) {\n            //    found = true;\n            //    return true; // just give us the first record\n            //  }\n\n            // }, true);\n\n            // // set a first row of current user to cursor\n            // if (row)\n            //  this.__dataCollection.setCursor(row.id);\n\n            let currRowId = this.__dataCollection.getCursor();\n            if (\n               !currRowId ||\n               (currRowId && !this.__dataCollection.exists(currRowId))\n            ) {\n               // If current cursor is filtered by parent DC, then select new cursor\n\n               // set a first row to cursor\n               let rowId = this.__dataCollection.getFirstId();\n               // if (rowId) {\n               this.__dataCollection.setCursor(rowId || null);\n\n               if (this.__dataCollection.data.count() == 0) {\n                  this.emit(\"collectionEmpty\", {});\n               }\n\n               this.setCursorTree(rowId);\n               // }\n            }\n         } else {\n            this.__dataCollection.setCursor(this.settings.fixSelect);\n\n            this.setCursorTree(this.settings.fixSelect);\n         }\n      }\n\n      // Set the cursor to the first row\n      if (this.isCursorFollow) {\n         const rowId = this.__dataCollection.getFirstId();\n         this.setCursor(rowId || null);\n         this.setCursorTree(rowId || null);\n\n         // If no data but the parent DC set cursor, then this should be reload data.\n         const dcFollow = this.datacollectionFollow;\n         if (!rowId && dcFollow?.getCursor()) {\n            this.loadData();\n         }\n      }\n   }\n\n   ///\n   /// Data\n   ///\n\n   /**\n    * @method filterCondition()\n    * Provide a temporary filter condition to modify the data we are returning.\n    * Used by User search criterias.\n    * @param {json} cond\n    *        A valid QueryCondition to filter the response.\n    */\n   filterCondition(cond = null) {\n      this.__filterCond = cond;\n   }\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      this.initialized = true;\n\n      if (!this.__dataCollection.___AD.onAfterCursorChange) {\n         this.__dataCollection.___AD.onAfterCursorChange =\n            this.__dataCollection.attachEvent(\"onAfterCursorChange\", () => {\n               // debugger;\n               var currData = this.getCursor();\n\n               this.emit(\"changeCursor\", currData);\n            });\n      }\n\n      // relate data functions\n      let isRelated = (relateData, rowId, PK = \"id\") => {\n         if (Array.isArray(relateData)) {\n            return relateData.filter((v) => (v[PK] || v) == rowId).length > 0;\n         } else {\n            return relateData && (relateData[PK] || relateData) == rowId;\n         }\n      };\n\n      // events\n      this.on(\"ab.datacollection.create\", (data) => {\n         // NOTE: UPDATing this process to add another check.\n         // .isCursorFollow only invalidates the 1st half of the routine.\n         // .isCursorFollow STILL needs to follow the 2nd half of the routine\n         // // If this DC is following cursor for other DC, then it should not add the new item to their list.\n         // if (this.isCursorFollow) return;\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data || !data.data) return;\n\n         let needAdd = false;\n         let updatedVals = [];\n\n         // Don't do First Step if .isCursorFollow\n         if (!this.isCursorFollow) {\n            // First Step\n            // Does this new entry need to be part of the data we are currently\n            // tracking?  If so, add it.\n            Promise.resolve()\n               .then(() => {\n                  return new Promise((next, bad) => {\n                     // Query\n                     if (obj instanceof this.AB.Class.ABObjectQuery) {\n                        let objList =\n                           obj.objects((o) => o.id == data.objectId) || [];\n\n                        needAdd = objList.length > 0;\n\n                        if (!needAdd) return next();\n\n                        let where = {\n                           glue: \"or\",\n                           rules: [],\n                        };\n\n                        objList.forEach((o) => {\n                           let newDataId = data.data[`${o.PK()}`];\n                           if (!newDataId) return;\n\n                           where.rules.push({\n                              key: `${\n                                 o.alias || obj.objectAlias(o.id)\n                              }.${o.PK()}`,\n                              rule: \"equals\",\n                              value: newDataId,\n                           });\n                        });\n\n                        obj.model()\n                           .findAll({\n                              where: where,\n                           })\n                           .then((newQueryData) => {\n                              updatedVals = newQueryData.data || [];\n                              updatedVals.forEach((v) => {\n                                 delete v.id;\n                              });\n\n                              next();\n                           })\n                           .catch(bad);\n                     }\n                     // Object\n                     else {\n                        needAdd = obj.id == data.objectId;\n                        updatedVals = [data.data];\n                        next();\n                     }\n                  });\n               })\n               .then(() => {\n                  if (needAdd) {\n                     (updatedVals || []).forEach((updatedV) => {\n                        // If this DC uses a query, it pulls refreshed data from the server in the previous step,\n                        // so there is no need to recheck the query's filter.\n                        const skipDatasourceFilter =\n                           obj instanceof this.AB.Class.ABObjectQuery;\n\n                        // filter condition before add\n                        if (!this.isValidData(updatedV, skipDatasourceFilter))\n                           return;\n\n                        // filter the cursor of parent DC\n                        const dcLink = this.datacollectionLink;\n                        if (dcLink && !this.isParentFilterValid(updatedV))\n                           return;\n\n                        // check to see if item already exisits in data collection\n                        // and check to see that we are not loading the data serverside from cursor\n                        if (\n                           !this.__dataCollection.exists(\n                              updatedV[`${obj.PK()}`]\n                           ) &&\n                           !this.__reloadWheres\n                        ) {\n                           this.__dataCollection.add(updatedV, 0);\n                           this.emit(\"create\", updatedV);\n                           // this.__dataCollection.setCursor(rowData.id);\n                        } else if (\n                           !this.__dataCollection.exists(\n                              updatedV[`${obj.PK()}`]\n                           ) &&\n                           this.__reloadWheres\n                        ) {\n                           // debugger;\n                           if (this.isParentFilterValid(updatedV)) {\n                              // we track bound components and flexlayout components\n                              var attachedComponents =\n                                 this.__bindComponentIds.concat(\n                                    this.__flexComponentIds\n                                 );\n                              attachedComponents.forEach((bcids) => {\n                                 // if the reload button already exisits move on\n                                 if ($$(bcids + \"_reloadView\")) {\n                                    return false;\n                                 }\n\n                                 // find the position of the data view\n                                 var pos = 0;\n                                 var parent = $$(bcids).getParentView();\n                                 if ($$(bcids).getParentView().index) {\n                                    pos = $$(bcids)\n                                       .getParentView()\n                                       .index($$(bcids));\n                                 } else if (\n                                    $$(bcids).getParentView().getParentView()\n                                       .index\n                                 ) {\n                                    // this is a data view and it is inside a\n                                    // scroll view that is inside an accodion\n                                    // so we need to go deeper to add the button\n                                    parent = $$(bcids)\n                                       .getParentView()\n                                       .getParentView();\n                                    pos = $$(bcids)\n                                       .getParentView()\n                                       .getParentView()\n                                       .index($$(bcids).getParentView());\n                                 }\n\n                                 // store the datacollection so we can pass it to the button later\n                                 var DC = this;\n                                 // add a button that reloads the view when clicked\n                                 if (parent.addView) {\n                                    var L = this.AB.Label();\n                                    parent.addView(\n                                       {\n                                          id: bcids + \"_reloadView\",\n                                          view: \"button\",\n                                          value: L(\n                                             \"New data available. Click to reload.\"\n                                          ),\n                                          css: \"webix_primary webix_warn\",\n                                          click: function (id, event) {\n                                             DC.reloadData();\n                                             $$(id)\n                                                .getParentView()\n                                                .removeView(id);\n                                          },\n                                       },\n                                       pos\n                                    );\n                                 }\n                              });\n                              // this.emit(\"create\", updatedV);\n                           }\n                        }\n                     });\n\n                     if (\n                        this.__treeCollection // && this.__treeCollection.exists(updatedVals.id)\n                     ) {\n                        this.parseTreeCollection({\n                           data: updatedVals,\n                        });\n                     }\n                  }\n\n                  // ABObject only\n                  if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n                     // if it is a linked object\n                     let connectedFields = this.datasource.connectFields(\n                        (f) =>\n                           f.datasourceLink &&\n                           f.datasourceLink.id == data.objectId\n                     );\n\n                     // It should always be only one item for ABObject\n                     updatedVals = updatedVals[0];\n\n                     // update relation data\n                     if (\n                        updatedVals &&\n                        connectedFields &&\n                        connectedFields.length > 0\n                     ) {\n                        // various PK name\n                        let PK = connectedFields[0].object.PK();\n                        if (!updatedVals.id && PK != \"id\")\n                           updatedVals.id = updatedVals[PK];\n\n                        this.__dataCollection.find({}).forEach((d) => {\n                           let updateItemData = {};\n\n                           connectedFields.forEach((f) => {\n                              var updateRelateVal = {};\n                              if (f && f.fieldLink) {\n                                 updateRelateVal =\n                                    updatedVals[f.fieldLink.relationName()] ||\n                                    {};\n                              }\n\n                              let rowRelateVal = d[f.relationName()] || {};\n\n                              let valIsRelated = isRelated(\n                                 updateRelateVal,\n                                 d.id,\n                                 PK\n                              );\n\n                              // Relate data\n                              if (\n                                 Array.isArray(rowRelateVal) &&\n                                 rowRelateVal.filter(\n                                    (v) =>\n                                       v == updatedVals.id ||\n                                       v.id == updatedVals.id ||\n                                       v[PK] == updatedVals.id\n                                 ).length < 1 &&\n                                 valIsRelated\n                              ) {\n                                 rowRelateVal.push(updatedVals);\n\n                                 updateItemData[f.relationName()] =\n                                    rowRelateVal;\n                                 updateItemData[f.columnName] = updateItemData[\n                                    f.relationName()\n                                 ].map((v) => v.id || v[PK] || v);\n                              } else if (\n                                 !Array.isArray(rowRelateVal) &&\n                                 (rowRelateVal != updatedVals.id ||\n                                    rowRelateVal.id != updatedVals.id ||\n                                    rowRelateVal[PK] != updatedVals.id) &&\n                                 valIsRelated\n                              ) {\n                                 updateItemData[f.relationName()] = updatedVals;\n                                 updateItemData[f.columnName] =\n                                    updatedVals.id || updatedVals;\n                              }\n                           });\n\n                           // If this item needs to update\n                           if (Object.keys(updateItemData).length > 0) {\n                              this.__dataCollection.updateItem(\n                                 d.id,\n                                 updateItemData\n                              );\n\n                              if (this.__treeCollection)\n                                 this.__treeCollection.updateItem(\n                                    d.id,\n                                    updateItemData\n                                 );\n\n                              this.emit(\n                                 \"update\",\n                                 this.__dataCollection.getItem(d.id)\n                              );\n                           }\n                        });\n                     }\n                  }\n\n                  this.updateRelationalDataFromLinkDC(data.objectId, data.data);\n                  // filter link data collection's cursor\n                  this.refreshLinkCursor();\n                  this.setStaticCursor();\n               });\n         }\n\n         // SECOND Step:\n         // Try to detect if this newly created entry connects to one of the\n         // values this DC is currently managing.  If so, than add this value\n         // to the connection.\n\n         let incomingObj = this.AB.objectByID(data.objectId);\n         if (!incomingObj) return;\n\n         // find any of incomingObj connections that are tied to my object:\n         let connectedFields = incomingObj\n            .connectFields((f) => f.datasourceLink?.id == obj.id)\n            .filter((f) => f); // <-- safety check, no undefined or nulls\n         if (connectedFields.length == 0) return;\n\n         let iPK = incomingObj.PK();\n         let PK = obj.PK();\n         let newData = this.AB.cloneDeep(data.data);\n\n         let currCursor = this.getCursor();\n         let needsRefresh = false;\n\n         connectedFields.forEach((f) => {\n            // pull the values in this connected fields\n            let values = data.data[f.columnName]; // just need the PK\n\n            if (!Array.isArray(values))\n               values = [values].filter((v) => !this.AB.isNil(v));\n\n            values.forEach((v) => {\n               v = v[PK] || v; // just in case this was an {} and not the {uuid}\n\n               // if this is one of the items we are managing\n               if (this.__dataCollection.exists(v)) {\n                  let localField = f.fieldLink;\n                  if (localField) {\n                     let row = this.__dataCollection.getItem(v);\n                     let colName = localField.columnName;\n                     let relName = localField.relationName();\n\n                     if (localField.linkType() == \"many\") {\n                        if (!Array.isArray(row[colName])) {\n                           row[colName] = [row[colName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        // if it isn't already in the array, add it\n                        let rval = localField.getRelationValue(newData);\n                        if (row[colName].indexOf(rval) == -1) {\n                           row[colName].push(rval);\n                        }\n\n                        if (!Array.isArray(row[relName])) {\n                           row[relName] = [row[relName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        if (\n                           row[relName].filter((r) => r[iPK] == newData[iPK])\n                              .length == 0\n                        ) {\n                           row[relName].push(newData);\n                        }\n                     } else {\n                        row[colName] = localField.getRelationValue(newData);\n                        row[relName] = newData;\n                     }\n\n                     // pass updated data back into DC:\n                     this.__dataCollection.updateItem(v, row);\n\n                     if (this.__treeCollection)\n                        this.__treeCollection.updateItem(v, row);\n\n                     this.emit(\"update\", this.__dataCollection.getItem(v));\n\n                     // if we just updated our Current Cursor, we need to\n                     // let our connected DC's know to refresh.\n                     if (currCursor?.id == v) {\n                        needsRefresh = true;\n                     }\n                  }\n               }\n            });\n         });\n\n         if (needsRefresh) {\n            this.emit(\"cursorStale\", null);\n         }\n      });\n\n      this.on(\"ab.datacollection.connection-added\", (data) => {\n         // This event notifies us of a specific relation being created between\n         // two records. In this case the source object that was originally\n         // operated on, is sent along in data.data.\n         //\n         // eg: if this was a `create` operation, the newly created value is\n         //     included in data.data.\n         // eg: if this was an `update` operation, the row that was modified\n         //     is included.\n         //\n         // {json} data\n         // incoming socket payload:\n         // data.objectID {string}\n         //      the ABObject this connection is being added to\n         // data.fieldID  {string}\n         //      which connect Field in this ABObject the value is added to\n         // data.rowID    {string}\n         //      which specific row/entry this is being added to\n         // data.data     {json}\n         //      The value being added.\n         //\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data.rowID) return;\n\n         // ABObject only\n         if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n            // if this is the object we are managing\n            if (obj.id === data.objectID) {\n               let field = obj.fieldByID(data.fieldID);\n               if (field) {\n                  // figure out if we actually have the value that was changed:\n                  let isExists = this.__dataCollection.exists(data.rowID);\n                  if (isExists) {\n                     let newData = this.AB.cloneDeep(data.data);\n                     let row = this.__dataCollection.getItem(data.rowID);\n\n                     let colName = field.columnName;\n                     let relName = field.relationName();\n\n                     if (field.linkType() == \"many\") {\n                        if (!Array.isArray(row[colName])) {\n                           // in case row[col]:{obj} this will make sure it\n                           // is included as an [ {obj} ], but will also prevent\n                           // [ undefined ] if row[col] isn't set:\n                           row[colName] = [row[colName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        row[colName].push(field.getRelationValue(newData));\n\n                        if (!Array.isArray(row[relName])) {\n                           row[relName] = [row[relName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        row[relName].push(newData);\n                     } else {\n                        row[colName] = field.getRelationValue(newData);\n                        row[relName] = newData;\n                     }\n\n                     // pass updated data back into DC:\n                     this.__dataCollection.updateItem(data.rowID, row);\n\n                     if (this.__treeCollection)\n                        this.__treeCollection.updateItem(data.rowID, row);\n\n                     this.emit(\n                        \"update\",\n                        this.__dataCollection.getItem(data.rowID)\n                     );\n                  }\n               }\n            }\n         } else if (obj instanceof this.AB.Class.ABObjectQuery) {\n            // ABQuery\n\n            // NOTE: that in this case, if this change is about one of the\n            // objects we track, we will most likely have to reload the data\n            // to make sure we are displaying proper data.\n\n            // This will follow the same logic as in \"ab.datacollection.create\"\n            // so instead of repeating that here, let's call our \"create\"\n            // handler instead:\n\n            ///// LEFT OFF HERE:\n            // need to pull out the data in data.data that represents the\n            // connection to data.objectId\n\n            //// WAIT!!!!!!\n            //// Instead, of this \"connection-added\", lets add the logic in\n            //// a \"created\" handler to detect if we should add the new entry\n            //// into A value we currently track.\n            //// ===> This way we only have to send out \"Created\" messages\n            ////\n\n            let newPacket = {\n               objectId: data.objectId,\n               data: this.AB.cloneDeep(data.data),\n            };\n            this.emit(\"ab.datacollection.create\", newPacket);\n         }\n      });\n\n      this.on(\"ab.datacollection.update\", (data) => {\n         // {json} data\n         // incoming socket payload:\n         // data.objectId {string} uuid of the ABObject's row that was updated\n         // data.data {json} the new updated value of that row entry.\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         // updated values\n         let values = data.data;\n         if (!values) return;\n\n         // #Johnny: removing this check.  A DC that is following another cursor\n         // still has a value that might need updating.\n         // DC who is following cursor should update only current cursor.\n         // if (\n         //    this.isCursorFollow &&\n         //    this.getCursor()?.id != (values[obj.PK()] ?? values.id)\n         // ) {\n         //    return;\n         // }\n\n         let needUpdate = false;\n         let skipDatasourceFilter = false;\n         let isExists = false;\n         let updatedIds = [];\n         // {array}\n         // an array of the row indexs in our DataCollection that have values\n         // that need to be updated.\n\n         let updatedTreeIds = [];\n         let updatedVals = {};\n\n         //\n         // Case 1: This DC contains the value that was updated\n         // In this case, we want to replace our current entry with\n         // the new one passed in.\n         // EX: This is a DC of Users, and the incoming Entry is a User\n         // that we are already displaying.\n         //\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needUpdate = objList.length > 0;\n            if (needUpdate) {\n               // NOTE: Data needs to be updated in the query even if it doesn't match the filter conditions.\n               skipDatasourceFilter =\n                  obj instanceof this.AB.Class.ABObjectQuery;\n\n               (objList || []).forEach((o) => {\n                  updatedIds = updatedIds.concat(\n                     this.__dataCollection\n                        .find((item) => {\n                           return (\n                              item[\n                                 `${this.datasource.objectAlias(\n                                    o.id\n                                 )}.${o.PK()}`\n                              ] == (values[o.PK()] || values.id)\n                           );\n                        })\n                        .map((o) => o.id) || []\n                  );\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     updatedTreeIds = updatedTreeIds.concat(\n                        this.__treeCollection\n                           .find((item) => {\n                              return (\n                                 item[\n                                    `${this.datasource.objectAlias(\n                                       o.id\n                                    )}.${o.PK()}`\n                                 ] == (values[o.PK()] || values.id)\n                              );\n                           })\n                           .map((o) => o.id) || []\n                     );\n                  }\n               });\n\n               isExists = updatedIds.length > 0;\n\n               updatedVals = this._queryUpdateData(objList, values);\n            }\n         }\n         // Object\n         else {\n            needUpdate = obj.id == data.objectId;\n            if (needUpdate) {\n               // various PK name\n               if (!values.id && obj.PK() != \"id\") values.id = values[obj.PK()];\n\n               updatedIds.push(values.id);\n\n               isExists = this.__dataCollection.exists(values.id);\n               updatedVals = values;\n            }\n         }\n\n         // if it is the source object\n         if (needUpdate) {\n            if (isExists) {\n               if (this.isValidData(updatedVals, skipDatasourceFilter)) {\n                  // only spread around cloned copies because some objects (I'm\n                  // looking at you ABFieldUser) will modify some data for local\n                  // usage.\n                  updatedVals = this.AB.cloneDeep(updatedVals);\n                  if (this.__dataCollection) {\n                     updatedIds = this.AB.uniq(updatedIds);\n                     updatedIds.forEach((itemId) => {\n                        this.__dataCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  if (this.__treeCollection) {\n                     // update data in tree\n                     updatedTreeIds = this.AB.uniq(updatedTreeIds);\n                     updatedTreeIds.forEach((itemId) => {\n                        this.__treeCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  this.emit(\"update\", updatedVals);\n\n                  // If the update item is current cursor, then should tell components to update.\n                  let currData = this.getCursor();\n                  if (currData?.id == updatedVals.id) {\n                     this.emit(\"cursorStale\", currData);\n                  }\n               } else {\n                  // Johnny: Here we are simply removing the DataCollection Entries that are\n                  // no longer valid.\n                  // Just cycle through the collected updatedIds and remove them.\n                  let currData = this.getCursor();\n                  updatedIds.forEach((id) => {\n                     // If the item is current cursor, then the current cursor should be cleared.\n\n                     if (currData?.id == id) this.emit(\"cursorStale\", null);\n\n                     this.__dataCollection.remove(id);\n\n                     // TODO: update tree list\n                     // if (this.__treeCollection) {\n                     //  this.__treeCollection.remove(id);\n                     // }\n\n                     this.emit(\"delete\", id);\n                  });\n               }\n            }\n            // filter before add new record\n            else if (this.isValidData(updatedVals)) {\n               // OK we have a value, that COULD be in our DC\n               // before we add it, let's make sure we are not limited in our selection of items:\n               if (!this.isCursorFollow && !this.settings.fixSelect) {\n                  // this means the updated record was not loaded yet so we are adding it to the top of the grid\n                  // the placement will probably change on the next load of the data\n                  this.__dataCollection.add(updatedVals, 0);\n\n                  if (this.__treeCollection)\n                     this.parseTreeCollection({\n                        data: [updatedVals],\n                     });\n\n                  this.emit(\"create\", updatedVals);\n               }\n            }\n         }\n\n         //\n         // Case 2: This DC has entries that CONNECT to the updated value.\n         // We need to make sure our connections, properly reflect the\n         // current state of the incoming data.\n         //\n         // EG: This DC is a list of Roles that connect to User, and an updated\n         // User is passed in.\n\n         let currCursor = this.getCursor();\n         let updateCursor = null;\n\n         // if it is a linked object\n         // look for connected fields that link to the incoming objectId\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields?.length > 0\n         ) {\n            // various PK name\n            // webix datacollections require an .id value, so make sure\n            // this incoming value has an .id set\n            let PK = obj.PK();\n            if (!values.id && PK != \"id\") values.id = values[PK];\n\n            if (this.__dataCollection.count() > 0) {\n               this.__dataCollection.find({}).forEach((d) => {\n                  let updateItemData = {\n                     id: d.id,\n                  };\n\n                  connectedFields.forEach((f) => {\n                     if (!f) return;\n\n                     let updateRelateVal = {};\n                     let rowRelateVal = d[f.relationName()] || {};\n\n                     if (f.fieldLink)\n                        updateRelateVal =\n                           values[f.fieldLink.relationName()] || {};\n\n                     // check to see if we are supposed to be related to this\n                     let valIsRelated = isRelated(updateRelateVal, d.id, PK);\n\n                     // If NO, then make sure we Unrelate data\n                     // if this is an array -> filter out the entry\n                     if (\n                        Array.isArray(rowRelateVal) &&\n                        rowRelateVal.filter(\n                           (v) =>\n                              v == values.id ||\n                              v.id == values.id ||\n                              v[PK] == values.id\n                        ).length > 0 &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = rowRelateVal.filter(\n                           // NOTE: Special case: the incoming value.id will be .uuid\n                           // however in case of User Fields, v.id == username and not .uuid\n                           // so we put our default check to be v[PK] here to play nice\n                           (v) => (v[PK] || v.id || v) != values.id\n                        );\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        // this is not an array so set link to null\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal == values.id ||\n                           rowRelateVal.id == values.id ||\n                           rowRelateVal[PK] == values.id) &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = null;\n                        updateItemData[f.columnName] = null;\n                     }\n\n                     // However, if we are supposed to be related => make sure we are\n                     // If this is an array, then add to list\n                     // AND YES: make sure it is cloned\n                     if (valIsRelated) {\n                        values = this.AB.cloneDeep(values);\n                     }\n                     if (Array.isArray(rowRelateVal) && valIsRelated) {\n                        // update relate data\n                        if (\n                           rowRelateVal.filter(\n                              (v) =>\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                           ).length > 0\n                        ) {\n                           // just update the one entry in my array with the new\n                           // value\n                           rowRelateVal.forEach((v, index) => {\n                              if (\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                              )\n                                 rowRelateVal[index] = values;\n                           });\n                        }\n                        // add new relate\n                        else {\n                           rowRelateVal.push(values);\n                        }\n\n                        updateItemData[f.relationName()] = rowRelateVal;\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map(\n                           (v) => f.getRelationValue(v) /*v.id || v[PK] || v*/\n                        );\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal != values.id ||\n                           rowRelateVal.id != values.id ||\n                           rowRelateVal[PK] != values.id) &&\n                        valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = values;\n                        // make ConnectedField use .getRelationValue() here!\n                        updateItemData[f.columnName] =\n                           f.getRelationValue(values);\n                     }\n                  });\n\n                  // If this item needs to update\n                  // meaning there is > 1 key in the object (we always have .id)\n                  if (Object.keys(updateItemData).length > 1) {\n                     // normalize data before add to data collection\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n\n                     // NOTE: We could not normalize relational data because they are not full data\n                     // Merge update data to exists data instead\n\n                     if (this.__treeCollection?.exists(d.id)) {\n                        const treeItem = Object.assign(\n                           this.__treeCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__treeCollection.updateItem(d.id, treeItem);\n                     }\n\n                     if (this.__dataCollection?.exists(d.id)) {\n                        const dcItem = Object.assign(\n                           this.__dataCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__dataCollection.updateItem(d.id, dcItem);\n                        this.emit(\n                           \"update\",\n                           this.__dataCollection.getItem(d.id)\n                        );\n                        if (currCursor?.id == dcItem.id) {\n                           updateCursor = dcItem;\n                        }\n                     }\n                  }\n               });\n            }\n         }\n\n         //\n         // Case 3: Our DC is linked to a DC that was effected by this update.\n         //\n         // We will approach it from another direction, if the current DC made\n         // an update to it's current Cursor, then we will emit a \"cursorStale\"\n         // event, so our linked DCs will update themselves with the new value:\n         if (updateCursor) {\n            this.emit(\"cursorStale\", null);\n         }\n         // this.updateRelationalDataFromLinkDC(data.objectId, values);\n         this.refreshLinkCursor();\n\n         this.setStaticCursor();\n      });\n\n      // We are subscribing to notifications from the server that an item may be stale and needs updating\n      // We will improve this later and verify that it needs updating before attempting the update on the client side\n      this.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         // if we don't have a datasource or model, there is nothing we can do here:\n         // Verify the datasource has the object we are listening for if not just stop here\n         if (\n            !this.datasource ||\n            !this.model ||\n            this.datasource.id != data.objectId\n         ) {\n            return;\n         }\n\n         // updated values\n         var values = data.data;\n\n         if (!values) return;\n\n         // use the Object's defined Primary Key:\n         var PK = this.model.object.PK();\n         if (!values[PK]) {\n            PK = \"id\";\n         }\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.[PK] != (values[PK] ?? values?.id)\n         ) {\n            return;\n         }\n\n         if (values) {\n            if (this.__dataCollection.exists(values[PK])) {\n               var cond = { where: {} };\n               cond.where[PK] = values[PK];\n               // this data collection has the record so we need to query the server to find out what it's latest data is so we can update all instances\n               this.model.staleRefresh(cond).then((res) => {\n                  // check to make sure there is data to work with\n                  if (Array.isArray(res.data) && res.data.length) {\n                     // debugger;\n                     let obj = this.datasource;\n                     if (!obj) return;\n                     // normalize data before add to data collection\n\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n                     //var model = obj.model();\n                     // model.normalizeData(res.data[0]);\n\n                     // tell the webix data collection to update using their API with the row id (values.id) and content (res.data[0])\n                     if (this.__dataCollection.exists(values[PK])) {\n                        this.__dataCollection.updateItem(\n                           values[PK],\n                           res.data[0]\n                        );\n                     }\n\n                     // If the update item is current cursor, then should tell components to update.\n                     var currData = this.getCursor();\n                     if (currData?.[PK] == values[PK]) {\n                        this.emit(\"cursorStale\", currData);\n                     }\n                  } else {\n                     // If there is no data in the object then it was deleted...lets clean things up\n                     // If the deleted item is current cursor, then the current cursor should be cleared.\n                     var currId = this.getCursor();\n                     if (currId == values[PK]) this.emit(\"cursorStale\", null);\n\n                     this.__dataCollection.remove(values[PK]);\n                     this.emit(\"delete\", values[PK]);\n                  }\n               });\n            }\n         }\n\n         // filter link data collection's cursor\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      this.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         let deleteId = data.data;\n         let needDelete = false;\n         let deletedIds = [];\n         let deletedTreeIds = [];\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needDelete = objList.length > 0;\n            if (needDelete) {\n               (objList || []).forEach((o) => {\n                  deletedIds =\n                     this.__dataCollection\n                        .find((item) => {\n                           return item[`${o.alias}.${o.PK()}`] == deleteId;\n                        })\n                        .map((o) => o.id) || [];\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     deletedTreeIds =\n                        this.__treeCollection\n                           .find((item) => {\n                              return item[`${o.alias}.${o.PK()}`] == deleteId;\n                           })\n                           .map((o) => o.id) || [];\n                  }\n               });\n            }\n         }\n         // Object\n         else {\n            needDelete = obj.id == data.objectId;\n            if (needDelete) {\n               deletedIds.push(deleteId);\n            }\n         }\n\n         // if it is the source object\n         if (needDelete) {\n            // If the deleted item is current cursor, then the current cursor should be cleared.\n            var currData = this.getCursor();\n\n            deletedIds.forEach((delId) => {\n               if (currData?.[obj.PK()] == delId)\n                  this.emit(\"cursorStale\", null);\n\n               if (this.__dataCollection.exists(delId))\n                  this.__dataCollection.remove(delId);\n            });\n\n            if (this.__treeCollection) {\n               deletedTreeIds.forEach((delId) => {\n                  if (this.__treeCollection.exists(delId))\n                     this.__treeCollection.remove(delId);\n               });\n            }\n\n            if (deletedIds[0]) this.emit(\"delete\", deletedIds[0]);\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n\n            this.__dataCollection.find({}).forEach((d) => {\n               let updateRelateVals = {};\n\n               connectedFields.forEach((f) => {\n                  let relateVal = d[f.relationName()];\n                  if (relateVal == null) return;\n\n                  if (\n                     Array.isArray(relateVal)\n                     // JOHNNY: for speed improvements, don't make this check:\n                     // just do it and that will reduce 1x through the array.\n                     // &&\n                     // relateVal.filter(\n                     //    (v) =>\n                     //       v == deleteId ||\n                     //       v.id == deleteId ||\n                     //       v[PK] == deleteId\n                     // ).length > 0\n                  ) {\n                     updateRelateVals[f.relationName()] = relateVal.filter(\n                        (v) => (v.id || v[PK] || v) != deleteId\n                     );\n                     updateRelateVals[f.columnName] = updateRelateVals[\n                        f.relationName()\n                     ].map((v) => v.id || v[PK] || v);\n                  } else if (\n                     relateVal == deleteId ||\n                     relateVal.id == deleteId ||\n                     relateVal[PK] == deleteId\n                  ) {\n                     updateRelateVals[f.relationName()] = null;\n                     updateRelateVals[f.columnName] = null;\n                  }\n               });\n\n               // If this item needs to update\n               if (Object.keys(updateRelateVals).length > 0) {\n                  // normalize data before add to data collection\n\n                  // var model = obj.model();\n                  // model.normalizeData(updateRelateVals);\n\n                  this.__dataCollection.updateItem(d.id, updateRelateVals);\n\n                  if (this.__treeCollection)\n                     this.__treeCollection.updateItem(d.id, updateRelateVals);\n\n                  this.emit(\"update\", this.__dataCollection.getItem(d.id));\n               }\n            });\n         }\n      });\n\n      // add listeners when cursor of link data collection is changed\n      const linkDC = this.datacollectionLink;\n      // if (linkDC && this.settings.loadAll) {\n      if (linkDC) {\n         this.eventAdd({\n            emitter: linkDC,\n            eventName: \"changeCursor\",\n            listener: (currentCursor) => {\n               // NOTE: we can clear data here to update UI display, then data will be fetched when webix.dataFeed event\n               if (\n                  !this.settings?.loadAll &&\n                  currentCursor?.id != linkDC.previousCursorId\n               )\n                  this.clearAll();\n\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n\n         this.eventAdd({\n            emitter: linkDC,\n            eventName: \"cursorStale\",\n            listener: (currentCursor) => {\n               // cursorStale : the current cursor hasn't CHANGED, but the data\n               // of that value has changed.\n               // This is triggered by one of our socket updates that detects\n               // changes to the cursor data.\n\n               // if don't have .loadAll set,  we'll need to update our data:\n               if (!this.settings?.loadAll) {\n                  // What I do here depends on what my linked DC has set for\n                  // it's .loadConnections (shouldPopulate) value\n                  let dvLink = this.datacollectionLink;\n                  let isMyDataThere = dvLink.shouldPopulate;\n                  if (Array.isArray(isMyDataThere)) {\n                     // if this was an array: it should be an array of columnNames\n                     // of the dvLink that are being populated.\n\n                     // the column I'm interested in:\n                     let colName = this.fieldLink.fieldLink.columnName;\n\n                     // is it there?\n                     isMyDataThere = isMyDataThere.indexOf(colName) > -1;\n                  }\n                  if (!isMyDataThere) {\n                     // If it didn't populate it's data, then I can't be\n                     // efficient about how to update my data.\n                     // we'll just have to reload:\n\n                     // find out how many entries we have already loaded and try to\n                     // load at least that many again.:\n                     let count = 20;\n                     if (this.__dataCollection.count() > count)\n                        count = this.__dataCollection.count();\n                     if (this.__treeCollection?.count() > count)\n                        count = this.__treeCollection.count();\n\n                     let currCursor = this.__dataCollection.getCursor();\n                     this.clearAll();\n                     this.reloadData(0, count).then(() => {\n                        this.__dataCollection.setCursor(currCursor);\n                        this.emit(\"cursorSelect\", currCursor);\n                     });\n                  } else {\n                     // if the linked DC does have my data populated:\n\n                     // the values I currently contain can fall into 1 of 3 categories:\n                     // 1) A value I currently have that I need to Keep\n                     // 2) A value I currently have that I need to remove\n                     // 3) A value I don't have, but need to Add\n\n                     // the current value of the cursor should have the ID references\n                     // to what SHOULD be in my display\n\n                     // get the current cursor of our linked DC\n                     let linkCursor;\n\n                     if (dvLink) {\n                        linkCursor = dvLink.getCursor();\n                     }\n                     if (!linkCursor) {\n                        // if linkCursor is no longer set, then we should clear()\n                        this.clearAll();\n                        return;\n                     }\n\n                     let PK = this.datasource.PK();\n\n                     // lets start by assuming all the current values in cursor are #3\n                     // -> all the values into valuesToAdd:\n\n                     let colName = this.fieldLink?.fieldLink?.relationName?.();\n                     let valuesToAdd = {};\n                     let valuesIn = colName ? linkCursor[colName] || [] : [];\n                     if (!Array.isArray(valuesIn)) valuesIn = [valuesIn];\n                     valuesIn = valuesIn.filter((v) => v);\n                     valuesIn.forEach((v) => {\n                        valuesToAdd[v[PK]] = v;\n                     });\n\n                     let valuesToRemove = [];\n                     // step through all the values I currently have\n                     let currValues = this.__dataCollection.find(() => true);\n                     currValues.forEach((value) => {\n                        // if value is in valuesToAdd\n                        if (valuesToAdd[value[PK]]) {\n                           // we already have it so turns out we don't need to add\n                           // it after all\n                           delete valuesToAdd[value[PK]];\n                        } else {\n                           // the current state of the Link Cursor value doesn't have\n                           // this value, so we need to remove it:\n                           valuesToRemove.push(value[PK]);\n                        }\n                     });\n\n                     // now remove the items we don't want:\n                     this.__dataCollection.remove(valuesToRemove);\n\n                     // then we have to ask for the values we need to add:\n                     valuesToAdd = Object.keys(valuesToAdd); // convert to []\n                     // NOTE: .staleRefresh() is designed to handle a single requst\n                     // that will be compiled with other requests to be more efficient\n                     // so we need to make 1 .staleRefresh() at a time and then\n                     // compile those results into our data collection.\n                     let prmsAllRefreshes = [];\n                     let allAdds = [];\n                     (valuesToAdd || []).forEach((v) => {\n                        let cond = { where: {} };\n                        cond.where[PK] = v;\n                        // NOTE: we are using the abbreviated condition syntax here.\n\n                        // NOTE: staleRefresh() has some buffering capabilities\n                        // that combine multiple calls into 1 more efficient call:\n                        prmsAllRefreshes.push(\n                           this.model.staleRefresh(cond).then((res) => {\n                              // check to make sure there is data to work with\n                              if (Array.isArray(res.data) && res.data.length) {\n                                 res.data.forEach((d) => {\n                                    allAdds.push(d);\n                                 });\n                              } else {\n                                 if (res.data) {\n                                    allAdds.push(res.data);\n                                 }\n                              }\n                           })\n                        );\n                     });\n                     Promise.all(prmsAllRefreshes).then(() => {\n                        allAdds.forEach((d) => {\n                           if (this.isValidData(d)) {\n                              if (!this.__dataCollection.exists(d[PK])) {\n                                 this.__dataCollection.add(d);\n                              }\n                           }\n                        });\n                     });\n                  }\n\n                  return;\n               }\n\n               // Otherwise, we need to refilter our data:\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n      }\n\n      // add listeners when cursor of the followed data collection is changed\n      const followDC = this.datacollectionFollow;\n      if (followDC) {\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"changeCursor\",\n            listener: () => {\n               const followCursor = followDC.getCursor();\n               const currentCursor = this.getCursor();\n\n               // If the cursor is not the new, then it should not reload.\n               if (\n                  followCursor?.[followDC.datasource.PK()] ==\n                  currentCursor?.[this.datasource.PK()]\n               )\n                  return;\n\n               this.clearAll();\n               this.loadData();\n            },\n         });\n\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"cursorStale\",\n            listener: () => {\n               // cursorStale : the current cursor hasn't CHANGED, but the data\n               // of that value has changed.\n               // This is triggered by one of our socket updates that detects\n               // changes to the cursor data.\n\n               this.clearAll();\n               this.loadData();\n            },\n         });\n      }\n   }\n\n   /*\n    * waitForDataCollectionToInitialize()\n    * there are certain situations where this datacollection shouldn't\n    * load until another one has loaded.  In those cases, the fn()\n    * will wait for the required datacollection to emit \"initializedData\"\n    * before continuing on.\n    * @param {ABViewDataCollection} DC\n    *      the DC this datacollection depends on.\n    * @returns {Promise}\n    */\n   async waitForDataCollectionToInitialize(DC, msg) {\n      DC.init();\n\n      return new Promise((resolve, reject) => {\n         /* eslint-disable no-fallthrough */\n         switch (DC.dataStatus) {\n            // if that DC hasn't started initializing yet, start it!\n            case DC.dataStatusFlag.notInitial:\n               DC.loadData().catch(reject);\n            // no break;\n\n            // once in the process of initializing\n\n            case DC.dataStatusFlag.initializing:\n               /* eslint-enable no-fallthrough*/\n               // listen for \"initializedData\" event from the DC\n               // then we can continue.\n               this.eventRemove(\"initializedData\", DC);\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"initializedData\",\n                  listener: () => {\n                     // go next\n                     resolve();\n                  },\n               });\n               break;\n\n            // if it is already initialized, we can continue:\n            case DC.dataStatusFlag.initialized:\n               resolve();\n               break;\n\n            // just in case, if the status is not known, just continue\n            default:\n               resolve();\n               break;\n         }\n         /* eslint-enable no-fallthrough */\n      });\n   }\n\n   // /**\n   //  * @method whereCleanUp()\n   //  * Parse through the current where condition and remove any null or\n   //  * empty logical blocks.\n   //  * @param {obj} curr\n   //  *        1) The current where condition in ABQuery Format:\n   //  *        {\n   //  *           glue: [AND, OR],\n   //  *           rules: [ {rule} ]\n   //  *        }\n   //  *        or 2) The current {rule} to validate\n   //  *        {\n   //  *          key:{string},\n   //  *          rule:{string},\n   //  *          vlaue:{mixed}\n   //  *        }\n   //  * @return {ABQuery.where} / { Rule }\n   //  */\n   // whereCleanUp(curr) {\n   //    if (curr) {\n   //       if (curr.glue && curr.rules) {\n   //          // this is a logical Block (AND, OR)\n   //          // we need to filter the children\n   //          let newValue = { glue: curr.glue, rules: [] };\n   //          curr.rules.forEach((r) => {\n   //             let cleanRule = this.whereCleanUp(r);\n   //             // don't add values that didn't pass\n   //             if (cleanRule) {\n   //                newValue.rules.push(cleanRule);\n   //             }\n   //          });\n\n   //          // if we have a non empty block, then return it:\n   //          if (newValue.rules.length > 0) {\n   //             return newValue;\n   //          }\n\n   //          // this isn't really a valid conditional, so null\n   //          return null;\n   //       }\n\n   //       // This is a specific rule, that isn't null so:\n   //       return curr;\n   //    }\n   //    return null;\n   // }\n\n   /**\n    * @method getWhereClause()\n    * Return the current where condition for the datacollection.\n    * The where condition might change depending if we are following\n    * another datacollection or not.\n    *\n    * NOTE: start and limit might be effected by some of our settings\n    * so we include them here and then return those values as well.\n    *\n    * @param {int} start\n    * @param {int} limit\n    * @returns [ wheres, start, limit ]\n    */\n   getWhereClause(start, limit) {\n      // pull filter conditions\n      let wheres = this.AB.cloneDeep(\n         this.settings.objectWorkspace.filterConditions ?? {}\n      );\n      // if we pass new wheres with a reload use them instead\n      if (this.__reloadWheres) {\n         wheres = this.__reloadWheres;\n      }\n      wheres.glue = wheres.glue || \"and\";\n      wheres.rules = wheres.rules || [];\n\n      const __additionalWheres = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      // add the filterCond if there are rules to add\n      if (this.__filterCond?.rules?.length > 0) {\n         __additionalWheres.rules.push(this.__filterCond);\n      }\n\n      // Filter by a selected cursor of a link DC\n      let linkRule = this.ruleLinkedData();\n      if (!this.settings.loadAll && linkRule) {\n         __additionalWheres.rules.push(linkRule);\n      }\n      // pull data rows following the follow data collection\n      else if (this.datacollectionFollow) {\n         const followCursor = this.datacollectionFollow.getCursor();\n         // store the PK as a variable\n         let PK = this.datasource.PK();\n         // if the datacollection we are following is a query\n         // add \"BASE_OBJECT.\" to the PK so we can select the\n         // right value to report the cursor change to\n         if (this.datacollectionFollow.settings.isQuery) {\n            PK = \"BASE_OBJECT.\" + PK;\n         }\n         if (followCursor) {\n            start = 0;\n            limit = null;\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: followCursor[PK],\n                  },\n               ],\n            };\n         }\n         // Set no return rows\n         else {\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: \"NO RESULT ROW\",\n                  },\n               ],\n            };\n         }\n      }\n\n      // Combine setting & program filters\n      if (__additionalWheres.rules.length) {\n         if (wheres.rules.length) {\n            __additionalWheres.rules.unshift(wheres);\n         }\n         wheres = __additionalWheres;\n      }\n\n      // remove any null in the .rules\n      // if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n      wheres = this.datasource.whereCleanUp(wheres);\n\n      return [wheres, start, limit];\n   }\n\n   async loadData(start, limit) {\n      // mark data status is initializing\n      if (this._dataStatus == this.dataStatusFlag.notInitial) {\n         this._dataStatus = this.dataStatusFlag.initializing;\n         this.emit(\"initializingData\", {});\n      }\n\n      var obj = this.datasource;\n      if (obj == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      var model = obj.model();\n      if (model == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      // pull the defined sort values\n      var sorts = this.settings.objectWorkspace.sortFields || [];\n\n      let [wheres, s2, l2] = this.getWhereClause(start, limit);\n      start = s2;\n      limit = l2;\n\n      // // pull filter conditions\n      // let wheres = this.AB.cloneDeep(\n      //    this.settings.objectWorkspace.filterConditions ?? {}\n      // );\n      // // if we pass new wheres with a reload use them instead\n      // if (this.__reloadWheres) {\n      //    wheres = this.__reloadWheres;\n      // }\n      // wheres.glue = wheres.glue || \"and\";\n      // wheres.rules = wheres.rules || [];\n\n      // const __additionalWheres = {\n      //    glue: \"and\",\n      //    rules: [],\n      // };\n\n      // // add the filterCond if there are rules to add\n      // if (this.__filterCond?.rules?.length > 0) {\n      //    __additionalWheres.rules.push(this.__filterCond);\n      // }\n\n      // // Filter by a selected cursor of a link DC\n      // let linkRule = this.ruleLinkedData();\n      // if (!this.settings.loadAll && linkRule) {\n      //    __additionalWheres.rules.push(linkRule);\n      // }\n      // // pull data rows following the follow data collection\n      // else if (this.datacollectionFollow) {\n      //    const followCursor = this.datacollectionFollow.getCursor();\n      //    // store the PK as a variable\n      //    let PK = this.datasource.PK();\n      //    // if the datacollection we are following is a query\n      //    // add \"BASE_OBJECT.\" to the PK so we can select the\n      //    // right value to report the cursor change to\n      //    if (this.datacollectionFollow.settings.isQuery) {\n      //       PK = \"BASE_OBJECT.\" + PK;\n      //    }\n      //    if (followCursor) {\n      //       start = 0;\n      //       limit = null;\n      //       wheres = {\n      //          glue: \"and\",\n      //          rules: [\n      //             {\n      //                key: this.datasource.PK(),\n      //                rule: \"equals\",\n      //                value: followCursor[PK],\n      //             },\n      //          ],\n      //       };\n      //    }\n      //    // Set no return rows\n      //    else {\n      //       wheres = {\n      //          glue: \"and\",\n      //          rules: [\n      //             {\n      //                key: this.datasource.PK(),\n      //                rule: \"equals\",\n      //                value: \"NO RESULT ROW\",\n      //             },\n      //          ],\n      //       };\n      //    }\n      // }\n\n      // // Combine setting & program filters\n      // if (__additionalWheres.rules.length) {\n      //    if (wheres.rules.length) {\n      //       __additionalWheres.rules.unshift(wheres);\n      //    }\n      //    wheres = __additionalWheres;\n      // }\n\n      // // remove any null in the .rules\n      // // if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n      // wheres = obj.whereCleanUp(wheres);\n\n      // set query condition\n      var cond = {\n         where: wheres || {},\n         // limit: limit || 20,\n         skip: start || 0,\n         sort: sorts,\n         populate: this.shouldPopulate,\n      };\n\n      //// NOTE: we no longer set a default limit on loadData() but\n      //// require the platform.loadData() to pass in a default limit.\n      if (limit != null) {\n         cond.limit = limit;\n      }\n\n      // if settings specify loadAll, then remove the limit\n      if (this.settings.loadAll && !this.isCursorFollow) {\n         delete cond.limit;\n      }\n\n      //\n      // Step 1: make sure any DataCollections we are linked to are\n      // initialized first.  Then proceed with our initialization.\n      //\n      const parentDc = this.datacollectionLink ?? this.datacollectionFollow;\n      // If we are linked to another datacollection then wait for it\n      if (parentDc) {\n         await this.waitForDataCollectionToInitialize(parentDc);\n      }\n\n      //\n      // Step 2: if we have any filter rules that depend on other DataCollections,\n      // then wait for them to be initialized first.\n      // eg: \"(not_)in_data_collection\" rule filters\n      if (wheres?.rules?.length) {\n         const dcFilters = [];\n\n         wheres.rules.forEach((rule) => {\n            // if this collection is filtered by data collections we need to load them in case we need to validate from them later\n            if (\n               rule.rule == \"in_data_collection\" ||\n               rule.rule == \"not_in_data_collection\"\n            ) {\n               const dv = this.AB.datacollectionByID(rule.value);\n               if (dv) {\n                  dcFilters.push(this.waitForDataCollectionToInitialize(dv));\n               }\n            }\n         });\n\n         await Promise.all(dcFilters);\n      }\n\n      //\n      // Step 3: pull data to data collection\n      // we will keep track of the resolve, reject for this\n      // operation.\n      // the actual resolve() should happen in the\n      // .processIncomingData() after the  data is processed.\n      return new Promise((resolve, reject) => {\n         this._pendingLoadDataResolve = {\n            resolve: resolve,\n            reject: reject,\n         };\n\n         this.platformFind(model, cond).catch((err) => {\n            reject(err);\n         });\n      });\n   }\n\n   platformFind(model, cond) {\n      //// Core Migration Note:\n      //// the ABViewDataCollectionCore now manages data in a different way:\n      //// local data  vs  Remote Data\n      //// this will need to be updated to reflect that management:\n      //// (and also explains why we refactored things into .processIncomingData())\n      return model.findAll(cond).then((data) => {\n         return this.processIncomingData(data);\n      });\n   }\n\n   /**\n    * @method shouldPopulate()\n    * Return our populate status. We now want to query this info outside this\n    * object.\n    * @return {bool|Array}\n    *         true/false,  or an array of columnNames that are being populated.\n    */\n   get shouldPopulate() {\n      return (\n         this.settings.populate ??\n         (this.settings.preventPopulate ? false : true)\n      );\n   }\n\n   /**\n    * @method queuedParse()\n    * This is an attempt at loading very large datasets into a Webix DC without locking up\n    * the display.\n    * @param {array} data\n    *        The data to load into the __dataCollection\n    * @param {callback} cb\n    *        A callback to call when the data has been fully loaded.\n    */\n   async queuedParse(incomingData, cb) {\n      const data = incomingData?.data || incomingData;\n      if (!data?.length) {\n         cb?.();\n         return Promise.resolve();\n      }\n\n      const total_count = incomingData.total_count;\n\n      let nextData;\n      if (data.length > 250) {\n         // let pos = this.__dataCollection.count();\n         let pos = this.__dataCollection.find({}).length;\n         let remain = data.splice(250);\n         nextData = {\n            data: remain,\n            pos: pos + data.length,\n            total_count,\n         };\n      }\n\n      const parsedData = {\n         data,\n         pos: incomingData.pos,\n         total_count,\n      };\n      this.__dataCollection.parse(parsedData);\n\n      return new Promise((resolve) => {\n         setTimeout(async () => {\n            await this.queuedParse(nextData);\n\n            // Introduce a delay to ensure the UI has fully rendered the list before proceeding\n            setTimeout(async () => {\n               cb?.();\n               resolve();\n            }, 50);\n         }, 15);\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      return Promise.resolve().then(() => {\n         // store total count\n         this.__totalCount = data.total_count;\n\n         // Need to .parse at the first time\n         if (!this.__dataCollection.find({}).length) {\n            this.__dataCollection.clearAll();\n            // this.__dataCollection.parse(data);\n         }\n\n         if (this.__throttleIncoming) clearTimeout(this.__throttleIncoming);\n         this.__throttleIncoming = setTimeout(async () => {\n            // using queuedParse() to responsively handle large datasets.\n            await this.queuedParse(data);\n\n            // In order to get the total_count updated I had to use .load()\n            this.__dataCollection.load(async () => {\n               setTimeout(() => {\n                  this.refreshLinkCursor();\n               }, 250);\n\n               return {\n                  // NOTE: return a empty array to prevent render items in DataTable twice. (Items are rendered in .queuedParse function)\n                  data: [],\n                  pos: data.pos,\n                  total_count: data.total_count,\n               };\n            });\n\n            // this does nothing???\n            this.parseTreeCollection(data);\n\n            // if we are linked, then refresh our cursor\n            var linkDv = this.datacollectionLink;\n            if (linkDv) {\n               // filter data by match link data collection\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            } else {\n               // set static cursor\n               this.setStaticCursor();\n            }\n\n            // now we close out our .loadData() promise.resolve() :\n            if (this._pendingLoadDataResolve) {\n               this._pendingLoadDataResolve.resolve();\n\n               // after we call .resolve() stop tracking this:\n               this._pendingLoadDataResolve = null;\n            }\n\n            // If dc set load all, then it will not trigger .loadData in dc at\n            // .onAfterLoad event\n            if (this.settings.loadAll) {\n               this.emit(\"loadData\", {});\n            }\n\n            // mark initialized data\n            if (this._dataStatus != this.dataStatusFlag.initialized) {\n               this._dataStatus = this.dataStatusFlag.initialized;\n               this.emit(\"initializedData\", {});\n            }\n         }, 100);\n      });\n   }\n\n   /**\n    * @method reloadData()\n    * Trigger the DataCollection to reload its data from the server.\n    * @param {int} start\n    *        Start position of where we want the data to load.\n    * @param {int} limit\n    *        How many entries to load at a time.\n    * @return {Promise}\n    */\n   reloadData(start, limit) {\n      // var waitForDataCollectionToInitialize = (DC) => {\n      //    return new Promise((resolve, reject) => {\n      //       switch (DC.dataStatus) {\n      //          // if that DC hasn't started initializing yet, start it!\n      //          case DC.dataStatusFlag.notInitial:\n      //             DC.loadData().catch(reject);\n      //          // no break;\n\n      //          // once in the process of initializing\n      //          /* eslint-disable no-fallthrough*/\n      //          case DC.dataStatusFlag.initializing:\n      //             /* eslint-enable no-fallthrough*/\n      //             // listen for \"initializedData\" event from the DC\n      //             // then we can continue.\n      //             this.eventAdd({\n      //                emitter: DC,\n      //                eventName: \"initializedData\",\n      //                listener: () => {\n      //                   // go next\n      //                   resolve();\n      //                },\n      //             });\n      //             break;\n\n      //          // if it is already initialized, we can continue:\n      //          case DC.dataStatusFlag.initialized:\n      //             resolve();\n      //             break;\n\n      //          // just in case, if the status is not known, just continue\n      //          default:\n      //             resolve();\n      //             break;\n      //       }\n      //    });\n      // };\n\n      return Promise.resolve().then(() => {\n         // check if we are currently waiting for more data requests on this datacollection before continuing\n         if (this.reloadTimer) {\n            // if we are already waiting delete the current timer\n            clearTimeout(this.reloadTimer);\n            delete this.reloadTimer;\n         }\n\n         // return a promise\n         if (!this.reloadPromise) {\n            this.reloadPromise = new Promise((resolve, reject) => {\n               this.reloadPromise__resolve = resolve;\n               this.reloadPromise__reject = reject;\n            });\n         }\n\n         // then create a new timeout to delete current timeout, clear data\n         // and load new\n         this.reloadTimer = setTimeout(() => {\n            // clear the data from the dataCollection,\n            this.clearAll();\n            // then loads new data from the server\n            return this.loadData(start, limit)\n               .then(() => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__resolve();\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               })\n               .catch((err) => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__reject(err);\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               });\n         }, 50);\n         // setting to 50ms because right now we do not see many\n         // concurrent calls,  we need to increase this if we begin to\n\n         return this.reloadPromise;\n      });\n   }\n\n   /**\n    * reloadWheres()\n    * stores the child data collections filters for subsequent loads.\n    * It is called from bindParentDc() when child data collections that are not\n    * marked to load all data are initializing. To do this we use webix\n    * server side binding by setting the param of \"dataFeed\".\n    * @param {obj} wheres  the new filters for the data collection\n    *        This is a combination of any exisiting filters the data collection\n    *        alreay had as well as the filter for the current cursor set by the\n    *        master data collection. We store this in __reloadWheres for when\n    *        the data needs to be updated.\n    *        The format of the wheres is our Query Builder Format\n    *        ex: {\n    *              \"glue\": \"and\",\n    *              \"rules\": [{\n    *                \"key\": \"33ba8957-6b9c-4ddb-9533-c46b13878ae1\",\n    *                \"rule\": \"contains\",\n    *                \"value\": \"1594176994894\"\n    *              }]\n    *            }\n    */\n   reloadWheres(wheres) {\n      this.__reloadWheres = wheres;\n   }\n\n   getData(filter) {\n      var dc = this.__dataCollection;\n      if (dc) {\n         return dc.find((row) => {\n            let isValid = true;\n\n            // data collection filter\n            // isValid = this.isValidData(row);\n\n            // NOTE: data are filtered from the server side (webix.dataFeed)\n            // parent dc filter\n            let linkDv = this.datacollectionLink;\n            if (linkDv && this.settings.loadAll && isValid) {\n               isValid = this.isParentFilterValid(row);\n            }\n\n            // addition filter\n            if (isValid && filter) {\n               isValid = filter(row);\n            }\n\n            return isValid;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   isParentFilterValid(rowData) {\n      // data is empty\n      if (rowData == null) return false;\n\n      var linkDv = this.datacollectionLink;\n      if (linkDv == null) return true;\n\n      const linkObj = linkDv.datasource;\n      if (linkObj == null) return true;\n\n      var fieldLink = this.fieldLink;\n      if (fieldLink == null) return true;\n\n      // if the parent's cursor is not set we have not filted this collection\n      // yet so the data that comes back should be valid\n      var linkCursor = linkDv.getCursor();\n      if (linkCursor == null) {\n         return true;\n      }\n\n      var linkVal = rowData[fieldLink.relationName()];\n      if (linkVal == null) {\n         // try to get relation value(id) again\n         if (rowData[fieldLink.columnName]) {\n            linkVal = rowData[fieldLink.columnName];\n         } else {\n            return false;\n         }\n      }\n\n      let PK = fieldLink.object.PK();\n\n      // array - 1:M , M:N\n      if (linkVal.filter) {\n         return (\n            linkVal.filter(\n               (val) =>\n                  (val[PK] || val.id || val) ==\n                  (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n            ).length > 0\n         );\n      } else {\n         return (\n            (linkVal[PK] || linkVal.id || linkVal) ==\n            (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n         );\n      }\n   }\n\n   clearAll() {\n      if (this.__dataCollection) this.__dataCollection.clearAll();\n\n      if (this.__treeCollection) this.__treeCollection.clearAll();\n\n      this._dataStatus = this.dataStatusFlag.notInitial;\n   }\n\n   get totalCount() {\n      return this.__totalCount || 0;\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method bind\n    * @param {Object} component - a webix element instance\n    */\n   bind(/* component */) {\n      console.error(\"Platform.ABDataCollection.bind() Not implemented\");\n   }\n\n   unbind(/* component */) {\n      console.error(\"Platform.ABDataCollection.unbind() Not implemented\");\n   }\n\n   removeComponent(comId) {\n      // get index\n      let index = this.__bindComponentIds.indexOf(comId);\n\n      // delete\n      this.__bindComponentIds.splice(index, 1);\n   }\n\n   /**\n    * @method ruleLinkedData()\n    * return a QueryFilter rule that also checks that incoming data is linked\n    * to our .datacollectionLink (if it exists).\n    * @return {obj} {QueryFilterRule}\n    */\n   ruleLinkedData() {\n      let rule = null;\n      const dataCollectionLink = this.datacollectionLink;\n      const fieldLink = this.fieldLink;\n      if (dataCollectionLink && fieldLink) {\n         const linkCursorId = dataCollectionLink?.getCursor()?.id;\n         if (linkCursorId) {\n            const linkType = `${fieldLink.linkType()}:${fieldLink.linkViaType()}`;\n\n            let filterRule;\n            // NOTE: If object is query, then use \"contains\" because ABOBjectQuery return JSON\n            if (fieldLink.alias) {\n               filterRule = \"contains\";\n            }\n            // M:1\n            else if (linkType == \"many:one\") {\n               filterRule = \"have_relation\";\n            }\n            // 1:M\n            else {\n               filterRule = \"equals\";\n            }\n\n            rule = {\n               alias: fieldLink.alias, // ABObjectQuery\n               key: fieldLink.id,\n               rule: filterRule,\n               value: fieldLink.getRelationValue(\n                  dataCollectionLink.__dataCollection.getItem(linkCursorId)\n               ),\n            };\n         }\n      }\n      return rule;\n   }\n\n   /**\n    * @method refreshFilterConditions()\n    * This is called in two primary cases:\n    *    - on initialization of a DC to setup our filters.\n    *    - in the operation of the ABDesigner when using a DC to display data\n    *      in the Work_object_grid and the datacollection_work(?)\n    * In the case of the ABDesigner, new temporary where conditions are provided\n    * from the possible filters we can set, and those need to effect the data\n    * we display.\n    * @param {ABRowFilter.where} wheres\n    *        The filter condition from the ABRowFilter values we are storing.\n    */\n   refreshFilterConditions(wheres = null) {\n      // There are 3 Filters that help us know if our data is Valid:\n      // 1) A filter for any ABObjectQuery we are managing.\n      // 2) A filter for our own filter condition\n      // 3) A filter that represents what our scopes allows\n\n      // Set filter of ABObject\n      if (this.__filterDatasource == null)\n         this.__filterDatasource = this.AB.filterComplexNew(\n            `${this.id}_filterDatasource`\n         );\n\n      if (this.datasource) {\n         // this.__filterDatasource.applicationLoad(this.datasource.application);\n         this.__filterDatasource.fieldsLoad(this.datasource.fields());\n\n         let filterConditions;\n\n         // Query\n         if (this.datasource instanceof this.AB.Class.ABObjectQuery) {\n            filterConditions = this.datasource.where;\n         }\n         // Apr 29, 2021 Removed this because we do not want Object filters to\n         // effect validation of DataCollections\n         // Object\n\n         // else if (this.datasource instanceof ABObject) {\n         //    let currentView = this.datasource.currentView();\n         //    if (currentView && currentView.filterConditions)\n         //       filterConditions = currentView.filterConditions;\n         // }\n\n         if (filterConditions)\n            this.__filterDatasource.setValue(filterConditions);\n         else this.__filterDatasource.setValue({});\n      } else {\n         this.__filterDatasource.fieldsLoad([]);\n         this.__filterDatasource.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of data view\n      // Apr 29, 2021 Added this code back to validate with DataCollection Filters\n      if (this.__filterDatacollection == null)\n         this.__filterDatacollection = this.AB.filterComplexNew(\n            `${this.id}_filterDatacollection`\n         );\n\n      // this.__filterDatacollection.applicationLoad(\n      //    this.datasource ? this.datasource.application : null\n      // );\n      this.__filterDatacollection.fieldsLoad(\n         this.datasource ? this.datasource.fields() : []\n      );\n\n      // if we pass in wheres, then Save that value to our internal .filterConditions\n      if (wheres) this.settings.objectWorkspace.filterConditions = wheres;\n\n      let filter = this.AB.cloneDeep(\n         this.settings.objectWorkspace?.filterConditions ?? {\n            glue: \"and\",\n            rules: [],\n         }\n      );\n      // sanity checks:\n      // I've learned not to trust: this.settings.objectWorkspace\n      filter.glue = filter.glue || \"and\";\n      filter.rules = filter.rules || [];\n\n      // if there is a linkRule, add it to filter\n      let linkRule = this.ruleLinkedData(); // returns a rule if we are linked\n      if (linkRule) {\n         // NOTE: linkRule was originally designed to produce a rule for the\n         // loadData() routine.  In SQL, our linkRule might have an \"equals\"\n         // rule, to match.  But in this context if our linktype is \"many\"\n         // we need to change the rule to \"contains\":\n         // QUESTION: If this is still required, consider moving it into the `ruleLinkedData` function for maintainability. ??\n         // if (this.fieldLink?.linkType() == \"many\") {\n         //    linkRule.rule = \"contains\";\n         // }\n\n         // if linkRule not already IN filter:\n         let isAlreadyThere = false;\n         let keys = Object.keys(linkRule);\n         (filter.rules || []).forEach((r) => {\n            if (isAlreadyThere) return;\n            let allMatch = true;\n            keys.forEach((k) => {\n               if (r[k] != linkRule[k]) {\n                  allMatch = false;\n               }\n            });\n            isAlreadyThere = allMatch;\n         });\n         if (!isAlreadyThere) {\n            // link Rule needs to be ANDed to our current Rules:\n            if (filter.glue == \"and\") {\n               filter.rules.push(linkRule);\n            } else {\n               filter = { glue: \"and\", rules: [filter, linkRule] };\n            }\n         }\n      }\n\n      if ((filter.rules || []).length > 0 && !this.isCursorFollow) {\n         this.__filterDatacollection.setValue(filter);\n      } else {\n         this.__filterDatacollection.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of user's scope\n      if (this.__filterScope == null)\n         this.__filterScope = this.AB.filterComplexNew(\n            `${this.id}_filterScope`\n         );\n\n      if (this.datasource) {\n         let scopeList = (this.userScopes || []).filter(\n            (s) =>\n               !s.allowAll &&\n               (s.objectIds || []).indexOf(this.datasource.id) > -1\n         );\n         if (scopeList && scopeList.length > 0) {\n            // this.__filterScope.applicationLoad(this.datasource.application);\n            this.__filterScope.fieldsLoad(this.datasource.fields() || []);\n\n            // concat all rules of scopes\n            let scopeRules = [];\n            scopeList\n               .filter(\n                  (s) => s.filter && s.filter.rules && s.filter.rules.length\n               )\n               .forEach((s) => {\n                  let sRules = (s.filter.rules || []).filter(\n                     (r) =>\n                        this.datasource.fields((f) => f.id == r.key).length > 0\n                  );\n\n                  scopeRules = scopeRules.concat(sRules);\n               });\n\n            let scopeWhere = {\n               glue: \"or\",\n               rules: scopeRules,\n            };\n            this.__filterScope.setValue(scopeWhere);\n         }\n      }\n   }\n\n   get isGroup() {\n      return this.__isGroup || false;\n   }\n\n   ///\n   /// Sync type\n   ///\n\n   get syncTypeFlag() {\n      return {\n         server: 1,\n         client: 2,\n      };\n   }\n\n   get syncType() {\n      return this.settings.syncType || DefaultValues.syncType;\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(/*data*/) {\n      var error = new Error(\n         \"the platform.ABDataCollection._dataCollectionNew() is expected to return a proper DataCollection!\"\n      );\n      console.error(error);\n      return null;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      console.error(\n         \"the platform.ABDataCollection._treeCollectionNew() is expected to return a proper TreeCollection!\"\n      );\n      return null;\n   }\n\n   parseTreeCollection(data = {}) {\n      // TODO all this does is log \"is missing?\"\n      // if (false) {\n      //    console.log(\n      //       \"Platform.ABDataCollection.parseTreeCollection() missing!\"\n      //    );\n      // }\n   }\n   // parseTreeCollection(data = {}) {\n\n   //  if (!(this.__datasource instanceof ABObjectQuery) ||\n   //    !this.__datasource.isGroup ||\n   //    !this.__treeCollection)\n   //    return;\n\n   //  let addRowToTree = (join = {}, parentAlias = null) => {\n\n   //    let alias = join.alias;\n\n   //    (data.data || []).forEach(row => {\n\n   //      let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n   //      if (!dataId) return;\n\n   //      // find parent nodes\n   //      let parentItemIds = [];\n   //      let parentId = row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n   //      if (parentId) {\n   //        parentItemIds = this.__treeCollection\n   //          .find(item => item._alias == parentAlias && item._dataId == parentId)\n   //          .map(item => item.id);\n   //      }\n\n   //      // check exists\n   //      let exists = this.__treeCollection.find(item => {\n   //        return item._alias == alias &&\n   //          item._dataId == dataId &&\n   //          (parentItemIds.length == 0 || parentItemIds.indexOf(item.$parent) > -1);\n   //      }, true);\n   //      if (exists) return;\n\n   //      let treeNode = {};\n   //      treeNode._alias = alias;\n   //      treeNode._dataId = dataId;\n   //      treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n   //      Object.keys(row).forEach(propName => {\n\n   //        // Pull value from alias\n   //        if (propName.indexOf(`${alias}.`) == 0) {\n   //          treeNode[propName] = row[propName];\n   //        }\n\n   //      });\n\n   //      if (row.translations)\n   //        treeNode.translations = row.translations;\n\n   //      // child nodes\n   //      if (parentItemIds.length > 0)\n   //        parentItemIds.forEach(parentItemId => {\n   //          this.__treeCollection.add(treeNode, null, parentItemId);\n   //        });\n   //      // root node\n   //      else\n   //        this.__treeCollection.add(treeNode, null);\n\n   //    });\n\n   //    // Sub-joins\n   //    (join.links || []).forEach(link => {\n   //      addRowToTree(link, alias);\n   //    });\n\n   //  };\n\n   //  // Show loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.showProgress)\n   //      boundComp.showProgress({ type: \"icon\" });\n\n   //  });\n\n   //  addRowToTree(this.__datasource.joins());\n\n   //  // Hide loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.hideProgress)\n   //      boundComp.hideProgress();\n\n   //  })\n   // }\n\n   /**\n    * @method _queryUpdateData\n    *\n    * @param {Array} objList - List of ABObject\n    * @param {Object} values\n    */\n   _queryUpdateData(objList, values) {\n      let updatedVals = {};\n\n      // Add alias to properties of update data\n      Object.keys(values).forEach((key) => {\n         objList.forEach((oItem) => {\n            let alias = this.datasource.objectAlias(oItem.id);\n\n            updatedVals[`${alias}.${key}`] = values[key];\n\n            // Add alias to properties of .translations\n            if (\n               key == \"translations\" &&\n               values[\"translations\"] &&\n               values[\"translations\"].length\n            ) {\n               updatedVals.translations = [];\n\n               values[\"translations\"].forEach((tran) => {\n                  let updatedTran = {};\n\n                  Object.keys(tran).forEach((tranKey) => {\n                     if (tranKey == \"language_code\")\n                        updatedTran[\"language_code\"] = tran[\"language_code\"];\n                     else updatedTran[`${alias}.${tranKey}`] = tran[tranKey];\n                  });\n\n                  updatedVals.translations.push(updatedTran);\n               });\n            }\n         });\n      });\n\n      return updatedVals;\n   }\n\n   isValidData(rowData, skipDatasourceFilter = false) {\n      let result = true;\n\n      // NOTE: should we use filter of the current view of object to filter\n      //        if yes, update .wheres condition in .loadData too\n      if (this.__filterDatasource && !skipDatasourceFilter)\n         result = result && this.__filterDatasource.isValid(rowData);\n\n      if (this.__filterDatacollection)\n         result = result && this.__filterDatacollection.isValid(rowData);\n\n      if (result && this.__filterScope)\n         result = result && this.__filterScope.isValid(rowData);\n\n      return result;\n   }\n\n   updateRelationalDataFromLinkDC(objectId, rowData) {\n      const dcLink = this.datacollectionLink;\n      const cursorLink = dcLink?.getCursor();\n\n      // Add the new data that just relate to the Link DC\n      if (\n         dcLink?.datasource.id == objectId &&\n         cursorLink &&\n         cursorLink.id == rowData?.id\n      ) {\n         const obj = this.datasource;\n         const linkedField = this.fieldLink;\n         let relatedData = rowData[linkedField.fieldLink.relationName()];\n         if (relatedData && !Array.isArray(relatedData))\n            relatedData = [relatedData];\n\n         (relatedData ?? []).forEach((item) => {\n            if (item == null) return;\n\n            if (!this.__dataCollection.exists(item[obj.PK()])) {\n               // QUESTION: Should we .find to get fully info here ?\n               const newItem = this.AB.cloneDeep(item);\n               newItem[linkedField.relationName()] = [rowData];\n               this.__dataCollection.add(newItem);\n            }\n         });\n\n         // trigger to components to know there are updated data.\n         this.emit(\"warnRefresh\");\n      }\n   }\n\n   // Clone\n\n   clone(settings) {\n      settings = settings || this.toObj();\n      var clonedDatacollection = new this.constructor(settings, this.AB);\n      clonedDatacollection.__datasource = this.__datasource;\n      clonedDatacollection._dataStatus = this._dataStatus;\n\n      // clonedDatacollection.__dataCollection = this.__dataCollection.copy();\n      clonedDatacollection.__filterDatacollection.setValue(\n         settings.settings.objectWorkspace.filterConditions\n      );\n\n      var parseMe = () => {\n         if (clonedDatacollection.__dataCollection) {\n            clonedDatacollection.__dataCollection.parse(\n               this.__dataCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n         if (clonedDatacollection.__treeCollection) {\n            clonedDatacollection.__treeCollection.parse(\n               this.__treeCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n      };\n\n      parseMe();\n\n      // return new Promise((resolve, reject) => {\n      //    // load the data\n      //    clonedDatacollection\n      //       .loadData()\n      //       .then(() => {\n\n      // set the cursor\n      clonedDatacollection.setStaticCursor();\n\n      var cursorID = this.getCursor();\n      if (cursorID) {\n         // NOTE: webix documentation issue: .getCursor() is supposed to return\n         // the .id of the item.  However it seems to be returning the {obj}\n         if (cursorID.id) cursorID = cursorID.id;\n\n         clonedDatacollection.setCursor(cursorID);\n      }\n\n      return clonedDatacollection;\n\n      // resolve(clonedDatacollection);\n      //       })\n      //       .catch(reject);\n      // });\n   }\n\n   filteredClone(filters) {\n      var obj = this.toObj();\n\n      // check to see that filters are set (this is sometimes helpful to select the first record without doing so at the data collection level)\n      if (filters?.rules?.length) {\n         if (obj.settings.objectWorkspace.filterConditions?.rules?.length) {\n            obj.settings.objectWorkspace.filterConditions.rules =\n               obj.settings.objectWorkspace.filterConditions.rules.concat(\n                  filters.rules\n               );\n         } else {\n            obj.settings.objectWorkspace.filterConditions = filters;\n         }\n      }\n      let clonedDC = this.clone(obj);\n      return clonedDC; // new ABViewDataCollection(settings, this.application, this.parent);\n   }\n\n   //\n   // Event handles\n   //\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    *              emitter: object,\n    *              eventName: string,\n    *              listener: function\n    *            }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      this.__events = this.__events || [];\n\n      let exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    */\n   eventClear() {\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method eventRemove()\n    * unsubscribe a event.\n    *\n    * @param {string} eventName - Name of the event\n    * @param {object} emitter - Emitter object\n    */\n   eventRemove(eventName, emitter = null) {\n      if (this.__events?.length > 0 && eventName) {\n         this.__events.forEach((e) => {\n            if (eventName == e.eventName && (!emitter || emitter == e.emitter))\n               e.emitter.removeListener(e.eventName, e.listener);\n         });\n\n         this.__events = this.__events.filter((e) => e.eventName != eventName);\n      }\n   }\n\n   get userScopes() {\n      return [];\n   }\n\n   get isCursorFollow() {\n      return (\n         this.settings.followDatacollectionID &&\n         (!this.settings.linkDatacollectionID || !this.settings.linkFieldID)\n      );\n   }\n\n   get datacollectionFollow() {\n      if (!this.isCursorFollow) return null;\n\n      return (this.AB ?? AB).datacollectionByID(\n         this.settings.followDatacollectionID\n      );\n   }\n\n   get previousCursorId() {\n      return this.__previousCursorId;\n   }\n\n   waitReady() {\n      // if (this.dataStatus == this.dataStatusFlag.initialized) {\n      //    return Promise.resolve();\n      // }\n      // console.log(`DC[${this.label}] waiting for initializedData.`);\n      // return new Promise((resolve /*, reject */) => {\n      //    this.once(\"initializedData\", ()=>{\n      //       resolve();\n      //    })\n\n      // })\n\n      return this.waitForDataCollectionToInitialize(this);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nmodule.exports = class ABDefinitionCore {\n   constructor(attributes, AB) {\n      this.AB = AB;\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\ttype: 'xxxxx',\n\t\t\tjson: \"{json}\"\n\t\t}\n\t\t*/\n      if (attributes.id) {\n         this.id = attributes.id;\n      }\n      this.name =\n         attributes?.name ||\n         attributes?.json?.name ||\n         attributes?.json?.label ||\n         attributes?.json?.translations?.[0]?.label ||\n         \"\";\n      if (!this.name) {\n         this.AB.notify.builder(\n            new Error(\"Attributes for definition had no 'name'\"),\n            {\n               context: \"ABDefinitionCore.fromValues()\",\n               attributes,\n            }\n         );\n      }\n      this.type = attributes.type || attributes?.json?.type || \"\";\n      this.json = attributes.json || null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.json,\n      };\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABDefinition\n    * Also remove it from our parent application\n    * @return {Promise}\n    */\n   destroy() {\n      return this.AB.definitionDestroy(this.id);\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   async save() {\n      if (this.id) {\n         return this.AB.definitionUpdate(this.id, this.toObj());\n      } else {\n         return this.AB.definitionCreate(this.toObj());\n      }\n   }\n};\n","/*\n * ABFactoryCore\n * an object that contains the definitions and references for a single tenant.\n * It is expected that an instance of this should be returned from an\n * ABBootstrap.init(req).then((AB)=>{}) call.\n */\n\n// const _ = require(\"lodash\");\n// const uuidv4 = require(\"uuid\");\n\nconst ABApplication = require(\"../platform/ABApplication\");\nconst ABApplicationMobile = require(\"../platform/ABApplicationMobile\");\nconst ABDefinition = require(\"../platform/ABDefinition\");\n\nconst ABComponent = require(\"../platform/ABComponent\");\n\nconst ABFieldManager = require(\"./ABFieldManager\");\n\nconst ABIndex = require(\"../platform/ABIndex\");\nconst ABObject = require(\"../platform/ABObject\");\nconst ABObjectExternal = require(\"../platform/ABObjectExternal\");\nconst ABObjectImport = require(\"../platform/ABObjectImport\");\nconst ABObjectApi = require(\"../platform/ABObjectApi\");\nconst ABObjectApiNetsuite = require(\"../platform/ABObjectApiNetsuite\");\nconst ABDataCollection = require(\"../platform/ABDataCollection\");\nconst ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\nconst ABHint = require(\"../platform/ABHint\");\nconst ABProcess = require(\"../platform/ABProcess\");\n\nconst ABProcessParticipant = require(\"../platform/process/ABProcessParticipant\");\nconst ABProcessLane = require(\"../platform/process/ABProcessLane\");\nconst ABProcessTaskManager = require(\"./process/ABProcessTaskManager\");\n\nconst ABStep = require(\"../platform/ABStep\");\n\nconst ABViewDetailItem = require(\"../platform/views/ABViewDetailItem\");\nconst ABViewFormItem = require(\"../platform/views/ABViewFormItem\");\nconst ABMobileViewFormItem = require(\"../platform/mobile/ABMobileViewFormItem\");\n\n// const ABObjectWorkspaceViewGrid = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGrid\");\n// const ABObjectWorkspaceViewKanban = require(\"../platform/workspaceViews/ABObjectWorkspaceViewKanban\");\n// const ABObjectWorkspaceViewGantt = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGantt\");\n\nconst RowFilter = require(\"../platform/RowFilter\");\nconst FilterComplex = require(\"../platform/FilterComplex\");\n\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\nconst EventEmitter = require(\"../platform/ABEmitter\");\n\nclass ABFactory extends EventEmitter {\n   constructor(definitions) {\n      /**\n       * @param {hash} definitions\n       *        { ABDefinition.id : {ABDefinition} }\n       *        of all the definitions defined for the current Tenant\n       */\n\n      super();\n      this.setMaxListeners(0);\n\n      this._definitions = definitions || {};\n      // {hash}  { ABDefinition.id : {ABDefinition} }\n      // ensure ._definitions is a HASH{ ID : {ABDefinition}}\n      if (Array.isArray(definitions)) {\n         var hash = {};\n         definitions.forEach((d) => {\n            hash[d.id] = d;\n         });\n         this._definitions = hash;\n      }\n\n      //\n      //\n      // Manage our working objects\n      //\n\n      this._allApplications = [];\n      // {array} of all the ABApplication(s) in our site.\n\n      this._allObjects = [];\n      // {array} of all the ABObject(s) in our site.\n\n      this._allHints = [];\n      // {array} of all the ABHint(s) in our site.\n\n      this._allProcesses = [];\n      // {array} of all the ABProcess(s) in our site.\n\n      this._allQueries = [];\n      // {array} of all the ABObjectQuery(s) in our site.\n\n      this._allSteps = [];\n      // {array} of all the ABStep(s) in our site.\n\n      this._allDatacollections = [];\n      // {array} of all the ABDataCollection(s) in our site.\n\n      //\n      // Class References\n      //\n      this.Class = {\n         ABApplication,\n         ABComponent,\n         ABDefinition,\n         ABFieldManager,\n         ABIndex,\n         ABMLClass,\n         ABObject,\n         ABObjectExternal,\n         ABObjectImport,\n         ABObjectApi,\n         ABObjectApiNetsuite,\n         ABObjectQuery,\n         ABProcessParticipant,\n         // ABRole      // Do we need this anymore?\n\n         // ABObjectWorkspaceViewGrid,\n         // ABObjectWorkspaceViewKanban,\n         // ABObjectWorkspaceViewGantt,\n\n         ABProcessTaskManager,\n\n         ABViewDetailItem,\n         ABViewFormItem,\n         ABMobileViewFormItem,\n      };\n\n      //\n      // Rules\n      // These are a common set of \"rules\" for all platforms.\n      //\n      this.rules = {\n         /**\n          * @method AB.rules.isUUID\n          * evaluate a given value to see if it matches the format of a uuid\n          * @param {string} key\n          * @return {boolean}\n          */\n         isUUID: function (key) {\n            var checker = RegExp(\n               \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n               \"i\"\n            );\n            return checker.test(key);\n         },\n\n         /**\n          * @method AB.rules.nameFilter()\n          * return a properly formatted name for an AppBuilder object.\n          * @param {string} name\n          *        The name of the object we are conditioning.\n          * @return {string}\n          */\n         nameFilter: function (name) {\n            return String(name).replace(/[^a-z0-9_.]/gi, \"\");\n         },\n\n         /**\n          * @method AB.rules.toApplicationNameFormat()\n          * return a properly formatted Application Name\n          * @param {string} name\n          *        The name of the Application we are conditioning.\n          * @return {string}\n          */\n         toApplicationNameFormat: function (name) {\n            return \"AB_\" + this.nameFilter(name);\n         },\n\n         /**\n          * @method AB.rules.toFieldRelationFormat()\n          * This function uses for define relation name of Knex Objection\n          * return a relation name of column\n          * @param {string} colName\n          *        The name of the Column\n          * @return {string}\n          */\n         toFieldRelationFormat: function (colName) {\n            return this.nameFilter(colName) + \"__relation\";\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableFK()\n          * return foriegnkey (FK) column name for a junction table name\n          * @param {string} objectName\n          *        The name of the Object with a connection\n          * @param {string} columnName\n          *        The name of the connection columnName.\n          * @return {string}\n          */\n         toJunctionTableFK: function (objectName, columnName) {\n            var fkName = objectName + \"_\" + columnName;\n\n            if (fkName.length > 64) fkName = fkName.substring(0, 64);\n\n            return fkName;\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableNameFormat()\n          * return many-to-many junction table name\n          * @param {string} appName\n          *        The name of the Application for this object\n          * @param {string} sourceTableName\n          *        The name of the source object we are conditioning.\n          * @param {string} targetTableName\n          *        The name of the target object we are conditioning.\n          * @param {string} colName\n          * @return {string}\n          */\n         toJunctionTableNameFormat: function (\n            appName,\n            sourceTableName,\n            targetTableName,\n            colName\n         ) {\n            // The maximum length of a table name in MySql is 64 characters\n            appName = this.toApplicationNameFormat(appName);\n            if (appName.length > 17) appName = appName.substring(0, 17);\n\n            if (sourceTableName.length > 15)\n               sourceTableName = sourceTableName.substring(0, 15);\n\n            if (targetTableName.length > 15)\n               targetTableName = targetTableName.substring(0, 15);\n\n            colName = this.nameFilter(colName);\n            if (colName.length > 14) colName = colName.substring(0, 14);\n\n            return \"{appName}_{sourceName}_{targetName}_{colName}\"\n               .replace(\"{appName}\", appName)\n               .replace(\"{sourceName}\", sourceTableName)\n               .replace(\"{targetName}\", targetTableName)\n               .replace(\"{colName}\", colName);\n         },\n\n         /**\n          * @method AB.rules.toObjectNameFormat\n          * return a properly formatted Object/Table Name\n          * @param {string} objectName\n          *        The {ABObject}.name of the Object we are conditioning.\n          * @return {string}\n          */\n         toObjectNameFormat: function (objectName) {\n            return `AB_${this.nameFilter(objectName)}`;\n         },\n      };\n\n      // Notify Helpers\n      this.notify.builder = (...params) => {\n         this.notify(\"builder\", ...params);\n      };\n\n      this.notify.developer = (...params) => {\n         this.notify(\"developer\", ...params);\n      };\n   }\n\n   /**\n    * @method definitionClean()\n    * make sure the provided ABDefinition values are properly formatted\n    * @param {ABDefinition} d\n    *        The json settings of an ABDefinition object.\n    */\n   definitionClean(d) {\n      if (typeof d.json == \"string\") {\n         try {\n            d.json = JSON.parse(d.json);\n         } catch (e) {\n            console.log(e);\n            console.error(` Error on definition id[${d.id}]`);\n         }\n      }\n   }\n\n   init() {\n      let allDefinitions = Object.keys(this._definitions).map(\n         (k) => this._definitions[k]\n      );\n      // {array} all our definitions in an Array format.\n\n      // make sure our definitions.json field is an {} and not string\n      allDefinitions.forEach((d) => {\n         this.definitionClean(d);\n      });\n\n      // perform these in order:\n      [\n         \"object\",\n         \"query\",\n         \"datacollection\",\n         \"process\",\n         \"hint\",\n         \"step\",\n         \"application\",\n      ].forEach((type) => {\n         var objTypes = allDefinitions.filter((d) => d.type == type);\n         objTypes.forEach((def) => {\n            let { keyList, keyFn } = this.objectKeysByDef(def);\n            if (keyList) {\n               this[keyList].push(this[keyFn](def.json));\n            }\n         });\n      });\n\n      this.emit(\"init.objects_ready\");\n      return Promise.resolve();\n   }\n\n   /**\n    * @method objectKeysByDef()\n    * Analyze the provided ABDefinition json and return which set of list and\n    * functions are used to create a new instance of this definition.\n    * @param {json} def\n    *        the ABDefinition json of the definition we are evaluating\n    * @return { keyList, keyFn }\n    *        keyList: {string}  which of our internal lists to store this new\n    *                 object.\n    *        keyFn: {string} which of our methods to call with the def.json\n    *               as the param that will create the new object.\n    *\n    *        ex:  this[keyList].push( this[keyFn](def.json));\n    *\n    *        if this def is not one of the types we track,\n    *        keyList = keyFn = null;\n    */\n   objectKeysByDef(def) {\n      switch (def.type) {\n         case \"application\":\n            return { keyList: \"_allApplications\", keyFn: \"applicationNew\" };\n\n         case \"datacollection\":\n            return {\n               keyList: \"_allDatacollections\",\n               keyFn: \"datacollectionNew\",\n            };\n\n         case \"hint\":\n            return { keyList: \"_allHints\", keyFn: \"hintNew\" };\n\n         case \"steps\":\n            return { keyList: \"_allSteps\", keyFn: \"stepNew\" };\n\n         case \"object\":\n            return { keyList: \"_allObjects\", keyFn: \"objectNew\" };\n\n         case \"process\":\n            return { keyList: \"_allProcesses\", keyFn: \"processNew\" };\n\n         case \"query\":\n            return { keyList: \"_allQueries\", keyFn: \"queryNew\" };\n\n         default:\n            // we don't manage any other\n            return { keyList: null, keyFn: null };\n      }\n   }\n\n   //\n   // Definitions\n   //\n\n   /**\n    * definitionByID(id)\n    * return an ABDefinition.json value ready for our objects to use.\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @param {bool} isRaw\n    *        indicates if we want the full ABDefinition, or the .json param\n    *        true : returns full ABDefinition value.\n    *        false: returns the .json parameter used by most ABObjects.\n    * @return {Promise}\n    */\n   definitionByID(id, isRaw = false) {\n      if (this._definitions[id]) {\n         if (isRaw) {\n            return this._definitions[id];\n         } else {\n            return this._definitions[id].json;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * definitionNew(values)\n    * return an ABDefinition object tied to this Tenant.\n    * @param {obj} values\n    *        The value hash of the ABDefinition object to create.\n    * @return {ABDefinition}\n    */\n   definitionNew(values) {\n      return new ABDefinition(values, this);\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   definitionsParse(defs = []) {\n      if (!Array.isArray(defs)) {\n         defs = [defs];\n      }\n\n      // store/replace the incoming definitions\n      // 1st: insert ALL our definitions internally\n      defs.forEach((d) => {\n         this.definitionClean(d);\n         this._definitions[d.id] = d;\n      });\n      // 2nd: Now we can then go through and signal the \"updates\"\n      // and the related objects can find their dependent definitions.\n      defs.forEach((d) => {\n         this.definitionSync(\"updated\", d.id, d);\n      });\n\n      return Promise.resolve();\n   }\n\n   /**\n    * definitionSync()\n    * Synchronize an individual definition into our repository of definitions.\n    * @param {string} op\n    *        the type of synchronization this is\n    *        [ \"created\", \"updated\", \"destroyed\"]\n    * @param {uuid} id\n    *        the definition.id of the definition we are synchronizing\n    * @param {json} def\n    *        the ABDefinition attributes we are storing.\n    */\n   definitionSync(op, id, def) {\n      var { keyList, keyFn } = this.objectKeysByDef(def);\n      if (keyList) {\n         var curr;\n         switch (op) {\n            case \"created\":\n               this[keyList].push(this[keyFn](def.json));\n               this.emit(\"definition.created\", def.json);\n               break;\n\n            case \"updated\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n\n               // remove from list\n               this[keyList] = this[keyList].filter((d) => d.id != id);\n               // add new one:\n               this[keyList].push(this[keyFn](def.json));\n\n               // signal this object needs to be updated:\n               // NOTE: if this is one of the objects we are tracking,\n               // we don't need to this.emit() the message.\n               if (curr) {\n                  curr.emit(\"definition.updated\", def.json);\n               } else {\n                  this.emit(\"definition.updated\", def.json);\n               }\n               break;\n\n            case \"destroyed\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n               if (curr) {\n                  // remove from list\n                  this[keyList] = this[keyList].filter((d) => d.id != id);\n\n                  // signal this object needs to be updated:\n                  curr.emit(\"definition.deleted\", def.json);\n\n                  this.emit(\"definition.deleted\", def.json);\n               }\n               break;\n         }\n      }\n   }\n\n   //\n   // ABObjects\n   //\n   /**\n    * @method applications()\n    * return all the ABApplications that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABApplications.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   applications(fn = () => true) {\n      return (this._allApplications || []).filter(fn);\n   }\n\n   /**\n    * @method applicationByID()\n    * returns a single ABApplication that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABApplication we are searching\n    *        for.\n    * @return {ABApplication}\n    *        the matching ABApplication object if found\n    *        {null} if not found.\n    */\n   applicationByID(ID) {\n      return this.applications((a) => a.id == ID)[0];\n   }\n\n   /**\n    * @method applicationNew()\n    * Return a new instance of an ABApplication object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplication object we are\n    *        creating.\n    * @return {ABApplication}\n    */\n   applicationNew(values) {\n      // just in case we got here by mistake:\n      if (values.appType == \"mobile\") {\n         return this.applicationMobileNew(values);\n      }\n\n      return new ABApplication(values, this);\n   }\n\n   /**\n    * @method applicationMobileNew()\n    * Return a new instance of an ABApplicationMobile object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplicationMobile object we are\n    *        creating.\n    * @return {ABApplicationMobile}\n    */\n   applicationMobileNew(values) {\n      return new ABApplicationMobile(values, this);\n   }\n\n   /**\n    * @method datacollections()\n    * return an array of all the ABDataCollection for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABDataCollection that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABDataCollection\n    */\n   datacollections(filter = () => true) {\n      return (this._allDatacollections || []).filter(filter);\n   }\n\n   /**\n    * @method datacollectionByID()\n    * returns a single ABDatacollection that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABDatacollection we are searching\n    *        for.\n    * @return {ABDatacollection}\n    *        the matching ABDatacollection object if found\n    *        {null} if not found.\n    */\n   datacollectionByID(ID) {\n      // an undefined or null ID should not match any DC.\n      if (!ID) return null;\n\n      return this.datacollections((dc) => {\n         return dc.id == ID || dc.name == ID || dc.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method datacollectionNew()\n    * create a new instance of ABDataCollection\n    * @param {obj} values\n    *        the initial values for the DC\n    * @return {ABDatacollection}\n    */\n   datacollectionNew(values) {\n      var dc = new ABDataCollection(values, this);\n      dc.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allDatacollections = this._allDatacollections.filter(\n            (d) => d.id != dc.id\n         );\n      });\n      return dc;\n   }\n\n   /**\n    * @method fieldNew()\n    * return an instance of a new (unsaved) ABField that is tied to a given\n    * ABObject.\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    * @param {obj} values  the initial values for this field.\n    *                - { key:'{string}'} is required\n    * @param {ABObject} object  the parent object this field belongs to.\n    * @return {ABField}\n    */\n   fieldNew(values, object) {\n      // NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n      return ABFieldManager.newField(values, object);\n   }\n\n   /**\n    * @method indexNew()\n    * return an instance of a new (unsaved) ABIndex.\n    * @return {ABIndex}\n    */\n   indexNew(values, object) {\n      return new ABIndex(values, object);\n   }\n\n   /**\n    * @method Label()\n    * a simple label factory.\n    * It is expected to be called like this:\n    * @codestart\n    *    var L = AB.Label();\n    *    var outputText = L(\"Hello World\");\n    *    var o2 = L(\"I'm {0} years old\", [5]);\n    * @codeend\n    * @return {fn}\n    */\n   Label() {\n      return (key, altText, values = []) => {\n         var label = key;\n         if (altText) {\n            if (Array.isArray(altText)) {\n               values = altText;\n            } else {\n               label = altText;\n            }\n         }\n\n         values.forEach((v, i) => {\n            var sub = `{${i}}`;\n            label = label.replaceAll(sub, v);\n         });\n\n         return label;\n      };\n   }\n\n   /**\n    * @method objects()\n    * return an array of all the ABObjects for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjects that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObject\n    */\n   objects(filter = () => true) {\n      return (this._allObjects || []).filter(filter);\n   }\n\n   /**\n    * @method objectByID()\n    * return the specific object requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   objectByID(ID) {\n      return this.objects((o) => {\n         return o.id == ID || o.name == ID || o.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method objectNew()\n    * return an instance of a new (unsaved) ABObject that is tied to this\n    * ABApplication.\n    * NOTE: this new object is not included in our this.objects until a .save()\n    * is performed on the object.\n    * @return {ABObject}\n    */\n   objectNew(values) {\n      var newObj = null;\n\n      if (values.isExternal == true)\n         newObj = new ABObjectExternal(values, this);\n      else if (values.isImported == true)\n         newObj = new ABObjectImport(values, this);\n      else if (values.isNetsuite == true)\n         newObj = new ABObjectApiNetsuite(values, this);\n      else if (values.isAPI == true) newObj = new ABObjectApi(values, this);\n      else newObj = new ABObject(values, this);\n\n      /*\n      // IS THIS CORRECT?\n      newObj.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allObjects = this._allObjects.filter((o) => o.id != newObj.id);\n      });\n      */\n\n      return newObj;\n   }\n\n   objectFile() {\n      return this.objectByID(\"4a9d89c9-f4eb-41af-91e4-909eff389f3e\");\n   }\n\n   objectLanguage() {\n      return this.objectByID(\"d84cd351-d96c-490f-9afb-2a0b880ca0ec\");\n   }\n\n   objectProcessDefinition() {\n      return this.objectByID(\"af91fc75-fb73-4d71-af14-e22832eb5915\");\n   }\n\n   objectProcessForm() {\n      return this.objectByID(\"d36ae4c8-edef-48d8-bd9c-79a0edcaa067\");\n   }\n\n   objectProcessInstance() {\n      return this.objectByID(\"2ba85be0-78db-4eda-ba43-c2c4e3831849\");\n   }\n\n   objectRole() {\n      return this.objectByID(\"c33692f3-26b7-4af3-a02e-139fb519296d\");\n   }\n\n   objectScope() {\n      return this.objectByID(\"af10e37c-9b3a-4dc6-a52a-85d52320b659\");\n   }\n\n   objectToken() {\n      return this.objectByID(\"08826ac7-4b33-4745-a3d7-f7831ca4ff59\");\n   }\n\n   objectUser() {\n      return this.objectByID(\"228e3d91-5e42-49ec-b37c-59323ae433a1\");\n   }\n\n   objectKey() {\n      return this.objectByID(\"d734fe8c-b615-446c-8a5f-793ddece19f9\");\n   }\n\n   objectSecret() {\n      return this.objectByID(\"db5b3b26-5300-4c92-bc73-8ce4f4696992\");\n   }\n\n   //\n   // Hints\n   //\n   /**\n    * @method hints()\n    * return all the ABHints that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABHints.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   hints(filter = () => true) {\n      return (this._allHints || []).filter(filter);\n   }\n\n   /**\n    * @method hintByID()\n    * return the specific hint requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   hintID(ID) {\n      return this.hints((h) => {\n         return h.id == ID || h.name == ID || h.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method hintNew()\n    * return an instance of a new (unsaved) ABHint that is tied to this\n    * ABApplication.\n    * NOTE: this new hint is not included in our this.hints until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   hintNew(values) {\n      var newHint = new ABHint(values, this);\n\n      return newHint;\n   }\n\n   //\n   // Steps\n   //\n   /**\n    * @method steps()\n    * return all the ABSteps that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABSteps.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   steps(filter = () => true) {\n      return (this._allSteps || []).filter(filter);\n   }\n\n   /**\n    * @method stepByID()\n    * return the specific step requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   stepID(ID) {\n      return this.steps((s) => {\n         return s.id == ID || s.name == ID || s.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method stepNew()\n    * return an instance of a new (unsaved) ABStep that is tied to this\n    * ABApplication.\n    * NOTE: this new step is not included in our this.steps until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   stepNew(id, hintID) {\n      var stepDef = this.definitionByID(id);\n      if (stepDef) {\n         var getStep = new ABStep(stepDef, this);\n         return getStep;\n      } else {\n         var params = {\n            settings: {\n               hint: hintID,\n            },\n         };\n         var newStep = new ABStep(params, this);\n         return newStep;\n      }\n      // return null;\n   }\n\n   //\n   // Processes\n   //\n   /**\n    * @method processes()\n    * return all the ABProcess that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABProcess.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   processes(filter = () => true) {\n      return (this._allProcesses || []).filter(filter);\n   }\n\n   /**\n    * @method processByID()\n    * return the specific process requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   processByID(ID) {\n      return this.processes((p) => {\n         return p.id == ID || p.name == ID || p.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method processNew()\n    * Return a new instance of an ABProcess object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABProcess object we are\n    *        creating.\n    * @return {ABProcess}\n    */\n   processNew(values) {\n      return new ABProcess(values, this);\n   }\n\n   /**\n    * @method processElementNew(id)\n    * return an instance of a new ABProcessOBJ that is tied to a given\n    * ABProcess.\n    * @param {string} id\n    *        the ABDefinition.id of the element we are creating\n    * @param {ABProcess} process\n    *        the process this task is a part of.\n    * @return {ABProcessTask}\n    */\n   processElementNew(id, process) {\n      var taskDef = this.definitionByID(id);\n      if (taskDef) {\n         switch (taskDef.type) {\n            case ABProcessParticipant.defaults().type:\n               return new ABProcessParticipant(taskDef, process, this);\n            // break;\n\n            case ABProcessLane.defaults().type:\n               return new ABProcessLane(taskDef, process, this);\n            // break;\n\n            default:\n               // default to a Task\n               return ABProcessTaskManager.newTask(taskDef, process, this);\n            // break;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * @method processElementNewForModelDefinition(def)\n    *\n    * return an instance of a new ABProcess[OBJ] that is tied to the given\n    * BPMI:Element definition.\n    *\n    * @param {BPMI:Element} element the element definition from our BPMI\n    *              modler.\n    * @return {ABProcess[OBJ]}\n    */\n   processElementNewForModelDefinition(element, process) {\n      var newElement = null;\n\n      switch (element.type) {\n         case \"bpmn:Participant\":\n            newElement = new ABProcessParticipant({}, process, this);\n            break;\n\n         case \"bpmn:Lane\":\n            newElement = new ABProcessLane({}, process, this);\n            break;\n\n         default:\n            var defaultDef = ABProcessTaskManager.definitionForElement(element);\n            if (defaultDef) {\n               newElement = ABProcessTaskManager.newTask(\n                  defaultDef,\n                  process,\n                  this\n               );\n            }\n            break;\n      }\n\n      // now make sure this new Obj pulls any relevant info from the\n      // diagram element\n      if (newElement) {\n         newElement.fromElement(element);\n      }\n      return newElement;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery(s).\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjectQuery(s) that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObjectQuery\n    */\n   queries(filter = () => true) {\n      return (this._allQueries || []).filter(filter);\n   }\n   // queriesAll() {\n   //    console.error(\n   //       \"ABFactory.queriesAll() Depreciated! Use .queries() instead. \"\n   //    );\n   //    return this.queries();\n   // }\n\n   /**\n    * @method queryByID()\n    * return the specific query requested by the provided id.\n    * NOTE: this method has been extended to allow .name and .label\n    * as possible lookup values.\n    * @param {string} ID\n    * @return {ABObjectQuery}\n    */\n   queryByID(ID) {\n      return this.queries((q) => {\n         return q.id == ID || q.name == ID || q.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method queryNew()\n    * return an instance of a new (unsaved) ABObjectQuery that is tied to this\n    * ABFactory.\n    * @return {ABObjectQuery}\n    */\n   queryNew(values) {\n      return new ABObjectQuery(values, this);\n   }\n\n   /**\n    * @method rowfilterNew()\n    * return an instance of a new RowFilter that is tied to this\n    * ABFactory.\n    * @return {RowFilter}\n    */\n   rowfilterNew(App, idBase) {\n      if (App) {\n         console.error(\"!! Who is calling this with an App?\");\n      }\n      return new RowFilter(App || this._App, idBase, this);\n   }\n\n   /**\n    * @method filterComplexNew()\n    * return an instance of a new FilterComplex that is tied to this\n    * ABFactory.\n    * @return {FilterComplex}\n    */\n   filterComplexNew(idBase, options = {}) {\n      return new FilterComplex(idBase, this, options);\n   }\n\n   /**\n    * @method viewNewDetatched()\n    * Return an instance of a View that is NOT attached to an ABApplication.\n    * @return {ABViewXXX}\n    */\n   viewNewDetatched(values) {\n      if (!this._mockApp) {\n         this._mockApp = this.applicationNew({});\n      }\n      return this._mockApp.viewNew(values, this._mockApp);\n   }\n\n   //\n   // Utilities\n   //\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(/* ...params */) {\n      console.error(\n         \"ABFactory.notify() is expected to be overwritten by the platform!\"\n      );\n   }\n\n   /**\n    * notifyInfo()\n    * a common routine to parse the info parameter provided to .notify() into\n    * a more detailed set of data.\n    * @param {json} info\n    * @return {json}\n    */\n   _notifyInfo(info) {\n      var moreInfo = {};\n\n      if (info) {\n         Object.keys(info).forEach((k) => {\n            switch (k) {\n               case \"field\":\n                  moreInfo.objectID = info[k].object?.id;\n                  moreInfo.objectName = info[k].object?.name;\n                  moreInfo.fieldID = info[k].id;\n                  moreInfo.fieldName = info[k].label || info[k].name;\n                  break;\n\n               case \"object\":\n                  moreInfo.objectID = info[k].id;\n                  moreInfo.objectName = info[k].name;\n                  break;\n\n               case \"datacollection\":\n                  moreInfo.datacollectionID = info[k].id;\n                  moreInfo.datacollectionName = info[k].label || info[k].name;\n                  var ds = info[k].datasource;\n                  if (ds) {\n                     moreInfo.datacollectionDSID = ds.id;\n                     moreInfo.datacollectionDSName = ds.name;\n                  }\n                  break;\n\n               case \"process\":\n                  moreInfo.processID = info[k].id;\n                  moreInfo.processName = info[k].label || info[k].name;\n                  break;\n\n               case \"req\":\n                  moreInfo.req = {\n                     jobID: info[k].jobID,\n                     tenantID: info[k]._tenantID,\n                     user: info[k]._user,\n                  };\n                  break;\n\n               case \"task\":\n                  if (info[k].process) {\n                     moreInfo.processID = info[k].process.id;\n                     moreInfo.processName =\n                        info[k].process.label || info[k].process.name;\n                  }\n                  moreInfo.taskID = info[k].id;\n                  moreInfo.taskName = info[k].label || info[k].name;\n                  break;\n\n               case \"view\":\n                  if (info[k].application) {\n                     moreInfo.applicationID = info[k].application.id;\n                     moreInfo.applicationName =\n                        info[k].application.label || info[k].application.name;\n                  }\n                  moreInfo.viewID = info[k].id;\n                  moreInfo.viewName = info[k].label || info[k].name;\n                  moreInfo.viewKey = info[k].key;\n                  break;\n               default:\n                  moreInfo[k] = info[k];\n                  break;\n            }\n         });\n      }\n\n      return moreInfo;\n   }\n}\n\nmodule.exports = ABFactory;\n","/*\n * ABFieldManager\n *\n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n/*\n * Fields\n * A name => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\n\nvar AllFieldClasses = [\n   require(\"../platform/dataFields/ABFieldString\"),\n   require(\"../platform/dataFields/ABFieldLongText\"),\n   require(\"../platform/dataFields/ABFieldNumber\"),\n   require(\"../platform/dataFields/ABFieldDate\"),\n   require(\"../platform/dataFields/ABFieldDateTime\"),\n   require(\"../platform/dataFields/ABFieldBoolean\"),\n   require(\"../platform/dataFields/ABFieldList\"),\n   require(\"../platform/dataFields/ABFieldTree\"),\n   require(\"../platform/dataFields/ABFieldEmail\"),\n   require(\"../platform/dataFields/ABFieldFile\"),\n   require(\"../platform/dataFields/ABFieldImage\"),\n   require(\"../platform/dataFields/ABFieldUser\"),\n   require(\"../platform/dataFields/ABFieldConnect\"),\n   require(\"../platform/dataFields/ABFieldCalculate\"),\n   require(\"../platform/dataFields/ABFieldTextFormula\"),\n   require(\"../platform/dataFields/ABFieldFormula\"),\n   require(\"../platform/dataFields/ABFieldAutoIndex\"),\n   require(\"../platform/dataFields/ABFieldJson\"),\n   require(\"../platform/dataFields/ABFieldCombine\"),\n   require(\"../platform/dataFields/ABFieldSelectivity\"),\n];\n\nAllFieldClasses.forEach((FIELD) => {\n   Fields[FIELD.defaults().key] = FIELD;\n});\n\nmodule.exports = class ABFieldManager {\n   /*\n    * @function allFields\n    * return all the currently defined ABFields in an array.\n    * @return [{ABField},...]\n    */\n   static allFields() {\n      var fields = [];\n      for (var f in Fields) {\n         fields.push(Fields[f]);\n      }\n      return fields;\n   }\n\n   /**\n    * @function fieldByKey()\n    * Return a specific ABField that matches the given key\n    * @param {string} key\n    *        The ABField.key value we are looking for.\n    * @return {ABFieldXXX || undefined}\n    */\n   static fieldByKey(key) {\n      return Fields[key];\n   }\n\n   /*\n    * @function newField\n    * return an instance of an ABField based upon the values.key value.\n    * @return {ABField}\n    */\n   static newField(values, object) {\n      if (values.key) {\n         try {\n            return new Fields[values.key](values, object);\n         } catch (err) {\n            console.log(\"Error\", err);\n            console.log(\"Available fields\", Fields);\n            console.log(\"Requested field\", values.key);\n         }\n      } else {\n         console.log(\"-------\");\n         console.log(\"values:\");\n         console.error(values);\n         console.log();\n         console.error(\"object:\");\n         console.error(object);\n         console.log(\"-------\");\n         throw new Error(\n            `ABFieldManager.newField(): Unknown Field Key [${values.name}][${values.key}] for object[${object.name}]`\n         );\n         //// TODO: what to do here?\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABHintCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"description\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      description: 'description',\n      type: 'hint',\n      settings: {\n         active: {boolean},\n         view: uuid\n      }\n    }\n    */\n\n      let active = attributes?.settings?.active ?? \"1\";\n\n      this.id = attributes?.id || \"\";\n      this.name = attributes?.name || \"New Tutorial\";\n      this.description = attributes?.description || \"\";\n      this.type = attributes?.type || \"hint\";\n      this.settings = {};\n      this.settings.active = active;\n      this.settings.transition = attributes?.settings?.transition;\n      this.settings.showIntroStep = attributes?.settings?.showIntroStep;\n      this.settings.view = attributes?.settings?.view || \"\";\n      this.stepIDs = attributes?.stepIDs || [];\n\n      let currSteps = this?._steps || {};\n      this._steps = {};\n      (attributes?.stepIDs || []).forEach((sID) => {\n         if (!sID) return;\n         var ele = this.AB.stepNew(sID, this.id);\n         if (ele) {\n            this._steps[sID] = ele;\n         }\n      });\n      if (attributes) super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"type\", \"settings\", \"stepIDs\", \"id\", \"name\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * steps()\n    * return an array of steps that match the given filter (or all steps\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABStep]}\n    */\n   steps(fn = () => true) {\n      var allSteps = Object.keys(this._steps).map((e) => {\n         return this._steps[e];\n      });\n      return allSteps.filter(fn);\n   }\n\n   /**\n    * stepAdd()\n    * insert a step to be added to this hint.\n    * @param {ABStep} element\n    *        the full instance of an ABStep to track.\n    */\n   stepAdd(step) {\n      this._steps[step.id] = step;\n   }\n\n   /**\n    * stepByID()\n    * return the {ABStep} that has the given .id\n    * @param {string} id\n    * @return {ABStep[OBJ]}\n    */\n   stepByID(id) {\n      return this._steps[id] ?? null;\n   }\n\n   /**\n    * stepRemove()\n    * remove a step from being displayed by this hint.\n    * @param {id} ABStep ID\n    *        an ID of a step\n    *        to remove.\n    */\n   stepRemove(id) {\n      // remove from stepIDs array\n      let stepIndex = this.stepIDs.indexOf(id);\n      if (stepIndex > -1) {\n         this.stepIDs.splice(stepIndex, 1);\n      }\n      // remove from _steps definitions\n      delete this._steps[id];\n   }\n};\n","const ABMLClass = require(\"../platform/ABMLClass\");\n\nmodule.exports = class ABIndexCore extends ABMLClass {\n   constructor(attributes, object) {\n      super([\"label\"], object.AB);\n      this.object = object;\n\n      this.fromValues(attributes);\n   }\n\n   fromValues(attributes) {\n      /*\n      {\n        id: uuid(),\n        name: 'name',\n        fields:[\n            {ABDataField.id}\n        ],\n        unique: {boolean}\n      }\n      */\n      this.id = attributes.id;\n      this.type = \"index\";\n      this.name = attributes.name;\n      this.unique = JSON.parse(attributes.unique || false);\n\n      // Convert to an array\n      if (attributes.fieldIDs && !Array.isArray(attributes.fieldIDs)) {\n         attributes.fieldIDs = [attributes.fieldIDs];\n      }\n\n      this._unknownFieldIDs = [];\n      this.fields = (attributes.fieldIDs || [])\n         .map((f) => {\n            let field = this.object.fieldByID(f);\n            if (!field) {\n               this._unknownFieldIDs.push(f);\n               let err = new Error(\n                  `Index[${this.name}][${this.id}] is referencing an unknown field[${f}]`\n               );\n               this.AB.notify.developer(err, {\n                  index: this.id,\n                  field: f,\n               });\n            }\n            return field;\n         })\n         .filter((fId) => fId);\n\n      if (this.fields.length == 0) {\n         let err = new Error(\n            `Index[${this.name}][${this.id}] is not referencing any fields`\n         );\n         this.AB.notify.developer(err, {\n            index: this.id,\n            attributeFieldIDs: attributes.fieldIDs || [],\n         });\n      }\n\n      // let the MLClass process the Translations\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let result = super.toObj();\n\n      result.id = this.id;\n      result.type = \"index\";\n      result.name = this.name;\n      result.unique = this.unique;\n\n      // Convert to an array\n      if (this.fields && !Array.isArray(this.fields)) {\n         this.fields = [this.fields];\n      }\n\n      result.fieldIDs = (this.fields || [])\n         .map((f) => {\n            // Convert to the id of field\n            return f.id || f;\n         })\n         .filter((fId) => fId);\n\n      // carry along the unknown Field IDs so a\n      // developer/builder can come along and trace\n      // what happened.\n      this._unknownFieldIDs.forEach((f) => {\n         result.fieldIDs.push(f);\n      });\n\n      return result;\n   }\n\n   get indexName() {\n      let tableName = this.object.dbTableName();\n\n      // Maximum 64 characters long\n      return `${tableName}_${this.name}`.replace(/ /g, \"\").substring(0, 64);\n   }\n\n   get uniqueName() {\n      let indexName = this.indexName.substring(0, 57);\n\n      return `${indexName}_unique`;\n   }\n};\n","/**\n * ABMLClassCore\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This core ABMLClass will internally track the multilingual fields\n * (this.mlFields) and auto\n */\nvar ABEmitter = require(\"../platform/ABEmitter\");\nmodule.exports = class ABMLClassCore extends ABEmitter {\n   constructor(fieldList, AB) {\n      super();\n      this.mlFields = fieldList || [\"label\"];\n      // {array}\n      // field names of values that are multilingual\n\n      this.AB = AB;\n      // {ABFactory}\n      // our common source of references for other AB objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * @method fromValues\n    * called during the .fromValues() work chain.  Should be called\n    * AFTER all the current data is already populated.\n    */\n   fromValues(attributes) {\n      this.translations = attributes.translations;\n\n      // if translations were provided\n      if (this.translations) {\n         // multilingual fields: label, description\n         this.translate();\n      } else {\n         // maybe this came from a form that has ML values in the attributes, but\n         // no .translations[] yet:\n         // check for mlFields in attributes and record them here:\n         (this.mlFields || []).forEach((field) => {\n            if (attributes[field]) {\n               this[field] = attributes[field];\n            }\n         });\n      }\n   }\n\n   /**\n    * @function defaultTranslations()\n    * return an initial .translations entry to initialize the\n    * translations values of a given translateable object.\n    * @param {array} fields  the multilingual fields this obj manages.\n    * @param {json}  values  a default set of values for this object.\n    * @return {array}  of translation entries.\n    */\n   defaultTranslations(fields, values) {\n      values = values || {};\n\n      var entry = {\n         // Question: should this be this.AB.Multilingual.currentLanguage() || \"en\"\n         // currently since the defaults are sent in programattically, we are\n         // expecting the labels to be in \"en\"\n         language_code: \"en\",\n      };\n\n      fields.forEach((f) => {\n         entry[f] = values[f] || f;\n      });\n\n      return [entry];\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return \"en\";\n   }\n\n   /**\n    * @method toObj()\n    * called during the .toObj() work chain.  Should be called\n    * BEFORE the current data is populated.\n    */\n   toObj() {\n      this.unTranslate();\n\n      return {\n         translations: this.translations,\n      };\n   }\n\n   /**\n    * @method toDefinition()\n    * convert this instance into an ABDefinition object.\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      return this.AB.definitionNew({\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.toObj(),\n      });\n   }\n\n   /**\n    * @method translate\n    * Given a set of json data, pull out any multilingual translations\n    * and flatten those values to the base object.\n    * @param {obj} obj  The instance of the object being translated\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull to\n    *                       the obj[field] value.\n    */\n   translate(obj, json, fields, languageCode = null) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      if (typeof json.translations == \"string\") {\n         json.translations = JSON.parse(json.translations);\n      }\n\n      var currLanguage = languageCode || this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         // [fix] if no matching translation is in our json.translations\n         //       object, then just use the 1st one.\n         var first = null; // the first translation entry encountered\n         var found = false; // did we find a matching translation?\n\n         json.translations.forEach(function (t) {\n            if (!first) first = t;\n\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               found = true;\n\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  if (t[f] != null) obj[f] = t[f];\n\n                  obj[f] = t[f] || \"\"; // default to '' if not found.\n               });\n            }\n         });\n\n         // if !found, then use the 1st entry we did find.  prepend desired\n         // [language_code] to each of the fields.\n         if (!found && first) {\n            // copy each field to the root object\n            fields.forEach(function (f) {\n               if (first[f] != null && first[f] != \"\")\n                  obj[f] = `[${currLanguage}]${first[f]}`;\n               else obj[f] = \"\"; // default to '' if not found.\n            });\n         }\n      }\n   }\n\n   /**\n    * @method unTranslate\n    * Take the multilingual information in the base obj, and push that\n    * down into the json.translations data.\n    * @param {obj} obj  The instance of the object with the translation\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull from\n    *                       the obj[field] value.\n    */\n   unTranslate(obj, json, fields) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      var currLanguage = this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         var foundOne = false;\n\n         json.translations.forEach(function (t) {\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  // verify obj[f] is defined\n                  // --> DONT erase the existing translation\n                  if (obj[f] != null) {\n                     t[f] = obj[f];\n                  }\n               });\n\n               foundOne = true;\n            }\n         });\n\n         // if we didn't update an existing translation\n         if (!foundOne) {\n            // create a translation entry:\n            var trans = {};\n\n            // assume current languageCode:\n            trans.language_code = currLanguage;\n\n            fields.forEach(function (field) {\n               if (obj[field] != null) {\n                  trans[field] = obj[field];\n               }\n            });\n\n            json.translations.push(trans);\n         }\n      }\n   }\n};\n","//\n// ABModelCore\n//\n// Represents the Data interface for an ABObject data.\n//\n// to use an ABModel to load a DataTable:\n// Method 1:\n//  gather all the data externally and send to the DataTable\n//    Model.findAll()\n//    .then((data)=>{\n//      DataTable.parse(data);\n//    })\n//\n\n// const { isArray } = require(\"lodash\");\n\nmodule.exports = class ABModelCore {\n   constructor(object) {\n      // link me to my ABObject\n      this.object = object;\n      this.AB = object.AB;\n\n      this._where = null;\n      this._sort = null;\n      this._skip = null;\n      this._limit = null;\n\n      this.staleRefreshInProcess = false;\n      this.staleRefreshMap = {\n         /* id : Promise */\n      };\n      this.staleRefreshPending = [];\n      this.staleRefreshTimerID = null;\n\n      // include this\n      this.responseContext = { key: \"--\", context: {} };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   contextKey(key) {\n      this.responseContext.key = key || \"--\";\n   }\n\n   contextValues(values) {\n      this.responseContext.context = values || {};\n   }\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(/* method, params */) {\n      console.error(\n         \"!!! ABModelCore.request() should be overridden by platform.\"\n      );\n      return Promise.resolve();\n   }\n\n   // /**\n   //  * @method create\n   //  * update model values on the server.\n   //  */\n   // create(values) {\n\n   //   this.prepareMultilingualData(values);\n\n   //   var params = {\n   //     url: this.object.urlRest(),\n   //     params: values\n   //   }\n   //   return this.request('post', params)\n   //     .then((data) => {\n\n   //       this.normalizeData(data);\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a create event\n   //       // triggerEvent('create', this.object, data);\n\n   //     })\n   //     .catch(reject);\n\n   // }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   // delete(id) {\n\n   //   var params = {\n   //     url: this.object.urlRestItem(id)\n   //   }\n   //   return this.request('delete', params)\n   //     .then((data) => {\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a delete event\n   //       // triggerEvent('delete', this.object, id);\n\n   //     })\n   // }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   //   findAll(cond) {\n\n   //     cond = cond || {};\n\n   //     var params = {\n   //       url: this.object.urlRest(),\n   //       params: cond\n   //     }\n   //     return this.request('get', params)\n   //       .then((data) => {\n\n   //         this.normalizeData(data.data);\n\n   //         resolve(data);\n   //       })\n   //       .catch((err) => {\n   // /// TODO: this should be done in platform/ABModel:\n   //         // if (err && err.code) {\n   //         //  switch(err.code) {\n   //         //    case \"ER_PARSE_ERROR\":\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Parse Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n\n   //         //    default:\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Unknown Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n   //         //  }\n\n   //         // }\n   // console.error(err);\n   //       })\n\n   //   }\n\n   urlParamsCreate(values) {\n      return {\n         url: this.object.urlRest(),\n         params: values,\n      };\n   }\n\n   urlParamsDelete(id) {\n      return {\n         url: this.object.urlRestItem(id),\n      };\n   }\n\n   urlParamsFind(cond) {\n      return {\n         url: this.object.urlRest(),\n         params: cond || {},\n      };\n   }\n\n   urlParamsUpdate(id, values) {\n      return {\n         url: this.object.urlRestItem(id),\n         params: values,\n      };\n   }\n\n   /**\n    * @method count\n    * count a data find with the provided condition.\n    */\n   count(cond) {\n      cond = cond || {};\n\n      var params = {\n         url: this.object.urlRestCount(),\n         params: cond,\n      };\n      return this.request(\"get\", params)\n         .then((numberOfRows) => {\n            // resolve(numberOfRows);\n            return numberOfRows;\n         })\n         .catch((err) => {\n            // TODO: this should be done in platform/ABModel\n\n            // OP.Error.log('AppBuilder:ABModel:count(): Parse Error with provided condition', { error: err, condition:cond })\n\n            // reject(err);\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method staleRefresh\n    * Process a request to refresh the data for a given entry.\n    * This method is called from a ABDataview when it receives\n    * a 'ab.datacollection.stale' message.\n    * This method will try to queue similar reqeusts and then issue 1 large\n    * request, rather than numerous individual ones.\n    * @param {obj} cond  the condition of the entry we are requesting.\n    * @return {Promise}\n    */\n   staleRefresh(cond) {\n      // cond should be { where:{ id: X } } format.\n      var PK = this.object.PK();\n\n      var currID = cond[PK]; // just in case we get a { id: X }\n      if (cond.where) {\n         currID = cond.where[PK];\n      }\n\n      return new Promise((resolve, reject) => {\n         if (!currID) {\n            var Err = new Error(\n               \"Model.staleRefresh(): could not resolve .\" + PK\n            );\n            Err.cond = cond;\n            reject(Err);\n            return;\n         }\n\n         // convert to PK : Promise object:\n         var entry = {\n            resolve: resolve,\n            reject: reject,\n         };\n         entry[PK] = currID;\n\n         // queue up refresh condition\n         this.staleRefreshPending.push(entry);\n\n         // if ! staleRefreshInProcess\n         if (!this.staleRefreshInProcess) {\n            // set timeout to another 200ms wait after LAST staleRefresh()\n            if (this.staleRefreshTimerID) {\n               clearTimeout(this.staleRefreshTimerID);\n            }\n            this.staleRefreshTimerID = setTimeout(() => {\n               this.staleRefreshProcess();\n            }, 200);\n         }\n      });\n   }\n\n   /**\n    * @method staleRefreshProcess\n    * Actually process the current pending requests.\n    */\n   staleRefreshProcess() {\n      this.staleRefreshInProcess = true;\n      var currentEntries = this.staleRefreshPending;\n      this.staleRefreshPending = [];\n      var PK = this.object.PK();\n\n      var responseHash = {\n         /* id : [{entry}] */\n      };\n      var cond = { where: {}, populate: true };\n      cond.where[PK] = [];\n\n      console.log(\n         \"Model.staleRefreshProcess(): buffered \" +\n            currentEntries.length +\n            \" requests\"\n      );\n      currentEntries.forEach((e) => {\n         responseHash[e[PK]] = responseHash[e[PK]] || [];\n         responseHash[e[PK]].push(e);\n      });\n\n      cond.where[PK] = Object.keys(responseHash);\n\n      this.findAll(cond).then((res) => {\n         // for each entry we got back\n         if (Array.isArray(res.data) && res.data.length) {\n            res.data.forEach((data) => {\n               // find it's matching request:\n               if (responseHash[data[PK]]) {\n                  // respond to the pending promise\n                  // and remove these entries from responseHash\n                  var entries = responseHash[data[PK]];\n                  entries.forEach((entry) => {\n                     var resolve = entry.resolve;\n                     resolve({ data: [data] });\n                  });\n\n                  delete responseHash[data[PK]];\n               } else {\n                  console.error(\n                     \"Model.staleRefreshProcess(): returned entry was not in our responseHash:\",\n                     data,\n                     responseHash\n                  );\n               }\n            });\n         }\n\n         // now if there are any entries left in responseHash,\n         // respond with an empty entry:\n         var allKeys = Object.keys(responseHash);\n         if (allKeys.length > 0) {\n            console.warn(\n               \"Model.staleRefreshProcess(): \" +\n                  allKeys.length +\n                  \" entries with no responses. \"\n            );\n         }\n         allKeys.forEach((key) => {\n            let entry = responseHash[key];\n            let resolve;\n            if (Array.isArray(entry)) {\n               resolve = entry[0].resolve;\n            } else {\n               resolve = entry.resolve;\n            }\n            resolve({ data: [] });\n            delete responseHash[key];\n         });\n\n         // now check to see if there are any more pending requests:\n         if (this.staleRefreshPending.length > 0) {\n            // process them:\n            this.staleRefreshProcess();\n         } else {\n            // mark we are no longer processing stale requests.\n            this.staleRefreshInProcess = false;\n         }\n      });\n   }\n\n   /**\n     * @method findConnected\n     * return the connected data associated with an instance of this model.\n     *\n     * to limit the result to only a single connected column:\n     *    model.findConnected( 'col1', {data})\n     *    then ((data) => {\n     *      // data = [{obj1}, {obj2}, ... {objN}]\n     *    })\n     *\n     * To find >1 connected field data:\n     *    model.findConnected( ['col1', 'col2'], {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     col1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     col2 : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n     *\n     * To find all connected field data:\n     *    model.findConnected( {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     connectedColName1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     connectedColName2 : [{obj1}, {obj2}, ... {objN}],\n     *      //    ...\n     *      //     connectedColNameN : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n\n     * @param {string/array} fields  [optional] an array of connected fields you want to return.\n     * @param {obj} data  the current object instance (data) to lookup\n     * @return {Promise}\n     */\n   findConnected(fields, data) {\n      if (typeof data == \"undefined\") {\n         if (!Array.isArray(fields) && typeof fields == \"object\") {\n            data = fields;\n            fields = []; // return all fields\n         }\n      }\n\n      if (typeof fields == \"string\") {\n         fields = [fields]; // convert to an array of values\n      }\n\n      return new Promise((resolve, reject) => {\n         // sanity checking:\n         if (!data.id) {\n            // I can't find any connected items, if I can't find this one:\n            resolve(null);\n            return;\n         }\n\n         let cond = {};\n         cond[this.object.PK()] = data.id;\n         this.findAll({ where: cond, populate: true })\n            .then((results) => {\n               if (\n                  !results.data ||\n                  !Array.isArray(results.data) ||\n                  results.data.length == 0\n               ) {\n                  resolve([]); // no data to return.\n                  return;\n               }\n\n               // work with the first object.\n               var myObj = results.data[0];\n\n               // if only 1 field requested, then return that\n               if (fields.length == 1) {\n                  let data =\n                     myObj[\n                        fields[0].replace(/[^a-z0-9.]/gi, \"\") + \"__relation\"\n                     ];\n                  if (!data) return resolve([]);\n\n                  if (!Array.isArray(data)) data = [data];\n\n                  resolve(data);\n                  return;\n               }\n\n               // if no fields requested, return them all:\n               if (fields.length == 0) {\n                  var allFields = this.object.fields((f) => {\n                     return f.settings.linkType;\n                  });\n                  allFields.forEach((f) => {\n                     fields.push(f.columnName);\n                  });\n               }\n\n               var returnData = {};\n               fields.forEach((colName) => {\n                  returnData[colName] =\n                     myObj[colName.replace(/[^a-z0-9.]/gi, \"\") + \"__relation\"];\n               });\n\n               resolve(returnData);\n            })\n            .catch((err) => {\n               console.error(\"!!! error with findConnected() attempt:\", err);\n               reject(err);\n            });\n      });\n   }\n\n   // /**\n   //  * @method loadInto\n   //  * loads the current values into the provided Webix DataTable\n   //  * @param {DataTable} DT  A Webix component that can dynamically load data.\n   //  */\n   // loadInto(DT) {\n\n   //   // if a limit was applied, then this component should be loading dynamically\n   //   if (this._limit) {\n\n   //     DT.define('datafetch', this._limit);\n   //     DT.define('datathrottle', 250);  // 250ms???\n\n   //     // catch the event where data is requested:\n   //     // here we will do our own findAll() so we can persist\n   //     // the provided .where condition.\n\n   //     // oh yeah, and make sure to remove any existing event handler when we\n   //     // perform a new .loadInto()\n   //     DT.___AD = DT.___AD || {};\n   //     if (DT.___AD.onDataRequestEvent) {\n   //       DT.detachEvent(DT.___AD.onDataRequestEvent);\n   //     }\n   //     DT.___AD.onDataRequestEvent = DT.attachEvent(\"onDataRequest\", (start, count) => {\n\n   //       var cond = {\n   //         where: this._where,\n   //         sort: this._sort,\n   //         limit: count,\n   //         skip: start\n   //       }\n\n   //       if (DT.showProgress)\n   //         DT.showProgress({ type: \"icon\" });\n\n   //       this.findAll(cond)\n   //         .then((data) => {\n   //           data.data.forEach((item) => {\n   //             if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //               item.$height = parseInt(item.properties.height);\n   //             } else if (parseInt(this._where.height) > 0) {\n   //               item.$height = parseInt(this._where.height)\n   //             }\n   //           });\n   //           DT.parse(data);\n\n   //           if (DT.hideProgress)\n   //             DT.hideProgress();\n\n   //         })\n\n   //       return false; // <-- prevent the default \"onDataRequest\"\n   //     });\n\n   //     DT.refresh();\n   //   }\n\n   //   // else just load it all at once:\n   //   var cond = {};\n   //   if (this._where) cond.where = this._where;\n   //   if (this._sort) cond.sort = this._sort;\n   //   if (this._limit != null) cond.limit = this._limit;\n   //   if (this._skip != null) cond.skip = this._skip;\n\n   //   if (DT.showProgress)\n   //     DT.showProgress({ type: \"icon\" });\n\n   //   this.findAll(cond)\n   //     .then((data) => {\n   //       data.data.forEach((item) => {\n   //         if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //           item.$height = parseInt(item.properties.height);\n   //         } else if (parseInt(this._where.height) > 0) {\n   //           item.$height = parseInt(this._where.height)\n   //         }\n   //       });\n   //       DT.parse(data);\n\n   //       if (DT.hideProgress)\n   //         DT.hideProgress();\n\n   //     })\n   //     .catch((err) => {\n   //       console.error('!!!!!', err);\n   //     })\n\n   // }\n\n   // /**\n   //  * @method limit\n   //  * set the limit value for this set of data\n   //  * @param {integer} limit  the number or elements to return in this call\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // limit(limit) {\n   //   this._limit = limit;\n   //   return this;\n   // }\n\n   // /**\n   //  * @method skip\n   //  * set the skip value for this set of data\n   //  * @param {integer} skip  the number or elements to skip\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // skip(skip) {\n   //   this._skip = skip;\n   //   return this;\n   // }\n\n   //   /**\n   //    * @method update\n   //    * update model values on the server.\n   //    */\n   //   update(id, values) {\n\n   //     this.prepareMultilingualData(values);\n\n   //     // remove empty properties\n   //     for (var key in values) {\n   //       if (values[key] == null)\n   //         delete values[key];\n   //     }\n\n   //     var params = {\n   //       url: this.object.urlRestItem(id),\n   //       params: values\n   //     }\n   //     return this.request('put', params)\n   //       .then((data) => {\n\n   //         // .data is an empty object ??\n\n   //         this.normalizeData(data);\n\n   //         return data;\n\n   //         // FIX: now with sockets, the triggers are fired from socket updates.\n   //         // trigger a update event\n   //         // triggerEvent('update', this.object, data);\n\n   //       })\n   //       .catch((err)=>{\n   // console.error(err);\n   //       });\n\n   //   }\n\n   /**\n    * @method upsert\n    * upsert model values on the server.\n    */\n   upsert(values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      var params = {\n         url: this.object.urlRest(),\n         params: values,\n      };\n      return this.request(\"put\", params)\n         .then((data) => {\n            // .data is an empty object ??\n\n            this.normalizeData(data);\n\n            return data;\n\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a update event\n            // triggerEvent('update', this.object, data);\n         })\n         .catch((err) => {\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method where\n    * set the where condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   where(cond) {\n      this._where = cond;\n      return this;\n   }\n\n   /**\n    * @method where\n    * set the sort condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   sort(cond) {\n      this._sort = cond;\n      return this;\n   }\n\n   /**\n    * @method refresh\n    * refresh model definition on the server.\n    */\n   refresh() {\n      console.error(\"!!! Depreciated: where is this being called from?\");\n      return Promise.resolve();\n\n      // var params = {\n      //    url: this.object.urlRestRefresh(),\n      // };\n      // return this.request(\"put\", params);\n   }\n\n   /**\n    * @method isCsvPacked\n    * check if the data is packed in a csv format\n    * @param {json} data  the json condition statement.\n    * @return {boolean} true if the data is packed in a csv format\n    *                   false if the data is not packed in a csv format\n    */\n   isCsvPacked(data) {\n      if (data.csv_packed) {\n         return true;\n      }\n      return false;\n   }\n\n   /**\n    * @method csvPack\n    * pack the data into a csv format\n    * @param {json} data\n    *               The original data format.\n    *              {\n    *                data: [{obj1}, {obj2}, ... {objN}],\n    *                total_bytes:xx,\n    *              }\n    * @return {json} the csv packed data\n    *                {\n    *                  csv_packed:{\n    *                    data: \"<csv data>\",\n    *                    relations: {\n    *                      {connectionID}: \"<csv data>\",\n    *                      {connectionID}: \"<csv data>\",\n    *                      ...\n    *                    },\n    *                  },\n    *                  total_bytes:xx,\n    *                }\n    */\n   csvPack(data) {\n      // data should be the original json data packet we want to send\n      // {\n      //   data: [{obj1}, {obj2}, ... {objN}],\n      //   total_bytes:xx,\n      // }\n      // we want to convert this to:\n      // {\n      //   csv_packed:{\n      //     data: \"csv data\",\n      //     relations: {\n      //       {connectionID}: \"csv data\", // each entry has entry._csvID, that is the lookup\n      //       {connectionID}: \"csv data\",\n      //       ...\n      //   }\n      //   total_bytes:xx,\n      // }\n      let packedData = { data: \"\", relations: {} };\n      let myObject = this.object;\n\n      let content = data.data;\n      let returnType = \"array\";\n      if (!Array.isArray(content)) {\n         returnType = \"single\";\n         content = [content];\n      }\n      content = content.filter((row) => !this.AB.isNil(row));\n\n      // stringify any potential json data\n      // starting with List data\n      let keys = [\"list\", \"json\"];\n      let stringifyFields = myObject.fields((f) => keys.indexOf(f.key) > -1);\n      stringifyFields.forEach((f) => {\n         for (let I = 0; I < content.length; I++) {\n            let row = content[I];\n            if (row[f.columnName]) {\n               row[f.columnName] = JSON.stringify(row[f.columnName]);\n            }\n         }\n      });\n\n      // break out and compact the connected data\n      let connections = myObject.connectFields();\n      connections.forEach((connField) => {\n         let connHash = {};\n         let relationName = connField.relationName();\n         let connPK = connField.datasourceLink.PK();\n\n         // gather all the connected data for this field\n         for (let I = 0; I < content.length; I++) {\n            let row = content[I];\n            if (row[relationName]) {\n               if (Array.isArray(row[relationName])) {\n                  row[relationName].forEach((r) => {\n                     if (!connHash[r.id]) {\n                        connHash[r.id] = r;\n                     }\n                  });\n               } else {\n                  let r = row[relationName];\n                  if (!connHash[r.id]) {\n                     connHash[r.id] = r;\n                  }\n               }\n            }\n         }\n\n         // assign a smaller id value\n         Object.keys(connHash).forEach((id, indx) => {\n            connHash[id]._csvID = indx;\n         });\n\n         // now reencode the connection data to reference the new _csvID\n         for (let I = 0; I < content.length; I++) {\n            let row = content[I];\n            let ids = [];\n            let hasRelationData = false;\n            if (row[relationName]) {\n               hasRelationData = true;\n               if (Array.isArray(row[relationName])) {\n                  row[relationName].forEach((r) => {\n                     ids.push(connHash[r.id]._csvID);\n                  });\n               } else {\n                  let r = row[relationName];\n                  ids.push(connHash[r.id]._csvID);\n               }\n            }\n            // only make an update if it did have relation data\n            if (hasRelationData) {\n               row[connField.columnName] = JSON.stringify(ids);\n               delete row[relationName];\n            }\n         }\n\n         let connData = Object.values(connHash);\n         connData.forEach((c) => {\n            if (c.id == c[connPK]) {\n               delete c.id;\n            }\n\n            // if translations are present return them to an object\n            if (c.translations) {\n               c.translations = JSON.stringify(c.translations);\n            }\n         });\n         let connDataCsv = this.AB.jsonToCsv(connData);\n         packedData.relations[connField.id] = connDataCsv;\n      });\n\n      // final data preparations for csv encoding\n      for (let I = 0; I < content.length; I++) {\n         let row = content[I];\n         // client side .normalizeData() should repopulate .id\n         delete row.id;\n\n         // we don't use .properties anymore, right?\n         delete row.properties;\n\n         // make sure embedded translations are stringified.\n         if (row.translations) {\n            row.translations = JSON.stringify(row.translations);\n         }\n\n         // special case for relations that are empty\n         connections.forEach((connField) => {\n            let relationName = connField.relationName();\n            if (row[relationName] === null) {\n               delete row[relationName];\n            }\n         });\n      }\n\n      // now convert the data to CSV\n      packedData.data = this.AB.jsonToCsv(content);\n      packedData.type = returnType; // single or array\n\n      let newData = {};\n      Object.keys(data).forEach((key) => {\n         if (key != \"data\") {\n            newData[key] = data[key];\n         }\n      });\n      newData.csv_packed = packedData;\n      return newData;\n   }\n\n   /**\n    * @method csvUnpack\n    * unpack the data from our csv format\n    * @param {json} data\n    *              The csv packed data format.\n    * @return {json} the unpacked data\n    */\n   csvUnpack(data) {\n      // data should be a data packet returned from the server\n      // {\n      //   csv_packed:{\n      //     data: \"csv data\",\n      //     relations: {\n      //       {connectionID}: \"csv data\", // each entry has entry._csvID, that is the lookup\n      //       {connectionID}: \"csv data\",\n      //       ...\n      //   }\n      //   total_bytes:xx,\n      // }\n      // we want to convert this to:\n      // {\n      //   data: [{obj1}, {obj2}, ... {objN}],\n      //   total_bytes:xx,\n      // }\n\n      let myObject = this.object;\n      let parseResult = this.AB.csvToJson(data.csv_packed.data);\n      // parseResult = { data: [], errors:[], meta:{}}\n\n      let returnType = data.csv_packed.type;\n\n      if (parseResult.errors?.length) {\n         // ignore common error when .data is \"\"\n         if (data.csv_packed.data !== \"\") {\n            console.error(\"Error parsing CSV data:\", parseResult.errors);\n            console.error(\"Original CSV data:\");\n            console.error(data.csv_packed.data);\n            console.error(\"result:\");\n            console.error(parseResult.data);\n         }\n      }\n      let jsonData = parseResult.data;\n\n      let keyFields = [\"list\", \"boolean\", \"number\", \"json\"];\n      let parseFields = myObject.fields((f) => keyFields.indexOf(f.key) > -1);\n      jsonData.forEach((row) => {\n         // unstringify any list,bool,number fields\n         parseFields.forEach((f) => {\n            let val = row[f.columnName];\n            if (val && typeof val == \"string\") {\n               try {\n                  row[f.columnName] = JSON.parse(val);\n               } catch (e) {\n                  console.error(\n                     \"Error parsing JSON data for column: \" + f.columnName,\n                     val,\n                     e\n                  );\n               }\n            }\n         });\n\n         // if translations are present return them to an object\n         if (row.translations) {\n            row.translations = JSON.parse(row.translations);\n         }\n      });\n\n      let connections = myObject.connectFields();\n      connections.forEach((connField) => {\n         let relationName = connField.relationName();\n\n         if (data.csv_packed.relations[connField.id]) {\n            let connDataParseResult = this.AB.csvToJson(\n               data.csv_packed.relations[connField.id]\n            );\n            let connData = connDataParseResult.data;\n\n            let connHash = {};\n            let connPK = connField.datasourceLink.PK();\n            connData.forEach((c) => {\n               if (!c.id) {\n                  c.id = c[connPK];\n               }\n               connHash[c._csvID] = c;\n            });\n\n            jsonData.forEach((row) => {\n               let ids = [];\n               let populatedData = [];\n               let entries = [];\n               try {\n                  // ok, we know this is a possibility, so just skip it\n                  if (row[connField.columnName] !== \"\") {\n                     entries = JSON.parse(row[connField.columnName]);\n                  }\n               } catch (e) {\n                  if (row[connField.columnName] == \"\") {\n                     // not a problem, just no data\n                  } else {\n                     // this might be a situation on the server where\n                     // row[columnName] has a value, but row[relationName] is empty.\n                     if (typeof row[relationName] == \"undefined\") {\n                        row[relationName] = null;\n                     }\n                     // console.error(\n                     //    \"Error parsing JSON data for column: \" +\n                     //       connField.columnName,\n                     //    e\n                     // );\n                  }\n               }\n               if (!Array.isArray(entries)) {\n                  entries = [entries];\n               }\n               entries.forEach((id) => {\n                  if (connHash[id]) {\n                     let connEntry = connHash[id];\n                     ids.push(connField.getRelationValue(connEntry));\n                     // Alternatively, we could remove the row[columnName] and let\n                     // normalizeData() repopulate it.\n                     populatedData.push(connEntry);\n                  }\n               });\n               if (connField.linkType() == \"many\") {\n                  row[connField.columnName] = ids;\n                  row[connField.relationName()] = populatedData;\n               } else {\n                  row[connField.columnName] = ids[0];\n                  row[connField.relationName()] = populatedData[0];\n               }\n            });\n\n            // now clear the ._csvID from the data\n            Object.keys(connHash).forEach((id) => {\n               delete connHash[id]._csvID;\n            });\n         }\n      });\n\n      // final pass to clear up stringified relation data\n      jsonData.forEach((row) => {\n         connections.forEach((connField) => {\n            // many connections must be an array, not \"[]\"\n            if (connField.linkType() == \"many\") {\n               let val = row[connField.columnName];\n               if (val && typeof val == \"string\") {\n                  row[connField.columnName] = JSON.parse(val);\n               }\n            }\n         });\n      });\n\n      let returnData = {};\n      Object.keys(data).forEach((key) => {\n         if (key != \"csv_packed\") {\n            returnData[key] = data[key];\n         }\n      });\n      returnData.data = jsonData;\n\n      if (returnType == \"single\" && Array.isArray(returnData.data)) {\n         returnData.data = returnData.data[0];\n      }\n      return returnData;\n   }\n\n   normalizeData(data) {\n      // convert to array\n      if (!(data instanceof Array)) data = [data];\n\n      // find all connected fields\n      var connectedFields = this.object.connectFields();\n\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n\n      // if this object has some date fields, convert the data to date object:\n      var dateFields =\n         this.object.fields(function (f) {\n            return f.key == \"date\" || f.key == \"datetime\";\n         }) || [];\n\n      // calculate fields\n      var calculatedFields = this.object.fields((f) => f.key == \"calculate\");\n\n      data.forEach((d) => {\n         if (d == null) return;\n\n         // various PK name\n         if (!d.id && this.object.PK() != \"id\") d.id = d[this.object.PK()];\n\n         // loop through data's connected fields\n         connectedFields.forEach((c) => {\n            // get the relation name so we can change the original object\n            var relationName = c.relationName();\n\n            // if (d[c.columnName] == null)\n            //  d[c.columnName] = '';\n\n            // Our client side tools need to know that this value is null if it\n            // isn't provided:\n            if (\n               typeof d[relationName] == \"undefined\" &&\n               typeof d[c.columnName] == \"undefined\"\n            ) {\n               d[relationName] = null;\n               d[c.columnName] = null;\n               return;\n            }\n\n            // if there is no data we can exit now\n            if (d[relationName] == null) return;\n\n            // if relation data is still a string and isn't empty\n            if (\n               typeof d[relationName] == \"string\" &&\n               d[relationName].length > 0\n            ) {\n               // parse the string into an object\n               d[relationName] = JSON.parse(d[relationName]);\n            }\n\n            // if the data is an array we need to loop through it\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((r) => {\n                  // if translations are present and they are still a string\n                  if (r.translations && typeof r.translations == \"string\") {\n                     // parse the string into an object\n                     r.translations = JSON.parse(r.translations);\n                  }\n               });\n               // if the data is not an array it is a single item...check that has translations and it is a string\n            } else if (\n               d[relationName].translations &&\n               typeof d[relationName].translations == \"string\"\n            ) {\n               // if so parse the string into an object\n               d[relationName].translations = JSON.parse(\n                  d[relationName].translations\n               );\n            }\n\n            // set .id to relation columns\n            let objectLink = c.datasourceLink;\n\n            // if we didn't get the linked object, just return.\n            if (!objectLink) return;\n\n            let olPK = objectLink.PK();\n            var relatedMlFields = objectLink.multilingualFields();\n\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((subData) => {\n                  // update .id values\n                  // if (olPK != \"id\" && subData[olPK]) subData.id = subData[olPK];\n                  const relationValue = c.getRelationValue(subData);\n                  if (olPK != \"id\") subData.id = relationValue;\n\n                  // perform Translation\n                  if (relatedMlFields.length) {\n                     objectLink.translate(subData, subData, relatedMlFields);\n                  }\n               });\n            } else {\n               // update .id value\n               // if (d[relationName][olPK]) {\n               //    d[relationName].id = d[relationName][olPK];\n               // }\n               const relationValue = c.getRelationValue(d[relationName]);\n               if (relationValue) {\n                  d[relationName].id = relationValue;\n               }\n\n               // perform Translation\n               if (relatedMlFields.length) {\n                  objectLink.translate(\n                     d[relationName],\n                     d[relationName],\n                     relatedMlFields\n                  );\n               }\n            }\n\n            // if (\n            //    objectLink &&\n            //    olPK != \"id\" &&\n            //    d[relationName] &&\n            //    !d[relationName].id\n            // ) {\n            //    // is array\n            //    if (d[relationName].forEach) {\n            //       d[relationName].forEach((subData) => {\n            //          if (subData[olPK]) subData.id = subData[olPK];\n            //       });\n            //    } else if (d[relationName][olPK]) {\n            //       d[relationName].id = d[relationName][olPK];\n            //    }\n            // }\n\n            // if (relatedMlFields.length) {\n            //    d[relationName];\n            //    objectLink.translate(\n            //       d[relationName],\n            //       d[relationName],\n            //       relatedMlFields\n            //    );\n            // }\n\n            // Change property name of connected field\n            if (!d[c.columnName]) {\n               if (c.linkType() == \"one\") {\n                  if (d[relationName]) {\n                     // d[c.columnName] = d[relationName][olPK];\n                     d[c.columnName] = c.getRelationValue(d[relationName]);\n                  } else {\n                     d[c.columnName] = null;\n                  }\n               } else {\n                  if (d[relationName]) {\n                     if (Array.isArray(d[relationName])) {\n                        try {\n                           d[c.columnName] = (d[relationName] || []).map(\n                              // (i) => i[olPK]\n                              (i) => c.getRelationValue(i)\n                           );\n                        } catch (e) {\n                           console.log(\"+++++++++++++++\");\n                           console.log(`ID:[${c.id}]`);\n                           console.log(`ColumnName:[${c.label}]`);\n                           console.log(`relationName:[${relationName}]`);\n                           console.log(`linkType:[${c.linkType()}]`);\n                           console.log(\"data:\");\n                           console.log(JSON.stringify(d[relationName]));\n                           console.log(\"+++++++++++++++\");\n                        }\n                     } else {\n                        // this is strange: supposed to be \"many\" but coming in\n                        // as \"one\"\n                        console.log(\"+++++++++++++++\");\n                        console.log(`ID:[${c.id}]`);\n                        console.log(`ColumnName:[${c.label}]`);\n                        console.log(`relationName:[${relationName}]`);\n                        console.log(`linkType:[${c.linkType()}]`);\n                        console.log(\"data:\");\n                        console.log(JSON.stringify(d[relationName]));\n                        console.log(\"+++++++++++++++\");\n                        // d[c.columnName] = [d[relationName][olPK]];\n                        d[c.columnName] = [c.getRelationValue(d[relationName])];\n                     }\n                  } else {\n                     d[c.columnName] = [];\n                  }\n               }\n            }\n         });\n\n         if (mlFields.length) {\n            this.object.translate(d, d, mlFields);\n         }\n\n         // convert the data to date object\n         dateFields.forEach((date) => {\n            if (d && d[date.columnName] != null) {\n               // check to see if data has already been converted to a date object\n               if (typeof d[date.columnName] == \"string\") {\n                  if (date.key == \"date\") {\n                     // if we are ignoring the time it means we ignore timezone as well\n                     // so lets trim that off when creating the date so it can be a simple date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName],\n                        {\n                           format: \"MM/DD/YYYY\",\n                           ignoreTime: true,\n                        }\n                     );\n                  } else {\n                     // Convert UTC to Date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName]\n                     );\n                     // d[date.columnName] = new Date(moment(d[date.columnName]));\n                  }\n               }\n            }\n         });\n\n         calculatedFields.forEach((calField) => {\n            d[calField.columnName] = calField.format(d);\n         });\n      });\n   }\n};\n","const ABObject = require(\"../platform/ABObject\");\nconst ABModelApi = require(\"../platform/ABModelApi\");\n\nmodule.exports = class ABObjectApiCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.isAPI = true;\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.readonly = parseInt(attributes.readonly) || 0;\n      this.apiType = attributes.apiType || \"Read\";\n      this.request = attributes.request ?? {};\n      this.request.headers = attributes.request?.headers ?? [];\n      this.response = attributes.response ?? {};\n      this.response.fields = attributes.response?.fields ?? [];\n      this.isFetched = attributes.isFetched ?? false;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const result = super.toObj();\n\n      result.isAPI = this.isAPI;\n      result.readonly = this.readonly;\n      result.apiType = this.apiType;\n      result.request = this.request ?? {};\n      result.request.headers = this.request?.headers ?? [];\n      result.response = this.response ?? {};\n      result.response.fields = this.response?.fields ?? [];\n      result.isFetched = this.isFetched;\n\n      return result;\n   }\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelApi(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @function getPagingValues()\n    *\n    * @return {Object} - {\n    *                       start: \"Property name of the API for start index\",\n    *                       limit: \"Property name of the API for limit return the item number\"\n    *                     }\n    */\n   getPagingValues({ skip, limit }) {\n      const result = {};\n      const pagingSettings = this.request?.paging ?? {};\n\n      if (pagingSettings.start && skip != null) {\n         result[pagingSettings.start] = skip;\n      }\n      if (pagingSettings.limit && limit != null) {\n         result[pagingSettings.limit] = limit;\n      }\n\n      return result;\n   }\n\n   dataFromKey(data) {\n      let result = [];\n\n      if (!Array.isArray(data)) data = [data];\n\n      data.forEach((item) => {\n         // Clone item\n         let itemResult = { ...item };\n\n         // Pull data from `Data key` of the API object\n         // FORMAT: \"Property.Name.Value\"\n         (this.response.dataKey ?? \"\").split(\".\").forEach((key) => {\n            if (key == \"\" || key == null) return;\n            itemResult = itemResult?.[key];\n         });\n\n         if (Array.isArray(itemResult)) {\n            result = result.concat(itemResult);\n         } else if (itemResult) {\n            result.push(itemResult);\n         }\n      });\n\n      return result;\n   }\n\n   get headers() {\n      const headers = {};\n\n      (this.request.headers ?? []).forEach((header) => {\n         if (header?.value == null) return;\n\n         headers[header.key] = header.value;\n      });\n\n      return headers;\n   }\n};\n","const ABObjectApi = require(\"../platform/ABObjectApi\");\nconst ABModelApiNetsuite = require(\"../platform/ABModelApiNetsuite\");\n\nmodule.exports = class ABObjectApiNetsuiteCore extends ABObjectApi {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.isNetsuite = true;\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.credentials = attributes.credentials ?? {};\n      this.columnRef = attributes.columnRef ?? {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const result = super.toObj();\n\n      result.isNetsuite = true;\n      result.credentials = this.credentials;\n      result.columnRef = this.columnRef;\n\n      return result;\n   }\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelApiNetsuite(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @function getPagingValues()\n    *\n    * @return {Object} - {\n    *                       start: \"Property name of the API for start index\",\n    *                       limit: \"Property name of the API for limit return the item number\"\n    *                     }\n    */\n   /*\n   getPagingValues({ skip, limit }) {\n      const result = {};\n      const pagingSettings = this.request?.paging ?? {};\n\n      if (pagingSettings.start && skip != null) {\n         result[pagingSettings.start] = skip;\n      }\n      if (pagingSettings.limit && limit != null) {\n         result[pagingSettings.limit] = limit;\n      }\n\n      return result;\n   }\n\n   dataFromKey(data) {\n      let result = [];\n\n      if (!Array.isArray(data)) data = [data];\n\n      data.forEach((item) => {\n         // Clone item\n         let itemResult = { ...item };\n\n         // Pull data from `Data key` of the API object\n         // FORMAT: \"Property.Name.Value\"\n         (this.response.dataKey ?? \"\").split(\".\").forEach((key) => {\n            if (key == \"\" || key == null) return;\n            itemResult = itemResult?.[key];\n         });\n\n         if (Array.isArray(itemResult)) {\n            result = result.concat(itemResult);\n         } else if (itemResult) {\n            result.push(itemResult);\n         }\n      });\n\n      return result;\n   }\n\n   get headers() {\n      const headers = {};\n\n      (this.request.headers ?? []).forEach((header) => {\n         if (header?.value == null) return;\n\n         headers[header.key] = header.value;\n      });\n\n      return headers;\n   }\n\n   */\n};\n","/**\n * ABObjectCore\n *\n * Manage the loading of specific ABObject data into useable objects\n * that can instantiate themselves and provide field and model resources.\n */\n\nvar ABModel = require(\"../platform/ABModel\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\n/* eslint-disable-next-line no-undef */\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      /*\n{\n\tid: uuid(),\n\tconnName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tlabelSettings: Object,\n\tisImported: 1/0,\n\tisExternal: 1/0,\n\ttableName:'string',  // NOTE: store table name of import object to ignore async\n\tprimaryColumnName: 'string', // NOTE: store column name of PK\n\ttransColumnName: 'string', // NOTE: store column name of translations table\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:\t ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n   ],\n   indexes: [\n      {ABIndex}\n   ]\n}\n*/\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object. These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static contextKey() {\n      return \"object\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            connName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n            name: 'name',\n            labelFormat: 'xxxxx',\n            labelSettings: Object,\n            isImported: 1/0,\n            isExternal: 1/0,\n            tableName:'string',  // NOTE: store table name of import object to ignore async\n            primaryColumnName: 'string', // NOTE: store column name of PK\n            transColumnName: 'string', // NOTE: store column name of translations table\n            urlPath:'string',\n            importFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n                                        // to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n            translations:[\n                {}\n            ],\n            fields:[\n                {ABDataField}\n            ],\n            indexes: [\n               {ABIndex}\n            ]\n        }\n        */\n\n      this.id = attributes.id;\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = attributes.type || \"object\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.connName = attributes.connName || undefined; // undefined == 'appBuilder'\n      // {string} .connName\n      // the sails.config.connections[connName] configuration reference.\n      // if not set ({undefined}), then our default \"appBuilder\" config is used\n\n      this.name = attributes.name || \"\";\n      // {string} .name\n      // A name reference for this ABObject. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      this.labelFormat = attributes.labelFormat || \"\";\n      // {string} .labelFormat\n      // A string template for how to display an entry for this ABObject in\n      // common UI elements like grids, lists, etc...\n\n      this.labelSettings = attributes.labelSettings || {};\n      // {Object} .labelSettings\n\n      this.labelSettings.isNoLabelDisplay = parseInt(\n         this.labelSettings.isNoLabelDisplay || 0\n      );\n      // {bool} .isNoLabelDisplay\n\n      this.isImported = parseInt(attributes.isImported || 0);\n      // {depreciated}\n      // {bool} .isImported\n      // previously used to mark ABObjects that were created in other\n      // ABApplicaitons.  No longer relevant with Global ABObjects\n\n      this.isExternal = parseInt(attributes.isExternal || 0);\n      // {bool} .isExternal\n      // Marks this ABObject as referencing a pre-existing table in the DB that\n      // we are treating as an ABObject.\n      // These objects are not allowed to create/update/destroy the db table\n      // nor can we add/remove fields.\n      // However we are able to customize the Field definitions to change the\n      // column names, hidden attributes, Object label, etc...\n      // We can update our Defintion attributes, but not any actual DB changes.\n\n      this.tableName = attributes.tableName || \"\"; // NOTE: store table name of import object to ignore async\n      // {string} .tableName\n      // the `{database}.{tableName}` of the db table that this ABObject's data\n      // is stored in.\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.tableName = this.tableName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n\n      this.primaryColumnName = attributes.primaryColumnName || \"\"; // NOTE: store column name of PK\n      // {string} .primaryColumnName\n      // is the col_name of which key is the primary key.  By default it is\n      // \"uuid\", but in some external objects this might be something else\n      // (\"id\", \"ren_id\", etc...).\n\n      this.transColumnName = attributes.transColumnName || \"\"; // NOTE: store column name of translations table\n      // {string} .transColumnName\n      // this is a workaround to include hris_ren_data and hris_ren_trans data\n\n      this.urlPath = attributes.urlPath || \"\";\n\n      // this.importFromObject = attributes.importFromObject || \"\";\n\n      this.isSystemObject = attributes.isSystemObject;\n      // {bool} .isSystemObject\n      // We are now storing some of our System Required Data as ABObjects as well.\n      // These Objects should not be allowed to be modified by typical AppBuilder\n      // designer.  However we can enable a mode for AB Designer to then expand these\n      // ABObjects, and eventually we can use the AppBuilder to Create the AppBuilder.\n      if (\n         typeof this.isSystemObject == \"undefined\" ||\n         this.isSystemObject == \"false\"\n      ) {\n         this.isSystemObject = false;\n      }\n\n      this.createdInAppID = attributes.createdInAppID;\n      // {string} .createdInAppID\n      // the .id of the ABApplication that originally created this ABObject.\n\n      // if attributes.objectWorkspace DOES exist, make sure it is fully\n      // populated.\n      if (typeof attributes.objectWorkspace != \"undefined\") {\n         if (typeof attributes.objectWorkspace.sortFields == \"undefined\")\n            attributes.objectWorkspace.sortFields = [];\n         if (typeof attributes.objectWorkspace.filterConditions == \"undefined\")\n            attributes.objectWorkspace.filterConditions = [];\n         if (typeof attributes.objectWorkspace.frozenColumnID == \"undefined\")\n            attributes.objectWorkspace.frozenColumnID = \"\";\n         if (typeof attributes.objectWorkspace.hiddenFields == \"undefined\")\n            attributes.objectWorkspace.hiddenFields = [];\n      }\n      this.objectWorkspace = attributes.objectWorkspace || {\n         sortFields: [], // array of columns with their sort configurations\n         filterConditions: [], // array of filters to apply to the data table\n         frozenColumnID: \"\", // id of column you want to stop freezing\n         hiddenFields: [], // array of [ids] to add hidden:true to\n      };\n      // {obj} .objectWorkspace\n      // When in the ABObject editor in the AppBuilder Designer, different\n      // views of the information can be created.  These views are stored here\n      // and are avaiable to other users in the Designer.\n\n      // pull in field definitions:\n      var fields = [];\n      this.fieldIDs = attributes.fieldIDs || [];\n      // {array}  [ ABField.id, ... ]\n      // this is a collection of ALL the ABFields this object references.\n      // This will include ABFields that were directly created for this object\n      // and will include ABFields that were imported.\n\n      this.importedFieldIDs = attributes.importedFieldIDs || [];\n      // {array} [ ABField.id, ... ]\n      // this is a collection of the ABFields in our .fieldIDs that were\n      // IMPORTED.\n\n      this._unknownFieldIDs = [];\n      this.fieldIDs.forEach((id) => {\n         if (!id) return;\n\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._fields = fields;\n\n      // pull in index definitions:\n      this.importIndexes(attributes.indexIDs);\n\n      // let the MLClass now process the translations:\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method importIndexes\n    * instantiate a set of indexes from the given ids.\n    * @param {array} indexIDs The different ABDefinition IDs for each index\n    *        [ \"uuid11\", \"uuid2\", ... \"uuidN\" ]\n    */\n   importIndexes(indexIDs) {\n      this._unknownIndex = [];\n      var indexes = [];\n      (indexIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            indexes.push(this.AB.indexNew(def, this));\n         } else {\n            this._unknownIndex.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown index id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._indexes = indexes;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   // exportFields() {\n   //     var currFields = [];\n   //     this._fields.forEach((obj) => {\n   //         currFields.push(obj.toObj());\n   //     });\n   //     return currFields;\n   // }\n\n   // /**\n   //  * @method exportFields\n   //  * convert our array of fields into a settings object for saving to disk.\n   //  * @return {array}\n   //  */\n   // exportIndexes() {\n   //    var currIndexes = [];\n   //    this._indexes.forEach((idx) => {\n   //       currIndexes.push(idx.toObj());\n   //    });\n   //    return currIndexes;\n   // }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      // track the field .ids of our fields\n      var fieldIDs = this.fields().map((f) => f.id);\n      (this._unknownFieldIDs || []).forEach((id) => {\n         fieldIDs.push(id);\n      });\n      // NOTE: we keep the ._unknownFieldIDs so a developer/builder\n      // can come back and track down what happened to the missing\n      // ids.\n\n      // track the index .ids of our indexes\n      var indexIDs = this.indexes().map((f) => f.id);\n      (this._unknownIndex || []).forEach((id) => {\n         indexIDs.push(id);\n      });\n\n      return {\n         id: this.id,\n         type: this.type || \"object\",\n         connName: this.connName,\n         name: this.name,\n         labelFormat: this.labelFormat,\n         labelSettings: this.labelSettings || {},\n         isImported: this.isImported,\n         isExternal: this.isExternal,\n         tableName: this.tableName,\n         // NOTE: store table name of import object to ignore async\n         primaryColumnName: this.primaryColumnName,\n         // NOTE: store column name of PK\n         transColumnName: this.transColumnName,\n         // NOTE: store column name of translations table\n         urlPath: this.urlPath,\n         // importFromObject: this.importFromObject,\n         objectWorkspace: this.objectWorkspace,\n         isSystemObject: this.isSystemObject,\n\n         translations: obj.translations,\n         fieldIDs: fieldIDs,\n         importedFieldIDs: this.importedFieldIDs,\n         indexIDs: indexIDs,\n         createdInAppID: this.createdInAppID,\n      };\n   }\n\n   ///\n   /// Objects\n   ///\n\n   /**\n    * @method objectLinks()\n    *\n    *  return an array of ABObject that's connected.\n    *\n    * @param {object} filter\n    * @return {array} - An array of ABObject\n    */\n   objectLinks(/* filter */) {\n      var connectFields = this.connectFields();\n\n      return connectFields.map((f) => f.datasourceLink);\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method fields()\n    * return an array of all the ABFields for this ABObject.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array[ABFieldxxx]}\n    */\n   fields(fn = () => true) {\n      return this._fields.filter(fn);\n   }\n\n   /**\n    * @method fieldByID()\n    * return the object's field from the given {ABField.id}\n    * @param {string} id\n    *        the uuid of the field to return.\n    * @return {ABFieldxxx}\n    */\n   fieldByID(id) {\n      return this.fields((f) => f?.id == id)[0];\n   }\n\n   /**\n    * @method connectFields()\n    *\n    * return an array of the ABFieldConnect that is connect object fields.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   connectFields(fn = () => true) {\n      return this.fields((f) => f && f.isConnection).filter(fn);\n   }\n\n   /**\n    * @method fieldImport\n    * register the given ABField.id as an imported field for this ABObject.\n    * The ABField definition should be available before making this call.\n    * After this call, the ABField is included in the ABObject, but the ABObject\n    * has NOT been saved.\n    * @param {ABField} fieldID The ABDefinition.id for a field that is imported\n    *        into this object.\n    */\n   fieldImport(id) {\n      if (!id) return;\n\n      if (this.importedFieldIDs.indexOf(id) == -1) {\n         this.importedFieldIDs.push(id);\n      }\n\n      // just to be safe:\n      var isThere = this._fields.find((f) => f.id == id);\n      if (!isThere) {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            this._fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs = this._unknownFieldIDs || [];\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is importing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      }\n   }\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @return {ABField}\n    */\n   fieldNew(values) {\n      return this.AB.fieldNew(values, this);\n   }\n\n   /**\n    * @method fieldRemove()\n    *\n    * remove the given ABField from our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldRemove(field) {\n      var origLen = this._fields.length;\n      this._fields = this.fields(function (o) {\n         return o.id != field.id;\n      });\n\n      // be sure to remove this from our imported ids if it was\n      // listed there.\n      this.importedFieldIDs = this.importedFieldIDs.filter(\n         (fid) => fid != field.id\n      );\n\n      if (this._fields.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldReorder()\n    *\n    * reorder the fields in our object\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldReorder(sourceId, targetId) {\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == sourceId) {\n            itemMoved = this._fields[i];\n            this._fields.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < this._fields.length; j++) {\n         if (this._fields[j].columnName == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            this._fields.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      return this.save();\n   }\n\n   /**\n    * @method fieldSave()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldSave(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         this._fields.push(field);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldAdd()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values if they changed.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldAdd(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._fields.push(field);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method imageFields()\n    *\n    * return an array of the ABFieldImage fields this object has.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   imageFields(fn = () => true) {\n      return this.fields((f) => f && f.key == \"image\").filter(fn);\n   }\n\n   /**\n    * @method multilingualFields()\n    *\n    * return an array of columnnames that are multilingual.\n    *\n    * @return {array}\n    */\n   multilingualFields() {\n      return this.fields((f) => f && f.isMultilingual).map((f) => f.columnName);\n   }\n\n   /**\n    * @method indexes()\n    *\n    * return an array of all the ABIndex for this ABObject.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   indexes(filter = () => true) {\n      return this._indexes.filter(filter);\n   }\n\n   /**\n    * @method indexByID()\n    * return the object's index from the given {ABIndex.id}\n    * @param {string} id\n    *        the id of the ABIndex to return.\n    * @return {ABIndex}\n    */\n   indexByID(id) {\n      return this.indexes((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method indexRemove()\n    * remove the given ABIndex from our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexRemove(index) {\n      var origLen = this._indexes.length;\n      this._indexes = this.indexes(function (idx) {\n         return idx.id != index.id;\n      });\n\n      // persist our changes if something changed.\n      if (origLen != this._indexes.length) {\n         return this.save();\n      }\n\n      // nothing was removed, so continue on.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method indexSave()\n    * save the given ABIndex in our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexSave(index) {\n      var isIncluded = this.indexByID(index.id);\n      if (!isIncluded) {\n         this._indexes.push(index);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   ///\n   /// Working with data from server\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObject.\n    */\n   model() {\n      var model = new ABModel(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(ABObjectCore.contextKey());\n      model.contextValues({ id: this.id });\n\n      return model;\n   }\n\n   ///\n   /// URL\n   ///\n\n   /**\n    * @method urlRest\n    * return the url to access the data for this object.\n    * @return {string}\n    */\n   urlRest() {\n      return `/app_builder/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestBatch\n    * return the url to use for batch creates for this object\n    * @return {string}\n    */\n   urlRestBatch() {\n      return `/app_builder/batch/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestItem\n    * return the url to access the data for an instance of this object.\n    * @return {string}\n    */\n   urlRestItem(id) {\n      return `/app_builder/model/${this.id}/${id}`;\n   }\n\n   /**\n    * @method urlRestLog\n    * return the url to access the logs for this ABObject.\n    * @return {string}\n    */\n   urlRestLog() {\n      return `/app_builder/object/${this.id}/track`;\n   }\n\n   /**\n    * @method urlRestRefresh\n    * return the url to signal a refresh for this object.\n    * @return {string}\n    */\n   urlRestRefresh() {\n      return `/app_builder/model/refreshobject/${this.id}`;\n   }\n\n   /**\n    * @method urlCount\n    * return the url to count of data for this object.\n    * @return {string}\n    */\n   urlRestCount() {\n      return `/app_builder/model/${this.id}/count`;\n   }\n\n   ///\n   ///\tObject Workspace Settings\n   ///\n   get workspaceSortFields() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.sortFields;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.sortFields;\n      }\n   }\n\n   set workspaceSortFields(fields) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.sortFields = fields;\n      }\n      // old version\n      else {\n         this.objectWorkspace.sortFields = fields;\n      }\n   }\n\n   get workspaceFilterConditions() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.filterConditions;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.filterConditions;\n      }\n   }\n\n   set workspaceFilterConditions(filterConditions) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.filterConditions = filterConditions;\n      }\n      // old version\n      else {\n         this.objectWorkspace.filterConditions = filterConditions;\n      }\n   }\n\n   get workspaceFrozenColumnID() {\n      return this.objectWorkspace.frozenColumnID;\n   }\n\n   set workspaceFrozenColumnID(id) {\n      this.objectWorkspace.frozenColumnID = id;\n   }\n\n   get workspaceHiddenFields() {\n      return this.objectWorkspace.hiddenFields || [];\n   }\n\n   set workspaceHiddenFields(fields) {\n      this.objectWorkspace.hiddenFields = fields;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return this.isImported || this.isExternal || this.readonly;\n   }\n\n   /**\n    * @method defaultValues\n    * Collect a hash of key=>value pairs that represent the default values\n    * from each of our fields.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   defaultValues() {\n      var values = {};\n      this.fields().forEach((f) => {\n         f.defaultValue(values);\n      });\n\n      return values;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(/* data */) {\n      // NOTE: the platform needs to define a way to verify the data\n      console.warn(\"Platform.ABObject.isValidData() missing\");\n      return true;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      if (this.application == null) return null;\n\n      return this.application.urlObject(acrossApp) + this.id;\n   }\n\n   /**\n    * @method urlField\n    * return a string pointer to this object's fields\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlField(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      return this.urlPointer(acrossApp) + \"/_fields/\";\n   }\n\n   /**\n    * @method PK\n    * return a string of the primary column name\n    *\n    * @return {string}\n    */\n   PK() {\n      return this.primaryColumnName || \"uuid\";\n   }\n\n   remoteCreate(data) {\n      console.log(\n         \"object[\" + this.name + \"] received a remoteCreate() with data:\",\n         data\n      );\n   }\n\n   /**\n    * @method clone\n    * return a clone of ABObject\n    *\n    * @return {ABObjectBase}\n    */\n   clone() {\n      // ignore properties who're spend much performance\n      // NOTE: do not clone them. Just copy reference\n      let ignoreProps = [\"application\", \"_fields\"];\n\n      let cloneOne = JSON.parse(JSON.stringify(this));\n\n      ignoreProps.forEach((prop) => {\n         cloneOne[prop] = this[prop];\n      });\n\n      return cloneOne;\n   }\n\n   /**\n    * @method minRelationData()\n    * return an array of ABField.columnNames that make up\n    * the minimum fields required to display this objects __RELATION\n    * data in our UI widgets.\n    */\n   minRelationData() {\n      var fields = [this.PK()];\n\n      if (this.multilingualFields().length > 0) {\n         fields.push(\"translations\");\n      }\n\n      var labelData = this.labelFormat || \"\";\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            fields.push(field.columnName);\n         });\n      }\n      // Default defining label\n      else {\n         const defaultFld = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultFld) fields.push(defaultFld.columnName);\n      }\n\n      // System requires to include number field values\n      // because they are used on Formula/Calculate fields on client side\n      fields = fields.concat(\n         this.fields((f) => f.key == \"number\").map((f) => f.columnName)\n      );\n\n      return fields;\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = \"{\" + defaultField.id + \"}\";\n         else {\n            // if label is empty, then show .id\n            if (!labelData.trim()) {\n               let labelSettings = this.labelSettings || {};\n               if (labelSettings && labelSettings.isNoLabelDisplay) {\n                  labelData = L(labelSettings.noLabelText || \"[No Label]\");\n               } else {\n                  // show id of row\n                  labelData = `${\n                     this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"\n                  }${rowData.id}`;\n               }\n            }\n         }\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      // Using rawString to catch actual values we are pulling out.\n      // the label data might have additional characters \"-\" and such that will\n      // remain, and doing a .trim() on that wont catch that the label data\n      // is actually empty.\n      let rawString = \"\";\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            let valField = field.format(rowData) || \"\";\n            labelData = labelData.replace(colId, valField);\n            rawString = `${rawString}${valField}`;\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!rawString.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   /**\n    * @method whereCleanUp()\n    * Parse through the current where condition and remove any null or\n    * empty logical blocks.\n    * @param {obj} curr\n    *        1) The current where condition in ABQuery Format:\n    *        {\n    *           glue: [AND, OR],\n    *           rules: [ {rule} ]\n    *        }\n    *        or 2) The current {rule} to validate\n    *        {\n    *          key:{string},\n    *          rule:{string},\n    *          vlaue:{mixed}\n    *        }\n    * @return {ABQuery.where} / { Rule }\n    */\n   whereCleanUp(curr) {\n      if (curr) {\n         if (curr.glue && curr.rules) {\n            // SENTRY Error AB-APPBUILDER-4H\n            // \"curr.rules.forEach is not a function\"\n            // curr.rules is supposed to be an array. If we are not\n            // getting that, then let's send an alert to figure out what\n            // is happening here:\n            if (!Array.isArray(curr.rules)) {\n               // what is this entry?\n               let err = new Error(\n                  `ABObjectCore.whereCleanUP(): Sentry Error: AB-APPBUILDER-4H: current rule is not properly formed: ${JSON.stringify(\n                     curr\n                  )}`\n               );\n               this.AB.notify.developer(err, { curr });\n            }\n\n            // this is a logical Block (AND, OR)\n            // we need to filter the children\n            let newValue = { glue: curr.glue, rules: [] };\n            curr.rules.forEach((r) => {\n               let cleanRule = this.whereCleanUp(r);\n               // don't add values that didn't pass\n               if (cleanRule) {\n                  newValue.rules.push(cleanRule);\n               }\n            });\n\n            // if we have a non empty block, then return it:\n            if (newValue.rules.length > 0) {\n               return newValue;\n            }\n\n            // this isn't really a valid conditional, so null\n            return null;\n         }\n\n         // This is a specific rule, that isn't null so:\n         // if it isn't {}, then return it\n         if (Object.keys(curr).length > 0) return curr;\n\n         // otherwise we skip this as well\n         return null;\n      }\n      return null;\n   }\n};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nvar ABObject = require(\"../platform/ABObject\");\nvar ABModelQuery = require(\"../platform/ABModelQuery\");\n\nmodule.exports = class ABObjectQueryCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      /*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\n\n\n\t// ABOBjectQuery Specific Changes\n\t// we store a list of fields by their urls:\n\tfields:[\n\t\t{\n\t\t\talias: \"\",\n\t\t\tfieldURL:'#/url/to/field',\n\t\t}\n\t],\n\n\n\t// we store a list of joins:\n\tjoins:{\n\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\tobjectURL:\"#/...\",\t\t\t\t\t// the base object of the join\n\t\tlinks: [\n\t\t\t{\n\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// the connection field of the object we are joining with.\n\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n\t\t\t\tlinks: [\n\t\t\t\t\t...\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\n\t},\n\n\n\twhere: { QBWhere }\n}\n*/\n      this.isQuery = true;\n      // {bool}\n      // a property to mark the difference between an ABObject and ABObjectQuery.\n\n      this.__missingObject = this.__missingObject ?? [];\n      // {array} fieldInfo\n      // the field info that defined an object we can't find.\n\n      this.__missingFields = this.__missingFields ?? [];\n      // {array} [ { objID, fieldID }, ... ]\n      // a list of field definitions that we are unable to resolve.\n\n      this.__cantFilter = [];\n      // {array} [ {field, fieldInfo}, ... ]\n      // a list of field that were assigned but can't be used for filtering.\n\n      this.__duplicateFields = [];\n      // {array} [ {fieldInfo}, ... ]\n      // a list of duplicate field definitions.\n\n      this.__linkProblems = [];\n      // {array} [ { message, data }, ...]\n      // a list of warning messages related to link objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * contextKey()\n    * returns a unique key that represents a query in\n    * our networking job resolutions.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"query\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.type = \"query\";\n\n      // populate connection objects\n      // this._objects = {};\n      // this.obj2Alias = attributes.obj2Alias || {};\n\n      this.alias2Obj = {}; // this gets built in the .importJoins()\n      // { \"alias\" : object.id }\n      // this is a lookup hash of a referenced alias to the Object it\n      // references.\n\n      this.objectIDs = [];\n      // {array}  of ABObject.id s that are referenced by this query.\n      // this is how we limit our searches on objects.\n      // this gets built in the .importJoins();\n\n      this.viewName = attributes.viewName || \"\";\n      // {string}\n      // this is the SQL tablename of where our Query will store it's\n      // view data.\n\n      // import all our ABObjects\n      this.importJoins(attributes.joins || {});\n\n      // import fields after joins are imported\n      this._fields = null;\n      this.importFields(attributes.fields || []);\n      // {array} [ { alias, field}, {},... ]\n      // an array of field definition structures that mark what fields this\n      // query is interested in pulling data from.\n      //    .alias : {string} matches the alias of the ABObject that the field\n      //             is from\n      //    .field : {ABFieldXXX} the link to the actual ABField instance\n\n      // Import our Where condition\n      this.where = attributes.where || {}; // .workspaceFilterConditions\n      // Fix default where.glue value\n      if (\n         this.where &&\n         !this.where.glue &&\n         this.where.rules &&\n         this.where.rules.length > 0\n      )\n         this.where.glue = \"and\";\n\n      this._objectWorkspaceViews = attributes.objectWorkspaceViews || {};\n\n      this.settings = this.settings || {};\n\n      if (attributes && attributes.settings) {\n         // convert from \"0\" => true/false\n         this.settings.grouping = JSON.parse(\n            attributes.settings.grouping || false\n         );\n         this.settings.hidePrefix = JSON.parse(\n            attributes.settings.hidePrefix || false\n         );\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.viewName = this.viewName;\n\n      result.joins = this.exportJoins();\n      result.fields = this.exportFields();\n      result.where = this.where; // .workspaceFilterConditions\n\n      result.settings = this.settings;\n\n      return result;\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    */\n   importFields(fieldSettings) {\n      var newFields = [];\n      (fieldSettings || []).forEach((fieldInfo) => {\n         if (fieldInfo == null) return;\n\n         // pull object by alias name\n         let object = this.objectByAlias(fieldInfo.alias);\n\n         // Pull object from .AB\n         if (!object && this.AB) {\n            object = this.AB.objectByID(fieldInfo.objectID);\n\n            // keep\n            if (object) {\n               this._objects = this._objects || {};\n               this._objects[fieldInfo.alias] = object;\n            }\n         }\n\n         if (!object) {\n            this.__missingObject = this.__missingObject ?? [];\n            this.__missingObject.push(fieldInfo);\n            return;\n         }\n\n         let field = object.fieldByID(fieldInfo.fieldID);\n         if (!field) {\n            this.__missingFields = this.__missingFields ?? [];\n            this.__missingFields.push({\n               objID: object.id,\n               fieldID: fieldInfo.fieldID,\n               fieldInfo,\n            });\n            return;\n         }\n\n         if (!this.canFilterField(field)) {\n            this.__cantFilter = this.__cantFilter ?? [];\n            this.__cantFilter.push({ field, fieldInfo });\n         }\n\n         // check duplicate\n         let isNew =\n            newFields.filter(\n               (f) =>\n                  f.alias == fieldInfo.alias && f.field.id == fieldInfo.fieldID\n            ).length < 1;\n\n         if (!isNew) {\n            this.__duplicateFields = this.__duplicateFields ?? [];\n            this.__duplicateFields.push({ fieldInfo });\n         }\n\n         // should be a field of base/join objects\n         if (field && this.canFilterField(field) && isNew) {\n            // add alias to field\n            // create new instance of this field:\n            var def = field.toObj();\n            let clonedField = new field.constructor(def, field.object);\n\n            clonedField.alias = fieldInfo.alias;\n\n            let alias = fieldInfo.alias;\n            if (Array.isArray(this.joins())) {\n               // NOTE: query v1\n               alias = field.object.name;\n            }\n\n            newFields.push({\n               alias: alias,\n               field: clonedField,\n            });\n         }\n      });\n      this._fields = newFields;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   exportFields() {\n      var currFields = [];\n      this._fields.forEach((fieldInfo) => {\n         currFields.push({\n            alias: fieldInfo.alias,\n            objectID: fieldInfo.field.object.id,\n            fieldID: fieldInfo.field.id,\n         });\n      });\n\n      // let's persist the faulty settings so a developer or builder can\n      // review and fix it by hand.\n      (this.__missingObject || []).forEach((f) => {\n         currFields.push(f);\n      });\n\n      (this.__cantFilter || []).forEach((f) => {\n         currFields.push(f.fieldInfo);\n      });\n\n      return currFields;\n   }\n\n   /**\n    * @method fields()\n    *\n    * Support the ABObject api by returning a list of fields relevant\n    * to this ABObjectQuery.\n    *\n    * @return {array}\n    */\n   fields(fn = () => true) {\n      if (!fn) fn = () => true;\n      return this._fields.map((f) => f.field).filter(fn);\n   }\n\n   ///\n   /// Joins & Objects\n   ///\n\n   /**\n    * @method joins()\n    *\n    * return an object of joins for this Query.\n    *\n    * @return {Object}\n    */\n   joins() {\n      return this._joins || {};\n   }\n\n   /**\n    * @method objects()\n    *\n    * return an array of all the relevant ABObjects for this Query.\n    *\n    * @return {array}\n    */\n   objects(fn = () => true) {\n      // FOR proper expected operation, this fn must only return object\n      // matches for which this ABQuery is managing objects:\n\n      return this.AB.objects((o) => this.objectIDs.indexOf(o.id) > -1).filter(\n         fn\n      );\n   }\n\n   /**\n    * @method objectAlias()\n    *\n    * return alias of of ABObjects.\n    *\n    * @return {string}\n    */\n   objectAlias(objectId) {\n      let result = null;\n\n      Object.keys(this.alias2Obj || {}).forEach((alias) => {\n         if (!result && this.alias2Obj[alias] == objectId) {\n            result = alias;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method objectBase\n    * return the origin object\n    *\n    * @return {ABObject}\n    */\n   objectBase() {\n      if (!this._joins.objectID) return null;\n\n      return this.AB.objectByID(this._joins.objectID) || null;\n   }\n\n   /**\n    * @method objectByAlias()\n    * return ABObject search by alias name\n    *\n    * @param {string} - alias name\n    * @return {ABClassObject}\n    */\n   objectByAlias(alias) {\n      var objID = this.alias2Obj[alias];\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method objectByID()\n    * return ABObject search by ID\n    * @param {string} objID\n    *        The requested {ABObject}.id of the object to return.\n    * @return {ABObject} | null\n    */\n   objectByID(objID) {\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method links()\n    *\n    * return an array of links for this Query.\n    *\n    * @return {array}\n    */\n   links(filter = () => true) {\n      return (this._links || []).filter(filter);\n   }\n\n   /**\n    * @method importJoins\n    * instantiate a set of joins from the given attributes.\n    * Our joins contain a set of ABObject URLs that should already be created in our Application.\n    * @param {Object} settings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importJoins(settings) {\n      // copy join settings\n      this._joins = this.AB.cloneDeep(settings);\n\n      var uniqueObjectIDs = {};\n      // { obj.id : obj.id }\n      // a hash of object.ids for all the relevant ABObjects necessary for this\n      // ABObjectQuery\n\n      var newLinks = [];\n      // {array} of link definitions\n      // build the operating values for this._links\n\n      let storeObject = (object, alias) => {\n         if (!object) return;\n\n         // var inThere = newObjects.filter(obj => obj.id == object.id && obj.alias == alias ).length > 0;\n         // if (!inThere) {\n         // newObjects[alias] = object;\n         // this.obj2Alias[object.id] = alias;\n         this.alias2Obj[alias] = object.id;\n         uniqueObjectIDs[object.id] = object.id;\n         // newObjects.push({\n         // \talias: alias,\n         // \tobject: object\n         // });\n         // }\n      };\n\n      let storeLinks = (links) => {\n         (links || []).forEach((link) => {\n            // var inThere = newLinks.filter(l => l.fieldID == link.fieldID).length > 0;\n            // if (!inThere) {\n            newLinks.push(link);\n            // }\n         });\n      };\n\n      this.__linkProblems = this.__linkProblems ?? [];\n\n      let processJoin = (baseObject, joins) => {\n         if (!baseObject) return;\n\n         (joins || []).forEach((link) => {\n            // Convert our saved settings:\n            //\t{\n            //\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\tobjectID: \"uuid\",\t\t\t\t\t// id of the connection object\n            //\t\tlinks: [\n            //\t\t\t{\n            //\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// uhe connection field of the object we are joining with.\n            //\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n            //\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n            //\t\t\t\tlinks: [\n            //\t\t\t\t\t...\n            //\t\t\t\t]\n            //\t\t\t}\n            //\t\t]\n            //\t},\n\n            var linkField = baseObject.fieldByID(link.fieldID);\n            if (!linkField) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linkField[${link.fieldID}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            // track our linked object\n            var linkObject = this.AB.objectByID(linkField.settings.linkObject);\n            if (!linkObject) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linked field -> linkObject[${linkField.settings.linkObject}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            storeObject(linkObject, link.alias);\n\n            storeLinks(link.links);\n\n            processJoin(linkObject, link.links);\n         });\n      };\n\n      // if (!this._joins.objectURL)\n      // \t// TODO: this is old query version\n      // \treturn;\n\n      // store the root object\n      var rootObject = this.objectBase();\n      if (!rootObject) {\n         // this._objects = newObjects;\n         this.__linkProblems.push({\n            message: \"could not resolve our base object\",\n            data: {\n               objectID: this._joins?.objectID,\n            },\n         });\n         return;\n      }\n\n      storeObject(rootObject, \"BASE_OBJECT\");\n\n      storeLinks(settings.links);\n\n      processJoin(rootObject, settings.links);\n\n      // this._objects = newObjects;\n      this._links = newLinks;\n      this.objectIDs = Object.keys(uniqueObjectIDs);\n   }\n\n   /**\n    * @method exportJoins\n    * save our list of objects into our format for persisting on the server\n    * @param {array} settings\n    */\n   exportJoins() {\n      return this.AB.cloneDeep(this._joins || {});\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelQuery(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @method canFilterObject\n    * evaluate the provided object to see if it can directly be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterObject(object) {\n      if (!object) return false;\n\n      // I can filter this object if it is one of the objects in my joins\n      return (\n         this.objects((obj) => {\n            return obj.id == object.id;\n         }).length > 0\n      );\n   }\n\n   /**\n    * @method canFilterField\n    * evaluate the provided field to see if it can be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterField(field) {\n      if (!field) return false;\n\n      // I can filter a field if it's object OR the object it links to can be filtered:\n      let object = field.object;\n      // Transition:\n      // let linkedObject = this.objects(\n      //    (obj) => obj.id == field.settings.linkObject\n      // )[0];\n      var linkedObject = field.datasourceLink;\n\n      return this.canFilterObject(object) || this.canFilterObject(linkedObject);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.AB.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\n         \"ABQueryCore.urlPointer(): Depreciated: Where is this being called?\"\n      );\n      return this.application.urlQuery(acrossApp) + this.id;\n   }\n\n   /**\n    * @method isGroup\n    *\n    * @return {boolean}\n    */\n   get isGroup() {\n      return this.settings.grouping || false;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return true;\n   }\n\n   /**\n    * @method isDisabled()\n    * check this contains removed objects or fields\n    *\n    * @return {boolean}\n    */\n   isDisabled() {\n      return this.disabled || false;\n   }\n\n   get workspaceFilterConditions() {\n      let filterConditions = super.workspaceFilterConditions;\n      if (\n         filterConditions == null ||\n         filterConditions.rules == null ||\n         !filterConditions.rules.length\n      ) {\n         filterConditions = this.where;\n      }\n\n      return filterConditions;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nconst ABProcessTaskSubProcess = require(\"../platform/process/tasks/ABProcessTaskSubProcess\");\n\nmodule.exports = class ABProcessCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      this.elements().forEach((e) => {\n         e.onProcessReady();\n      });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process\";\n      this.xmlDefinition = attributes.xmlDefinition || null;\n\n      // this.json = attributes.json || null;\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         var ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connections || {};\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"xmlDefinition\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      data.elementIDs = [];\n      for (var e in this._elements) {\n         // NOTE: when a task is initially created, it doesn't have an .id\n         // so we need to reference it by it's .diagramID\n         data.elementIDs.push(\n            this._elements[e].id ?? this._elements[e].diagramID\n         );\n      }\n\n      data.connections = this._connections;\n\n      // data.participantIDs = [];\n      // for (var p in this._participants) {\n      //     data.participantIDs.push(this._participants[p].id);\n      // }\n\n      return data;\n   }\n\n   //\n   // XML Model\n   //\n\n   /**\n    * modelDefinition()\n    * return the current xml definition for this process\n    * @return {string}\n    */\n   modelDefinition() {\n      return this.xmlDefinition;\n   }\n\n   /**\n    * modelNew()\n    * initialze our xml definition to a new state.\n    * @return {string}\n    */\n   modelNew() {\n      this.xmlDefinition = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\" id=\"process-def-${this.id}\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\n  </bpmn2:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn2:definitions>`;\n\n      //// TODO: create a default Start Task here??\n   }\n\n   /**\n    * modelUpdate()\n    * update our xml definition from the provided description.\n    * @param {string} xml  bpmn2 xml definition from our modeler.\n    * @return {string}\n    */\n   modelUpdate(xml) {\n      this.xmlDefinition = xml;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn = () => true) {\n      var allConnections = Object.keys(this._connections).map((e) => {\n         return this._connections[e];\n      });\n\n      // If parent, merge connections\n      if (this.process && this.key === \"SubProcess\") {\n         allConnections = allConnections.concat(this.process.connections());\n      }\n\n      return allConnections.filter(fn);\n   }\n\n   /**\n    * connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      return this.connections((t) => {\n         return t.id == dID;\n      })[0];\n   }\n\n   /**\n    * connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      return this.connections((c) => {\n         return c.to == dID;\n      });\n   }\n\n   /**\n    * connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      return this.connections((c) => {\n         return c.from == dID;\n      });\n   }\n\n   /**\n    * connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      delete this._connections[element.id];\n   }\n\n   /**\n    * connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      var bo = element.businessObject;\n      var from = null;\n      if (bo.sourceRef) {\n         from = bo.sourceRef.id;\n      }\n\n      var to = null;\n      if (bo.targetRef) {\n         to = bo.targetRef.id;\n      }\n\n      var connection = {\n         id: element.id,\n         type: element.type,\n         from: from,\n         to: to,\n      };\n      return connection;\n   }\n\n   /**\n    * connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      var simpleConn = this.connectionSimplyElement(element);\n      if (simpleConn.from && simpleConn.to && element.parent) {\n         this._connections[simpleConn.id] = simpleConn;\n      } else {\n         // this connection is no longer connecting anything thing.\n         // it is being removed.\n         this.connectionRemove(element);\n      }\n   }\n\n   /**\n    * elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      var allElements = Object.keys(this._elements).map((e) => {\n         return this._elements[e];\n      });\n      return allElements.filter(fn);\n   }\n\n   /**\n    * elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      this._elements[element.id || element.diagramID] = element;\n   }\n\n   /**\n    * elementByID()\n    * return the {ABProcessElement} that has the given .id\n    * @param {string} id\n    * @return {ABProcess[OBJ]}\n    */\n   elementByID(id) {\n      return this._elements[id] ?? null;\n   }\n\n   /**\n    * elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      return this.elements((t) => {\n         return t.diagramID == dID;\n      })[0];\n   }\n\n   /**\n    * elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      delete this._elements[def.id || def.diagramID];\n   }\n\n   /**\n    * isTriggeredBy()\n    * scan our tasks and see if we have a \"trigger\" task that responds to\n    * the provided key.\n    * @param {string} key the trigger key\n    * @return {bool}\n    */\n   isTriggeredBy(key) {\n      return this.taskForTriggerKey(key) != null;\n   }\n\n   /**\n    * connectionNextTask()\n    * return the ABProcessElement(s) that are after the given Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionNextTask(currElement) {\n      var elements = [];\n      var nextConnections = this.connections((c) => {\n         return c.from == currElement.diagramID;\n      });\n      nextConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.to;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      var elements = [];\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      prevConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.from;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      // var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      // return values.length > 0\n      //    ? values.length > 1\n      //       ? values\n      //       : values[0]\n      //    : null;\n\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      return values.length > 0\n         ? values.length > 1\n            ? values\n            : values[0]\n         : null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataFields\",\n         null,\n         this\n      );\n      // Include data from the main process as well\n      if (this.key === \"SubProcess\") {\n         const parentFields = this.process.processDataFields(this);\n         if (parentFields) {\n            fields.push(...parentFields);\n         }\n      }\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * allPreviousConnections()\n    * walk through the current graph and return all the previous connections\n    * leading up to the given {ProcessElement}\n    * @param {Connection} conn\n    * @param {hash} hashConn\n    *        { connection.id : connection }\n    * @return {array}\n    */\n   allPreviousConnectionsForConnection(conn, hashConn) {\n      var prevConnections = this.connections((c) => {\n         return c.to == conn.from;\n      });\n\n      prevConnections.forEach((c) => {\n         if (!hashConn[c.id]) {\n            hashConn[c.id] = c;\n            this.allPreviousConnectionsForConnection(c, hashConn);\n         }\n      });\n   }\n   allPreviousConnectionsForElement(currElement) {\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      var hashConn = {\n         /* connection.id : connection */\n      };\n      // hashConn will contains the final collection of connections.\n\n      prevConnections.forEach((c) => {\n         hashConn[c.id] = c;\n         this.allPreviousConnectionsForConnection(c, hashConn);\n      });\n\n      // TODO: detect circle backs and remove connections that\n      // resolve back to currElement\n\n      // convert our hash into an array\n      return Object.keys(hashConn).map((k) => hashConn[k]);\n   }\n\n   allPreviousTasks(currElement) {\n      var prevTasks = {}; /* task.id : task */\n      var allPreviousConnections =\n         this.allPreviousConnectionsForElement(currElement);\n      var task;\n      allPreviousConnections.forEach((conn) => {\n         // each conn has a .to and a .from => grab both tasks\n         task = this.elementForDiagramID(conn.to);\n         if (task) prevTasks[task.id] = task;\n\n         task = this.elementForDiagramID(conn.from);\n         if (task) prevTasks[task.id] = task;\n      });\n\n      var tasksToAsk = Object.keys(prevTasks)\n         .map((k) => prevTasks[k])\n         .filter((t) => t.id != currElement.id);\n\n      return tasksToAsk;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataObjects(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataObjects\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * taskForTriggerKey()\n    * return one or more tasks that respond to the given trigger key\n    * @param {string} key a trigger key\n    * @return {[ABProcessTask,...]}\n    */\n   taskForTriggerKey(key) {\n      var trigger = this.elements((t) => {\n         return t.triggerKey == key;\n      })[0];\n      if (trigger) {\n         return trigger;\n      } else {\n         return null;\n      }\n   }\n\n   //\n   // Participants\n   //\n\n   // /**\n   //  * participants()\n   //  * return an array of participants that match the given filter (or all tasks\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided participants\n   //  *                should be returned.\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participants(fn) {\n   //     if (!fn)\n   //         fn = () => {\n   //             return true;\n   //         };\n   //     var all = Object.keys(this._participants).map((p) => {\n   //         return this._participants[p];\n   //     });\n   //     return all.filter(fn);\n   // }\n\n   // /**\n   //  * participantsForDiagramID()\n   //  * return the participant(s) that are tied to the given xml diagram ID.\n   //  * @param {string} dID the diagram ID\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participantsForDiagramID(dID) {\n   //     return this.participants((p) => {\n   //         return p.diagramID == dID;\n   //     });\n   // }\n};\n\nvar queryPreviousTasks = (\n   list,\n   method,\n   param,\n   process,\n   responses,\n   processedIDs\n) => {\n   // recursive fn() to step through our graph and compile\n   // results.\n   if (typeof responses == \"undefined\") {\n      responses = [];\n   }\n   if (typeof processedIDs == \"undefined\") {\n      processedIDs = [];\n   }\n   if (list.length == 0) {\n      return responses;\n   } else {\n      // get next task\n      const task = list.shift();\n\n      // if we haven't already done task:\n      if (processedIDs.indexOf(task.diagramID) == -1) {\n         // mark this task as having been processed\n         processedIDs.push(task.diagramID);\n\n         let value = null;\n\n         // get any field's it provides\n         if (!(task instanceof ABProcessTaskSubProcess))\n            value = task[method].apply(task, param);\n\n         // value = task[method].apply(task, param);\n\n         if (value === null) value = [];\n         responses = _concat(responses, value);\n\n         // add any previous tasks to our list\n         list = _concat(list, process.connectionPreviousTask(task));\n      }\n\n      // process next Task\n      return queryPreviousTasks(\n         list,\n         method,\n         param,\n         process,\n         responses,\n         processedIDs\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABStepCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"text\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"New Step\";\n      this.type = attributes.type || \"step\";\n      this.text = attributes.text || \"\";\n      this.settings = attributes.settings || {};\n      this.settings.event = attributes?.settings?.event || \"click\";\n      this.settings.el = attributes?.settings?.el || \"\";\n      // this.xmlDefinition = attributes.xmlDefinition || null;\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // debugger;\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"settings\", \"type\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   // /**\n   //  * steps()\n   //  * return an array of steps that match the given filter (or all steps\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided element\n   //  *                should be returned.\n   //  * @return {[ABStep]}\n   //  */\n   // steps(fn = () => true) {\n   //    var allSteps = Object.keys(this._steps).map((e) => {\n   //       return this._steps[e];\n   //    });\n   //    return allSteps.filter(fn);\n   // }\n\n   // /**\n   //  * stepAdd()\n   //  * insert a step to be added to this hint.\n   //  * @param {ABStep} element\n   //  *        the full instance of an ABStep to track.\n   //  */\n   // stepAdd(step) {\n   //    this._steps[step.id] = step;\n   // }\n\n   // /**\n   //  * stepByID()\n   //  * return the {ABStep} that has the given .id\n   //  * @param {string} id\n   //  * @return {ABStep[OBJ]}\n   //  */\n   // stepByID(id) {\n   //    return this._step[id] ?? null;\n   // }\n\n   // /**\n   //  * stepRemove()\n   //  * remove a step from being displayed by this hint.\n   //  * @param {obj|ABStep} def\n   //  *        a definition of, or full Object instance of the ABStep\n   //  *        to remove.\n   //  */\n   // stepRemove(def) {\n   //    delete this._steps[def.id];\n   // }\n};\n","/*\n * ABViewManager\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\nvar AllViews = [\n   require(\"../platform/views/ABView\"),\n   require(\"../platform/views/ABViewCarousel\"),\n   require(\"../platform/views/ABViewChart\"),\n   require(\"../platform/views/ABViewChartArea\"),\n   require(\"../platform/views/ABViewChartBar\"),\n   require(\"../platform/views/ABViewChartLine\"),\n   require(\"../platform/views/ABViewChartPie\"),\n   require(\"../platform/views/ABViewComment\"),\n   require(\"../platform/views/ABViewConditionalContainer\"),\n   require(\"../platform/views/ABViewConnectDataFilter\"),\n   require(\"../platform/views/ABViewContainer\"),\n   require(\"../platform/views/ABViewCSVExporter\"),\n   require(\"../platform/views/ABViewCSVImporter\"),\n   require(\"../platform/views/ABViewDataFilter\"),\n   require(\"../platform/views/ABViewDataSelect\"),\n   require(\"../platform/views/ABViewDataview\"),\n   require(\"../platform/views/ABViewDocxBuilder\"),\n   require(\"../platform/views/ABViewGrid\"),\n   require(\"../platform/views/ABViewImage\"),\n   require(\"../platform/views/ABViewLabel\"),\n   require(\"../platform/views/ABViewLayout\"),\n   require(\"../platform/views/ABViewList\"),\n   require(\"../platform/views/ABViewMenu\"),\n   require(\"../platform/views/ABViewPage\"),\n   require(\"../platform/views/ABViewPDFImporter\"),\n   require(\"../platform/views/ABViewPivot\"),\n   require(\"../platform/views/ABViewTab\"),\n   require(\"../platform/views/ABViewText\"),\n\n   //\n   // Special Editors\n   //\n   require(\"../platform/views/ABViewGantt\"),\n   require(\"../platform/views/ABViewKanban\"),\n   require(\"../platform/views/ABViewReportsManager\"),\n   require(\"../platform/views/ABViewScheduler\"),\n\n   //\n   // Detail Components\n   //\n   require(\"../platform/views/ABViewDetail\"),\n   require(\"../platform/views/ABViewDetailCheckbox\"),\n   require(\"../platform/views/ABViewDetailConnect\"),\n   require(\"../platform/views/ABViewDetailCustom\"),\n   require(\"../platform/views/ABViewDetailImage\"),\n   // require(\"../platform/views/ABViewDetailSelectivity\"),\n   require(\"../platform/views/ABViewDetailText\"),\n   require(\"../platform/views/ABViewDetailTree\"),\n\n   //\n   // Form Components\n   //\n   require(\"../platform/views/ABViewForm\"),\n   require(\"../platform/views/ABViewFormButton\"),\n   require(\"../platform/views/ABViewFormCheckbox\"),\n   require(\"../platform/views/ABViewFormConnect\"),\n   require(\"../platform/views/ABViewFormCustom\"),\n   require(\"../platform/views/ABViewFormDatepicker\"),\n   require(\"../platform/views/ABViewFormJson\"),\n   require(\"../platform/views/ABViewFormNumber\"),\n   require(\"../platform/views/ABViewFormReadonly\"),\n   require(\"../platform/views/ABViewFormSelectMultiple\"),\n   require(\"../platform/views/ABViewFormSelectSingle\"),\n   require(\"../platform/views/ABViewFormTextbox\"),\n   require(\"../platform/views/ABViewFormTree\"),\n];\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\nAllViews.forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            if (!isPlugin(values.key)) {\n               console.error(\n                  \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n               );\n            }\n            return new Views[\"view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n\n   static addViewClass(View) {\n      Views[View.common().key] = View;\n   }\n};\n\n/**\n * Check if the key starts with plugin_\n */\nfunction isPlugin(key) {\n   return key.split(\"_\")[0] === \"plugin\";\n}\n","/*\n * ABViewManagerMobile\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\n[\n   require(\"../platform/mobile/ABMobilePage\"),\n   require(\"../platform/mobile/ABMobileView\"),\n   require(\"../platform/mobile/ABMobileViewCustom\"),\n   require(\"../platform/mobile/ABMobileViewForm\"),\n   require(\"../platform/mobile/ABMobileViewFormButton\"),\n   require(\"../platform/mobile/ABMobileViewFormCheckbox\"),\n   require(\"../platform/mobile/ABMobileViewFormConnect\"),\n   require(\"../platform/mobile/ABMobileViewFormDate\"),\n   require(\"../platform/mobile/ABMobileViewFormDatetime\"),\n   require(\"../platform/mobile/ABMobileViewFormEmail\"),\n   require(\"../platform/mobile/ABMobileViewFormFile\"),\n   require(\"../platform/mobile/ABMobileViewFormFormula\"),\n   require(\"../platform/mobile/ABMobileViewFormImage\"),\n   require(\"../platform/mobile/ABMobileViewFormNumber\"),\n   require(\"../platform/mobile/ABMobileViewFormReadonly\"),\n   require(\"../platform/mobile/ABMobileViewFormSelectMultiple\"),\n   require(\"../platform/mobile/ABMobileViewFormSelectSingle\"),\n   require(\"../platform/mobile/ABMobileViewFormTextbox\"),\n   require(\"../platform/mobile/ABMobileViewLabel\"),\n   require(\"../platform/mobile/ABMobileViewList\"),\n   require(\"../platform/mobile/ABMobileViewTimeline\"),\n].forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"mobile-view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   const columnName = field.columnName;\n\n   let value = null;\n\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName];\n   } else {\n      value = rowData[columnName];\n   }\n\n   // pull relation data\n   if (value == null && field.relationName) {\n      const relationName = field.relationName();\n      const pureRelationName = relationName.split(\".\")[1]; // support [BASE_OBJECT.columnName] field name of ABQuery\n      value = rowData[relationName] || rowData[pureRelationName];\n   }\n\n   if (value != null && !isNaN(value)) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (const k in rowData) {\n      const key = k.split(\".\")[1];\n      if (key && key == field.id) {\n         value = rowData[k];\n      }\n   }\n\n   if (\n      (value == null || (typeof value == \"number\" && isNaN(value))) &&\n      field.format\n   )\n      value = field.format(rowData);\n\n   return value;\n}\n\nfunction getConnectFieldValue(rowData, field) {\n   let connectedVal = \"\";\n\n   const extractVal = (itemData) => {\n      let val;\n      const relationName = field.relationName();\n      if (itemData[relationName]) {\n         val =\n            (field.indexField\n               ? itemData[relationName][field.indexField.columnName]\n               : null) ?? // custom index\n            (field.indexField2\n               ? itemData[relationName][field.indexField2.columnName]\n               : null) ?? // custom index 2\n            itemData[relationName].id ??\n            itemData[relationName];\n      } else {\n         let fieldVal = getFieldVal(itemData, field);\n         if (fieldVal != null) {\n            val = fieldVal;\n         }\n      }\n      return val;\n   };\n\n   if (Array.isArray(rowData)) {\n      connectedVal = rowData.map((data) => extractVal(data));\n   } else if (rowData) {\n      connectedVal = extractVal(rowData);\n   }\n   return connectedVal;\n}\n\nmodule.exports = class FilterComplexCore extends ABComponent {\n   constructor(idBase, AB) {\n      idBase = idBase || \"ab_filter_complex\";\n\n      if (typeof AB === \"undefined\") {\n         console.error(\"FilterComplexCore(): being called without an AB!\");\n      }\n\n      super(null, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.condition = {};\n      // const batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      const _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options = {}) {\n      this._settings = options;\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      // If conditions but no data return false\n      if (condition?.rules?.length && rowData == null) return false;\n\n      // If no conditions, then return true\n      if (!condition?.rules?.length || rowData == null) return true;\n\n      let result = condition.glue === \"and\" ? true : false;\n\n      condition.rules.forEach((filter) => {\n         // Nested filters\n         if (filter?.rules?.length) {\n            if (condition.glue === \"or\")\n               result = result || this.isValid(rowData, filter);\n            else result = result && this.isValid(rowData, filter);\n            return;\n         }\n         // Skip incomplete filter condition\n         else if (!filter || !filter.key || !filter.rule) return;\n\n         const fieldInfo = (this._Fields || []).filter(\n            (f) => f.id == filter.key || f.columnName == filter.key\n         )[0];\n\n         if (!fieldInfo) return;\n\n         let condResult = null;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         let ruleFieldType = fieldInfo.key;\n\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         let value = null;\n\n         if (fieldInfo.relationName) {\n            value = getConnectFieldValue(rowData, fieldInfo);\n         } else {\n            value = getFieldVal(rowData, fieldInfo);\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               if (value == null) value = \"\";\n\n               condResult = this.textValid(value, filter.rule, filter.value);\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = this.dateValid(value, filter.rule, filter.value);\n               break;\n            case \"number\":\n            case \"calculate\":\n            case \"formula\":\n               condResult = this.numberValid(value, filter.rule, filter.value);\n               break;\n            case \"list\":\n               condResult = this.listValid(value, filter.rule, filter.value);\n               break;\n            case \"boolean\":\n               condResult = this.booleanValid(value, filter.rule, filter.value);\n               break;\n            case \"user\":\n               condResult = this.userValid(value, filter.rule, filter.value);\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = this.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = this.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (condition.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   textValid(value, rule, compareValue) {\n      let result = false;\n\n      value = value.trim().toLowerCase();\n      value = this._logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n      compareValue = compareValue.trim().toLowerCase().replace(/  +/g, \" \");\n\n      // support \"john smith\" => \"john\" OR/AND \"smith\"\n      const compareArray = compareValue.split(\" \");\n\n      switch (rule) {\n         case \"contains\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value.indexOf(val) > -1;\n            });\n            break;\n         case \"not_contains\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value.indexOf(val) < 0;\n            });\n            break;\n         case \"equals\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value == val;\n            });\n            break;\n         case \"not_equal\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value != val;\n            });\n            break;\n         case \"is_empty\":\n            result = value == \"\" || value == null;\n            break;\n         case \"is_not_empty\":\n            result = value != \"\" && value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   dateValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!(value instanceof Date)) value = new Date(value);\n\n      if (!(compareValue instanceof Date))\n         compareValue = new Date(compareValue);\n      switch (rule) {\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         case \"is_current_date\":\n            result =\n               value.setHours(0, 0, 0, 0) == compareValue.setHours(0, 0, 0, 0);\n            break;\n         case \"is_empty\":\n            result = !value;\n            break;\n         case \"is_not_empty\":\n            result = !!value;\n            break;\n         case \"is_null\":\n            result = value == null;\n            break;\n         case \"is_not_null\":\n            result = value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n      return result;\n   }\n\n   numberValid(value, rule, compareValue) {\n      let result = false;\n\n      value = Number(value);\n      compareValue = Number(compareValue);\n\n      switch (rule) {\n         case \"equal\":\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         case \"not_equal\":\n            result = value != compareValue;\n            break;\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   listValid(value, rule, compareValue) {\n      let result = false;\n\n      // compareValue = compareValue.toLowerCase();\n\n      if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n      switch (rule) {\n         case \"equals\":\n            if (value) result = compareValue.indexOf(value) > -1;\n            break;\n         case \"not_equal\":\n            if (value) result = compareValue.indexOf(value) < 0;\n            else result = true;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   booleanValid(value, rule, compareValue) {\n      let result = false;\n\n      switch (rule) {\n         case \"checked\":\n            result = value == true || value > 0 || value == \"true\";\n            break;\n         case \"unchecked\":\n            result =\n               value == false ||\n               value <= 0 ||\n               value == \"false\" ||\n               value == null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   userValid(value, rule, compareValue) {\n      if (!value || !value?.length) return false;\n      let result = false;\n\n      if (!Array.isArray(value)) value = [value];\n\n      /* eslint-disable no-fallthrough */\n      switch (rule) {\n         case \"is_current_user\":\n            result =\n               value.filter((v) => (v?.username || v) == this.Account.username)\n                  .length > 0;\n            break;\n         case \"is_not_current_user\":\n            result =\n               value.filter((v) => (v?.username || v) != this.Account.username)\n                  .length > 0;\n            break;\n         case \"contain_current_user\":\n            compareValue = this.Account.username;\n         // break;  <-- NO BREAK HERE: fall through to \"equals\"\n\n         case \"equals\":\n            result =\n               value.filter((v) => (v?.username || v) == compareValue).length >\n               0;\n            break;\n         case \"not_contain_current_user\":\n            compareValue = this.Account.username;\n         // break;  <-- NO BREAK HERE: fall through to \"not_equals\"\n\n         case \"not_equal\":\n            result =\n               value.filter((v) => (v?.username || v) == compareValue).length <\n               1;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n      /* eslint-enable no-fallthrough */\n\n      return result;\n   }\n\n   queryFieldValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      // queryId:fieldId\n      const queryId = compareValue.split(\":\")[0],\n         fieldId = compareValue.split(\":\")[1];\n\n      // if no query\n      const query = this.AB.queries((q) => q.id == queryId)[0];\n      if (!query) return result;\n\n      // if no field\n      const field = query.fields((f) => f.id == fieldId)[0];\n      if (!field) return result;\n\n      let qIdBase = \"{idBase}-query-field-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFieldFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFieldFilter.Account = this.Account;\n      inQueryFieldFilter.fieldsLoad(query.fields());\n      inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query_field\":\n            result = inQueryFieldFilter.isValid(rowData);\n            break;\n         case \"not_in_query_field\":\n            result = !inQueryFieldFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   inQueryValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue || !this.AB) return result;\n\n      // if no query\n      let query = this.AB.queries((q) => q.id == compareValue)[0];\n      if (!query) return result;\n\n      let qIdBase = \"{idBase}-query-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFilter.Account = this.Account;\n      inQueryFilter.fieldsLoad(query.fields());\n      inQueryFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query\":\n            result = inQueryFilter.isValid(rowData);\n            break;\n         case \"not_in_query\":\n            result = !inQueryFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   dataCollectionValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      let dc = this.AB.datacollections((d) => d.id == compareValue)[0];\n\n      switch (rule) {\n         case \"in_data_collection\":\n            if (!dc) return false;\n\n            result = dc.getData((d) => d.id == value.id).length > 0;\n            break;\n         case \"not_in_data_collection\":\n            if (!dc) return true;\n\n            result = dc.getData((d) => d.id == value.id).length < 1;\n            break;\n      }\n\n      return result;\n   }\n\n   connectFieldValid(rowData, field, rule, compareValue) {\n      let relationName = field.relationName();\n\n      let connectedVal = \"\";\n\n      let linkType = field.linkType();\n\n      if (rowData) {\n         if (rowData[relationName]) {\n            if (linkType == \"many\") {\n               // lets get an array of connected ids => stringified()\n               connectedVal = JSON.stringify(\n                  getConnectFieldValue(rowData, field).map((i) => i.id || i)\n               );\n            } else {\n               // connectedVal = (\n               //    (field.indexField\n               //       ? rowData[relationName][field.indexField.columnName]\n               //       : null) ?? // custom index\n               //    (field.indexField2\n               //       ? rowData[relationName][field.indexField2.columnName]\n               //       : null) ?? // custom index 2\n               //    rowData[relationName].id ??\n               //    rowData[relationName]\n               // )\n               connectedVal = getConnectFieldValue(rowData, field)\n                  .toString()\n                  .toLowerCase();\n            }\n         } else {\n            let fieldVal = getFieldVal(rowData, field);\n            if (fieldVal != null) {\n               connectedVal = fieldVal;\n            }\n         }\n      }\n\n      // If value will be the connected object, then pull value (string)\n      if (typeof connectedVal == \"object\") {\n         connectedVal =\n            (field.indexField\n               ? connectedVal[field.indexField.columnName]\n               : null) ??\n            (field.indexField2\n               ? connectedVal[field.indexField2.columnName]\n               : null) ??\n            connectedVal[field.columnName] ??\n            connectedVal.id ??\n            connectedVal;\n      }\n\n      // Compare value isn't always a string?\n      // https://appdev-designs.sentry.io/issues/5056850389/\n      let compareValueLowercase =\n         typeof compareValue === \"string\"\n            ? compareValue.toLowerCase?.()\n            : compareValue;\n\n      // NOTE: if linkType == many, and rule is equals/not_equal,\n      // these will be interpreted as \"contains/not_contains\"\n      let ruleSafe = rule;\n      if (linkType == \"many\") {\n         switch (rule) {\n            case \"equals\":\n               ruleSafe = \"contains\";\n               break;\n            case \"not_equal\":\n               ruleSafe = \"not_contains\";\n               break;\n         }\n      }\n\n      switch (ruleSafe) {\n         case \"contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) > -1;\n         case \"not_contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) == -1;\n         case \"equals\":\n            return connectedVal == compareValueLowercase;\n         case \"not_equal\":\n            return connectedVal != compareValueLowercase;\n         case \"in_query\":\n         case \"not_in_query\":\n            return this.inQueryValid(rowData[relationName], rule, compareValue);\n         case \"is_current_user\":\n         case \"is_not_current_user\":\n         case \"contain_current_user\":\n         case \"not_contain_current_user\":\n            return this.userValid(connectedVal, rule, compareValue);\n         case \"is_empty\":\n            return (\n               rowData[relationName] == null ||\n               rowData[relationName].length < 1 ||\n               rowData[relationName] == \"\"\n            );\n         case \"is_not_empty\":\n            return (\n               rowData[relationName] != null &&\n               ((Array.isArray(rowData[relationName]) &&\n                  rowData[relationName].length > 0) ||\n                  rowData[relationName] != \"\")\n            );\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            return this.dataCollectionValid(connectedVal, rule, compareValue);\n      }\n   }\n\n   thisObjectValid(rowData, rule, compareValue) {\n      let result = false;\n      let query = null;\n      let listThisObjects = null;\n      let alias = null;\n      let newRowData = null;\n\n      switch (rule) {\n         // if in_query condition\n         case \"in_query\":\n         case \"not_in_query\":\n            if (!this._Object) return result;\n\n            // if > 1 copy of this object in query ==> Error!\n            query = this.AB.queries((q) => q.id == compareValue)[0];\n\n            if (!query) return result;\n\n            listThisObjects = query.objects((o) => {\n               return o.id == this._Object.id;\n            });\n\n            if (listThisObjects.length > 1) {\n               // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n               // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n               // this object as part of the query.\n\n               console.error(\n                  \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n               );\n\n               return true;\n            }\n\n            // get this object's alias from the query\n            alias = query.objectAlias(this._Object.id);\n\n            // make sure all my columns in rowData are prefixed by \"alias\".columnName\n            newRowData = {};\n\n            Object.keys(rowData).forEach((key) => {\n               newRowData[`${alias}.${key}`] = rowData[key];\n            });\n\n            // then pass this on to the _logic.queryValid();\n            return this.inQueryValid(newRowData, rule, compareValue);\n\n         // if in_datacollection condition\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            // send rowData, null to datacollectionValid()\n            return this.dataCollectionValid(rowData, rule, compareValue);\n      }\n   }\n\n   processFieldsLoad(processFields = []) {\n      if (processFields && !Array.isArray(processFields)) {\n         processFields = [processFields];\n      }\n      this._ProcessFields = processFields;\n\n      this.uiInit();\n   }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param array {ABField}\n    * @param object {ABObject} [optional]\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter(\n         (f) => f && f.fieldIsFilterable && f.fieldIsFilterable()\n      );\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         // insert our uuid in addition to the rest of our fields\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n            key: \"uuid\",\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         // NOTE: Could not reference ABObjectQuery because recursive looping reference\n         // if (object instanceof ABObjectQuery) {\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   fieldsToQB() {\n      /*\n      let mapTypes = {\n         LongText: \"string\",\n         email: \"string\",\n         datetime: \"date\",\n         connectField: \"connectObject\"\n      };\n\n      const fields = this._Fields.map((f) => {\n         // Label\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         // Type\n         let type = f.key || f.type;\n         if (mapTypes[type]) type = mapTypes[type];\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return { id: f.columnName, value: label, type: type };\n      });\n      return fields;\n      */\n\n      let fields = (this._Fields || []).map((f) => {\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         let type = \"text\"; // \"text\", \"number\", \"date\"\n         let conditions = [];\n         let processFieldKeys = [];\n         let hasQueryField = true;\n\n         if (!this._settings.isProcessParticipant)\n            switch (f.key) {\n               case \"boolean\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersBoolean(f)\n                  );\n                  processFieldKeys = [\"boolean\"];\n\n                  break;\n\n               case \"connectObject\":\n                  conditions = this.fieldsAddFiltersConnectObject(f);\n\n                  // Add filter options to Custom index\n                  if (\n                     // 1:M\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"many\") ||\n                     // 1:1 isSource = true\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"one\" &&\n                        f.settings.isSource)\n                  ) {\n                     const stringResults = this.fieldsAddFiltersString(\n                        f\n                     ).filter(\n                        (opt) =>\n                           f.settings.isCustomFK ||\n                           // If this connect field does not use custom FK, then allow just `is empty` and `is not empty` filter options\n                           opt.id == \"is_empty\" ||\n                           opt.id == \"is_not_empty\"\n                     );\n                     conditions = stringResults.concat(conditions);\n\n                     // By Query Field\n                     conditions = conditions.concat(\n                        this.fieldsAddFiltersQuery(f, true)\n                     );\n                  }\n\n                  hasQueryField = false;\n                  processFieldKeys = [\"connectObject\"];\n\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  type = \"date\";\n                  conditions = conditions.concat(this.fieldsAddFiltersDate(f));\n                  processFieldKeys = [\"date\", \"datetime\"];\n\n                  break;\n\n               case \"calculate\":\n               case \"formula\":\n               case \"number\":\n                  type = \"number\";\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersNumber(f)\n                  );\n                  processFieldKeys = [\"calculate\", \"formula\", \"number\"];\n\n                  break;\n\n               case \"string\":\n               case \"LongText\":\n               case \"email\":\n               case \"AutoIndex\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersString(f)\n                  );\n                  processFieldKeys = [\n                     \"string\",\n                     \"LongText\",\n                     \"email\",\n                     \"AutoIndex\",\n                  ];\n\n                  break;\n\n               case \"list\":\n                  conditions = conditions.concat(this.fieldsAddFiltersList(f));\n\n                  break;\n\n               case \"user\":\n                  conditions = conditions.concat(this.fieldsAddFiltersUser(f));\n                  processFieldKeys = [\"user\"];\n\n                  break;\n\n               case \"uuid\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersThisObject(f)\n                  );\n                  hasQueryField = false;\n\n                  break;\n               default:\n                  break;\n            }\n         else\n            switch (f.key) {\n               case \"connectObject\":\n               case \"uuid\":\n                  hasQueryField = false;\n\n                  break;\n            }\n\n         conditions = conditions.concat(\n            this.fieldsAddFiltersQuery(f, hasQueryField)\n         );\n\n         if (this._settings.isRecordRule) {\n            conditions = conditions.concat(this.fieldsAddFiltersRecordRule(f));\n         }\n\n         let isProcessField =\n            (this._ProcessFields || []).filter((processField) => {\n               if (!processField) return false;\n\n               if (processField.field) {\n                  return processFieldKeys.includes(processField.field.key);\n               } else if (processField.key) {\n                  // uuid\n                  let processFieldId = processField.key.split(\".\").pop();\n                  return processFieldId == f.id || processFieldId == f.key;\n               }\n            }).length > 0;\n\n         if (isProcessField) {\n            conditions = conditions.concat(this.fieldsAddFiltersContext(f));\n         }\n\n         conditions = conditions.concat(this.fieldsAddFiltersCustom(f));\n\n         // let type = f.id; // the default unique identifier for our filter types\n         // if (f.id == \"this_object\") {\n         //    // if this happens to be our special \"this_object\" field, then our\n         //    // type needs to be the \"uuid\" type in the definition:\n         //    type = f.type;\n         // }\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return {\n            id: f.id,\n            value: label,\n            type: type,\n            conditions: conditions,\n            // format: () => {},\n         };\n      });\n\n      // !!! Process Fields of ABProcess\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L636\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L564\n      // (this._ProcessFields || [])\n      //    // if there is no .field, it is probably an embedded special field\n      //    .filter((pField) => pField.field == null)\n      //    .forEach((pField) => {\n      //       // like: .uuid\n      //       let key = pField.key.split(\".\").pop();\n      //       if (key == \"uuid\" && this._Object) {\n      //          fields.unshift({\n      //             id: pField.key,\n      //             value: this._Object.label,\n      //             type: \"text\",\n      //             conditions: this.fieldsAddFiltersContext(),\n      //          });\n      //       }\n      //    });\n\n      return fields;\n   }\n\n   fieldsAddFiltersDate(field) {\n      let dateConditions = {\n         less: this.labels.component.beforeCondition,\n         greater: this.labels.component.afterCondition,\n         less_or_equal: this.labels.component.onOrBeforeCondition,\n         greater_or_equal: this.labels.component.onOrAfterCondition,\n         is_current_date: this.labels.component.isCurrentDateCondition,\n         less_current: this.labels.component.beforeCurrentCondition,\n         greater_current: this.labels.component.afterCurrentCondition,\n         less_or_equal_current:\n            this.labels.component.onOrBeforeCurrentCondition,\n         greater_or_equal_current:\n            this.labels.component.onOrAfterCurrentCondition,\n         last_days: this.labels.component.onLastDaysCondition,\n         next_days: this.labels.component.onNextDaysCondition,\n         is_empty: this.labels.component.isEmpty,\n         is_not_empty: this.labels.component.isNotEmpty,\n      };\n\n      let result = [];\n\n      for (let condKey in dateConditions)\n         switch (condKey) {\n            case \"is_current_date\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n               result.push({\n                  id: condKey,\n                  value: dateConditions[condKey],\n                  batch: \"none\",\n                  handler: (a, b) => this.dateValid(a, condKey, b),\n               });\n               break;\n            case \"last_days\":\n               result.push({\n                  id: condKey,\n                  value: dateConditions[condKey],\n                  batch: \"text\",\n                  handler: (a, b) => this.dateValid(a, condKey, b),\n               });\n               break;\n            default:\n               result.push({\n                  id: condKey,\n                  value: dateConditions[condKey],\n                  batch: \"datepicker\",\n                  handler: (a, b) => this.dateValid(a, condKey, b),\n               });\n               break;\n         }\n      return result;\n   }\n\n   fieldsAddFiltersString(field) {\n      let stringConditions = {\n         contains: {\n            batch: \"text\",\n            label: this.labels.component.containsCondition,\n         },\n         not_contains: {\n            batch: \"text\",\n            label: this.labels.component.notContainsCondition,\n         },\n         equals: {\n            batch: \"text\",\n            label: this.labels.component.isCondition,\n         },\n         not_equal: {\n            batch: \"text\",\n            label: this.labels.component.isNotCondition,\n         },\n         is_empty: {\n            batch: \"none\",\n            label: this.labels.component.isEmpty,\n         },\n         is_not_empty: {\n            batch: \"none\",\n            label: this.labels.component.isNotEmpty,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in stringConditions) {\n         result.push({\n            id: condKey,\n            value: stringConditions[condKey].label,\n            batch: stringConditions[condKey].batch,\n            handler: (a, b) => this.textValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersNumber(field) {\n      let numberConditions = {\n         equals: this.labels.component.equalCondition,\n         not_equal: this.labels.component.notEqualCondition,\n         less: this.labels.component.lessThanCondition,\n         greater: this.labels.component.moreThanCondition,\n         less_or_equal: this.labels.component.lessThanOrEqualCondition,\n         greater_or_equal: this.labels.component.moreThanOrEqualCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in numberConditions) {\n         result.push({\n            id: condKey,\n            value: numberConditions[condKey],\n            batch: \"text\",\n            handler: (a, b) => this.numberValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersList(field) {\n      let listConditions = {\n         equals: this.labels.component.equalListCondition,\n         not_equal: this.labels.component.notEqualListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in listConditions) {\n         result.push({\n            id: condKey,\n            value: listConditions[condKey],\n            batch: \"list\",\n            handler: (a, b) => this.listValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersBoolean(field) {\n      let booleanConditions = {\n         checked: this.labels.component.checkedCondition,\n         unchecked: this.labels.component.notCheckedCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in booleanConditions) {\n         result.push({\n            id: condKey,\n            value: booleanConditions[condKey],\n            batch: \"none\",\n            handler: (a, b) => this.booleanValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersUser(field) {\n      let userConditions = {\n         is_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isCurrentUserCondition,\n         },\n         is_not_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isNotCurrentUserCondition,\n         },\n         contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.containsCurrentUserCondition,\n         },\n         not_contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.notContainsCurrentUserCondition,\n         },\n         equals: {\n            batch: \"user\",\n            label: this.labels.component.equalListCondition,\n         },\n         not_equal: {\n            batch: \"user\",\n            label: this.labels.component.notEqualListCondition,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in userConditions) {\n         result.push({\n            id: condKey,\n            value: userConditions[condKey].label,\n            batch: userConditions[condKey].batch,\n            handler: (a, b) => this.userValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersConnectObject(field) {\n      const connectConditions = {\n         same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.sameAsUser,\n            handler: (a, b) => this.userValid(a, \"same_as_user\", b),\n         },\n         not_same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.notSameAsUser,\n            handler: (a, b) => this.userValid(a, \"not_same_as_user\", b),\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"in_data_collection\", b),\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"not_in_data_collection\", b),\n         },\n         // TODO\n         // contains: this.labels.component.containsCondition,\n         // not_contains: this.labels.component.notContainCondition,\n         // equals: this.labels.component.isCondition,\n         // not_equal: this.labels.component.isNotCondition\n      };\n\n      const result = [];\n\n      for (let condKey in connectConditions) {\n         result.push({\n            id: condKey,\n            value: connectConditions[condKey].label,\n            batch: connectConditions[condKey].batch,\n            handler: connectConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQuery(field, hasQueryField = false) {\n      const queryConditions = hasQueryField\n         ? {\n              in_query_field: {\n                 label: this.labels.component.inQueryField,\n                 batch: \"queryField\",\n              },\n              not_in_query_field: {\n                 label: this.labels.component.notInQueryField,\n                 batch: \"queryField\",\n              },\n           }\n         : {\n              in_query: {\n                 label: this.labels.component.inQuery,\n                 batch: \"query\",\n              },\n              not_in_query: {\n                 label: this.labels.component.notInQuery,\n                 batch: \"query\",\n              },\n           };\n\n      const result = [];\n\n      for (const condKey in queryConditions) {\n         result.push({\n            id: condKey,\n            value: queryConditions[condKey].label,\n            batch: queryConditions[condKey].batch,\n            handler: (a, b) => this.queryFieldValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersThisObject(field) {\n      let thisObjectConditions = {\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in thisObjectConditions) {\n         result.push({\n            id: condKey,\n            value: thisObjectConditions[condKey].label,\n            batch: thisObjectConditions[condKey].batch,\n            handler: (a, b) => this.thisObjectValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersRecordRule(field) {\n      let recordRuleConditions = {\n         same_as_field: this.labels.component.sameAsField,\n         not_same_as_field: this.labels.component.notSameAsField,\n      };\n\n      let result = [];\n\n      for (let condKey in recordRuleConditions) {\n         result.push({\n            id: condKey,\n            value: recordRuleConditions[condKey],\n            batch: \"recordRule\",\n            handler: (a, b) => true, // TODO: record rule validation\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersContext(field) {\n      let contextConditions = {\n         context_equals: {\n            batch: \"context\",\n            label: this.labels.component.equalsProcessValue,\n            handler: (a, b) => a == b,\n         },\n         context_not_equal: {\n            batch: \"context\",\n            label: this.labels.component.notEqualsProcessValueCondition,\n            handler: (a, b) => a != b,\n         },\n         context_in: {\n            batch: \"context\",\n            label: this.labels.component.inProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) > -1,\n         },\n         context_not_in: {\n            batch: \"context\",\n            label: this.labels.component.notInProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) == -1,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in contextConditions) {\n         result.push({\n            id: condKey,\n            value: contextConditions[condKey].label,\n            batch: contextConditions[condKey].batch,\n            handler: contextConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersCustom(field) {\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id || field] ?? {};\n      return options.conditions ?? [];\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    *\n    * return an array of all the ABObjectQuery.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      const queryList = this._Queries ?? this.AB?.queries?.() ?? [];\n\n      return queryList.filter((q) => filter(q));\n   }\n\n   setValue(settings) {\n      this.condition = settings || {};\n\n      this.condition.rules = this.condition.rules || [];\n   }\n\n   /**\n    * @method getValue\n    * return the current condition of the filter.\n    * @return {JSON} -\n    * {\n    * \tglue: '', // 'and', 'or'\n    *\t\trules: [\n    *\t\t\t{\n    *\t\t\t\tkey:\t'uuid',\n    *\t\t\t\trule:\t'rule',\n    *\t\t\t\tvalue:\t'value'\n    *\t\t\t}\n    *\t\t]\n    * }\n    */\n   getValue() {\n      // When asked for a value before a condition is set, default the\n      // unset glue to \"and\";\n      if (typeof this.condition.glue == \"undefined\") {\n         this.condition.glue = \"and\";\n      }\n      return this.condition;\n   }\n\n   isComplete() {\n      let result = true;\n\n      const noValueRules = [\n         \"is_current_user\",\n         \"is_not_current_user\",\n         \"contain_current_user\",\n         \"not_contain_current_user\",\n         \"same_as_user\",\n         \"not_same_as_user\",\n         \"is_empty\",\n         \"is_not_empty\",\n         \"checked\",\n         \"unchecked\",\n         \"is_current_date\",\n      ];\n\n      const isCompleteRules = (rules = []) => {\n         if (result == false) return;\n\n         rules.forEach((r) => {\n            if (r?.rules && Array.isArray(r?.rules)) {\n               isCompleteRules(r?.rules);\n            } else {\n               result =\n                  result &&\n                  r?.key != null &&\n                  r?.key != \"\" &&\n                  r?.rule != null &&\n                  r?.rule != \"\" &&\n                  ((r?.value != null && r?.value != \"\") ||\n                     noValueRules.indexOf(r?.rule) > -1);\n            }\n         });\n      };\n\n      isCompleteRules(this.condition?.rules);\n\n      return result;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field, returnSingular = true) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   // if rowData is an array, then pull the first element to get value\n   if (rowData && rowData[0]) rowData = rowData[0];\n\n   let columnId = field.id;\n   let columnName = field.columnName;\n\n   let value = null;\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName] || rowData[columnId];\n   } else {\n      value = rowData[columnName] || rowData[columnId];\n   }\n\n   if (value) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (var k in rowData) {\n      var key = k.split(\".\")[1];\n      if (key && (key == columnId || key == columnName)) {\n         value = rowData[k];\n      }\n   }\n\n   // if value is an array, filter empty item\n   if (value && Array.isArray(value)) {\n      value = value.filter((v) => v != null);\n      if (returnSingular) value = value[0];\n   }\n\n   return value;\n}\n\nmodule.exports = class RowFilterCore extends ABComponent {\n   constructor(App, idBase, AB) {\n      idBase = idBase || \"ab_row_filter\";\n\n      super(App, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.config_settings = {};\n      // var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         /**\n          * @method getValue\n          *\n          * @return {JSON} -\n          * {\n          * \t\tglue: '', // 'and', 'or'\n          *\t\trules: [\n          *\t\t\t{\n          *\t\t\t\tkey:\t'column name',\n          *\t\t\t\trule:\t'rule',\n          *\t\t\t\tvalue:\t'value'\n          *\t\t\t}\n          *\t\t]\n          * }\n          */\n         getValue: () => {\n            return this.config_settings;\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n\n         textValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value == null) value = \"\";\n\n            value = value.toString().trim().toLowerCase();\n            value = _logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n            compareValue = compareValue\n               .toString()\n               .trim()\n               .toLowerCase()\n               .replace(/  +/g, \" \");\n\n            // support \"john smith\" => \"john\" OR/AND \"smith\"\n            var compareArray = compareValue.split(\" \");\n\n            switch (rule) {\n               case \"contains\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value.indexOf(val) > -1;\n                  });\n                  break;\n               case \"not_contains\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value.indexOf(val) < 0;\n                  });\n                  break;\n               case \"equals\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value == val;\n                  });\n                  break;\n               case \"not_equal\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value != val;\n                  });\n                  break;\n               case \"is_empty\":\n                  result = value == null || value == \"\";\n                  break;\n               case \"is_not_empty\":\n                  result = value != null && value != \"\";\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         dateValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (!(value instanceof Date)) value = new Date(value);\n\n            if (!(compareValue instanceof Date))\n               compareValue = new Date(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         numberValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            value = Number(value);\n            compareValue = Number(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         listValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value && value.toLowerCase) value = value.toLowerCase();\n\n            compareValue = compareValue.toLowerCase();\n\n            if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n            switch (rule) {\n               case \"equals\":\n                  if (value) result = compareValue.indexOf(value) > -1;\n                  break;\n               case \"not_equal\":\n                  if (value) result = compareValue.indexOf(value) < 0;\n                  else result = true;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         booleanValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // default value should be false\n            if (value == null) value = false;\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         userValid: (rowData, field, rule, compareValue) => {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // if (Array.isArray(value)) value = [value];\n\n            switch (rule) {\n               case \"is_current_user\":\n                  result = value == this.Account.username;\n                  break;\n               case \"is_not_current_user\":\n                  result = value != this.Account.username;\n                  break;\n               case \"contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length > 0;\n                  break;\n               case \"not_contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length == 0;\n                  break;\n               case \"equals\":\n                  result = value.indexOf(compareValue) > -1;\n                  break;\n               case \"not_equal\":\n                  result = value.indexOf(compareValue) < 0;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         queryValid: (rowData, rule, compareValue) => {\n            var result = false;\n\n            if (!this.AB || !compareValue) return result;\n\n            // queryId:fieldId\n            var queryId = compareValue.split(\":\")[0],\n               fieldId = compareValue.split(\":\")[1];\n\n            // if no query\n            var query = this.queries((q) => q.id == queryId)[0];\n            if (!query) return result;\n\n            // if no field\n            var field = query.fields((f) => f.id == fieldId)[0];\n            if (!field) return result;\n\n            let qIdBase = \"{idBase}-query-field-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFieldFilter = new this.constructor(this.App, qIdBase);\n            inQueryFieldFilter.Account = this.Account;\n            // inQueryFieldFilter.applicationLoad(this._Application);\n            inQueryFieldFilter.fieldsLoad(query.fields());\n            inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query_field\":\n                  result = inQueryFieldFilter.isValid(rowData);\n                  break;\n               case \"not_in_query_field\":\n                  result = !inQueryFieldFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         inQueryValid: (rowData, columnName, rule, compareValue) => {\n            let result = false;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            if (!compareValue || !this.AB) return result;\n\n            // if no query\n            let query = this.queries((q) => q.id == compareValue)[0];\n            if (!query) return result;\n\n            let qIdBase = \"{idBase}-query-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFilter = new this.constructor(this.App, qIdBase);\n            inQueryFilter.Account = this.Account;\n            // inQueryFilter.applicationLoad(this._Application);\n            inQueryFilter.fieldsLoad(query.fields());\n            inQueryFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query\":\n                  result = inQueryFilter.isValid(rowData);\n                  break;\n               case \"not_in_query\":\n                  result = !inQueryFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         dataCollectionValid: (rowData, columnName, rule, compareValue) => {\n            var result = false;\n\n            if (!compareValue || !this.AB) return result;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            let dc = this.AB.datacollectionByID(compareValue);\n\n            switch (rule) {\n               case \"in_data_collection\":\n                  if (!dc) return false;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length > 0;\n                  break;\n               case \"not_in_data_collection\":\n                  if (!dc) return true;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length < 1;\n                  break;\n            }\n\n            return result;\n         },\n\n         connectFieldValid: function (rowData, field, rule, compareValue) {\n            let relationName = field.relationName();\n\n            let connectedVal = \"\";\n\n            if (rowData) {\n               if (rowData[relationName]) {\n                  connectedVal = (\n                     (field.indexField\n                        ? rowData[relationName][field.indexField.columnName]\n                        : false) || // custom index\n                     (field.indexField2\n                        ? rowData[relationName][field.indexField2.columnName]\n                        : false) || // custom index 2\n                     rowData[relationName].id ||\n                     rowData[relationName]\n                  )\n                     .toString()\n                     .toLowerCase();\n               } else {\n                  let fieldVal = getFieldVal(rowData, field);\n                  if (fieldVal != null) {\n                     connectedVal = fieldVal;\n\n                     // an Object to a String\n                     if (typeof connectedVal == \"object\") {\n                        connectedVal =\n                           field.datasourceLink.displayData(connectedVal);\n                     }\n                  }\n               }\n            }\n\n            let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n            switch (rule) {\n               case \"contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) > -1\n                  );\n               case \"not_contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) ==\n                     -1\n                  );\n               case \"equals\":\n                  return connectedVal == compareValueLowercase;\n               case \"not_equal\":\n                  return connectedVal != compareValueLowercase;\n               case \"in_query\":\n               case \"not_in_query\":\n                  return _logic.inQueryValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n                  return _logic.userValid(rowData, field, rule, compareValue);\n               case \"is_empty\":\n                  return (\n                     rowData[relationName] == null ||\n                     rowData[relationName].length < 1 ||\n                     rowData[relationName] == \"\"\n                  );\n               case \"is_not_empty\":\n                  return (\n                     rowData[relationName] != null &&\n                     ((Array.isArray(rowData[relationName]) &&\n                        rowData[relationName].length > 0) ||\n                        rowData[relationName] != \"\")\n                  );\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n            }\n         },\n\n         thisObjectValid: (rowData, rule, compareValue) => {\n            let result = false;\n\n            switch (rule) {\n               // if in_query condition\n               case \"in_query\":\n               case \"not_in_query\":\n                  if (!this.AB || !this._Object) return result;\n\n                  // if > 1 copy of this object in query ==> Error!\n                  var query = this.queries((q) => q.id == compareValue)[0];\n                  if (!query) return result;\n\n                  var listThisObjects = query.objects((o) => {\n                     return o.id == this._Object.id;\n                  });\n                  if (listThisObjects.length > 1) {\n                     // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n                     // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n                     // this object as part of the query.\n\n                     console.error(\n                        \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n                     );\n                     return true;\n                  }\n\n                  // get this object's alias from the query\n                  var alias = query.objectAlias(this._Object.id);\n\n                  // make sure all my columns in rowData are prefixed by \"alias\".columnName\n                  var newRowData = {};\n                  Object.keys(rowData).forEach((key) => {\n                     newRowData[`${alias}.${key}`] = rowData[key];\n                  });\n\n                  // then pass this on to the _logic.queryValid();\n                  return _logic.inQueryValid(\n                     newRowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n\n               // if in_datacollection condition\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // send rowData, null to datacollectionValid()\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n            }\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      this.getValue = _logic.getValue;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      var config_settings = this.config_settings;\n      var _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         config_settings == null ||\n         config_settings.rules == null ||\n         config_settings.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      var result = config_settings.glue === \"and\" ? true : false;\n\n      config_settings.rules.forEach((filter) => {\n         if (!filter?.key || !filter?.rule) return;\n\n         var fieldInfo = this._Fields.filter((f) => f.id == filter.key)[0];\n         if (!fieldInfo) return;\n\n         var condResult;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         var ruleFieldType = fieldInfo.key;\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               condResult = _logic.textValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = _logic.dateValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"number\":\n            case \"formula\":\n               condResult = _logic.numberValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"list\":\n               condResult = _logic.listValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"boolean\":\n               condResult = _logic.booleanValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"user\":\n               condResult = _logic.userValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = _logic.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (config_settings.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method applicationLoad\n    * set application\n    *\n    * @param application {ABApplication}\n    */\n   // applicationLoad(application) {\n   //    this._Application = application;\n   // }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param {array} fields\n    *        an array of fields used in this Query\n    * @param {ABObject} object [optional]\n    *        (optional) ABObject reference if this Filter should support\n    *        the \"this object\" conditions.\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter((f) => f?.fieldIsFilterable?.());\n      // NOTE: User fields are now Connections, but we want to treat them\n      // differently.\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery.\n    * @param {fn} filter\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      let result = [];\n\n      if (this.AB) {\n         result = result.concat(this.AB.queries(filter));\n      }\n\n      if (this._Queries) {\n         result = result.concat(\n            (this._Queries || []).filter(\n               (q) => filter(q) && result.filter((r) => r.id == q.id).length < 1\n            )\n         );\n      }\n\n      return result;\n   }\n\n   setValue(settings) {\n      this.config_settings = settings || {};\n      this.config_settings.rules = this.config_settings.rules || [];\n   }\n};\n","/*\n * ABFieldAutoIndex\n *\n * An ABFieldAutoIndex defines a AutoIndex field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldAutoIndexDefaults = {\n   key: \"AutoIndex\",\n   // unique key to reference this specific DataField\n\n   description: \"Auto Increment Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Auto Index\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"tinyint\", \"smallint\", \"mediumint\", \"int\", \"integer\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   prefix: \"\",\n   delimiter: \"none\",\n   displayLength: 4,\n   previewText: \"0000\",\n};\n\nmodule.exports = class ABFieldAutoIndexCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldAutoIndexDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldAutoIndexDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getDelimiterSign(text) {\n      const delimiterItem = this.delimiterList().filter((item) => {\n         return item.id == text;\n      })[0];\n\n      return delimiterItem ? delimiterItem.sign : \"\";\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\"), sign: \"\" },\n         { id: \"comma\", value: L(\"Comma\"), sign: \", \" },\n         { id: \"slash\", value: L(\"Slash\"), sign: \"/\" },\n         { id: \"space\", value: L(\"Space\"), sign: \" \" },\n         { id: \"dash\", value: L(\"Dash\"), sign: \"-\" },\n         { id: \"colon\", value: L(\"Colon\"), sign: \":\" },\n      ];\n   }\n\n   static setValueToIndex(prefix, delimiter, displayLength, displayNumber) {\n      const resultIndex =\n         prefix +\n         this.getDelimiterSign(delimiter) +\n         (\"0000000000\" + displayNumber).slice(-parseInt(displayLength));\n\n      return resultIndex;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.displayLength = parseInt(this.settings.displayLength);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      if (!rowData?.[this.columnName]) return \"\";\n\n      try {\n         const resultAutoIndex = this.constructor.setValueToIndex(\n            this.settings.prefix,\n            this.settings.delimiter,\n            this.settings.displayLength,\n            rowData[this.columnName]\n         );\n\n         return resultAutoIndex;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldBoolean\n *\n * An ABFieldBoolean defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldBooleanDefaults = {\n   key: \"boolean\",\n   // unique key to reference this specific DataField\n\n   description: \"A single checkbox that can be checked or unchecked.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"check-square-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'check-square-o'  to\n   // reference 'fa-check-square-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Checkbox\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"boolean\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"bool\", \"boolean\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: 0,\n};\n\nmodule.exports = class ABFieldBooleanCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldBooleanDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldBooleanDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      if (this.settings.default != null)\n         this.settings.default = parseInt(this.settings.default);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null && this.settings.default != null) {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n};\n","/*\n * ABFieldCalculate\n *\n * An ABFieldCalculate defines a calculate field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\n/** Private methods */\nfunction AGE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   const today = new Date();\n   const oneYear = 31536000000; // (24 * 60 * 60 * 1000) * 365;\n   const diffYears = (today - dataDate) / oneYear;\n\n   if (diffYears < 1) return Math.round(diffYears * 10) / 10;\n   // float 2 digits\n   else return Math.floor(diffYears); // no float digit\n\n   // const today = new Date();\n   // const age = today.getFullYear() - dataDate.getFullYear();\n   // if (age < 1) {\n   // \tconst m = today.getMonth() - dataDate.getMonth();\n\n   // \tage = parseFloat(\"0.\" + m);\n\n   // \t// if (m < 0 || (m === 0 && today.getDate() < dataDate.getDate())) {\n   // \t// \tage--;\n   // \t// }\n   // }\n   // return age;\n}\n\nfunction YEAR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getFullYear();\n}\n\nfunction MONTH(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // Start at 0\n   return dataDate.getMonth();\n}\n\nfunction DAY(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getDate();\n}\n\nfunction DATE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one day\n   const oneDay = 86400000; // 1000 * 60 * 60 * 24\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneDay);\n}\n\nfunction HOUR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneHour = 3600000; // 1000 * 60 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneHour);\n}\n\nfunction MINUTE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneMinute = 60000; // 1000 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneMinute);\n}\n\nfunction MINUTE_TO_HOUR(mins) {\n   const hours = mins / 60;\n   const rhours = Math.floor(hours);\n   const minutes = (hours - rhours) * 60;\n   const rminutes = Math.round(minutes);\n\n   return parseFloat(`${rhours}.${rminutes}`);\n}\n\nconst ABFieldCalculateDefaults = {\n   key: \"calculate\",\n   // unique key to reference this specific DataField\n\n   description: \"Perform a calculation based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calculator\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calculator'  to\n   // reference 'fa-calculator'\n\n   isFilterable: (field) => {\n      const unsupportedInFilter = [\"MINUTE_TO_HOUR\", \"DATE\", \"HOUR\", \"MINUTE\"];\n      const unsupported = unsupportedInFilter.filter((item) =>\n         field.settings.formula.includes(item)\n      );\n      return unsupported.length == 0;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Calculate\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   formula: \"\",\n   decimalSign: \"none\", // \"none\", \"comma\", \"period\", \"space\"\n   decimalPlaces: 0, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n};\n\nmodule.exports = class ABFieldCalculateCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCalculateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCalculateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method convertToJs\n    *\n    * @param {ABOBject} object\n    * @param {string} formula\n    * @param {object} rowData\n    * @param {integer} place\n    * @param {string} alias [Optional]\n    */\n   static convertToJs(\n      object,\n      formula,\n      rowData,\n      place,\n      alias = null,\n      recalculate = false\n   ) {\n      if (!formula) return \"\";\n\n      // replace with current date\n      formula = formula.replace(/\\(CURRENT\\)/g, \"(new Date())\");\n\n      object.fields().forEach((f) => {\n         let colName = f.columnName;\n         if (colName.indexOf(\".\") > -1)\n            // QUERY: get only column name\n            colName = colName.split(\".\")[1];\n\n         // if template does not contain, then should skip\n         if (formula.indexOf(\"{\" + colName + \"}\") < 0) return;\n\n         const data =\n            rowData[`${object.alias ?? alias}.${f.columnName}`] ??\n            rowData[f.columnName];\n\n         // number fields\n         if (f.key == \"number\") {\n            const numberVal = `(${data || 0})`; // (number) - NOTE : (-5) to support negative number\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               numberVal\n            );\n         }\n         // calculate and formula fields\n         else if (f.key == \"calculate\" || f.key == \"formula\") {\n            let calVal = f.format(rowData, recalculate) || 0;\n\n            // pull number only\n            if (typeof calVal == \"string\")\n               calVal = calVal.replace(/[^-0-9.]/g, \"\");\n\n            calVal = `(${calVal})`;\n\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               calVal\n            );\n         }\n         // date fields\n         else if (f.key == \"date\" || f.key == \"datetime\") {\n            const dateVal = `\"${data || \"\"}\"`; // \"date\"\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               dateVal\n            );\n         }\n         // boolean fields\n         else if (f.key == \"boolean\") {\n            const booleanVal = `(${data || 0})`; // show 1 or 0 for boolean\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               booleanVal\n            );\n         }\n      });\n\n      // decimal places - toFixed()\n      // FIX: floating number calculation\n      // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\n      return eval(formula).toFixed(place || 0);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   format(rowData, recalculate = false) {\n      let place = 0;\n      if (this.settings.decimalSign != \"none\") {\n         place = this.settings.decimalPlaces;\n      }\n\n      try {\n         let result = this.constructor.convertToJs(\n            this.object,\n            this.settings.formula,\n            rowData,\n            place,\n            this.alias,\n            recalculate\n         );\n\n         if (typeof result == \"string\")\n            result = result.replace(/[^-0-9.]/g, \"\");\n\n         switch (this.settings.decimalSign) {\n            case \"comma\":\n               result = result.replace(\".\", \",\");\n               break;\n            case \"space\":\n               result = result.replace(\".\", \" \");\n               break;\n         }\n\n         return result;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldCombine\n *\n * An ABFieldCombine defines a combined field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldCombinedDefaults = {\n   key: \"combined\",\n   // unique key to reference this specific DataField\n\n   description: \"Combined Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Combined Field\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   combinedFields: \"\",\n   // {string} \"field's uuid1, field's uuid2, field's uuid3, ...\"\n   // This tells us what fields will be combined.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   delimiter: \"plus\", // plus, space, dash, period\n};\n\nmodule.exports = class ABFieldCombineCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCombinedDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCombinedDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.delimiter =\n         values.settings.delimiter || defaultValues.delimiter;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method getCombinedFields\n    * Retrieve the fields used to combine and generate a specific value\n    *\n    * @return {Array}\n    */\n   getCombinedFields() {\n      const result = [];\n\n      (this.settings?.combinedFields ?? \"\").split(\",\").forEach((fieldId) => {\n         const fld = this.object.fields((f) => f.id == fieldId)[0];\n         if (!fld) return;\n\n         result.push(fld);\n      });\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * Convert the value of a connected field (without a custom index) to display the label of the linked object\n    *\n    * @param {Object} rowData\n    * @returns {String}\n    */\n   format(rowData) {\n      let val = rowData[this.columnName] ?? \"\";\n\n      this.getCombinedFields().forEach((f, index) => {\n         if (\n            f.key != \"connectObject\" ||\n            f.settings.indexField ||\n            f.settings.indexField2\n         )\n            return;\n\n         let connectVal = rowData[f.relationName()];\n         if (!connectVal) return;\n\n         if (!Array.isArray(connectVal)) connectVal = [connectVal];\n\n         const connectLabel = connectVal\n            .map((item) => item.text ?? f.datasourceLink.displayData(item))\n            .join(\"|\");\n\n         val = val.replace(rowData[f.columnName], connectLabel);\n      });\n\n      return val;\n   }\n};\n","/*\n * ABFieldConnect\n *\n * An ABFieldConnect defines a connect to other object field type.\n *\n */\n\nvar ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldConnectDefaults = {\n   key: \"connectObject\",\n   // unique key to reference this specific DataField\n\n   description: \"Connect two data objects together\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"external-link\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'external-link'  to\n   // reference 'fa-external-link'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      const linkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      return [\"one:many\", \"one:one\"].indexOf(linkType) > -1;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Connect to another record\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   linkObject: \"\", // ABObject.id\n   // the .id of the ABObject we are connected to\n\n   linkType: \"one\", // [one, many]\n   // 'one' : this object can have only 1 of our linkObject\n   // 'many': this object can have MANY of our linkObject\n\n   linkViaType: \"many\", // [one, many]\n   // 'one' : the linkedObject can only have 1 of me\n   // 'many' : the linkedObject can have many of me\n\n   linkColumn: \"\", // ABField.id\n   // the .id of the field in the linkedObject that is our\n   // connected field.\n\n   isSource: null, // bit : 1,0\n   // isSource indicates that this object is the source of the connection:\n   // if linkType==one, and isSource=1, then the value in this object's field\n   // \t\tis the connected object's id\n   // if linkType == one, and isSource = 0, then the linkObject has this obj.id\n   //  \tin it's connected field (linkColumn)\n\n   // the next 3 Fields are concerning how we connect to other ABObjects when\n   // we are NOT using the .uuid as the connecting Value. Instead, there is an\n   // ABIndex setting we are connecting with.\n   isCustomFK: 0,\n   // {bool} truthy [0,1, etc...]\n   // indicates that this connection is using 1 or more custom foreign keys\n   // for the data it is storing in it's relationship.\n\n   indexField: \"\", // ABField.id\n   // {string} {ABField.id}\n   // In a Connection defined between A --> B, this field represents the ABField\n   // that is used for the data being stored.\n   // In 1:1,  1:M  or M:1  relationships, .indexField always refers to the\n   //       field we are pulling the Data FROM.\n   // In M:N relationships:  this will refer to the A.Field.id that is a custom\n   //       key (if any).\n\n   indexField2: \"\", // ABField.id\n   // {string}  {ABField.id}\n   // In the M:N relationship: this field refers to the B.Field.id that is a\n   //       custom Key for the data we are storing.\n};\n\nmodule.exports = class ABFieldConnectCore extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldConnectDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.isConnection = true;\n      // {bool}\n      // is this an ABFieldConnect type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of connect field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n\n      // // text to Int:\n      // this.settings.isSource = parseInt(this.settings.isSource || 0);\n      // this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldConnectDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.isSource = parseInt(this.settings.isSource || 0);\n      this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(/* values */) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   relationName() {\n      // there is object name - {objectName}.{columnName}\n      if (this.columnName.indexOf(\".\") > -1) {\n         const names = this.columnName.split(\".\");\n         return `${names[0]}.${this.AB.rules.toFieldRelationFormat(names[1])}`;\n      } else {\n         return this.AB.rules.toFieldRelationFormat(this.columnName);\n      }\n   }\n\n   /**\n    * @method datasourceLink\n    * return the ABObject that this field connection links to\n    * @return {ABObject}\n    */\n   get datasourceLink() {\n      const linkObj = this.AB.objectByID(this.settings.linkObject);\n      if (!linkObj) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkObject[${this.settings.linkObject}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkObject: this.settings.linkObject,\n         });\n      }\n      return linkObj;\n   }\n\n   /**\n    * @method fieldLink\n    * return the ABField that we are linked to.\n    * @return {ABDataField}  or undefined if not found.\n    */\n   get fieldLink() {\n      const objectLink = this.datasourceLink;\n      if (!objectLink) return null; // note: already Notified\n\n      const linkColumn = objectLink.fieldByID(this.settings.linkColumn);\n      if (!linkColumn) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkColumn[${this.settings.linkColumn}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkColumn: this.settings.linkColumn,\n         });\n      }\n      return linkColumn;\n   }\n\n   /**\n    * @method pullRelationValues\n    * Return the data values for this field entry in the provided data row.\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData;\n\n      // Get linked object\n      const linkedObject = this.datasourceLink;\n\n      let data = this.dataValue(row);\n      if (data && linkedObject) {\n         // convert to JSON\n         if (typeof data == \"string\") {\n            try {\n               data = JSON.parse(data);\n            } catch (e) {\n               // must be a UUID\n               // so just set that to selectedData:\n               selectedData = data;\n            }\n         }\n\n         selectedData = data;\n      }\n\n      return selectedData;\n   }\n\n   dataValue(rowData) {\n      if (rowData == null) return \"\";\n\n      const propName = `${this.object.name}.${this.relationName()}`;\n\n      return (\n         rowData[this.relationName()] ||\n         rowData[propName] ||\n         rowData[this.columnName] ||\n         \"\"\n      );\n   }\n\n   format(rowData) {\n      const val = this.pullRelationValues(rowData);\n      const linkedObject = this.datasourceLink;\n\n      // array\n      if (Array.isArray(val))\n         return val\n            .map((v) => {\n               if (v.text == null) return linkedObject.displayData(v) || \"\";\n               else return v.text || \"\";\n            })\n            .join(\", \");\n      // string\n      else if (val) {\n         if (val.text == null) return linkedObject.displayData(val) || \"\";\n         else if (val.text) return val.text || \"\";\n      }\n      // empty string\n      else return \"\";\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkType() {\n      return this.settings.linkType;\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkViaType() {\n      return this.settings.linkViaType;\n   }\n\n   /**\n    * @method isSource\n    * does this object contain the .id of the remote object (in case of linkType : one )\n    * @return {bool}\n    */\n   isSource() {\n      return this.settings.isSource;\n   }\n\n   /**\n    * @property indexField\n    * @return {ABField}\n    */\n   get indexField() {\n      if (!this.settings.isCustomFK || !this.settings.indexField) {\n         return null;\n      }\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n      // 1:M\n      if (linkType === \"one:many\") {\n         return this.datasourceLink.fieldByID(this.settings.indexField);\n      }\n      // 1:1\n      else if (linkType === \"one:one\") {\n         if (this.settings.isSource) {\n            return this.datasourceLink.fieldByID(this.settings.indexField);\n         } else {\n            return this.object.fieldByID(this.settings.indexField);\n         }\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         return this.object.fieldByID(this.settings.indexField);\n      }\n      // M:N\n      else if (linkType === \"many:many\") {\n         let indexField = this.object.fieldByID(this.settings.indexField);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField\n            );\n\n         return indexField;\n      }\n\n      return null;\n   }\n\n   /**\n    * @property indexField2\n    * @return {ABField}\n    */\n   get indexField2() {\n      if (!this.settings.isCustomFK || !this.settings.indexField2) {\n         return null;\n      }\n\n      let indexField;\n\n      // M:N only\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         indexField = this.object.fieldByID(this.settings.indexField2);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField2\n            );\n      }\n\n      return indexField;\n   }\n\n   /**\n    * @method getRelationValue\n    * pull values for update connect data\n    * @param {Object} rowData\n    * @param {Object} options - {\n    *                               forUpdate: boolean\n    *                           }\n    * @return {Object}\n    */\n   getRelationValue(rowData, options = {}) {\n      if (rowData == null) return;\n      let colName;\n      const indexField = this.indexField;\n      const datasourceLink = this.datasourceLink;\n\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n\n      // custom index\n      // M:N\n      if (linkType === \"many:many\") {\n         const indexField2 = this.indexField2;\n\n         if (indexField && indexField.object.id == datasourceLink.id) {\n            colName = indexField.columnName;\n         } else if (indexField2 && indexField2.object.id == datasourceLink.id) {\n            colName = indexField2.columnName;\n         }\n      }\n      // 1:M, 1:1 isSource = true\n      else if (\n         indexField &&\n         (linkType === \"one:many\" ||\n            (linkType === \"one:one\" && this.settings.isSource))\n      ) {\n         colName = indexField.columnName;\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         // NOTE: M:1 has special case\n         // it uses different value for search and update.\n         // UPDATE uses row id\n         // SEARCH uses custom index value\n         if (options.forUpdate) {\n            colName = datasourceLink.PK();\n         } else {\n            colName = indexField ? indexField.columnName : datasourceLink.PK();\n         }\n      }\n      // NO CUSTOM INDEX\n      else if (datasourceLink) {\n         colName = datasourceLink.PK();\n      }\n\n      let result =\n         rowData[colName] ||\n         rowData[this.object?.PK()] ||\n         rowData.id ||\n         rowData;\n\n      if (colName == \"id\") {\n         result = parseInt(result);\n      }\n\n      return result;\n   }\n};\n","/*\n * ABFieldCore\n *\n * ABFieldBase defines the common ABField structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABObject classes.\n *\n */\n// const ABEmitter = require(\"../../platform/ABEmitter\");\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nmodule.exports = class ABFieldCore extends ABMLClass {\n   constructor(values, object, fieldDefaults) {\n      super([\"label\"], object.AB);\n\n      // NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      this.defaults = fieldDefaults || {};\n\n      /*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name\n\t\t\tisImported: 1/0,\t\t\t// flag to mark is import from other object\n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\t\t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n\t\t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n\t\t\t\twidth: {int}\t\t\t// width of display column\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n\n      this.object = object;\n\n      this.fromValues(values);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n   static get reservedNames() {\n      return [\n         \"id\",\n         \"created_at\",\n         \"updated_at\",\n         \"properties\",\n         \"createdAt\",\n         \"updatedAt\",\n      ];\n   }\n\n   static defaultValues() {\n      return {};\n   }\n\n   // unique key to reference this specific DataField\n   fieldKey() {\n      return this.defaults.key;\n   }\n\n   /**\n    * Sails ORM data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldOrmTypes() {\n      if (this.defaults.compatibleOrmTypes) {\n         if (Array.isArray(this.defaults.compatibleOrmTypes)) {\n            return this.defaults.compatibleOrmTypes;\n         } else {\n            return [this.defaults.compatibleOrmTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * Mysql data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldMysqlTypes() {\n      if (this.defaults.compatibleMysqlTypes) {\n         if (Array.isArray(this.defaults.compatibleMysqlTypes)) {\n            return this.defaults.compatibleMysqlTypes;\n         } else {\n            return [this.defaults.compatibleMysqlTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   fieldIcon() {\n      return this.defaults.icon;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldMenuName() {\n      return this.defaults.menuName;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldDescription() {\n      return this.defaults.description;\n   }\n\n   // the flag to set when checking if field should be filterable\n   fieldIsFilterable() {\n      if (this.defaults.isFilterable != null) {\n         if (typeof this.defaults.isFilterable === \"function\") {\n            return this.defaults.isFilterable(this);\n         } else {\n            return this.defaults.isFilterable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if field should be sortable\n   fieldIsSortable() {\n      if (this.defaults.isSortable != null) {\n         if (typeof this.defaults.isSortable === \"function\") {\n            return this.defaults.isSortable(this);\n         } else {\n            return this.defaults.isSortable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if the field should be used as a label\n   fieldUseAsLabel() {\n      if (this.defaults.useAsLabel != null) {\n         if (typeof this.defaults.useAsLabel === \"function\") {\n            return this.defaults.useAsLabel(this);\n         } else {\n            return this.defaults.useAsLabel;\n         }\n      }\n\n      return 1;\n   }\n\n   fieldSupportRequire() {\n      if (this.defaults.supportRequire) return this.defaults.supportRequire;\n      // default\n      else return true;\n   }\n\n   fieldSupportQuery() {\n      if (this.defaults.supportQuery != null) {\n         if (typeof this.defaults.supportQuery === \"function\") {\n            return this.defaults.supportQuery(this);\n         } else {\n            return this.defaults.supportQuery;\n         }\n      }\n\n      return true;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABField instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      return {\n         id: this.id,\n         type: this.type || \"field\",\n         key: this.key,\n         icon: this.icon,\n         isImported: this.isImported,\n         columnName: this.columnName,\n         settings: this.settings,\n         translations: obj.translations,\n      };\n   }\n\n   defaultCheck(val, defaultVal) {\n      let returnVal = defaultVal;\n      if (typeof val != \"undefined\") {\n         returnVal = val;\n      }\n      return returnVal;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      if (!this.id) this.id = values.id; // NOTE: only exists after .save()\n      this.type == values.type || \"field\";\n      this.key = values.key || this.fieldKey();\n      this.icon = values.icon || this.fieldIcon();\n\n      values.settings = values.settings || {};\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.columnName = values.columnName || \"\";\n\n      this.isImported = values.isImported || 0;\n\n      this.settings = values.settings;\n      this.settings.showIcon = this.defaultCheck(values.settings.showIcon, \"1\");\n      this.settings.required = this.defaultCheck(values.settings.required, \"0\");\n      this.settings.width = this.defaultCheck(values.settings.width, \"0\");\n\n      // convert from \"0\" => 0\n      this.isImported = parseInt(this.isImported);\n      this.settings.showIcon = parseInt(this.settings.showIcon);\n      this.settings.required = parseInt(this.settings.required);\n      this.settings.unique = parseInt(this.settings.unique || 0);\n      this.settings.width = parseInt(this.settings.width);\n\n      // we're responsible for setting up our specific settings:\n      const defaultValues = this.constructor.defaultValues() || {};\n      for (const dv in defaultValues) {\n         this.settings[dv] = this.defaultCheck(\n            values.settings[dv],\n            defaultValues[dv]\n         );\n      }\n\n      // const the MLClass now process the Translations\n      super.fromValues(values);\n\n      // final validity check: columnName really should have a value:\n      this.columnName = this.columnName || this.label;\n\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.columnName = this.columnName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n   }\n\n   /**\n    * @method urlPointer()\n    * return a string pointer to decode this object from the root application\n    * object.\n    * @return {string} pointer reference\n    */\n   urlPointer() {\n      return this.object.urlField() + this.id;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"\";\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    */\n   isValidData(data, validator) {\n      // console.error('!!! Field ['+this.fieldKey()+'] has not implemented .isValidData()!!!');\n      if (\n         this.settings.required &&\n         (data[this.columnName] == null || data[this.columnName] == \"\") &&\n         data[this.columnName] != 0\n      ) {\n         validator.addError(this.columnName, \"This is a required field.\");\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return false;\n   }\n\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = \"\";\n      if (rowData?.[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData?.[propName] != null) {\n         result = rowData[propName];\n      }\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * return display text to detail comonent and define label of object\n    *\n    * @param {Object} rowData - data\n    */\n   format(rowData) {\n      if (rowData) {\n         return this.dataValue(rowData);\n      } else return \"\";\n   }\n\n   /**\n    * @method toDefinition()\n    *\n    * convert this instance into an ABDefinition object.\n    *\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      const myDef = super.toDefinition();\n\n      // attempt to provide a more descriptive name:\n      // [obj]->[fieldName]\n      if (myDef.name == \"\") {\n         myDef.name =\n            myDef.json.name || myDef.json.label || myDef.json.columnName;\n      }\n      if (this.object && this.object.name) {\n         myDef.name = `${this.object.name}->${myDef.name}`;\n      }\n      return myDef;\n   }\n};\n","/*\n * ABFieldDate\n *\n * An ABFieldDate defines a date field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n/*function L(key, altText) {\n   // TODO:git \n   // return altText; // AD.lang.label.getLabel(key) || altText;\n}*/\n\nconst ABFieldDateDefaults = {\n   key: \"date\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from a calendar.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calendar\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calendar'  to\n   // reference 'fa-calendar'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"date\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"date\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   dateFormat: 2, // 1 (Ignore date), 2, 3, 4, 5\n   defaultDate: 1, // 1 (None), 2 (Current Date), 3 (Specific Date)\n   defaultDateValue: null, // {Date}\n   validateCondition: \"none\",\n   validateRangeUnit: \"days\",\n   validateRangeBefore: 0,\n   validateRangeAfter: 0,\n   validateStartDate: null,\n   validateEndDate: null,\n};\n\nmodule.exports = class ABFieldDateCore extends ABField {\n   constructor(values, object, defaultValues = ABFieldDateDefaults) {\n      super(values, object, defaultValues);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.dateFormat = parseInt(this.settings.dateFormat);\n      this.settings.defaultDate = parseInt(this.settings.defaultDate);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      let dateResult;\n\n      // Set current date as default\n      if (this.settings.defaultDate == 2) {\n         dateResult = new Date();\n      }\n      // Set specific date as default\n      else if (\n         this.settings.defaultDate == 3 &&\n         this.settings.defaultDateValue\n      ) {\n         dateResult = new Date(this.settings.defaultDateValue);\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null) {\n         values[this.columnName] = this.AB.rules.toDateFormat(dateResult, {\n            format: \"YYYY-MM-DD\",\n         });\n         // values[this.columnName] = moment(dateResult).format(\"YYYY-MM-DD\");\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n      var L = this.AB.Label();\n\n      const currentDate = new Date();\n      currentDate.setHours(0, 0, 0, 0);\n\n      if (data[this.columnName]) {\n         let value = data[this.columnName];\n\n         if (!(value instanceof Date)) {\n            value = this.AB.rules.toDate(value);\n            // value = new Date(this.convertToMoment(value));\n         }\n\n         // verify we didn't end up with an InValid Date result.\n         if (\n            Object.prototype.toString.call(value) === \"[object Date]\" &&\n            isFinite(value)\n         ) {\n            let isValid = true;\n\n            // Custom vaildate is here\n            if (this.settings && this.settings.validateCondition) {\n               const startDate = this.settings.validateStartDate\n                     ? new Date(this.settings.validateStartDate)\n                     : null,\n                  endDate = this.settings.validateEndDate\n                     ? new Date(this.settings.validateEndDate)\n                     : null,\n                  startDateDisplay = this.getDateDisplay(startDate),\n                  endDateDisplay = this.getDateDisplay(endDate);\n               const minDate = this.AB.rules.subtractDate(\n                  new Date(),\n                  this.settings.validateRangeBefore,\n                  this.settings.validateRangeUnit\n               );\n               const maxDate = this.AB.rules.addDate(\n                  new Date(),\n                  this.settings.validateRangeAfter,\n                  this.settings.validateRangeUnit\n               );\n               switch (this.settings.validateCondition) {\n                  case \"dateRange\":\n                     if (minDate < value && value < maxDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              this.getDateDisplay(minDate),\n                              this.getDateDisplay(maxDate),\n                           ])\n                        );\n                     }\n\n                     break;\n                  case \"between\":\n                     if (startDate < value && value < endDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"notBetween\":\n                     if (value < startDate && endDate < value) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() == startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<>\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() != startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() > startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() < startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() >= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() <= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"lessCurrentDate\":\n                     isValid =\n                        value.getTime &&\n                        value.getTime() < currentDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [\n                              this.getDateDisplay(currentDate),\n                           ])\n                        );\n                     break;\n                  case \"lessEqualCurrentDate\":\n                     isValid =\n                        value.getTime &&\n                        value.getTime() <= currentDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [\n                              this.getDateDisplay(currentDate),\n                           ])\n                        );\n                     break;\n               }\n            }\n\n            if (isValid) {\n               // Reformat value to DB\n               // NOTE: should we update here?\n               data[this.columnName] = this.exportValue(value);\n            }\n         } else {\n            // return a validation error\n            validator.addError(this.columnName, \"Should be a Date!\");\n         }\n      }\n   }\n\n   format(rowData) {\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      // pull format from settings.\n      const dateObj = this.AB.rules.toDate(d);\n      return this.getDateDisplay(dateObj);\n\n      // const momentObj = this.convertToMoment(d);\n      // return this.getDateDisplay(new Date(momentObj));\n   }\n\n   getFormat() {\n      let dateFormatString = \"\";\n\n      const dateFormat =\n         this.settings && this.settings.dateFormat\n            ? this.settings.dateFormat\n            : \"\";\n\n      switch (dateFormat) {\n         //Ignore Date\n         case (1, 2):\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n         //mm/dd/yyyy\n         case 3:\n            {\n               dateFormatString = \"%m/%d/%Y\";\n            }\n            break;\n         //M D, yyyy\n         case 4:\n            {\n               dateFormatString = \"%M %d, %Y\";\n            }\n            break;\n         //D M, yyyy\n         case 5:\n            {\n               dateFormatString = \"%d %M, %Y\";\n            }\n            break;\n         default:\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n      }\n\n      return dateFormatString;\n   }\n\n   getDateDisplay(dateData) {\n      const dateFormat = this.getFormat();\n\n      return this.dateToString(dateFormat, dateData);\n   }\n\n   // convertToMoment(string) {\n   //    const result = moment(string);\n\n   //    const supportFormats = [\n   //       \"DD/MM/YYYY\",\n   //       \"MM/DD/YYYY\",\n   //       \"DD-MM-YYYY\",\n   //       \"MM-DD-YYYY\"\n   //    ];\n\n   //    supportFormats.forEach((format) => {\n   //       if (!result || !result.isValid()) result = moment(string, format);\n   //    });\n\n   //    return result;\n   // }\n\n   exportValue(value) {\n      return value\n         ? this.AB.rules.toDateFormat(value, {\n              format: \"YYYY-MM-DD\",\n           })\n         : \"\";\n      // return this.convertToMoment(value).format(\"YYYY-MM-DD\");\n   }\n\n   dateToString(dateFormat, dateData) {\n      if (dateData && dateData.toString) return dateData.toString();\n      else return \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n","/*\n * ABFieldDateTime\n *\n * An ABFieldDateTime defines a datetime field type.\n *\n */\n\nconst ABFieldDateCore = require(\"./ABFieldDateCore\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"datetime\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from date & time.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"clock-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'clock-o'  to\n   // reference 'clock-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date & Time\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"datetime\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"datetime\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   timeFormat: 2, // 1 (Ignore time), 2, 3\n   defaultTime: 1, // 1 (None), 2 (Current Time), 3 (Specific Time)\n   defaultTimeValue: null, // {Date}\n};\n\nmodule.exports = class ABFieldDateTimeCore extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object, ABFieldDateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      const baseDefault = super.defaultValues();\n      return Object.assign(baseDefault, defaultValues);\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.timeFormat = parseInt(this.settings.timeFormat);\n      this.settings.defaultTime = parseInt(this.settings.defaultTime);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      super.defaultValue(values);\n\n      let dateResult;\n\n      // From default value of ABFieldDateCore\n      if (values[this.columnName]) {\n         dateResult = this.AB.rules.toDate(values[this.columnName]);\n         // const momentVal = this.convertToMoment(values[this.columnName]);\n         // if (momentVal.isValid()) {\n         //    dateResult = new Date(momentVal);\n         // }\n      }\n\n      // Set current time as default\n      if (this.settings.defaultTime == 2) {\n         const currDate = new Date();\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(currDate.getHours());\n         dateResult.setMinutes(currDate.getMinutes());\n         dateResult.setSeconds(currDate.getSeconds());\n         dateResult.setMilliseconds(currDate.getMilliseconds());\n      }\n      // Set specific time as default\n      else if (\n         this.settings.defaultTime == 3 &&\n         this.settings.defaultTimeValue\n      ) {\n         const defaultTime = new Date(this.settings.defaultTimeValue);\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(defaultTime.getHours());\n         dateResult.setMinutes(defaultTime.getMinutes());\n         dateResult.setSeconds(defaultTime.getSeconds());\n         dateResult.setMilliseconds(defaultTime.getMilliseconds());\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null)\n         values[this.columnName] = dateResult.toISOString();\n   }\n\n   getFormat() {\n      const timeFormat = this.getTimeFormat();\n\n      this.settings = this.settings || {};\n\n      if (this.settings.dateFormat == 1) {\n         return timeFormat;\n      }\n\n      const dateFormat = super.getFormat();\n\n      return `${dateFormat} ${timeFormat}`;\n   }\n\n   format(rowData) {\n      const datetimeFormat = this.getFormat();\n      const d = this.dataValue(rowData);\n      const dateObj = this.AB.rules.toDate(d);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      if (this.AB.Webix)\n         return this.AB.Webix.Date.dateToStr(datetimeFormat)(dateObj);\n      else\n         return dateObj?.toISOString() ?? \"\";\n   }\n\n   getTimeFormat() {\n      this.settings = this.settings || {};\n      switch (this.settings.timeFormat) {\n         case 2:\n            return \" %h:%i %A\";\n         case 3:\n            return \" %H:%i\";\n         default:\n            return \"\";\n      }\n   }\n\n   /**\n    * @method exportValue\n    * @param {Date} date\n    * @return {string}\n    */\n   exportValue(date) {\n      return date?.toISOString?.() ?? \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx =\n   \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n","/*\n * ABFieldEmail\n *\n * An ABFieldEmail defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldEmailDefaults = {\n   key: \"email\",\n   // unique key to reference this specific DataField\n\n   description: \"Email fields are used to store email addresses.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"envelope\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'envelope'  to\n   // reference 'fa-envelope'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Email\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: \"\",\n   defaultCheckbox: 0,\n};\n\nmodule.exports = class ABFieldEmailCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldEmailDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldEmailDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            values[this.columnName] = this.settings.default;\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      if (data[this.columnName]) {\n         const Reg =\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n         let value = data[this.columnName];\n         value = String(value).toLowerCase();\n         if (!Reg.test(value)) {\n            validator.addError(this.columnName, \"Invalid email\");\n         }\n      }\n   }\n};\n","/*\n * ABFieldFile\n *\n * An ABFieldFile defines a File field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFileDefaults = {\n   key: \"file\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach a File to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file'  to\n   // reference 'fa-file'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"File Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   removeExistingData: 0,\n   fileSize: 0,\n   fileType: \"\",\n};\n\nmodule.exports = class ABFieldFileCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFileDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFileDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.fileSize = parseInt(this.settings.fileSize);\n      this.settings.limitFileSize = parseInt(this.settings.limitFileSize);\n      this.settings.limitFileType = parseInt(this.settings.limitFileType);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method dataValue\n    * return the file data stored as part of this field.\n    *\n    * An ABFieldFile column contains a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * This will return the json object.\n    * @param {obj} values a key=>value hash of the current values.\n    * @return {obj} { uuid, filename }, or {} if empty.\n    */\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = rowData[this.columnName] || rowData[propName] || {};\n      if (typeof result == \"string\") {\n         try {\n            result = JSON.parse(result);\n         } catch (err) {\n            // ignore error\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    *\n    * An ABFieldFile expects a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * For a default value, we return an empty json object: \"{}\"\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"{}\";\n   }\n\n   format(rowData) {\n      let result = this.dataValue(rowData);\n      if (result) {\n         if (typeof result == \"string\") {\n            try {\n               result = JSON.parse(result);\n            } catch (err) {\n               // ignore error.\n            }\n         }\n\n         // return file name\n         return result ? result.filename || \"\" : \"\";\n      } else {\n         return \"\";\n      }\n   }\n\n   /**\n    * @method requestParam\n    * return the entry in the given input that relates to this field.\n    * @param {obj} allParameters  a key=>value hash of the inputs to parse.\n    * @return {obj} or undefined\n    */\n   requestParam(allParameters) {\n      const myParameter = super.requestParam(allParameters);\n\n      // if we have our default empty object, then remove the entry\n      // and let the DB insert a null value.\n      let val = myParameter?.[this.columnName];\n      if (val == \"{}\" || val == \"\") {\n         delete myParameter[this.columnName];\n      }\n      if (\"string\" === typeof val) {\n         try {\n            myParameter[this.columnName] = JSON.parse(val);\n         } catch (e) {\n            /* ignore */\n         }\n      }\n\n      return myParameter;\n   }\n};\n","/*\n * ABFieldFormula\n *\n * An ABFieldFormula are used to run calculations on connected (child) records\n * and store the total of that calculation in the parent.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldFormulaDefaults = {\n   key: \"formula\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Perform a calculation by a formula type based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"circle-o-notch\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'circle-o-notch'  to\n   // reference 'fa-circle-o-notch'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportQuery: (field) => {\n      const fieldLink = field.fieldLink;\n      if (fieldLink == null) return false;\n\n      // Not support calculate field in query\n      return fieldLink.key !== \"calculate\";\n   },\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   field: \"\", // id of ABField : NOTE - store our connect field to support when there are multi - linked columns\n   objectLink: \"\", // id of ABObject\n   fieldLink: \"\", // id of ABField\n   type: \"sum\", // \"sum\", \"average\", \"max\", \"min\", \"count\"\n   where: \"\",\n};\n\nmodule.exports = class ABFieldFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFormulaDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method format\n    * both calculate and format the data input based of user settings\n    * for this field.\n    * @param {obj} rowData\n    *        a key=>value hash of the current values.\n    * @param {boolean} reCalculate\n    *        a boolean that signals if we should force recalculation of values\n    */\n   format(rowData, reCalculate = false, isGrouped = false) {\n      const fieldLink = this.fieldLink;\n\n      const reformat = (numData) => {\n         // ABFieldCalculate does not need to .format again\n         if (!fieldLink || fieldLink.key == \"calculate\") {\n            return numData;\n         } else {\n            const rowDataFormat = {};\n            rowDataFormat[fieldLink.columnName] = numData;\n            return fieldLink.format(rowDataFormat);\n         }\n      };\n\n      // if data exists, then will not calculate on client side\n      // unless we pass reCalculate=true to force the recalculation\n      if (rowData[this.columnName] != null && !reCalculate && !isGrouped) {\n         // reformat data\n         return reformat(rowData[this.columnName]);\n      } else if (\n         rowData[this.columnName] != null &&\n         !reCalculate &&\n         isGrouped\n      ) {\n         return rowData[this.columnName];\n      }\n\n      if (!fieldLink) return 0;\n\n      const fieldBase = this.fieldBase();\n      if (!fieldBase) return 0;\n\n      let data =\n         rowData[fieldBase.relationName()] ||\n         rowData[fieldBase.columnName] ||\n         [];\n      if (!Array.isArray(data)) data = [data];\n\n      // Filter\n      if (\n         data &&\n         data.length &&\n         this.settings &&\n         this.settings.where &&\n         this.settings.where.rules &&\n         this.settings.where.rules.length\n      ) {\n         this.filterHelper.setValue(this.settings.where);\n         data = data.filter((item) => this.filterHelper.isValid(item));\n      }\n\n      let numberList = [];\n\n      // pull number from data\n      switch (fieldLink.key) {\n         case \"calculate\":\n            data.forEach((d) => {\n               numberList.push(parseFloat(fieldLink.format(d) || 0));\n            });\n            break;\n         case \"number\":\n            numberList = data.map((d) => d[fieldLink.columnName] || 0);\n            break;\n      }\n\n      let result = 0;\n\n      // get the decimal size of the numbers being calculated\n      const decimalSize = fieldLink.getDecimalSize();\n\n      // calculate\n      switch (this.settings.type) {\n         case \"sum\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               result = sum / multiplier;\n            }\n            break;\n\n         case \"average\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               // and divide by length to get the average\n               result = sum / multiplier / numberList.length;\n            }\n            break;\n\n         case \"max\":\n            result = Math.max(...numberList) || 0;\n            break;\n         case \"min\":\n            result = Math.min(...numberList) || 0;\n            break;\n         case \"count\":\n            result = numberList.length;\n            break;\n      }\n\n      rowData[this.columnName] = result;\n\n      // ABFieldCalculate does not need to .format again\n      if (fieldLink.key == \"calculate\") {\n         return result;\n      } else {\n         return reformat(result);\n      }\n   }\n\n   fieldBase() {\n      return this.object.fieldByID(this.settings.field);\n   }\n\n   get fieldLink() {\n      const obj = this.AB.objectByID(this.settings.object);\n      if (!obj) return null;\n\n      const field = obj.fieldByID(this.settings.fieldLink);\n      if (!field) return null;\n\n      return field;\n   }\n\n   get filterHelper() {\n      if (this._rowFilter == null) {\n         this._rowFilter = this.AB.filterComplexNew(`${this.id}_filterComplex`);\n\n         if (this.fieldLink && this.fieldLink.object) {\n            this._rowFilter.fieldsLoad(this.fieldLink.object.fields());\n            this._rowFilter.setValue(this.settings.where);\n         }\n      }\n\n      return this._rowFilter;\n   }\n};\n","/*\n * ABFieldImageCore\n *\n * An ABFieldImage defines a Image field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldImageDefaults = {\n   key: \"image\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach an image to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file-image-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file-image-o'  to\n   // reference 'fa-file-image-o'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Image Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   useWidth: 0,\n   imageWidth: \"\",\n   useHeight: 0,\n   imageHeight: \"\",\n   removeExistingData: 0,\n   useDefaultImage: false,\n   defaultImageUrl: \"\",\n};\n\nmodule.exports = class ABFieldImageCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldImageDefaults);\n\n      // NOTE: our Labels are ready here:\n      // if (\n      //    ABFieldImageDefaults.menuName == \"*Image Attachment\" &&\n      //    this.AB.Label\n      // ) {\n      //    const L = this.AB.Label();\n      //    ABFieldImageDefaults.menuName = L(\"Image Attachment\");\n      //    ABFieldImageDefaults.description = L(\"Attach an image to this object.\");\n      // }\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'useWidth':0,\n\t\t\t\t'imageWidth':'',\n\t\t\t\t'useHeight': 0,\n\t\t\t\t'imageHeight': '',\n\t\t\t\t'removeExistingData': 0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldImageDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.useWidth = parseInt(this.settings.useWidth);\n      this.settings.useHeight = parseInt(this.settings.useHeight);\n      this.settings.imageWidth = parseInt(this.settings.imageWidth);\n      this.settings.imageHeight = parseInt(this.settings.imageHeight);\n      this.settings.useDefaultImage = parseInt(this.settings.useDefaultImage);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldJson\n *\n * An ABFieldJson defines a JSON field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldJsonDefaults = {\n   key: \"json\",\n   // unique key to reference this specific DataField\n\n   description: \"JSON value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"JSON\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"json\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"json\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {};\n\nmodule.exports = class ABFieldJsonCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldJsonDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldJsonDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // in the case of a JSON data type, we should NOT insert a \"\"\n      //\n      // values[this.columnName] = \"\";\n   }\n};\n","/*\n * ABFieldListCore\n *\n * An ABFieldList defines a select list field type.\n *\n */\n\n// const ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldListDefaults = {\n   key: \"list\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Select list allows you to select predefined options below from a dropdown.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"th-list\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'th-list'  to\n   // reference 'fa-th-list'\n\n   isFilterable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Select list\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"char\",\n      \"varchar\",\n      \"tinytext\" /* \"text\", \"mediumtext\" */,\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   hasColors: (field) => {\n      if (field.settings.hasColors) {\n         return true;\n      } else {\n         return false;\n      }\n   },\n};\n\nconst defaultValues = {\n   isMultiple: 0,\n   // {bool}\n   // can multiple values be selected?\n\n   hasColors: 0,\n   // {bool}\n   // are we to display our values in colors?\n\n   options: [],\n   // {array}\n   // The options defined for this list:\n   // [ { id, text, hex, translations },...]\n   //    .id {string} a unique id for this value\n   //    .text {string} the displayed text of this value\n   //    .hex {string} a color hex definition for this value\n   //    .translations {obj} the multilingual definitions for this value.\n\n   default: \"none\",\n   multipleDefault: [],\n};\n\nmodule.exports = class ABFieldListCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldListDefaults);\n\n      this.pendingDeletions = [];\n      // {array}\n      // a list of pending option deletions that need to be processed\n      // when this is saved.\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldListDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.hasColors = parseInt(this.settings.hasColors);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      obj.settings.options.forEach((opt) => {\n         this.unTranslate(opt, opt, [\"text\"]);\n      });\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Multiple select list\n      if (this.settings.isMultiple == true) {\n         let defaultVals = [];\n         this.settings.multipleDefault.forEach((def) => {\n            this.settings.options.forEach((opt) => {\n               if (opt.id == def.text) {\n                  defaultVals.push(opt);\n               }\n            });\n         });\n         values[this.columnName] = defaultVals || [];\n      }\n      // Single select list\n      else if (this.settings.default && this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   /**\n    * @method options\n    * Return an array of [{ id, text }] options defined by this field.\n    * @return {array}\n    */\n   options() {\n      return this.settings.options.map((opt) => {\n         return {\n            id: opt.id,\n            text: opt.text,\n            hex: opt.hex ? opt.hex : \"\",\n            translations: opt.translations ? opt.translations : \"\",\n         };\n      });\n   }\n\n   format(rowData, options = {}) {\n      let val = this.dataValue(rowData) || [];\n\n      if (typeof val == \"string\") {\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // continue regardless of error\n         }\n      }\n\n      // Convert to array\n      if (!Array.isArray(val)) val = [val];\n\n      const displayOpts = this.settings.options\n         .filter((opt) => val.filter((v) => (v.id || v) == opt.id).length > 0)\n         .map((opt) => {\n            let text = opt.text;\n            const languageCode = options.languageCode || \"en\";\n\n            // Pull text of option with specify language code\n            const optTran = (opt.translations || []).filter(\n               (o) => o.language_code == languageCode\n            )[0];\n            if (optTran) text = optTran.text;\n\n            return text;\n         });\n\n      return displayOpts.join(\", \");\n   }\n};\n","/*\n * ABFieldLongText\n *\n * An ABFieldLongText defines a LongText field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 5000;\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldLongTextDefaults = {\n   key: \"LongText\", // unique key to reference this specific DataField\n\n   description: \"Multiple lines of text\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"align-right\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'align-right'  to\n   // reference 'fa-align-right'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Long text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"longtext\", \"mediumtext\", \"text\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldLongText can be.\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldLongText extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldLongTextDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldLongTextDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n\n      // we're responsible for setting up our specific settings:\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         if (this.object)\n            this.object.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual)\n         if (this.object)\n            this.object.unTranslate(obj.settings, obj.settings, [\"default\"]);\n         else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null) {\n         if (typeof this.settings.default == \"string\") {\n            values[this.columnName] = this.settings.default;\n         } else {\n            values[this.columnName] = \"\";\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            `should NOT be longer than ${MAX_CHAR_LENGTH} characters`\n         );\n      }\n   }\n};\n","/*\n * ABFieldNumber\n *\n * An ABFieldNumber defines a Number field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldNumberDefaults = {\n   key: \"number\",\n   // unique key to reference this specific DataField\n\n   description: \"A Float or Integer Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"hashtag\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'hashtag'  to\n   // reference 'fa-hashtag'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Number\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   // 'allowRequired': 0,\n   default: \"\",\n   typeFormat: \"none\",\n   typeDecimals: \"none\",\n   typeDecimalPlaces: 0,\n   typeRounding: \"none\",\n   typeThousands: \"none\",\n   validation: 0,\n   validateMinimum: \"\",\n   validateMaximum: \"\",\n};\n\nlet L = null; //AB.Label();\n\nmodule.exports = class ABFieldNumberCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldNumberDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'allowRequired':0,\n\t\t\t\t'default':null,\n\t\t\t\t'typeFormat': 'none',\n\t\t\t\t'typeDecimals': 'none',\n\t\t\t\t'typeDecimalPlaces': 'none',\n\t\t\t\t'typeRounding' : 'none',\n\t\t\t\t'typeThousands': 'none',\n\t\t\t\t'validation':0,\n\t\t\t\t'validateMinimum':null,\n\t\t\t\t'validateMaximum':null\n\t\t\t}\n    \t}\n    \t*/\n      if (!L) {\n         L = this.AB.Label();\n      }\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldNumberDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static formatList(iL) {\n      if (iL && !L) L = iL;\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"dollar\",\n            value: L(\"$\"),\n            sign: \"$\",\n            position: \"prefix\",\n         },\n         {\n            id: \"yen\",\n            value: L(\"¥\"),\n            sign: \"¥\",\n            position: \"prefix\",\n         },\n         {\n            id: \"pound\",\n            value: L(\"£\"),\n            sign: \"£\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroBefore\",\n            value: L(\"€ (before)\"),\n            sign: \"€\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroAfter\",\n            value: L(\"€ (after)\"),\n            sign: \"€\",\n            position: \"postfix\",\n         },\n         {\n            id: \"percent\",\n            value: L(\"%\"),\n            sign: \"%\",\n            position: \"postfix\",\n         },\n      ];\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"comma\",\n            value: L(\"Comma\"),\n            sign: \",\",\n         },\n         {\n            id: \"period\",\n            value: L(\"Period\"),\n            sign: \".\",\n         },\n         {\n            id: \"space\",\n            value: L(\"Space\"),\n            sign: \" \",\n         },\n      ];\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      // this.settings.allowRequired = parseInt(this.settings.allowRequired);\n      this.settings.validation = parseInt(this.settings.validation);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      // const L = this.AB.Label();\n\n      if (data[this.columnName] != null && data[this.columnName] != \"\") {\n         let value = data[this.columnName];\n\n         // if this is an integer:\n         if (this.settings.typeDecimals == \"none\") {\n            value = parseInt(value);\n         } else {\n            const places = parseInt(this.settings.typeDecimalPlaces) || 2;\n            value = parseFloat(parseFloat(value).toFixed(places));\n         }\n\n         const isNumeric = (n) => {\n            return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n         };\n         if (!isNumeric(value)) {\n            validator.addError(this.columnName, L(\"invalid number\"));\n         }\n\n         // validate Minimum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMinimum != null &&\n            this.settings.validateMinimum > value\n         ) {\n            const errMessage = L(\"should be greater than {0}\", [\n               this.settings.validateMinimum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n\n         // validate Maximum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMaximum != null &&\n            this.settings.validateMaximum < value\n         ) {\n            const errMessage = L(\"should be less than {0}\", [\n               this.settings.validateMaximum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n      }\n   }\n\n   format(rowData) {\n      if (\n         rowData?.[this.columnName] == null ||\n         (rowData[this.columnName] !== 0 && rowData[this.columnName] == \"\")\n      )\n         return \"\";\n\n      let data = rowData[this.columnName] || 0;\n\n      if (typeof data == \"string\") {\n         data = data.replace(/,/g, \"\");\n      }\n\n      // Validate number\n      if (isNaN(parseFloat(data))) data = 0;\n\n      const formatSign = this.constructor\n         .formatList()\n         .filter((item) => item.id == this.settings.typeFormat)[0];\n      const decimalPlaces =\n         this.settings.typeDecimalPlaces != \"none\"\n            ? parseInt(this.settings.typeDecimalPlaces)\n            : 0;\n\n      let thousandsSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeThousands)[0];\n      let decimalSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeDecimals)[0];\n      let prefix = \"\";\n      let postfix = \"\";\n\n      if (formatSign && formatSign.sign) {\n         switch (formatSign.position) {\n            case \"prefix\":\n               prefix = formatSign.sign;\n               break;\n            case \"postfix\":\n               postfix = formatSign.sign;\n               break;\n         }\n      }\n\n      decimalSign = decimalSign.sign || \"\";\n      thousandsSign = thousandsSign.sign || \"\";\n\n      // round number\n      if (this.settings.typeRounding == \"roundDown\") {\n         const digit = Math.pow(10, decimalPlaces);\n         data = Math.floor(data * digit) / digit;\n      }\n\n      const number = this.formatNumber(data, {\n         groupDelimiter: thousandsSign,\n         groupSize: 3,\n         decimalDelimiter: decimalSign,\n         decimalSize: decimalPlaces,\n      });\n\n      return `${prefix} ${number} ${postfix}`;\n   }\n\n   formatNumber(data, options = {}) {\n      if (data === \"\" || data == null) return data;\n\n      data = parseFloat(data);\n      const negativeSign = data < 0 ? \"-\" : \"\";\n      data = Math.abs(data);\n\n      const dataStr = data.toString();\n      const integerStr = dataStr.split(\".\")[0];\n      const decimalStr = dataStr.split(\".\")[1];\n\n      let integerValue = \"\";\n\n      // Thousands digit sign\n      if (options.groupDelimiter) {\n         const step = 3;\n         let i = integerStr.length;\n\n         do {\n            i -= step;\n            const chunk =\n               i > 0\n                  ? integerStr.substr(i, step)\n                  : integerStr.substr(0, step + i);\n            integerValue = `${chunk}${\n               integerValue ? options.groupDelimiter + integerValue : \"\"\n            }`;\n         } while (i > 0);\n      } else {\n         integerValue = integerStr;\n      }\n\n      // Integer\n      let result = `${negativeSign}${integerValue}`;\n\n      // Decimal\n      if (decimalStr && options.decimalDelimiter && options.decimalSize) {\n         const decimalVal = data.toFixed(options.decimalSize).split(\".\")[1];\n         result += `${options.decimalDelimiter}${decimalVal}`;\n      }\n\n      return result;\n   }\n\n   getDecimalSize() {\n      if (this.settings.typeDecimalPlaces != \"none\") {\n         return parseInt(this.settings.typeDecimalPlaces);\n      } else {\n         return 0;\n      }\n   }\n};\n","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 255;\n\nconst ABFieldStringDefaults = {\n   key: \"string\",\n   // unique key to reference this specific DataField\n\n   description: \"short string value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Single line text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldString can be.\n};\n\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldStringCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldStringDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n        */\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldStringDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // we're responsible for setting up our specific settings:\n      this.settings.default = values.settings.default || defaultValues.default;\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         this.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual) {\n         this.unTranslate(obj.settings, obj.settings, [\"default\"]);\n      } else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data?.[this.columnName]?.length > MAX_CHAR_LENGTH) {\n         const L = this.AB.Label();\n         validator.addError(\n            this.columnName,\n            L(\"should NOT be longer than {0} characters\", [MAX_CHAR_LENGTH])\n         );\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n};\n","/*\n * ABFieldTextFormula\n *\n * An ABFieldTextFormula defines a TextFormula field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTextFormulaDefaults = {\n   key: \"TextFormula\",\n   // unique key to reference this specific DataField\n\n   description: \"Text Formula\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"question\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'question'  to\n   // reference 'fa-question'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Text Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   textFormula: \"\",\n   // {string} \"some text or text with formula ...\"\n   // This tells us what the formula we need to do with text included text string.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   // 'imageWidth':'',\n   // 'useHeight': 0,\n   // 'imageHeight': ''\n};\n\n/** Private methods */\n\n/**\n * @method setValueToFormula\n *\n * @param {ABOBject} object\n * @param {string} formulaString\n * @param {object} rowData\n */\n\nfunction setValueToFormula(object, formulaString, rowData) {\n   if (!formulaString) return;\n\n   const fieldRegExp = /{[^{}]+}/gm;\n   const matches_field_array = formulaString.match(fieldRegExp);\n   matches_field_array.forEach((element) => {\n      const columnName = element.replace(/{|}|\"/g, \"\");\n      object.fields().forEach((field) => {\n         if (field.columnName == columnName) {\n            if (field.key == \"AutoIndex\") {\n               //Check AutoIndex Field\n               const autoIndexVal = field.format(rowData) || 0;\n               formulaString = formulaString.replace(element, autoIndexVal);\n            } else if (field.key == \"calculate\") {\n               //Calculate Field\n               const calVal = `(${field.format(rowData) || 0})`;\n               formulaString = formulaString.replace(element, eval(calVal));\n            } else if (field.key == \"date\") {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName]\n                     ? field.exportValue(rowData[columnName])\n                     : \"\"\n               );\n            } else {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName] ? field.format(rowData) : \"\"\n               );\n            }\n         }\n      });\n   });\n\n   return formulaString;\n}\n\n/**\n * @method setBuildinValueToFormula\n *\n * @param {ABFactory} AB\n * @param {string} formulaString\n */\n\nfunction setBuildinValueToFormula(AB, formulaString) {\n   const buildInRegExp = /\\w+\\(.*?\\)/gm;\n   const matches_buildin_array = formulaString.match(buildInRegExp);\n   if (matches_buildin_array) {\n      const buildinList = getBuildInFunction();\n      matches_buildin_array.forEach((element) => {\n         const formula_array = element.split(/\\(|\\)/);\n         const isBracketInBracket =\n            formula_array.length > 2 && formula_array[2] != \"\";\n         const functionName = formula_array[0];\n         const parameters_array = formula_array[1].split(\",\");\n         let isMatch = false;\n         for (let i = 0; i < buildinList.length; i++) {\n            let resultParameters = element;\n            if (functionName == buildinList[i].id) {\n               if (parameters_array.length == buildinList[i].parameter_size) {\n                  switch (functionName) {\n                     case \"left\":\n                        resultParameters = getLeft(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"right\":\n                        resultParameters = getRight(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"mid\":\n                        resultParameters = getMid(\n                           parameters_array[0],\n                           parameters_array[1],\n                           parameters_array[2]\n                        );\n                        break;\n                     case \"trim\":\n                        resultParameters = getTrim(parameters_array[0]);\n                        break;\n                     case \"trimLeft\":\n                        resultParameters = getTrimLeft(parameters_array[0]);\n                        break;\n                     case \"trimRight\":\n                        resultParameters = getTrimRight(parameters_array[0]);\n                        break;\n                     case \"length\":\n                        resultParameters = getLength(parameters_array[0]);\n                        break;\n                     case \"regexReplace\":\n                        resultParameters = getRegExpReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"extractRegex\":\n                        resultParameters = getExtractRegex(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     case \"replace\":\n                        resultParameters = getReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"lower\":\n                        resultParameters = getLower(parameters_array[0]);\n                        break;\n                     case \"upper\":\n                        resultParameters = getUpper(parameters_array[0]);\n                        break;\n                     case \"capitalize\":\n                        resultParameters = getCapitalize(parameters_array[0]);\n                        break;\n                     case \"random\":\n                        resultParameters = getRandom(parameters_array[0]);\n                        break;\n                     case \"numberToWords\":\n                        resultParameters = getNumberToWords(\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateDayOfWeekName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateDayOfWeekName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateMonthOfYearName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateMonthOfYearName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"formatDate\":\n                        resultParameters = getFormatDate(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     default:\n                        break;\n                  }\n                  isMatch = true;\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n                  return;\n               } else {\n                  resultParameters = functionName + \"(Bad Parameter)\";\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n               }\n            }\n         }\n      });\n   }\n   return formulaString;\n}\n\nfunction getBuildInFunction() {\n   const functionList = [\n      {\n         id: \"left\",\n         value: \"left({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"right\",\n         value: \"right({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"mid\",\n         value: \"mid({COLUMN_NAME}, 1, 1)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"trim\",\n         value: \"trim({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimLeft\",\n         value: \"trimLeft({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimRight\",\n         value: \"trimRight({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"length\",\n         value: \"length({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"regexReplace\",\n         value: \"regexReplace({COLUMN_NAME}, [*], REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"extractRegex\",\n         value: \"extractRegex({COLUMN_NAME}, [*])\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"replace\",\n         value: \"replace({COLUMN_NAME}, SEARCH_VALUE, REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"lower\",\n         value: \"lower({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"upper\",\n         value: \"upper({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"capitalize\",\n         value: \"capitalize({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      { id: \"random\", value: \"random(1)\", type: \"build-in\", parameter_size: 1 },\n      {\n         id: \"numberToWords\",\n         value: \"numberToWords({NUMBER_COLUMN} or 012...)\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateDayOfWeekName\",\n         value: \"getDateDayOfWeekName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateMonthOfYearName\",\n         value: \"getDateMonthOfYearName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"formatDate\",\n         value: \"formatDate({DATE_COLUMN}, OUTPUT_FORMAT)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n   ];\n   return functionList;\n}\n\nfunction getLeft(string, endPosition) {\n   return string.substring(0, parseInt(endPosition));\n}\n\nfunction getRight(string, endposition) {\n   const reverseStr = reverseString(string).substring(0, parseInt(endposition));\n   return reverseString(reverseStr);\n}\n\nfunction reverseString(string) {\n   return string.split(\" \").reverse().join(\" \");\n}\n\nfunction getMid(string, startPosition, length) {\n   if (string.length < startPosition) return \"mid(Bad Parameter)\";\n   return string.substring(\n      parseInt(startPosition),\n      parseInt(startPosition) + parseInt(length)\n   );\n}\n\nfunction getTrim(string) {\n   return string.trim();\n}\n\nfunction getTrimLeft(string) {\n   return string.trimLeft();\n}\n\nfunction getTrimRight(string) {\n   return string.trimRight();\n}\n\nfunction getLength(string) {\n   return string.length;\n}\n\nfunction getRegExpReplace(string, regexp, replaceString) {\n   return string.replace(regexp, replaceString);\n}\n\nfunction getExtractRegex(string, regexp) {\n   const extractResult = string.match(regexp);\n   if (Array.isArray(extractResult)) {\n      return extractResult[0];\n   }\n   return extractResult;\n}\n\nfunction getReplace(string, searchValue, replaceValue) {\n   return string.replace(searchValue, replaceValue);\n}\n\nfunction getLower(string) {\n   return string.toLowerCase();\n}\n\nfunction getUpper(string) {\n   return string.toUpperCase();\n}\n\nfunction getCapitalize(string) {\n   return string\n      .toLowerCase()\n      .split(\" \")\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(\" \");\n}\n\nfunction getRandom(max) {\n   return Math.floor(Math.random() * (max + 1));\n}\n\nfunction getNumberToWords(number) {\n   const string = number.trim(\",\").toString();\n\n   let units,\n      tens,\n      scales,\n      start,\n      end,\n      chunks,\n      chunksLen,\n      chunk,\n      ints,\n      i,\n      word,\n      words;\n\n   const and = \"\";\n\n   /* Is number zero? */\n   if (parseInt(string) === 0) {\n      return \"zero\";\n   }\n\n   /* Array of units as words */\n   units = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n      \"ten\",\n      \"eleven\",\n      \"twelve\",\n      \"thirteen\",\n      \"fourteen\",\n      \"fifteen\",\n      \"sixteen\",\n      \"seventeen\",\n      \"eighteen\",\n      \"nineteen\",\n   ];\n\n   /* Array of tens as words */\n   tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n   ];\n\n   /* Array of scales as words */\n   scales = [\n      \"\",\n      \"thousand\",\n      \"million\",\n      \"billion\",\n      \"trillion\",\n      \"quadrillion\",\n      \"quintillion\",\n      \"sextillion\",\n      \"septillion\",\n      \"octillion\",\n      \"nonillion\",\n      \"decillion\",\n      \"undecillion\",\n      \"duodecillion\",\n      \"tredecillion\",\n      \"quatttuor-decillion\",\n      \"quindecillion\",\n      \"sexdecillion\",\n      \"septen-decillion\",\n      \"octodecillion\",\n      \"novemdecillion\",\n      \"vigintillion\",\n      \"centillion\",\n   ];\n\n   /* Split user arguemnt into 3 digit chunks from right to left */\n   start = string.length;\n   chunks = [];\n   while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n   }\n\n   /* Check if function has enough scale words to be able to stringify the user argument */\n   chunksLen = chunks.length;\n   if (chunksLen > scales.length) {\n      return \"\";\n   }\n\n   /* Stringify each integer in each chunk */\n   words = [];\n   for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n\n      if (chunk) {\n         /* Split chunk into array of individual integers */\n         ints = chunks[i].split(\"\").reverse().map(parseFloat);\n\n         /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n         if (ints[1] === 1) {\n            ints[0] += 10;\n         }\n\n         /* Add scale word if chunk is not zero and array item exists */\n         if ((word = scales[i])) {\n            words.push(word);\n         }\n\n         /* Add unit word if array item exists */\n         if ((word = units[ints[0]])) {\n            words.push(word);\n         }\n\n         /* Add tens word if array item exists */\n         if ((word = tens[ints[1]])) {\n            words.push(word);\n         }\n\n         /* Add 'and' string after units or tens integer if: */\n         if (ints[0] || ints[1]) {\n            /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n            if (ints[2] || (!i && chunksLen)) {\n               words.push(and);\n            }\n         }\n\n         /* Add hundreds word if array item exists */\n         if ((word = units[ints[2]])) {\n            words.push(word + \" hundred\");\n         }\n      }\n   }\n\n   return words.reverse().join(\" \");\n}\n\nfunction getDateDayOfWeekName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"dddd\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"dddd\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getDateMonthOfYearName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"MMMM\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"MMMM\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getFormatDate(date, format) {\n   const dt = new Date(date);\n   return dt.toString(format);\n}\n\nmodule.exports = class ABFieldTextFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldTextFormulaDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n      // // text to Int:\n      // this.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTextFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getBuildInFunction() {\n      return getBuildInFunction();\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default value\n         // values[this.columnName] = this.settings.DEFAULT_VALUE;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      validator = super.isValid();\n\n      // validator.addError(this.columnName, L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      // return this.settings.supportMultilingual == 1;\n      return false;\n   }\n\n   format(rowData) {\n      try {\n         if (!this.settings.textFormula) return \"\";\n\n         let resultFormula = this.settings.textFormula;\n\n         //Set Field value first\n         resultFormula = setValueToFormula(this.object, resultFormula, rowData);\n\n         //then Check Build-in Function\n         resultFormula = setBuildinValueToFormula(this.AB, resultFormula);\n\n         return resultFormula;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n//// NOTE: if you need a unique [edit_type] by your returned config.editor above:\n// webix.editors = {\n//   \"[edit_type]\": {\n//     focus: function () {...}\n//     getValue: function () {...},\n//     setValue: function (value) {...},\n//     render: function () {...}\n//   }\n// };\n\n//// NOTE: if you need a unique [sort_type] by your returned config.sort above:\n// webix.DataStore.prototype.sorting.as.[sort_type] = function(a,b){\n//     return a > b ? 1 : -1;\n// }\n","/*\n * ABFieldTreeCore\n *\n * An ABFieldTree defines a select list field type.\n *\n */\n\nconst ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTreeDefaults = {\n   key: \"tree\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Data tree allows you to build a hierarchical set of selectable data. (ex: Categories and sub-categories)\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"sitemap\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'sitemap'  to\n   // reference 'fa-sitemap'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Data Tree\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   options: [],\n};\n\nmodule.exports = class ABFieldTreeCore extends ABFieldSelectivity {\n   constructor(values, object) {\n      super(values, object, ABFieldTreeDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTreeDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      if (obj.settings.options && obj.settings.options.length > 0) {\n         obj.settings.options.forEach((opt) => {\n            this.unTranslate(opt, opt, [\"text\"]);\n         });\n      }\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldUser\n *\n * An ABFieldUser defines a user field type.\n *\n */\n\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldUserDefaults = {\n   key: \"user\",\n   // unique key to reference this specific DataField\n\n   description: \"Add users to a record.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"user-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'user-o'  to\n   // reference 'fa-user-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"User\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   USERNAME_FIELD_ID: \"5760560b-c078-47ca-98bf-e18ac492a561\",\n   // {string} .uuid\n   // the ABField.id of the SiteUser.username field.  This is what other\n   // objects will link to in their ABFieldUser connections.\n};\n\nconst defaultValues = {\n   editable: 1,\n   isMultiple: 0,\n   isCurrentUser: 0,\n   isShowProfileImage: 0,\n   isShowUsername: 1,\n};\n\nmodule.exports = class ABFieldUserCore extends ABFieldConnect {\n   constructor(values, object) {\n      super(values, object, ABFieldUserDefaults);\n\n      this.isUser = true;\n      // {bool}\n      // is this an ABFieldUser type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of User field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldUserDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.editable = parseInt(this.settings.editable);\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.isCurrentUser = parseInt(this.settings.isCurrentUser);\n      this.settings.isShowProfileImage = parseInt(\n         this.settings.isShowProfileImage\n      );\n      this.settings.isShowUsername = parseInt(this.settings.isShowUsername);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   format(rowData) {\n      let val = this.dataValue(rowData) || [];\n\n      if (val && !Array.isArray(val)) val = [val];\n      if (!val) val = [];\n\n      return val.map((v) => v.username || v).join(\", \");\n   }\n};\n","/*\n * ABMobilePageCore\n *\n * An view that represents a \"Page\" on the Mobile Device.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABMobilePageDefaults = {\n   key: \"mobile-page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-'  )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\",\n   // {string}\n   // What type of \"Page\" this is: ['page', 'popup', 'reportPage']\n\n   defaultPage: 0,\n   // {bool} 1|0\n   // is this the default page for the Mobile App? If so, this is the initial\n   // Page that is displayed when the App is loaded.\n   // NOTE: there can be only 1 page defined in the app as .defaultPage\n\n   hideTitle: 0,\n   // {bool} 1|0\n   // By default we will display this.label as our Title. Set this to 1 to not\n   // show the tile on the page.\n\n   hideTabs: 0,\n   // {bool} 1|0\n   // By default, pages will show any Tab options on their display.  Set this\n   // to 1 to not show the tab options for this Page. (good for pages that\n   // are linkedPages with forms )\n};\n\nmodule.exports = class ABMobilePageCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMobilePageDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABMobilePage, but has\n      // different implications ... so we default an ABMobilePage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABMobilePageDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABMobilePage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n      obj.route = this.route;\n\n      obj.myAppID = this.myAppID;\n\n      obj.menuType = this.menuType;\n\n      obj.defaultPage = this.defaultPage;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const DV = ABPropertyComponentDefaults;\n\n      this.route =\n         values.route || (this.name || this.label).replaceAll(\" \", \"_\");\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      this.menuType = values.menuType || \"menu\";\n      // {string}  [\"menu\", \"tab\"]\n      // indicates if this Page was added as a Mobile App's \"menu\" or \"Tab\"\n\n      this.defaultPage = values.defaultPage || 0;\n      // {bool}  1|0\n      // indicates if this is the default page that is loaded when the mobile app\n      // is started.\n      // NOTE: only 1 Page in a Mobile App can have this setting = 1.\n\n      this.settings.hideTitle = parseInt(\n         values.settings.hideTitle ?? DV.hideTitle\n      );\n      // {bool} 1|0\n      // By default an ABMobilePage will display it's this.label for a title\n      // on the page.  Setting this to TRUE (1) will hide the title.\n\n      this.settings.hideTabs = parseInt(\n         values.settings.hideTabs ?? DV.hideTabs\n      );\n      // {bool} 1|0\n      // By default, pages will show any Tab options on their display.  Set this\n      // to 1 to not show the tab options for this Page. (good for pages that\n      // are linkedPages with forms )\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`,\n               {\n                  appID: this.application.id,\n                  pageID: this.id,\n                  missingPageID: id,\n               }\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      // this.settings.columns = this.settings.columns || 1;\n      // this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABMobilePage\n            // be sure to remove any of it's ABMobilePage as well\n            // This cleans out any dangling ABDefinitions\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABMobilePage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            // make sure .defaultPage is properly set\n            if (this.defaultPage) {\n               return this.application.setPageDefault(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABMobilePage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance() {\n      console.warn(\n         \"This version of ABMobilePage hasn't updated it's refreshInstance()\",\n         this\n      );\n      return this;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABMobilePages for this ABMobilePage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABMobilePages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABMobilePages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         // if (this._pages && this._pages.length > 0) {\n         //    result = this._pages.filter(filter);\n\n         //    if (result.length < 1) {\n         //       this._pages.forEach((p) => {\n         //          var subPages = p.pages(filter, deep);\n         //          if (subPages && subPages.length > 0) {\n         //             result = subPages;\n         //          }\n         //       });\n         //    }\n         // }\n         result = this.application._searchDeep(this, \"_pages\", filter);\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABMobilePage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABMobilePage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABMobilePage that is tied to this\n    * ABMobilePage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABMobilePage}\n    */\n   pageNew(values) {\n      // make sure this is an ABMobilePage description\n      values.key = ABMobilePageDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABMobilePage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABMobilePage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages((p) => p.id != page.id);\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABMobilePageDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABMobilePage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABMobilePage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABMobileViewDefaults = {\n   key: \"mobile-view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABMobileViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABMobileViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABMobileViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || this.viewKey(),\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         // accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || this.viewKey();\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      // this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label =\n               this.parent.label +\n               \".\" +\n               (this.field?.()?.columnName ?? this.defaults.key);\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   // isAccessibleForRoles(roles) {\n   //    var foundRole = false;\n\n   //    var accessibleRoles = Object.keys(this.accessLevels) || [];\n   //    (roles || []).forEach((r) => {\n   //       if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n   //          foundRole = true;\n   //       }\n   //    });\n\n   //    return foundRole;\n   // }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   // getUserAccess() {\n   //    // by default everyone has no access\n   //    var accessLevel = 0;\n\n   //    if (this.application.isAccessManaged) {\n   //       // check to see if the current users is the access manager\n   //       var isAccessManager = false;\n   //       // first check if manager is defined by their role\n   //       if (parseInt(this.application.accessManagers.useRole) == 1) {\n   //          // if so check if any of the user's role match the managers\n   //          this.AB.Account.roles().forEach((role) => {\n   //             if (\n   //                this.application.accessManagers.role.indexOf(\n   //                   role.id || role.uuid\n   //                ) > -1\n   //             ) {\n   //                // if so set the access level to full access\n   //                isAccessManager = true;\n   //                accessLevel = 2;\n   //             }\n   //          });\n   //       }\n   //       // if the user isn't already set as the manager and the manager is defined by their account\n   //       if (\n   //          !isAccessManager &&\n   //          parseInt(this.application.accessManagers.useAccount) == 1\n   //       ) {\n   //          // check if the user's account matches the managers\n   //          if (\n   //             this.application.accessManagers.account.indexOf(\n   //                this.AB.Account.uuid() + \"\"\n   //             ) > -1\n   //          ) {\n   //             // if so set the access level to full access\n   //             isAccessManager = true;\n   //             accessLevel = 2;\n   //          }\n   //       }\n\n   //       // if the user is not the manager check if the page has access levels defined for roles\n   //       if (\n   //          this.accessLevels &&\n   //          Object.keys(this.accessLevels).length > 0 &&\n   //          !isAccessManager\n   //       ) {\n   //          // check to see if the user's roles matches one of the roles defined\n   //          this.AB.Account.roles().forEach((role) => {\n   //             var currentRole = this.accessLevels[role.id || role.uuid];\n   //             if (currentRole && parseInt(currentRole) > accessLevel)\n   //                // if the access level is higher than a previous role set to the new level\n   //                accessLevel = parseInt(currentRole);\n   //          });\n   //       }\n   //    } else {\n   //       accessLevel = 2;\n   //    }\n\n   //    return accessLevel;\n   // }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"mobile-form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"mobile-form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"mobile-detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"mobile-detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"mobile-page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\n               \"mobile-form\",\n               \"grid\",\n               \"line\",\n               \"area\",\n               \"bar\",\n               \"gantt\",\n               \"kanban\",\n            ].indexOf(this.key) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"mobile-form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\n                  \"button\",\n                  \"label\",\n                  \"mobile-page\",\n                  \"tab\",\n                  \"viewcontainer\",\n               ].indexOf(this.key) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `MobileView[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   // updateAccessLevels(roleId, accessLevel) {\n   //    if (parseInt(accessLevel) == 0) {\n   //       if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n   //    } else {\n   //       this.accessLevels[roleId] = accessLevel;\n   //    }\n\n   //    return this.save(false, false);\n   // }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         // result = result.concat(this._views.filter(filter));\n\n         // this._views.forEach((v) => {\n         //    var subViews = v.views(filter, deep);\n         //    if (subViews && subViews.length > 0) {\n         //       result = result.concat(subViews);\n         //    }\n         // });\n         result = this.application._searchDeep(this, \"_views\", filter);\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewByID()\n    *\n    * return the specific View referenced by the given ID.\n    *\n    * @param {uuid} ID\n    *        the {ABMobileView}.id of the child view we are requesting\n    *\n    * @return {ABMobileView || undefined}\n    */\n   viewByID(ID) {\n      return this.views((v) => v.id == ID, true)[0];\n   }\n\n   /**\n    * @method viewNew()\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   // viewDestroy(view) {\n   //    console.error(\"DEPRECIATED: where is this called?\");\n   //    return this.viewRemove(view);\n   // }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // the default widget doesn't.\n      // only those that actually do, should override this.\n      return false;\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"mobile-page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewCustomPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n   hideTitle: 0,\n   hideTabs: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-custom\", // {string} unique key for this view\n   icon: \"palette\", // {string} fa-[icon] reference for this view\n   labelKey: \"Custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCustomCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   // field() {\n   //    var dv = this.datacollection;\n   //    if (!dv) return null;\n\n   //    var object = dv.datasource;\n   //    if (!object) return null;\n\n   //    return object.fieldByID(this.settings.field);\n   // }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // we do if we have a setting for linkPageAdd\n      return this.settings.wantsAdd ?? false;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"mobile-button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormButtonCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      Object.keys(ABViewFormButtonPropertyComponentDefaults).forEach((k) => {\n         let val =\n            this.settings[k] ?? ABViewFormButtonPropertyComponentDefaults[k];\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // just ignore the error and save val\n         }\n         this.settings[k] = val;\n      });\n\n      // this.settings.includeSave = JSON.parse(\n      //    this.settings.includeSave ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeSave\n      // );\n      // this.settings.includeCancel = JSON.parse(\n      //    this.settings.includeCancel ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeCancel\n      // );\n      // this.settings.includeReset = JSON.parse(\n      //    this.settings.includeReset ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeReset\n      // );\n\n      // this.settings.isDefault = JSON.parse(\n      //    this.settings.isDefault ||\n      //       ABViewFormButtonPropertyComponentDefaults.isDefault\n      // );\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABMobileViewFormCheckboxDefaults = {\n   key: \"mobile-checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormCheckboxCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormCheckboxPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABMobileViewFormConnectDefaults = {\n   key: \"mobile-connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormConnectCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABMobileViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"mobile-form\", // unique key identifier for this ABMobileViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABMobileViewFormCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"mobile-label\", \"mobile-button\", \"mobile-text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    * return an array of all the ABViewFormField children\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewFormField that this fn\n    *\t       returns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) =>\n               comp instanceof this.AB.Class.ABMobileViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * @method addFieldToForm()\n    * Create a New Form Item on this Form from a given ABFieldXXX object.\n    * @param {ABFieldXXX} field\n    * @param {int} yPosition\n    * @return {ABMobileViewFormXXX}\n    */\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      // TODO: figure out how to decode the Data Field and return a form\n      // element.\n\n      var fieldComponent = field.formComponentMobile();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"mobile-fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormCustomCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormDatepickerDefaults = {\n   key: \"mobile-date\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormDatepickerCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormDatetimePropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormDatetimeDefaults = {\n   key: \"mobile-datetime\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"Date and Time\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormDatetimeCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormDatetimeDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormDatetimeDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormDatetimePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormEmailPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormEmailDefaults = {\n   key: \"mobile-email\", // {string} unique key for this view\n   icon: \"envelope\", // {string} fa-[icon] reference for this view\n   labelKey: \"Email\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormEmailCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormEmailDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormEmailDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormEmailPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormFilePropertyComponentDefaults = {};\n\nconst ABViewFormFileDefaults = {\n   key: \"mobile-file\",\n   // {string} unique key for this view\n   icon: \"file\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"file\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormFileCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormFileDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormFileDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormFilePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormFormulaPropertyComponentDefaults = {};\n\nconst ABViewFormFormulaDefaults = {\n   key: \"mobile-formula\",\n   // {string} unique key for this view\n   icon: \"circle-o-notch\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"Formula\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormFormulaCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormFormulaDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormFormulaPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormFile = require(\"../../platform/mobile/ABMobileViewFormFile\");\n\nconst ABViewFormImagePropertyComponentDefaults = {};\n\nconst ABViewImageFileDefaults = {\n   key: \"mobile-image\",\n   // {string} unique key for this view\n   icon: \"file-image-o\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"Image\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormImageCore extends ABMobileViewFormFile {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewImageFileDefaults\n      );\n   }\n\n   static common() {\n      return ABViewImageFileDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormImagePropertyComponentDefaults;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABMobileViewFormItemCore extends ABMobileView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABMobileViewFormNumberDefaults = {\n   key: \"mobile-numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormNumberCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABMobileViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n};\n","const ABMobileViewFormCustom = require(\"../../platform/mobile/ABMobileViewFormCustom\");\n\nconst ABMobileViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABMobileViewFormReadonlyDefaults = {\n   key: \"mobile-fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormReadonly extends ABMobileViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormReadonlyPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormSelectSingle = require(\"../../platform/mobile/ABMobileViewFormSelectSingle\");\n\nconst ABMobileViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABMobileViewFormSelectMultipleDefaults = {\n   key: \"mobile-selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormSelectMultipleCore extends (\n   ABMobileViewFormSelectSingle\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormSelectMultiplePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABMobileViewFormSelectSingleDefaults = {\n   key: \"mobile-selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormSelectSingleCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormSelectSinglePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n   placeholder: \"\", // default placeholder text\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"mobile-textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormTextboxCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   toObj() {\n      // placeholder is a multilingual value:\n      this.unTranslate(this.settings, this.settings, [\"placeholder\"]);\n\n      return super.toObj();\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // placeholder is a multilingual value:\n      this.unTranslate(this.settings, this.settings, [\"placeholder\"]);\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewLabelCore extends ABMobileView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n   hideTitle: 0,\n   hideTabs: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // we do if we have a setting for linkPageAdd\n      return this.settings.linkPageAdd != \"\";\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewTimelinePropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n   hideTitle: 0,\n   hideTabs: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-timeline\", // {string} unique key for this view\n   icon: \"timeline\", // {string} fa-[icon] reference for this view\n   labelKey: \"Timeline\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTimelineCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTimelinePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // we do if we have a setting for linkPageAdd\n      return this.settings.linkPageAdd != \"\";\n   }\n};\n","/**\n * ABProcessLane\n * manages the lanes in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABProcessParticipant = require(\"../../platform/process/ABProcessParticipant\");\n\nconst ABProcessLaneDefaults = {\n   type: \"process.lane\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\"\n   // {string} .icon\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessLaneCore extends ABProcessParticipant {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessLaneDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.type = attributes.type || ABProcessLaneDefaults.type;\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   // toObj() {\n   //     // default label value\n   //     if (!this.label && this.name && this.name != \"\") {\n   //         this.label = this.name;\n   //     }\n\n   //     // untranslate this object:\n   //     var data = super.toObj();\n\n   //     var fieldsToSave = [\n   //         \"id\",\n   //         \"name\",\n   //         \"type\",\n   //         \"processID\",\n   //         \"diagramID\",\n   //         \"where\"\n   //     ];\n   //     fieldsToSave.forEach((f) => {\n   //         data[f] = this[f];\n   //     });\n\n   //     return data;\n   // }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABProcessParticipantDefaults = {\n   type: \"process.participant\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\" // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessParticipantCore extends ABMLClass {\n   constructor(attributes, process, AB) {\n      super([\"label\"], AB);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n\n      this.fromValues(attributes);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessParticipantDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // These Values are needed By ABDefinition:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || ABProcessParticipantDefaults.type;\n      this.key = attributes.key || ABProcessParticipantDefaults.type;\n\n      // Process Values:\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneIDs = attributes.laneIDs || [];\n      this.stashed = false;\n      if (attributes.stashed && attributes.stashed != \"\") {\n         this.stashed = attributes.stashed;\n      }\n\n      function validChecker(attribute) {\n         return typeof attribute != \"undefined\" && attribute != null;\n      }\n\n      this.useRole = 0;\n      if (validChecker(attributes.useRole)) {\n         this.useRole = parseInt(attributes.useRole);\n      }\n\n      this.role = 0;\n      if (validChecker(attributes.role)) {\n         this.role = attributes.role;\n      }\n\n      this.useAccount = 0;\n      if (validChecker(attributes.useAccount)) {\n         this.useAccount = parseInt(attributes.useAccount);\n      }\n\n      this.account = 0;\n      if (validChecker(attributes.account)) {\n         this.account = attributes.account;\n      }\n\n      this.useField = 0;\n      if (validChecker(attributes.useField)) {\n         this.useField = parseInt(attributes.useField);\n      }\n\n      this.userField = [];\n      if (validChecker(attributes.userField)) {\n         this.userField = attributes.userField;\n      }\n\n      // depreciated\n      this.fields = [];\n      if (validChecker(attributes.fields)) {\n         this.fields = attributes.fields;\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneIDs\",\n         \"where\",\n         \"useRole\",\n         \"role\",\n         \"useAccount\",\n         \"account\",\n         \"useField\",\n         \"userField\",\n         \"fields\",\n         \"stashed\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * @method onProcessReady()\n    * perform any tasks/checks necessary after the parent Process is\n    * setup and ready.\n    */\n   onProcessReady() {}\n};\n","/*\n * ABProcessTaskManager\n *\n * An interface for managing the different ABProcessTasks in AppBuilder.\n *\n */\n\n/*\n * Tasks\n * A name => ABProcessElement hash of the different ABProcessElements available.\n */\nvar Tasks = {};\n\n/*\n * DEFINITIONTYPES\n * a hash of BPMN:Element.type to Default values\n * for each of our Process Objects.\n *\n * NOTE: For Tasks, the key should be target.type,\n * for Triggers or End elements, the key should be\n * the target.eventDefinitionType\n */\nvar DEFINITIONTYPES = {};\n\nvar AllProcessElements = [\n   require(\"../../platform/process/tasks/ABProcessEnd\"),\n   require(\"../../platform/process/tasks/ABProcessGatewayExclusive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskEmail\"),\n   require(\"../../platform/process/tasks/ABProcessTaskService\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingJEArchive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceCalculate\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceInsertRecord\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceQuery\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl\"),\n   require(\"../../platform/process/tasks/ABProcessTaskSubProcess\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUser\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserApproval\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserExternal\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserForm\"),\n   require(\"../../platform/process/tasks/ABProcessTrigger\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerLifecycle\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerTimer\"),\n];\n\nAllProcessElements.forEach((ELEMENT) => {\n   Tasks[ELEMENT.defaults().key] = ELEMENT;\n\n   switch (ELEMENT.defaults().category) {\n      case \"start\":\n      case \"end\":\n         DEFINITIONTYPES[ELEMENT.DiagramReplace().target.eventDefinitionType] =\n            ELEMENT.defaults();\n         break;\n\n      case \"gateway\":\n      case \"task\":\n         DEFINITIONTYPES[ELEMENT.DiagramReplace().target.type] =\n            ELEMENT.defaults();\n         break;\n   }\n});\n\nmodule.exports = {\n   /*\n    * @function allTasks\n    * return all the currently defined ABProcessTasks in an array.\n    * @return [{ABProcessTask},...]\n    */\n   allTasks: function () {\n      var tasks = [];\n      for (var t in Tasks) {\n         tasks.push(Tasks[t]);\n      }\n      return tasks;\n   },\n\n   /*\n    * @function newTask\n    * return an instance of an ABProcessTask based upon the values.type value.\n    * @return {ABProcessTask}\n    */\n   newTask: function (values, process, AB) {\n      if (values.key) {\n         return new Tasks[values.key](values, process, AB);\n      } else {\n         //// TODO: what to do here?\n      }\n   },\n\n   DiagramReplaceDefinitionsForType: function (type) {\n      var definitions = AllProcessElements.filter((e) => {\n         return e.defaults().category == type;\n      }).map((e) => {\n         return e.DiagramReplace();\n      });\n      return definitions;\n   },\n\n   StartEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"start\");\n   },\n\n   Gateways: function () {\n      return this.DiagramReplaceDefinitionsForType(\"gateway\");\n   },\n\n   Tasks: function () {\n      return this.DiagramReplaceDefinitionsForType(\"task\");\n   },\n\n   EndEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"end\");\n   },\n\n   definitionForElement: function (element) {\n      // pull the key from the embedded .eventDefinition\n      // if there is one\n      var key = null;\n      if (element.businessObject.eventDefinitions) {\n         var def = element.businessObject.eventDefinitions[0];\n         if (def) {\n            key = def.$type;\n         }\n      }\n\n      // if not, then just use the base .type\n      if (!key) {\n         key = element.type;\n      }\n\n      return DEFINITIONTYPES[key];\n   },\n};\n","var ABMLClass = require(\"../../../platform/ABMLClass\");\n\nmodule.exports = class ABProcessTaskCore extends ABMLClass {\n   constructor(attributes, process, AB, defaultValues) {\n      super([\"label\"], AB);\n\n      this.defaults = defaultValues || { key: \"core\", icon: \"core\" };\n      // {obj} .defaults\n      // a value hash of default values for an ABProcessTask\n      // NOTE: needs to be set before .fromValues()\n\n      this.fromValues(attributes);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n      // {ABProcess} .process\n      // The parent ABProcess this process element is a part of.\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n      this.state = null;\n   }\n\n   ///\n   /// Static Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // ABDefinition Related fields:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process.task.unknown\";\n\n      // ABProcess related fields:\n      this.key = attributes.key || this.defaults.key || \"?key?\";\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneDiagramID = attributes.laneDiagramID || \"?laneID?\";\n      // laneDiagramID : connects to the parent object that defines any\n      //      default User information for the Task.  In our case, it\n      //      might be a {ABProcessParticipant} object, or a {ABProcessLane}\n      //      object.  by default, a diagram's Participant obj doesn't define\n      //      any lanes, and therefore can provide that info.  Once a lane\n      //      is added, however, an object is assigned to it, and the\n      //      Lane will provide that info.\n\n      // initialize any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            if (typeof attributes[s] == \"undefined\") this[s] = null;\n            else this[s] = attributes[s];\n         });\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneDiagramID\",\n         \"key\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      // save any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            data[s] = this[s];\n         });\n      }\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * errorConfig()\n    * Respond with an error when expected configuration parameters do not\n    * pull data.\n    * @param {obj} instance\n    *        the instance data of this task\n    * @param {string} msg\n    *        the display message for this error.\n    * @param {array[string]} fields\n    *        an array of parameter keys that should be included in the error\n    *        for additional information.\n    * @return {Promise.reject(error)}\n    */\n   errorConfig(instance, msg, fields = []) {\n      this.log(instance, msg);\n      var error = new Error(`${this.type}: ${msg}`);\n      var info = { task: this };\n      if (!Array.isArray(fields)) fields = [fields];\n      fields.forEach((field) => {\n         info[field] = this[field];\n      });\n      this.AB.notify.builder(error, info);\n      return Promise.reject(error);\n   }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context\n    *        the context data of the process instance\n    * @param {obj} defaults\n    *        any values to include from our child classes\n    * @param {obj} val\n    *        any values to override the default state\n    */\n   initState(context, defaults, val) {\n      defaults = defaults || {};\n      if (!val) {\n         val = defaults;\n         defaults = {};\n\n         // in this case, then auto initi blank instanceValues:\n         if (this.defaults && this.defaults.instanceValues) {\n            this.defaults.instanceValues.forEach((v) => {\n               defaults[v] = null;\n            });\n         }\n      }\n\n      context.taskState = context.taskState || {};\n\n      // don't overwrite your settings if they already exist:\n      if (!context.taskState[this.diagramID]) {\n         context.taskState[this.diagramID] = {\n            initialized: true,\n            status: \"initialized\",\n         };\n         for (var d in defaults) {\n            context.taskState[this.diagramID][d] = defaults[d];\n         }\n         for (var v in val) {\n            context.taskState[this.diagramID][v] = val[v];\n         }\n      }\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return false;\n   }\n\n   /**\n    * log()\n    * enter a log in the current process instance\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {...} ...allArgs the remaining parameters sent to the log\n    */\n   log(instance, ...allArgs) {\n      var text = `${this.diagramID} : ${\n         this.name ? this.name : this.key\n      } : ${allArgs.join(\" \")}`;\n      instance.log.push(text);\n   }\n\n   /**\n    * myLane()\n    * return the ABProcessParticipant | ABProcessLane element we are\n    * in.\n    * @return {ABProcessParticipant|ABProcessLane}\n    */\n   myLane() {\n      return this.process.elementForDiagramID(this.laneDiagramID);\n   }\n\n   /**\n    * myState()\n    * return the current state values for this ABProcessTask\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {obj}\n    */\n   myState(instance) {\n      return instance.context.taskState[this.diagramID];\n   }\n\n   /**\n    * nextTasks()\n    * follow the current instance diagram and return the next task(s)\n    * after this task.\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {array}  [ABProcessTask, ...] or {null} if an error\n    */\n   nextTasks(instance) {\n      var nextTasks = [];\n\n      var myDiagramObj = instance.hashDiagramObjects[this.diagramID];\n      if (!myDiagramObj) {\n         let error = new Error(\n            `Configuration Error: Did not find my definition for dID[${this.diagramID}]`\n         );\n         this.onError(instance, error);\n         return null;\n      }\n\n      // myDiagramObj :\n      // {\n      //     \"bpmn2:outgoing\": [{\"_text\": \"SequenceFlow_00fbxm3\"} ...],\n      //     \"_attributes\": {id: \"StartEvent_1\"},\n      //     \"_type\": \"start\"\n      // }\n\n      // find my possible exits:\n      var exitFlows = myDiagramObj[\"bpmn2:outgoing\"];\n      if (!exitFlows) {\n         let error = new Error(\n            `Configuration Error: Did not find any outgoing flows for dID[${this.diagramID}]`\n         );\n         this.AB.notify.builder(error, { task: this });\n         this.onError(instance, error);\n         return null;\n      }\n\n      if (!Array.isArray(exitFlows)) {\n         exitFlows = [exitFlows];\n      }\n\n      var tasksFromFlow = (flow) => {\n         // follow a flow and grab each of it's exit tasks\n         // place them into nextTasks[];\n\n         var flowObj = instance.hashDiagramObjects[flow[\"_text\"]];\n         if (!flowObj) return;\n\n         var targetIDs = flowObj[\"_attributes\"][\"targetRef\"];\n         if (!targetIDs) return;\n\n         if (!Array.isArray(targetIDs)) {\n            targetIDs = [targetIDs];\n         }\n\n         targetIDs.forEach((tid) => {\n            var targetTask = this.process.elementForDiagramID(tid);\n            if (targetTask) {\n               if (nextTasks) {\n                  nextTasks.push(targetTask);\n               }\n            } else {\n               let error = new Error(\n                  `Configuration Error: No ProcessTask instance for diagramID[${tid}]`\n               );\n               this.AB.notify.builder(error, { task: this });\n               this.onError(instance, error);\n               nextTasks = null;\n            }\n         });\n      };\n\n      exitFlows.forEach((f) => {\n         tasksFromFlow(f);\n      });\n\n      return nextTasks;\n   }\n\n   /**\n    * onError()\n    * perform the following actions (log it) on an error.\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {Error} error\n    */\n   onError(instance, error) {\n      if (error) {\n         var text = `${error.toString()}`;\n         this.log(instance, text);\n      }\n      var myState = this.myState(instance);\n      myState.status = \"error\";\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return null;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      return null;\n   }\n\n   /**\n    * hashProcessDataValues()\n    * return a hash of live Process Data Values\n    * @param {obj} instance\n    * @return {array} | null\n    */\n   hashProcessDataValues(instance) {\n      var listDataFields = this.process.processDataFields(this);\n      var currentProcessValues = {};\n      listDataFields.forEach((f) => {\n         currentProcessValues[f.key] = this.process.processData(this, [\n            instance,\n            f.key,\n         ]);\n      });\n      return currentProcessValues;\n   }\n\n   /**\n    * reset()\n    * prepare this task to run again if it was already completed.\n    *\n    * This might happen in a process where a loop is formed and tasks\n    * are repeated until a certain outcome.\n    *\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   reset(instance) {\n      // a task wants to run me.  Possibly again.\n      var myState = this.myState(instance);\n\n      // if I haven't setup my state (why?) then just\n      // do that again:\n      if (!myState) {\n         this.initState(instance.context);\n      } else {\n         // if I have already \"completed\" and we are being\n         // asked to run again (it's possible)\n         if (myState.status == \"completed\" || myState.status == \"error\") {\n            // remove my current state\n            delete instance.context.taskState[this.diagramID];\n\n            // store a new state in the context\n            this.initState(instance.context);\n\n            // remember our previous state\n            var newState = this.myState(instance);\n            newState._prevState = myState;\n            this.log(instance, \" Reset() called. Running again. \");\n         }\n      }\n   }\n\n   /**\n    * stateCompleted()\n    * mark this task has having completed.\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   stateCompleted(instance) {\n      var myState = this.myState(instance);\n      myState.status = \"completed\";\n   }\n\n   /**\n    * stateUpdate()\n    * update my state values with the given values data\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {obj} values    the new state values\n    */\n   stateUpdate(instance, values) {\n      values = values || {};\n      var myState = this.myState(instance);\n      for (var v in values) {\n         myState[v] = values[v];\n      }\n   }\n\n   /**\n    * wantToDoSomething()\n    * determine if this task still has something to do.\n    * @param {obj} instance  the instance data of the process we are working on\n    * @return {bool} true if there is still pending actions\n    */\n   wantToDoSomething(instance) {\n      var state = this.myState(instance);\n      if (state) {\n         return state.status != \"completed\" && state.status != \"error\";\n      } else {\n         // my state wasn't defined?\n         console.warn(\n            \"ABProcessTaskCore:wantToDoSomething(): called without having initialized our state first.\",\n            instance\n         );\n         // initialize our state and try again\n         this.initState(instance.context);\n         return this.wantToDoSomething(instance);\n      }\n   }\n\n   /**\n    * @method onProcessReady()\n    * Perform any setup actions after the parent process has indicated it is \"ready\"\n    */\n   onProcessReady() {}\n\n   get startElements() {\n      let startElems =\n         this.process.elements(\n            (elem) =>\n               elem && elem.defaults && elem.defaults.category === \"start\"\n         ) || [];\n      return startElems;\n   }\n\n   get previousElements() {\n      return this.process.connectionPreviousTask(this);\n   }\n\n   get objectOfStartElement() {\n      const startElem = this.startElements[0];\n      if (!startElem) return null;\n\n      return this.AB.objectByID(startElem.objectID);\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElements[0];\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEndDefaults = {\n   category: \"end\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"stop\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   key: \"End\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEndCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.end\";\n      super(attributes, process, AB, ABProcessTaskEndDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEndDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Terminate End Event\",\n         actionName: \"replace-with-terminate-end\",\n         className: \"bpmn-icon-end-event-terminate\",\n         target: {\n            type: \"bpmn:EndEvent\",\n            eventDefinitionType: \"bpmn:TerminateEventDefinition\",\n         },\n      };\n   }\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         triggered: false,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return true;\n   }\n\n   /**\n    * nextTasks()\n    * return the next tasks to be run after this task is complete.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve([])\n    */\n   nextTasks(instance) {\n      // I'm an End Event.  There are no nextTasks()\n      return [];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessGatewayExclusiveDefaults = {\n   category: \"gateway\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GatewayExclusive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"conditions\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessGatewayExclusiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.gateway.exclusive\";\n      super(attributes, process, AB, ABProcessGatewayExclusiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessGatewayExclusiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Exclusive Gateway\",\n         actionName: \"replace-with-exclusive-gateway\",\n         className: \"bpmn-icon-gateway-xor\",\n         target: {\n            type: \"bpmn:ExclusiveGateway\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.conditions = this.conditions || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEmailDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"to\",\n      \"from\",\n      \"subject\",\n      \"message\",\n      \"toCustom\",\n      \"fromCustom\",\n      \"toUsers\",\n      \"fromUsers\",\n      \"toCustomFields\",\n      \"fromCustomFields\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"email\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Email\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEmailCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.email\";\n      super(attributes, process, AB, ABProcessTaskEmailDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEmailDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Send Task\",\n         actionName: \"replace-with-send-task\",\n         className: \"bpmn-icon-send\",\n         target: {\n            type: \"bpmn:SendTask\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         this[f] = attributes[f];\n      });\n   }\n\n   /**\n    * onProcessReady()\n    * Perform our warnings checks once the parent Process is ready\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         to: [],\n         from: [],\n         subject: this.subject,\n         message: this.message,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingBatchProcessingDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingBatchProcessing\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectBatch\",\n      \"processBatchValue\",\n      \"fieldBatchEntries\",\n      \"fieldBatchFinancialPeriod\",\n      \"objectJE\",\n      \"fieldJEAccount\",\n      \"fieldJERC\",\n      \"fieldJEStatus\",\n      \"fieldJEStatusComplete\",\n      \"objectBR\",\n      \"fieldBRFinancialPeriod\",\n      \"fieldBRAccount\",\n      \"fieldBRRC\",\n      \"fieldBREntries\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingBatchProcessingCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.batchProcessing\";\n      super(attributes, process, AB, AccountingBatchProcessingDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingBatchProcessingDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPValue\",\n      \"objectFP\",\n      \"objectGL\",\n      \"objectAcc\",\n      \"fieldFPStart\",\n      \"fieldFPOpen\",\n      \"fieldFPStatus\",\n      \"fieldFPActive\",\n      \"fieldGLStarting\",\n      \"fieldGLRunning\",\n      \"fieldGLAccount\",\n      \"fieldGLRc\",\n      \"fieldGLDebit\",\n      \"fieldGLCredit\",\n      \"fieldAccType\",\n      \"fieldAccAsset\",\n      \"fieldAccExpense\",\n      \"fieldAccLiabilities\",\n      \"fieldAccEquity\",\n      \"fieldAccIncome\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpClose\";\n      super(attributes, process, AB, AccountingFPCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPYearCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPYearClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPYearValue\",\n      \"objectFPYear\",\n      \"objectFPMonth\",\n      \"objectGL\",\n      \"objectAccount\",\n      \"valueFundBalances\",\n      \"valueNetIncome\",\n      \"fieldFPYearStart\",\n      \"fieldFPYearEnd\",\n      \"fieldFPYearStatus\",\n      \"fieldFPYearActive\",\n      \"fieldFPMonthStart\",\n      \"fieldFPMonthEnd\",\n      \"fieldGLStartBalance\",\n      \"fieldGLRunningBalance\",\n      \"fieldGLrc\",\n      \"fieldAccNumber\",\n      \"fieldAccType\",\n      \"fieldAccTypeIncome\",\n      \"fieldAccTypeExpense\",\n      \"fieldAccTypeEquity\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPYearCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpYearClose\";\n      super(attributes, process, AB, AccountingFPYearCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPYearCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet AccountingJEArchiveDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"archive\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingJEArchive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processBatchValue\",\n      \"objectBatch\",\n      \"objectBalance\",\n      \"objectJE\",\n      \"objectJEArchive\",\n\n      \"fieldBatchFiscalMonth\",\n      \"fieldJeAccount\",\n      \"fieldJeRC\",\n      \"fieldJeArchiveBalance\",\n      \"fieldBrFiscalMonth\",\n      \"fieldBrAccount\",\n      \"fieldBrRC\",\n      \"fieldsMatch\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingJEArchiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.jeArchive\";\n      super(attributes, process, AB, AccountingJEArchiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingJEArchiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet CalculateDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"calculator\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Calculate\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formulaText\"],\n};\n\nmodule.exports = class CalculateTaskCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.calculate\";\n      super(attributes, process, AB, CalculateDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return CalculateDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      const label = `${this.label}->Value`;\n      // this is a calculate task, so let's include a fake ABFieldNumber\n      // for the .field value, so other tasks that limit their operations\n      // to fields can use this as a number\n      if (!this._fakeNum) {\n         this._fakeObj = this.AB.objectNew({});\n         this._fakeNum = this.AB.fieldNew(\n            { key: \"number\", name: label, label },\n            this._fakeObj\n         );\n      }\n      return {\n         key: `${this.id}.value`,\n         label,\n         field: this._fakeNum,\n      };\n   }\n};\n","/**\n * ABProcessTaskServiceCore\n *\n * This defines the base Service Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a ServiceTask performs a dedicated operation on the server.\n *  - performing a query, looking up data, etc...\n *\n */\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskServiceDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskService\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service\";\n      super(attributes, process, AB, ABProcessTaskServiceDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Service Task\",\n         actionName: \"replace-with-service-task\",\n         className: \"bpmn-icon-service\",\n         target: {\n            type: \"bpmn:ServiceTask\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskGetResetPasswordUrlDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GetResetPasswordUrl\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"email\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskGetResetPasswordUrlCore extends (\n   ABProcessElement\n) {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.getResetPasswordUrl\";\n      super(attributes, process, AB, ABProcessTaskGetResetPasswordUrlDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskGetResetPasswordUrlDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.url`,\n         label: `${this.label}->URL`,\n      };\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet InsertRecordDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"InsertRecord\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectID\",\n      \"fieldValues\",\n      \"isRepeat\",\n      \"repeatMode\",\n      \"repeatColumn\",\n   ],\n};\n\nmodule.exports = class InsertRecordCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.insertRecord\";\n      super(attributes, process, AB, InsertRecordDefaults);\n\n      this.results = [];\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return InsertRecordDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.isRepeat = JSON.parse(attributes.isRepeat || false);\n   }\n\n   get startElement() {\n      let startElem = null;\n      let currProcess = this.process;\n\n      // Find the start (trigger) task\n      while (!startElem && currProcess) {\n         startElem = currProcess.elements(\n            (elem) => elem?.defaults?.category == \"start\"\n         )[0];\n\n         // If .currProcess is a sub task, then go to the parent process for get the start task\n         currProcess = currProcess.process;\n      }\n\n      return startElem;\n   }\n\n   get previousElement() {\n      return this.process.connectionPreviousTask(this)[0];\n   }\n\n   get objectOfStartElement() {\n      let startElem = this.startElement;\n      if (!startElem) return null;\n\n      let startElemObj = this.AB.objectByID(startElem.objectID);\n      return startElemObj;\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElement;\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n\n   get fieldRepeat() {\n      let obj = this.objectOfStartElement;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.repeatColumn)[0];\n   }\n\n   /**\n    * processDataFields()\n    * return a single available data field from this element\n    * this will be the record inserted by this task\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.[PK]`,\n            label: `${this.label}-> Inserted record [PK]`,\n            field: {\n               id: this.id,\n               object: { id: this.objectID },\n               key: \"InsertedRecord\",\n               columnName: \"uuid\",\n            },\n            object: this.objectID,\n            set: true,\n         },\n      ];\n   }\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n     toObj() {\n         var data = super.toObj();\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             data[f] = this[f];\n         });\n \n         return data;\n     }\n     */\n\n   ////\n   //// Process Instance Methods\n   ////\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABQLManager = require(\"../../../platform/ql/ABQLManager.js\");\n\nconst ABProcessTaskServiceQueryDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskServiceQuery\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"qlObj\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceQueryCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.query\";\n      super(attributes, process, AB, ABProcessTaskServiceQueryDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceQueryDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Before we make instances of qlObj:\n      this._datasources = [];\n\n      // comvert our qlObj into an ABQLxxx instance.\n      if (this.qlObj) {\n         this.qlObj = ABQLManager.fromAttributes(this.qlObj, this, this.AB);\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const data = super.toObj();\n\n      // convert qlObj into obj format:\n      if (this.qlObj) data.qlObj = this.qlObj.toObj();\n\n      return data;\n   }\n\n   registerDatasource(obj) {\n      this._datasources.push(obj);\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        const myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // in this Task, we can return the Response to the UserForm\n      let fields = null;\n\n      if (this._datasources.length > 0) {\n         fields = [];\n\n         this._datasources.forEach((s) => {\n            const param = s.processDataField(this.id, this.label);\n\n            if (param) {\n               fields.push(param);\n            }\n         });\n      }\n\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      const parts = key.split(\".\");\n\n      if (parts[0] === this.id) {\n         const myState = this.myState(instance);\n\n         return myState[parts[1]];\n      }\n\n      return null;\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet SubProcessDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"object-group\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"SubProcess\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"isEnable\",\n      \"parameterId\",\n      \"connectionAttrs\",\n      \"elementIDs\",\n      \"loopType\",\n   ],\n};\n\nconst NOSPAM = {\n   /*message : bool */\n};\n// prevent sending the same message over and over.\n\nmodule.exports = class SubProcessCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.subProcess\";\n      super(attributes, process, AB, SubProcessDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return SubProcessDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"Sub Process\",\n         actionName: \"replace-with-subprocess\",\n         className: \"bpmn-icon-subprocess-expanded\",\n         target: {\n            type: \"bpmn:SubProcess\",\n            isExpanded: true,\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Convert string to boolean\n      this.isEnable = this.isEnable == null ? true : JSON.parse(this.isEnable);\n\n      let currElements = this._elements || {};\n      this._unknownElementIDs = [];\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         let ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this._unknownElementIDs.push(eID);\n            }\n         }\n      });\n\n      this._unknownElementIDs.forEach((eID) => {\n         let key = `Process[${this.processID}] Task[${this.label}] is referencing an unknown element id:[${eID}]`;\n         if (!NOSPAM[key]) {\n            let err = new Error(key);\n            this.AB.notify.builder(err, { processTask: this.id, eID });\n            NOSPAM[key] = true;\n         }\n      });\n\n      this._connections = attributes.connectionAttrs || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let data = super.toObj();\n\n      data.elementIDs = [];\n      for (let e in this._elements) {\n         data.elementIDs.push(this._elements[e].id);\n      }\n\n      data.connectionAttrs = this._connections;\n\n      return data;\n   }\n\n   /**\n    * @method processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      if (this.parameterId == null) return [];\n\n      // only call processDataFields once, filter it to get the different queries\n      let dataFieldsAll = this.process.processDataFields(this) || [];\n\n      // get the subtask data\n      let dataFieldOpt = dataFieldsAll.filter(\n         (opt) => opt.key === this.parameterId\n      )[0];\n\n      // get data from insert tasks\n      let dataFieldsAllInserted = dataFieldsAll.filter(\n         (opt) => (opt?.field?.key ?? opt?.field) === \"InsertedRecord\"\n      );\n\n      if (dataFieldOpt == null) return [];\n\n      let result = [];\n\n      // Connect field type\n      if (\n         dataFieldOpt.field &&\n         dataFieldOpt.field.key == \"connectObject\" &&\n         dataFieldOpt.field.datasourceLink &&\n         dataFieldOpt.field.datasourceLink.fields\n      ) {\n         result.push({\n            key: `${this.id}.uuid`,\n            label: `${this.label}->Repeat Data.ID`,\n            object: dataFieldOpt.field.datasourceLink,\n         });\n\n         dataFieldOpt.field.datasourceLink.fields().forEach((f) => {\n            result.push({\n               key: `${this.id}.${f.id}`,\n               label: `${this.label}->Repeat Data.${f.label}`,\n               field: f,\n               object: f.object,\n            });\n         });\n      }\n      // Other field types\n      else {\n         result.push({\n            key: dataFieldOpt.field\n               ? `${this.id}.${dataFieldOpt.field.id}`\n               : `${this.id}.subProcess`,\n            label: `${this.label}->Repeat Data`,\n            field: dataFieldOpt.field,\n            object: dataFieldOpt.object,\n         });\n      }\n\n      dataFieldsAllInserted.forEach((opt) => {\n         result.push({\n            key: `${opt.key || opt.id}`,\n            label: `Parent Process Data->${opt.label}`,\n            field: opt.field,\n            object: opt.object,\n         });\n      });\n\n      // Get any tasks that exist inside the subprocess\n      let previousFields = this.process.processDataFields.call(\n         this,\n         currElement\n      );\n      if (previousFields && previousFields.length > 0) {\n         result = result.concat(previousFields);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      let instance = params[0];\n      let key = params[1];\n      let data;\n\n      if (instance && key?.startsWith?.(this.id)) {\n         let fieldId = key.split(\".\")[1];\n         let myState = this.myState(instance);\n         let stateData = myState ? myState.data : null;\n         data = stateData;\n\n         if (stateData && fieldId) {\n            let dataFieldOpt = (\n               this.process.processDataFields(this) || []\n            ).filter((opt) => opt.key == this.parameterId)[0];\n\n            if (dataFieldOpt?.field?.key == \"connectObject\") {\n               if (!Array.isArray(stateData)) stateData = [stateData];\n\n               // Extract data\n               data = stateData.map((item) => {\n                  if (fieldId == \"uuid\" || fieldId == \"id\") {\n                     return item.uuid || item.id || item;\n                  } else if (dataFieldOpt.field.datasourceLink) {\n                     let returnField = dataFieldOpt.field.datasourceLink.fields(\n                        (f) => f.id == fieldId\n                     )[0];\n                     if (returnField) return item[returnField.columnName];\n                     else return item;\n                  }\n               });\n            }\n         }\n      }\n\n      // Filter none data items\n      if (Array.isArray(data)) data = data.filter((d) => d != null);\n\n      if (data == null || data.length == 0)\n         data = this.process.processData.call(this, currElement, params);\n\n      if (data == null || data.length == 0)\n         data = this.process.processData(this, params);\n\n      return data;\n   }\n\n   allPreviousTasks(...params) {\n      return this.process.allPreviousTasks.call(this, ...params);\n   }\n\n   allPreviousConnectionsForElement(...params) {\n      return this.process.allPreviousConnectionsForElement.call(\n         this,\n         ...params\n      );\n   }\n\n   allPreviousConnectionsForConnection(...params) {\n      return this.process.allPreviousConnectionsForConnection.call(\n         this,\n         ...params\n      );\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * @method connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      return this.process.connections.call(this, fn);\n   }\n\n   /**\n    * @method connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      if (!dID) return;\n\n      return this.process.connectionForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsIncoming.call(this, dID);\n   }\n\n   /**\n    * @method connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsOutgoing.call(this, dID);\n   }\n\n   /**\n    * @method connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      if (!element) return;\n\n      this.process.connectionRemove.call(this, element);\n   }\n\n   /**\n    * @method connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      if (!element) return;\n\n      return this.process.connectionSimplyElement.call(this, element);\n   }\n\n   /**\n    * @method connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      if (!element) return;\n\n      this.process.connectionUpsert.call(this, element);\n   }\n\n   /**\n    * @method connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      if (!currElement) return;\n\n      return this.process.connectionPreviousTask.call(this, currElement);\n   }\n\n   /**\n    * @method elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      return this.process.elements.call(this, fn);\n   }\n\n   /**\n    * @method elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      if (!element) return;\n\n      this.process.elementAdd.call(this, element);\n   }\n\n   /**\n    * @method elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      if (!dID) return null;\n\n      return this.process.elementForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      if (!def) return;\n\n      this.process.elementRemove.call(this, def);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABFieldList = require(\"../../../platform/dataFields/ABFieldList.js\");\n\nvar ABProcessTaskApprovalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Approval\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserApprovalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user.approval\";\n      super(attributes, process, AB, ABProcessTaskApprovalDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskApprovalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      function fixBoolean(obj) {\n         if (obj) {\n            Object.keys(obj).forEach((k) => {\n               if (obj[k] == \"false\") {\n                  obj[k] = false;\n               } else if (obj[k] == \"true\") {\n                  obj[k] = true;\n               } else if (typeof obj[k] == \"object\") {\n                  fixBoolean(obj[k]);\n               }\n            });\n         }\n      }\n      fixBoolean(this.formBuilder);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   /*     \n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskApprovalDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n*/\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {};\n        ABProcessTaskApprovalDefaults.instanceValues.forEach((v) => {\n            myDefaults[v] = null;\n        });\n\n        super.initState(context, myDefaults, val);\n    }\n*/\n\n   /*\n    * preProcessFormIOComponents()\n    * we need to parse the form.io components to ensure the proper columnName\n    * and labels are being used. We also will translate the columnNames at this\n    * point in the code\n    */\n   preProcessFormIOComponents() {\n      var fields = this.process.processDataFields(this);\n      if (fields && this.formBuilder && this.formBuilder.components) {\n         this.formBuilder.components.forEach((c) => {\n            if (c.abFieldID) {\n               fields.filter((entry) => {\n                  if (entry.field?.id == c.abFieldID) {\n                     c.label = entry.field.label;\n                     c.key = entry.key;\n                     if (c.data?.values && entry.field.settings.options) {\n                        var vals = [];\n                        entry.field.settings.options.forEach((opt) => {\n                           vals.push({\n                              label: opt.text,\n                              value: opt.id,\n                           });\n                        });\n                        c.data.values = vals;\n                     }\n                  }\n               });\n            } else if (c.components && c.components.length) {\n               c.key = c.path;\n               c.components.forEach((o) => {\n                  if (o.abFieldID) {\n                     // these are plucked conneted values\n                     // gather up all their fields to be used\n                     var pluck = fields.filter((f) => {\n                        return f.key == c.path;\n                     })[0];\n                     if (!pluck) return;\n                     pluck.object.fields().filter((entry) => {\n                        if (entry?.id == o.abFieldID) {\n                           o.label = entry.label;\n                           o.key = entry.columnName;\n                           if (o.data?.values && entry.settings.options) {\n                              var vals = [];\n                              entry.settings.options.forEach((opt) => {\n                                 vals.push({\n                                    label: opt.text,\n                                    value: opt.id,\n                                 });\n                              });\n                              o.data.values = vals;\n                           }\n                        }\n                     });\n                  }\n               });\n            }\n         });\n      }\n      return this.formBuilder;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // we need to get the button events defined by the form.io formBuilder\n      var options = [];\n      this.formBuilder.components.forEach((comp) => {\n         if (comp.type == \"button\" && comp.action == \"event\" && comp.event) {\n            options.push({\n               id: comp.event,\n               text: comp.label,\n            });\n         }\n      });\n      // in this Task, we can return the Response to the UserForm\n      // The Response can be in the form of a List Field, with one or more\n      // return options.\n\n      var myID = this.diagramID;\n\n      // create an ABFieldList object:\n      // make sure the options follow what is currently defined for our\n      // responses:\n      var myObj = this.AB.objectNew({});\n      var listField = new ABFieldList(\n         {\n            id: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            columnName: `${myID}.userFormResponse`,\n            settings: {\n               options: options,\n            },\n         },\n         myObj\n      );\n\n      // NOTE: We are pretending our response is a type of ABFieldList. But our\n      // ABField objects no longer allow \".\" in our columnNames:\n      //    ( https://github.com/digi-serve/appbuilder_class_core/blob/212cf5fa1c1d5c959aa246c730582ed50809ee0f/dataFields/ABFieldCore.js#L262 )\n      // But our Process tasks really will be expecting it there so lets put\n      // it back:\n      listField.columnName = `${myID}.userFormResponse`;\n\n      return [\n         {\n            key: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            field: listField,\n            object: null,\n         },\n      ];\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.diagramID) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n         }\n      }\n      return null;\n   }\n};\n","/**\n * ABProcessTaskUserCore\n *\n * This defines the base User Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a UserTask expects a human user to perform an action.  These\n * actions are in the possible forms:\n *  - confirm offline action\n *  - approve data\n *  - fill out a form\n *\n */\n\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskUserDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"user\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskUser\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user\";\n      super(attributes, process, AB, ABProcessTaskUserDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"User Task\",\n         actionName: \"replace-with-user-task\",\n         className: \"bpmn-icon-user\",\n         target: {\n            type: \"bpmn:UserTask\",\n         },\n      };\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         roles: [],\n         ui: null,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserExternalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"External\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"url\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {\n   who: 0,\n   toUsers: null,\n   url: \"\",\n};\n\nmodule.exports = class ABProcessTaskUserExternalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.external\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserExternalDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserExternalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.userFormResponse`,\n            label: `${this.label}->Response`,\n         },\n      ];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserFormDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"form\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Form\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {};\n\nmodule.exports = class ABProcessTaskUserFormCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.form\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserFormDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserFormDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return (this.formBuilder?.components ?? [])\n         .filter((comp) => comp.type != \"button\")\n         .map((comp) => {\n            return {\n               key: comp.key,\n               label: `${this.label}->${comp.label}`,\n            };\n         });\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (!key) return null;\n\n      const myState = this.myState(instance);\n\n      return myState[key];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTriggerDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Trigger\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTriggerDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTriggerDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Signal Start Event\",\n         actionName: \"replace-with-signal-start\",\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"bpmn:SignalEventDefinition\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.triggerKey = attributes.triggerKey || \"triggerKey.??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.triggerKey = this.triggerKey;\n\n      return data;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"objectID\",\n      \"lifecycleKey\" /* , \"triggerKey\" is tracked in ABProcessTrigger */,\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TriggerLifecycle\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerLifecycle extends ABProcessTrigger {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTaskTriggerLifecycleDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Object Lifecycle Trigger\",\n         actionName: \"replace-with-signal-lifecycle-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalLifecycle\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.objectID = attributes.objectID || \"objID.??\";\n      this.lifecycleKey = attributes.lifecycleKey || \"lifecycle.key??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.objectID = this.objectID;\n      data.lifecycleKey = this.lifecycleKey;\n      return data;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      var fields = null;\n      if (this.objectID) {\n         fields = [];\n         var object = this.AB.objectByID(this.objectID);\n         if (object) {\n            var myID = this.diagramID;\n            object.fields().forEach((field) => {\n               fields.push({\n                  key: `${myID}.${field.id}`,\n                  label: `${this.label}->${object.label}->${field.label}`,\n                  field,\n                  object,\n               });\n            });\n            fields.push({\n               key: `${myID}.uuid`,\n               label: `${this.label}->${object.label}`,\n               field: null,\n               object,\n            });\n         } else {\n            // OK, so we have an this.objectID defined, but we can't find it.\n            // that's something we need to alert:\n            var error = new Error(\n               `ABProcessTriggerLifecycleCore.processDataFields():TaskID[${this.id}]: could not find referenced object by ID [${this.objectID}]`\n            );\n            this.AB.notify.builder(error, {\n               task: this.id,\n               objID: this.objectID,\n            });\n         }\n      }\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      var parts = key.split(\".\");\n      if (parts[0] == this.diagramID) {\n         var myState = this.myState(instance);\n         if (myState[\"data\"]) {\n            var object = this.AB.objectByID(this.objectID);\n            var field = object.fields((f) => {\n               return f.id == parts[1];\n            })[0];\n            if (field) {\n               if (parts[2]) {\n                  return field[parts[2]].call(field, myState[\"data\"]);\n               } else {\n                  // instance.context.data[field.column_name];\n                  // if field is \"calculate\" or \"TextFormula\" data is not stored\n                  // in data base and we need to run format method\n                  if ([\"calculate\", \"TextFormula\"].indexOf(field.key) != -1) {\n                     return field.format(myState[\"data\"]);\n                  } else if (\n                     field.key == \"connectObject\" ||\n                     field.key == \"user\"\n                  ) {\n                     return (\n                        myState[\"data\"][field.relationName()] ||\n                        myState[\"data\"][field.columnName]\n                     );\n                  } else {\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            } else if (parts[1] == \"uuid\") {\n               return myState[\"data\"][\"uuid\"];\n            } else {\n               ///\n               /// Questioning the validity of this section of code.\n               /// In order to get here, we tried to find field, and it\n               /// didn't exist.\n               /// then we turn around and REPEAT the same attempt\n               /// and check for field again.\n               /*\n               // parts[1] should be a field.id\n               object = this.AB.objectByID(this.objectID);\n               field = object.fields((f) => {\n                  return f.id == parts[1];\n               })[0];\n               if (field) {\n                  if (parts[2]) {\n                     return field[parts[2]].call(field, myState[\"data\"]);\n                  } else {\n                     // instance.context.data[field.column_name];\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n               */\n            }\n         }\n      }\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      var objects = null;\n      if (this.objectID) {\n         objects = [this.AB.objectByID(this.objectID)];\n      }\n      return objects;\n   }\n};\n","const ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"repeatEvery\",\n      \"repeatTime\",\n      \"repeatDaily\",\n      \"repeatWeekly\",\n      \"repeatMonthly\",\n      \"isEnabled\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"clock-o\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TimerStartEvent\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   repeatEvery: \"daily\",\n   repeatTime: \"01:00\",\n   repeatDaily: \"day\",\n   repeatWeekly: \"FRI\",\n   repeatMonthly: \"last\",\n   isEnabled: true,\n};\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTrigger {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"trigger\";\n      super(\n         attributes,\n         process,\n         application,\n         ABProcessTaskTriggerLifecycleDefaults\n      );\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Timer Start Event\",\n         actionName: \"replace-with-signal-timer-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-timer\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalTriggerTimer\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.repeatEvery =\n         attributes.repeatEvery ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatEvery;\n\n      this.repeatDaily =\n         attributes.repeatDaily ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatDaily;\n\n      this.repeatWeekly =\n         attributes.repeatWeekly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatWeekly;\n\n      this.repeatMonthly =\n         attributes.repeatMonthly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatMonthly;\n\n      // Convert UTC to local time\n      if (attributes.repeatTime) {\n         let timeVals = attributes.repeatTime.split(\":\");\n         let currDate = new Date();\n         currDate.setUTCHours(timeVals[0]);\n         currDate.setUTCMinutes(timeVals[1]);\n         this.repeatTime = `${currDate.getHours()}:${currDate.getMinutes()}`;\n      } else {\n         this.repeatTime = ABProcessTaskTriggerLifecycleDefaults.repeatTime;\n      }\n\n      if (typeof attributes.isEnabled != \"undefined\") {\n         this.isEnabled = JSON.parse(attributes.isEnabled);\n      } else {\n         this.isEnabled = ABProcessTaskTriggerLifecycleDefaults.isEnabled;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.repeatEvery = this.repeatEvery;\n      data.repeatDaily = this.repeatDaily;\n      data.repeatWeekly = this.repeatWeekly;\n      data.repeatMonthly = this.repeatMonthly;\n\n      // Convert local time to UTC\n      data.repeatTime = this.repeatTime;\n      if (data.repeatTime && data.repeatTime instanceof Date) {\n         data.repeatTime = `${data.repeatTime.getUTCHours()}:${data.repeatTime.getMinutes()}`;\n      }\n\n      data.isEnabled = this.isEnabled;\n\n      return data;\n   }\n\n   getCronExpression() {\n      let timeVals = this.repeatTime.split(\":\");\n      let second = \"*\";\n      let minute = timeVals[1];\n      let hour = timeVals[0];\n      let day;\n      let month;\n      let dayWeek;\n      let year = \"*\";\n\n      switch (this.repeatEvery) {\n         case \"daily\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatDaily == \"weekday\" ? \"1-5\" : \"*\";\n            break;\n         case \"weekly\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatWeekly;\n            break;\n         case \"monthly\":\n            day = this.repeatMonthly;\n            month = \"*\";\n            dayWeek = \"*\";\n            break;\n      }\n\n      return `${second} ${minute} ${hour} ${day} ${month} ${dayWeek} ${year}`;\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nvar ABEmitter = require(\"../../platform/ABEmitter\");\nclass ABQLCore extends ABEmitter {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super();\n\n      // manage the incoming Parameter Definitions\n      if (!Array.isArray(parameterDefinitions)) {\n         parameterDefinitions = [parameterDefinitions];\n      }\n\n      this.parameterDefinitions = parameterDefinitions;\n\n      this.object = prevOP ? prevOP.object : null;\n      // {ABObject}\n      // The current {ABObject} the current Query Language Operation is associated\n      // with.\n\n      // if the previous Operation defined an .objectOut then our .object is THAT\n      // one.\n      if (prevOP && prevOP.objectOut) this.object = prevOP.objectOut;\n\n      this.prevOP = prevOP;\n      this.task = task;\n      // {ABProcessTaskxxx}\n      // This is running under a specific ABProcessTaskServiceQuery.  When\n      // searching for data from the Process, we must go through this.task\n      // to do so.\n\n      this.AB = AB;\n      this.next = null;\n\n      this.fromAttributes(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {}\n\n   fromAttributes(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n\n      // super.fromValues(attributes);\n      this.key = this.constructor.key ?? null;\n\n      // this.entryComplete = attributes.entryComplete || false;\n      this.params = attributes.params ?? {};\n      // {hash}\n      // The configuration values entered by the AppBuilder UI for this\n      // operation.\n\n      this.objectID = attributes.objectID || null;\n\n      // be sure to do a hard lookup if an objectID was saved:\n      if (this.objectID) this.object = this.objectLookup(this.objectID);\n\n      this.initObject(attributes);\n\n      // at least dump a warning here:\n      if (this.objectID && !this.object)\n         this.AB.notify.developer(\n            new Error(\n               `ABQLCore.fromAttributes(): unable to initialize ABObject [${this.objectID}]`\n            ),\n            {\n               attributes,\n               objectID: this.objectID,\n            }\n         );\n\n      if (attributes.next) {\n         let nextOP = null;\n\n         (this.NextQLOps ?? this.constructor.NextQLOps).forEach((OP) => {\n            if (OP.key === attributes.next.key) nextOP = OP;\n         });\n\n         if (nextOP) {\n            // exact match, so add next:\n            const qlOP = new nextOP(attributes.next, this, this.task, this.AB);\n\n            this.next = qlOP;\n         }\n      }\n   }\n\n   /**\n    * @method objectLookup()\n    * return a matching {ABObject} that is represented by the given id.\n    * NOTE: we will try to match on: our initial .objectID first, then\n    * the given objID.\n    * NOTE: this will match an object.id as well as object.label\n    * @param {string} objID\n    */\n   objectLookup(objID) {\n      return this.AB.objects((o) => {\n         const quotedLabel = `\"${o.label}\"`;\n\n         return (\n            // o.id === this.objectID ||\n            o.id === objID || quotedLabel.indexOf(objID) === 0\n         );\n      })[0];\n   }\n\n   /**\n    * @method availableProcessDataFieldsHash()\n    * return a { \"field.key\" => {processFieldDef} } hash of the currently\n    * available fields in the process.\n    * @return {obj}\n    */\n   availableProcessDataFieldsHash() {\n      const availableProcessDataFields =\n         this.task.process.processDataFields(this.task) ?? [];\n      const hashFieldIDs = {};\n\n      availableProcessDataFields.forEach((f) => {\n         if (f.field) {\n            hashFieldIDs[f.field.id] = f;\n         } else {\n            hashFieldIDs[f.key] = f;\n         }\n      });\n\n      return hashFieldIDs;\n   }\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {}\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABQL instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const obj = {\n         key: this.constructor.key,\n         // entryComplete: this.entryComplete,\n         params: this.params,\n         // currQuery: this.currQuery,\n         // queryValid: this.queryValid,\n         objectID: this.object?.id ?? null,\n      };\n\n      if (this.next) {\n         obj.next = this.next.toObj();\n      }\n\n      return obj;\n   }\n}\n\nmodule.exports = ABQLCore;\n","/*\n * ABQLFindCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst NextQLOps = require(\"./ABQLSet.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLFind task is complete.  In this case the {ABQLSet} operations come\n// next.  {ABQLSet} operations work on a Set|{Array} or data results.\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectConditions\",\n      name: \"cond\",\n   },\n];\n\nclass ABQLFindCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLFindCore.key = \"find\";\nABQLFindCore.label = \"find\";\nABQLFindCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLFindCore;\n","/*\n * ABQLManagerCore\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst QLObject = require(\"../../platform/ql/ABQLRootObject.js\");\nconst QLOps = [QLObject];\n\nconst ABQLManagerCore = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current ABFactory we are operating under.\n    * @return {ABQL} | null\n    */\n   fromAttributes: function (attributes, task, AB) {\n      if (!attributes) return null;\n\n      const matchingOPs = [];\n\n      ABQLManagerCore.QLOps.forEach((Op) => {\n         if (Op.key === attributes.key) matchingOPs.push(Op);\n      });\n\n      if (matchingOPs.length === 1) {\n         // let this Operation initialize and return the last OP\n         // in the chain\n         const qlOP = new matchingOPs[0](attributes, task, AB);\n\n         return qlOP;\n      } else return null;\n   },\n\n   /**\n    * @array QLOps\n    * An array of the root QL Operations.\n    */\n   QLOps: QLOps,\n};\nmodule.exports = ABQLManagerCore;\n","/*\n * ABQLRootObjectCore\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\n// Define the Operations that can be performed off of a RootObject.\n// Each Root Object might have a different set of Operations, so we\n// define them here.\nconst QLFind = require(\"../../platform/ql/ABQLFind.js\");\nconst NextQLOps = [QLFind];\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectName\",\n      name: \"name\",\n   },\n];\n\nclass ABQLObjectCore extends ABQL {\n   constructor(attributes, task, AB) {\n      // NOTE: keep this so we can insert the prevOp == null\n      super(attributes, ParameterDefinitions, null, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(/* attributes */) {\n      if (!this.object && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) {\n            this.objectID = this.params[objNameDef.name];\n            this.object = this.objectLookup(this.objectID);\n         }\n\n         if (!this.object) {\n            // This function exists on platform_web but not platform_service\n            this.warningMessage?.(\"has no object set.\", {\n               objectID: this.objectID,\n            });\n         }\n      }\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      // if we don't have an objectID, but we have an objectName parameter\n      // definition then save that as our objectID\n      if (!obj.objectID && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) obj.objectID = this.params[objNameDef.name];\n      }\n\n      return obj;\n   }\n}\n\nABQLObjectCore.key = \"object\";\nABQLObjectCore.label = \"object\";\nABQLObjectCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLObjectCore;\n","/*\n * ABQLRow\n *\n * Defines all the QL operations that can be performed on a Row of data. This is a\n * Single row/instance of an object.\n *\n */\n\nconst QLUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst QLSave = require(\"../../platform/ql/ABQLRowSave\");\nconst QLPluck = require(\"../../platform/ql/ABQLRowPluck\");\n\nmodule.exports = [QLUpdate, QLSave, QLPluck];\n","/*\n/*\n * ABQLRowPluckCore\n *\n * An ABQLRowPluckCore can process a value of data and puck out a specified\n * field to then make an object of values that only contain that field.\n *\n */\n\n// const ABQLValue = require(\"./ABQLValue.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\nconst ABQLSetPluck = require(\"../../platform/ql/ABQLSetPluck.js\");\nconst ABQLRowUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst ABQLRowSave = require(\"../../platform/ql/ABQLRowSave.js\");\n\nclass ABQLRowPluckCore extends ABQLSetPluck {\n   // Dynamic NextQLOps\n   get NextQLOps() {\n      let nextQLOps = [];\n\n      const field = this.field ?? this.object.fieldByID(this.fieldID) ?? null;\n\n      // Update .NextQLOps WARN: update to static it affects to every ABQLRowPluck instances.\n      switch (field?.key) {\n         // M:1 M:N connect field, then set ABQLSet to next steps\n         case \"connectObject\":\n            if (field.settings.linkType === \"many\") {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // return ABQLRow.js\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         case \"user\":\n            // TODO set this up corectlys\n            if (\n               field.settings.linkType === \"many\" ||\n               field.settings.isMultiple // may be unnessicary\n            ) {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // default\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key ||\n                  NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n\n         default:\n            // Normal field and _PK\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) => NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n      }\n\n      return nextQLOps;\n   }\n}\n\nABQLRowPluckCore.key = \"row_pluck\";\nABQLRowPluckCore.label = \"Read the value from the field\";\nABQLRowPluckCore.NextQLOps = []; // Static NextQLOps\n\nmodule.exports = ABQLRowPluckCore;\n","/*\n/*\n * ABQLRowSaveCore\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSave = require(\"../../platform/ql/ABQLSetSave.js\");\n\nclass ABQLRowSaveCore extends ABQLSetSave {}\n\nABQLRowSaveCore.key = \"row_save\";\nABQLRowSaveCore.label = \"Save the value as\";\nABQLRowSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLRowSaveCore;\n","/*\n * ABQLRowUpdateCore\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLRow = require(\"./ABQLRow.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectValues\",\n      name: \"values\",\n   },\n];\n\nclass ABQLRowUpdateCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLRowUpdateCore.key = \"update\";\nABQLRowUpdateCore.label = \"Update this record\";\nABQLRowUpdateCore.NextQLOps = [];\n// NOTE: .NextQLOps => see the #Hack in the constructor\n\nmodule.exports = ABQLRowUpdateCore;\n","/*\n * ABQLSet\n *\n * Here we define the group of operations that can be performed on a SET of data.\n * A SET is an array of objects/row data.\n *\n */\n\nmodule.exports = [\n   require(\"../../platform/ql/ABQLSetFirst.js\"),\n   require(\"../../platform/ql/ABQLSetPluck.js\"),\n   require(\"../../platform/ql/ABQLSetSave.js\"),\n];\n","/*\n/*\n * ABQLSetFirstCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst ABQLRow = require(\"./ABQLRow.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLSetFirst task is complete.  In this case the {ABQLRow} operations come\n// next.  {ABQLRow} operations work on a single row of data.\n\nclass ABQLSetFirstCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, [], prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLSetFirstCore.key = \"first\";\nABQLSetFirstCore.label = \"Select the first record\";\nABQLSetFirstCore.NextQLOps = ABQLRow;\n\nmodule.exports = ABQLSetFirstCore;\n","/*\n/*\n * ABQLSetPluckCore\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field to then make an array of values that only contain that field.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectFields\",\n      name: \"fieldID\",\n   },\n];\n\nclass ABQLSetPluckCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      // we need to gather our .field and .objectOut before we\n      // allow our base class to continue forward:\n\n      this.fieldID = attributes.fieldID;\n      this.field = this.object?.fieldByID(this.fieldID);\n\n      //// TODO: figure out how to dynamically update the next row of options\n      //// based upon the current choice of field.\n      // // based upon the type of field, we now configure what next steps\n      // // are available.\n      // if (this.field) {\n      //    // if connected, then we can stay with same .NextQLOps\n      //    // so we can just leave what we did above.\n\n      //    // if a discreet value, then we need to remove SetPluck\n      //    if (!this.field.isConnection) {\n      //       this.constructor.NextQLOps = [\n      //          ...this.prevOP.constructor.NextQLOps,\n      //       ].filter((o) => o.key != this.constructor.key);\n      //    }\n      // }\n\n      if (attributes.objectOutID)\n         this.objectOut = this.objectLookup(attributes.objectOutID);\n\n      super.fromAttributes(attributes);\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.fieldID) {\n         obj.fieldID = this.fieldID;\n\n         if (this.objectOut) obj.objectOutID = this.objectOut.id;\n      } else {\n         obj.fieldID = this.params.field || null;\n\n         const field = this.object.fieldByID(obj.fieldID);\n\n         if (field?.isConnection) obj.objectOutID = field.datasourceLink.id;\n      }\n\n      return obj;\n   }\n}\n\nABQLSetPluckCore.key = \"set_pluck\";\nABQLSetPluckCore.label = \"Read the value from the field\";\nABQLSetPluckCore.NextQLOps = [];\n\nmodule.exports = ABQLSetPluckCore;\n","/*\n/*\n * ABQLSetSaveCore\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"taskParam\",\n      name: \"task_param\",\n   },\n];\n\nclass ABQLSetSaveCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // TODO: register with the task that we can provide data.\n      if (this.taskParam) {\n         task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      super.fromAttributes(attributes);\n\n      this.taskParam = attributes.taskParam || this.params.task_param;\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      obj.taskParam = this.taskParam || this.params.task_param;\n\n      return obj;\n   }\n\n   processDataField(id, label) {\n      // we have to report back on:\n      // key:  id.taskParam\n      // label: label->taskParam\n      // object: ABObject\n      // field: ABField\n      // set : {bool}\n\n      let field = null;\n      // {ABField}\n      // if the value being stored is NOT a connectObject, then it is\n      // a particular field in the previous object.\n\n      // if we are saving a specific field of an Object, pass that\n      // ABField along:\n      if (this.prevOP?.field?.key !== \"connectObject\")\n         field = this?.prevOP?.field;\n\n      return {\n         key: `${id}.${this.taskParam || this.params.task_param}`,\n         label: `${label}->${this.taskParam || this.params.task_param}`,\n         field: field,\n         object: this.object,\n         set: true,\n      };\n   }\n}\n\nABQLSetSaveCore.key = \"set_save\";\nABQLSetSaveCore.label = \"Save the value as\";\nABQLSetSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLSetSaveCore;\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCSVExporterDefaults = {\n   key: \"csvExporter\", // unique key identifier for this ABViewForm\n   icon: \"download\", // icon reference: (without 'fa-' )\n   labelKey: \"CSV Exporter\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewCSVExporterPropertyComponentDefaults = {\n   dataviewID: null,\n   where: null,\n   buttonLabel: \"Export CSV\",\n   filename: \"exportCSV\",\n   hasHeader: true,\n   width: 150,\n   hiddenFieldIds: [],\n};\n\nmodule.exports = class ABViewCSVExporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVExporterDefaults\n      );\n   }\n\n   static common() {\n      return ABViewCSVExporterDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCSVExporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert to boolean\n      if (typeof values.settings.hasHeader == \"string\")\n         this.settings.hasHeader = JSON.parse(values.settings.hasHeader);\n\n      if (this.settings.hasHeader == null)\n         this.settings.hasHeader =\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader;\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         values.settings.width ||\n            ABViewCSVExporterPropertyComponentDefaults.width\n      );\n\n      this.settings.hiddenFieldIds =\n         values.settings.hiddenFieldIds ||\n         ABViewCSVExporterPropertyComponentDefaults.hiddenFieldIds;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n\nconst ABViewCSVImporterDefaults = {\n   key: \"csvImporter\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"upload\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"CSV Importer\",\n   // {string}\n   // the multilingual label key for the class label\n   // NOTE: will be used as L(labelKey)\n};\n\nconst ABViewCSVImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   availableFieldIds: [],\n   //{array}\n   // A list of ABField.ids that are allowed to be imported using this widget.\n\n   buttonLabel: \"Upload CSV\",\n   // {string}\n   // The Label(key) to display on the initial button\n\n   width: 0,\n   // {integer}\n   // Width of the Popup.\n\n   recordRules: [],\n   // {array}  [ {RecordRule}, ... ]\n   // A list of ABViewRuleListFormRecordRules that should be performed upon\n   // each row of data imported.\n   // The Array should look like:\n   // [{\n   //    action: {string},\n   //    when: [\n   //       {\n   //          fieldId: {UUID},\n   //          comparer: {string},\n   //          value: {string}\n   //       }\n   //    ],\n   //    values: [\n   //       {\n   //          fieldId: {UUID},\n   //          value: {object}\n   //       }\n   //    ]\n   // }]\n};\n\nmodule.exports = class ABViewCSVImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVImporterDefaults\n      );\n   }\n\n   /**\n    * @method common()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * @return {json}\n    */\n   static common() {\n      return ABViewCSVImporterDefaults;\n   }\n\n   /**\n    * @method defaultValues()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * Component that is displayed on the UI.\n    * @return {json}\n    */\n   static defaultValues() {\n      return ABViewCSVImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewCSVImporterPropertyComponentDefaults.width\n      );\n   }\n\n   get RecordRule() {\n      let object = this.datacollection?.datasource;\n      if (!object) return null;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      rowDatas.forEach((row) => {\n         this.RecordRule?.processPre({ data: row.data || row, form: this });\n      });\n   }\n\n   doRecordRules(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      if (!this.RecordRule) return Promise.resolve();\n\n      let tasks = [];\n\n      rowDatas.forEach((row) => {\n         tasks.push(\n            this.RecordRule.process({ data: row.data || row, form: this })\n         );\n      });\n\n      return Promise.all(tasks);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCarouselPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n\n   width: 460,\n   height: 275,\n   showLabel: true,\n   hideItem: false,\n   hideButton: false,\n   navigationType: \"corner\", // \"corner\" || \"side\"\n   filterByCursor: false,\n\n   detailsPage: null, // uuid\n   detailsTab: null, // uuid\n   editPage: null, // uuid\n   editTab: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"carousel\", // {string} unique key for this view\n   icon: \"clone\", // {string} fa-[icon] reference for this view\n   labelKey: \"Carousel\", // {string} the multilingual label key for the class label\n};\n\nfunction parseIntOrDefault(_this, key) {\n   if (typeof _this.settings[key] != \"undefined\") {\n      _this.settings[key] = parseInt(_this.settings[key]);\n   } else {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nfunction parseOrDefault(_this, key) {\n   try {\n      _this.settings[key] = JSON.parse(_this.settings[key]);\n   } catch (e) {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nmodule.exports = class ABViewCarouselCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCarouselPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      parseIntOrDefault(this, \"width\");\n      parseIntOrDefault(this, \"height\");\n\n      // json\n      parseOrDefault(this, \"showLabel\");\n      parseOrDefault(this, \"hideItem\");\n      parseOrDefault(this, \"hideButton\");\n\n      this.settings.navigationType =\n         this.settings.navigationType ||\n         ABViewCarouselPropertyComponentDefaults.navigationType;\n\n      parseOrDefault(this, \"filterByCursor\");\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   get imageField() {\n      let dc = this.datacollection;\n      if (!dc) return null;\n\n      let obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.field);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartAreaPropertyComponentDefaults = {\n   areaType: \"area\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"area\", // {string} unique key for this view\n   icon: \"area-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Area\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartAreaCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartAreaPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.areaType =\n         this.settings.areaType ||\n         ABViewChartAreaPropertyComponentDefaults.areaType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartAreaPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartAreaPropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartAreaPropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartAreaPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartAreaPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartAreaPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"areaLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartBarPropertyComponentDefaults = {\n   barType: \"bar\",\n   barPreset: \"column\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"bar\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Bar\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartBarCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartBarPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.barType =\n         this.settings.barType ||\n         ABViewChartBarPropertyComponentDefaults.barType;\n\n      this.settings.barPreset =\n         this.settings.barPreset ||\n         ABViewChartBarPropertyComponentDefaults.barPreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartBarPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartBarPropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartBarPropertyComponentDefaults.height\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartBarPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartBarPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartBarPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"barLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewChartPropertyComponentDefaults = {\n   dataviewID: \"\",\n   columnValue: \"\",\n   columnLabel: \"\",\n   columnValue2: \"\",\n   isPercentage: 1,\n   showLabel: 1,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   multipleSeries: 0,\n};\n\nconst ABViewChartDefaults = {\n   key: \"chart\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Chart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewChartDefaults);\n   }\n\n   static common() {\n      return ABViewChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewChartPropertyComponentDefaults.dataviewID;\n\n      this.settings.columnValue =\n         this.settings.columnValue ??\n         ABViewChartPropertyComponentDefaults.columnValue;\n\n      this.settings.columnLabel =\n         this.settings.columnLabel ??\n         ABViewChartPropertyComponentDefaults.columnLabel;\n\n      this.settings.columnValue2 =\n         this.settings.columnValue2 ??\n         ABViewChartPropertyComponentDefaults.columnValue2;\n\n      this.settings.isPercentage = parseInt(\n         this.settings.isPercentage ??\n            ABViewChartPropertyComponentDefaults.isPercentage\n      );\n\n      this.settings.showLabel = parseInt(\n         this.settings.showLabel ??\n            ABViewChartPropertyComponentDefaults.showLabel\n      );\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewChartPropertyComponentDefaults.labelPosition;\n\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ??\n            ABViewChartPropertyComponentDefaults.labelWidth\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPropertyComponentDefaults.height\n      );\n\n      this.settings.multipleSeries = parseInt(\n         this.settings.multipleSeries ??\n            ABViewChartPropertyComponentDefaults.multipleSeries\n      );\n\n      this.translate(this, this, [\"chartLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      const viewsToAllow = [\"label\", \"pie\", \"bar\", \"line\", \"area\"];\n      return this.application.viewAll((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   labelField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnLabel);\n   }\n\n   valueField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue);\n   }\n\n   valueField2() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue2);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartLinePropertyComponentDefaults = {\n   lineType: \"line\",\n   linePreset: \"plot\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"line\", // {string} unique key for this view\n   icon: \"line-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Line\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartLineCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartLinePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.lineType =\n         this.settings.lineType ||\n         ABViewChartLinePropertyComponentDefaults.lineType;\n\n      this.settings.linePreset =\n         this.settings.linePreset ||\n         ABViewChartLinePropertyComponentDefaults.linePreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartLinePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartLinePropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartLinePropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartLinePropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartLinePropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartLinePropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"lineLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartPiePropertyComponentDefaults = {\n   pieType: \"pie\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   innerFontSize: 12,\n   labelFontSize: 12,\n};\n\nconst ABViewDefaults = {\n   key: \"pie\", // {string} unique key for this view\n   icon: \"pie-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pie\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartPieCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPiePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.pieType =\n         this.settings.pieType ||\n         ABViewChartPiePropertyComponentDefaults.pieType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartPiePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartPiePropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPiePropertyComponentDefaults.height\n      );\n\n      this.settings.innerFontSize = parseInt(\n         this.settings.innerFontSize ??\n            ABViewChartPiePropertyComponentDefaults.innerFontSize\n      );\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartPiePropertyComponentDefaults.labelFontSize\n      );\n\n      this.translate(this, this, [\"pieLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCommentPropertyComponentDefaults = {\n   dataviewID: null,\n   columnUser: null,\n   columnComment: null,\n   columnDate: null,\n   height: 300,\n   label: \"\", // label is required and you can add more if the component needs them\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n};\n\nconst ABViewDefaults = {\n   key: \"comment\", // {string} unique key for this view\n   icon: \"comments\", // {string} fa-[icon] reference for this view\n   labelKey: \"Comment\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCommentCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCommentPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      // this.settings.format = parseInt(this.settings.format);\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.height = parseInt(this.settings.height || 0);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   getCurrentUserId() {\n      const userObject = this.getUsers();\n      const currentUser = this.AB.Account.username();\n      //Anonymous User = 0\n\n      if (!userObject) return;\n\n      return userObject.findIndex((e) => e.value === currentUser) + 1;\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((e) => {\n         return {\n            id: e.username,\n            value: e.username,\n            image: e.image_id,\n         };\n      });\n   }\n\n   getUserField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnUser);\n   }\n\n   getCommentField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnComment);\n   }\n\n   getDateField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnDate);\n   }\n\n   getUserData() {\n      let UserImageField = this.AB.objectUser().fieldByID(\n         \"6383ce19-b344-44ee-87e6-decced7361f8\"\n      );\n\n      var userObject = this.getUsers();\n      var userList = [];\n\n      if (!userObject) return;\n\n      userObject.forEach((item, index) => {\n         var imageURL = \"\";\n         if (item.image) {\n            imageURL = UserImageField.urlImage(item.image);\n         }\n         var user = { id: index + 1, value: item.value, image: imageURL };\n         userList.push(user);\n      });\n      return userList;\n   }\n\n   model() {\n      let dv = this.datacollection;\n      if (!dv) return null; // TODO: refactor in v2\n\n      // get ABModel\n      let model = dv.model; // already notified\n      if (!model) return null;\n\n      return model;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewPropertyDefaults = {\n   dataviewID: null,\n   filterConditions: {},\n};\n\nconst ABViewDefaults = {\n   key: \"conditionalcontainer\", // unique key identifier for this ABView\n   icon: \"shield\", // icon reference: (without 'fa-' )\n   labelKey: \"Conditional Container\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConditionalContainerCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      const L = (...params) => this.AB.Multilingual.label(...params);\n\n      // the conditional container always has 'If' and 'Else' panels\n      if (this.views((v) => v instanceof ABViewContainer).length < 2) {\n         this._views = [];\n\n         // 'If' panel\n         const ifPanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"If\"),\n               name: \"If\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(ifPanel);\n\n         // 'Else' panel\n         const elsePanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"Else\"),\n               name: \"Else\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(elsePanel);\n      }\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * For a Conditional Container, we don't allow any other items to be placed on it.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewConnectDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"connect-data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connected Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConnectDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewConnectDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","/*\n * ABViewContainerCore\n *\n * An ABViewContainerCore defines a UI display component.\n *\n * A container might have multiple columns of display info.\n *\n */\n\nconst ABView = require(\"../../platform/views/ABView\");\n\n// function L(key, altText) {\n// \treturn AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"viewcontainer\", // {string} unique key for this view\n   icon: \"braille\", // {string} fa-[icon] reference for this view\n   labelKey: \"Container\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columns: 1,\n   gravity: 1,\n   movable: true,\n   removable: true,\n};\n\nmodule.exports = class ABViewContainerCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columns = parseInt(\n         this.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      if (typeof this.settings.gravity != \"undefined\") {\n         this.settings.gravity.map(function (gravity) {\n            return parseInt(gravity);\n         });\n      }\n\n      if (this.settings.removable != null) {\n         this.settings.removable = JSON.parse(this.settings.removable); // convert to boolean\n      } else {\n         this.settings.removable = ABPropertyComponentDefaults.removable;\n      }\n\n      if (this.settings.movable != null) {\n         this.settings.movable = JSON.parse(this.settings.movable); // convert to boolean\n      } else {\n         this.settings.movable = ABPropertyComponentDefaults.movable;\n      }\n   }\n\n   viewsSortByPosition() {\n      // Sort views from y, x positions\n      return this.views().sort((a, b) => {\n         if (a.position.y == b.position.y) return a.position.x - b.position.x;\n         else return a.position.y - b.position.y;\n      });\n   }\n\n   // saveReorder() {\n   //    return this.application.viewReorder(this);\n   // }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABViewDefaults = {\n   key: \"view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // // NOTE: ensure we have a uuid() set:\n      // if (!this.id) {\n      //    this.id = this.application.uuid();\n      // }\n\n      // this.application.unTranslate(this, this, [\"label\"]);\n\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || \"view\",\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || \"view\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label = this.parent.label + \".\" + this.defaults.key;\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      // convert from \"0\" => 0\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      var accessibleRoles = Object.keys(this.accessLevels) || [];\n      (roles || []).forEach((r) => {\n         if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n            foundRole = true;\n         }\n      });\n\n      return foundRole;\n   }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   getUserAccess() {\n      // by default everyone has no access\n      var accessLevel = 0;\n\n      if (this.application.isAccessManaged) {\n         // check to see if the current users is the access manager\n         var isAccessManager = false;\n         // first check if manager is defined by their role\n         if (parseInt(this.application.accessManagers.useRole) == 1) {\n            // if so check if any of the user's role match the managers\n            this.AB.Account.roles().forEach((role) => {\n               if (\n                  this.application.accessManagers.role.indexOf(\n                     role.id || role.uuid\n                  ) > -1\n               ) {\n                  // if so set the access level to full access\n                  isAccessManager = true;\n                  accessLevel = 2;\n               }\n            });\n         }\n         // if the user isn't already set as the manager and the manager is defined by their account\n         if (\n            !isAccessManager &&\n            parseInt(this.application.accessManagers.useAccount) == 1\n         ) {\n            // check if the user's account matches the managers\n            if (\n               this.application.accessManagers.account.indexOf(\n                  this.AB.Account.uuid() + \"\"\n               ) > -1\n            ) {\n               // if so set the access level to full access\n               isAccessManager = true;\n               accessLevel = 2;\n            }\n         }\n\n         // if the user is not the manager check if the page has access levels defined for roles\n         if (\n            this.accessLevels &&\n            Object.keys(this.accessLevels).length > 0 &&\n            !isAccessManager\n         ) {\n            // check to see if the user's roles matches one of the roles defined\n            this.AB.Account.roles().forEach((role) => {\n               var currentRole = this.accessLevels[role.id || role.uuid];\n               if (currentRole && parseInt(currentRole) > accessLevel)\n                  // if the access level is higher than a previous role set to the new level\n                  accessLevel = parseInt(currentRole);\n            });\n         }\n      } else {\n         accessLevel = 2;\n      }\n\n      return accessLevel;\n   }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlView() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   /**\n    * @method urlView\n    * return a string pointer to this object's views.\n    * @return {string}\n    */\n   urlView() {\n      return this.urlPointer() + \"/_views/\";\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\"form\", \"grid\", \"line\", \"area\", \"bar\", \"gantt\", \"kanban\"].indexOf(\n               this.key\n            ) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\"button\", \"label\", \"page\", \"tab\", \"viewcontainer\"].indexOf(\n                  this.key\n               ) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `View[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   updateAccessLevels(roleId, accessLevel) {\n      if (parseInt(accessLevel) == 0) {\n         if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n      } else {\n         this.accessLevels[roleId] = accessLevel;\n      }\n\n      return this.save(false, false);\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         result = result.concat(this._views.filter(filter));\n\n         this._views.forEach((v) => {\n            var subViews = v.views(filter, deep);\n            if (subViews && subViews.length > 0) {\n               result = result.concat(subViews);\n            }\n         });\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewNew()\n    *\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewDestroy(view) {\n      console.error(\"DEPRECIATED: where is this called?\");\n      return this.viewRemove(view);\n   }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid,\n   viewType: \"advanced\",\n   showFilter: 1,\n   showSort: 1,\n};\n\nconst ABViewDefaults = {\n   key: \"data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataSelectPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n};\n\nconst ABViewDefaults = {\n   key: \"data-select\", // {string} unique key for this view\n   icon: \"chevron-circle-down\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Select\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataSelectCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataSelectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetail = require(\"../../platform/views/ABViewDetail\");\n\nconst ABViewDataviewPropertyComponentDefaults = {\n   xCount: 1, // {int} the number of columns per row (need at least one)\n   detailsPage: \"\",\n   detailsTab: \"\",\n   editPage: \"\",\n   editTab: \"\",\n};\n\nconst ABViewDataviewDefaults = {\n   key: \"dataview\", // {string} unique key for this view\n   icon: \"th\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data view\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataviewCore extends ABViewDetail {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewDataviewDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDataviewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataviewPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.xCount = parseInt(\n         this.settings.xCount || ABViewDataviewPropertyComponentDefaults.xCount\n      );\n      this.settings.detailsPage =\n         this.settings.detailsPage ||\n         ABViewDataviewPropertyComponentDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ||\n         ABViewDataviewPropertyComponentDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ||\n         ABViewDataviewPropertyComponentDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ||\n         ABViewDataviewPropertyComponentDefaults.editTab;\n   }\n\n   parentDetailComponent() {\n      let dataview = null;\n\n      let curr = this;\n      while (curr.key != \"dataview\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"dataview\") {\n         dataview = curr;\n      }\n\n      return dataview;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCheckboxPropertyComponentDefaults = {};\n\nconst ABViewDetailCheckboxDefaults = {\n   key: \"detailcheckbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCheckboxCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCheckboxPropertyComponentDefaults;\n   }\n};\n","// const ABViewDetailSelectivity = require(\"../../platform/views/ABViewDetailSelectivity\");\nconst ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n};\n\nconst ABViewDefaults = {\n   key: \"detailconnect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailConnectCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewDetailDefaults = {\n   key: \"detail\", // {string} unique key for this view\n   icon: \"file-text-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Detail\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewDetailPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 0,\n};\n\nmodule.exports = class ABViewDetailCore extends ABViewContainer {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDetailDefaults);\n   }\n\n   static common() {\n      return ABViewDetailDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewDetailPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewDetailPropertyComponentDefaults.showLabel\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ||\n            ABViewDetailPropertyComponentDefaults.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewDetailPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      let viewsToAllow = [\"label\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   addFieldToDetail(field, yPosition) {\n      if (field == null) return;\n\n      let newView = field.detailComponent().newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings ?? {};\n      newView.settings.fieldId = field.id;\n      newView.settings.labelWidth =\n         this.settings.labelWidth ||\n         ABViewDetailPropertyComponentDefaults.labelWidth;\n\n      // keep alias to support Query that contains alias name\n      // [alias].[columnName]\n      newView.settings.alias = field.alias;\n\n      // TODO : Default settings\n\n      newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCustomPropertyComponentDefaults = {};\n\nconst ABViewDetailCustomDefaults = {\n   key: \"detailcustom\", // {string} unique key for this view\n   icon: \"dot-circle-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCustomCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCustomPropertyComponentDefaults;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailImagePropertyComponentDefaults = {\n   height: 80,\n   width: 120,\n};\n\nconst ABViewDetailImageDefaults = {\n   key: \"detailimage\", // {string} unique key for this view\n   icon: \"image\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailImageCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailImageDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailImageDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailImagePropertyComponentDefaults.height\n      );\n      this.settings.width = parseInt(\n         this.settings.width ?? ABViewDetailImagePropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nmodule.exports = class ABViewDetailItemCore extends ABViewWidget {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   detailComponent() {\n      let detailView = null;\n\n      let curr = this;\n      while (\n         !curr.isRoot() &&\n         curr.parent &&\n         curr.key != \"detail\" &&\n         curr.key != \"dataview\"\n      ) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\" || curr.key == \"dataview\") {\n         detailView = curr;\n      }\n\n      return detailView;\n   }\n\n   field() {\n      let detailComponent = this.detailComponent();\n      if (detailComponent == null) return null;\n\n      let datacollection = detailComponent.datacollection;\n      if (datacollection == null) return null;\n\n      let object = datacollection.datasource;\n      if (object == null) return null;\n\n      let field = object.fields((v) => v.id == this.settings.fieldId)[0];\n\n      // set .alias to support queries that contains alias name\n      // [aliasName].[columnName]\n      if (field && this.settings.alias) {\n         field.alias = this.settings.alias;\n      }\n\n      return field;\n   }\n\n   getCurrentData() {\n      let detailCom = this.detailComponent();\n      if (!detailCom) return null;\n\n      let dv = detailCom.datacollection;\n      if (!dv) return null;\n\n      let field = this.field();\n      if (!field) return null;\n\n      let currData = dv.getCursor();\n      if (currData) return currData[field.columnName];\n      else return null;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailTextPropertyComponentDefaults = {\n   height: 0,\n};\n\nconst ABViewDetailTextDefaults = {\n   key: \"detailtext\", // {string} unique key for this view\n   icon: \"etsy\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.text\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTextDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTextDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailTextPropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {};\n\nconst ABViewDetailTreeDefaults = {\n   key: \"detailtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTreeDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = {\n   buttonlabel: \"Download DOCX\",\n   dataviewID: null,\n   width: 0,\n   filename: \"\", // uuid\n   filelabel: \"output.docx\",\n   language: \"en\", // en\n   toolbarBackground: \"ab-background-default\",\n   buttonPosition: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"docxBuilder\", // {string} unique key for this view\n   icon: \"file-word-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"DOCX Builder\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDocxBuilderCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDocxBuilderPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"filelabel\", \"buttonlabel\"]);\n\n      let obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewDocxBuilderPropertyComponentDefaults.width\n      );\n\n      this.translate(this, this, [\"filelabel\", \"buttonlabel\"]);\n   }\n\n   uploadUrl() {\n      // TODO: Convert this to use ABFactory.urlFileUpload() or a ABFieldFile\n      // to get the URL:\n\n      // support uploading template when more than one data source is selected\n      const object = this.datacollections[0].datasource;\n\n      // NOTE: file-upload API needs to have the id of ANY field.\n      const field = object ? object.fields()[0] : null;\n\n      return `/file/upload/${object?.id}/${field?.id}/1`;\n   }\n\n   downloadUrl() {\n      return `/file/${this.settings.filename}`;\n   }\n\n   get languageCode() {\n      return (\n         this.settings.language ||\n         ABViewDocxBuilderPropertyComponentDefaults.language\n      );\n   }\n\n   get datacollections() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) return [];\n\n      let dvList = dataviewID.split(\",\") || [];\n\n      return this.AB.datacollections((dv) => dvList.indexOf(dv.id) > -1) || [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   includeDelete: false,\n   deleteLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"ab.components.button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormButtonCore extends ABView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      if (this.settings.deleteLabel) labels.push(\"deleteLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      if (this.settings.deleteLabel) labels.push(\"deleteLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      this.settings.includeSave = JSON.parse(\n         (this.settings?.includeSave ?? true) &&\n            ABViewFormButtonPropertyComponentDefaults.includeSave\n      );\n      this.settings.includeCancel = JSON.parse(\n         this.settings.includeCancel ||\n            ABViewFormButtonPropertyComponentDefaults.includeCancel\n      );\n      this.settings.includeReset = JSON.parse(\n         this.settings.includeReset ||\n            ABViewFormButtonPropertyComponentDefaults.includeReset\n      );\n      this.settings.includeDelete = JSON.parse(\n         this.settings.includeDelete ||\n            ABViewFormButtonPropertyComponentDefaults.includeDelete\n      );\n\n      this.settings.isDefault = JSON.parse(\n         this.settings.isDefault ||\n            ABViewFormButtonPropertyComponentDefaults.isDefault\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABViewFormCheckboxDefaults = {\n   key: \"checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCheckboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCheckboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   // objectWorkspace: {\n   //    filterConditions: {\n   //       // array of filters to apply to the data table\n   //       glue: \"and\",\n   //       rules: [],\n   //    },\n   // },\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABViewFormConnectDefaults = {\n   key: \"connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormConnectCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"form\", // unique key identifier for this ABViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABViewFormCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"label\", \"layout\", \"button\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    *\n    * return an array of all the ABViewFormField children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViewFormField that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) => comp instanceof ABViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      var fieldComponent = field.formComponent();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCustom extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABViewFormDatepickerDefaults = {\n   key: \"datepicker\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormDatepickerCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABViewFormComponentCore extends ABView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormJsonPropertyComponentDefaults = {\n   type: \"string\", // 'string', 'systemObject' or 'filter'\n};\n\nconst ABViewFormJsonDefaults = {\n   key: \"json\", // {string} unique key for this view\n   icon: \"brackets-curly\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.json\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormJsonCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormJsonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormJsonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormJsonPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABViewFormNumberDefaults = {\n   key: \"numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormNumberCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABViewFormReadonlyDefaults = {\n   key: \"fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormReadonlyPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"multicombo\", // 'richselect' or 'radio'\n};\n\nconst ABSelectMultipleDefaults = {\n   key: \"selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectMultipleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectMultiplePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABSelectSingleDefaults = {\n   key: \"selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectSingleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectSinglePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTextboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormTreePropertyComponentDefaults = {};\n\nconst ABTreeDefaults = {\n   key: \"formtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTreeCore extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABTreeDefaults);\n   }\n\n   static common() {\n      return ABTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTreePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGanttPropertyComponentDefaults = {\n   dataviewID: \"\",\n   // {string}\n   // {ABDatacollection.id} of the datacollection that contains the data for\n   // the Gantt chart.\n\n   titleFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n\n   startDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the start date\n\n   endDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the end date\n\n   durationFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that contains the duration\n\n   progressFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that marks the progress\n\n   notesFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n};\n\nconst ABViewDefaults = {\n   key: \"gantt\", // {string} unique key for this view\n   icon: \"tasks\", // {string} fa-[icon] reference for this view\n   labelKey: \"Gantt\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewGanttCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGanttPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      Object.keys(ABViewGanttPropertyComponentDefaults).forEach((k) => {\n         this.settings[k] =\n            this.settings[k] || ABViewGanttPropertyComponentDefaults[k];\n      });\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGridPropertyComponentDefaults = {\n   label: \"\",\n   // {string}\n   // label is required and you can add more if the component needs them\n\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n   dataviewID: \"\",\n   // {uuid}\n   // uuid of ABDataCollection that drives the data for our Grid\n\n   padding: 17,\n   // {int}\n   // the default padding surrounding the component\n\n   showToolbar: 1,\n   // {bool}\n   // do we show our toolbar?\n\n   isEditable: 0,\n   // {bool}\n   // do we allow editing in the grid?\n\n   massUpdate: 0,\n   // {bool}\n   // do we allow the Mass Update capability? (row checkboxes and the\n   // MassUpdate popup)\n\n   allowDelete: 0,\n   // {bool}\n   // do we allow deleting multiple rows at a time? Mass Delete.\n\n   // isFilterable:0,\n\n   isSortable: 1,\n   // {bool}\n   // do we allow the sort options.\n\n   isExportable: 0,\n   // {bool}\n   // do we enable the webix export from grid capabilities?\n\n   // linkedObject:'',\n   // linkedField:'',\n   // linkedPage:'',\n   // linkedPageView:'',\n   // linkedEditPage:'',\n   // linkedEditPageForm:'',\n\n   detailsPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the details component.\n\n   detailsTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the details component.\n   // NOTE: if your details is embedded on a TAB, we need both the\n   // .detailsPage & .detailsTab to successfully show the item.\n\n   editPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the edit component.\n\n   editTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the edit component.\n   // NOTE: if your editor is embedded on a TAB, we need both the\n   // .editPage & .editTab to successfully show the form.\n\n   trackView: 0,\n   // {bool}\n   // Do we offer the ability to track changes to this object/row?\n\n   frozenColumnID: \"\",\n   // {ABField.id}\n   // id of column you want to stop freezing the left hand side at.\n\n   hiddenFields: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add hidden:true to\n\n   summaryColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the SUM footer to\n\n   countColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the Count footer to\n\n   // TODO: get rid of objectWorkspace!\n   objectWorkspace: {\n      // sortFields:[], // array of columns with their sort configurations\n      // filterConditions:[], // array of filters to apply to the data table\n      frozenColumnID: \"\", // id of column you want to stop freezing\n      hiddenFields: [], // array of [ids] to add hidden:true to\n      summaryColumns: [],\n      countColumns: [],\n   },\n   gridFilter: {\n      filterOption: 1,\n      userFilterPosition: \"toolbar\",\n      isGlobalToolbar: 1,\n   },\n   // summaryFields: [], // array of [field ids] to add the summary column in footer\n   // countFields: [], // array of [field ids] to add the summary column in footer\n\n   height: 0,\n   // {int}\n   // The Height of our Grid.\n   // See ../views/ABViewDataview.js\n\n   hideHeader: 0,\n   labelAsField: 0,\n   hideButtons: 0,\n   groupBy: \"\", // id of field\n\n   // TODO: add to ABDesigner.interface design:\n   columnConfig: [],\n   // {array} [ {columnHeader}, {columnHeader} ... ]\n   // An array of column headers for the grid to display. These should\n   // be generated at Design time, and can allow the designer to ORDER the\n   // columns, assign column widths, fillspace, etc...\n   //    {columnHeader}\n   //    The minimum amount of information a Grid needs for it's customization\n   //    .id {string} ABField.columnName\n   //    .fieldId {string} ABField.id\n   //    .width {int}\n   //    .fillspace {bool}\n   //    .minwidth\n   //\n   //    When displaying column headers, we will ask the\n   //    CurrentObject.columnHeaders(), and then modify them with our settings\n   //    here.\n\n   saveLocal: 1,\n   // {bool}\n   // Allow saving of local changes to our grid display. This will enable\n   // a user to modify the Grid display locally.\n};\n\nconst ABViewDefaults = {\n   key: \"grid\", // {string} unique key for this view\n   icon: \"table\", // {string} fa-[icon] reference for this view\n   labelKey: \"Grid\", // {string} the multilingual label key for the class label\n};\n\n/**\n * @function settingsDefault()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that are NOT TRUTHY ... so not for numeric\n * 1 or 0.\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefault(base, field) {\n   if (typeof base[field] == \"undefined\") {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n      return;\n   }\n   base[field] = base[field] || ABViewGridPropertyComponentDefaults[field];\n}\n\n/**\n * @function settingsDefaultJSON()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that ARE TRUTHY ... so for numeric 1 or 0\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefaultJSON(base, field) {\n   try {\n      if (typeof base[field] == \"string\") {\n         base[field] = JSON.parse(base[field]);\n      }\n   } catch (e) {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n   }\n}\n\nmodule.exports = class ABViewGridCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGridPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      settingsDefault(this.settings, \"dataviewID\");\n\n      // Convert to boolean\n      // these values are sometimes 0 (number) at this point so the JSON.parse\n      // with the || (or) statement was always falling to the default so I am\n      // trying to parse the value...if it fails we use the default value\n      settingsDefaultJSON(this.settings, \"padding\");\n      settingsDefaultJSON(this.settings, \"showToolbar\");\n      settingsDefaultJSON(this.settings, \"isEditable\");\n      settingsDefaultJSON(this.settings, \"massUpdate\");\n      settingsDefaultJSON(this.settings, \"allowDelete\");\n      // this.settings.isFilterable = JSON.parse(this.settings.isFilterable || ABViewGridPropertyComponentDefaults.isFilterable);\n      settingsDefaultJSON(this.settings, \"isSortable\");\n      settingsDefaultJSON(this.settings, \"isExportable\");\n      settingsDefaultJSON(this.settings, \"hideHeader\");\n      settingsDefaultJSON(this.settings, \"labelAsField\");\n      settingsDefaultJSON(this.settings, \"hideButtons\");\n      settingsDefaultJSON(this.settings, \"columnConfig\");\n      settingsDefaultJSON(this.settings, \"saveLocal\");\n\n      this.settings.gridFilter =\n         this.settings.gridFilter ||\n         ABViewGridPropertyComponentDefaults.gridFilter;\n\n      try {\n         this.settings.gridFilter.filterOption = JSON.parse(\n            this.settings.gridFilter.filterOption\n         );\n      } catch (e) {\n         this.settings.gridFilter.filterOption =\n            ABViewGridPropertyComponentDefaults.gridFilter.filterOption;\n      }\n\n      try {\n         this.settings.gridFilter.isGlobalToolbar = JSON.parse(\n            this.settings.gridFilter.isGlobalToolbar\n         );\n      } catch (e) {\n         this.settings.gridFilter.isGlobalToolbar =\n            ABViewGridPropertyComponentDefaults.gridFilter.isGlobalToolbar;\n      }\n\n      // this.settings.linkedObject = this.settings.linkedObject || ABViewGridPropertyComponentDefaults.linkedObject;\n      // this.settings.linkedField = this.settings.linkedField || ABViewGridPropertyComponentDefaults.linkedField;\n      // this.settings.linkedPage = this.settings.linkedPage || ABViewGridPropertyComponentDefaults.linkedPage;\n      // this.settings.linkedPageView = this.settings.linkedPageView || ABViewGridPropertyComponentDefaults.linkedPageView;\n      // this.settings.linkedEditPage = this.settings.linkedEditPage || ABViewGridPropertyComponentDefaults.linkedEditPage;\n      // this.settings.linkedEditPageForm = this.settings.linkedEditPageForm || ABViewGridPropertyComponentDefaults.linkedEditPageForm;\n\n      settingsDefault(this.settings, \"detailsPage\");\n      settingsDefault(this.settings, \"editPage\");\n      settingsDefault(this.settings, \"detailsTab\");\n      settingsDefault(this.settings, \"editTab\");\n      settingsDefaultJSON(this.settings, \"trackView\");\n\n      // TODO: remove objectworkspace!\n      // this.settings.objectWorkspace =\n      //    this.settings.objectWorkspace ||\n      //    ABViewGridPropertyComponentDefaults.objectWorkspace;\n\n      // if (typeof this.settings.objectWorkspace != \"undefined\") {\n      //    if (typeof this.settings.objectWorkspace.sortFields == \"undefined\")\n      //       this.settings.objectWorkspace.sortFields = [];\n      //    if (\n      //       typeof this.settings.objectWorkspace.filterConditions == \"undefined\"\n      //    )\n      //       this.settings.objectWorkspace.filterConditions = [];\n      //    if (typeof this.settings.objectWorkspace.frozenColumnID == \"undefined\")\n      //       this.settings.objectWorkspace.frozenColumnID = \"\";\n      //    if (typeof this.settings.objectWorkspace.hiddenFields == \"undefined\")\n      //       this.settings.objectWorkspace.hiddenFields = [];\n      //    if (typeof this.settings.objectWorkspace.summaryColumns == \"undefined\")\n      //       this.settings.objectWorkspace.summaryColumns = [];\n      //    if (typeof this.settings.objectWorkspace.countColumns == \"undefined\")\n      //       this.settings.objectWorkspace.countColumns = [];\n      // }\n\n      var owFields = [\n         \"sortFields\",\n         \"filterConditions\",\n         \"frozenColumnID\",\n         \"hiddenFields\",\n         \"summaryColumns\",\n         \"countColumns\",\n      ];\n      // Transition: if we have an .objectWorkspace, copy those values in here:\n      if (this.settings.objectWorkspace) {\n         owFields.forEach((f) => {\n            if (this.settings[f] == null)\n               this.settings[f] = this.settings.objectWorkspace[f];\n         });\n      }\n\n      // make sure they have actual default values now.\n      owFields.forEach((f) => {\n         settingsDefault(this.settings, f);\n      });\n\n      // we are not allowed to have sub views:\n      this._views = [];\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   removeField(field, cb) {\n      let shouldSave = false;\n\n      // check to see if there is a frozenColumnID and if it matches the\n      // deleted field\n      if (this.settings?.frozenColumnID == field.columnName) {\n         // remove the column name from the frozen column id\n         this.settings.frozenColumnID = \"\";\n         // flag the object to be saved later\n         shouldSave = true;\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.hiddenFields?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.hiddenFields.indexOf(field.columnName);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.hiddenFields.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are Summary fields\n      if (this.settings.summaryColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.summaryColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.summaryColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.countColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.countColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.countColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n      // if settings were changed call the callback\n\n      cb(null, shouldSave);\n   }\n\n   copyUpdateProperyList() {\n      return [\"detailsPage\", \"detailsTab\", \"editPage\", \"editTab\"];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewImagePropertyComponentDefaults = {\n   filename: \"\",\n   width: 200,\n   height: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"image\", // {string} unique key for this view\n   icon: \"picture-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewImageCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewImagePropertyComponentDefaults.width\n      );\n      this.settings.height = parseInt(\n         this.settings.height || ABViewImagePropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewKanbanPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   editFields: [],\n   // {array}\n   // An array of {ABField.id} that determines which fields should show up\n   // in the editor.\n\n   verticalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the Vertical Grouping\n   // of the Kanban.\n\n   horizontalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the horizontal Grouping\n   // of the Kanban.\n\n   ownerField: \"\",\n   // {ABFieldUser.id}\n   // the .id of the ABFieldUser instance that determines the owner of the\n   // entries.\n\n   template: \"\",\n   // {json}\n   // The {ABViewText} definition used to display the template for this KanBan.\n   //\n   // A display template used for displaying the information in each Card. The\n   // template is a basic string with special placeholders:  {field.id}\n   // Given a row of data, the current object will scan the template for any\n   // placeholders matching one of it's fields, and then update it with the\n   // current value.\n};\n\nconst ABViewDefaults = {\n   key: \"kanban\",\n   // {string}\n   // unique key identifier for this ABView object\n\n   icon: \"columns\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"Kanban\",\n   // {string}\n   // the multilingual label key\n   // NOTE: will be used as L(labelKey)\n};\n\nmodule.exports = class ABViewKanbanCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // set a default .template value\n      if (!this.settings.template) {\n         this.settings.template = { id: `${this.id}_template`, key: \"text\" };\n         this.settings.template.text = this.settings.textTemplate;\n      }\n\n      this.TextTemplate = this.AB.viewNewDetatched(this.settings.template);\n   }\n\n   toObj() {\n      var obj = super.toObj();\n      obj.settings.template = this.TextTemplate.toObj();\n      // NOTE: this corrects the initial save where this.id == undefined\n      // all the rest will set the .id correctly.\n      obj.settings.template.id = `${this.id}_template`;\n      return obj;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewKanbanPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst PropertyComponentDefaults = {\n   label: \"\",\n   numColumns: 1, // The number of columns for this layout\n};\n\nconst ABViewDefaults = {\n   key: \"layout\", // {string} unique key for this view\n   icon: \"columns\", // {string} fa-[icon] reference for this view\n   labelKey: \"Layout\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLayoutCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return PropertyComponentDefaults;\n   }\n\n   /**\n    * @method addColumn\n    * method to actually add a new ABView as one of our columns.\n    * This is called by the static .addView() method.\n    */\n   addColumn() {\n      this._views.push(\n         this.application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n            },\n            this.application,\n            this\n         )\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      if (isEdited) {\n         // if the layout component is being edited in the editor (isEdited == true)\n         // then we return [];\n         return [];\n      } else {\n         // the layout view doesn't care what components are offered, it get's\n         // the list from it's parent view.\n         // ## NOTE: layout views should not be root views.\n         if (this.parent) {\n            return this.parent.componentList(false);\n         } else {\n            return [];\n         }\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewMenuPropertyComponentDefaults = {\n   orientation: \"x\",\n   buttonStyle: \"ab-menu-default\",\n   menuAlignment: \"ab-menu-left\",\n   menuInToolbar: 1,\n   menuPadding: 10,\n   menuTheme: \"bg_gray\",\n   menuPosition: \"left\",\n   menuTextLeft: \"\",\n   menuTextRight: \"\",\n   menuTextCenter: \"\",\n   // [\n   // \t\t{\n   //\t\t\tpageId: uuid,\n   //\t\t\ttabId: uuid,\n   //\t\t\ttype: string, // \"page\", \"tab\"\n   //\t\t\tisChecked: bool,\n   //\t\t\taliasname: string,\n   //\t\t\ttranslations: []\n   //\t\t}\n   // ]\n   pages: [],\n   order: [],\n};\n\nconst ABMenuDefaults = {\n   key: \"menu\", // {string} unique key for this view\n   icon: \"th-large\", // {string} fa-[icon] reference for this view\n   labelKey: \"Menu\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewMenuCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMenuDefaults);\n   }\n\n   static common() {\n      return ABMenuDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewMenuPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewMenu instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n      if (this.settings.pages) {\n         this.settings.pages.forEach((page) => {\n            this.unTranslate(page, page, [\"aliasname\"]);\n         });\n      }\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.translate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n\n      this.settings.pages =\n         this.settings.pages || ABViewMenuPropertyComponentDefaults.pages;\n\n      for (var i = 0; i < this.settings.pages.length; i++) {\n         var page = this.settings.pages[i];\n         if (page instanceof Object) {\n            page.isChecked = JSON.parse(page.isChecked || false);\n\n            this.translate(page, page, [\"aliasname\"]);\n         }\n         // Compatible with old data\n         else if (typeof page == \"string\") {\n            this.settings.pages[i] = {\n               pageId: page,\n               isChecked: true,\n            };\n         }\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   ClearPagesInView(view) {\n      // clear menu items\n      if (view && view.count() > 1) {\n         view.find({}).forEach((item) => {\n            view.remove(item.id);\n         });\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   AddPagesToView(view, pages) {\n      if (!view || !pages) return;\n\n      (pages || []).forEach((displayPage) => {\n         if (displayPage.isChecked) {\n            let existsPage = this.application.pages(\n               (p) => p.id == displayPage.pageId,\n               true\n            )[0];\n            if (!existsPage) return;\n\n            var pageAccessLevel = existsPage.getUserAccess();\n            if (pageAccessLevel == 0) return;\n\n            if (displayPage.tabId) {\n               let existsTab = this.application.views(\n                  (v) => v.id == displayPage.tabId,\n                  true\n               )[0];\n               if (!existsTab) return;\n\n               var tabAccessLevel = existsTab.getUserAccess();\n               if (tabAccessLevel == 0) return;\n            }\n\n            let label = this.getAliasname(displayPage);\n            // create a temporaty store for the menu item\n            var menuItem;\n            // check if page has a parent or not\n            if (displayPage.parent && displayPage.parent != \"0\") {\n               // if page has a parent attempt to grab its submenu\n               menuItem = view.getSubMenu(displayPage.parent);\n            } else {\n               // if the page doesn't have parent use the current menu\n               menuItem = view;\n            }\n            // if the menu item doesn't have a menu selected find it\n            if (menuItem == null) {\n               // get the menu item\n               var curMenu = view.getMenuItem(displayPage.parent);\n               // create a submenu placeholder\n               curMenu.submenu = [];\n               // update the menu with the new submenu included\n               view.refresh(displayPage.parent);\n               // get the submenu we just created\n               menuItem = view.getSubMenu(displayPage.parent);\n            }\n            if (menuItem.exists(displayPage.tabId || displayPage.pageId))\n               return;\n            // add a new item to the menu/submenu\n            menuItem.add(\n               {\n                  id: displayPage.tabId || displayPage.pageId,\n                  value: label,\n                  type: displayPage.type,\n                  pageId: displayPage.pageId,\n                  icon: displayPage.icon\n                     ? \"fa fa-fw fa-\" + displayPage.icon\n                     : \"\",\n               },\n               displayPage.position ? parseInt(displayPage.position) : 0\n            );\n         }\n      });\n   }\n\n   /**\n    * @method getAliasname\n    * @param pageInfo - an object in settings\n    * {\n    * \tpageId: uuid,\n    * \ttabId: uuid,\n    * \ttype: string, - \"page\" or \"tab\"\n    * \tisChecked: bool,\n    * \taliasname: string,\n    *\ttranslations: []\n    *}\n    *\n    * @return {string}\n    */\n   getAliasname(pageInfo) {\n      var lang = this.AB.Multilingual.currentLanguage();\n      var translation = pageInfo.translations.filter((t) => {\n         return t.language_code == lang;\n      });\n\n      var label = \"\";\n\n      if (translation.length) {\n         if (translation[0].aliasname) {\n            label = translation[0].aliasname;\n         } else if (translation[0].label) {\n            label = translation[0].label;\n         }\n      }\n\n      // Just in case there isn't one stored in the translations yet\n      if (!label && pageInfo.aliasname) {\n         label = pageInfo.aliasname;\n      }\n\n      // if alias is empty, then find label of page or tab\n      if (\n         !label ||\n         // remove [en] or [th] etc.\n         !label.replace(/\\[.{2,}\\]/g, \"\")\n      ) {\n         // first check to see if we are actually on a page\n         // if not recursivly look up for the nearest parent page\n         var pageId;\n         if (pageInfo.pageId) {\n            pageId = pageInfo.pageId;\n         } else {\n            pageId = this.getParentPageId(pageInfo);\n         }\n         // find label of the actual page\n         var page = this.application.pages((p) => p.id == pageId, true)[0];\n         if (page) {\n            // find label of the tab view\n            if (pageInfo.type == \"tab\" || pageInfo.key == \"viewcontainer\") {\n               var tabView = page.views(\n                  (v) => v.id == pageInfo.tabId || v.id == pageInfo.id,\n                  true\n               )[0];\n               if (tabView) {\n                  label = tabView.label;\n               }\n            } else {\n               label = page.label;\n            }\n         }\n      }\n\n      return label;\n   }\n\n   getParentPageId(currentView) {\n      if (currentView.key != \"page\") {\n         return this.getParentPageId(currentView.parent);\n      } else {\n         return currentView.id;\n      }\n   }\n\n   copy(lookUpIds, parent) {\n      return super.copy(lookUpIds, parent).then((result) => {\n         // update ids of page's settings\n         (result.settings.pages || []).forEach((p, i) => {\n            let page = result.settings.pages[i];\n\n            // Compatible with old data\n            if (typeof page == \"string\") {\n               result.settings.pages[i] = lookUpIds[page];\n            } else {\n               page.pageId = lookUpIds[page.pageId];\n               page.tabId = lookUpIds[page.tabId];\n            }\n         });\n\n         return result.save().then(() => {\n            return result;\n         });\n      });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewPDFImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   fieldID: null,\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nconst ABViewDefaults = {\n   key: \"pdfImporter\", // {string} unique key for this view\n   icon: \"file-pdf-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"PDF Importer\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPDFImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPDFImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewPDFImporterPropertyComponentDefaults.dataviewID;\n\n      this.settings.fieldID =\n         this.settings.fieldID ??\n         ABViewPDFImporterPropertyComponentDefaults.fieldID;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings ?? {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   doSubmitRules(rowDatas) {\n      const object = this.datacollection.datasource;\n\n      const SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      if (rowDatas && !Array.isArray(rowDatas)) rowDatas = [rowDatas];\n\n      rowDatas?.forEach((rowData) => {\n         SubmitRules.process({ data: rowData, form: this });\n      });\n   }\n};\n","/*\n * ABViewPage\n *\n * An ABView that represents a \"Page\" in the system.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-' )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\", // 'page', 'popup' or 'reportPage'\n   popupWidth: 700,\n   popupHeight: 450,\n   pageWidth: null,\n   fixedPageWidth: 0,\n   pageBackground: \"ab-background-default\",\n};\n\nmodule.exports = class ABViewPageCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABViewPage, but has\n      // different implications ... so we default an ABViewPage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   static getPageActionKey(view) {\n      return [\n         \"opstools\",\n         \"AB_\" + String(view.application.name).replace(/[^a-z0-9]/gi, \"\"),\n         String(view.name)\n            .replace(/[^a-z0-9]/gi, \"\")\n            .toLowerCase(),\n         \"view\",\n      ].join(\".\");\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewPage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n\n      obj.myAppID = this.myAppID;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.AB.error(\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      this.settings.columns = this.settings.columns || 1;\n      this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABViewPage\n            // be sure to remove any of it's ABViewPages as well\n            // This cleans out any dangling ABDefinitions and cleans up the\n            // OpsPortal Permissions:\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n\n      // return new Promise((resolve, reject) => {\n      //    // verify we have been .save() before:\n      //    if (this.id) {\n      //       this.application\n      //          .viewDestroy(this)\n      //          .then(() => {\n      //             // remove the page in list\n      //             var parent = this.parent || this.application;\n      //             var remainingPages = parent.pages((p) => {\n      //                return p.id != this.id;\n      //             });\n      //             parent._pages = remainingPages;\n\n      //             resolve();\n      //          })\n      //          .catch(reject);\n      //    } else {\n      //       resolve(); // nothing to do really\n      //    }\n      // });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABViewPage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABViewPage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance() {\n      console.warn(\n         \"This version of ABViewPage hasn't updated it's refreshInstance()\",\n         this\n      );\n      return this;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABViewPages for this ABViewPage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABViewPages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         if (this._pages && this._pages.length > 0) {\n            result = this._pages.filter(filter);\n\n            if (result.length < 1) {\n               this._pages.forEach((p) => {\n                  var subPages = p.pages(filter, deep);\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n               });\n            }\n         }\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABViewPage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABViewPage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABViewPage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      values.key = ABViewDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABViewPage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABViewPage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for views in this application.\n    * @return {string}\n    */\n   urlPage() {\n      return this.urlPointer() + \"/_pages/\";\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlPage() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABViewDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABViewPage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABViewPage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewPivotPropertyComponentDefaults = {\n   dataviewID: null,\n   removeMissed: 0,\n   totalColumn: 0,\n   separateLabel: 0,\n   min: 0,\n   max: 0,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"pivot\", // {string} unique key for this view\n   icon: \"cube\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pivot\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPivotCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPivotPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Convert to boolean\n      this.settings.removeMissed = JSON.parse(\n         this.settings.removeMissed ||\n            ABViewPivotPropertyComponentDefaults.removeMissed\n      );\n      this.settings.totalColumn = JSON.parse(\n         this.settings.totalColumn ||\n            ABViewPivotPropertyComponentDefaults.totalColumn\n      );\n      this.settings.separateLabel = JSON.parse(\n         this.settings.separateLabel ||\n            ABViewPivotPropertyComponentDefaults.separateLabel\n      );\n      this.settings.min = JSON.parse(\n         this.settings.min || ABViewPivotPropertyComponentDefaults.min\n      );\n      this.settings.max = JSON.parse(\n         this.settings.max || ABViewPivotPropertyComponentDefaults.max\n      );\n\n      if (this.settings.structure && typeof this.settings.structure == \"string\")\n         this.settings.structure = JSON.parse(this.settings.structure);\n\n      // \"0\" -> 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewPivotPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.views = [];\n      obj.settings = obj.settings || {};\n\n      if (this.settings.structure)\n         obj.settings.structure = JSON.stringify(this.settings.structure);\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewReportManagerPropertyComponentDefaults = {\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      text: \"\", // id of a LongText field\n      queries: \"\", // id of a json field\n   },\n   datacollectionIDs: [],\n   editMode: 0,\n   hideCommonTab: 0,\n   hideDataTab: 0,\n   hideViewTab: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"reportsManager\", // {string} unique key for this view\n   icon: \"wpforms\", // {string} fa-[icon] reference for this view\n   labelKey: \"Reports Manager\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewReportsManagerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewReportManagerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewReportManagerPropertyComponentDefaults).forEach(\n         (key1) => {\n            if (\n               typeof ABViewReportManagerPropertyComponentDefaults[key1] ===\n                  \"object\" &&\n               !Array.isArray(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               )\n            ) {\n               parsedSettings[key1] = {};\n\n               Object.keys(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               ).forEach((key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1]?.[key2] ??\n                     ABViewReportManagerPropertyComponentDefaults[key1][key2];\n               });\n\n               return;\n            }\n\n            parsedSettings[key1] =\n               this.settings[key1] ??\n               ABViewReportManagerPropertyComponentDefaults[key1];\n         }\n      );\n\n      this.settings = parsedSettings;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings || {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewSchedulerPropertyComponentDefaults = {\n   readonly: 0,\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      start: \"\", // id of a DateTime field\n      end: \"\", // id of a DateTime field\n      allDay: \"\", // id of a Checkbox field\n      repeat: \"\", // id of a String field\n      calendar: \"\", // id of a String field\n      color: \"\", // id of a String field\n      sectionID: \"\", // id of a String field\n      unitID: \"\", // id of a String field\n      notes: \"\", // id of a LongText field\n      originID: \"\", // id of a LongText field\n   },\n   calendarDataviewID: \"\",\n   calendarDataviewFields: {\n      title: \"\", // id of a String field\n      color: \"\", // id of a String field\n      active: \"\", // id of a Checkbox field\n   },\n   timeline: {\n      day: 1,\n      week: 1,\n      month: 1,\n      year: 1,\n      agenda: 1,\n      timeline: 1,\n      units: 1,\n   },\n   timelineSectionList: \"\",\n   unitList: \"\",\n   export: {\n      excel: 0,\n      csv: 0,\n      pdf: 0,\n   },\n};\n\nconst ABViewDefaults = {\n   key: \"scheduler\",\n   // {string}\n   // unique key for this view\n\n   icon: \"calendar\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Scheduler\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewSchedulerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewSchedulerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"scheduler\"]);\n\n      const obj = super.toObj();\n\n      obj.views = [];\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n      this.settings.dataviewFields = this.settings.dataviewFields || {};\n      this.settings.calendarDataviewFields =\n         this.settings.calendarDataviewFields || {};\n      this.settings.timeline = this.settings.timeline || {};\n      this.settings.export = this.settings.export || {};\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewSchedulerPropertyComponentDefaults).forEach((key1) => {\n         if (\n            typeof ABViewSchedulerPropertyComponentDefaults[key1] === \"object\"\n         ) {\n            parsedSettings[key1] = {};\n\n            Object.keys(ABViewSchedulerPropertyComponentDefaults[key1]).forEach(\n               (key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1][key2] ??\n                     ABViewSchedulerPropertyComponentDefaults[key1][key2];\n               }\n            );\n\n            return;\n         }\n\n         parsedSettings[key1] =\n            this.settings[key1] ??\n            ABViewSchedulerPropertyComponentDefaults[key1];\n      });\n\n      this.settings = parsedSettings;\n\n      // if this is being instantiated on a read from the Property UI,\n      this.scheduler =\n         values.scheduler || ABViewSchedulerPropertyComponentDefaults.scheduler;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"scheduler\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewTabPropertyComponentDefaults = {\n   height: 0,\n   minWidth: 0,\n   stackTabs: 0, // use sidebar view instead of tabview\n   darkTheme: 0, // set dark theme css or not\n   sidebarWidth: 200, // width of sidebar menu when stacking tabs\n   sidebarPos: \"left\", // the default position of sidebar\n   iconOnTop: 0, // do you want to put the icon above the text label?\n   hintID: null, // store the ID of a webix hint tutorial for this view\n};\n\nconst ABViewTabDefaults = {\n   key: \"tab\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"Tab\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTabCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewTabDefaults);\n   }\n\n   static common() {\n      return ABViewTabDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTabPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(this.settings.height);\n      this.settings.minWidth = parseInt(this.settings.minWidth || 0);\n      this.settings.stackTabs = parseInt(this.settings.stackTabs);\n      this.settings.darkTheme = parseInt(this.settings.darkTheme);\n      this.settings.sidebarWidth = parseInt(this.settings.sidebarWidth);\n      // this.settings.sidebarPos = this.settings.sidebarPos;\n      this.settings.iconOnTop = parseInt(this.settings.iconOnTop);\n   }\n\n   addTab(tabName, tabIcon) {\n      return this.application\n         .viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: tabName,\n               tabicon: tabIcon,\n            },\n            this.application,\n            this\n         )\n         .save();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewTextPropertyComponentDefaults = {\n   text: \"\",\n   // {string}\n   // A multilingual text template that is used to display a given set of\n   // values.\n\n   height: 0,\n   // {integer}\n   // The default height of this widget.\n\n   dataviewID: null,\n   // {uuid}\n   // The {ABDataCollection.id} of the datacollection this ABViewText is\n   // pulling data from.\n   // In most usage situations this ABView is tied to the data in an\n   // ABDataCollection.  However, it is possible for an ABObject to be\n   // directly assigned to the ABView, and that will be used instead.\n};\n\nconst ABViewDefaults = {\n   key: \"text\",\n   // {string}\n   // unique key for this view\n\n   icon: \"font\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Text\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTextCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"text\"]);\n\n      var obj = super.toObj();\n      obj.views = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewTextPropertyComponentDefaults.height\n      );\n\n      // if this is being instantiated on a read from the Property UI,\n      this.text = values.text || ABViewTextPropertyComponentDefaults.text;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return ABDatacollection of this form\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollection() {\n      if (this.parent?.key == \"dataview\") {\n         return this.AB.datacollectionByID(this.parent.settings.dataviewID);\n      } else {\n         return this.AB.datacollectionByID(this.settings.dataviewID);\n      }\n   }\n\n   fieldKey(field) {\n      let label = field.label || \"\";\n      label = label.replace(/\\(/g, \"\\\\(\");\n      label = label.replace(/\\)/g, \"\\\\)\");\n      return label;\n   }\n\n   displayText(val, componentID) {\n      var result = this.text;\n\n      let clearTemplateValue = (result) => {\n         return result.replace(/{(.*?)}/g, \"\");\n      };\n\n      var dv = this.datacollection;\n      // if (!dv) return clearTemplateValue(result);\n\n      var object = dv?.datasource ?? this._object;\n      if (!object) return clearTemplateValue(result);\n\n      const rowData = val || dv.getCursor() || {};\n\n      object.fields().forEach((f) => {\n         // add \\\\ in front of the regular expression special charactors\n         // let label = f.label || \"\";\n         // label = label.replace(/\\(/g, \"\\\\(\");\n         // label = label.replace(/\\)/g, \"\\\\)\");\n         let label = this.fieldKey(f);\n\n         var template = new RegExp(\"{\" + label + \"}\", \"g\");\n\n         // IDEA: I'd like to keep all the image url logic INSIDE the ABFieldImage\n         // object.  Is there some way we can simply call: f.imageTemplate(rowData)\n         // and parse the results for the url to display here?\n\n         var data = f.format(rowData);\n         if (f.key == \"image\") {\n            var fData = data;\n            data = f.urlImage(fData);\n\n            // Question: should we change f.urlImage() to return the defaultImageUrl\n            // if fData is \"\" and .useDefaultImage = true?\n\n            if (\n               !fData &&\n               f.settings.defaultImageUrl &&\n               f.settings.useDefaultImage\n            ) {\n               data = f.urlImage(f.settings.defaultImageUrl);\n\n               ////\n               //// James:  Revisit this and make sure we are handling things ok now.\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n               // } else if (\n               //    fData != \"\" &&\n               //    result.indexOf(\"onload\") == -1 &&\n               //    componentID\n               // ) {\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n            } else {\n               ////\n               //// James: It looks like this routine assumes the this.text template will\n               //// only have 1 <img> tag in it.  Is that necessarilly true?\n               ////\n               //// If NOT, then we need to rethink this next line:\n\n               result = result.replace(\n                  \"img\",\n                  \"img onerror='this.parentNode.removeChild(this);' \"\n               );\n            }\n         }\n\n         result = result.replace(template, data);\n      });\n\n      // Support {uuid} tag in tempalte\n      result = result.replace(/{PK}/g, rowData[object.PK()]);\n\n      return result;\n   }\n\n   objectLoad(object) {\n      this._object = object;\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewDefaults = {\n   key: \"viewwidget\", // {string} unique key for this view\n   icon: \"circle-o-notch \", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.widget\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columnSpan: 1,\n   rowSpan: 1,\n};\n\nmodule.exports = class ABViewWidgetCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columnSpan = parseInt(\n         this.settings.columnSpan || ABPropertyComponentDefaults.columnSpan\n      );\n      this.settings.rowSpan = parseInt(\n         this.settings.rowSpan || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationCore = require(\"../core/ABApplicationCore.js\");\n\nconst ABViewPage = require(\"./views/ABViewPage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplication extends ABApplicationCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // now listen for any updates to our managed objects\n      this._handler_page_updated = (definition) => {\n         // we want to keep the same pageID order:\n         var newPages = [];\n         this.pages().forEach((pg) => {\n            if (pg.id === definition.id) {\n               newPages.push(pg.refreshInstance(this));\n               return;\n            }\n            newPages.push(pg);\n         });\n\n         this._pages = newPages;\n\n         // var currPage = this._pages.find((p) => p.id === definition.id);\n         // if (currPage) {\n         //    this._pages = this._pages.filter((p) => p.id != currPage.id);\n         //    this._pages.push(currPage.refreshInstance());\n         // }\n      };\n      this._pages.forEach((p) => {\n         p.on(\"definition.updated\", this._handler_page_updated);\n      });\n   }\n\n   static applications(/*fn = () => true*/) {\n      console.error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      return null;\n   }\n   static applicationForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   static definitionForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.definitionForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   areaKey() {\n      return this.AB.kebabCase(`ab-${this.name}`);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABApplication.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.applicationByID(this.id);\n\n      // remove my listeners\n      this._pages.forEach((p) => {\n         p.removeListener(\"definition.updated\", this._handler_page_updated);\n      });\n\n      return newObj;\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method _listInsert()\n    * save the given entity into our desired list:\n    * @param {varid} entity\n    * @param {string} key\n    *        the key of the list we are managing\n    * @return {Promise}\n    */\n   async _listInsert(entity, key) {\n      var isIncluded = this[key].indexOf(entity.id) != -1;\n      if (!isIncluded) {\n         this[key].push(entity.id);\n         await this.save();\n      }\n   }\n\n   async _listRemove(entity, key) {\n      var begLen = this[key].length;\n      this[key] = this[key].filter((id) => {\n         return id != entity.id;\n      });\n      // if there was a change then save this.\n      if (begLen != this[key].length) {\n         await this.save();\n      }\n   }\n\n   /**\n    * @method datacollectionInsert()\n    * persist the current ABDataCollection in our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionInsert(dc) {\n      return this._listInsert(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method datacollectionRemove()\n    * remove the given ABDataCollection from our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionRemove(dc) {\n      return this._listRemove(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method objectInsert()\n    * persist the current ABObject in our list of .objectIDs.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectInsert(object) {\n      return this._listInsert(object, \"objectIDs\");\n   }\n\n   /**\n    * @method objectRemove()\n    * remove the current ABObject from our list of .objectIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectRemove(object) {\n      return this._listRemove(object, \"objectIDs\");\n   }\n\n   /**\n    * @method processInsert()\n    * persist the current ABProcess in our list of .processIDs.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processInsert(process) {\n      return this._listInsert(process, \"processIDs\");\n   }\n\n   /**\n    * @method processRemove()\n    * remove the current ABProcess from our list of .processIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processRemove(process) {\n      return this._listRemove(process, \"processIDs\");\n   }\n\n   /**\n    * @method queryInsert()\n    * persist the current ABObjectQuery in our list of .queryIDs.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryInsert(query) {\n      return this._listInsert(query, \"queryIDs\");\n   }\n\n   /**\n    * @method queryRemove()\n    * remove the current ABObjectQuery from our list of .queryIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryRemove(query) {\n      return this._listRemove(query, \"queryIDs\");\n   }\n\n   /**\n    * @method exportIDs()\n    * export any relevant .ids for the necessary operation of this application.\n    * @param {array} ids\n    *         the array of ids to insert any relevant .ids into\n    */\n   exportIDs(ids) {\n      // make sure we don't get into an infinite loop:\n      if (ids.indexOf(this.id) > -1) return;\n\n      ids.push(this.id);\n\n      // start with Objects:\n      this.objectsIncluded().forEach((o) => {\n         o.exportIDs(ids);\n      });\n\n      // get all Hints\n      this.hintsIncluded().forEach((h) => {\n         h.exportIDs(ids);\n      });\n\n      // Queries\n      this.queriesIncluded().forEach((q) => {\n         q.exportIDs(ids);\n      });\n\n      // Datacollections\n      // NOTE: currently the server doesn't make instances of DataCollections\n      // so we manually parse the related info here:\n      this.datacollectionIDs.forEach((dID) => {\n         if (ids.indexOf(dID) > -1) return;\n\n         var def = this.AB.definitionByID(dID);\n         if (def) {\n            ids.push(dID);\n            if (def.settings.datasourceID) {\n               var object = this.AB.objectByID(def.settings.datasourceID);\n               if (object) {\n                  object.exportIDs(ids);\n               }\n            }\n         }\n      });\n\n      // Processes\n      this.processes().forEach((p) => {\n         p.exportIDs(ids);\n      });\n\n      // Pages\n      // NOTE: currently the server doesn't make instances of ABViews\n      // so we manually parse the object data here:\n      var parseView = (view) => {\n         if (ids.indexOf(view.id) > -1) return;\n         ids.push(view.id);\n         (view.pageIDs || []).forEach((pid) => {\n            var pdef = this.AB.definitionByID(pid);\n            if (pdef) {\n               parseView(pdef);\n            }\n         });\n\n         (view.viewIDs || []).forEach((vid) => {\n            var vdef = this.AB.definitionByID(vid);\n            if (vdef) {\n               parseView(vdef);\n            }\n         });\n      };\n\n      var pageIDs = this._pages.map((p) => p.id);\n      (pageIDs || []).forEach((pid) => {\n         var pdef = this.AB.definitionByID(pid);\n         if (pdef) {\n            parseView(pdef);\n         }\n      });\n\n      // return only unique entries:\n      ids = this.AB.uniq(ids);\n   }\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPage\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      return new ABViewPage(values, this);\n   }\n\n   /**\n    * @method pageInsert()\n    * Insert a new ABViewPage into this Application.\n    * @param {ABViewPage} page\n    *        The instance of the page to save.\n    * @return {Promise}\n    */\n   async pageInsert(page) {\n      // var isIncluded = this.pageByID(page.id);\n      var isIncluded = this._pages.filter((p) => p.id == page.id)[0];\n      if (!isIncluded) {\n         this._pages.push(page);\n         // Save our own Info:\n         return this.save();\n      }\n   }\n\n   /**\n    * @method pageRemove()\n    * remove the current ABViewPage from our list of pages.\n    * @param {ABViewPage} page\n    * @return {Promise}\n    */\n   async pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n   }\n\n   save() {\n      // if someone just changed the name of our ABApplication, reflect that\n      // in our Def.Name\n      if (this.name != this.label) {\n         this.name = this.label;\n      }\n      return super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      //\n      // check for valid object references:\n      //\n      var checks = {\n         objectIDs: \"object\",\n         queryIDs: \"query\",\n         datacollectionIDs: \"datacollection\",\n      };\n\n      Object.keys(checks).forEach((k) => {\n         this[k].forEach((id) => {\n            var def = this.AB.definitionByID(id);\n            if (!def) {\n               this.warningsMessage(` is referencing a missing ${checks[k]}`, {\n                  appID: this.id,\n                  id,\n               });\n            }\n         });\n      });\n\n      //\n      // Make sure there is some way to access this Application:\n      //\n      if (this.roleAccess.length == 0 && !this.isAccessManaged) {\n         this.warningsMessage(\" has no Role assigned, and is unaccessible.\");\n      }\n\n      // do our Role references exist?\n      var allRoles = this.AB.Account.rolesAll().map((r) => r.id);\n      this.roleAccess.forEach((r) => {\n         if (allRoles.indexOf(r) == -1) {\n            this.warningsMessage(\n               `Specified Role Access [${r}] does not exist in this system`,\n               { role: r }\n            );\n         }\n      });\n\n      // Make sure all our Pages perform a new warningsEval();\n      this.pages().forEach((p) => {\n         p.warningsEval();\n      });\n   }\n\n   warningsAll() {\n      var warnings = [].concat(this._warnings);\n      [\n         \"objectsIncluded\",\n         \"queriesIncluded\",\n         \"datacollectionsIncluded\",\n         \"processes\",\n         \"pages\",\n         // \"views\", // <-- these are gathered in \"pages\"\n      ].forEach((k) => {\n         this[k]().forEach((o) => {\n            warnings = warnings.concat(o.warningsAll());\n         });\n      });\n\n      return warnings;\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Application[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   /**\n    * @method mobileAppNew()\n    *\n    * return an instance of a new (unsaved) ABMobileApp that is tied to this\n    * ABApplication.\n    *\n    * @return {ABMobileApp}\n    */\n   // mobileAppNew(values) {\n   //    return new ABMobileApp(values, this);\n   // }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationMobileCore = require(\"../core/ABApplicationMobileCore.js\");\n\nconst ABViewPageMobile = require(\"./mobile/ABMobilePage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplicationMobile extends (\n   ABApplicationMobileCore\n) {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPageMobile\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPageMobile}\n    */\n   pageNew(values) {\n      const newPage = new ABViewPageMobile(values, this);\n      newPage.parent = this;\n      return newPage;\n   }\n\n   async setPageDefault(page) {\n      if (this.pageDefault != page.id) {\n         let oldPage = this.pageByID(this.pageDefault, true);\n         if (oldPage) {\n            oldPage.defaultPage = 0;\n            await oldPage.save();\n         }\n\n         this.pageDefault = page.id;\n         await this.save();\n      }\n   }\n};\n","const ABEmitter = require(\"./ABEmitter\");\n\nconst CustomComponentManager = require(\"../../webix_custom_components/customComponentManager\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABComponent extends ABEmitter {\n   /**\n    * @param {object} App ?what is this?\n    * @param {string} idBase Identifier for this component\n    * @param {import(\"../ABFactory\").default} AB ABFactory instance\n    */\n   constructor(App, idBase, AB) {\n      super();\n\n      this.AB = AB;\n      // Transition Code:\n      // make sure we have an this.AB\n      if (!AB && App?.AB) {\n         this.AB = App.AB;\n      }\n\n      if (!App) {\n         if (this.AB._App) {\n            App = this.AB._App;\n         } else {\n            App = {\n               uuid: this.AB.Webix.uid(),\n\n               /*\n                * AB\n                * the {ABFactory} for our interface.\n                */\n               AB: this.AB,\n\n               /*\n                * actions:\n                * a hash of exposed application methods that are shared among our\n                * components, so one component can invoke an action that updates\n                * another component.\n                */\n               actions: {},\n\n               /*\n                * config\n                * webix configuration settings for our current browser\n                */\n               config: this.AB.UISettings.config(),\n\n               /*\n                * custom\n                * a collection of custom components for this App Instance.\n                */\n               custom: null,\n\n               /*\n                * Icons\n                * this will provide you with the list of avaialbe font awesome 4.7.0 icons to use in interface building\n                */\n               icons: this.AB.UISettings.icons,\n\n               Label: L,\n\n               /*\n                * labels\n                * a collection of labels that are common for the Application.\n                */\n               labels: {\n                  add: L(\"Add\"),\n                  create: L(\"Create\"),\n                  delete: L(\"Delete\"),\n                  edit: L(\"Edit\"),\n                  export: L(\"Export\"),\n                  formName: L(\"Name\"),\n                  import: L(\"Import\"),\n                  rename: L(\"Rename\"),\n                  ok: L(\"Ok\"),\n\n                  cancel: L(\"Cancel\"),\n                  save: L(\"Save\"),\n\n                  yes: L(\"Yes\"),\n                  no: L(\"No\"),\n\n                  none: L(\"None\"),\n                  close: L(\"Close\"),\n\n                  default: L(\"Default\"),\n                  defaultPlaceholder: L(\"Enter default value\"),\n\n                  disable: L(\"Disable\"),\n\n                  required: L(\"Required\"),\n                  unique: L(\"Unique\"),\n\n                  invalidMessage: {\n                     required: L(\"This field is required\"),\n                  },\n\n                  createErrorMessage: L(\"System could not create <b>{0}</b>.\"),\n                  createSuccessMessage: L(\"<b>{0}</b> is created.\"),\n\n                  updateErrorMessage: L(\"System could not update <b>{0}</b>.\"),\n                  updateSucessMessage: L(\"<b>{0}</b> is updated.\"),\n\n                  deleteErrorMessage: L(\"System could not delete <b>{0}</b>.\"),\n                  deleteSuccessMessage: L(\"<b>{0}</b> is deleted.\"),\n\n                  renameErrorMessage: L(\"System could not rename <b>{0}</b>.\"),\n                  renameSuccessMessage: L(\"<b>{0}</b> is renamed.\"),\n\n                  // Data Field  common Property labels:\n                  dataFieldHeaderLabel: L(\"Section Title\"),\n                  dataFieldHeaderLabelPlaceholder: L(\"Section Name\"),\n\n                  dataFieldLabel: L(\"Label\"),\n                  dataFieldLabelPlaceholder: L(\"Label\"),\n\n                  dataFieldColumnName: L(\"Field Name\"),\n                  dataFieldColumnNamePlaceholder: L(\"Database field name\"),\n\n                  dataFieldShowIcon: L(\"show icon?\"),\n\n                  componentDropZone: L(\"add widgets here\"),\n               },\n\n               /*\n                * unique()\n                * A function that returns a globally unique Key.\n                * @param {string} key   The key to modify and return.\n                * @return {string}\n                */\n               unique: function (key) {\n                  return `${key}${this.uuid}`;\n               },\n            };\n            this.AB._App = App;\n         }\n      }\n\n      if (!App.custom) {\n         if (!this.AB.custom) {\n            var componentManager = new CustomComponentManager();\n            componentManager.initComponents(App);\n         } else {\n            App.custom = this.AB.custom;\n         }\n      }\n\n      this.App = App;\n\n      this.idBase = idBase || \"?idbase?\";\n   }\n\n   actions(_actions) {\n      console.error(\"!!! REFACTOR out .actions()\");\n      if (_actions) {\n         for (var a in _actions) {\n            this.App.actions[a] = _actions[a];\n         }\n      }\n   }\n\n   Label() {\n      return (...params) => {\n         // console.error(\"!! App.label() depreciated.\");\n         return this.AB.Multilingual.label(...params);\n      };\n   }\n\n   unique(key) {\n      return this.App.unique(`${this.idBase}_${key}`);\n   }\n};\n","const ABObjectQuery = require(\"./ABObjectQuery\");\nconst ABDataCollectionCore = require(\"../core/ABDataCollectionCore\");\n\nmodule.exports = class ABDataCollection extends ABDataCollectionCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.setMaxListeners(0);\n      this.blacklistLoadData = {};\n      // { key : ?? }\n      // keep track of previous loadData() calls that might not\n      // have fully completed yet. We don't want to get in a\n      // race condition where we keep trying to load the same frame\n      // over and over again.\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDataCollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *       .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      this.AB.emit(\"ab.datacollection.update\", {\n         datacollectionId: this.id,\n      });\n      return this;\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n      var L = this.AB.Label();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.datacollections((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   /**\n    * currentUserUsername\n    * must return the proper value for the current user that would match a \"user\" field\n    * in an object.\n    * This is platform dependent, so must be implemented by a child object.\n    * @return {string}\n    */\n   currentUserUsername() {\n      return this.AB.Account.username();\n   }\n\n   ///\n   /// Data\n   ///\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      // this.initialized = true;  // <<---- DO NOT SET THIS HERE\n\n      super.init();\n\n      //// Now connect our platform hub to our Object Triggers:\n\n      // events\n      [\n         \"ab.datacollection.create\",\n         \"ab.datacollection.update\",\n         \"ab.datacollection.stale\",\n         \"ab.datacollection.delete\",\n      ].forEach((key) => {\n         this.AB.on(key, (data) => {\n            this.emit(key, data);\n         });\n      });\n\n      this.bindParentDc();\n   }\n\n   bindParentDc() {\n      // if we pass the master datacollection and the field it is linked to\n      // we want to bind it with that field as second param so dataFeed is\n      // used on the slave datacollection\n      let dataCollectionLink = this.datacollectionLink;\n      let fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         let dc = this.__dataCollection;\n         // the second param is the field id we bind the data to the master with\n         dc.bind(dataCollectionLink.__dataCollection, fieldLink.id);\n         // defining dataFeed allows us to query the database when the table is scrolled\n         dc.define(\"dataFeed\", (value, params) => {\n            let cursorUpdated = false;\n            // check if the current cursor was updated\n            if (dc.__prevLinkDcCursor != value) {\n               cursorUpdated = true;\n            }\n\n            dc.__prevLinkDcCursor = this?.datacollectionLink?.getCursor()?.id;\n\n            // NOTE: If no cursor of the parent DC, then show empty list\n            if (\n               this.datacollectionLink &&\n               value == null &&\n               dc.__prevLinkDcCursor == null\n            ) {\n               this.clearAll();\n            }\n            // this is the same item that was already bound...don't reload data\n            else if (cursorUpdated) {\n               // now that we have the modified wheres the dataCollections wheres\n               // need to be modified for subsequent loads on scroll so lets set them\n               // this.reloadWheres(wheres);\n\n               // reload data\n               this.reloadData(0, 20);\n            }\n         });\n      }\n   }\n\n   loadData(start, limit = 20) {\n      console.log(`loadData: ${start}, ${limit}`);\n      return super.loadData(start, limit).catch((err) => {\n         // hideProgressOfComponents() is a platform specific action.\n         this.hideProgressOfComponents();\n         this.emit(\"loadData\", {});\n\n         // propagate the error here:\n         if (err) {\n            throw err;\n         }\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      // Web Platform:\n\n      // data check:\n      if (data.data && !Array.isArray(data.data)) {\n         data.data = [data.data];\n      }\n\n      // standardize the heights\n\n      /*\n       // In v2: we move the row height calculation into the Interface designer.\n       //\n\n      // calculate default value of $height of rows\n      let obj = this.datasource;\n      let defaultHeight = 0;\n      let minHeight = 0;\n      let imageFields = obj.fields((f) => f.key == \"image\");\n      let hiddenFields = obj.objectWorkspace.hiddenFields;\n      imageFields.forEach(function (f) {\n         if (hiddenFields.indexOf(f.columnName) == -1) {\n            if (\n               parseInt(f.settings.useHeight) == 1 &&\n               parseInt(f.settings.imageHeight) > minHeight\n            ) {\n               minHeight = parseInt(f.settings.imageHeight) + 20;\n            } else {\n               minHeight = 100;\n            }\n         }\n      });\n      if (minHeight > 0) {\n         defaultHeight = minHeight;\n      }\n\n      (data.data || []).forEach((d) => {\n         // define $height of rows to render in webix elements\n         if (\n            d.properties != null &&\n            d.properties.height != \"undefined\" &&\n            parseInt(d.properties.height) > 0\n         ) {\n            d.$height = parseInt(d.properties.height);\n         } else if (defaultHeight > 0) {\n            d.$height = defaultHeight;\n         }\n      });\n      */\n\n      return super.processIncomingData(data).then(() => {\n         // Web Platform:\n         // when that is done:\n         this.hideProgressOfComponents();\n      });\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method attachFlexlayout\n    *\n    *\n    * @param {Object} component - a webix flexlayout element instance\n    */\n   attachFlexlayout(component) {\n      var dc = this.__dataCollection;\n\n      // prevent attach many times\n      if (this.__flexComponentIds.indexOf(component.config.id) > -1) {\n         return;\n      } else {\n         // keep component id to an array\n         this.__flexComponentIds.push(component.config.id);\n      }\n   }\n\n   /**\n    * @method bind\n    *\n    *\n    * @param {Object} component - a webix element instance\n    */\n   bind(component) {\n      var dc = this.__dataCollection;\n\n      // prevent bind many times\n      // keep component id to an array\n      if (this.__bindComponentIds.indexOf(component.config.id) === -1)\n         this.__bindComponentIds.push(component.config.id);\n\n      if ($$(component.config.id).data?.find?.({}).length > 0) return;\n\n      if (\n         component.config.view == \"datatable\" ||\n         component.config.view == \"dataview\" ||\n         component.config.view == \"treetable\" ||\n         component.config.view == \"kanban\"\n      ) {\n         if (dc) {\n            var items = dc.count();\n            if (\n               items == 0 &&\n               (this._dataStatus == this.dataStatusFlag.notInitial ||\n                  this._dataStatus == this.dataStatusFlag.initializing) &&\n               component.showProgress\n            ) {\n               component.showProgress({ type: \"icon\" });\n            }\n\n            component.define(\"datafetch\", 20);\n            component.define(\"datathrottle\", 500);\n\n            // initial data of treetable\n            if (component.config.view == \"treetable\") {\n               if (\n                  this.datasource &&\n                  this.datasource.isGroup &&\n                  this.__treeCollection\n               ) {\n                  component.define(\"data\", this.__treeCollection);\n                  component.refresh();\n               } else {\n                  // NOTE: tree data does not support dynamic loading when scrolling\n                  // https://forum.webix.com/discussion/3078/dynamic-loading-in-treetable\n                  component.define(\"data\", []);\n                  component.parse(dc.find({}));\n               }\n            } else {\n               component.data.sync(dc);\n            }\n\n            // Implement .onDataRequest for paging loading\n            if (!this.settings.loadAll) {\n               component.___AD = component.___AD || {};\n               // if (component.___AD.onDataRequestEvent) component.detachEvent(component.___AD.onDataRequestEvent);\n               if (!component.___AD.onDataRequestEvent) {\n                  component.___AD.onDataRequestEvent = component.attachEvent(\n                     \"onDataRequest\",\n                     (start, count) => {\n                        if (component.showProgress)\n                           component.showProgress({ type: \"icon\" });\n\n                        // load more data to the data collection\n                        dc.loadNext(count, start);\n\n                        return false; // <-- prevent the default \"onDataRequest\"\n                     }\n                  );\n               }\n\n               // // NOTE : treetable should use .parse or TreeCollection\n               // // https://forum.webix.com/discussion/1694/tree-and-treetable-using-data-from-datacollection\n               // if (\n               //    component.config.view == \"treetable\" &&\n               //    !this.datasource.isGroup\n               // ) {\n               //    component.___AD = component.___AD || {};\n               //    if (!component.___AD.onDcLoadData) {\n               //       component.___AD.onDcLoadData = () => {\n               //          component.parse(dc.find({}));\n               //       };\n\n               //       this.on(\"loadData\", component.___AD.onDcLoadData);\n               //    }\n               // }\n            }\n         } else {\n            component.data.unsync();\n         }\n      } else if (component.bind) {\n         if (dc) {\n            // Do I need to check if there is any data in the collection before binding?\n            component.bind(dc);\n         } else {\n            component.unbind();\n         }\n\n         if (component.refresh) component.refresh();\n      }\n   }\n\n   unbind(component) {\n      if (!component) return;\n\n      component.detachEvent(\"onDataRequest\");\n      if (component.___AD) {\n         if (component.___AD.onDataRequestEvent)\n            delete component.___AD.onDataRequestEvent;\n\n         if (component.___AD.onDcLoadData) {\n            if (this.off) this.off(\"loadData\", component.___AD.onDcLoadData);\n            delete component.___AD.onDcLoadData;\n         }\n      }\n\n      if (component.data && component.data.unsync) {\n         component.data.unsync();\n         component.define(\"data\", []);\n      }\n\n      if (component.unbind) component.unbind();\n\n      if (component.refresh) component.refresh();\n\n      // remove from array\n      this.__bindComponentIds = (this.__bindComponentIds || []).filter(\n         (id) => id != component.config.id\n      );\n   }\n\n   hideProgressOfComponents() {\n      this.__bindComponentIds.forEach((comId) => {\n         if ($$(comId) && $$(comId).hideProgress) $$(comId).hideProgress();\n      });\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(data) {\n      // get a webix data collection\n      let dc = new webix.DataCollection({\n         data: data || [],\n      });\n\n      this._extendCollection(dc);\n\n      return dc;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      // get a webix data collection\n      let treeStore = new webix.TreeCollection();\n\n      this._extendCollection(treeStore);\n\n      return treeStore;\n   }\n\n   _extendCollection(dataStore) {\n      // Apply this data collection to support multi-selection\n      // https://docs.webix.com/api__refs__selectionmodel.html\n      webix.extend(dataStore, webix.SelectionModel);\n\n      dataStore.___AD = dataStore.___AD || {};\n\n      // Implement .onDataRequest for paging loading\n      if (!this.settings.loadAll) {\n         if (!dataStore.___AD.onDataRequestEvent) {\n            dataStore.___AD.onDataRequestEvent = dataStore.attachEvent(\n               \"onDataRequest\",\n               (start, count) => {\n                  if (start < 0) start = 0;\n\n                  // since the where clause can change if we are following\n                  // another cursor, include the where as part of the key:\n                  let [where] = this.getWhereClause(start, 0);\n                  let key = `${JSON.stringify(where)}-${start}-${count}`;\n                  if (this.blacklistLoadData[key]) {\n                     return false;\n                  }\n                  this.blacklistLoadData[key] = true;\n                  // load more data to the data collection\n                  this.loadData(start, count).finally(() => {\n                     // remove from blacklist\n                     delete this.blacklistLoadData[key];\n                  });\n\n                  return false; // <-- prevent the default \"onDataRequest\"\n               }\n            );\n         }\n\n         if (!dataStore.___AD.onAfterLoadEvent) {\n            dataStore.___AD.onAfterLoadEvent = dataStore.attachEvent(\n               \"onAfterLoad\",\n               () => {\n                  this.emit(\"loadData\", {});\n               }\n            );\n         }\n      }\n\n      // override unused functions of selection model\n      dataStore.addCss = function () {};\n      dataStore.removeCss = function () {};\n      dataStore.render = function () {};\n\n      if (!dataStore.___AD.onAfterLoad) {\n         dataStore.___AD.onAfterLoad = dataStore.attachEvent(\n            \"onAfterLoad\",\n            () => {\n               this.hideProgressOfComponents();\n            }\n         );\n      }\n   }\n\n   parseTreeCollection(data = {}) {\n      if (\n         !(this.__datasource instanceof ABObjectQuery) ||\n         !this.__datasource.isGroup ||\n         !this.__treeCollection\n      )\n         return;\n\n      let addRowToTree = (join = {}, parentAlias = null) => {\n         let alias = join.alias;\n\n         (data.data || []).forEach((row) => {\n            let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n            if (!dataId) return;\n\n            // find parent nodes\n            let parentItemIds = [];\n            let parentId =\n               row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n            if (parentId) {\n               parentItemIds = this.__treeCollection\n                  .find(\n                     (item) =>\n                        item._alias == parentAlias && item._dataId == parentId\n                  )\n                  .map((item) => item.id);\n            }\n\n            // check exists\n            let exists = this.__treeCollection.find((item) => {\n               return (\n                  item._alias == alias &&\n                  item._dataId == dataId &&\n                  (parentItemIds.length == 0 ||\n                     parentItemIds.indexOf(item.$parent) > -1)\n               );\n            }, true);\n            if (exists) return;\n\n            let treeNode = {};\n            treeNode._alias = alias;\n            treeNode._dataId = dataId;\n            treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n            Object.keys(row).forEach((propName) => {\n               // Pull value from alias\n               if (propName.indexOf(`${alias}.`) == 0) {\n                  treeNode[propName] = row[propName];\n               }\n            });\n\n            if (row.translations) treeNode.translations = row.translations;\n\n            // child nodes\n            if (parentItemIds.length > 0)\n               parentItemIds.forEach((parentItemId) => {\n                  this.__treeCollection.add(treeNode, null, parentItemId);\n               });\n            // root node\n            else this.__treeCollection.add(treeNode, null);\n         });\n\n         // Sub-joins\n         (join.links || []).forEach((link) => {\n            addRowToTree(link, alias);\n         });\n      };\n\n      // Show loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         //// Webix Command here:\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.showProgress)\n            boundComp.showProgress({ type: \"icon\" });\n\n         if (boundComp.data && boundComp.data.unsync) boundComp.data.unsync();\n      });\n\n      addRowToTree(this.__datasource.joins());\n\n      // Hide loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.hideProgress) boundComp.hideProgress();\n         boundComp.define(\"data\", this.__treeCollection);\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.datasource) {\n         this.warningsMessage(`doesn't have a datasource.`);\n      } else if (this.linkDatacollectionID) {\n         const linkDC = this.AB.datacollectionById(this.linkDatacollectionID);\n\n         if (!linkDC)\n            this.warningsMessage(\n               `can't resolve linkDatacollectionID[${this.linkDatacollectionID}]`\n            );\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Datacollection[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   get userScopes() {\n      return this.AB.Account.scopes();\n   }\n};\n","var ABDefinitionCore = require(\"../core/ABDefinitionCore\");\n\nmodule.exports = class ABDefinition extends ABDefinitionCore {\n   // constructor(attributes, AB) {\n   //    super(attributes, AB);\n   // }\n};\n","/**\n * ABEmitter\n *\n * This is the platform dependent implementation of an Emitter object.\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = class ABEmitter extends EventEmitter {\n   constructor() {\n      super(/*{ maxListeners: 0 }*/);\n   }\n};\n","const ABHintCore = require(\"../core/ABHintCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABHint extends ABHintCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy(App) {\n      // debugger;\n      // remove all my Elements\n      var allSteps = this.steps();\n      var allDestroy = [];\n      allSteps.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n      // remove reference on App and View\n      let hintIndex = App.hintIDs.indexOf(this.id);\n      if (hintIndex > -1) {\n         App.hintIDs.splice(hintIndex, 1);\n         App.save();\n      }\n\n      let view = App.views((v) => {\n         return v.id == this.settings.view;\n      })[0];\n\n      if (view) {\n         delete view.settings.hintID;\n         view.save();\n      }\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  webix.message({\n                     text: L(\"Tutorial Deleted\"),\n                     type: \"success\",\n                     expire: 3000,\n                  });\n                  resolve();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n\n   createHintUI() {\n      // if already loaded skip\n      if ($$(this.id)) return;\n\n      let steps = [];\n      let next = 0;\n      let display = webix.storage.cookie.get(this.id);\n      if (display?.hide) return;\n      let dontShow = `<label class=\"dontShow\">\n                        <input onclick=\"webix.storage.cookie.put(this.dataset.hintId, {'hide': this.checked});\" data-hint-id=\"${\n                           this.id\n                        }\" type=\"checkbox\">\n                        ${L(\"Don't show this again.\")}\n                     </label>`;\n      this.stepIDs.forEach((step) => {\n         next++;\n         let newStep = {};\n         newStep.id = this._steps[step].id;\n         newStep.el = this._steps[step].settings.el;\n         newStep.event = this._steps[step].settings.event;\n         newStep.title = this._steps[step].name;\n         newStep.text = this._steps[step].text + dontShow;\n         if (this.stepIDs[next]) {\n            newStep.nextEl = this._steps[this.stepIDs[next]].settings.el;\n            if (newStep.nextEl) {\n               newStep.hintId = this.id;\n               newStep.eventEl = \"button\"; // added this so we do not trigger a second advance on the hint when triggering the click below\n               newStep.next = function (event) {\n                  let nextEl = this.nextEl;\n                  let theNextEl = document.querySelector(nextEl);\n                  if (theNextEl && theNextEl.checkVisibility()) {\n                     return false;\n                  } else {\n                     document.querySelector(this.el).click();\n                     return false;\n                  }\n               };\n            }\n         }\n         if (newStep.el) steps.push(newStep);\n      });\n\n      let ui = {\n         view: \"hint\",\n         id: this.id,\n         steps: steps,\n         on: {\n            onNext: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n            onPrevious: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n         },\n      };\n\n      webix.delay(\n         () => {\n            try {\n               webix.ui(ui).start();\n            } catch (err) {\n               this.AB.notify.developer(err, {\n                  context:\n                     \"ABHint.createUIHint() error calling webix.ui(ui).start()\",\n                  ui,\n               });\n            }\n         },\n         null,\n         null,\n         2000\n      );\n\n      // $$(this.id);\n   }\n};\n","const ABIndexCore = require(\"../core/ABIndexCore\");\n\nmodule.exports = class ABIndex extends ABIndexCore {\n   // constructor(attributes, object) {\n   //    super(attributes, object);\n   // }\n\n   /**\n    * @method save()\n    * persist this instance of ABIndex with it's parent ABObject\n    * @return {Promise}\n    */\n   save() {\n      return super\n         .save()\n         .then(() => this.object.indexSave(this))\n         .then(() => this.migrateCreate());\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABIndex\n    * also remove it from our parent ABObject\n    * @return {Promise}\n    */\n   destroy() {\n      return new Promise((resolve, reject) => {\n         if (this.id) {\n            this.migrateDrop()\n               .then(() => {\n                  return super.destroy();\n               })\n               .then(() => this.object.indexRemove(this))\n               .then(resolve)\n               .catch(reject);\n         } else {\n            resolve();\n         }\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      if (this.fields.length == 0) {\n         this.warningsMessage(`is not referencing any fields`);\n      }\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `Index[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n         // data: this.toObj(),\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n      });\n   }\n};\n","/**\n * ABMLClass\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This platform ABMLClass will define 2 methods that allow for the translation\n * untranslation of this data.\n */\nvar ABMLClassCore = require(\"../core/ABMLClassCore\");\n\nmodule.exports = class ABMLClass extends ABMLClassCore {\n   constructor(fieldList, AB) {\n      super(fieldList, AB);\n\n      this._warnings = [];\n      // {array}\n      // an array of warning messages for this object.\n      // each warning entry should be in the format:\n      // WarningMessage: {\n      //    message: {string} \"message to display\"\n      //    data: {json} additional debugging information\n      // }\n   }\n\n   // fromValues(attributes) {\n   //    super.fromValues(attributes);\n   // }\n\n   /**\n    * @method warnings()\n    * returns the stored warnings for this ONE object.\n    * @return {array} WarningMessage\n    */\n   warnings() {\n      return this._warnings;\n   }\n\n   /**\n    * @method warningsEval()\n    * This method causes an object to re-evaluate it's settings to see if there\n    * are any potential errors.\n    */\n   warningsEval() {\n      this._warnings = [];\n   }\n\n   /**\n    * @method warningsAll()\n    * returns all relevant warnings for the current Object. This includes any\n    * sub fields, links, views, etc...\n    * @return {array} warning structures\n    *          [ {WarningMessage}, ... ]\n    */\n   warningsAll() {\n      return this.warnings();\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return this.AB.Account.language() || \"en\";\n   }\n\n   /**\n    * @method destroy()\n    * remove this definition.\n    * @return {Promise}\n    */\n   async destroy() {\n      var def = this.toDefinition();\n      if (def.id) {\n         return def.destroy().catch((err) => {\n            if (err.toString().indexOf(\"No record found\") > -1) {\n               // this is weird, but not breaking:\n               console.log(\n                  `ABMLClass.destroy(): could not find record for id[${def.id}]`\n               );\n               console.log(def);\n               return;\n            }\n            throw err;\n         });\n      }\n      return Promise.resolve();\n   }\n\n   /**\n    * @method save()\n    * persist this definition of our {ABxxx} Object\n    * @return {Promise}\n    */\n   async save() {\n      var def = this.toDefinition();\n      // if not name, try to use our label as the name\n      def.name = def.name || this.name || this.label || \"name\";\n      var data = await def.save();\n      if (!this.id) {\n         this.id = data.id;\n      }\n   }\n};\n","const ABModelCore = require(\"../core/ABModelCore\");\n\n//\n// ABModel\n//\n// Represents the Data interface for an ABObject data.\n//\n// 2 ways to use an ABModel to load a DataTable:\n// \tMethod 1:\n// \tgather all the data externally and send to the DataTable\n//\t\tModel.findAll()\n//\t\t.then((data)=>{\n//\t\t\tDataTable.parse(data);\n//\t\t})\n//\n// \tMethod 2:\n// \tSet the Model object with a condition / skip / limit, then\n// \tuse it to load the DataTable:\n//\t\tModel.where({})\n//\t\t.skip(XX)\n//\t\t.limit(XX)\n//\t\t.loadInto(DataTable);\n\nfunction errorPopup(error) {\n   // Show the pop up\n   if (error && error.data && error.data.error == \"READONLY\") {\n      webix.alert({\n         title: \"Your action is blocked\",\n         ok: \"Ok\",\n         text: error.data.message || \"\",\n         type: \"alert-warning\",\n      });\n   }\n}\n\n/*\n * @function no_socket_trigger()\n * a common routine to trigger an update.\n * In the case where our AB.Network.type() isn't a socket implementation\n * we need to manually trigger the expected socket events ourselves.\n * This fn() attempts to simulate the socket responses in such a case.\n * @param {ABModel} model\n *        The ABModel currently processing the network transaction.\n * @param {string} key\n *        The socket update trigger we are simulating.\n * @param {json} data\n *        The relevant response from our network transaction.\n */\nfunction no_socket_trigger(model, key, data) {\n   // If we do not have socket updates available, then trigger an\n   // update event with this data.\n   if (model.AB.Network.type() != \"socket\") {\n      model.AB.emit(key, {\n         objectId: model.object.id,\n         data,\n      });\n   }\n}\n\nmodule.exports = class ABModel extends ABModelCore {\n   constructor(object) {\n      super(object);\n\n      this.handler_create = (...params) => {\n         this.handler_common(\"ab.datacollection.create\", ...params);\n      };\n\n      this.handler_delete = (...params) => {\n         this.handler_common(\"ab.datacollection.delete\", ...params);\n      };\n\n      this.handler_findAll = (...params) => {\n         this.handler_common(null, ...params);\n      };\n\n      this.handler_logs = (context, err, data) => {\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         context.resolve?.(data);\n      };\n\n      this.handler_update = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_common = (key, context, err, data) => {\n         // key: {string} the relevant socket event key\n         //      can be null if not relevant.\n         // context : {obj} any provided context data provided on the\n         //           this.AB.Network.get() call.\n         // err: {Error} any returned error message from api\n         // data: {obj} returned data from the model-get api in format:\n         //       {data: [], total_count: 1, pos: 0, offset: 0, limit: 0}\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n\n         // let jobID = this.AB.jobID();\n         // console.log(`${jobID} : normalization begin`);\n         // let timeFrom = performance.now();\n         if (key) {\n            // on \"update\" & \"create\" we want to normalizeData()\n            if (key.indexOf(\"delete\") == -1) {\n               this.normalizeData(data);\n            }\n         } else {\n            if (this.isCsvPacked(data)) {\n               let lengthPacked = JSON.stringify(data).length;\n               data = this.csvUnpack(data);\n\n               // JOHNNY: getting \"RangeError: Invalid string length\"\n               // when data.data is too large. So we are just going\n               // to .stringify() the rows individually and count the\n               // length of each one.\n\n               let lengthUnpacked = 0;\n               for (var d = 0; d < data.data.length; d++) {\n                  lengthUnpacked += JSON.stringify(data.data[d]).length;\n               }\n\n               Object.keys(data)\n                  .filter((k) => k != \"data\")\n                  .map((k) => {\n                     lengthUnpacked += `${k}:${data[k]},`.length;\n                  });\n\n               lengthUnpacked += 5; // for the brackets\n\n               console.log(\n                  `CSV Pack: ${lengthUnpacked} -> ${lengthPacked} (${(\n                     (lengthPacked / lengthUnpacked) *\n                     100\n                  ).toFixed(2)}%)`\n               );\n            }\n            // on a findAll we normalize data.data\n            this.normalizeData(data.data);\n         }\n         // let timeTo = performance.now();\n         // console.log(`${jobID} : normalization end:  ${timeTo - timeFrom}ms`);\n\n         context.resolve?.(data);\n\n         // if (key) {\n         //    no_socket_trigger(this, key, data);\n         // }\n      };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      return this.AB.Network[method](params);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      values.batch.map((vals) => {\n         return this.prepareMultilingualData(vals.data);\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err, data) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            this.normalizeData(data);\n            resolve(data);\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a create event\n            // triggerEvent('create', this.object, data);\n         });\n\n         this.AB.Network.post(\n            {\n               url: this.object.urlRestBatch(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: {},\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // FIX: now with sockets, the triggers are fired from socket updates.\n            //    // trigger a create event\n            //    // triggerEvent('create', this.object, data);\n            // })\n            .catch(reject);\n      });\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      this.prepareMultilingualData(values);\n\n      // add default values record if no value is passed for column\n      this.object.fields().forEach((f) => {\n         if (values[f.columnName] === undefined) {\n            f.defaultValue(values);\n         }\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_create);\n         this.AB.Network.post(\n            {\n               url: this.object.urlRest(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            .then((newVal) => {})\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      }).then((newVal) => {\n         no_socket_trigger(this, \"ab.datacollection.create\", newVal);\n         return newVal;\n      });\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_delete);\n         this.AB.Network[\"delete\"](\n            {\n               url: this.object.urlRestItem(id),\n            },\n            {\n               key: jobID,\n               id,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      }).then((res) => {\n         // properly issue the delete\n         no_socket_trigger(this, \"ab.datacollection.delete\", id);\n         return res;\n      });\n   }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      cond = cond || {};\n\n      // scan the rules and convert any is_current_date rules to UTC daytime range.\n      let rules = cond.where?.rules;\n      while (rules?.length) {\n         let nestedRules = [];\n         rules.forEach((rule) => {\n            if (rule.rule === \"is_current_date\")\n               rule.value = this.AB.rules.getUTCDayTimeRange();\n            else if (rule.rules?.length)\n               nestedRules = nestedRules.concat(rule.rules);\n         });\n\n         rules = nestedRules;\n      }\n\n      // \t\t// prepare our condition:\n      // \t\tvar newCond = {};\n\n      // \t\t// if the provided cond looks like our { where:{}, skip:xx, limit:xx } format,\n      // \t\t// just use this one.\n      // \t\tif (cond.where) {\n      // \t\t\tnewCond = cond;\n      // \t\t} else {\n\n      // \t\t\t// else, assume the provided condition is the .where clause.\n      // \t\t\tnewCond.where = cond;\n      // \t\t}\n\n      // /// if this is our depreciated format:\n      // if (newCond.where.where) {\n      // \tOP.Error.log('Depreciated Embedded .where condition.');\n      // }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_findAll);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRest(),\n               params: cond,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data.data);\n\n            //    resolve(data);\n            // })\n            .catch((err) => {\n               if (err && err.code) {\n                  switch (err.code) {\n                     case \"ER_PARSE_ERROR\":\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Parse Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n\n                     default:\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Unknown Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n                  }\n               }\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method loadInto\n    * loads the current values into the provided Webix DataTable\n    * @param {DataTable} DT  A Webix component that can dynamically load data.\n    */\n   loadInto(DT) {\n      // if a limit was applied, then this component should be loading dynamically\n      if (this._limit) {\n         DT.define(\"datafetch\", this._limit);\n         DT.define(\"datathrottle\", 250); // 250ms???\n\n         // catch the event where data is requested:\n         // here we will do our own findAll() so we can persist\n         // the provided .where condition.\n\n         // oh yeah, and make sure to remove any existing event handler when we\n         // perform a new .loadInto()\n         DT.___AD = DT.___AD || {};\n         if (DT.___AD.onDataRequestEvent) {\n            DT.detachEvent(DT.___AD.onDataRequestEvent);\n         }\n         DT.___AD.onDataRequestEvent = DT.attachEvent(\n            \"onDataRequest\",\n            (start, count) => {\n               var cond = {\n                  where: this._where,\n                  sort: this._sort,\n                  limit: count,\n                  skip: start,\n               };\n\n               if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n               this.findAll(cond).then((data) => {\n                  /*\n                   // In V2: we move the row height processing into \n                   // the interface designer \n\n                  data.data.forEach((item) => {\n                     if (\n                        item.properties != null &&\n                        item.properties.height != \"undefined\" &&\n                        parseInt(item.properties.height) > 0\n                     ) {\n                        item.$height = parseInt(item.properties.height);\n                     } else if (parseInt(this._where.height) > 0) {\n                        item.$height = parseInt(this._where.height);\n                     }\n                  });\n                  */\n                  DT.parse(data);\n\n                  if (DT.hideProgress) DT.hideProgress();\n               });\n\n               return false; // <-- prevent the default \"onDataRequest\"\n            }\n         );\n\n         DT.refresh();\n      }\n\n      // else just load it all at once:\n      var cond = {};\n      if (this._where) cond.where = this._where;\n      if (this._sort) cond.sort = this._sort;\n      if (this._limit != null) cond.limit = this._limit;\n      if (this._skip != null) cond.skip = this._skip;\n\n      if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n      this.findAll(cond)\n         .then((data) => {\n            // v2: we no longer process item $height\n            /*\n            data.data.forEach((item) => {\n               if (\n                  item.properties != null &&\n                  item.properties.height != \"undefined\" &&\n                  parseInt(item.properties.height) > 0\n               ) {\n                  item.$height = parseInt(item.properties.height);\n               } else if (parseInt(this._where.height) > 0) {\n                  item.$height = parseInt(this._where.height);\n               }\n            });\n            */\n\n            DT.parse(data);\n\n            if (DT.hideProgress) DT.hideProgress();\n         })\n         .catch((err) => {\n            console.error(\"!!!!!\", err);\n         });\n   }\n\n   /**\n    * @method logs()\n    * return the log history related to this model's ABObject.\n    * @param {hash} options\n    *        a key=>value hash of optional search criteria\n    *        .rowId {string} the uuid of the individual entry we are querying\n    *        .levelName {string} the type of entry [\"insert\", \"update\", \"delete\"]\n    *        .username {string} the entries associated with the given user\n    *        .startDate {date} entries that happened ON or AFTER this date\n    *        .endDate {date} entries that happened ON or BEFORE this date\n    *        .start {integer} paging control: how many entries to skip\n    *        .limit {integer} paging control: only return this # entries\n    * @return {Promise}\n    */\n   logs(options) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_logs);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRestLog(),\n               params: options,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            if (err && err.code) {\n               this.AB.notify.developer(err, {\n                  context: \"AppBuilder:ABModel:logs(): Error\",\n                  options,\n               });\n            }\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method limit\n    * set the limit value for this set of data\n    * @param {integer} limit  the number or elements to return in this call\n    * @return {ABModel} this object that is chainable.\n    */\n   limit(limit) {\n      this._limit = limit;\n      return this;\n   }\n\n   /**\n    * @method skip\n    * set the skip value for this set of data\n    * @param {integer} skip  the number or elements to skip\n    * @return {ABModel} this object that is chainable.\n    */\n   skip(skip) {\n      this._skip = skip;\n      return this;\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_update);\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestItem(id),\n               params: values,\n            },\n            { key: jobID, context: { resolve, reject } }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // If we do not have socket updates available, then trigger an\n            //    // update event with this data.\n            //    if (this.AB.Network.type() != \"socket\") {\n            //       this.AB.emit(\"ab.datacollection.update\", {\n            //          objectId: this.object.id,\n            //          data,\n            //       });\n            //    }\n            // })\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      }).then((newVal) => {\n         // properly issue the update\n         no_socket_trigger(this, \"ab.datacollection.update\", newVal);\n         return newVal;\n      });\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err /*, data */) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            // this.normalizeData(data);\n            resolve(true);\n            // what about checking for socket updates?\n         });\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestBatch(),\n               params: {\n                  rowIds,\n                  values,\n               },\n            },\n            { key: jobID, context: {} }\n         )\n            // .then(() => {\n            //    resolve(true);\n            // })\n            .catch(reject);\n      });\n   }\n};\n","//\n// ABModelAPI\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelAPI extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond = {}) {\n      cond.isAPI = true;\n      cond.url = this.object?.request?.url;\n\n      return super.findAll(cond);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchCreate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   async create(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.create() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.delete() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.update() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchUpdate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","//\n// ABModelAPINetsuite\n//\n// Represents the Data interface for a connection to Netsuite.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelAPINetsuite extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method normalizeData()\n    * For a Netsuite object, there are additional steps we need to handle\n    * to normalize our data.\n    */\n   normalizeData(data) {\n      super.normalizeData(data);\n\n      if (!Array.isArray(data)) {\n         data = [data];\n      }\n\n      var boolFields = this.object.fields((f) => f.key == \"boolean\");\n      let allFields = this.object.fields();\n\n      data.forEach((d) => {\n         // Netsuite sometimes keeps keys all lowercase\n         // which might not match up with what it told us in the meta-catalog\n         // which we need:\n         for (var i = 0; i < allFields.length; i++) {\n            let actualColumn = allFields[i].columnName;\n            let lcColumn = actualColumn.toLowerCase();\n\n            if (\n               typeof d[actualColumn] == \"undefined\" &&\n               typeof d[lcColumn] != \"undefined\"\n            ) {\n               d[actualColumn] = d[lcColumn];\n               delete d[lcColumn];\n            }\n         }\n\n         // Netsuite Booleans are \"T\" or \"F\"\n         boolFields.forEach((bField) => {\n            let val = d[bField.columnName];\n            // just how many ways can a DB indicate True/False?\n            if (typeof val == \"string\") {\n               val = val.toLowerCase();\n\n               if (val === \"t\") val = true;\n               else val = false;\n\n               d[bField.columnName] = val;\n            }\n         });\n      });\n   }\n};\n","//\n// ABModelQuery\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelQuery extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchCreate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.create() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.delete() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.update() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchUpdate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","const ABObjectCore = require(\"../core/ABObjectCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n// NOTE: this has been moved to NetworkRestSocket:\n//\n// // Start listening for server events for object updates and call triggerEvent as the callback\n// if (typeof io != \"undefined\") {\n//    io.socket.on(\"ab.object.update\", function (msg) {\n//       AB.emit(\"ab.object.update\", {\n//          objectId: msg.objectId,\n//          data: msg.data,\n//       });\n//    });\n// } else {\n//    console.error(\"TODO: ABObject: configure Socket.io\");\n// }\n\n// io.socket.on(\"ab.object.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObject extends ABObjectCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen for our ABFields.\"definition.updated\"\n      this.fields().forEach((f) => {\n         f.on(\"definition.updated\", (field) => {\n            // create a new Field with the updated def\n            var def = this.AB.definitionByID(field.id);\n            if (!def) return;\n\n            var newField = this.AB.fieldNew(def, this);\n\n            // we want to keep the same fieldID order:\n            var newFields = [];\n            this.fields().forEach((f) => {\n               if (f.id === field.id) {\n                  newFields.push(newField);\n                  return;\n               }\n               newFields.push(f);\n            });\n\n            this._fields = newFields;\n         });\n      });\n\n      // listen\n      // this.AB.on(\"ab.object.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our migrateXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this._handler_object_migrate = (context, err, response) => {\n         // NOTE:\n         var pending = this._pendingNetworkRequests?.[context.uuid];\n         if (err) {\n            pending?.reject(err);\n            return;\n         }\n         pending?.resolve(response);\n      };\n      this.AB.Network.on(\"object.migrate\", this._handler_object_migrate);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABObject.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.objectByID(this.id);\n\n      // prevent doing this multiple times:\n      if (this._pendingNetworkRequests) {\n         // remove object.migrate listener\n         this.AB.Network.removeListener(\n            \"object.migrate\",\n            this._handler_object_migrate\n         );\n\n         // transfer the pending network requests\n         newObj._pendingNetworkRequests = this._pendingNetworkRequests;\n         this._pendingNetworkRequests = null;\n      }\n\n      return newObj;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\tlabelFormat: 'xxxxx',\n\t\t\tisImported: 1/0,\n\t\t\tisExternal: 1/0,\n\t\t\turlPath:'string',\n\t\t\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\t\t\ttranslations:[\n\t\t\t\t{}\n\t\t\t],\n\t\t\tfields:[\n\t\t\t\t{ABDataField}\n\t\t\t]\n\t\t}\n\t\t*/\n\n      super.fromValues(attributes);\n\n      if (this.workspaceViews) this.workspaceViews.fromObj(attributes);\n   }\n\n   //// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.objects((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Object name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      // Check the common validations:\n      // TODO:\n      // if (!inputValidator.validate(values.label)) {\n      // \t_logic.buttonSaveEnable();\n      // \treturn false;\n      // }\n\n      return validator;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(data) {\n      var validator = this.AB.Validation.validator();\n      this.fields().forEach((f) => {\n         // check if value was passed, if so validate it\n         if (Object.prototype.hasOwnProperty.call(data, f.columnName))\n            f.isValidData(data, validator);\n      });\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @param {obj} values  the initial values for this field.\n    *\t\t\t\t\t\t{ key:'{string}'} is required\n    * @return {ABField}\n    */\n   // fieldNew ( values ) {\n   // \t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n   // \treturn ABFieldManager.newField( values, this );\n   // }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      /*\n        return new Promise((resolve, reject) => {\n            // Remove the import object, then its model will not be destroyed\n            if (this.isImported) {\n                this.application\n                    .objectDestroy(this)\n                    .catch(reject)\n                    .then(() => {\n                        resolve();\n                    });\n\n                return;\n            }\n\n            // OK, some of our Fields have special follow up actions that need to be\n            // considered when they no longer exist, so before we simply drop this\n            // object/table, drop each of our fields and give them a chance to clean up\n            // what needs cleaning up.\n\n            // ==> More work, but safer.\n            var fieldDrops = [];\n            this.fields().forEach((f) => {\n                fieldDrops.push(f.destroy());\n            });\n\n            Promise.all(fieldDrops)\n                .then(() => {\n                    return new Promise((next, err) => {\n                        // now drop our table\n                        // NOTE: our .migrateXXX() routines expect the object to currently exist\n                        // in the DB before we perform the DB operations.  So we need to\n                        // .migrateDrop()  before we actually .objectDestroy() this.\n                        this.migrateDrop()\n                            .then(() => {\n                                // finally remove us from the application storage\n                                return this.application.objectDestroy(this);\n                            })\n                            .then(next)\n                            .catch(err);\n                    });\n                })\n\n                // flag .disable to queries who contains this removed object\n                .then(() => {\n                    return new Promise((next, err) => {\n                        this.application\n                            .queries(\n                                (q) =>\n                                    q.objects((o) => o.id == this.id).length > 0\n                            )\n                            .forEach((q) => {\n                                q._objects = q.objects((o) => o.id != this.id);\n\n                                q.disabled = true;\n                            });\n\n                        next();\n                    });\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n */\n\n      var removeFromApplications = () => {\n         var allRemoves = [];\n         this.AB.applications().forEach((app) => {\n            allRemoves.push(app.objectRemove(this));\n         });\n         return Promise.all(allRemoves);\n      };\n\n      var disableRelatedQueries = () => {\n         return new Promise((next /*, err */) => {\n            this.AB.queries(\n               (q) => q.objects((o) => o.id == this.id).length > 0\n            ).forEach((q) => {\n               // q._objects = q.objects((o) => o.id != this.id);\n\n               q.disabled = true;\n            });\n\n            next();\n         });\n      };\n\n      try {\n         // 1) remove us from all Application:\n         await removeFromApplications();\n\n         // 2) disable any connected Queries\n         await disableRelatedQueries();\n\n         // if an imported Object (FederatedTable, Existing Table, etc...)\n         // then skip this step\n         if (this.isImported) {\n            return Promise.resolve();\n         }\n\n         // time to remove my table:\n         // NOTE: our .migrateXXX() routines expect the object to currently exist\n         // in the DB before we perform the DB operations.  So we need to\n         // .migrateDrop()  before we actually .destroy() this.\n         await this.migrateDrop();\n\n         // now remove my definition\n\n         // start with my fields:\n         var fieldDrops = [];\n\n         // Only ABObjects should attempt any fieldDrops.\n         // ABObjectQueries can safely skip this step:\n         if (this.type == \"object\") {\n            var allFields = this.fields();\n            this._fields = []; // clear our field counter so we don't retrigger\n            // this.save() on each field.destroy();\n\n            allFields.forEach((f) => {\n               fieldDrops.push(f.destroy());\n            });\n         }\n         await Promise.all(fieldDrops);\n\n         await super.destroy();\n         this.emit(\"destroyed\");\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.destroy(): error destroying object.\",\n         });\n      }\n\n      // return Promise.resolve()\n      //    .then(() => {\n      //       // 1) remove us from all Application:\n      //       return removeFromApplications();\n      //    })\n      //    .then(() => {\n      //       // 2) disable any connected Queries\n      //       return disableRelatedQueries();\n      //    })\n      //    .then(() => {\n      //       // if an imported Object (FederatedTable, Existing Table, etc...)\n      //       // then skip this step\n      //       if (this.isImported) {\n      //          return Promise.resolve();\n      //       }\n\n      //       // time to remove my table:\n      //       // NOTE: our .migrateXXX() routines expect the object to currently exist\n      //       // in the DB before we perform the DB operations.  So we need to\n      //       // .migrateDrop()  before we actually .destroy() this.\n      //       return this.migrateDrop();\n      //    })\n      //    .then(() => {\n      //       // now remove my definition\n\n      //       // start with my fields:\n      //       var fieldDrops = [];\n\n      //       // Only ABObjects should attempt any fieldDrops.\n      //       // ABObjectQueries can safely skip this step:\n      //       if (this.type == \"object\") {\n      //          var allFields = this.fields();\n      //          this._fields = []; // clear our field counter so we don't retrigger\n      //          // this.save() on each field.destroy();\n\n      //          allFields.forEach((f) => {\n      //             fieldDrops.push(f.destroy());\n      //          });\n      //       }\n\n      //       return Promise.all(fieldDrops)\n      //          .then(() => {\n      //             // now me.\n      //             return super.destroy();\n      //          })\n      //          .then(() => {\n      //             this.emit(\"destroyed\");\n      //          });\n      //    });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      var isAdd = false;\n\n      // if this is our initial save()\n      if (!this.id) {\n         this.label = this.label || this.name;\n         isAdd = true;\n      }\n\n      try {\n         await super.save();\n         if (isAdd && !skipMigrate) {\n            await this.migrateCreate();\n         }\n         return this;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.save()\",\n            obj: this.toObj(),\n         });\n         throw err;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.objectWorkspaceViews = this.workspaceViews?.toObj();\n\n      return result;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network.post(\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   migrateDrop() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network[\"delete\"](\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth /*, oldWidth */) {\n      var fieldID = null;\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == columnName) {\n            fieldID = this._fields[i].id;\n            break;\n            // this._fields[i].settings.width = newWidth;\n         }\n      }\n\n      // Johnny: This is better but still not right.  the ABObject should not be\n      // storing sizes for field widths.  That is a function of the UI and which\n      // Grid is being displayed.  THAT GRID should be storing a column width\n      // locally.\n      // TODO: once we have v2 in place.\n\n      var fieldSettings = this.AB.localSettings(fieldID);\n      fieldSettings = fieldSettings || {};\n      fieldSettings.width = newWidth;\n\n      return this.AB.localSettings(fieldID, fieldSettings);\n      // return this.save();\n   }\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      summaryColumns = summaryColumns || [];\n      countColumns = countColumns || [];\n\n      var headers = [];\n      // var columnNameLookup = {};\n\n      // get the header for each of our fields:\n      this.fields().forEach((f) => {\n         var header = f.columnHeader({\n            isObjectWorkspace: isObjectWorkspace,\n            editable: isEditable,\n         });\n\n         if (isEditable) {\n            header.validationRules = f.settings.validationRules;\n         }\n\n         header.alias = f.alias || undefined; // query type\n         header.fieldID = f.id;\n         // header.fieldURL = f.urlPointer();\n\n         // if the field specifies a width\n         if (f.settings.width != 0) {\n            header.width = f.settings.width;\n         }\n\n         // if the User has already updated a local width for this\n         var fieldSettings = this.AB.localSettings(f.id);\n         if (fieldSettings && fieldSettings.width) {\n            if (!header.width || fieldSettings.width > header.width) {\n               // set column width to the customized width\n               header.width = fieldSettings.width;\n            }\n         }\n\n         if (!header.width) {\n            // set column width to adjust:true by default;\n            header.adjust = true;\n         }\n\n         // add the summary footer\n         if (summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               header.footer = { content: \"totalColumn\", field: f };\n            } else {\n               header.footer = { content: \"summColumn\" };\n            }\n         }\n         // add the count footer\n         else if (countColumns.indexOf(f.id) > -1)\n            header.footer = { content: \"countColumn\" };\n\n         headers.push(header);\n         // columnNameLookup[header.id] = f.columnName; // name => id\n      });\n\n      // update our headers with any settings applied in the Object Workspace\n      /*\n      // In v2: this is handled by the ABDesigner\n      //\n      if (isObjectWorkspace) {\n         let hiddenFieldList = [];\n\n         if (hiddenFieldNames && hiddenFieldNames.length > 0)\n            hiddenFieldList = hiddenFieldNames;\n         // else if (this.workspaceHiddenFields)\n         //    hiddenFieldList = this.workspaceHiddenFields;\n\n         if (hiddenFieldList.length > 0) {\n            hiddenFieldList.forEach((hfID) => {\n               headers.forEach((h) => {\n                  if (columnNameLookup[h.id] == hfID) {\n                     h.hidden = true;\n                  }\n               });\n            });\n         }\n      }\n      */\n\n      return headers;\n   }\n\n   // after a component has rendered, tell each of our fields to perform\n   // any custom display operations\n   // @param {Webix.DataStore} data a webix datastore of all the rows effected\n   //        by the render.\n   customDisplays(data, App, DataTable, rowIds, isEditable) {\n      if (!data || !data.getFirstId) return;\n\n      // var fields = this.fields(f => this.workspaceHiddenFields.indexOf(f.columnName) < 0);\n      let fields = [];\n      DataTable.eachColumn((columnName) => {\n         let field = this.fields((f) => f.columnName == columnName)[0];\n         if (field) fields.push(field);\n      });\n\n      if (rowIds != null) {\n         rowIds.forEach((id) => {\n            let row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  let node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n         });\n      } else {\n         let id = data.getFirstId();\n         while (id) {\n            var row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  var node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n            id = data.getNextId(id);\n         }\n      }\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = `{${defaultField.id}}`;\n         else\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`; // show id of row\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   currentView() {\n      return this.workspaceViews.getCurrentView();\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.fields().forEach((f) => {\n         if (!f) return;\n         allWarnings = allWarnings.concat(f?.warnings());\n      });\n\n      this.indexes().forEach((i) => {\n         if (!i) return;\n         allWarnings = allWarnings.concat(i?.warnings());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allFields = this.fields();\n\n      if (allFields.length == 0) {\n         this.warningsMessage(\"has no fields\");\n      }\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      (this._unknownIndex || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown index id[${id}]`);\n      });\n\n      allFields.forEach((f) => {\n         f?.warningsEval();\n      });\n\n      this.indexes().forEach((i) => {\n         i?.warningsEval();\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Object[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n      // this.emit(\"warning\", warnMsg, data);\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n\n   async getDbInfo() {\n      return this.AB.Network.get({\n         url: `/definition/info/object/${this.id}`,\n      });\n   }\n\n   /**\n    * @method formCleanValues()\n    * perform a final review of the data a form will try to submit for\n    * this object.  The lets individual fields have a chance to update or\n    * remove values before they are sent.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanValues(rowData) {\n      this.fields().forEach((f) => {\n         f.formCleanData(rowData);\n      });\n   }\n};\n","const atomicjs = require(\"atomicjs\");\nconst ABObjectApiCore = require(\"../core/ABObjectApiCore\");\n\nmodule.exports = class ABObjectApi extends ABObjectApiCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   async fetchData(insertDataMax = 20) {\n      if (this.isFetched) return;\n\n      const headers = this.headers;\n\n      const response = await atomicjs(this.request.url, {\n         method: this.request.verb,\n         headers,\n         data: {},\n         timeout: null,\n         withCredentials: false,\n      });\n\n      let parsedResponse = this.dataFromKey(response);\n\n      const model = this.model();\n\n      if (parsedResponse.length == null || parsedResponse.length === 0) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[f.columnName];\n         });\n\n         await model.create(data);\n\n         return;\n      }\n\n      let pendingModelCreate = [];\n\n      for (let i = 0; i < parsedResponse.length; i++) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[i][f.columnName];\n         });\n\n         pendingModelCreate.push(model.create(data));\n\n         if (pendingModelCreate.length % insertDataMax === 0)\n            await Promise.all(pendingModelCreate);\n      }\n\n      if (pendingModelCreate.length > 0) await Promise.all(pendingModelCreate);\n\n      this.isFetched = true;\n\n      await this.save();\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      return await super.save(true);\n   }\n\n   migrateCreate() {\n      return Promise.resolve();\n   }\n\n   migrateDrop() {\n      return Promise.resolve();\n   }\n};\n","const ABObjectApiNetsuiteCore = require(\"../core/ABObjectApiNetsuiteCore\");\n\nmodule.exports = class ABObjectApiNetsuite extends ABObjectApiNetsuiteCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   async getDbInfo() {\n      /*\n      // Data format:\n      {\n          \"definitionId\": \"f2416a1a-d75c-40f2-8180-bad9b5f8b9cc\",\n          \"tableName\": \"AB_MockupHR_TeamTargetLocation\",\n          \"fields\": [\n              {\n                  \"Field\": \"uuid\",\n                  \"Type\": \"varchar(255)\",\n                  \"Null\": \"NO\",\n                  \"Key\": \"PRI\",\n                  \"Default\": null,\n                  \"Extra\": \"\"\n              },\n              {\n                  \"Field\": \"created_at\",\n                  \"Type\": \"datetime\",\n                  \"Null\": \"YES\",\n                  \"Key\": \"\",\n                  \"Default\": null,\n                  \"Extra\": \"\"\n              },\n              {\n                  \"Field\": \"updated_at\",\n                  \"Type\": \"datetime\",\n                  \"Null\": \"YES\",\n                  \"Key\": \"\",\n                  \"Default\": null,\n                  \"Extra\": \"\"\n              },\n              {\n                  \"Field\": \"properties\",\n                  \"Type\": \"text\",\n                  \"Null\": \"YES\",\n                  \"Key\": \"\",\n                  \"Default\": null,\n                  \"Extra\": \"\"\n              }\n          ]\n      }\n      */\n      let PK = this.PK();\n      let fieldInfo = [];\n      this.fields().forEach((f) => {\n         let field = {\n            Field: f.columnName,\n            Type: f.key,\n            Null: f.settings.required ? \"NO\" : \"YES\",\n            Key: PK == f.columnName ? \"PRI\" : \"\",\n            Default: \"\",\n            Extra: \"\",\n         };\n         fieldInfo.push(field);\n      });\n\n      let TableInfo = {\n         definitionId: this.id,\n         tableName: this.tableName,\n         fields: fieldInfo,\n      };\n\n      return TableInfo;\n   }\n};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectExternal\n * These are ABObjects that ... (might need to be refactored out?)\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectExternal extends ABObject {};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectImport\n * These are ABObjects that were Imported from existing Tables in the\n * system.\n *\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectImport extends ABObject {};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nconst ABObjectQueryCore = require(\"../core/ABObjectQueryCore\");\n\nvar ABFactory = null;\nif (typeof io != \"undefined\") {\n   io.socket.on(\"ab.query.update\", function (msg) {\n      if (ABFactory) {\n         ABFactory.emit(\"ab.query.update\", {\n            queryId: msg.queryId,\n            data: msg.data,\n         });\n      } else {\n         console.error(\n            \"ABObjectQuery:: received io.socket msg before ABFactory is defined\"\n         );\n         console.error(\"TODO: move this to ABFactory!\");\n      }\n   });\n} else {\n   console.error(\"TODO: install socket.io client for sails updates.\");\n}\n\n// io.socket.on(\"ab.query.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObjectQuery extends ABObjectQueryCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      if (!ABFactory) {\n         ABFactory = AB;\n      }\n      // listen\n      this.AB.on(\"ab.query.update\", (data) => {\n         if (this.id == data.queryId) this.fromValues(data.data);\n      });\n\n      // .fromValues() should already have been called in super()\n      // so now add in our conditionScan()\n      // NOTE: this can be folded into the Core once filterComplex\n      // is fully implemented and not on Platform only.\n\n      // now scan our conditions to make sure they are\n      // 1) reference fields that exist in our Query\n      // 2) completely filled out conditions.\n      this.conditionScan(this.where);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObjectQuery\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   // destroy() {\n   //    return super.destroy().then(() => {\n   //       console.error(\"Move .queryRemove() to Appbuilder Designer.\");\n   //       // return this.AB.queryRemove(this);\n   //    });\n   // }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObjectQuery with it's parent ABApplication\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   // async save() {\n   //    try {\n   //       await super.save();\n   //       return this;\n   //    } catch (err) {\n   //       this.AB.notify.developer(err, {\n   //          context: \"ABObjectQuery.save()\",\n   //          query: this.toObj(),\n   //       });\n   //       throw err;\n   //    }\n   // }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *             { }\n    * @param {bool} shouldAliasColumn\n    *        should we add the object alias to the columnNames?\n    *        this is primarily used on the web client\n    */\n   importFields(fieldSettings) {\n      super.importFields(fieldSettings);\n\n      this._fields.forEach((fieldEntry) => {\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         fieldEntry.field.columnName = `${fieldEntry.alias}.${fieldEntry.field.columnName}`;\n      });\n   }\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth, oldWidth) {\n      let field = this.fields((f) => f.columnName == columnName)[0];\n      if (field) {\n         field.settings.width = newWidth;\n\n         return this.save();\n      } else {\n         return Promise.resolve();\n      }\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      var headers = super.columnHeaders(\n         isObjectWorkspace,\n         isEditable,\n         summaryColumns,\n         countColumns,\n         hiddenFieldNames\n      );\n\n      headers.forEach((h) => {\n         // pull object by alias\n         let object = this.objectByAlias(h.alias);\n         if (!object) return;\n\n         let field = object.fieldByID(h.fieldID);\n         if (!field) return;\n\n         // NOTE: query v1\n         let alias = \"\";\n         if (Array.isArray(this.joins())) {\n            alias = field.object.name;\n         } else {\n            alias = h.alias;\n         }\n\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         h.id = `${alias}.${field.columnName}`;\n\n         // label\n         if (this.settings && this.settings.hidePrefix) {\n            h.header = `${field.label || \"\"}`;\n         } else {\n            h.header = `${field.object.label || \"\"}.${field.label || \"\"}`;\n         }\n\n         // icon\n         if (field.settings && field.settings.showIcon) {\n            h.header = `<span class=\"webix_icon fa fa-${field.fieldIcon()}\"></span>${\n               h.header\n            }`;\n         }\n\n         // If this query supports grouping, then add folder icon to display in grid\n         if (this.isGroup) {\n            let originTemplate = h.template;\n\n            h.template = (item, common) => {\n               if (item[h.id])\n                  return (\n                     common.icon(item, common) +\n                     (originTemplate\n                        ? originTemplate(item, common, item[h.id])\n                        : item[h.id])\n                  );\n               else return \"\";\n            };\n         }\n\n         h.adjust = true;\n         h.minWidth = 220;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @method conditionScan()\n    * Scan the provided condition object and determine if there are any\n    * configuration issues.\n    * @param {obj} rule\n    *        the QueryBuilder rule that we are scanning.\n    * @param {array} listWarnings\n    *        An array of warnings that we should add our notices to.\n    */\n   conditionScan(rule) {\n      if (!rule) {\n         return;\n      }\n\n      if (rule.glue) {\n         (rule.rules || []).forEach((r) => {\n            this.conditionScan(r);\n         });\n         return;\n      }\n\n      // 1) we need to have any key as one of our fields.\n      let field = this.fieldByID(rule.key);\n      if (!field && rule.key != \"this_object\") {\n         this.warningsMessage(\n            \"condition does not reference one of our fields\",\n            {\n               rule,\n            }\n         );\n      }\n\n      // 2) completely filled out conditions.\n      if (!this._conditionCheck) {\n         this._conditionCheck = this.AB.filterComplexNew(\n            `${this.id}_conditionCheck`\n         );\n         // {FilterComplex} ._conditionCheck\n         // has our .isConditionComplete() method.\n      }\n      if (!this._conditionCheck.isConditionComplete(rule)) {\n         this.warningsMessage(\"incomplete condition definition\", {\n            rule,\n         });\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      this.conditionScan(this.where);\n\n      /// include importFields() warnings:\n      this.__missingObject.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: could not resolve object[${\n               f.objectID\n            }] for fieldSetting ${JSON.stringify(f)}`,\n            {\n               fieldInfo: f,\n            }\n         );\n      });\n\n      this.__missingFields.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: Object[${f.objID}] could not find field[${\n               f.fieldID\n            }] for fieldSetting ${JSON.stringify(f.fieldInfo)}`,\n            {\n               object: f.objID,\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__cantFilter.forEach((f) => {\n         this.warningsMessage(\n            `Field[${f.field.id}] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] did not pass .canFilterField`,\n            {\n               field: f.field.toObj(),\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__duplicateFields.forEach((f) => {\n         this.warningsMessage(\n            `Field[${\n               f.fieldInfo.fieldID\n            }] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] is a duplicate`,\n            {\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__linkProblems.forEach((f) => {\n         this.warningsMessage(f.message, f.data);\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Query[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABProcessCore = require(\"../core/ABProcessCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcess extends ABProcessCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this._unknownShapes = [];\n      // {array} [ BPMN:Shape, ... ]\n      // Generic Shapes that are added to the Process are registered here.\n      // We will list these as warnings to the ABDesigner.\n\n      // listen\n      this.AB.on(\"ab.abprocess.update\", (data) => {\n         if (this.id == data.objectId) this.fromValues(data.data);\n      });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // remove all my Elements\n      var allElements = this.elements();\n      var allDestroy = [];\n      allElements.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  // allow normal processing to contine now:\n                  resolve();\n               })\n               .then(() => {\n                  // in the background\n                  // remove this reference from ALL Applications that link\n                  // to me:\n                  console.error(\n                     \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n                  );\n                  var appsWithProcess = this.AB.applications().find((a) => {\n                     return a.hasProcess(this);\n                  });\n                  if (appsWithProcess.length > 0) {\n                     appsWithProcess.forEach((a) => {\n                        a.processRemove(this);\n                     });\n                  }\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // if this is an update:\n      // if (this.id) {\n      // \treturn ABDefinition.update(this.id, this.toDefinition());\n      // } else {\n\n      // \treturn ABDefinition.create(this.toDefinition());\n      // }\n\n      // make sure all our tasks have save()ed.\n      var allSaves = [];\n      var allTasks = this.elements();\n      allTasks.forEach((t) => {\n         allSaves.push(t.save());\n      });\n      return Promise.all(allSaves).then(() => {\n         // now we can save our Process definition\n         return this.toDefinition()\n            .save()\n            .then((data) => {\n               // if I didn't have an .id then this was a create()\n               // and I need to update my data with the generated .id\n\n               if (!this.id) {\n                  this.id = data.id;\n               }\n\n               // Also, our embedded elements now all have .ids\n               // where they might not have before.  So now\n               // rebuild our this._elements hash with all id\n               var _new = {};\n               let _old = this._elements;\n               Object.keys(this._elements).forEach((k) => {\n                  _new[this._elements[k].id] = this._elements[k];\n               });\n               this._elements = _new;\n\n               // check to see if an update happened and then make\n               // sure we have that saved.\n               let needSave = false;\n               Object.keys(_new).forEach((k) => {\n                  if (!_old[k]) {\n                     needSave = true;\n                  }\n               });\n\n               if (needSave) {\n                  return this.save();\n               }\n            });\n      });\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.processes((o) => {\n            return o.name.toLowerCase() == this.name.toLowerCase();\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcess[OBJ]}\n    */\n   elementNewForModelDefinition(element) {\n      var task = this.AB.processElementNewForModelDefinition(element, this);\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   /**\n    * @method unknownShape()\n    * store a reference to a BPMN Shape that is in our XML diagram,\n    * but we don't have an element for.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShape(shape) {\n      this.unknownShapeRemove(shape);\n      this._unknownShapes.push(shape);\n   }\n\n   /**\n    * @method unknownShapeRemove()\n    * make sure we no longer track the provided BPMN Shape as an unknown shape.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShapeRemove(shape) {\n      this._unknownShapes = this._unknownShapes.filter((s) => s.id != shape.id);\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.elements().forEach((e) => {\n         e.warningsEval();\n         allWarnings = allWarnings.concat(e.warnings());\n      });\n\n      if (this.elements().length == 0) {\n         allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      }\n\n      // perform a check of our xml document to see if we have any unknown\n      // shapes\n      if (!this._DOMParser) {\n         if (window.DOMParser) {\n            // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n            this._DOMParser = function (xmlStr) {\n               return new window.DOMParser().parseFromString(\n                  xmlStr,\n                  \"text/xml\"\n               );\n            };\n         } else if (\n            typeof window.ActiveXObject != \"undefined\" &&\n            new window.ActiveXObject(\"Microsoft.XMLDOM\")\n         ) {\n            this._DOMParser = function (xmlStr) {\n               var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n               xmlDoc.async = \"false\";\n               xmlDoc.loadXML(xmlStr);\n               return xmlDoc;\n            };\n         } else {\n            throw new Error(\"No XML parser found\");\n         }\n      }\n\n      // find any references to our generic shapes\n      let xml = this._DOMParser(this.xmlDefinition);\n      const genericShapes = [\n         \"bpmn2:startEvent\",\n         \"bpmn2:task\",\n         \"bpmn2:endEvent\",\n      ];\n      genericShapes.forEach((s) => {\n         let allElements = xml.getElementsByTagName(s);\n         for (let x = 0; x < allElements.length; x++) {\n            // if we don't know about this shape\n            let ele = allElements[x];\n            let myEle = this.elementForDiagramID(allElements[x].id);\n            if (!myEle) {\n               this.unknownShape(allElements[x]);\n            }\n         }\n      });\n\n      // if any unknown shapes have been reported:\n      if (this._unknownShapes.length) {\n         allWarnings.push({\n            message: \"Generic Tasks still undefined.\",\n            data: {},\n         });\n      }\n\n      return allWarnings;\n   }\n};\n","const ABStepCore = require(\"../core/ABStepCore\");\n\n// let L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABStep extends ABStepCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // debugger;\n\n      return new Promise((resolve, reject) => {\n         this.toDefinition()\n            .destroy()\n            .then(() => {\n               resolve();\n            })\n            .catch((err) => {\n               reject(err);\n            });\n      });\n\n      // remove all my Elements\n      // var allElements = this.elements();\n      // var allDestroy = [];\n      // allElements.forEach((e) => {\n      //    allDestroy.push(e.destroy());\n      // });\n\n      // return Promise.all(allDestroy).then(() => {\n      //    // now remove myself\n      //    return new Promise((resolve, reject) => {\n      //       this.toDefinition()\n      //          .destroy()\n      //          .then(() => {\n      //             // allow normal processing to contine now:\n      //             resolve();\n      //          })\n      //          .then(() => {\n      //             // in the background\n      //             // remove this reference from ALL Applications that link\n      //             // to me:\n      //             console.error(\n      //                \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n      //             );\n      //             var appsWithProcess = this.AB.applications().find((a) => {\n      //                return a.hasProcess(this);\n      //             });\n      //             if (appsWithProcess.length > 0) {\n      //                appsWithProcess.forEach((a) => {\n      //                   a.processRemove(this);\n      //                });\n      //             }\n      //          })\n      //          .catch((err) => {\n      //             reject(err);\n      //          });\n      //    });\n      // });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      // debugger;\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n};\n","const ABViewManagerCore = require(\"../core/ABViewManagerCore\");\n\nmodule.exports = class ABViewManager extends ABViewManagerCore {};\n","const ABViewManagerMobileCore = require(\"../core/ABViewManagerMobileCore\");\n\nmodule.exports = class ABViewManagerMobile extends ABViewManagerMobileCore {};\n","var L = null;\n// multilingual Label fn()\n\nmodule.exports = class CSVImporter {\n   constructor(Label) {\n      // {ABMultilingual.label()} function.\n      //\n      if (!L) {\n         L = Label;\n\n         // if this was a v1: App param:\n         if (Label.Label) {\n            L = Label.Label;\n         }\n      }\n   }\n\n   /**\n    * @method getSeparateItems()\n    * Return the options of how the CSV values are separated.\n    * @return {array}  [ {id, value} ... ]\n    */\n   getSeparateItems() {\n      return [\n         { id: \",\", value: L(\"Comma (,)\") },\n         { id: \"\\t\", value: L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\") },\n         { id: \";\", value: L(\"Semicolon (;)\") },\n         { id: \"s\", value: L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    * @param {*} fileInfo\n    *        https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo)) return Promise.reject();\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new window.FileReader();\n         reader.onload = (e) => {\n            let result = [];\n\n            // split lines\n            let dataRows = reader.result\n               .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n               .filter((row) => row && row.length > 0);\n\n            // split columns\n            (dataRows || []).forEach((row) => {\n               let dataCols = [];\n               if (separatedBy == \",\") {\n                  // NOTE: if the file contains ,, .match() can not reconize this empty string\n                  row = row.replace(/,,/g, \", ,\");\n\n                  // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n                  dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n               } else {\n                  dataCols = row.split(separatedBy);\n               }\n\n               result.push(dataCols.map((dCol) => this.reformat(dCol)));\n            });\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method getGuessDataType\n    * return our best guess of what type of data for the requested column.\n    * @param {array} dataRows\n    *        The data we are evaluating:\n    *        [\n    *           [\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    *           [\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t ]\n    * @param colIndex {Number}\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         // {various} the data pulled from the requested row/column\n         repeatNum = 10;\n      // {integer} how many rows do we want to scan trying to find a value\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data == null || data == \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         // determine which type of string this might be:\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","const FilterComplexCore = require(\"../core/FilterComplexCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n/**\n * @function _toInternal()\n * translate our external QB conditions into our internal format that\n * makes the cond.rule unique by adding the field.id to the rule.\n * @param {obj} cond - {\n *                         rules: [\n *                            {\n *                               alias: string || undefined,\n *                               key: uuid,\n *                               rule: string,\n *                               value: object,\n *                            }\n *                         ]\n *                      }\n *        the QB condition format we use exernally in our AB system.\n */\nfunction _toInternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.key) {\n      // Convert to format\n      // {\n      //    glue: \"and\",\n      //    rules: [\n      //       {\n      //          field: \"test_col\",\n      //          condition: { type: \"greater\", filter: 100 },\n      //       },\n      //    ],\n      // }\n      const field = fields.filter((f) => f.id == cond.key)[0];\n      cond.field = field?.id;\n\n      cond.condition = {\n         type: cond.rule,\n         filter: cond.value,\n      };\n\n      if (Array.isArray(cond.value)) cond.includes = cond.value;\n      if (\n         cond.rule === \"in_query_field\" ||\n         cond.rule === \"not_in_query_field\"\n      ) {\n         cond.includes = cond.value.split(\":\");\n      }\n\n      // else cond.includes = cond.value?.split?.(/,|:/) ?? [];\n\n      // if (field?.key == \"date\" || field?.key == \"datetime\") {\n      //    cond.condition.filter = cond.condition.filter\n      //       ? AB.rules.toDate(cond.condition.filter)\n      //       : null;\n      //\n      //    cond.includes = cond.includes.map((v) => AB.rules.toDate(v));\n      // }\n\n      delete cond.key;\n      delete cond.rule;\n      delete cond.value;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toInternal(r, fields);\n      });\n   }\n}\n\n/**\n * @function _toExternal()\n * translate our internal QB conditions into our external format that\n * where the cond.rule no longer has the field.id.\n * @param {obj} cond - {\n *                         glue: \"and\",\n *                         rules: [\n *                            {\n *                               field: \"test_col\",\n *                               condition: { type: \"greater\", filter: 100 },\n *                            },\n *                         ],\n *                      }\n *        the QB condition format we use internally\n */\nfunction _toExternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.field) {\n      let field = fields.filter((f) => f.id == cond.field)[0];\n      // cond.alias = alias || undefined;\n      cond.key = field?.id ?? cond.field;\n      cond.condition = cond.condition ?? {};\n      cond.rule = cond.condition.type;\n\n      let values =\n         cond.includes?.map((v) => (v instanceof Date ? v.toISOString() : v)) ??\n         [];\n\n      // Convert multi-values to a string\n      if (cond.condition.filter) {\n         if (cond.condition.filter instanceof Date) {\n            if (values.indexOf(cond.condition.filter.toISOString()) < 0) {\n               values.push(cond.condition.filter);\n            }\n         } else if (values.indexOf(cond.condition.filter) < 0)\n            values.push(cond.condition.filter);\n      }\n\n      if (cond.rule === \"is_current_date\") {\n         cond.value = AB.rules.getUTCDayTimeRange();\n      } else if (\n         cond.rule === \"in_query_field\" ||\n         cond.rule === \"not_in_query_field\"\n      ) {\n         cond.value =\n            cond.includes?.length == 2 ? cond.includes.join(\":\") : null;\n      } else {\n         cond.value = values\n            .map((v) => {\n               // Convert date format\n               if (\n                  field &&\n                  (field.key === \"date\" || field.key === \"datetime\") &&\n                  cond.rule != \"last_days\"\n               ) {\n                  return field.exportValue(new Date(v));\n               }\n               return v;\n            })\n            .join(\",\");\n      }\n\n      delete cond.field;\n      delete cond.type;\n      delete cond.includes;\n      delete cond.condition;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toExternal(r, fields);\n      });\n   }\n}\n\nfunction _uiQueryOptionId(fieldId) {\n   return `byQueryField-query-option-${fieldId}`;\n}\n\nfunction _uiFieldOptionId(fieldId) {\n   return `byQueryField-field-option-${fieldId}`;\n}\n\nmodule.exports = class FilterComplex extends FilterComplexCore {\n   constructor(idBase, AB, options = {}) {\n      idBase = idBase ?? \"ab_filterComplex\";\n\n      super(idBase, AB);\n\n      this._options = options ?? {};\n\n      this._initComplete = false;\n      // {bool}\n      // trying to prevent multiple .init() from being called due to\n      // various ways of initializing the component.\n\n      this.observing = false;\n      // {bool}\n      // try to prevent multiple observers generating >1 \"changed\"\n      // event.\n\n      let labels = (this.labels = {\n         common: (AB._App ?? {}).labels,\n         component: {\n            and: L(\"And\"),\n            or: L(\"Or\"),\n\n            thisObject: L(\"This Object\"),\n            inQuery: L(\"In Query\"),\n            notInQuery: L(\"Not In Query\"),\n            inQueryField: L(\"By Query Field\"),\n            notInQueryField: L(\"Not By Query Field\"),\n\n            inQueryFieldQueryPlaceholder: L(\"Choose a Query\"),\n            inQueryFieldFieldPlaceholder: L(\"Choose a Field\"),\n\n            sameAsUser: L(\"Same As User\"),\n            notSameAsUser: L(\"Not Same As User\"),\n\n            sameAsField: L(\"Same As Field\"),\n            notSameAsField: L(\"Not Field\"),\n\n            inDataCollection: L(\"In Data Collection\"),\n            notInDataCollection: L(\"Not In Data Collection\"),\n\n            containsCondition: L(\"contains\"),\n            notContainsCondition: L(\"doesn't contain\"),\n            isCondition: L(\"is\"),\n            isNotCondition: L(\"is not\"),\n            isEmpty: L(\"is empty\"),\n            isNotEmpty: L(\"is not empty\"),\n            isCurrentDateCondition: L(\"is current date\"),\n            beforeCondition: L(\"is before\"),\n            afterCondition: L(\"is after\"),\n            onOrBeforeCondition: L(\"is on or before\"),\n            onOrAfterCondition: L(\"is on or after\"),\n            beforeCurrentCondition: L(\"is before current date\"),\n            afterCurrentCondition: L(\"is after current date\"),\n            onOrBeforeCurrentCondition: L(\"is on or before current date\"),\n            onOrAfterCurrentCondition: L(\"is on or after current date\"),\n            onLastDaysCondition: L(\"last ... days\"),\n            onNextDaysCondition: L(\"next ... days\"),\n\n            equalCondition: L(\":\"),\n            notEqualCondition: L(\"≠\"),\n            lessThanCondition: L(\"<\"),\n            moreThanCondition: L(\">\"),\n            lessThanOrEqualCondition: L(\"≤\"),\n            moreThanOrEqualCondition: L(\"≥\"),\n\n            equalListCondition: L(\"equals\"),\n            notEqualListCondition: L(\"does not equal\"),\n\n            checkedCondition: L(\"is checked\"),\n            notCheckedCondition: L(\"is unchecked\"),\n\n            isCurrentUserCondition: L(\"is current user\"),\n            isNotCurrentUserCondition: L(\"is not current user\"),\n            containsCurrentUserCondition: L(\"contains current user\"),\n            notContainsCurrentUserCondition: L(\"does not contain current user\"),\n\n            contextDefaultOption: L(\"choose option\"),\n            equalsProcessValue: L(\"equals process value\"),\n            notEqualsProcessValueCondition: L(\"not equals process value\"),\n            inProcessValueCondition: L(\"in process value\"),\n            notInProcessValueCondition: L(\"not in process value\"),\n         },\n      });\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         popup: this.unique(`${idBase}_popup`),\n         querybuilder: this.unique(`${idBase}_querybuilder`),\n         save: this.unique(`${idBase}_save`),\n      });\n\n      // Set current username\n      this.Account.username = this.AB.Account.username();\n\n      this._settings.recordRuleFieldOptions = [];\n\n      // webix UI definition:\n      this.ui = {\n         rows: [\n            {\n               view: \"layout\",\n               type: \"clean\",\n               borderless: this._options.borderless ?? true,\n               rows: [\n                  {\n                     id: ids.querybuilder,\n                     view: \"query\",\n                     data: () => [],\n                     // data: async (field) => await this.pullOptions(field),\n                     fields: [],\n                     disabled: true,\n                     height: this._options.height,\n                  },\n               ],\n            },\n            {\n               id: ids.save,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Save\"),\n               hidden: this._options.isSaveHidden ?? false,\n               click: () => {\n                  if (this.myPopup) this.myPopup.hide();\n                  this.emit(\"save\", this.getValue());\n               },\n            },\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options) {\n      if (this._initComplete) return;\n\n      super.init(options);\n\n      const el = $$(this.ids.querybuilder);\n\n      if (el) {\n         if (!this.observing) {\n            this.__blockOnChange = true;\n            el.getState().$observe(\"value\", (v) => {\n               if (this.__blockOnChange) return false;\n\n               this.emit(\"changed\", this.getValue());\n            });\n            this.__blockOnChange = false;\n\n            // HACK!! The process of setting the $observe() is actually\n            // calling the cb() when set.  This is clearing our .condition\n            // if we call init() after we have setValues(). which can happen\n            // when using the popUp() method.\n            let _cond = this.condition;\n            this.condition = _cond;\n            this.observing = true;\n         }\n         this._initComplete = true;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      let helper = () => true;\n\n      let $query = $$(this.ids.querybuilder);\n      if ($query) {\n         helper = $query.getFilterFunction();\n         return helper(rowData);\n      } else {\n         return super.isValid(rowData, condition);\n      }\n   }\n\n   /**\n    * @method isConditionComplete()\n    * Check a given condition entry and indicate if it is fully\n    * filled out.\n    * @param {obj} cond\n    *        The Condition object we are checking.  If a Macro\n    *        condition if provided: { glue:\"and\", rules:[] } then\n    *        this method will return True/False if All rules are\n    *        complete.\n    *        If an individual rule is provided, then it evaluates\n    *        the completness of that rule. { key, rule, value }\n    * @return {bool}\n    */\n   isConditionComplete(cond) {\n      if (!cond) return false;\n\n      let isComplete = true;\n      // start optimistically.\n\n      if (cond?.glue) {\n         (cond.rules ?? []).forEach((r) => {\n            isComplete = isComplete && this.isConditionComplete(r);\n         });\n      } else {\n         // every condition needs a .key & .rule\n         if (!cond.key || cond.key == \"\") {\n            isComplete = false;\n         }\n\n         if (!cond.rule || cond.rule == \"\") {\n            isComplete = false;\n         }\n\n         if (isComplete) {\n            switch (cond.rule) {\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n               case \"same_as_user\":\n               case \"not_same_as_user\":\n               case \"less_current\":\n               case \"greater_current\":\n               case \"less_or_equal_current\":\n               case \"greater_or_equal_current\":\n               case \"is_empty\":\n               case \"is_not_empty\":\n               case \"checked\":\n               case \"unchecked\":\n               case \"is_current_date\":\n                  // There are only a few rules that don't need a\n                  // value\n                  break;\n\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // a value needs to exist\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  // and it needs to reference a valid DC\n                  if (isComplete) {\n                     let dc = this.AB.datacollectionByID(cond.value);\n                     if (!dc) {\n                        isComplete = false;\n                     }\n                  }\n                  break;\n\n               case \"in_query\":\n               case \"not_in_query\":\n                  // a value needs to exist\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  // and it needs to reference a valid query\n                  if (isComplete) {\n                     let query = this.AB.queryByID(cond.value);\n                     if (!query) {\n                        isComplete = false;\n                     }\n                  }\n                  break;\n\n               case \"in_query_field\":\n               case \"not_in_query_field\":\n                  // a value needs to exist\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  // and it needs to reference a valid query\n                  if (isComplete) {\n                     let queryId = cond.value.split(\":\")[0],\n                        fieldId = cond.value.split(\":\")[1];\n                     let query = this.AB.queryByID(queryId);\n                     if (!query) {\n                        isComplete = false;\n                     } else {\n                        // and a valid field\n                        let field = query.fieldByID(fieldId);\n                        if (!field) {\n                           isComplete = false;\n                        }\n                     }\n                  }\n                  break;\n\n               default:\n                  // The rest do need a .value\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  break;\n            }\n         }\n      }\n\n      return isComplete;\n   }\n\n   setValue(settings) {\n      super.setValue(settings);\n      this.condition = settings;\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!settings) {\n            // Clear settings value of webix.query\n            el.define(\"value\", {\n               glue: \"and\",\n               rules: [],\n            });\n            return;\n         }\n\n         let qbSettings = this.AB.cloneDeep(settings);\n\n         // Settings should match a condition built upon our QB format:\n         // {\n         //    glue:\"and\",\n         //    rules:[\n         //       {\n         //          key:\"uuid\",\n         //          rule:\"\",\n         //          value:\"\"\n         //       }\n         //    ]\n         // }\n         // externally our key should be the field.id and the rules should be\n         // the \"contains\", \"not_contains\", \"equal\" ... keywords.\n         // However, internally, we convert these rules into .ids that are\n         // unique for each field (see uiInit()).  So when we bring in settings\n         // we need to translate them into our internal format:\n\n         _toInternal(qbSettings, this._Fields);\n\n         this.__blockOnChange = true;\n         el.define(\"value\", qbSettings);\n         this.__blockOnChange = false;\n      }\n   }\n\n   getValue() {\n      if ($$(this.ids.querybuilder)) {\n         let settings = this.AB.cloneDeep(\n            $$(this.ids.querybuilder).getState().value ?? {}\n         );\n\n         // what we pull out of the QB will have .rules in our internal format:\n         // {field.id}_{rule}  (see uiInit() )\n         // But we need to store them in our generic QB format for use outside\n         // our FilterComplex widget.\n         _toExternal(settings, this._Fields);\n         this.condition = settings;\n      }\n\n      return super.getValue();\n   }\n\n   fieldsLoad(fields = [], object = null) {\n      super.fieldsLoad(fields, object);\n      // Format date types\n      fields.forEach((f) => {\n         if (f.type === \"date\")\n            f.format = (v) => this.AB.Webix.il8n.dateFormatStr(v);\n      });\n      this.uiInit();\n   }\n\n   toShortHand() {\n      return \"Add Filters\";\n   }\n\n   uiInit() {\n      this.uiQueryCustomValue();\n\n      let el = $$(this.ids.querybuilder);\n      if (el) {\n         // Clear fields\n         while (el.config.fields.length > 0) {\n            el.config.fields.pop();\n         }\n         // Set fields\n         (this.fieldsToQB() ?? []).forEach((f) => {\n            el.config.fields.push(f);\n         });\n         if (el.config.fields.length) {\n            el.enable();\n         } else {\n            this.setValue(\"\");\n            el.disable();\n         }\n      }\n   }\n\n   // HACK: have to overwrite Webix Query's function to support our custom input requirement.\n   // HooWoo\n   uiQueryCustomValue() {\n      const $el = $$(this.ids.querybuilder);\n      if (!$el) return;\n\n      const _this = this;\n      const $filterView = $el.$app.require(\"jet-views\", \"filter\");\n\n      if (!this._fnBaseGetValue)\n         this._fnBaseGetValue = $filterView.prototype.GetValue;\n      $filterView.prototype.GetValue = function () {\n         const rule = _this._fnBaseGetValue.call(this);\n         if (!rule) {\n            // Not sure if its a problem, so report in case it is.\n            _this.AB.notify.developer(new Error(\"No rule found\"), {\n               context: \"No rule from $filterView.GetValue()\",\n            });\n            return;\n         }\n\n         if (\n            rule.condition.type == \"in_query_field\" ||\n            rule.condition.type == \"not_in_query_field\"\n         ) {\n            const queryOptId = _uiQueryOptionId(rule.field);\n            const fieldOptId = _uiFieldOptionId(rule.field);\n            const selectedQueryId = $$(queryOptId)?.getValue();\n            const selectedFieldId = $$(fieldOptId)?.getValue();\n\n            if (selectedQueryId && selectedFieldId) {\n               rule.includes = [selectedQueryId, selectedFieldId];\n            }\n         }\n\n         return rule;\n      };\n\n      // window.query.views.filter.prototype.CreateFilter = (\n      $filterView.prototype.CreateFilter = async function (\n         fieldId,\n         type,\n         format,\n         conditions,\n         place\n      ) {\n         let inputs = _this.uiValue(fieldId);\n\n         let ui = {\n            id: place.config.id,\n            view: \"filter\",\n            localId: \"filter\",\n            conditions: conditions,\n            field: fieldId,\n            mode: type,\n            template: function (o) {\n               let str = o[fieldId];\n               let parser =\n                  format ?? (type == \"date\" ? webix.i18n.dateFormatStr : null);\n               if (parser) str = parser(str);\n               return str;\n            },\n            inputs: inputs,\n            margin: 6,\n         };\n\n         let filter = webix.ui(ui, place);\n\n         // NOTE: Need this to have filter.config.value?.includes value\n         // let data = [];\n         if ($el) {\n            await $el.$app.getService(\"backend\").data(fieldId);\n            // data = await $query.getService(\"backend\").data(fieldId);\n         }\n         // filter.parse(data);\n\n         // Populate options of \"in_query_field\" and \"not_in_query_field\"\n         if (\n            conditions.filter(\n               (cond) =>\n                  cond.id == \"in_query_field\" || cond.id == \"not_in_query_field\"\n            ).length &&\n            filter.config.value?.includes?.length == 2\n         ) {\n            // inputs = _this.uiValue(fieldId, filter.config.value.includes);\n            // filter.define(\"inputs\", inputs);\n            const queryOptId = _uiQueryOptionId(fieldId);\n            const fieldOptId = _uiFieldOptionId(fieldId);\n            const $queryOpt = $$(queryOptId);\n            const $fieldOpt = $$(fieldOptId);\n            const vals = filter.config.value?.includes ?? [];\n            if (vals?.length > 1 && $queryOpt && $fieldOpt) {\n               $queryOpt.setValue(vals[0]);\n               $fieldOpt.setValue(vals[1]);\n               $queryOpt.refresh();\n               $fieldOpt.refresh();\n            }\n         }\n\n         return filter;\n      };\n   }\n\n   uiValue(fieldColumnName, defaultValue = null) {\n      let result;\n\n      // Special case: this_object\n      if (fieldColumnName == \"this_object\") {\n         return []\n            .concat(this.uiQueryValue(\"this_object\"))\n            .concat(this.uiDataCollectionValue(\"this_object\"))\n            .concat(this.uiCustomValue(\"this_object\"))\n            .concat(this.uiContextValue(\"this_object\", \"uuid\"));\n      }\n\n      let field = (this._Fields ?? []).filter(\n         (f) => f.id == fieldColumnName\n      )[0];\n\n      switch (field?.key) {\n         case \"boolean\":\n            result = this.uiNoneValue(field);\n            break;\n         case \"connectObject\":\n            result = []\n               .concat(this.uiQueryValue(field))\n               .concat(this.uiUserValue(field))\n               .concat(this.uiDataCollectionValue(field))\n               .concat(this.uiContextValue(field))\n               .concat(this.uiNoneValue());\n            break;\n         case \"date\":\n         case \"datetime\":\n            result = [\"datepicker\", \"daterangepicker\"]\n               .concat(this.uiNoneValue())\n               .concat(this.uiContextValue(field));\n            break;\n         case \"list\":\n            result = this.uiListValue(field);\n            break;\n         case \"user\":\n            result = []\n               .concat(this.uiNoneValue())\n               .concat(this.uiUserValue(field));\n            break;\n         // case \"number\":\n         //    result = [\"text\"];\n         //    break;\n         case \"string\":\n         case \"LongText\":\n         case \"email\":\n            result = this.uiNoneValue();\n            break;\n      }\n\n      // Add filter options to Custom index\n      const LinkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      if (\n         // 1:M\n         LinkType == \"one:many\" ||\n         // 1:1 isSource = true\n         (LinkType == \"one:one\" && field?.settings?.isSource)\n      ) {\n         result = result ?? [];\n\n         if (field?.settings?.isCustomFK)\n            result = result.concat(this.uiTextValue(field));\n\n         result = result.concat(this.uiQueryFieldValue(field, defaultValue));\n      } else if (field?.key != \"connectObject\") {\n         result = (result ?? [])\n            .concat(this.uiTextValue(field))\n            .concat(this.uiQueryFieldValue(field, defaultValue))\n            .concat(this.uiContextValue(field));\n      }\n      // Special case: from Process builder\n      // .processFieldsLoad()\n      else if (fieldColumnName.indexOf(\"uuid\") > -1) {\n         result = this.uiContextValue(null, fieldColumnName);\n      }\n\n      if (this._settings.isRecordRule) {\n         result = (result ?? []).concat(this.uiRecordRuleValue(field));\n      }\n\n      result = (result ?? []).concat(this.uiCustomValue(field));\n\n      return result;\n   }\n\n   uiNoneValue() {\n      return [\n         {\n            batch: \"none\",\n            borderless: true,\n            view: \"template\",\n            template: \"\",\n         },\n      ];\n   }\n\n   uiBooleanValue(field) {\n      return [\n         {\n            batch: \"boolean\",\n            view: \"checkbox\",\n         },\n      ];\n   }\n\n   uiTextValue(field) {\n      return [\n         {\n            batch: \"text\",\n            view: \"text\",\n            on: {\n               onAfterRender: function () {\n                  // HACK: focus on webix.text and webix.textarea\n                  // Why!! If the parent layout has zIndex lower than 101,\n                  // then is not able to focus to webix.text and webix.textarea\n                  let $layout =\n                     this.queryView(function (a) {\n                        return !a.getParentView();\n                     }, \"parent\") ?? this;\n                  $layout.$view.style.zIndex = 202;\n               },\n            },\n         },\n      ];\n   }\n\n   uiQueryValue(field) {\n      let options = [];\n\n      let isQueryField =\n         this._QueryFields?.filter((f) => f.id == field.id).length > 0;\n\n      // populate the list of Queries for this_object:\n      if (field == \"this_object\" && this._Object) {\n         options = this.queries((q) => q.canFilterObject(this._Object));\n      }\n      // populate the list of Queries for a query field\n      else if (isQueryField) {\n         options = this.queries(\n            (q) =>\n               (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n               q.canFilterObject(field.datasourceLink)\n         );\n      }\n\n      options?.forEach((q) => {\n         options.push({\n            id: q.id,\n            value: q.label,\n         });\n      });\n\n      return [\n         {\n            batch: \"query\",\n            view: \"combo\",\n            options: options ?? [],\n         },\n      ];\n   }\n\n   uiListValue(field) {\n      return [\n         {\n            batch: \"list\",\n            view: \"combo\",\n            options: field?.settings?.options?.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiUserValue(field) {\n      return [\n         {\n            batch: \"user\",\n            view: \"combo\",\n            options: this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiDataCollectionValue(field) {\n      let linkObjectId;\n      if (field == \"this_object\" && this._Object) {\n         linkObjectId = this._Object.id;\n      } else {\n         linkObjectId = field?.settings?.linkObject;\n      }\n\n      return [\n         {\n            batch: \"datacollection\",\n            view: \"combo\",\n            options: linkObjectId\n               ? this.AB.datacollections(\n                    (dc) => dc?.datasource?.id == linkObjectId\n                 ).map((dc) => {\n                    return {\n                       id: dc.id,\n                       value: dc.label,\n                    };\n                 })\n               : [],\n         },\n      ];\n   }\n\n   uiQueryFieldValue(field, defaultValue) {\n      // ABQuery Options\n      const qOpts = this.queries(\n         (q) => this._Object == null || q.id != this._Object.id\n      ).map((q) => {\n         return {\n            id: q.id,\n            value: q.label,\n         };\n      });\n\n      const pullFieldOption = (queryId) => {\n         const options = [];\n\n         // Get fields of the query\n         const Query = this.AB.queryByID(queryId);\n         if (Query) {\n            Query.fields((f) => !f.isConnection).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: `${q.object.label}.${q.label}`,\n               });\n            });\n         }\n\n         return options;\n      };\n\n      const refreshFieldOption = ($queryOpt, queryId) => {\n         const options = pullFieldOption(queryId);\n\n         // Update UI\n         if ($queryOpt) {\n            const $queryContainer = $queryOpt.getParentView();\n            const $fieldOption = $queryContainer.getChildViews()[1];\n            $fieldOption?.define(\"options\", options);\n            $fieldOption?.refresh();\n         }\n      };\n\n      let queryId;\n      let fieldId;\n      let fieldOptions = [];\n      if (defaultValue?.length == 2) {\n         queryId = defaultValue[0];\n         fieldId = defaultValue[1];\n\n         fieldOptions = pullFieldOption(queryId);\n      }\n\n      return [\n         {\n            batch: \"queryField\",\n            view: \"form\",\n            borderless: true,\n            padding: 0,\n            elements: [\n               {\n                  id: _uiQueryOptionId(field?.id),\n                  name: \"query\",\n                  view: \"combo\",\n                  placeholder:\n                     this.labels.component.inQueryFieldQueryPlaceholder,\n                  options: qOpts,\n                  value: queryId,\n                  on: {\n                     onChange: function (qVal) {\n                        refreshFieldOption(this, qVal);\n                     },\n                  },\n               },\n               {\n                  id: _uiFieldOptionId(field?.id),\n                  name: \"field\",\n                  view: \"combo\",\n                  placeholder: L(\"Choose a Field\"),\n                  options: fieldOptions,\n                  value: fieldId,\n               },\n            ],\n         },\n      ];\n   }\n\n   uiRecordRuleValue(field) {\n      return [\n         {\n            batch: \"recordRule\",\n            view: \"select\",\n            options: this._settings.recordRuleFieldOptions ?? [],\n         },\n      ];\n   }\n\n   uiContextValue(field, processFieldKey = null) {\n      const processFields = (this._ProcessFields ?? [])\n         .filter((pField) => {\n            if (!pField) return false;\n\n            let result = false;\n            switch (field) {\n               case \"this_object\":\n                  result =\n                     this._Object.id === pField.object?.id && !pField.field;\n\n                  break;\n\n               default:\n                  switch (field.key) {\n                     case \"boolean\":\n                        result = [\"boolean\"].includes(pField.field?.key);\n\n                        break;\n\n                     case \"connectObject\":\n                        result =\n                           field.settings.linkObject ===\n                           (pField.field?.object.id ?? pField.object.id);\n\n                        if (!field.settings.isCustomFK) {\n                           result = result && !pField.field;\n\n                           break;\n                        }\n\n                        result =\n                           result &&\n                           (field.settings.indexField ||\n                              field.settings.indexField2) === pField.field?.id;\n\n                        break;\n\n                     case \"date\":\n                     case \"datetime\":\n                        result = [\"date\", \"datetime\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"calculate\":\n                     case \"formula\":\n                     case \"number\":\n                        result = [\"calculate\", \"formula\", \"number\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"string\":\n                     case \"LongText\":\n                     case \"email\":\n                     case \"AutoIndex\":\n                     case \"list\":\n                        result = [\n                           \"string\",\n                           \"LongText\",\n                           \"email\",\n                           \"AutoIndex\",\n                           \"list\",\n                        ].includes(pField.field?.key);\n\n                        break;\n\n                     case \"user\":\n                        result = [\"user\"].includes(pField.field?.key);\n\n                        break;\n\n                     default:\n                        if (pField.key) {\n                           // uuid\n                           const processFieldId = pField.key.split(\".\").pop();\n\n                           result =\n                              processFieldId === field.id ||\n                              processFieldId === field.key ||\n                              processFieldId === processFieldKey ||\n                              pField.key === processFieldKey;\n                        }\n\n                        break;\n                  }\n\n                  break;\n            }\n\n            return result;\n         })\n         .map((e) => {\n            return {\n               id: e.key,\n               value: L(\"context({0})\", [e.label]),\n            };\n         });\n\n      if (!processFields) return [];\n\n      return [\n         {\n            batch: \"context\",\n            view: \"select\",\n            options: [\n               {\n                  id: \"empty\",\n                  value: this.labels.component.contextDefaultOption,\n               },\n               ...processFields,\n            ],\n         },\n      ];\n   }\n\n   uiCustomValue(field) {\n      if (!field) return [];\n\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id ?? field] ?? {};\n      return options.values ?? [];\n   }\n\n   popUp(...options) {\n      const condition = Object.assign({}, this.condition);\n\n      if (!this.myPopup) {\n         let ui = {\n            id: this.ids.popup,\n            view: \"popup\",\n            height: 400,\n            width: 800,\n            body: this.ui,\n         };\n\n         if (!$$(this.ids.popup)) {\n            this.myPopup = webix.ui(ui);\n            this.init(this._settings);\n            if (this._Fields) {\n               this.fieldsLoad(this._Fields, this._Object);\n            }\n\n            // NOTE: do this, before the .setValue() operation, as we need to have\n            // our fields and filters defined BEFORE a setValue() is performed.\n            // this.uiInit();\n\n            if (condition) {\n               this.setValue(condition);\n            }\n\n            this.myPopup.show(...options);\n         } else {\n            $$(this.ids.popup).show(...options);\n         }\n      } else {\n         this.myPopup.show(...options);\n      }\n   }\n\n   /**\n    * @method addCustomOption\n    *\n    * @param {string|uuid} fieldId\n    * @param {Object} options - {\n    *                               conditions: [],\n    *                               values: []\n    *                           }\n    */\n   addCustomOption(fieldId, options = {}) {\n      this._customOptions = this._customOptions ?? {};\n      this._customOptions[fieldId] = options;\n   }\n};\n","const RowFilterCore = require(\"../core/RowFilterCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class RowFilter extends RowFilterCore {\n   constructor(App, idBase, AB) {\n      super(App, idBase, AB);\n\n      console.error(\"TODO: Switch RowFilter => FilterComplex\");\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         component: this.unique(`${idBase}_rowFilter`),\n         filterForm: this.unique(`${idBase}_rowFilter_form`),\n         addNewFilter: this.unique(`${idBase}_rowFilter_addNewFilter`),\n\n         glue: this.unique(`${idBase}_rowFilter_glue`),\n         field: this.unique(`${idBase}_rowFilter_field`),\n         rule: this.unique(`${idBase}_rowFilter_rule`),\n         inputValue: this.unique(`${idBase}_rowFilter_inputValue`),\n\n         queryCombo: this.unique(`${idBase}_rowFilter_queryCombo`),\n         queryFieldCombo: this.unique(`${idBase}_rowFilter_queryFieldCombo`),\n         queryFieldComboQuery: this.unique(\n            `${idBase}_rowFilter_queryFieldComboQuery`\n         ),\n         queryFieldComboField: this.unique(\n            `${idBase}_rowFilter_queryFieldComboField`\n         ),\n         fieldMatch: this.unique(`${idBase}_rowFilter_fieldMatchCombo`),\n\n         dataCollection: this.unique(`${idBase}_rowFilter_dataCollection`),\n\n         listOptions: this.unique(`${idBase}_rowFilter_listOptions`),\n\n         datePicker: this.unique(`${idBase}_rowFilter_datePicker`),\n      });\n\n      // Set current username\n      // this.Account.username = this.AB.Account.username();\n\n      var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      // Default options list to push to all fields\n      this.queryFieldOptions = [\n         {\n            value: L(\"By Query Field\"),\n            id: \"in_query_field\",\n         },\n         {\n            value: L(\"Not In Query\"),\n            id: \"not_in_query_field\",\n         },\n      ];\n\n      this.recordRuleOptions = [];\n      this.recordRuleFieldOptions = [];\n\n      let _logic = this._logic || {};\n\n      /**\n       * @method getFieldList\n       * return field list to render options\n       */\n      _logic.getFieldList = () => {\n         return (this._Fields || []).map((f) => {\n            let label = f.label;\n\n            // include object's name to options\n            if (this._settings.showObjectName && f.object) {\n               label = f.object.label + \".\" + f.label;\n            }\n\n            return {\n               id: f.id,\n               value: label,\n               alias: f.alias || undefined, // ABObjectQuery\n            };\n         });\n      };\n\n      _logic.getFilterUI = () => {\n         let instance = this;\n         let config_settings = this.config_settings || {};\n\n         return {\n            id: \"f\" + webix.uid(),\n            isolate: true,\n            cols: [\n               {\n                  // Add / Or\n                  view: \"combo\",\n                  id: ids.glue,\n                  width: 80,\n                  value: config_settings.glue || \"and\",\n                  options: [\n                     {\n                        value: L(\"And\"),\n                        id: \"and\",\n                     },\n                     {\n                        value: L(\"Or\"),\n                        id: \"or\",\n                     },\n                  ],\n                  on: {\n                     onChange: function (newVal, oldVal) {\n                        _logic.selectCombineCondition(newVal);\n                     },\n                  },\n               },\n               {\n                  // Field list\n                  view: \"combo\",\n                  id: ids.field,\n                  suggest: {\n                     on: {\n                        onBeforeShow: function () {\n                           this.define(\"width\", 400);\n                           this.resize();\n                        },\n                     },\n                     data: _logic.getFieldList(),\n                  },\n                  on: {\n                     onChange: function (columnId) {\n                        var $viewCond = this.getParentView();\n                        _logic.selectField(columnId, $viewCond);\n                     },\n                  },\n               },\n               // Comparer\n               {\n                  id: ids.rule,\n                  width: 220,\n                  cells: [\n                     {},\n                     // Query\n                     {\n                        batch: \"query\",\n                        view: \"combo\",\n                        value: \"in_query\",\n                        options: [\n                           {\n                              value: L(\"In Query\"),\n                              id: \"in_query\",\n                           },\n                           {\n                              value: L(\"Not In Query\"),\n                              id: \"not_in_query\",\n                           },\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is empty\"),\n                              id: \"is_empty\",\n                           },\n                           {\n                              value: L(\"is not empty\"),\n                              id: \"is_not_empty\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                           {\n                              value: L(\"In Data Collection\"),\n                              id: \"in_data_collection\",\n                           },\n                           {\n                              value: L(\"Not In Data Collection\"),\n                              id: \"not_in_data_collection\",\n                           },\n                        ].concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n\n                     // Date\n                     {\n                        batch: \"date\",\n                        view: \"combo\",\n                        value: \"less\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is before\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\"is after\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"is on or before\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"is on or after\"),\n                              id: \"greater_or_equal\",\n                           },\n                           {\n                              value: L(\"is before current date\"),\n                              id: \"less_current\",\n                           },\n                           {\n                              value: L(\"is after current date\"),\n                              id: \"greater_current\",\n                           },\n                           {\n                              value: L(\"is on or before current date\"),\n                              id: \"less_or_equal_current\",\n                           },\n                           {\n                              value: L(\"is on or after current date\"),\n                              id: \"greater_or_equal_current\",\n                           },\n                           {\n                              value: L(\"last ... days\"),\n                              id: \"last_days\",\n                           },\n                           {\n                              value: L(\"next ... days\"),\n                              id: \"next_days\",\n                           },\n                           {\n                              value: L(\"is current date\"),\n                              id: \"is_current_date\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\":\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"≠\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"<\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\">\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"≤\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"≥\"),\n                              id: \"greater_or_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        value: \"is_current_user\",\n                        options: [\n                           {\n                              value: L(\"is current user\"),\n                              id: \"is_current_user\",\n                           },\n                           {\n                              value: L(\"is not current user\"),\n                              id: \"is_not_current_user\",\n                           },\n                           {\n                              value: L(\"contains current user\"),\n                              id: \"contain_current_user\",\n                           },\n                           {\n                              value: L(\"does not contain current user\"),\n                              id: \"not_contain_current_user\",\n                           },\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               // Value\n               {\n                  id: ids.inputValue,\n                  isolate: true,\n                  cells: [\n                     {\n                        batch: \"empty\",\n                     },\n\n                     // Query\n                     {\n                        id: ids.queryCombo,\n\n                        batch: \"query\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Query Field\n                     {\n                        id: ids.queryFieldCombo,\n                        batch: \"queryField\",\n                        rows: [\n                           {\n                              id: ids.queryFieldComboQuery,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Query\"),\n                              on: {\n                                 onChange: function (value) {\n                                    var $viewComparer = this.getParentView();\n                                    var $viewCond = $viewComparer\n                                       .getParentView()\n                                       .getParentView();\n                                    _logic.onChangeQueryFieldCombo(\n                                       value,\n                                       $viewCond\n                                    );\n\n                                    _logic.onChange();\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.queryFieldComboField,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Field\"),\n                              on: {\n                                 onChange: _logic.onChange,\n                              },\n                           },\n                        ],\n                     },\n\n                     // Field match\n                     {\n                        id: ids.fieldMatch,\n                        batch: \"fieldMatch\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Data collection\n                     {\n                        id: ids.dataCollection,\n                        batch: \"dataCollection\",\n                        view: \"richselect\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Date\n                     {\n                        // inputView.format = field.getDateFormat();\n                        batch: \"date\",\n                        id: ids.datePicker,\n                        view: \"datepicker\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"text\",\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onTimedKeyPress: function () {\n                              if (this.validate()) _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        id: ids.listOptions,\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"checkbox\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        options: this.AB.Account.userList().map((u) => {\n                           return {\n                              id: u.username,\n                              value: u.username,\n                           };\n                        }),\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewForm = this.getFormView();\n\n                     var indexView = $viewForm.index(this.getParentView());\n\n                     _logic.addNewFilter(indexView + 1);\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewCond = this.getParentView();\n\n                     _logic.removeNewFilter($viewCond);\n                  },\n               },\n            ],\n         };\n      };\n\n      _logic.getAddButtonUI = () => {\n         return {\n            view: \"button\",\n            id: ids.addNewFilter,\n            css: \"webix_primary\",\n            type: \"form\",\n            label: L(\"Add a filter\"),\n            click: () => {\n               _logic.addNewFilter();\n            },\n         };\n      };\n\n      _logic.addNewFilter = (index, fieldId) => {\n         var viewId;\n         var ui = _logic.getFilterUI();\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            viewId = $viewForm.addView(ui, index);\n\n            _logic.toggleAddNewButton();\n\n            // select a option of field\n            if (fieldId) _logic.selectField(fieldId, $$(viewId), true);\n         }\n\n         return viewId;\n      };\n\n      _logic.removeNewFilter = function ($viewCond) {\n         var $viewForm = $$(ids.filterForm);\n\n         $viewForm.removeView($viewCond);\n\n         _logic.toggleAddNewButton();\n\n         _logic.onChange();\n      };\n\n      _logic.toggleAddNewButton = function () {\n         if (!$$(ids.filterForm)) return;\n\n         // Show \"Add new filter\" button\n         if ($$(ids.filterForm).getChildViews().length < 1) {\n            $$(ids.filterForm).hide();\n            $$(ids.addNewFilter).show();\n         }\n         // Hide \"Add new filter\" button\n         else {\n            $$(ids.filterForm).show();\n            $$(ids.addNewFilter).hide();\n         }\n      };\n\n      _logic.selectCombineCondition = (val, ignoreNotify) => {\n         // define combine value to configuration\n         this.config_settings.glue = val;\n\n         // update value of every combine conditions\n         var $viewConds = $$(ids.filterForm).getChildViews();\n         $viewConds.forEach((v) => {\n            if (v.$$ && v.$$(ids.glue)) v.$$(ids.glue).setValue(val);\n         });\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.selectField = (columnId, $viewCond, ignoreNotify) => {\n         if (!this._Fields) return;\n\n         var field = this._Fields.filter((f) => f.id == columnId)[0];\n         if (!field) return;\n\n         // switch view\n         batchName = field.key;\n         if (field.id == \"this_object\") batchName = \"query\";\n         // Special this object query\n         else if (batchName == \"LongText\" || batchName == \"combined\")\n            batchName = \"string\";\n         else if (field.key == \"formula\") batchName = \"number\";\n         var isQueryField =\n            this._QueryFields.filter((f) => {\n               return f.id == field.id;\n            }).length > 0;\n         if (isQueryField) {\n            // we chose a connectField which is now a Query type\n            batchName = \"query\";\n         }\n         $viewCond.$$(ids.rule).showBatch(batchName);\n         $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n         let options = [];\n         let Queries = [];\n\n         // populate the list of Queries for this_object:\n         if (field.id == \"this_object\" && this._Object) {\n            Queries = this.queries((q) => q.canFilterObject(this._Object));\n         }\n         // populate the list of Queries for a query field\n         else if (isQueryField) {\n            Queries = this.queries((q) => {\n               return (\n                  (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n                  q.canFilterObject(field.datasourceLink)\n               );\n            });\n         }\n\n         Queries.forEach((q) => {\n            options.push({\n               id: q.id,\n               value: q.label,\n            });\n         });\n         $viewCond\n            .$$(ids.inputValue)\n            .$$(ids.queryCombo)\n            .define(\"options\", options);\n         $viewCond.$$(ids.inputValue).$$(ids.queryCombo).refresh();\n\n         // populate options of list\n         if (field.key == \"list\") {\n            let listOptions = field.settings.options.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.listOptions)\n               .define(\"options\", listOptions);\n            $viewCond.$$(ids.inputValue).$$(ids.listOptions).refresh();\n         }\n         // set format of datepicker\n         else if (field.key == \"date\") {\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.datePicker)\n               .define(\"format\", field.getFormat());\n            $viewCond.$$(ids.inputValue).$$(ids.datePicker).refresh();\n         }\n\n         var rule = null,\n            ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.getList) {\n            let defaultOpt = ($viewComparer.getList().config.data || [])[0];\n            if (defaultOpt) {\n               $viewComparer.setValue(defaultOpt.id);\n            }\n\n            // rule = $viewComparer.getValue();\n            // if (rule == \"in_query_field\" || rule == \"not_in_query_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n            // } else if (rule == \"same_as_field\" || rule == \"not_same_as_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n            // }\n         }\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.onChangeRule = (rule, $viewCond, notify = false) => {\n         switch (rule) {\n            case \"contains\":\n            case \"not_contains\":\n            case \"equals\":\n            case \"not_equal\":\n               // For \"connect_fields\" search by CUSTOM index value\n               if (batchName == \"query\") {\n                  $viewCond.$$(ids.inputValue).showBatch(\"string\");\n               }\n               // If want to call notify or call .onChange(), then pass notify is true.\n               // _logic.onChange();\n               break;\n\n            case \"is_current_user\":\n            case \"is_not_current_user\":\n            case \"contain_current_user\":\n            case \"not_contain_current_user\":\n            case \"same_as_user\":\n            case \"not_same_as_user\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n            case \"is_current_date\":\n               // clear and disable the value field\n               $viewCond.$$(ids.inputValue).showBatch(\"empty\");\n               _logic.onChange();\n               break;\n\n            case \"last_days\":\n            case \"next_days\":\n               // Show the number input\n               $viewCond.$$(ids.inputValue).showBatch(\"number\");\n               break;\n\n            case \"in_query_field\":\n            case \"not_in_query_field\":\n               // populate the list of Queries for this_object:\n               var options = [];\n\n               // Get all application's queries\n               this.queries(\n                  (q) => this._Object == null || q.id != this._Object.id\n               ).forEach((q) => {\n                  options.push({\n                     id: q.id,\n                     value: q.label,\n                  });\n               });\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .define(\"options\", options);\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n               break;\n\n            case \"same_as_field\":\n            case \"not_same_as_field\":\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.fieldMatch)\n                  .define(\"options\", this.recordRuleFieldOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.fieldMatch).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n               break;\n\n            case \"in_data_collection\":\n            case \"not_in_data_collection\": {\n               let dcOptions = [];\n\n               // pull data collection list\n\n               // get id of the link object\n               let linkObjectId,\n                  columnId = $viewCond.$$(ids.field).getValue();\n               if (columnId == \"this_object\" && this._Object) {\n                  linkObjectId = this._Object.id;\n               } else {\n                  let field = this._Fields.filter((f) => f.id == columnId)[0];\n                  if (field) linkObjectId = field.settings.linkObject;\n               }\n\n               if (this._Application && linkObjectId) {\n                  this._Application\n                     .datacollections(\n                        (dc) =>\n                           dc.datasource && dc.datasource.id == linkObjectId\n                     )\n                     .forEach((dc) => {\n                        dcOptions.push({\n                           id: dc.id,\n                           value: dc.label,\n                        });\n                     });\n               }\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.dataCollection)\n                  .define(\"options\", dcOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.dataCollection).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"dataCollection\");\n               break;\n            }\n\n            default:\n               // Show the default value inputs\n               $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n               if (notify) _logic.onChange();\n\n               break;\n         }\n      };\n\n      _logic.onChangeQueryFieldCombo = (value, $viewCond) => {\n         // populate the list of Queries for this_object:\n         let options = [];\n         // Get all queries fields\n         let Query = this.queries((q) => {\n            return q.id == value;\n         })[0];\n         if (Query) {\n            Query.fields((f) => {\n               return !f.isConnection;\n            }).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: q.object.label + \".\" + q.label,\n               });\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.queryFieldComboField)\n               .define(\"options\", options);\n            $viewCond.$$(ids.inputValue).$$(ids.queryFieldComboField).refresh();\n         }\n\n         // _logic.onChange();\n      };\n\n      _logic.onChange = () => {\n         if (!this.__blockOnChange) {\n            // refresh config settings before notify\n            _logic.getValue();\n\n            console.warn(\"convert RowFilter.callback.onChange() to .emit()\");\n            _logic.callbacks.onChange();\n            this.emit(\"change\");\n         }\n\n         return false;\n      };\n\n      _logic.blockOnChange = () => {\n         this.__blockOnChange = true;\n      };\n\n      _logic.unblockOnChange = () => {\n         this.__blockOnChange = false;\n      };\n\n      /**\n       * @method getValue\n       *\n       * @return {JSON} -\n       * {\n       * \t\tglue: '', // 'and', 'or'\n       *\t\trules: [\n       *\t\t\t{\n       *\t\t\t\tkey:\t'column name',\n       *\t\t\t\trule:\t'rule',\n       *\t\t\t\tvalue:\t'value'\n       *\t\t\t}\n       *\t\t]\n       * }\n       */\n      _logic.getValue = () => {\n         let config_settings = {\n            glue: \"and\",\n            rules: [],\n         };\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            $viewForm.getChildViews().forEach(($viewCond, index) => {\n               if (index == 0) {\n                  config_settings.glue = $viewCond.$$(ids.glue).getValue();\n               }\n\n               var $fieldElem = $viewCond.$$(ids.field);\n               if (!$fieldElem) return;\n\n               /* field id */\n               var fieldId = $fieldElem.getValue();\n               if (!fieldId) return;\n\n               /* alias */\n               var alias;\n               var selectedOpt = $viewCond\n                  .$$(ids.field)\n                  .getPopup()\n                  .config.body.data.filter((opt) => opt.id == fieldId)[0];\n               if (selectedOpt) alias = selectedOpt.alias || undefined;\n\n               /* rule */\n               var rule = null,\n                  ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n                  $viewComparer = $viewCond\n                     .$$(ids.rule)\n                     .queryView({ id: ruleViewId });\n               if ($viewComparer && $viewComparer.getValue)\n                  rule = $viewComparer.getValue();\n\n               /* value */\n               var value = null,\n                  valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n                  $viewConditionValue = $viewCond\n                     .$$(ids.inputValue)\n                     .queryView({ id: valueViewId });\n               if ($viewConditionValue && $viewConditionValue.getValue) {\n                  value = $viewConditionValue.getValue();\n               } else if (\n                  $viewConditionValue &&\n                  $viewConditionValue.getChildViews()\n               ) {\n                  var vals = [];\n                  $viewConditionValue.getChildViews().forEach((element) => {\n                     vals.push($$(element).getValue());\n                  });\n                  value = vals.join(\":\");\n               }\n\n               // Convert date format\n               if (value instanceof Date) {\n                  let dateField = this._Fields.filter(\n                     (f) => f.id == fieldId\n                  )[0];\n                  if (dateField) {\n                     value = dateField.exportValue(value);\n                  } else {\n                     value = value.toISOString();\n                  }\n               }\n\n               config_settings.rules.push({\n                  alias: alias || undefined,\n                  key: fieldId,\n                  rule: rule,\n                  value: value,\n               });\n            });\n         }\n\n         this.config_settings = config_settings;\n\n         return this.config_settings;\n      };\n\n      // webix UI definition:\n      this.ui = {\n         id: ids.component,\n         rows: [\n            {\n               view: \"form\",\n               id: ids.filterForm,\n               hidden: true,\n               elements: [],\n            },\n            _logic.getAddButtonUI(),\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options = {}) {\n      super.init(options);\n\n      // register our callbacks:\n      for (var c in this._logic.callbacks) {\n         this._logic.callbacks[c] = options[c] || this._logic.callbacks[c];\n      }\n\n      if (options.showObjectName)\n         this._settings.showObjectName = options.showObjectName;\n\n      if (options.isRecordRule) {\n         this.recordRuleOptions = [\n            {\n               value: L(\"Same As Field\"),\n               id: \"same_as_field\",\n            },\n            {\n               value: L(\"Not Field\"),\n               id: \"not_same_as_field\",\n            },\n         ];\n         this.recordRuleFieldOptions = options.fieldOptions;\n      }\n   }\n\n   setValue(settings) {\n      settings = settings || {};\n\n      super.setValue(settings);\n\n      let ids = this.ids;\n      let logic = this._logic;\n\n      // block .onChange event\n      logic.blockOnChange();\n\n      let config_settings = this.AB.cloneDeep(settings);\n      config_settings.rules = config_settings.rules || [];\n\n      // Redraw form with no elements\n      var $viewForm = $$(ids.filterForm);\n      if ($viewForm) webix.ui([], $viewForm);\n\n      // Add \"new filter\" button\n      if (config_settings.rules.length == 0) {\n         logic.toggleAddNewButton();\n      }\n\n      config_settings.rules.forEach((f) => {\n         var viewId = logic.addNewFilter(),\n            $viewCond = $$(viewId);\n\n         if ($viewCond == null) return;\n\n         var field = this._Fields.filter((col) => col.id == f.key)[0];\n\n         // \"and\" \"or\"\n         $viewCond.$$(ids.glue).define(\"value\", config_settings.glue);\n         $viewCond.$$(ids.glue).refresh();\n\n         // Select Field\n         $viewCond.$$(ids.field).define(\"value\", f.key);\n         $viewCond.$$(ids.field).refresh();\n         logic.selectField(f.key, $viewCond, true);\n\n         // Comparer\n         var ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.setValue) {\n            $viewComparer.define(\"value\", f.rule);\n            $viewComparer.refresh();\n         }\n\n         // if (f.rule == \"in_query_field\" || f.rule == \"not_in_query_field\" || f.rule == \"same_as_field\" || f.rule == \"not_same_as_field\") {\n         $viewCond.blockEvent();\n         logic.onChangeRule(f.rule, $viewCond);\n         $viewCond.unblockEvent();\n         // }\n\n         // Input\n         var valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n            $viewConditionValue = $viewCond\n               .$$(ids.inputValue)\n               .queryView({ id: valueViewId });\n         if ($viewConditionValue && $viewConditionValue.setValue) {\n            // convert to Date object\n            if (\n               field &&\n               field.key == \"date\" &&\n               f.value &&\n               (f.rule == \"less\" ||\n                  f.rule == \"greater\" ||\n                  f.rule == \"less_or_equal\" ||\n                  f.rule == \"greater_or_equal\")\n            ) {\n               $viewConditionValue.define(\"value\", new Date(f.value));\n            } else {\n               $viewConditionValue.define(\"value\", f.value);\n            }\n\n            $viewConditionValue.refresh();\n         } else if (\n            $viewConditionValue &&\n            $viewConditionValue.getChildViews()\n         ) {\n            let vals = (f.value || \"\").split(\":\");\n            let index = 0;\n            $viewConditionValue.getChildViews().forEach((element) => {\n               $$(element).blockEvent();\n               $$(element).setValue(vals[index]);\n               if (index == 0) {\n                  logic.onChangeQueryFieldCombo(vals[index], $viewCond);\n               }\n               $$(element).unblockEvent();\n               // $$(element).refresh();\n               index++;\n            });\n         }\n\n         if (field && field.key == \"user\") {\n            $viewCond.blockEvent();\n            logic.onChangeRule(f.rule, $viewCond);\n            $viewCond.blockEvent();\n         }\n      });\n\n      // unblock .onChange event\n      logic.unblockOnChange();\n   }\n\n   /**\n    * @method isComplete()\n    * returns a truthy value representing whether or not our current condition\n    * expression is fully completed.  Then externally checks can be made to\n    * verify if the data is complete.\n    * @return {bool}\n    */\n   isComplete() {\n      if (!this._completeConditions) {\n         this._completeConditions = this.AB.filterComplexNew(\n            `${this.ids.component}_iscomplete`\n         );\n      }\n\n      return this._completeConditions.isConditionComplete(this.getValue());\n   }\n};\n","// const ABComponent = require(\"./ABComponent\");\nimport ClassUI from \"../../ui/ClassUI\";\nconst ABViewForm = require(\"../platform/views/ABViewForm\");\n\nlet L = null;\n\nclass RowUpdater extends ClassUI {\n   constructor(idBase, AB) {\n      super(idBase, {\n         form: `${idBase}_rowUpdaterForm`,\n         addNew: `${idBase}_rowUpdaterAddNew`,\n         field: `${idBase}_rowUpdaterField`,\n      });\n\n      this.idBase = idBase;\n\n      this._Object = null;\n      // {ABObject}\n      // The ABObject we are building a form for.\n\n      this._mockFormWidget = null;\n      // {ABViewForm}\n      // When building our form components to display, they need a\n      // ABViewForm to be associated with.\n\n      this.AB = AB;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   /**\n    * @method uiItem()\n    * Return the webix description of a new field/value row.\n    * @return {json}\n    */\n   uiItem() {\n      const self = this;\n\n      return {\n         rows: [\n            {\n               view: \"layout\",\n               isolate: true,\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     id: this.ids.field,\n                     options: this.getFieldList(true),\n                     on: {\n                        onChange: async function (columnId) {\n                           const $viewItem = this.getParentView();\n\n                           await self.selectField(columnId, $viewItem);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"To\"),\n                  },\n                  {\n                     view: \"segmented\",\n                     value: \"custom\",\n                     height: 40,\n                     maxWidth: 160,\n                     options: [\n                        { id: \"custom\", value: L(\"Custom\") },\n                        { id: \"process\", value: L(\"Process\") },\n                     ],\n                     hidden:\n                        this._extendedOptions == null ||\n                        !this._extendedOptions.length,\n                     on: {\n                        onChange: function (val) {\n                           const $viewItem = this.getParentView();\n\n                           self.toggleCustomProcessOption(\n                              $viewItem,\n                              val == \"process\"\n                           );\n                        },\n                     },\n                  },\n                  // Field value\n                  {},\n                  // Extended value\n                  {\n                     hidden: true,\n                  },\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n\n                     click: function () {\n                        const $viewCond = this.getParentView().getParentView();\n\n                        self.removeItem($viewCond);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   /**\n    * @method ui()\n    * return the webix description of our Entry form.\n    * @return {json}\n    */\n   ui() {\n      // webix UI definition:\n      return {\n         rows: [\n            {\n               view: \"form\",\n               id: this.ids.form,\n               hidden: true,\n               borderless: true,\n               elements: [],\n            },\n            {\n               view: \"button\",\n               id: this.ids.addNew,\n               icon: \"fa fa-plus\",\n               type: \"iconButton\",\n               label: L(\"Add field to edit\"),\n               click: () => {\n                  this.addItem();\n               },\n            },\n         ],\n      };\n   }\n\n   init(AB) {\n      const $form = $$(this.ids.form);\n      if ($form) AB.Webix.extend($form, AB.Webix.ProgressBar);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method addItem()\n    * Add another field/value entry item to our form.\n    * @param {integer} index\n    *        which position in the list of form elements do we want to\n    *        insert the new row.\n    * @return {string} the webix .id of the new row we just added.\n    */\n   addItem(index) {\n      const $form = $$(this.ids.form);\n      const remainFields = this.getFieldList(true);\n\n      if (remainFields.length < 1) return;\n\n      const ui = this.uiItem();\n      const viewId = $form.addView(ui, index);\n\n      this.toggleForm();\n\n      return viewId;\n   }\n\n   /**\n    * @method getFieldList()\n    * Return an array of options in a webix.list format that represents the\n    * possible fields that can be selected on the current ABObject.\n    * @param {bool} excludeSelected\n    *        should we exclude from the list the fields that are ALREADY\n    *        displayed on the form?\n    * @return {array} [ { id, value }, ... ]\n    *         id: ABField.id\n    *         value: ABField.label\n    */\n   getFieldList(excludeSelected) {\n      let options = (this._Object.fields() || []).map((f) => {\n         return {\n            id: f.id,\n            value: f.label,\n         };\n      });\n\n      if (excludeSelected) {\n         const $form = $$(this.ids.form);\n\n         $form.getChildViews().forEach(($viewCond) => {\n            // Ignore \"Add new\" button\n            if (!$viewCond || !$viewCond.$$) return;\n\n            const $fieldElem = $viewCond.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            options = options.filter((opt) => opt.id != fieldId);\n         });\n      }\n      return options;\n   }\n\n   /**\n    * @method getValue\n    * Return an array of field:value results that have been entered on this\n    * form.\n    * @return {Array}\n    *         [\n    *            {\n    *               fieldId: {UUID}\n    *               isProcessValue: {Boolean} - If it is true, then value is from Process parameter\n    *               value: {Object}\n    *            },\n    *            ...\n    *         ]\n    */\n   getValue() {\n      const result = [];\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         $form.getChildViews().forEach(($viewContainer) => {\n            const $viewItem = $viewContainer.getChildViews()[0];\n\n            // Ignore \"Add new\" button\n            if (!$viewItem || !$viewItem.$$) return;\n\n            const $fieldElem = $viewItem.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            let $customValueElem = $viewItem.getChildViews()[4];\n            $customValueElem = this._pullInputElement($customValueElem);\n\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            if (!$customValueElem && !$processValueElem) return;\n\n            const fieldInfo = this._Object.fieldByID(fieldId);\n            const val = {\n               fieldId: fieldId,\n            };\n\n            // Custom value\n            if ($customValueElem && $customValueElem.isVisible()) {\n               if (\n                  fieldInfo.key === \"connectObject\" ||\n                  fieldInfo.key === \"user\"\n               )\n                  val.value = fieldInfo.getValue($customValueElem);\n               else if (\n                  fieldInfo.key === \"date\" ||\n                  fieldInfo.key === \"datetime\"\n               ) {\n                  const currDateCheckbox =\n                     $customValueElem.getChildViews()[0] ?? $customValueElem;\n\n                  if (currDateCheckbox.getValue() == true)\n                     val.value = \"ab-current-date\";\n                  else {\n                     const datePicker =\n                        $customValueElem.getChildViews()[1] ?? $customValueElem;\n\n                     val.value = fieldInfo.getValue(datePicker);\n                  }\n               }\n               // Get value from data field manager\n               else val.value = fieldInfo.getValue($customValueElem);\n            }\n            // Process value\n            else if ($processValueElem && $processValueElem.isVisible()) {\n               val.isProcessValue = true;\n               val.value = $processValueElem.getValue();\n            }\n\n            // Add to output\n            result.push(val);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method objectLoad\n    * Load the Object we are currently working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._Object = object;\n\n      this._mockApp = this.AB.applicationNew({});\n      this._mockFormWidget = new ABViewForm(\n         {\n            settings: {\n               showLabel: false,\n               labelWidth: 0,\n            },\n         },\n         this._mockApp // just need any ABApplication here\n      );\n      this._mockFormWidget.objectLoad(object);\n\n      this.setValue(null); // clear\n   }\n\n   /**\n    * @method removeItem\n    * Remove the current form row.\n    * @param {webix.view} $viewCond\n    *        This is the webix.view that contains the whole value row\n    *        we are removing.\n    */\n   removeItem($viewCond) {\n      const $form = $$(this.ids.form);\n\n      $form.removeView($viewCond);\n      this.toggleForm();\n   }\n\n   /**\n    * @method selectField\n    * Update the value display when a field is selected. Changing to a\n    * different field will change the types of values that can be entered.\n    * @param {string} columnId\n    *        The field.uuid of the object that was selected.\n    * @param {webix.view} $viewItem\n    *        The webix.view that contains the value expression of the field\n    *        that was selected.\n    */\n   async selectField(columnId, $viewItem) {\n      const field = this._Object.fieldByID(columnId);\n\n      if (!field) {\n         this.AB.notify.builder(\n            new Error(`could not find field for id[${columnId}]`),\n            {\n               context: \"RowUpdater.selectField() could not find a field\",\n               fieldID: columnId,\n            }\n         );\n\n         return;\n      }\n\n      const fieldComponent = field.formComponent(),\n         formFieldWidget = fieldComponent.newInstance(\n            this._mockApp,\n            this._mockFormWidget\n         ),\n         formFieldComponent = formFieldWidget.component(\n            this.AB._App,\n            this.idBase\n         );\n      const childViews = $viewItem.getChildViews();\n\n      let inputView =\n         typeof formFieldComponent.ui == \"function\"\n            ? formFieldComponent.ui()\n            : formFieldComponent.ui;\n\n      // Add extended value options\n      $viewItem.removeView(childViews[5]);\n\n      if (this._extendedOptions?.length)\n         $viewItem.addView(\n            {\n               view: \"richselect\",\n               options: this._extendedOptions,\n               hidden: true,\n            },\n            5\n         );\n      else\n         $viewItem.addView(\n            {\n               hidden: true,\n            },\n            5\n         );\n\n      await this.busy();\n\n      // WORKAROUND: add '[Current User]' option to the user data field\n      switch (field.key) {\n         case \"connectObject\":\n         case \"user\":\n            inputView = inputView.rows[0].rows[0];\n            inputView.suggest.body.data =\n               (await field.getOptions()).map((e) => {\n                  return {\n                     id: field.getRelationValue(e),\n                     value: e.text,\n                  };\n               }) ?? [];\n\n            if (field.key === \"user\")\n               inputView.suggest.body.data.unshift({\n                  id: \"ab-current-user\",\n                  value: \"ab-current-user\",\n                  // This one is saved with the \"value\" not \"id\".\n                  // value: L(\"Current User\"),\n               });\n\n            break;\n\n         case \"date\":\n         case \"datetime\":\n            inputView = {\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     labelWidth: 0,\n                     labelRight: L(\"Current Date/Time\"),\n                     on: {\n                        onChange: function (newVal) {\n                           const layout = this.getParentView();\n\n                           if (!layout) return;\n\n                           const datePicker = layout.getChildViews()[1];\n\n                           if (!datePicker) return;\n\n                           newVal ? datePicker.hide() : datePicker.show();\n                        },\n                     },\n                  },\n                  inputView,\n               ],\n            };\n\n            break;\n      }\n\n      // Change component to display value\n      $viewItem.removeView(childViews[4]);\n      $viewItem.addView(inputView, 4);\n\n      formFieldComponent.init();\n\n      // Show custom display of data field\n      if (field.customDisplay)\n         field.customDisplay({}, this.AB._App, childViews[4].$view);\n\n      this.toggleCustomProcessOption(\n         $viewItem,\n         childViews[3].getValue() === \"process\"\n      );\n      $$($viewItem).adjust();\n      $viewItem.getFormView().adjust();\n\n      this.ready();\n   }\n\n   /**\n    * @method setValue\n    * Given the previous settings, redraw the form with the field/value\n    * entries.\n    * @param {array} settings\n    *        [\n    *           {\n    *              fieldId: {UUID}\n    *              value: {Object|String}\n    *           }, ...\n    *        ]\n    */\n   setValue(settings) {\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      // Redraw form with no elements\n      webix.ui([], $form);\n\n      settings = settings || [];\n      if (settings.length < 1) return;\n\n      settings.forEach(async (item) => {\n         const $viewContainer = $$(this.addItem());\n         const $viewItem = $viewContainer.getChildViews()[0];\n         const $valueTypeButton = $viewItem.queryView(\n            { view: \"segmented\" },\n            \"self\"\n         );\n\n         $valueTypeButton.setValue(item.isProcessValue ? \"process\" : \"custom\");\n\n         const $field = $viewItem.$$(this.ids.field);\n\n         $field.define(\"value\", item.fieldId);\n         $field.refresh();\n\n         await this.selectField(item.fieldId, $viewItem);\n\n         const fieldInfo = this._Object.fieldByID(item.fieldId);\n\n         if (!fieldInfo) return;\n\n         // Set process value\n         if (item.isProcessValue) {\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            $processValueElem.setValue?.(item.value);\n\n            return;\n         }\n\n         // Set custom value\n         let $customValueElem = $viewItem.getChildViews()[4];\n         $customValueElem = this._pullInputElement($customValueElem);\n         const rowData = {};\n\n         rowData[fieldInfo.columnName] = item.value?.value ?? item.value;\n         fieldInfo.setValue($customValueElem, rowData);\n\n         // Set \"Current Date/Time\" check box\n         if (\n            (fieldInfo.key == \"date\" || fieldInfo.key == \"datetime\") &&\n            rowData[fieldInfo.columnName] == \"ab-current-date\" &&\n            $customValueElem.config.view == \"checkbox\"\n         ) {\n            $customValueElem.setValue(true);\n         }\n      });\n\n      this.toggleForm();\n   }\n\n   /**\n    * @method toggleForm\n    * decide if the form with the field/value elements should be displayed.\n    */\n   toggleForm() {\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         const childViews = $form.getChildViews();\n\n         if (childViews && childViews.length) $form.show();\n         else $form.hide();\n         $form.adjust();\n      }\n   }\n\n   setExtendedOptions(options) {\n      this._extendedOptions = options;\n   }\n\n   toggleCustomProcessOption($viewItem, showProcessOption) {\n      const $customOption = $viewItem.getChildViews()[4];\n      const $processOption = $viewItem.getChildViews()[5];\n\n      if (showProcessOption) {\n         $customOption.hide();\n         $processOption.show();\n      } else {\n         $customOption.show();\n         $processOption.hide();\n      }\n   }\n\n   async busy() {\n      $$(this.ids.addNew).disable();\n\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      if (!$form.showProgress) await this.init(this.AB);\n\n      $form.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      $$(this.ids.addNew).enable();\n      $$(this.ids.form).hideProgress();\n   }\n\n   _pullInputElement($elem) {\n      if (!$elem?.getValue && $elem?.getChildViews) {\n         return (\n            $elem\n               .getChildViews()\n               .filter((childView) => childView.getValue)[0] ?? $elem\n         );\n      } else {\n         return $elem;\n      }\n   }\n}\n\nexport default RowUpdater;\n","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABFieldCore = require(\"../../core/dataFields/ABFieldCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABField extends ABFieldCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.AB.on(\"ab.abdefinition.update\", (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n         }\n      });\n\n      //  \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      //  \tthis.defaults = fieldDefaults;\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n      // \t\tcolumnName:'column_name',\t// a valid mysql table.column name\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      // \t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n      // \t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n      // \t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n      // \t\t\twidth: {int}\t\t\t// width of display column\n\n      // \t\t// specific for dataField\n      // \t\t},\n      // \t\ttranslations:[]\n      // \t}\n\n      // \tthis.fromValues(values);\n\n      // this.object = object;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static editorValues(settings) {\n      const obj = {\n         label: settings.label,\n         columnName: settings.columnName,\n         settings: settings,\n      };\n\n      delete settings.label;\n      delete settings.columnName;\n\n      return obj;\n   }\n\n   addValidation(ids, settings) {\n      const App = this.object.application.App;\n      const Filter = this.AB.filterComplexNew(\n         `${this.id}_field_validation_rules`\n      );\n      $$(ids.filterComplex).addView({\n         view: \"form\",\n         css: \"abValidationForm\",\n         cols: [\n            {\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"invalidMessage\",\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     value:\n                        settings && settings.invalidMessage\n                           ? settings.invalidMessage\n                           : \"\",\n                     label: L(\"Invalid Message\"),\n                  },\n                  Filter.ui,\n               ],\n            },\n            {\n               view: \"button\",\n               css: \"webix_danger\",\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  const $viewCond = this.getParentView();\n                  $$(ids.filterComplex).removeView($viewCond);\n               },\n            },\n         ],\n      });\n      $$(Filter.ids.save).hide();\n      // Filter.applicationLoad(this.object.application);\n      Filter.fieldsLoad(this.object.fields());\n      if (settings && settings.rules) Filter.setValue(settings.rules);\n   }\n\n   /*\n    * @method isValid\n    * check the current values to make sure they are valid.\n    * Here we check the default values provided by ABField.\n    *\n    * @return null or [{OP.Validation.validator()}] objects.\n    */\n   isValid() {\n      const validator = this.AB.Validation.validator();\n\n      // .columnName must be unique among fileds on the same object\n      const isNameUnique =\n         this.object.fields((f) => {\n            return (\n               f.id != this.id &&\n               f.columnName.toLowerCase() == this.columnName.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"columnName\",\n            L(\n               \"Field columnName must be unique ({0} already used in this Object)\",\n               [this.columnName]\n            )\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save() before:\n      if (!this.id) return;\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      if (!this.object.isAPI) {\n         await this.migrateDrop();\n      }\n\n      // the server still references an ABField in relationship to it's\n      // ABObject, so we need to destroy the Field 1st, then remove it\n      // from it's object.\n      await super.destroy();\n\n      await this.object.fieldRemove(this);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABField with it's parent ABObject\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      let isAdd = false;\n      // if this is our initial save()\n      if (!this.id) {\n         isAdd = true;\n      }\n\n      // Whenever we update our settings, make sure any\n      // existing rows that have NULL values for this field\n      // are updated to have our current .default value.\n      if (!isAdd && this.settings.required && this.settings.default) {\n         const model = this.object.model();\n\n         // pull rows that has null value\n         const result = await model.findAll({\n            where: {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.id,\n                     rule: \"is_null\",\n                  },\n               ],\n            },\n         });\n\n         const tasks = [];\n\n         // updating ...\n         result.data.forEach((d) => {\n            if (!d[this.columnName]) d[this.columnName] = this.settings.default;\n\n            tasks.push(model.update(d.id, d));\n         });\n\n         await Promise.all(tasks);\n      }\n\n      // New ABDefinition method of saving:\n      // when this is done, we now have an .id\n      await super.save();\n\n      // incase this was an ADD operation, make sure the\n      // parent Obj now includes this object:\n      // NOTE: must be done after the .save() so we have an .id\n      await this.object.fieldAdd(this);\n\n      // perform any server side migrations for this Field:\n\n      // but not connectObject fields:\n      // ABFieldConnect.migrateXXX() gets called from the UI popupNewDataField\n      // in order to handle the timings of the 2 fields that need to be created\n      if (!this.isConnection && !skipMigrate && !this.object.isAPI) {\n         const fnMigrate = isAdd ? this.migrateCreate() : this.migrateUpdate();\n         await fnMigrate;\n      }\n\n      return this;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateUpdate() {\n      return this.AB.Network.put({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @function columnHeader\n    * Return the column header for a webix grid component for this specific\n    * data field.\n    * @param {Object} options\n    * {\n    *    isObjectWorkspace: {bool},  is this being used in the Object workspace.\n    *    width: {int},\n    *    height: {int},\n    *    editable: {bool}\n    * }\n    * @return {obj}  configuration obj\n    */\n   columnHeader(options) {\n      options = options || {};\n\n      const config = {\n         id: this.columnName, // this.id,\n         header: this.label,\n      };\n\n      if (options.isObjectWorkspace && this.settings.showIcon) {\n         config.header = `<span class=\"webix_icon fa fa-${this.fieldIcon()}\"></span>${\n            config.header\n         }`;\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.  If this isn't\n    * a standard value display (think image, Map, graph, etc...) then use this\n    * method to create the display in the table/grid cell.\n    * @param {object} row\n    *        is the {name=>value} hash of the current row of data.\n    * @param {App} App\n    *        the shared ui App object useful more making globally\n    *\t\t\t unique id references.\n    * @param {HtmlDOM} node\n    *        the HTML Dom object for this field's display.\n    * @param {object} options\n    *        option of additional settings\n    */\n   customDisplay(row, App, node, options) {}\n\n   /*\n    * @function customEdit\n    *\n    *\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      return true;\n   }\n\n   /**\n    * @method getValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   getValue(item, rowData) {\n      return item.getValue();\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    */\n   setValue(item, rowData, defaultValue) {\n      if (!item) return;\n\n      let val;\n\n      if (\n         (rowData == null || rowData[this.columnName] == null) &&\n         defaultValue != null\n      ) {\n         val = defaultValue;\n      } else if (rowData && rowData[this.columnName] != null) {\n         val = rowData[this.columnName];\n      } else {\n         val = rowData;\n      }\n\n      try {\n         item.setValue(val);\n      } catch (err) {\n         // this error is fine because we handled it already\n      }\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent(formKey) {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n\n      let FC = {\n         // .common() is used to create the display in the list\n         common: () => {\n            return {\n               key: formKey,\n\n               // // but since this is a common place holder: use the\n               // // multilingual label here:\n               // labelKey: 'ab.abfield.labelPlaceholder',\n               // icon:  'square'\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // NOTE: in case you were wondering, the base ABField\n            // \t\t will just return a label with 'ABFieldPlaceholder'\n            // \t\t as the text.  Any sub class of ABField should overwrite\n            // \t\t this and return an actual Form Component.\n\n            // store object id and field id to field component\n            const values = FC.common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n            // ABFieldPlaceholder.formatTitle();\n            // ABFieldPlaceholder.text = \"ABFieldPlaceholder\";\n\n            return ABFieldPlaceholder;\n         },\n      };\n      return FC;\n   }\n\n   /**\n    * @method detailComponent\n    */\n   detailComponent() {\n      return {\n         common: () => {\n            return {\n               icon: \"square\",\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // store object id and field id to field component\n            const values = this.detailComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method getSettings()\n    * return a copy of this.settings.\n    * @return {object}\n    */\n   getSettings() {\n      return Object.assign({}, this.settings);\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `${this.fieldKey()}[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   async getDbInfo() {\n      return this.AB.Network.get({\n         url: `/definition/info/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   /**\n    * @method formCleanData()\n    * Review the data a form is about to submit and change/remove it as\n    * appropriate.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanData(rowData) {\n      // default is to just leave data as is.\n   }\n};\n","const ABFieldAutoIndexCore = require(\"../../core/dataFields/ABFieldAutoIndexCore\");\n\nmodule.exports = class ABFieldAutoIndex extends ABFieldAutoIndexCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldAutoIndex\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldBooleanCore = require(\"../../core/dataFields/ABFieldBooleanCore\");\n\nmodule.exports = class ABFieldBoolean extends ABFieldBooleanCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = \"template\";\n      config.css = \"center\";\n      config.template = (row, common, value, config) => {\n         // Group header\n         if (row.$group) return row[this.columnName];\n\n         // editable\n         if (options.editable) {\n            return (\n               '<div class=\"ab-boolean-display\">' +\n               common.checkbox(row, common, value, config) +\n               \"</div>\"\n            );\n         }\n\n         // readonly\n         else {\n            if (value)\n               return \"<div class='webix_icon fa fa-check-square-o'></div>\";\n            else return \"<div class='webix_icon fa fa-square-o'></div>\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"checkbox\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-checkbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcheckbox\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCalculateCore = require(\"../../core/dataFields/ABFieldCalculateCore\");\n\nmodule.exports = class ABFieldCalculate extends ABFieldCalculateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCalculate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCombineCore = require(\"../../core/dataFields/ABFieldCombineCore\");\n\nmodule.exports = class ABFieldCombine extends ABFieldCombineCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCombine\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this.settings.combinedFields.split(\",\") || []).forEach((id) => {\n         var field = this.object.fieldByID(id);\n         if (!field) {\n            this.warningsMessage(`dependent field[${id}] not found.`, {\n               fieldID: id,\n               combinedFields: this.settings.combinedFields,\n            });\n         }\n      });\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldConnect extends ABFieldConnectCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save()d before:\n      if (!this.id) return Promise.resolve();\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      // this.migrateDrop()\n      //    // .then(() => {\n      //    //    // NOTE : prevent recursive remove connected fields\n      //    //    // - remove this field from JSON\n      //    //    this.object._fields = this.object.fields((f) => {\n      //    //       return f.id != this.id;\n      //    //    });\n      //    // })\n      //    .then(() => {\n      //       // Save JSON of the object\n      //       return this.object.fieldRemove(this);\n      //    })\n      await super.destroy();\n\n      // Now we need to remove our linked Object->field\n\n      const linkObject = this.datasourceLink;\n      if (!linkObject) return Promise.resolve(); // already notified\n\n      const linkField = this.fieldLink;\n      if (!linkField) return Promise.resolve(); // already notified\n\n      // destroy linked field\n      return linkField.destroy();\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method pullRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData = [];\n\n      const data = super.pullRelationValues(row);\n      const linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         } else if (typeof data == \"string\") {\n            selectedData = { text: data };\n         }\n      }\n\n      return selectedData;\n   }\n\n   columnHeader(options) {\n      options = options || {};\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      if (options.filters == null) {\n         options.filters = {};\n      }\n\n      var multiselect = this.settings.linkType == \"many\";\n\n      config.editor = multiselect ? \"multiselect\" : \"combo\";\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n      config.template = (row) => {\n         var selectedData = field.pullRelationValues(row);\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               values.push(\n                  `<div class='webix_multicombo_value'><span>${val.value}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n               );\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData.value) {\n            let clear = \"\";\n            if (options.editable) {\n               clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n            }\n            values.push(\n               `<div class='webix_multicombo_value'>${clear}<span class=\"ellip\">${selectedData.value}</span></div>`\n            );\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n\n      config.suggest = {\n         on: {\n            onBeforeShow: function () {\n               field.openOptions(this);\n            },\n         },\n\n         // Support partial matches\n         filter: ({ value }, search) =>\n            (value ?? \"\").toLowerCase().includes((search ?? \"\").toLowerCase()),\n      };\n\n      if (multiselect) {\n         config.suggest.view = \"checksuggest\";\n         config.suggest.button = true;\n      }\n\n      return config;\n   }\n\n   openOptions($suggest) {\n      // PREVENT repeatedly pull data:\n      // If not a x->1 relation and the options list was populated, then skip\n      const $list = $suggest.getList();\n      if (this.settings.linkViaType != \"one\") {\n         if (($list?.find({}) ?? []).length) return;\n      }\n\n      // Listen create/update events of the linked object, then clear data list to re-populate\n      [\"create\", \"update\"].forEach((key) => {\n         if (this[`_dc_${key}_event`]) return;\n\n         this[`_dc_${key}_event`] = this.AB.on(\n            `ab.datacollection.${key}`,\n            (res) => {\n               if (this.datasourceLink.id == res.objectId) $list.clearAll();\n            }\n         );\n      });\n\n      this.getAndPopulateOptions($suggest, null, this);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n\n   //// NOTE: why do we pass in row, App, and node?  is this something we do in our external components?\n   ////       are these values present when this Object is instanciated? Can't we just pass these into the\n   ////       object constructor and have it internally track these things?\n   customEdit(row, /*App,*/ node) {\n      // var selectedData = this.pullRelationValues(row);\n      // this._selectedData = selectedData;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"connect\");\n   }\n\n   formComponentMobile() {\n      if (this.settings.linkType == \"many\") {\n         return super.formComponent(\"mobile-selectmultiple\");\n      }\n      return super.formComponent(\"mobile-selectsingle\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailconnect\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method getOptions\n    * show options list in selectivity\n    *\n    * @return {Promise}\n    */\n   async getOptions(whereClause, term, sort, editor, populate = false) {\n      const theEditor = editor;\n\n      if (theEditor) {\n         // PREVENT: repeatly refresh data too often\n         if (theEditor._getOptionsThrottle) {\n            clearTimeout(theEditor._getOptionsThrottle);\n            // NOTE: remove variables that reference the Promise and Resolve to let GC cleans up.\n            // https://dev.to/xnimorz/js-promises-3-garbage-collection-and-memory-leaks-2oi7?fbclid=IwAR1wqgNz2KqchaM7eRkclR6YWHT01eva4y5IWpnaY0in6BrxmTAtpNCnEXM\n            delete theEditor._timeToPullData;\n            delete theEditor._getOptionsResolve;\n         }\n         theEditor._timeToPullData = await new Promise((resolve) => {\n            theEditor._getOptionsResolve = resolve;\n            theEditor._getOptionsThrottle = setTimeout(() => {\n               resolve(true);\n            }, 100);\n         });\n         if (!theEditor._timeToPullData) return;\n      }\n\n      return new Promise((resolve, reject) => {\n         let haveResolved = false;\n         // {bool}\n         // have we already passed back a result?\n\n         const respond = (options) => {\n            // filter the raw lookup with the provided search term\n            options = options.filter((item) => {\n               if (item.text.toLowerCase().includes(term.toLowerCase())) {\n                  return true;\n               }\n            });\n\n            if (!haveResolved) {\n               haveResolved = true;\n               resolve(options);\n            } else {\n               // if we have already resolved() then .emit() that we have\n               // updated \"option.data\".\n               this.emit(\"option.data\", options);\n            }\n         };\n\n         // Prepare Where clause\n\n         const where = this.AB.cloneDeep(whereClause || {});\n         sort = sort || [];\n\n         if (!where.glue) where.glue = \"and\";\n\n         if (!where.rules) where.rules = [];\n\n         term = term || \"\";\n\n         // check if linked object value is not define, should return a empty array\n         if (!this.settings.linkObject) return [];\n\n         // if options was cached\n         // if (this._options != null) return resolve(this._options);\n\n         const linkedObj = this.datasourceLink;\n\n         // System could not found the linked object - It may be deleted ?\n         if (linkedObj == null) throw new Error(\"No linked object\");\n\n         const linkedCol = this.fieldLink;\n\n         // System could not found the linked field - It may be deleted ?\n         if (linkedCol == null) throw new Error(\"No linked column\");\n\n         // Get linked object model\n         const linkedModel = linkedObj.model();\n\n         // M:1 - get data that's only empty relation value\n         if (\n            this.settings.linkType == \"many\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            where.rules.push({\n               key: linkedCol.id,\n               rule: \"is_null\",\n            });\n            // where[linkedCol.columnName] = null;\n         }\n         // 1:1\n         else if (\n            this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            // 1:1 - get data is not match link id that we have\n            if (this.settings.isSource == true) {\n               // NOTE: make sure \"haveNoRelation\" shows up as an operator\n               // the value \":0\" doesn't matter, we just need 'haveNoRelation' as an operator.\n               // newRule[linkedCol.id] = { 'haveNoRelation': 0 };\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"have_no_relation\",\n               });\n            }\n            // 1:1 - get data that's only empty relation value by query null value from link table\n            else {\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"is_null\",\n               });\n               // newRule[linkedCol.id] = 'null';\n               // where[linkedCol.id] = null;\n            }\n         }\n\n         const storageID = this.getStorageID(where);\n\n         Promise.resolve()\n            .then(async () => {\n               // Mar 23, 2023 disabling local storage of options because users\n               // were reporting not seeing the correct options list with either\n               // new, updated or deleted records that should or should not appear\n               return false;\n               // Get Local Storage unless xxx->one connected field\n               // if (this?.settings?.linkViaType != \"one\") {\n               //    // We store the .findAll() results locally and return that for a\n               //    // quick response:\n               //    return await this.AB.Storage.get(storageID);\n               // }\n            })\n            .then(async (storedOptions) => {\n               if (storedOptions) {\n                  // immediately respond with our stored options.\n                  this._options = storedOptions;\n                  return respond(this._options);\n               }\n               // Pull linked object data\n               let options = function () {\n                  return linkedModel.findAll({\n                     where: where,\n                     sort: sort,\n                     populate,\n                  });\n               };\n\n               // placeholder for selected options\n               let selected = function () {\n                  return new Promise((resolve, reject) => {\n                     // empty data array to pass to all()\n                     resolve({ data: [] });\n                  });\n               };\n\n               // we also need to get selected values of xxx->one connections\n               // if we are looking at a field in a form we look at linkViaOneValues\n               // if we are looking at a grid we are editing we look at theEditor?.config?.value\n               if (\n                  this?.settings?.linkViaType == \"one\" &&\n                  (this?.linkViaOneValues || theEditor?.config?.value)\n               ) {\n                  let values = \"\";\n                  // determine if we are looking in a grid or at a form field\n                  if (\n                     (theEditor?.config?.view == \"multicombo\" ||\n                        theEditor?.config?.view == \"combo\") &&\n                     this?.linkViaOneValues\n                  ) {\n                     values = this?.linkViaOneValues;\n                  } else if (theEditor?.config?.value) {\n                     if (Array.isArray(theEditor.config.value)) {\n                        values = theEditor?.config?.value.join();\n                     } else {\n                        values = theEditor?.config?.value;\n                     }\n                  }\n                  let whereRels = {};\n                  let sortRels = [];\n\n                  whereRels.glue = \"or\";\n                  whereRels.rules = [];\n\n                  // make sure values are unique:\n                  let valHash = {};\n                  values.split(\",\").forEach((v) => {\n                     valHash[v] = v;\n                  });\n                  Object.keys(valHash).forEach((v) => {\n                     whereRels.rules.push({\n                        key: linkedObj.PK(),\n                        rule: \"equals\",\n                        value: v,\n                     });\n                  });\n                  selected = function () {\n                     return linkedModel.findAll({\n                        where: whereRels,\n                        sort: sortRels,\n                        populate: false,\n                     });\n                  };\n               }\n               try {\n                  const results = await Promise.all([options(), selected()]);\n\n                  // combine options and selected items and\n                  // put the selected options at the top of the list\n                  const result = results[1].data.concat(results[0].data);\n\n                  // store results in _options\n                  this._options = result.data || result || [];\n\n                  // populate display text\n                  (this._options || []).forEach((opt) => {\n                     opt.text = linkedObj.displayData(opt);\n                     opt.value = opt.text;\n                  });\n\n                  // 8/10/2023 - We are not actually using this (see line 338) - If we need to store\n                  // user data in local storage we should encrypt it.\n                  // cache options if not a xxx->one connection\n                  // if (this?.settings?.linkViaType != \"one\") {\n                  //    this.AB.Storage.set(storageID, this._options);\n                  // }\n                  return respond(this._options);\n               } catch (err) {\n                  this.AB.notify.developer(err, {\n                     context:\n                        \"ABFieldConnect:getOptions(): unable to retrieve options from server\",\n                     field: this.toObj(),\n                     where,\n                  });\n\n                  haveResolved = true;\n                  throw err;\n               }\n            });\n      });\n   }\n\n   getStorageID(where) {\n      return `${this.id}-${JSON.stringify(where)}`;\n   }\n\n   async clearStorage(where) {\n      const storageID = this.getStorageID(where);\n      await this.AB.Storage.set(storageID, null);\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               if (itemObj && itemObj.id) {\n                  vals.push(itemObj.id);\n               } else {\n                  vals.push(val);\n               }\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            } else {\n               vals.push(value);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         if (!value) {\n            return [];\n         } else {\n            let returnVals = [];\n            let vals = value.split(\",\");\n            vals.forEach((val) => {\n               returnVals.push(this.getItemFromVal(val));\n            });\n            return returnVals;\n         }\n      } else {\n         let item = this.getItemFromVal(value);\n         return item;\n      }\n   }\n\n   getAndPopulateOptions(editor, options, field, form) {\n      if (!editor) return Promise.resolve([]);\n\n      const theEditor = editor;\n      // if editor has options and is xxx->one store the options on the field\n      if (\n         this?.settings?.linkViaType == \"one\" &&\n         theEditor.getValue() &&\n         !field.linkViaOneValues\n      ) {\n         field.linkViaOneValues = theEditor.getValue();\n      }\n\n      // if we are filtering based off another selectivity's value we\n      // need to do it on fetch each time because the value can change\n      // copy the filters so we don't add to them every time there is a change\n      const combineFilters = options?.filters\n         ? Object.assign({}, options.filters)\n         : { glue: \"and\", rules: [] };\n\n      if (options?.filterByConnectValues) {\n         const parseFilterByConnectValues = (conditions, values, depth = 0) => {\n            const valuesByDepth = values.filter((e) => e?.depth === depth);\n\n            return [\n               ...conditions.rules.map((e) => {\n                  if (e.glue)\n                     return {\n                        glue: e.glue,\n                        rules: parseFilterByConnectValues(e, values, depth + 1),\n                     };\n\n                  const value = valuesByDepth.filter(\n                     (ef) => ef.key === e.key && ef.value === e.value\n                  )[0];\n\n                  if (!value) return e;\n\n                  const $parentField = value?.filterValue?.config.id\n                     ? $$(value.filterValue.config.id)\n                     : null;\n\n                  if (!$parentField)\n                     throw Error(\n                        \"Some parent field's view components don't exist\"\n                     );\n\n                  const parentValue = value?.filterValue\n                     ? $parentField.getValue() ?? \"\"\n                     : \"\";\n\n                  let newVal = \"\";\n\n                  if (parentValue) {\n                     if (value.filterColumn) {\n                        const filterField = field.object.fieldByID(\n                           value.filterValue.config.dataFieldId\n                        );\n                        let valItem;\n\n                        // When options does not load yet, then pull select value from DC\n                        if (!filterField._options?.length) {\n                           const linkedField =\n                              (form.datacollection.datasource?.fields(\n                                 (f) =>\n                                    f.id == value.value ||\n                                    f.columnName == value.value\n                              ) ?? [])[0];\n\n                           if (linkedField) {\n                              // Get values from DC\n                              const formVals = form.datacollection?.getCursor();\n\n                              valItem =\n                                 formVals[linkedField.relationName()] ??\n                                 formVals[value.value];\n                           }\n                        } else {\n                           valItem = filterField.getItemFromVal(parentValue);\n                        }\n\n                        if (valItem) {\n                           newVal = valItem[value.filterColumn];\n                        } else {\n                           newVal = parentValue;\n                        }\n                     } else {\n                        newVal = parentValue;\n                     }\n                  }\n\n                  return {\n                     key: e.key,\n                     rule: \"equals\",\n                     value: newVal,\n                  };\n               }),\n            ];\n         };\n\n         combineFilters.rules = parseFilterByConnectValues(\n            combineFilters,\n            options.filterByConnectValues\n         );\n      }\n\n      if (!this.handlerOptionData) {\n         this.handlerOptionData = (data) => {\n            if (theEditor.$destructed) {\n               this.removeListener(\"option.data\", this.handlerOptionData);\n               return;\n            }\n            this.populateOptions(theEditor, data, field, form, true);\n         };\n      }\n\n      // try to make sure we don't continually add up listeners.\n      this.removeListener(\"option.data\", this.handlerOptionData).once(\n         \"option.data\",\n         this.handlerOptionData\n      );\n\n      return new Promise((resolve, reject) => {\n         this.getOptions(\n            combineFilters,\n            \"\",\n            options?.sort ?? \"\",\n            theEditor\n         ).then(async (data) => {\n            await this.populateOptions(theEditor, data, field, form, true);\n            resolve(data);\n         });\n      });\n   }\n\n   async populateOptions(theEditor, data, field, form, addCy) {\n      if (theEditor == null || theEditor.$destructed) return;\n\n      await this._sortByRecent(data);\n\n      theEditor.blockEvent();\n      theEditor.getList().clearAll();\n      theEditor.getList().define(\"data\", data);\n      if (addCy) {\n         this.populateOptionsDataCy(theEditor, field, form);\n      }\n      if (theEditor.getValue?.() && data?.length) {\n         let currVal = theEditor.getValue();\n         // in a multiselect environment, the current val can be an encoded string:\n         // \"id1,id2\".  Break this into an array:\n         if (field.linkType() == \"many\" && typeof currVal == \"string\") {\n            currVal = currVal.split(\",\");\n         }\n         if (!Array.isArray(currVal)) {\n            currVal = [currVal];\n         }\n\n         let selectedVals = [];\n         currVal.forEach((cVal) => {\n            // Check exists item\n            const isExists = data.some((d) => d.id == cVal);\n\n            if (isExists) {\n               selectedVals.push(cVal);\n            }\n\n            // if we couldn't find it by it's .id, then check to see\n            // if there is a custom index (.indexField  .indexField2)\n            // that does match.\n            // Select option item from custom index value\n            if (\n               !isExists &&\n               field.isConnection &&\n               (field.indexField || field.indexField2)\n            ) {\n               const selectedItem = data.filter(\n                  (d) =>\n                     d[field.indexField?.columnName ?? \"\"] == cVal ||\n                     d[field.indexField2?.columnName ?? \"\"] == cVal\n               )[0];\n\n               if (selectedItem) selectedVals.push(selectedItem.id);\n            }\n         });\n\n         theEditor.setValue(selectedVals);\n      }\n      theEditor.unblockEvent();\n   }\n\n   populateOptionsDataCy(theEditor, field, form) {\n      if (theEditor?.$destructed) return;\n\n      // Add data-cy attributes\n      if (theEditor?.getList) {\n         if (!theEditor.getPopup) return;\n         var popup = theEditor.getPopup();\n         if (!popup) return;\n         theEditor.getList().data.each((option) => {\n            if (!option) return;\n            var node = popup.$view.querySelector(\n               \"[webix_l_id='\" + option.id + \"']\"\n            );\n            if (!node) return;\n            node.setAttribute(\n               \"data-cy\",\n               `${field.key} options ${option.id} ${field.id} ${form?.id}`\n            );\n         });\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this._options || [];\n      if (options.length > 0) {\n         for (let i = 0; i < options.length; i++) {\n            if (\n               this.indexField &&\n               options[i][this.indexField.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else if (\n               this.indexField2 &&\n               options[i][this.indexField2.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else {\n               if (\n                  options[i].id == val ||\n                  options[i].value == val ||\n                  options[i][this.indexField?.columnName ?? \"\"] == val ||\n                  options[i][this.indexField2?.columnName ?? \"\"] == val\n               ) {\n                  item = options[i];\n                  break;\n               }\n            }\n         }\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item) {\n      let val = item.getValue();\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         let vals = [];\n         if (!Array.isArray(val)) {\n            if (val) {\n               val = val.split(\",\");\n               val.forEach((record) => {\n                  // make sure we are returning the .uuid values and\n                  // not full {Record} values.\n                  vals.push(\n                     this.getRelationValue(item.getList().getItem(record), {\n                        forUpdate: true,\n                     })\n                  );\n               });\n            }\n         } else {\n            vals = val;\n         }\n\n         return vals;\n      } else {\n         if (val) {\n            // return just the .uuid and not the full {Record}\n            return this.getRelationValue(item.getList().getItem(val));\n         } else {\n            return \"\";\n         }\n      }\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n      // if (AB.isEmpty(rowData)) return; removed because sometimes we will\n      // want to set this to empty\n      let val = this.pullRelationValues(rowData);\n      // put in current values as options so we can display them before\n      // the rest of the options are fetched when field is clicked\n      if (item.getList && item.getList().count() == 0) {\n         if (this.settings.linkType !== \"one\" && !Array.isArray(val)) {\n            val = [val];\n         }\n\n         const $list = item.getList();\n\n         $list.define(\"data\", val);\n         $list.refresh();\n      }\n\n      // try to prevent form flicker:\n      // Only reset the value if the value changes:\n      let currVal = item.getValue();\n      let newVal = Array.isArray(val)\n         ? val\n              .map(\n                 (e) =>\n                    this.getRelationValue(e, { forUpdate: true }) ??\n                    e.id ??\n                    e.uuid ??\n                    e\n              )\n              .join(\",\")\n         : this.getRelationValue(val, { forUpdate: true }) ??\n           val.id ??\n           val.uuid ??\n           val;\n      if (currVal != newVal) {\n         item.setValue(newVal);\n      }\n   }\n\n   /**\n    * @method pullRecordRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRecordRelationValues(record) {\n      var selectedData = [];\n\n      var data = record;\n      var linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         }\n      }\n\n      return selectedData;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      var linkField = this.fieldLink;\n      if (!linkField) {\n         this.warningsMessage(\n            `is unable to find linked field[${this.settings.linkColumn}]`,\n            {\n               linkColumn: this.settings.linkColumn,\n            }\n         );\n      }\n\n      let linkObj = this.datasourceLink;\n      if (!linkObj) {\n         this.warningsMessage(\n            `is unable to find linked object[${this.settings.linkObject}]`,\n            {\n               linkObject: this.settings.linkObject,\n            }\n         );\n      }\n   }\n\n   get _recentStorageId() {\n      return `${this.id}_recent_selected`;\n   }\n\n   /**\n    * @method saveSelect\n    * This function stores the user's selected option in local storage.\n    * It ensures that the user's recent selection is saved, allowing the system\n    * to retrieve it and provide a more personalized experience during future visits.\n    * @param {Array} selectedItems\n    * @return {Promise}\n    */\n   async saveSelect(selectedItems) {\n      if (!selectedItems) return;\n\n      if (!Array.isArray(selectedItems)) selectedItems = [selectedItems];\n\n      let recentSelected =\n         (await this.AB.Storage.get(this._recentStorageId)) ?? [];\n\n      selectedItems.forEach((item) => {\n         if (item == null) return;\n\n         const itemId = item.uuid ?? item.id ?? item;\n         recentSelected = recentSelected.filter((id) => id != itemId);\n         recentSelected.unshift(itemId);\n      });\n\n      return this.AB.Storage.set(this._recentStorageId, recentSelected);\n   }\n\n   /**\n    * @method _sortByRecent\n    * This function sorts the options based on the user's most recently selected item, which is retrieved from local storage.\n    *\n    * @param {Array} options\n    */\n   async _sortByRecent(options) {\n      if (!options?.length) return options;\n\n      const recentSelected = await this.AB.Storage.get(this._recentStorageId);\n      if (!recentSelected?.length) return options;\n\n      if (!Array.isArray(options)) options = [options];\n\n      options.sort((a, b) => {\n         const aId = a.uuid ?? a.id ?? a;\n         const bId = b.uuid ?? b.id ?? b;\n\n         return recentSelected.indexOf(bId) - recentSelected.indexOf(aId);\n      });\n   }\n};\n","const ABFieldDateCore = require(\"../../core/dataFields/ABFieldDateCore\");\n\nmodule.exports = class ABFieldDate extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // if (this.settings.includeTime)\n      // config.editor = \"datetime\";\n      // else\n      config.editor = this.AB.Account?.language() == \"th\" ? \"thaidate\" : \"date\";\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"mobile-date\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-date\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   dateToString(dateFormat, dateData) {\n      return webix.Date.dateToStr(dateFormat)(dateData);\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n\n      // Return longdate if option 4 or 5\n      if (dateFormat >= 4) {\n         return webix.i18n.longDateFormatStr(dateObj);\n      } else {\n         return webix.i18n.dateFormatStr(dateObj);\n      }\n   }\n};\n","const ABFieldDateTimeCore = require(\"../../core/dataFields/ABFieldDateTimeCore\");\n\nmodule.exports = class ABFieldDateTime extends ABFieldDateTimeCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // Ignore date\n      if (this.settings.dateFormat == 1) {\n         config.editor = \"time\";\n      } else {\n         config.editor =\n            this.AB.Account?._config?.languageCode == \"th\"\n               ? \"thaidatetime\"\n               : \"datetime\";\n      }\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"mobile-datetime\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-datetime\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n      const timeToStr = webix.Date.dateToStr(this.getTimeFormat());\n\n      if (dateFormat >= 4) {\n         return `${webix.i18n.longDateFormatStr(dateObj)} ${timeToStr(\n            dateObj\n         )}`;\n      } else {\n         return `${webix.i18n.dateFormatStr(dateObj)} ${timeToStr(dateObj)}`;\n      }\n   }\n};\n","const ABFieldEmailCore = require(\"../../core/dataFields/ABFieldEmailCore\");\n\nmodule.exports = class ABFieldEmail extends ABFieldEmailCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-email\",\n            settings: {},\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldFileCore = require(\"../../core/dataFields/ABFieldFileCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldFile extends ABFieldFileCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related file.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (!this.id) {\n            resolve();\n            return;\n         }\n\n         // Ask the user what to do about the existing file:\n         webix.confirm({\n            title: L(\"Keep Files?\"),\n            message: L(\"Do you want to keep the files referenced by {0}?\", [\n               this.label,\n            ]),\n            callback: async (result) => {\n               // update this setting so the server can respond correctly in\n               // ABFieldFile.migrateDrop()\n               this.settings.removeExistingData = result ? 0 : 1;\n\n               try {\n                  await this.save();\n\n                  // TODO: a reminder that you still got alot on the server to do!\n                  webix.alert({\n                     title: \"!! TODO !!\",\n                     text: \"Tell a Developer to actually pay attention to this!\",\n                  });\n\n                  // now the default .destroy()\n                  await super.destroy();\n\n                  resolve();\n               } catch (err) {\n                  reject(err);\n               }\n            },\n         });\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFile\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = false;\n\n      const editable = options.editable;\n\n      // populate our default template:\n      config.template = (obj) => {\n         if (obj.$group) return this.dataValue(obj);\n\n         const fileDiv = [\n            '<div class=\"ab-file-data-field\" style=\"float: left;\">',\n            '<div class=\"webix_view ab-file-holder\">',\n            '<div class=\"webix_template\">',\n            this.fileTemplate(obj, editable),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return fileDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      options = options || {};\n\n      let typesList = [];\n      let maximumSize = 0;\n\n      if (this.settings.limitFileType && this.settings.fileType) {\n         typesList = this.settings.fileType.split(\",\");\n      }\n\n      if (this.settings.limitFileSize && this.settings.fileSize) {\n         maximumSize = this.settings.fileSize;\n      }\n\n      // \t\t// safety check:\n      // \t\t// webix seems to crash if you specify a .container that doesn't exists:\n      // \t\t// Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-file-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         // \t\t\t// use a webix component for displaying the content.\n         // \t\t\t// do this so I can use the progress spinner\n\n         const webixContainer = webix.ui({\n            view: \"template\",\n            container: parentContainer,\n\n            template: this.fileTemplate(row, options.editable),\n\n            borderless: true,\n            width: 160,\n            height: 60,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         // \t\t\t////\n         // \t\t\t//// Prepare the Uploader\n         // \t\t\t////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload(true);\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = typesList;\n                  if (acceptableTypes && acceptableTypes != \"\") {\n                     const type = item.type.toLowerCase();\n                     if (acceptableTypes.indexOf(type) == -1) {\n                        webix.message(\n                           L(\"Only [{0}] files are supported\", [\n                              acceptableTypes.join(\", \"),\n                           ])\n                        );\n                        return false;\n                     }\n                  }\n\n                  //verify file size\n                  //Convert to MegaBytes\n                  if (maximumSize > 0) {\n                     const acceptableSizes = maximumSize * 1000000;\n                     if (item.size > acceptableSizes) {\n                        webix.message(\n                           L(\"Maximum file size is {0}MB\", [maximumSize])\n                        );\n                        return false;\n                     }\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  // this.showFile(idBase, response.data.uuid);\n\n                  const values = {};\n                  values[this.columnName] = {};\n                  values[this.columnName].uuid = response.data.uuid;\n                  values[this.columnName].filename = item.name;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldFile.onFileUpload(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error loading file\"), {\n                     message:\n                        \"ABFieldFile:onFileUploadError(): Error loading file\",\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // open file upload dialog when's click\n         node.addEventListener(\"click\", (e) => {\n            if (e.target.className.indexOf(\"delete-image\") > -1) {\n               this.deleteFile = true;\n            }\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      if (this.deleteFile == true) {\n         // remove the property because it is only needed to prevent the file dialog from showing\n         delete this.deleteFile;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: \"\",\n            text: L(\"Are you sure you want to remove this file?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n\n                  values[this.columnName] = {};\n\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"ABFieldFile:customEdit(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n                  // update value in the form component\n                  else {\n                     this.setValue($$(node), values);\n                  }\n               }\n            },\n         });\n      } else {\n         const rowData = this.dataValue(row);\n         if (!rowData || !rowData.uuid) {\n            const uploaderId = node.dataset[\"uploaderId\"],\n               uploader = $$(uploaderId);\n\n            if (uploader && uploader.fileDialog)\n               uploader.fileDialog({ rowid: row.id });\n         }\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-file\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcustom\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   //File Template\n\n   fileTemplate(obj, editable) {\n      let iconDisplay = \"\";\n      let fileDisplay = \"display:none;\";\n      let fileURL = \"\";\n\n      let value = \"\";\n      let name = \"\";\n\n      const rowData = this.dataValue(obj);\n      if (rowData) {\n         value = rowData.uuid;\n         name = rowData.filename;\n      }\n\n      if (value && name) {\n         iconDisplay = \"display:none;\";\n         fileDisplay = \"\";\n         fileURL = \"/file/\" + value;\n      }\n\n      const html = [\n         `<div class=\"file-data-field-icon\" style=\"text-align: center; height: inherit; display: table-cell; vertical-align: middle; border: 2px dotted #CCC; background: #FFF; border-radius: 10px; font-size: 11px; line-height: 13px; padding: 0 10px; ${iconDisplay}\"><i class=\"fa fa-file fa-2x\" style=\"opacity: 0.6; font-size: 32px; margin-top: 3px; margin-bottom: 5px;\"></i>${\n            editable ? `<br/>${L(\"Drag and drop or click here\")}` : \"\"\n         }</div>`,\n         `<div class=\"file-data-field-name\" style=\" width:100%; height:100%; position:relative; \"><a target=\"_blank\" href=\"${fileURL}\">${\n            name || \"\"\n         }</a>${\n            editable\n               ? `<a style=\"${fileDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n               : \"\"\n         }</div>`,\n      ].join(\"\");\n\n      return html;\n   }\n\n   getValue(item, rowData) {\n      const file = item.$view.querySelector(\".file-data-field-name\");\n      const fileLink = file.querySelector(\"a\");\n\n      return {\n         uuid: file.getAttribute(\"file-uuid\"),\n         filename: fileLink.innerHTML,\n      };\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const fileicon = domNode.querySelector(\".file-data-field-icon\");\n      if (fileicon) fileicon.style.display = val && val.uuid ? \"none\" : \"block\";\n\n      const file = domNode.querySelector(\".file-data-field-name\");\n      if (file) {\n         const fileDeleteIcon = file.querySelector(\".ab-delete-photo\");\n         if (fileDeleteIcon)\n            fileDeleteIcon.style.display = val && val.uuid ? \"block\" : \"none\";\n\n         file.style.display = val && val.uuid ? \"block\" : \"none\";\n         if (val && val.uuid) file.setAttribute(\"file-uuid\", val.uuid);\n         else file.removeAttribute(\"file-uuid\");\n\n         const fileLink = file.querySelector(\"a\");\n         const fileURL = \"/file/\" + (val ? val.uuid : \"\");\n         fileLink.href = fileURL;\n         fileLink.innerHTML = val ? val.filename : \"\";\n      }\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method urlFile\n    * return the url to use to reference the file by it's id.\n    * @param {string} id uuid reference of this file.\n    * @return {string}\n    */\n   urlFile(id) {\n      return `/file/${id}`;\n   }\n};\n","const ABFieldFormulaCore = require(\"../../core/dataFields/ABFieldFormulaCore\");\n\nmodule.exports = class ABFieldFormula extends ABFieldFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldImageCore = require(\"../../core/dataFields/ABFieldImageCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldImage extends ABFieldImageCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related images.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (this.id) {\n            // Ask the user what to do about the existing images:\n            webix.confirm({\n               title: L(\"Keep Images?\"),\n               message: L(\"Do you want to keep the images referenced by {0}?\", [\n                  this.label,\n               ]),\n               callback: async (result) => {\n                  // update this setting so the server can respond correctly in\n                  // ABFieldImage.migrateDrop()\n                  this.settings.removeExistingData = result ? 0 : 1;\n\n                  try {\n                     await this.save();\n\n                     // TODO: a reminder that you still got alot on the server to do!\n                     webix.alert({\n                        title: \"!! TODO !!\",\n                        text: \"ABFieldImage.destroy(): Tell a Developer to actually pay attention to this!\",\n                     });\n\n                     await super.destroy();\n\n                     resolve();\n                  } catch (err) {\n                     reject(err);\n                  }\n               },\n            });\n         } else {\n            resolve(); // nothing to do really\n         }\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj, formId) {\n      // if formId is passed the field is in a form view not a grid and\n      // we won't have the obj and each time this\n      // field is in a form it will conflict with the last one rendered\n      if (formId) {\n         return `${this.columnName.replace(/ /g, \"_\")}-${formId}-image`;\n      } else {\n         return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-image`;\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldImage\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      config.editor = false; // 'text';  // '[edit_type]'   for your unique situation\n      // config.sort   = 'string' // '[sort_type]'   for your unique situation\n\n      let containerHeight = \"100%\";\n      let imageHeight = \"100%\";\n      let width = \"100%\";\n      let imageSrcHeight = \"100%\";\n      if (field.settings.useWidth) {\n         config.width = field.settings.imageWidth || 100;\n         const heightVal =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight + 20\n               : 80;\n         containerHeight = `${heightVal}px`;\n         width = `${field.settings.imageWidth || 100}px`;\n         imageHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 80;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 60;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      } else if (options.width) {\n         config.width = options.width || 100;\n         width = `${options.width || 100}px`;\n         imageHeight = options.width;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = options.width;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n      if (\n         field.settings.useHeight &&\n         field.settings.imageHeight &&\n         field.settings.imageHeight != \"NaN\"\n      ) {\n         config.height = field.settings.imageHeight || 0;\n         containerHeight = parseInt(config.height) + 20;\n         containerHeight = `${containerHeight}px`;\n         imageHeight = parseInt(config.height);\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = parseInt(config.height);\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n\n      const editable = options.editable;\n\n      // populate our default template:\n      // debugger;\n      config.template = (obj) => {\n         if (obj.$group) return obj[this.columnName];\n\n         const widthStyle = `width: ${width}; height: ${containerHeight}`;\n\n         const imageStyle = `width: ${width}; height: ${imageHeight}`;\n\n         const imgDiv = [\n            `<div class=\"ab-image-data-field\" style=\"float: left; ${widthStyle}\">`,\n            `<div class=\"webix_view ab-image-holder\" style=\"${imageStyle}\">`,\n            '<div class=\"webix_template\">',\n            this.imageTemplate(obj, {\n               editable: editable,\n               height: imageSrcHeight,\n               width: width,\n            }),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return imgDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    * @param {object} options - {\n    * \t\teditable {Bool}   where or not this field is currently editable\n    * \t\tformId {string}   the id of the presenting form if any\n    * }\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      // safety check:\n      // webix seems to crash if you specify a .container that doesn't exists:\n      // Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         let imgHeight = 0;\n         if (this.settings.useHeight) {\n            imgHeight = parseInt(this.settings.imageHeight) || imgHeight;\n         }\n\n         let imgWidth = 0;\n         if (this.settings.useWidth) {\n            imgWidth = parseInt(this.settings.imageWidth) || imgWidth;\n         }\n\n         if (options.height) imgHeight = options.height;\n\n         if (options.width) imgWidth = options.width;\n         //// TODO: actually pay attention to the height and width when\n         //// displaying the images.\n\n         // use a webix component for displaying the content.\n         // do this so I can use the progress spinner\n         const webixContainer = webix.ui({\n            view: \"template\",\n            css: \"ab-image-holder\",\n            // id: ids.container,\n            container: parentContainer,\n\n            template: this.imageTemplate(row, {\n               editable: options.editable,\n               height: imgHeight ? imgHeight + \"px\" : 0,\n               width: imgWidth ? imgWidth + \"px\" : 0,\n            }),\n\n            borderless: true,\n            height: imgHeight,\n            width: imgWidth,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         ////\n         //// Prepare the Uploader\n         ////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n            return;\n         }\n\n         const url = this.urlUpload();\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            // id:ids.uploader,\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            status: (f) => {\n               if (f.percent) {\n                  webixContainer.hideProgress();\n                  webixContainer.showProgress({\n                     type: \"top\",\n                     position: f.percent / 100,\n                  });\n               }\n            },\n            // formData:{\n            // \tappKey:application.name,\n            // \tpermission:actionKey,\n            // \tisWebix:true,\n            // \timageParam:'upload'\n            // },\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: (item) => {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = [\n                     \"jpg\",\n                     \"jpeg\",\n                     \"bmp\",\n                     \"png\",\n                     \"gif\",\n                     \"webp\",\n                  ];\n                  const type = item.type.toLowerCase();\n                  if (acceptableTypes.indexOf(type) == -1) {\n                     webix.message(\n                        L(\"Only [{0}] images are supported\", [\n                           acceptableTypes.join(\", \"),\n                        ])\n                     );\n                     return false;\n                  }\n                  this.uploadInProgress = true;\n                  // Display the image from local file\n                  var reader = new FileReader();\n                  reader.onload = (e) => {\n                     this.showImage(null, node, e.target.result);\n                     webixContainer.showProgress({\n                        type: \"top\",\n                        delay: 2000,\n                     });\n                  };\n                  reader.readAsDataURL(item.file);\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  this.showImage(response.data.uuid, node);\n                  this.uploadInProgress = false;\n\n                  const values = {};\n                  values[this.columnName] = response.data.uuid;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if (\n                           $$(node) &&\n                           $$(node).getItem &&\n                           $$(node).getItem(row.id)\n                        ) {\n                           $$(node).updateItem(row.id, values);\n                        } else {\n                           // if you scroll the table the connection to the datatable is lost so we need to find it again\n                           const dataTable =\n                              document.querySelector(\".webix_dtable\");\n                           if ($$(dataTable) && $$(dataTable).getItem(row.id))\n                              $$(dataTable).updateItem(row.id, values);\n                        }\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldImage.onFileUpload(): model.update(): error updating our entry\",\n                           field: this.toObj(),\n                           row,\n                           values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error uploading image\"), {\n                     context: \"ABFieldImage. uploader. onFileUploadError():\",\n                     field: this.toObj(),\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // if we are working in a datagrid we need to add a click event to\n         // check if the user is clicking on the delete button\n         if (node.className == \"webix_cell\") {\n            node.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  this.deleteImage = true;\n               }\n            });\n         }\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, id, evt) {\n      if (\n         (evt && evt.target.className.indexOf(\"delete-image\") > -1) ||\n         this.deleteImage\n      ) {\n         delete this.deleteImage;\n         if (!row.removeDefaultImage) {\n            row.removeDefaultImage = [];\n         }\n         row.removeDefaultImage[this.columnName] = true;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: L(\"Are you sure you want to remove this image?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\"; // removing the reference to the image here\n\n                  try {\n                     await this.object.model().update(row.id, values);\n\n                     // update the client side data object as well so other data changes won't cause this save to be reverted\n                     if ($$(node) && $$(node).updateItem)\n                        $$(node).updateItem(row.id, values);\n\n                     // update value in the form component\n                     this.setValue($$(node), values);\n                  } catch (err) {\n                     node.classList.add(\"webix_invalid\");\n                     node.classList.add(\"webix_invalid_cell\");\n\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ABFieldImage: customEdit(): Error updating our entry\",\n                        field: this.toObj(),\n                        row: row,\n                        values: values,\n                     });\n                  }\n               }\n            },\n         });\n      } else {\n         const uploaderId = node.dataset[\"uploaderId\"],\n            uploader = $$(uploaderId);\n\n         if (uploader && uploader.fileDialog)\n            uploader.fileDialog({ rowid: row.id });\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-image\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailimage\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   imageTemplate(obj, options) {\n      options = options || {};\n      options.height = options.height || \"100%\";\n      options.width = options.width || \"100%\";\n\n      // deault view is icon:\n      let iconDisplay = \"\";\n      let imageDisplay = \"display:none;\";\n      let imageURL = \"\";\n\n      let value = \"\";\n      let isRemoveDefaultImage = false;\n      if (obj[this.columnName]) {\n         value = obj[this.columnName];\n      }\n      if (obj.removeDefaultImage) {\n         if (obj.removeDefaultImage[this.columnName]) {\n            isRemoveDefaultImage = obj.removeDefaultImage[this.columnName];\n         }\n      }\n\n      if (value) {\n         iconDisplay = \"display:none;\";\n         imageDisplay = \"\";\n         imageURL = `background-image:url('${this.urlImage(value)}');`;\n      } else {\n         if (this.settings.useDefaultImage && !isRemoveDefaultImage) {\n            iconDisplay = \"display:none;\";\n            imageDisplay = \"\";\n            imageURL = `background-image:url('${this.urlImage(\n               this.settings.defaultImageUrl\n            )}');`;\n         }\n      }\n\n      let html = [\n         `<div class=\"image-data-field-icon\" style=\"${iconDisplay}\">#drag#</div>` +\n            `<div class=\"image-data-field-image\" style=\"${imageDisplay} height:${options.height}; ${imageURL}\">#remove#</div>`,\n      ].join(\"\");\n\n      html = html.replace(\n         \"#drag#\",\n         options.editable\n            ? `<div>${L(\"Drag and drop or click here\")}</div>`\n            : \"\"\n      );\n      html = html.replace(\n         \"#remove#\",\n         options.editable\n            ? `<a style=\"${imageDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n            : \"\"\n      );\n\n      return html;\n   }\n\n   showImage(uuid, node, url) {\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.querySelector(\".image-data-field-icon\").style.display =\n            \"none\";\n         const image = parentContainer.querySelector(\".image-data-field-image\");\n         image.style.display = \"\";\n         image.style.backgroundImage = `url('${url ?? this.urlImage(uuid)}')`;\n         image.setAttribute(\"image-uuid\", uuid);\n      }\n   }\n\n   getValue(item, rowData) {\n      const image = item.$view.querySelector(\".image-data-field-image\");\n      return image.getAttribute(\"image-uuid\");\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const imageIcon = domNode.querySelector(\".image-data-field-icon\");\n      if (imageIcon) imageIcon.style.display = val ? \"none\" : \"\";\n\n      const image = domNode.querySelector(\".image-data-field-image\");\n      if (image) {\n         const imageDeleteIcon = image.querySelector(\".ab-delete-photo\");\n         if (imageDeleteIcon)\n            imageDeleteIcon.style.display = val ? \"block\" : \"none\";\n\n         image.style.display = val ? \"block\" : \"none\";\n\n         if (val) {\n            image.style.backgroundImage = `url('${this.urlImage(val)}')`;\n            image.setAttribute(\"image-uuid\", val);\n         } else {\n            image.removeAttribute(\"image-uuid\");\n         }\n      }\n   }\n\n   /**\n    * @method toBase64\n    *\n    * @param {Object} rowData\n    *\n    * @return {Promise} - {\n    * \t\tdata: string,\n    * \t\twidth: number,\n    * \t\theight: number\n    * }\n    */\n   toBase64(rowData) {\n      return new Promise((resolve, reject) => {\n         if (!rowData[this.columnName]) return resolve(null);\n\n         const img = new Image();\n         img.crossOrigin = \"Anonymous\";\n         img.onerror = function (err) {\n            reject(err);\n         };\n         img.onload = function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL();\n            const imageData = {\n               data: dataURL,\n               width: img.width,\n               height: img.height,\n            };\n            resolve(imageData);\n         };\n\n         img.src = this.urlImage(rowData[this.columnName]);\n      });\n   }\n\n   /**\n    * @method urlImage()\n    * return the url to use to reference the image by it's id.\n    * @param {string} id\n    *        the file.uuid reference of this image.\n    * @return {string}\n    */\n   urlImage(id) {\n      return `/file/${id}`;\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n      if (this.uploadInProgress)\n         validator.addError(this.columnName, L(\"Image still uploading\"));\n   }\n\n   rotateLeft(imgFile) {\n      return this.AB.Network.put({\n         url: `/image/rotate/${imgFile}?direction=left`,\n      });\n   }\n\n   rotateRight(imgFile) {\n      return this.AB.Network.put({\n         url: `/image/rotate/${imgFile}?direction=right`,\n      });\n   }\n};\n","const ABFieldJsonCore = require(\"../../core/dataFields/ABFieldJsonCore\");\n\nmodule.exports = class ABFieldJson extends ABFieldJsonCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldJson\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // config.editor = null; // read only for now\n      config.editor = \"text\";\n      config.css = \"textCell\";\n\n      // when called by ABViewFormCustom, will need a .template() fn.\n      // currently we don't need to return anything so ...\n      config.template = () => \"\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // read-only for now\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"json\",\n            settings: {\n               type: \"string\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n      if (item) {\n         item.config.value = rowData[this.columnName];\n      }\n   }\n\n   /**\n    * @method formCleanData()\n    * Review the data a form is about to submit and change/remove it as\n    * appropriate.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanData(rowData) {\n      let val = rowData[this.columnName];\n      if (val === \"\") {\n         // \"\" isn't a valid json value, so just remove the data and\n         // let the DB handle the default value.\n         delete rowData[this.columnName];\n      }\n   }\n};\n","const ABFieldListCore = require(\"../../core/dataFields/ABFieldListCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldList extends ABFieldListCore {\n   constructor(values, object) {\n      super(values, object);\n\n      // this._Selectivity = new ABFieldSelectivity(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   save() {\n      return super.save().then(() => {\n         // Now we want to clear out any entries that had values == to item removed from our list:\n         if (this.pendingDeletions.length) {\n            const model = this.object.model();\n\n            if (this.settings.isMultiple == true) {\n               // find all the entries that have one of the deleted values:\n               // use Promise to prevent issues with data being loaded before it is deleted on client side\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n                  let numToDo = 0;\n\n                  model\n                     .findAll({})\n                     .then((list) => {\n                        list = list.data || list;\n\n                        // for each list item\n                        list.forEach((item) => {\n                           if (Array.isArray(item[this.columnName])) {\n                              // get fields not in pendingDeletions\n                              let remainingFields = item[\n                                 this.columnName\n                              ].filter((i) => {\n                                 return (\n                                    this.pendingDeletions.indexOf(i.id) == -1\n                                 );\n                              });\n\n                              if (\n                                 remainingFields.length !=\n                                 item[this.columnName].length\n                              ) {\n                                 numToDo++;\n\n                                 // update value to new field list\n                                 if (remainingFields.length == 0) {\n                                    remainingFields = \"\";\n                                 }\n                                 const value = {};\n                                 value[this.columnName] = remainingFields;\n                                 model.update(item.id, value).then(() => {\n                                    // if ($$(node) && $$(node).updateItem)\n                                    //    $$(node).updateItem(value.id, value);\n                                    numDone++;\n                                    if (numDone >= numToDo) {\n                                       resolve();\n                                    }\n                                 });\n                              }\n                           }\n                        });\n                        if (numToDo == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            } else {\n               // find all the entries that have one of the deleted values:\n               const where = {};\n               where[this.columnName] = this.pendingDeletions;\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n\n                  model\n                     .findAll(where)\n                     .then((list) => {\n                        // make sure we just work with the { data:[] } that was returned\n                        list = list.data || list;\n\n                        // for each one, set the value to ''\n                        // NOTE: jQuery ajax routines filter out null values, so we can't\n                        // set them to null. :(\n                        // const numDone = 0;\n                        const value = {};\n                        value[this.columnName] = \"\";\n\n                        list.forEach((item) => {\n                           model.update(item.id, value).then(() => {\n                              numDone++;\n                              if (numDone >= list.length) {\n                                 resolve();\n                              }\n                           });\n                        });\n                        if (list.length == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            }\n         }\n      });\n   }\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldList\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      var formClass = \"\";\n      var placeHolder = \"\";\n      if (options.editable) {\n         formClass = \" form-entry\";\n         placeHolder = `<span style='color: #CCC; padding: 0 5px;'>${L(\n            \"Select item\"\n         )}</span>`;\n      }\n      var isRemovable = options.editable && !this.settings.required;\n\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n\n      config.template = (rowData) => {\n         let selectedData = rowData[this.columnName];\n         if (selectedData == null) return \"\";\n         if (this.settings.isMultiple) {\n            selectedData = _getSelectedOptions(this, rowData);\n         }\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         let hasCustomColor = \"\";\n         let optionHex = \"\";\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               if (this.settings.hasColors && val.hex) {\n                  hasCustomColor = \"hascustomcolor\";\n                  optionHex = `background: ${val.hex};`;\n               }\n               if (val.text) {\n                  values.push(\n                     `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'><span>${val.text}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n                  );\n               }\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData) {\n            let selectedObj = selectedData;\n            if (typeof selectedData == \"string\") {\n               selectedObj = this.getItemFromVal(selectedData);\n            }\n            if (!selectedObj) return \"\";\n            if (this.settings.hasColors && selectedObj.hex) {\n               hasCustomColor = \"hascustomcolor\";\n               optionHex = `background: ${selectedObj.hex};`;\n            }\n            if (selectedObj.text) {\n               let clear = \"\";\n               if (options.editable && !this.settings.required) {\n                  clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n               }\n               values.push(\n                  `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'>${clear}<span class=\"ellip\">${selectedObj.text}</span></div>`\n               );\n            }\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n      config.editor = this.settings.isMultiple ? \"multiselect\" : \"combo\";\n      config.suggest = {\n         button: true,\n         data: this.settings.options.map(function (opt) {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n      if (this.settings.isMultiple) {\n         config.suggest.view = \"checksuggest\";\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      if (!node.querySelector) return;\n\n      var clearButton = node.querySelector(\n         \".selectivity-single-selected-item-remove\"\n      );\n      if (clearButton) {\n         clearButton.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            var values = {};\n            values[this.columnName] = \"\";\n            this.object\n               .model()\n               .update(row.id, values)\n               .then(() => {\n                  // update the client side data object as well so other data changes won't cause this save to be reverted\n                  $$(node)?.updateItem?.(row.id, values);\n               })\n               .catch((err) => {\n                  node.classList.add(\"webix_invalid\");\n                  node.classList.add(\"webix_invalid_cell\");\n\n                  this.AB.notify.developer(err, {\n                     message:\n                        \"ABFieldList:customDisplay(): Error updating our entry.\",\n                     row: row,\n                     values: \"\",\n                     field: this.toObj(),\n                  });\n               });\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customEdit(row, App, node) {\n   //    return super.customEdit(row, App, node);\n   // }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"selectmultiple\" : \"selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple\n               ? \"mobile-selectmultiple\"\n               : \"mobile-selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"detailtext\" : \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      if (this.settings.isMultiple) {\n         let returnVals = [];\n         let vals = value.split(\",\");\n         vals.forEach((val) => {\n            returnVals.push(this.getItemFromVal(val));\n         });\n         return returnVals;\n      } else {\n         return value;\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this.options();\n      if (options.length > 1) {\n         options.forEach((option) => {\n            if (option.id == val) {\n               item = option;\n               return false;\n            }\n         });\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item, rowData) {\n      return this.editParse(item.getValue());\n   }\n\n   getSelectedOptions(field, rowData = {}) {\n      let result = [];\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData) {\n         if (Array.isArray(rowData)) {\n            result = rowData;\n         } else {\n            result.push(rowData);\n         }\n      }\n      if (result.length) {\n         if (typeof result == \"string\") result = JSON.parse(result);\n\n         // Pull text with current language\n         if (this.settings) {\n            result = (this.settings.options || []).filter((opt) => {\n               return (\n                  (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                     .length > 0\n               );\n            });\n         }\n      }\n\n      return result;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      if (this.settings.isMultiple) {\n         // do we need anything here?\n      } else {\n         super.setValue(item, rowData);\n      }\n   }\n};\n\n// == Private methods ==\nfunction _getSelectedOptions(field, rowData = {}) {\n   let result = [];\n   if (rowData[field.columnName] != null) {\n      result = rowData[field.columnName];\n\n      if (typeof result == \"string\") result = JSON.parse(result);\n\n      // Pull text with current language\n      if (field.settings) {\n         result = (field.settings.options || []).filter((opt) => {\n            return (\n               (result || []).filter(\n                  (v) => opt && v && (opt.id || opt) == (v.id || v)\n               ).length > 0\n            );\n         });\n      }\n   }\n\n   return result;\n}\n","const ABFieldLongTextCore = require(\"../../core/dataFields/ABFieldLongTextCore\");\n\nmodule.exports = class ABFieldLongText extends ABFieldLongTextCore {\n   constructor(values, object) {\n      super(values, object);\n\n      /*\n\t\t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n\t\t}\n\t\t*/\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldLongText\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\"; // '[edit_type]'   for your unique situation\n      // config.sort = 'string' // '[sort_type]'   for your unique situation\n      config.template = (obj, common, value, col, ind) => {\n         return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldNumberCore = require(\"../../core/dataFields/ABFieldNumberCore\");\n\nlet INIT_EDITOR = false;\n// {bool} INIT_EDITOR\n// Transition code between previous Framework and current.\n// we now need to wait until webix is declared or accessible globally.\n\nmodule.exports = class ABFieldNumber extends ABFieldNumberCore {\n   constructor(values, object) {\n      if (!INIT_EDITOR) {\n         // NOTE: if you need a unique [edit_type] by your returned config.editor above:\n         webix.editors.number = webix.extend(\n            {\n               // TODO : Validate number only\n            },\n            webix.editors.text\n         );\n         INIT_EDITOR = true;\n      }\n      super(values, object);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   // return the grid column header definition for this instance of ABFieldNumber\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"number\"; // [edit_type] simple inline editing.\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"numberbox\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-numberbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","/*\n * ABFieldSelectivity\n *\n * An ABFieldSelectivity defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABField = require(\"./ABField\");\n\nconst defaultSettings = {\n   allowClear: true,\n   removeOnly: false,\n   readOnly: false,\n   showDropdown: true,\n   placeholder: \"\",\n   multiple: false,\n};\n\nconst ABFieldSelectivityDefaults = {\n   key: \"selectivity\",\n};\n\nmodule.exports = class ABFieldSelectivity extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldSelectivityDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return {\n         key: \"selectivity\",\n         icon: \"bars\",\n         menuName: \"\",\n         description: \"\",\n      };\n   }\n\n   selectivityRender(domNode, settings, App, row) {\n      if (domNode == null) return;\n\n      const cypress = settings.dataCy || \"\";\n      domNode.setAttribute(\"data-cy\", cypress);\n\n      // setting up our specific settings:\n      settings = settings || {};\n      for (const dv in defaultSettings) {\n         if (settings[dv] === null) {\n            settings[dv] = null;\n         } else {\n            settings[dv] = settings[dv] || defaultSettings[dv];\n         }\n      }\n\n      if (\n         settings.multiple &&\n         settings.items &&\n         settings.data &&\n         settings.data.length\n      ) {\n         settings.data.forEach(function (d) {\n            settings.items.map(function (i) {\n               if (i.id == d.id) d.hex = i.hex;\n            });\n         });\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      } else if (settings[\"data\"] == null || settings[\"data\"] == \"\") {\n         settings[\"data\"] = this.prepareData([], settings.multiple);\n      } else {\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      }\n\n      // store the field id so we can look it up on click events later\n      settings[\"field\"] = this.id;\n\n      // Prevent render selectivity duplicate\n      if (domNode.selectivity != null) {\n         // Refresh selectivity settings\n         domNode.selectivity.setOptions(settings);\n\n         return;\n      }\n\n      settings.element = domNode;\n\n      // Render selectivity\n      let selectivityInput;\n      if (settings.multiple) {\n         if (settings.isUsers) {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: #eee !important; color: #666 !important; box-shadow: inset 0px 1px 1px #333;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-user\" style=\"color: #666; opacity: 0.6;\"></i> \n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t\t${!settings.isLabelHidden ? options.text : \"\"}\n\t\t\t\t\t\t\t\t${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\" style=\"color: #333;\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         } else {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: ${options.hex} !important;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n                        ${\n                           settings.editPage\n                              ? ` <a class=\"selectivity-multiple-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>`\n                              : \"\"\n                        }\n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n                        ${!settings.isLabelHidden ? options.text : \"\"}\n                        ${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         }\n         selectivityInput = new Selectivity.Inputs.Multiple(settings);\n\n         domNode.selectivity = selectivityInput;\n         this.selectivitySetBadge(domNode, App, row);\n      } else {\n         settings.templates = {\n            singleSelectedItem: function (options) {\n               return `<span class=\"selectivity-single-selected-item\" data-item-id=\"${\n                  options.uuid\n               }\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t${\n                        settings.editPage\n                           ? '<a class=\"selectivity-single-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>'\n                           : \"\"\n                     }\n                     ${\n                        settings.additionalText\n                           ? settings.additionalText(options)\n                           : \"\"\n                     }\n                     ${!settings.isLabelHidden ? options.text : \"\"}\n                     ${\n                        options.removable\n                           ? '<a class=\"selectivity-single-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>'\n                           : \"\"\n                     }\n\t\t\t\t\t\t</span>`;\n            },\n         };\n\n         selectivityInput = new Selectivity.Inputs.Single(settings);\n         domNode.selectivity = selectivityInput;\n      }\n\n      if (settings.editPage) {\n         const trigerEditPageEvent = () => {\n            const instance = this;\n            const editMenus = document.querySelectorAll(\n               \".selectivity-single-selected-item-edit, .selectivity-multiple-selected-item-edit\"\n            );\n            for (let i = 0; i < editMenus.length; i++) {\n               const eMenu = editMenus[i];\n               if (eMenu && !eMenu.__hasClickEvent) {\n                  eMenu.addEventListener(\n                     \"click\",\n                     function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        const parentElm = this.parentElement;\n                        if (!parentElm) return;\n\n                        const rowId = parentElm.getAttribute(\"data-item-id\");\n                        if (!rowId) return;\n\n                        const fieldId = parentElm.getAttribute(\"data-field-id\");\n                        if (!fieldId) return;\n\n                        const thisField = instance.object.fieldByID(fieldId);\n                        if (!thisField) return;\n\n                        thisField.emit(\"editPage\", rowId);\n                     },\n                     true\n                  );\n                  eMenu.__hasClickEvent = true;\n               }\n            }\n         };\n\n         setTimeout(() => {\n            trigerEditPageEvent();\n\n            domNode.addEventListener(\"change\", () => {\n               trigerEditPageEvent();\n            });\n         }, 500);\n      }\n\n      // WORKAROUND : remove caret icon of selectivity\n      if (settings.readOnly) {\n         const caretElems = domNode.getElementsByClassName(\"selectivity-caret\");\n         for (let i = 0; i < caretElems.length; i++) {\n            const caretElm = caretElems[i];\n            if (caretElm) {\n               caretElm.parentNode.removeChild(caretElm);\n            }\n         }\n      }\n\n      // remember our settings values\n      this.selectivitySettings = settings;\n   }\n\n   selectivityGet(domNode) {\n      if (domNode && domNode.selectivity) {\n         if (this.selectivitySettings && this.selectivitySettings.multiple) {\n            // on a multiple select, return an array of results, or empty array\n            return domNode.selectivity.getData() || [];\n         } else {\n            // if a single select, return the object or null\n            return domNode.selectivity.getData() || null;\n         }\n      } else {\n         if (this.selectivitySettings && this.selectivitySettings.multiple)\n            return [];\n         else return null;\n      }\n   }\n\n   selectivitySet(domNode, data) {\n      if (!domNode || !domNode.selectivity) return;\n\n      data = this.prepareData(data, domNode.selectivity.options.multiple);\n\n      if (\n         (Array.isArray(data) && data[0]) || // Check Array\n         (data && data.id)\n      )\n         // Check a object\n         domNode.selectivity.setData(data);\n      else domNode.selectivity.clear();\n   }\n\n   selectivityDestroy(domNode) {\n      if (domNode && domNode.selectivity) {\n         domNode.selectivity.destroy();\n\n         delete domNode.selectivity;\n      }\n   }\n\n   prepareData(data, multiple = true) {\n      if (!data && multiple) {\n         return [];\n      } else if (multiple && data && Array.isArray(data) && data.length == 0) {\n         return [];\n      } else if (!multiple && data && Array.isArray(data) && data.length == 0) {\n         return null;\n      } else if (!data && !multiple) {\n         return null;\n      }\n\n      if (typeof data == \"string\" && data.length > 0) {\n         try {\n            data = JSON.parse(data);\n         } catch (e) {\n            // not JSON parsable, so convert to\n            data = { id: data, text: data };\n         }\n      }\n\n      // if single select, then it should be object\n      if (!multiple && Array.isArray(data)) {\n         data = data[0];\n      } else if (multiple && !Array.isArray(data)) {\n         data = [data];\n      }\n\n      // check to see if id is present on each item\n      if (multiple) {\n         data.forEach((d) => {\n            if (!d.id && d.uuid) {\n               d.id = d.uuid;\n            }\n         });\n      } else {\n         if (!data.id && data.uuid) data.id = data.uuid;\n      }\n\n      if (data == null && multiple) {\n         data = [];\n      }\n\n      return data;\n   }\n\n   selectivitySetBadge(domNode) {\n      if (!domNode.clientHeight) return;\n      const innerHeight = domNode.clientHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         let values = [];\n         if (domNode && domNode.selectivity)\n            values = domNode.selectivity.getValue() || [];\n\n         count = values.length;\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               // v2: this just updated the $height property for this row\n               // we don't do that anymore:\n               // anchor.addEventListener(\"click\", function () {\n               //    App.actions.onRowResizeAuto(row.id, innerHeight);\n               // });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n};\n","const ABFieldStringCore = require(\"../../core/dataFields/ABFieldStringCore\");\n\nmodule.exports = class ABFieldString extends ABFieldStringCore {\n   // constructor(values, object) {\n   //    super(values, object);\n\n   // {\n   //   settings: {\n   // \t  default: 'string',\n   // \t  supportMultilingual: 1/0\n   //   }\n   // }\n\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldString\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n      config.css = \"textCell\";\n      // config.sort   = 'string'\n      config.template = (obj, common, value /* , col, ind */) => {\n         // if this isn't part of a group header display the default format\n         if (!obj.$group) {\n            return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   // formComponentMobile() {\n   //    // NOTE: what is being returned here needs to mimic an ABView CLASS.\n   //    // primarily the .common() and .newInstance() methods.\n   //    const formComponentSetting = super.formComponent();\n\n   //    // .common() is used to create the display in the list\n   //    formComponentSetting.common = () => {\n   //       return {\n   //          key: \"mobile-textbox\",\n   //          settings: {\n   //             type: \"single\",\n   //          },\n   //       };\n   //    };\n\n   //    return formComponentSetting;\n   // }\n\n   /**\n    * @method formComponentMobile\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldTextFormulaCore = require(\"../../core/dataFields/ABFieldTextFormulaCore\");\n\nmodule.exports = class ABFieldTextFormula extends ABFieldTextFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldTextFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(/* row, App, node, options */) {}\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return null;\n   }\n\n   formComponentMobile() {\n      return null;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldTreeCore = require(\"../../core/dataFields/ABFieldTreeCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldTree extends ABFieldTreeCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj) {\n      return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-tree`;\n   }\n\n   // return the grid column header definition for this instance of ABFieldTree\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      let formClass = \"\";\n      let placeHolder = \"\";\n      if (options.isForm) {\n         formClass = \" form-entry\";\n         placeHolder =\n            \"<span style='color: #CCC; padding: 0 5px;'>\" +\n            L(\"Select items\") +\n            \"</span>\";\n      }\n\n      const width = options.width;\n\n      config.template = (obj) => {\n         if (obj.$group) return obj[field.columnName];\n\n         const branches = [];\n         let selectOptions = this.AB.cloneDeep(field.settings.options);\n         selectOptions = new webix.TreeCollection({\n            data: selectOptions,\n         });\n\n         let values = obj;\n         if (obj[field.columnName] != null) {\n            values = obj[field.columnName];\n         }\n\n         selectOptions.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  selectOptions.data.each(function (par) {\n                     if (selectOptions.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values'>\";\n         if (branches.length == 0) {\n            nodeHTML += placeHolder;\n         } else {\n            branches.forEach(function (item) {\n               nodeHTML +=\n                  '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                  myHex +\n                  ' !important;\">' +\n                  item +\n                  \"</span>\";\n            });\n         }\n         nodeHTML += \"</div>\";\n\n         // field.setBadge(node, App, row);\n\n         if (width) {\n            return (\n               '<div style=\"margin-left: ' +\n               width +\n               'px;\" class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         } else {\n            return (\n               '<div class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      const field = this;\n\n      if (options.isForm) {\n         if (!row || row.length == 0) {\n            node.innerHTML =\n               \"<div class='list-data-values form-entry'><span style='color: #CCC; padding: 0 5px;'>\" +\n               L(\"Select items\") +\n               \"</span></div>\";\n            return;\n         }\n\n         const branches = [];\n         options = this.AB.cloneDeep(field.settings.options);\n         options = new webix.TreeCollection({\n            data: options,\n         });\n\n         let values = row;\n         if (row[field.columnName] != null) {\n            values = row[field.columnName];\n         }\n\n         options.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  options.data.each(function (par) {\n                     if (options.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values form-entry'>\";\n         branches.forEach(function (item) {\n            nodeHTML +=\n               '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n               myHex +\n               ' !important;\">' +\n               item +\n               \"</span>\";\n         });\n         nodeHTML += \"</div>\";\n\n         node.innerHTML = nodeHTML;\n      }\n\n      field.setBadge(node, App, row);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, component) {\n      const idBase = App.unique(this.idCustomContainer(row));\n      const idPopup = `${idBase}-popup`;\n      const idTree = `${idBase}-tree`;\n      const view = $$(node);\n      const field = this;\n      const parentComponent = component;\n      let values = {};\n      let firstRender = true;\n\n      function getValues(field, row) {\n         let values = {};\n         if (\n            typeof field != \"undefined\" &&\n            typeof field.columnName != \"undefined\" &&\n            typeof row[field.columnName] != \"undefined\"\n         ) {\n            values = row[field.columnName];\n         }\n         return values;\n      }\n\n      function populateTree(field, vals) {\n         values = getValues(field, vals);\n\n         const $Tree = $$(idTree);\n         $Tree.blockEvent(); // prevents endless loop\n\n         const options = field.AB.cloneDeep(field.settings.options);\n         $Tree.clearAll();\n         $Tree.parse(options);\n         $Tree.refresh();\n         $Tree.uncheckAll();\n         $Tree.openAll();\n\n         if (values != null && values.length) {\n            values.forEach(function (id) {\n               if ($Tree.exists(id)) {\n                  $Tree.checkItem(id);\n                  const dom = $Tree.getItemNode(id);\n                  dom.classList.add(\"selected\");\n               }\n            });\n         }\n         $Tree.unblockEvent();\n      }\n\n      if ($$(idPopup)) {\n         $$(idPopup).show();\n         populateTree(this, row);\n      } else {\n         webix\n            .ui({\n               id: idPopup,\n               view: \"popup\",\n               width: 500,\n               height: 400,\n               on: {\n                  onShow: () => {\n                     if (firstRender == true) populateTree(this, row);\n\n                     firstRender = false;\n                  },\n               },\n               body: {\n                  id: idTree,\n                  view: \"tree\",\n                  css: \"ab-data-tree\",\n                  template: function (obj, common) {\n                     return (\n                        \"<label>\" +\n                        common.checkbox(obj, common) +\n                        \"&nbsp;\" +\n                        obj.text +\n                        \"</label>\"\n                     );\n                  },\n                  on: {\n                     onItemCheck: async function (id, value, event) {\n                        const dom = this.getItemNode(id);\n                        const tree = this;\n                        if (value == true) {\n                           dom.classList.add(\"selected\");\n                        } else {\n                           dom.classList.remove(\"selected\");\n                        }\n                        // works for the same-level children only\n                        // except root items\n                        if (this.getParentId(id)) {\n                           tree.blockEvent(); // prevents endless loop\n\n                           let rootid = id;\n                           while (this.getParentId(rootid)) {\n                              rootid = this.getParentId(rootid);\n                              if (rootid != id) tree.uncheckItem(rootid);\n                           }\n\n                           this.data.eachSubItem(rootid, function (item) {\n                              if (item.id != id) tree.uncheckItem(item.id);\n                           });\n\n                           tree.unblockEvent();\n                        } else {\n                           tree.blockEvent(); // prevents endless loop\n                           this.data.eachSubItem(id, function (obj) {\n                              if (obj.id != id) tree.uncheckItem(obj.id);\n                           });\n                           tree.unblockEvent();\n                        }\n                        const values = {};\n                        values[field.columnName] = $$(idTree).getChecked();\n\n                        if (row.id) {\n                           // pass null because it could not put empty array in REST api\n                           if (values[field.columnName].length == 0)\n                              values[field.columnName] = \"\";\n\n                           try {\n                              await field.object.model().update(row.id, values);\n\n                              // update the client side data object as well so other data changes won't cause this save to be reverted\n                              if (view && view.updateItem) {\n                                 view.updateItem(row.id, values);\n                              }\n                           } catch (err) {\n                              node.classList.add(\"webix_invalid\");\n                              node.classList.add(\"webix_invalid_cell\");\n\n                              this.AB.notify.developer(err, {\n                                 message:\n                                    \"ABFieldTree:onItemClick(): Error updating our entry.\",\n                                 row: row,\n                                 values: values,\n                              });\n                           }\n                        } else {\n                           const rowData = {};\n                           rowData[field.columnName] = $$(idTree).getChecked();\n\n                           field.setValue($$(parentComponent.ui.id), rowData);\n                        }\n                     },\n                  },\n               },\n            })\n            .show(node, {\n               x: -7,\n            });\n      }\n      return false;\n   }\n\n   setBadge(domNode, row) {\n      const field = this;\n      domNode = domNode.querySelector(\".list-data-values\");\n      const innerHeight = domNode.scrollHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         if (row[field.columnName] && row[field.columnName].length)\n            count = row[field.columnName].length;\n         else count = 0;\n\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               anchor.addEventListener(\"click\", function (event) {\n                  // v2: this was just saving the new height to the\n                  // field properties. We don't do that anymore:\n                  // App.actions.onRowResizeAuto(row.id, innerHeight);\n                  event.stopPropagation();\n               });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"formtree\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtree\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   getValue(item, rowData) {\n      let values = {};\n      values = item.getValues();\n      return values;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return false;\n\n      const val = rowData[this.columnName] || [];\n\n      item.setValues(val);\n      // get dom\n      const dom = item.$view.querySelector(\".list-data-values\");\n\n      if (!dom) return false;\n\n      // set value to selectivity\n      this.customDisplay(val, this.App, dom, {\n         editable: true,\n         isForm: true,\n      });\n\n      setTimeout(function () {\n         let height = 33;\n         if (dom.scrollHeight > 33) {\n            height = dom.scrollHeight;\n         }\n         item.config.height = height + 5;\n         item.resize();\n      }, 200);\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\nconst ABFieldUserCore = require(\"../../core/dataFields/ABFieldUserCore\");\n\nmodule.exports = class ABFieldUser extends ABFieldUserCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   async save() {\n      // Add new\n      if (this.id == null) {\n         const SiteUser = this.AB.objectUser();\n         const Defaults = ABFieldUserCore.defaults();\n\n         this.settings.linkObject = SiteUser.id;\n         this.settings.isCustomFK = 1;\n\n         if (this.settings.isMultiple) {\n            this.settings.indexField2 = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"many\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         } else {\n            this.settings.indexField = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"one\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         }\n\n         // TODO: .fieldCustomNew() for saving \"local\" changes.\n         // NOTE: The Object adding this Field sees it's data as a ABFieldUser\n         //       connection.\n         //       However, the SiteUser will see the data as a ABFieldConnect\n         //       connection\n         const linkCol = SiteUser.fieldNew({\n            key: ABFieldConnectCore.defaults().key,\n            columnName: `${this.object.name}_${this.label}`,\n            label: this.object.label,\n            settings: {\n               showIcon: this.settings.showIcon,\n               linkObject: this.object.id,\n               linkType: this.settings.linkViaType,\n               linkViaType: this.settings.linkType,\n               isCustomFK: this.settings.isCustomFK,\n               indexField: this.settings.indexField,\n               indexField2: this.settings.indexField2,\n               isSource: 0,\n            },\n         });\n\n         // // Create definitions of the connected fields\n         // // NOTE: skip directly to the ABMLClass.save() to avoid the\n         // // migrations caused during the ABField.save() operations.\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         // linkCol.settings.linkColumn = this.id;\n         // await ABFieldUserCore.prototype.save.call(linkCol);\n\n         // // Update the id value of linked field to connect together\n         // this.settings.linkColumn = linkCol.id;\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         let newDef = await this.toDefinition().save();\n         this.id = newDef.id;\n\n         linkCol.settings.linkColumn = this.id;\n         let newLinkDef = await linkCol.toDefinition().save();\n         linkCol.id = newLinkDef.id;\n\n         this.settings.linkColumn = linkCol.id;\n         await this.toDefinition().save();\n\n         // Add fields to Objects\n         await this.object.fieldAdd(this);\n\n         await SiteUser.fieldAdd(linkCol);\n\n         // Create column to DB\n         await this.migrateCreate();\n\n         await linkCol.migrateCreate();\n\n         return this;\n      } else {\n         return super.save();\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldUser\n\n   columnHeader(options) {\n      // debugger;\n      options = this.setDisplayOptions(options);\n      return super.columnHeader(options);\n   }\n\n   /**\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customDisplay(row, App, node, options = {}) {\n   //    debugger;\n   //    options = this.setDisplayOptions(options);\n   //\n   //    return super.customDisplay(row, App, node, options);\n   // }\n\n   setDisplayOptions(options) {\n      options = options || {};\n      options.editable =\n         this.settings.editable != null ? this.settings.editable : true;\n\n      options.isLabelHidden =\n         this.settings.isShowUsername != null\n            ? !this.settings.isShowUsername\n            : false;\n\n      options.additionalText = (opt) => {\n         if (!this.settings.isShowProfileImage) return \"\";\n\n         if (opt.image_id)\n            return `<img src='/file/${opt.image_id}' style='border-radius:100%; object-fit: cover; margin: 0 5px 0 -10px;' width='28' height='28' />`;\n         else return '<i style=\"opacity: 0.6;\" class=\"fa fa-user\"></i> ';\n      };\n\n      return options;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (this.settings.isCurrentUser) {\n         if (this.settings.isMultiple) {\n            values[this.columnName] = [\n               {\n                  id: this.AB.Account.username(),\n                  text: this.AB.Account.username(),\n               },\n            ];\n         } else {\n            values[this.columnName] = this.AB.Account.username();\n         }\n      }\n   }\n\n   getValue(item) {\n      let val = super.getValue(item);\n\n      if (val) {\n         if (typeof val == \"string\")\n            val = val.replace(/ab-current-user/g, this.AB.Account.username());\n         else if (Array.isArray(val))\n            val = val.map((v) =>\n               (v?.username ?? v?.uuid ?? v?.id ?? v)?.replace(\n                  /ab-current-user/g,\n                  this.AB.Account.username()\n               )\n            );\n      }\n\n      return val;\n   }\n\n   setValue(item, rowData) {\n      let val = rowData[this.columnName];\n      if (val === \"\") {\n         // this means this value isn't set.\n         // can we remove this from the data?\n         delete rowData[this.columnName];\n         super.setValue(item, rowData);\n         return;\n      }\n\n      if (this.linkType() == \"many\") {\n         // val should be an array.\n         if (!Array.isArray(val)) {\n            val = [val];\n         }\n         // if any of those contain \"ab-current-user\" replace it:\n         val = val.map((v) =>\n            v == \"ab-current-user\" ? this.AB.Account.username() : v\n         );\n      } else {\n         // val is a single entry string\n         // Select \"[Current user]\" to update\n         if (val == \"ab-current-user\") val = this.AB.Account.username();\n      }\n\n      rowData[this.columnName] = val;\n\n      super.setValue(item, rowData);\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((u) => {\n         const result = {\n            id: u.username,\n            image: u.image_id,\n         };\n\n         if (this.settings.isMultiple) {\n            result.text = u.username;\n         } else {\n            result.value = u.username;\n         }\n\n         return result;\n      });\n   }\n\n   getOptions(...params) {\n      return super.getOptions(...params).then((options) => {\n         // in a ABFieldUser, our options.id elements need to have\n         // the username, not the .uuid:\n         (options || []).forEach((o) => {\n            if (o.username) {\n               o.id = o.username;\n            }\n         });\n\n         return options;\n      });\n   }\n\n   pullRelationValues(row) {\n      let values = super.pullRelationValues(row);\n\n      // remember, our .id == .username\n      if (Array.isArray(values)) {\n         // prevent any null or undefined:\n         values = values.filter((v) => v);\n         values = values.map((v) => {\n            v.id = v.username || v.id;\n            return v;\n         });\n      } else {\n         if (values) {\n            values.id = values.username || values.id;\n         }\n      }\n\n      return values;\n   }\n\n   pullRecordRelationValues(record) {\n      let data = super.pullRecordRelationValues(record);\n      if (Array.isArray(data)) {\n         data = data.map((d) => {\n            d.id = d.username ?? d.id;\n            return d;\n         });\n      } else {\n         data.id = data.username || data.id;\n      }\n\n      return data;\n   }\n};\n","const ABMobilePageCore = require(\"../../core/mobile/ABMobilePageCore\");\n\nmodule.exports = class ABMobilePage extends ABMobilePageCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // check to see if I've been updated, if so, alert my parent:\n      this.__Handler_ABDEF_UPDATED = (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n            this.AB.off(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n         }\n      };\n      this.AB.on(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n\n      // check to see if any of my child pages have been updated and\n      // update my defintion of them:\n      this.__Handler_DEF_UPDATED = (page) => {\n         // create a new Field with the updated def\n         var def = this.AB.definitionByID(page.id);\n         if (!def) return;\n\n         var newPage = this.pageNew(def);\n\n         // we want to keep the same pageID order:\n         var newPages = [];\n         this.pages().forEach((pg) => {\n            if (pg.id === page.id) {\n               newPages.push(newPage);\n               return;\n            }\n            newPages.push(pg);\n         });\n\n         this._pages = newPages;\n\n         page.off(\"definition.updated\", this.__Handler_DEF_UPDATED);\n      };\n      this.pages().forEach((p) => {\n         p.on(\"definition.updated\", this.__Handler_DEF_UPDATED);\n      });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABMobilePage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance(parent) {\n      // create a new Field with the updated def\n      var def = this.AB.definitionByID(this.id);\n      if (!def) return;\n\n      var newPage = (parent ?? this.parent)?.pageNew(def);\n\n      try {\n         // detatch ourself from other emitters:\n         this.AB.off(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n         this.pages().forEach((pg) => {\n            pg.removeAllListeners(\"definition.updated\");\n         });\n      } catch (e) {\n         // debugger;\n         console.error(e);\n      }\n\n      return newPage;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let allViews = this.views();\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no widgets\");\n      }\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABMobileViewCore = require(\"../../core/mobile/ABMobileViewCore.js\");\n\nmodule.exports = class ABMobileView extends ABMobileViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"mobile-view\",\n         \"mobile-page\",\n         // \"formpanel\",\n         // \"viewcontainer\",\n         // // not allowed Detail's widgets\n         // \"detailcheckbox\",\n         // \"detailcustom\",\n         // \"detailconnect\",\n         // \"detailimage\",\n         // \"detailselectivity\",\n         // \"detailtext\",\n         // \"detailtree\",\n         // // not allowed Form's widgets\n         // \"button\",\n         // \"checkbox\",\n         // \"connect\",\n         // \"datepicker\",\n         // \"fieldcustom\",\n         // \"textbox\",\n         // \"numberbox\",\n         // \"selectsingle\",\n         // \"selectmultiple\",\n         // \"formtree\",\n         // \"fieldreadonly\",\n         // // not allowed Chart's Widgets\n         // \"pie\",\n         // \"bar\",\n         // \"line\",\n         // \"area\",\n         // // not allowed Report page\n         // \"report\",\n         // \"reportPage\",\n         // \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our sub views\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABMobileViewCustomCore = require(\"../../core/mobile/ABMobileViewCustomCore\");\n\nmodule.exports = class ABMobileViewCustom extends ABMobileViewCustomCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   warningsEval() {\n      super.warningsEval();\n\n      // Add in here any missing or unfindable setting reference\n      // like datacollection ...\n   }\n};\n","const ABMobileViewFormCore = require(\"../../core/mobile/ABMobileViewFormCore\");\n\nconst ABMobileViewFormButton = require(\"./ABMobileViewFormButton\");\n\nmodule.exports = class ABMobileViewForm extends ABMobileViewFormCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method refreshDefaultButton()\n    * On the ABDesigner once a Form Field is added/removed from a form, we want\n    * to make sure the default Form Button is pushed down to the bottom of the\n    * list of form Items.\n    * @param {obj} ids\n    *        The id hash of the webix widgets that show the fields.\n    * @return {ABMobileViewFormButton}\n    */\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABMobileViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABMobileViewFormButton.newInstance(\n            this.application,\n            this\n         );\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views((v) => v.id != defaultButton.id);\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.dataviewID) {\n         this.warningsMessage(`does not have a DataCollection assigned.`);\n      } else {\n         let DC = this.datacollection;\n         if (!DC) {\n            this.warningsMessage(\n               `references an unknown DataCollection [${this.settings.dataviewID}].`\n            );\n         }\n      }\n   }\n};\n","const ABMobileViewFormButtonCore = require(\"../../core/mobile/ABMobileViewFormButtonCore\");\n\nmodule.exports = class ABMobileViewFormButton extends (\n   ABMobileViewFormButtonCore\n) {};\n","const ABMobileViewFormCheckboxCore = require(\"../../core/mobile/ABMobileViewFormCheckboxCore\");\n\nmodule.exports = class ABMobileViewFormCheckbox extends (\n   ABMobileViewFormCheckboxCore\n) {};\n","const ABMobileViewFormConnectCore = require(\"../../core/mobile/ABMobileViewFormConnectCore\");\n\n// const ABViewPropertyAddPage =\n//    require(\"./viewProperties/ABViewPropertyAddPage\").default;\n// const ABViewPropertyEditPage =\n//    require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\n// const ABViewFormConnectPropertyComponentDefaults =\n//    ABMobileViewFormConnectCore.defaultValues();\n\n// const ABPopupSort = require(\"../../../ABDesigner/ab_work_object_workspace_popupSortFields\");\n\n// let FilterComponent = null;\n// let SortComponent = null;\n\nmodule.exports = class ABMobileViewFormConnect extends (\n   ABMobileViewFormConnectCore\n) {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions\n         /* ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n         */\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Does this do anything here?\n      // this.addPageTool.fromSettings(this.settings);\n      // this.editPageTool.fromSettings(this.settings);\n   }\n\n   // static get addPageProperty() {\n   //    return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   // }\n\n   // static get editPageProperty() {\n   //    return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   // component() {\n   //    return new ABViewFormConnectComponent(this);\n   // }\n\n   // get addPageTool() {\n   //    if (this.__addPageTool == null)\n   //       this.__addPageTool = new ABViewPropertyAddPage();\n\n   //    return this.__addPageTool;\n   // }\n\n   // get editPageTool() {\n   //    if (this.__editPageTool == null)\n   //       this.__editPageTool = new ABViewPropertyEditPage();\n\n   //    return this.__editPageTool;\n   // }\n};\n","const ABMobileViewFormCustomCore = require(\"../../core/mobile/ABMobileViewFormCustomCore\");\n\nmodule.exports = class ABMobileViewFormCustom extends (\n   ABMobileViewFormCustomCore\n) {};\n","const ABMobileViewFormDateCore = require(\"../../core/mobile/ABMobileViewFormDateCore\");\n\nmodule.exports = class ABMobileViewFormDate extends ABMobileViewFormDateCore {};\n","const ABMobileViewFormDatetimeCore = require(\"../../core/mobile/ABMobileViewFormDatetimeCore\");\n\nmodule.exports = class ABMobileViewFormDatetime extends (\n   ABMobileViewFormDatetimeCore\n) {};\n","const ABMobileViewFormEmailCore = require(\"../../core/mobile/ABMobileViewFormEmailCore\");\n\nmodule.exports = class ABMobileViewFormEmail extends (\n   ABMobileViewFormEmailCore\n) {};\n","const ABMobileViewFormFileCore = require(\"../../core/mobile/ABMobileViewFormFileCore\");\n\nmodule.exports = class ABMobileViewFormFile extends ABMobileViewFormFileCore {};\n","const ABMobileViewFormFormulaCore = require(\"../../core/mobile/ABMobileViewFormFormulaCore\");\n\nmodule.exports = class ABMobileViewFormFormula extends (\n   ABMobileViewFormFormulaCore\n) {};\n","const ABMobileViewFormImageCore = require(\"../../core/mobile/ABMobileViewFormImageCore\");\n\nmodule.exports = class ABMobileViewFormImage extends (\n   ABMobileViewFormImageCore\n) {};\n","const ABMobileViewFormItemCore = require(\"../../core/mobile/ABMobileViewFormItemCore\");\n\nmodule.exports = class ABMobileViewFormItem extends ABMobileViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   // warningsEval() {\n   //    super.warningsEval();\n   //    this.warningsMessage(`FormItem Test Warning.`);\n   // }\n};\n","const ABMobileViewFormNumberCore = require(\"../../core/mobile/ABMobileViewFormNumberCore\");\n\nmodule.exports = class ABMobileViewFormNumber extends (\n   ABMobileViewFormNumberCore\n) {};\n","const ABMobileViewFormReadonlyCore = require(\"../../core/mobile/ABMobileViewFormReadonlyCore\");\n\nmodule.exports = class ABMobileViewFormReadonly extends (\n   ABMobileViewFormReadonlyCore\n) {};\n","const ABMobileViewFormSelectMultipleCore = require(\"../../core/mobile/ABMobileViewFormSelectMultipleCore\");\n\nmodule.exports = class ABMobileViewFormSelectMultiple extends (\n   ABMobileViewFormSelectMultipleCore\n) {};\n","const ABMobileViewFormSelectSingleCore = require(\"../../core/mobile/ABMobileViewFormSelectSingleCore\");\n\nmodule.exports = class ABMobileViewFormSelectSingle extends (\n   ABMobileViewFormSelectSingleCore\n) {};\n","const ABMobileViewFormTextboxCore = require(\"../../core/mobile/ABMobileViewFormTextboxCore\");\n\nmodule.exports = class ABMobileViewFormTextbox extends (\n   ABMobileViewFormTextboxCore\n) {\n   // warningsEval() {\n   //    super.warningsEval();\n   //    this.warningsMessage(`${k} references an unknown Page.`);\n   // }\n};\n","const ABMobileViewLabelCore = require(\"../../core/mobile/ABMobileViewLabelCore\");\n// const ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABMobileViewLabel extends ABMobileViewLabelCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   // component() {\n\n   //    // return new ABViewLabelComponent(this);\n   // }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABMobileViewListCore = require(\"../../core/mobile/ABMobileViewListCore\");\n\nmodule.exports = class ABMobileViewList extends ABMobileViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   warningsEval() {\n      super.warningsEval();\n\n      [\"linkPageAdd\", \"linkPageDetail\"].forEach((k) => {\n         if (this.settings[k]) {\n            let page = this.application.pageByID(this.settings[k], true);\n            if (!page) {\n               this.warningsMessage(`${k} references an unknown Page.`);\n            }\n         }\n      });\n   }\n};\n","const ABMobileViewTimelineCore = require(\"../../core/mobile/ABMobileViewTimelineCore\");\n\nmodule.exports = class ABMobileViewTimeline extends ABMobileViewTimelineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   warningsEval() {\n      super.warningsEval();\n\n      [\"linkPageAdd\", \"linkPageDetail\"].forEach((k) => {\n         if (this.settings[k]) {\n            let page = this.application.pageByID(this.settings[k], true);\n            if (!page) {\n               this.warningsMessage(`${k} references an unknown Page.`);\n            }\n         }\n      });\n   }\n};\n","/**\n * ABProcessLane\n * manages a lane in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nvar ABProcessLaneCore = require(\"../../core/process/ABProcessLaneCore\");\n\nmodule.exports = class ABProcessLane extends ABProcessLaneCore {\n   // constructor(attributes, process, application) {\n   //    super(attributes, process, application);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   transferParticipantWhereToMe(id) {\n      var myParticipant = this.process.elementForDiagramID(id);\n      if (myParticipant) {\n         // if I haven't already set my where clause, and my Participant\n         // has one, then take it:\n         if (!this.stashed && myParticipant.stashed) {\n            var copyParams = [\n               \"stashed\",\n               \"useRole\",\n               \"role\",\n               \"useAccount\",\n               \"account\",\n            ];\n            copyParams.forEach((p) => {\n               var swap = this[p];\n               this[p] = myParticipant[p];\n               myParticipant[p] = swap; // ?? do this ??\n            });\n         }\n      }\n   }\n\n   /**\n    * fromElement()\n    * initialize this Lane's values from the given BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n\n      // on creation, if I have child objects, then move the .where definition\n      // from my parent Participant to ME\n      if (element.children && element.children.length > 0) {\n         if (element.parent && element.parent.type == \"bpmn:Participant\") {\n            this.transferParticipantWhereToMe(element.parent.id);\n         }\n      } else {\n         // this info might just reside in the .parent.children[]\n         if (\n            element.parent &&\n            element.parent.children &&\n            element.parent.children.length > 0\n         ) {\n            element.parent.children.forEach((child) => {\n               if (child.type != \"bpmn:Lane\") {\n                  // if child has lanes\n                  if (\n                     child.businessObject.lanes &&\n                     child.businessObject.lanes.length > 0\n                  ) {\n                     // if lane is me\n                     var myLane = child.businessObject.lanes.find((l) => {\n                        return l.id == this.diagramID;\n                     });\n                     if (myLane) {\n                        this.transferParticipantWhereToMe(element.parent.id);\n\n                        // tell child I'm it's lane:\n                        var objChild = this.process.elementForDiagramID(\n                           child.id\n                        );\n                        if (objChild) {\n                           objChild.setLane(this);\n                        }\n                     }\n                  }\n               }\n            });\n         }\n      }\n\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Lane with information that was relevant\n    * from the provided BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // if I picked up a new task, inform it I am it's lane:\n   }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system (when there are no lanes defined)\n * and provide a way to lookup a SiteUser.\n */\nvar ABProcessParticipantCore = require(\"../../core/process/ABProcessParticipantCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessParticipant extends ABProcessParticipantCore {\n   // constructor(attributes, process, AB) {\n   //    super(attributes, process, AB);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   /**\n    * fromElement()\n    * initialize this Participant's values from the given BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Participant with information that was relevant\n    * from the provided BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      if (defElement.children) {\n         var laneIDs = [];\n         defElement.children.forEach((c) => {\n            if (c.type == \"bpmn:Lane\") {\n               laneIDs.push(c.id);\n            }\n         });\n         this.laneIDs = laneIDs;\n      }\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this objec.\n    * @return {json}\n    */\n   diagramProperties() {\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n   }\n};\n","const ABProcessElementCore = require(\"../../../core/process/tasks/ABProcessElementCore.js\");\n\nmodule.exports = class ABProcessElement extends ABProcessElementCore {\n   // constructor(attributes, process, AB, defaultValues) {\n   //    super(attributes, process, AB, defaultValues);\n\n   //    // listen\n   // }\n\n   /**\n    * @method destroy()\n    * remove this task definition.\n    * @return {Promise}\n    */\n   destroy() {\n      ////\n      //// TODO: once our core conversion is complete, this .save() can be\n      //// moved to ABProcessTaskCore, and our ABDefinition.save() can take\n      //// care of the proper method to save depending on the current Platform.\n      ////\n      // return this.toDefinition()\n      //     .destroy()\n\n      return super.destroy().then(() => {\n         return this.process.elementRemove(this);\n      });\n   }\n\n   isValid() {\n      /*\n        var validator = OP.Validation.validator();\n\n        // label/name must be unique:\n        var isNameUnique =\n            this.AB.processes((o) => {\n                return o.name.toLowerCase() == this.name.toLowerCase();\n            }).length == 0;\n        if (!isNameUnique) {\n            validator.addError(\n                \"name\",\n                L(\n                    \"ab.validation.object.name.unique\",\n                    `Process name must be unique (\"${this.name}\"\" already used in this Application)`\n                )\n            );\n        }\n\n        return validator;\n        */\n\n      // var isValid =\n      //     this.AB.processes((o) => {\n      //         return o.name.toLowerCase() == this.name.toLowerCase();\n      //     }).length == 0;\n      // return isValid;\n\n      return true;\n   }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   findLane(curr, cb) {\n      if (!curr) {\n         cb(null, null);\n         return;\n      }\n\n      // if current object has a LANE definition, use that one:\n      if (curr.lanes && curr.lanes.length > 0) {\n         cb(null, curr.lanes[0]);\n      } else if (curr.$type == \"bpmn:Participant\") {\n         // if the current is a Participant, take that one\n         cb(null, curr);\n      } else {\n         // else move upwards and check again:\n         curr = curr.$parent;\n         this.findLane(curr, cb);\n      }\n   }\n\n   setLane(Lane) {\n      this.laneDiagramID = Lane.diagramID;\n   }\n\n   /**\n    * fromElement()\n    * initialize this Task's values from the given BPMN:Element\n    * @param {BPMNElement}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Task_08j07ni\",\n                \"width\": 100,\n                \"height\": 80,\n                \"type\": \"bpmn:SendTask\",\n                \"x\": 20,\n                \"y\": -2130,\n                \"order\": {\n                    \"level\": 5\n                },\n                \"businessObject\": {\n                    \"$type\": \"bpmn:SendTask\",\n                    \"id\": \"Task_08j07ni\",\n                    \"name\": \"ffff\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": 20,\n                            \"y\": -2130,\n                            \"width\": 100,\n                            \"height\": 80\n                        },\n                        \"id\": \"SendTask_0iidv6o_di\"\n                    }\n\n                    // Some elements (like EndEvents) have:\n                    .eventDefinitions: [\n                        {\n                            $type: \"actual bpmn:ElementType\",\n                            ...\n                        }\n                    ]\n                },\n                \"incoming\":[],\n                \"outgoing\":[]\n            }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // our lane may have changed:\n      var currObj = defElement.businessObject;\n      this.findLane(currObj, (err, obj) => {\n         if (obj) {\n            this.laneDiagramID = obj.id;\n         } else {\n            // if my parent shape is a Participant, then use that:\n            if (\n               defElement.parent &&\n               defElement.parent.type == \"bpmn:Participant\"\n            ) {\n               this.laneDiagramID = defElement.parent.id;\n            } else {\n               this.laneDiagramID = null;\n            }\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      const warnings = this.warnings();\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n            warn: warnings.length ? warnings : null,\n         },\n      ];\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ui = {\n         id: id,\n         view: \"label\",\n         label: \"this task has not implement properties yet...\",\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {}\n\n   /**\n    * property()\n    * return the specific property value if it exists.\n    * @return {mixed} | undefined\n    */\n   property(id) {\n      if ($$(id)) {\n         return $$(id).getValue();\n      }\n   }\n\n   /**\n    * switchTo()\n    * replace this object with an instance of one of our child classes:\n    * @param {ABProcessTask*} child\n    *        an instance of the new Process Task we are replaced with.\n    * @param {string} propertiesID\n    *        the webix ui.id container for the properties panel.\n    */\n   switchTo(child, propertiesID) {\n      // remove myself from our containing process's elements\n      this.process.elementRemove(this);\n\n      // add the new Process WITH the same id\n      this.process.elementAdd(child);\n\n      // show the child properties:\n      child.propertiesShow(propertiesID);\n\n      this.emit(\"switchTo\", child);\n   }\n\n   /**\n    * @method warningsEval()\n    * re-evaluate our warnings for this Process Task.\n    * Most of our ProcessTasks need to also verify data related to\n    * other available tasks, so we need to call the onProcessReady()\n    * so we can access those values.\n    */\n   warningsEval() {\n      super.warningsEval();\n      this.onProcessReady();\n\n      // if this isn't an end type of task, then there must be\n      // > 0 next tasks\n      if (!this.isEndTask()) {\n         const myOutgoingConnections = this.process.connectionsOutgoing(\n            this.diagramID\n         );\n         if (myOutgoingConnections.length < 1) {\n            this.warningMessage(\"should have another task after this one\");\n         }\n      }\n   }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(msg, data = {}) {\n      let message = `${this.defaults.key}[${\n         this.label ? this.label : this.name\n      }]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABProcessEndCore = require(\"../../../core/process/tasks/ABProcessEndCore.js\");\n\nmodule.exports = class ABProcessEnd extends ABProcessEndCore {\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n};\n","const ABProcessGatewayExclusiveCore = require(\"../../../core/process/tasks/ABProcessGatewayExclusiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessGatewayExclusive extends (\n   ABProcessGatewayExclusiveCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      // the first entry is for the gateway element itself\n      var properties = super.diagramProperties();\n      /*[\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n      */\n\n      // now add any additional updates for each of our connections:\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         properties.push({\n            id: conn.id,\n            def: {\n               name: this.conditions[conn.id]?.label ?? \"\",\n            },\n         });\n      });\n      return properties;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      // make sure we have > 1 connection.\n      const myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      if (myOutgoingConnections.length < 2) {\n         this.warningMessage(\"should have multiple outgoing connections\");\n      }\n\n      // make sure there is no more then 1 connection that doesn't have\n      // a condition:\n      let numCondWithOne = 0;\n      myOutgoingConnections.forEach((c) => {\n         if ((this.conditions[c.id]?.filterValue.rules?.length ?? 0) == 0) {\n            numCondWithOne++;\n         }\n      });\n\n      if (numCondWithOne > 1) {\n         this.warningMessage(\n            \"should not have more than 1 unfiltered connection.\"\n         );\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskEmailCore = require(\"../../../core/process/tasks/ABProcessTaskEmailCore.js\");\n\nmodule.exports = class ABProcessTaskEmail extends ABProcessTaskEmailCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      // check for warnings:\n\n      if (!this.subject) {\n         this.warningMessage(\"is missing a subject\");\n      }\n\n      if (!this.message) {\n         this.warningMessage(\"is missing a message\");\n      }\n\n      this.verifySetting(\"to\");\n      this.verifySetting(\"from\");\n      this.verifyNextLane(\"to\");\n      if (this.from == \"0\") {\n         let thisLane = this.myLane();\n         if (!thisLane) {\n            this.warningMessage(\n               \"can not resolve the lane participant for [.from] field.\"\n            );\n         }\n      }\n      this.verifyRoleAccount(\"to\", \"toUsers\");\n      this.verifyRoleAccount(\"from\", \"fromUsers\");\n   }\n\n   /**\n    * @method verifySetting()\n    * make sure the given field key has a value assigned.\n    * @param {string} key\n    *        the property of this object to check. (to, from)\n    */\n   verifySetting(key) {\n      if (this[key] == \"\") {\n         this.warningMessage(`does not have a [${key}] setting.`);\n      }\n   }\n\n   /**\n    * @method verifyNextLane()\n    * make sure we can access a Lane for the given property key.\n    * The \"to\" field can reference the \"Next Participant\". This checks to\n    * see if we can reference a lane for the next task.\n    * @param {string} key\n    *        the property that has the value for Next Participant. [to]\n    */\n   verifyNextLane(key) {\n      if (this[key] === \"0\") {\n         // Next Participant\n         // we need to resolve our next task and see if we can pull the participant info from it.\n\n         let nextTasks = this.process.connectionNextTask(this);\n         let nextLanesResolved = true;\n         nextTasks.forEach((t) => {\n            let lane = t.myLane();\n            if (!lane) {\n               nextLanesResolved = false;\n            }\n         });\n         if (!nextLanesResolved || nextTasks.length == 0) {\n            this.warningMessage(\n               `can not resolve next lane participant for [${key}] field.`\n            );\n         }\n      }\n   }\n\n   /**\n    * @method verifyRoleAccount()\n    * Check to see if the provided property is set to use a Role/Account for\n    * the email, and make sure there are values set for what is chosen.\n    * @param {string} key\n    *        the property we are currently validating.\n    * @param {string} valKey\n    *        the property that contains the specific value object.\n    */\n   verifyRoleAccount(key, valKey) {\n      if (this[key] == \"1\") {\n         if (this[valKey]) {\n            if (this[valKey].useRole) {\n               if (this[valKey].role.length == 0) {\n                  this.warningMessage(`can not resolve [${key}] Role setting.`);\n               }\n            }\n            if (this[valKey].useAccount) {\n               if (this[valKey].account.length == 0) {\n                  this.warningMessage(\n                     `can not resolve [${key}] Account setting.`\n                  );\n               }\n            }\n            // TODO:\n            // if (this[valKey].userFields.length > 0) {\n            //    // how to know if this is a problem?\n            // }\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCore.js\");\n\nmodule.exports = class ABProcessTaskService extends ABProcessTaskServiceCore {};\n","const AccountingBatchProcessingCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingBatchProcessing extends (\n   AccountingBatchProcessingCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         fieldBatchEntries: `${id}_fieldBatchEntries`,\n         fieldBatchFinancialPeriod: `${id}_fieldBatchFinancialPeriod`,\n         objectJE: `${id}_objectJE`,\n         fieldJEAccount: `${id}_fieldJEAccount`,\n         fieldJERC: `${id}_fieldJERC`,\n         fieldJEStatus: `${id}_fieldJEStatus`,\n         fieldJEStatusComplete: `${id}_fieldJEStatusComplete`,\n         objectBR: `${id}_objectBR`,\n         fieldBRFinancialPeriod: `${id}_fieldBRFinancialPeriod`,\n         fieldBRAccount: `${id}_fieldBRAccount`,\n         fieldBRRC: `${id}_fieldBRRC`,\n         fieldBREntries: `${id}_fieldBREntries`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      //\n      // set up field settings:\n      //\n\n      var blankField = {\n         id: 0,\n         value: L(\"Select a Field\"),\n      };\n      // blankField : generic Select a field entry\n\n      function defaultFields(objID) {\n         // create a new options array of Field Choices for the given obj.id\n\n         var fields = [blankField];\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      }\n\n      function updateFields(fieldPickers, fieldValues, defaultValue) {\n         // update the list of field select choices with the new field choices\n\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               // if (defaultValue) {\n               //    picker.define(\"value\", defaultValue);\n               // } else {\n               //    picker.define(\"value\", fieldValues[0].value);\n               // }\n               picker.refresh();\n               picker.show();\n            }\n         });\n      }\n\n      var batchFields = defaultFields(this.objectBatch);\n      // batchFields : the default list of fields for the Batch Object\n\n      var fieldPickersBatch = [\n         ids.fieldBatchEntries,\n         ids.fieldBatchFinancialPeriod,\n      ];\n      // fieldPickersBatch : the list of field selects to update for the Batch\n      //      object.\n\n      var jeFields = defaultFields(this.objectJE);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersJE = [\n         ids.fieldJEAccount,\n         ids.fieldJERC,\n         ids.fieldJEStatus,\n      ];\n      // fieldPickersJE : the list of field selects to update for the Journal Entry\n      //      object.\n\n      function compileStatusValues(statusField) {\n         var values = [{ id: 0, value: L(\"Select the Complete Value\") }];\n         if (statusField && statusField.options) {\n            statusField.options().forEach((o) => {\n               values.push({ id: o.id, value: o.text });\n            });\n         }\n         return values;\n      }\n\n      function updatePickerStatusComplete(values) {\n         var wbxComplete = $$(ids.fieldJEStatusComplete);\n         if (wbxComplete) {\n            // update fieldJEStatusComplete options\n            wbxComplete.define(\"options\", values);\n            wbxComplete.refresh();\n            // show fieldJEStatusComplete\n            wbxComplete.show();\n         }\n      }\n\n      function onStatusComplete(newVal) {\n         // pull the ABField object from newValue\n         var jeEntryID = $$(ids.objectJE).getValue();\n         var jeEntry = objectList.find((o) => o.id == jeEntryID);\n         if (jeEntry && jeEntry.object) {\n            var statusField = jeEntry.object.fieldByID(newVal);\n            if (statusField && statusField.options) {\n               // get the options as an []\n               jeFieldStatusValues = compileStatusValues(statusField);\n\n               updatePickerStatusComplete(jeFieldStatusValues);\n            }\n         }\n      }\n\n      var jeFieldStatusValues = compileStatusValues();\n      // jeFieldStatusValues : the list of status options from the fieldJEStatus\n      //      selected entry.\n\n      var brFields = defaultFields(this.objectBR);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersBR = [\n         ids.fieldBRFinancialPeriod,\n         ids.fieldBRAccount,\n         ids.fieldBRRC,\n         ids.fieldBREntries,\n      ];\n      // fieldPickersBR : the list of field selects to update for the Balance Record\n      //      object.\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        batchFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBatch, batchFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchEntries,\n               view: \"select\",\n               label: L(\"Batch->JE[]\"),\n               value: this.fieldBatchEntries,\n               name: \"fieldBatchEntries\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBatchFinancialPeriod,\n               view: \"select\",\n               label: L(\"Batch->FinancialPeriod\"),\n               value: this.fieldBatchFinancialPeriod,\n               name: \"fieldBatchFinancialPeriod\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"Journal Entry Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        jeFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersJE, jeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEAccount,\n               view: \"select\",\n               label: L(\"JE->Account\"),\n               value: this.fieldJEAccount,\n               name: \"fieldJEAccount\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJERC,\n               view: \"select\",\n               label: L(\"JE->RC\"),\n               value: this.fieldJERC,\n               name: \"fieldJERC\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJEStatus,\n               view: \"select\",\n               label: L(\"JE->Status\"),\n               value: this.fieldJEStatus,\n               name: \"fieldJEStatus\",\n               options: jeFields,\n               hidden: true,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        onStatusComplete(newVal);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEStatusComplete,\n               view: \"select\",\n               label: L(\"JE->Status->Complete\"),\n               value: this.fieldJEStatusComplete,\n               name: \"fieldJEStatusComplete\",\n               options: jeFieldStatusValues,\n               hidden: true,\n            },\n            {\n               id: ids.objectBR,\n               view: \"select\",\n               label: L(\"Balance Record\"),\n               value: this.objectBR,\n               name: \"objectBR\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        brFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBR, brFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBRFinancialPeriod,\n               view: \"select\",\n               label: L(\"BR->FP\"),\n               value: this.fieldBRFinancialPeriod,\n               name: \"fieldBRFinancialPeriod\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRAccount,\n               view: \"select\",\n               label: L(\"BR->Account\"),\n               value: this.fieldBRAccount,\n               name: \"fieldBRAccount\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRRC,\n               view: \"select\",\n               label: L(\"BR->RC\"),\n               value: this.fieldBRRC,\n               name: \"fieldBRRC\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBREntries,\n               view: \"select\",\n               label: L(\"BR->Entries\"),\n               value: this.fieldBREntries,\n               name: \"fieldBREntries\",\n               options: brFields,\n               hidden: true,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      // if there are already default values for our Objects,\n      // unhide the field selectors:\n      if (this.objectBatch && this.objectBatch != 0) {\n         updateFields(fieldPickersBatch, batchFields);\n      }\n\n      if (this.objectJE && this.objectJE != 0) {\n         updateFields(fieldPickersJE, jeFields);\n      }\n\n      if (this.fieldJEStatus) {\n         onStatusComplete(this.fieldJEStatus);\n      }\n\n      if (this.objectBR && this.objectBR != 0) {\n         updateFields(fieldPickersBR, brFields);\n      }\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPClose extends AccountingFPCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPValue: `${id}_processFPValue`,\n         objectFP: `${id}_objectFP`,\n         objectGL: `${id}_objectGL`,\n         objectAcc: `${id}_objectAcc`,\n         fieldFPStart: `${id}_fieldFPStart`,\n         fieldFPOpen: `${id}_fieldFPOpen`,\n         fieldFPStatus: `${id}_fieldFPStatus`,\n         fieldFPActive: `${id}_fieldFPActive`,\n         fieldGLStarting: `${id}_fieldGLStarting`,\n         fieldGLRunning: `${id}_fieldGLRunning`,\n         fieldGLAccount: `${id}_fieldGLAccount`,\n         fieldGLRc: `${id}_fieldGLRc`,\n         fieldGLDebit: `${id}fieldGLDebit`,\n         fieldGLCredit: `${id}_fieldGLCredit`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccAsset: `${id}_fieldAccAsset`,\n         fieldAccExpense: `${id}_fieldAccExpense`,\n         fieldAccLiabilities: `${id}_fieldAccLiabilities`,\n         fieldAccEquity: `${id}_fieldAccEquity`,\n         fieldAccIncome: `${id}_fieldAccIncome`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      };\n\n      let getStatusFieldOptions = (statusFieldId) => {\n         let result = [];\n         let fpObject = this.AB.objectByID(this.objectFP);\n         if (!fpObject) return result;\n\n         let fpStatusField = fpObject.fieldByID(statusFieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateFPFields = (fpFields) => {\n         [ids.fieldFPStart, ids.fieldFPOpen, ids.fieldFPStatus].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", fpFields);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateFPStatusFields = (fpStatusOptions) => {\n         $$(ids.fieldFPActive).define(\"options\", fpStatusOptions);\n         $$(ids.fieldFPActive).refresh();\n      };\n\n      let updateGLFields = (glFields) => {\n         [\n            ids.fieldGLRunning,\n            ids.fieldGLAccount,\n            ids.fieldGLRc,\n            ids.fieldGLDebit,\n            ids.fieldGLCredit,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", glFields);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccAsset,\n            ids.fieldAccExpense,\n            ids.fieldAccLiabilities,\n            ids.fieldAccEquity,\n            ids.fieldAccIncome,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let fpFields = getFieldOptions(this.objectFP);\n      let glFields = getFieldOptions(this.objectGL);\n      let accFields = getFieldOptions(this.objectAcc);\n      let fpStatusFields = getStatusFieldOptions(this.fieldFPStatus);\n      let accTypeOptions = getListOptions(this.objectAcc, this.fieldAccType);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Value\"),\n               value: this.processFPValue,\n               name: \"processFPValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFP,\n               view: \"select\",\n               label: L(\"FP Object\"),\n               value: this.objectFP,\n               name: \"objectFP\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        fpFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFPFields(fpFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"GL Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        glFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateGLFields(glFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAcc,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAcc,\n               name: \"objectAcc\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        accFields = getFieldOptions(newVal);\n                        updateAccFields(accFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPStart,\n               view: \"select\",\n               label: L(\"FP -> Start\"),\n               value: this.fieldFPStart,\n               name: \"fieldFPStart\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPOpen,\n               view: \"select\",\n               label: L(\"FP -> Open\"),\n               value: this.fieldFPOpen,\n               name: \"fieldFPOpen\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPStatus,\n               view: \"select\",\n               label: L(\"FP -> Status\"),\n               value: this.fieldFPStatus,\n               name: \"fieldFPStatus\",\n               options: fpFields,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        fpStatusFields = getStatusFieldOptions(newVal);\n                        updateFPStatusFields(fpStatusFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPActive,\n               view: \"select\",\n               label: L(\"FP -> Active\"),\n               value: this.fieldFPActive,\n               name: \"fieldFPActive\",\n               options: fpStatusFields,\n            },\n            {\n               id: ids.fieldGLStarting,\n               view: \"select\",\n               label: L(\"GL -> Starting BL\"),\n               value: this.fieldGLStarting,\n               name: \"fieldGLStarting\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRunning,\n               view: \"select\",\n               label: L(\"GL -> Running BL\"),\n               value: this.fieldGLRunning,\n               name: \"fieldGLRunning\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLAccount,\n               view: \"select\",\n               label: L(\"GL -> Account\"),\n               value: this.fieldGLAccount,\n               name: \"fieldGLAccount\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLRc,\n               name: \"fieldGLRc\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLDebit,\n               view: \"select\",\n               label: L(\"GL -> Debit\"),\n               value: this.fieldGLDebit,\n               name: \"fieldGLDebit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLCredit,\n               view: \"select\",\n               label: L(\"GL -> Credit\"),\n               value: this.fieldGLCredit,\n               name: \"fieldGLCredit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAcc || $$(ids.objectAcc).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccAsset,\n               view: \"select\",\n               label: L(\"Acc -> Asset\"),\n               value: this.fieldAccAsset,\n               name: \"fieldAccAsset\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccExpense,\n               name: \"fieldAccExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccLiabilities,\n               view: \"select\",\n               label: L(\"Acc -> Liabilities\"),\n               value: this.fieldAccLiabilities,\n               name: \"fieldAccLiabilities\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccEquity,\n               name: \"fieldAccEquity\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccIncome,\n               name: \"fieldAccIncome\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPYearCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPYearClose extends AccountingFPYearCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPYearValue: `${id}_processFPYearValue`,\n         objectFPYear: `${id}_objectFPYear`,\n         objectFPMonth: `${id}_objectFPMonth`,\n         objectGL: `${id}_objectGL`,\n         objectAccount: `${id}_objectAccount`,\n         valueFundBalances: `${id}_valueFundBalances`,\n         valueNetIncome: `${id}_valueNetIncome`,\n         fieldFPYearStart: `${id}_fieldFPYearStart`,\n         fieldFPYearEnd: `${id}_fieldFPYearEnd`,\n         fieldFPYearStatus: `${id}_fieldFPYearStatus`,\n         fieldFPYearActive: `${id}_fieldFPYearActive`,\n         fieldFPMonthStart: `${id}_fieldFPMonthStart`,\n         fieldFPMonthEnd: `${id}_fieldFPMonthEnd`,\n         fieldGLStartBalance: `${id}_fieldGLStartBalance`,\n         fieldGLRunningBalance: `${id}_fieldGLRunningBalance`,\n         fieldGLrc: `${id}_fieldGLrc`,\n         fieldAccNumber: `${id}_fieldAccNumber`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccTypeIncome: `${id}_fieldAccTypeIncome`,\n         fieldAccTypeExpense: `${id}_fieldAccTypeExpense`,\n         fieldAccTypeEquity: `${id}_fieldAccTypeEquity`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID, fieldKey) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object\n                  .fields((f) => f.key == fieldKey)\n                  .forEach((f) => {\n                     fields.push({ id: f.id, value: f.label, field: f });\n                  });\n            }\n         }\n         return fields;\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateAccNumberFields = (accNumberFields) => {\n         $$(ids.fieldAccNumber).define(\"options\", accNumberFields);\n         $$(ids.fieldAccNumber).refresh();\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccTypeIncome,\n            ids.fieldAccTypeExpense,\n            ids.fieldAccTypeEquity,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearDateOptions = (fpYearDateOptions) => {\n         [ids.fieldFPYearStart, ids.fieldFPYearEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpYearDateOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearStatusOptions = (fpYearStatusFields) => {\n         $$(ids.fieldFPYearStatus).define(\"options\", fpYearStatusFields);\n         $$(ids.fieldFPYearStatus).refresh();\n      };\n\n      let updateFPYearActiveOptions = (fpYearStatusOptions) => {\n         $$(ids.fieldFPYearActive).define(\"options\", fpYearStatusOptions);\n         $$(ids.fieldFPYearActive).refresh();\n      };\n\n      let updateFPMonthDateFields = (fpMonthDateOpts) => {\n         [ids.fieldFPMonthStart, ids.fieldFPMonthEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpMonthDateOpts);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateGlNumberFields = (glNumberOptions) => {\n         [ids.fieldGLStartBalance, ids.fieldGLRunningBalance].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", glNumberOptions);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateGlConnectFields = (glRcOptions) => {\n         $$(ids.fieldGLrc).define(\"options\", glRcOptions);\n         $$(ids.fieldGLrc).refresh();\n      };\n\n      let fpYearDateFields = getFieldOptions(this.objectFPYear, \"date\");\n      let fpYearStatusFields = getFieldOptions(this.objectFPYear, \"list\");\n      let fpYearStatusOptions = getListOptions(\n         this.objectFPYear,\n         this.fieldFPYearStatus\n      );\n      let fpMonthDateFields = getFieldOptions(this.objectFPMonth, \"date\");\n      let glNumberFields = getFieldOptions(this.objectGL, \"number\");\n      let glRcFields = getFieldOptions(this.objectGL, \"connectObject\");\n      let accNumberFields = getFieldOptions(this.objectAccount, \"number\");\n      let accTypeFields = getFieldOptions(this.objectAccount, \"list\");\n      let accTypeOptions = getListOptions(\n         this.objectAccount,\n         this.fieldAccType\n      );\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPYearValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Year Value\"),\n               value: this.processFPYearValue,\n               name: \"processFPYearValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFPYear,\n               view: \"select\",\n               label: L(\"FP Year Object\"),\n               value: this.objectFPYear,\n               name: \"objectFPYear\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPYearDateOptions(fpYearDateFields);\n\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateFPYearStatusOptions(accTypeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectFPMonth,\n               view: \"select\",\n               label: L(\"FP Month Object\"),\n               value: this.objectFPMonth,\n               name: \"objectFPMonth\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpMonthDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPMonthDateFields(fpMonthDateFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"Balance Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        glNumberFields = getFieldOptions(newVal, \"number\");\n                        updateGlNumberFields(glNumberFields);\n\n                        glRcFields = getFieldOptions(newVal, \"connectObject\");\n                        updateGlConnectFields(glRcFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAccount,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAccount,\n               name: \"objectAccount\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateAccFields(accTypeFields);\n\n                        accNumberFields = getFieldOptions(newVal, \"number\");\n                        updateAccNumberFields(accNumberFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.valueFundBalances,\n               view: \"text\",\n               label: L(\"Fund Balances Code\"),\n               value: this.valueFundBalances,\n               name: \"valueFundBalances\",\n            },\n            {\n               id: ids.valueNetIncome,\n               view: \"text\",\n               label: L(\"Net Income Code\"),\n               value: this.valueNetIncome,\n               name: \"valueNetIncome\",\n            },\n            {\n               id: ids.fieldFPYearStart,\n               view: \"select\",\n               label: L(\"FP Year -> Start\"),\n               value: this.fieldFPYearStart,\n               name: \"fieldFPYearStart\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearEnd,\n               view: \"select\",\n               label: L(\"FP Year -> End\"),\n               value: this.fieldFPYearEnd,\n               name: \"fieldFPYearEnd\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearStatus,\n               view: \"select\",\n               label: L(\"FP Year -> Status\"),\n               value: this.fieldFPYearStatus,\n               name: \"fieldFPYearStatus\",\n               options: fpYearStatusFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearStatusOptions = getListOptions(\n                           this.objectFPYear || $$(ids.objectFPYear).getValue(),\n                           newVal\n                        );\n                        updateFPYearActiveOptions(fpYearStatusOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPYearActive,\n               view: \"select\",\n               label: L(\"FP Year -> Active\"),\n               value: this.fieldFPYearActive,\n               name: \"fieldFPYearActive\",\n               options: fpYearStatusOptions,\n            },\n            {\n               id: ids.fieldFPMonthStart,\n               view: \"select\",\n               label: L(\"FP Month -> Start\"),\n               value: this.fieldFPMonthStart,\n               name: \"fieldFPMonthStart\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldFPMonthEnd,\n               view: \"select\",\n               label: L(\"FP Month -> End\"),\n               value: this.fieldFPMonthEnd,\n               name: \"fieldFPMonthEnd\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldGLStartBalance,\n               view: \"select\",\n               label: L(\"GL -> Start Balance\"),\n               value: this.fieldGLStartBalance,\n               name: \"fieldGLStartBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLRunningBalance,\n               view: \"select\",\n               label: L(\"GL -> Running Balance\"),\n               value: this.fieldGLRunningBalance,\n               name: \"fieldGLRunningBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLrc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLrc,\n               name: \"fieldGLrc\",\n               options: glRcFields,\n            },\n            {\n               id: ids.fieldAccNumber,\n               view: \"select\",\n               label: L(\"Acc -> Account Number\"),\n               value: this.fieldAccNumber,\n               name: \"fieldAccNumber\",\n               options: accNumberFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accTypeFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAccount ||\n                              $$(ids.objectAccount).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccTypeIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccTypeIncome,\n               name: \"fieldAccTypeIncome\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccTypeExpense,\n               name: \"fieldAccTypeExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccTypeEquity,\n               name: \"fieldAccTypeEquity\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingJEArchiveCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingJEArchive extends AccountingJEArchiveCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         objectBalance: `${id}_objectBalance`,\n         objectJE: `${id}_objectJE`,\n         objectJEArchive: `${id}_objectJEArchive`,\n\n         fieldBatchFiscalMonth: `${id}_fieldBatchFiscalMonth`,\n         fieldJeAccount: `${id}_fieldJeAccount`,\n         fieldJeRC: `${id}_fieldJeRC`,\n         fieldJeArchiveBalance: `${id}_fieldJeArchiveBalance`,\n         fieldBrFiscalMonth: `${id}_fieldBrFiscalMonth`,\n         fieldBrAccount: `${id}_fieldBrAccount`,\n         fieldBrRC: `${id}_fieldBrRC`,\n\n         fieldsMatch: `${id}_fieldsMatch`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      let processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      let objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getConnectFieldOptions = (objectId) => {\n         let object = this.AB.objectByID(objectId);\n         if (!object) return [];\n\n         let options = object\n            .fields((f) => f.isConnection)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         options.unshift({\n            id: 0,\n            value: L(\"Select a Field\"),\n         });\n\n         return options;\n      };\n\n      let updateFields = (fieldPickers, fieldValues) => {\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               picker.refresh();\n               picker.show();\n            }\n         });\n      };\n\n      let refreshBatchFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldBatchFiscalMonth], options);\n      };\n\n      let refreshBRFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields(\n            [ids.fieldBrAccount, ids.fieldBrFiscalMonth, ids.fieldBrRC],\n            options\n         );\n      };\n\n      let refreshJeFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeAccount, ids.fieldJeRC], options);\n      };\n\n      let refreshJeArchiveFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeArchiveBalance], options);\n      };\n\n      let refreshFieldsMatch = () => {\n         let $fieldsMatch = $$(ids.fieldsMatch);\n         if (!$fieldsMatch) return;\n\n         // clear form\n         webix.ui([], $fieldsMatch);\n\n         let JEObj = this.AB.objectByID(this.objectJE);\n         if (!JEObj) return;\n\n         let JEArchiveObj = this.AB.objectByID(this.objectJEArchive);\n         if (!JEArchiveObj) return;\n\n         // create JE acrhive field options to the form\n         JEArchiveObj.fields().forEach((f) => {\n            let jeFields = [];\n\n            if (f.isConnection) {\n               jeFields = JEObj.fields((fJe) => {\n                  return (\n                     fJe.isConnection &&\n                     fJe.settings &&\n                     f.settings &&\n                     fJe.settings.linkObject == f.settings.linkObject &&\n                     fJe.settings.linkType == f.settings.linkType &&\n                     fJe.settings.linkViaType == f.settings.linkViaType &&\n                     fJe.settings.isCustomFK == f.settings.isCustomFK\n                  );\n               });\n            } else {\n               jeFields = JEObj.fields((fJe) => fJe.key == f.key);\n            }\n\n            jeFields = jeFields.map((fJe) => {\n               return {\n                  id: fJe.id,\n                  value: fJe.label,\n               };\n            });\n\n            $fieldsMatch.addView({\n               view: \"select\",\n               name: f.id,\n               label: f.label,\n               options: jeFields,\n            });\n         });\n\n         $fieldsMatch.setValues(this.fieldsMatch || {});\n      };\n\n      let fieldBatchList = getConnectFieldOptions(this.objectBatch);\n      let fieldBalanceList = getConnectFieldOptions(this.objectBalance);\n      let fieldJeList = getConnectFieldOptions(this.objectJE);\n      let fieldJeArchiveList = getConnectFieldOptions(this.objectJEArchive);\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 180,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBatch = newVal;\n                     refreshBatchFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchFiscalMonth,\n               view: \"select\",\n               label: L(\"Batch -> Fiscal Month\"),\n               value: this.fieldBatchFiscalMonth,\n               name: \"fieldBatchFiscalMonth\",\n               options: fieldBatchList,\n            },\n            {\n               id: ids.objectBalance,\n               view: \"select\",\n               label: L(\"BR Object\"),\n               value: this.objectBalance,\n               name: \"objectBalance\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBalance = newVal;\n                     refreshBRFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBrFiscalMonth,\n               view: \"select\",\n               label: L(\"BR -> Fiscal Month\"),\n               value: this.fieldBrFiscalMonth,\n               name: \"fieldBrFiscalMonth\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrAccount,\n               view: \"select\",\n               label: L(\"BR -> Account\"),\n               value: this.fieldBrAccount,\n               name: \"fieldBrAccount\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrRC,\n               view: \"select\",\n               label: L(\"BR -> RC\"),\n               value: this.fieldBrRC,\n               name: \"fieldBrRC\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"JE Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJE = newVal;\n                     refreshJeFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeAccount,\n               view: \"select\",\n               label: L(\"JE -> Account\"),\n               value: this.fieldJeAccount,\n               name: \"fieldJeAccount\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.fieldJeRC,\n               view: \"select\",\n               label: L(\"JE -> RC\"),\n               value: this.fieldJeRC,\n               name: \"fieldJeRC\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.objectJEArchive,\n               view: \"select\",\n               label: L(\"JE Archive Object\"),\n               value: this.objectJEArchive,\n               name: \"objectJEArchive\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJEArchive = newVal;\n                     refreshJeArchiveFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeArchiveBalance,\n               view: \"select\",\n               label: L(\"JE Archive -> BR\"),\n               value: this.fieldJeArchiveBalance,\n               name: \"fieldJeArchiveBalance\",\n               options: fieldJeArchiveList,\n            },\n            {\n               view: \"fieldset\",\n               label: \"Fields Matching\",\n               body: {\n                  id: ids.fieldsMatch,\n                  view: \"form\",\n                  borderless: true,\n                  elements: [],\n               },\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      refreshFieldsMatch();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         if (s === \"fieldsMatch\") {\n            this[s] = $$(ids.fieldsMatch).getValues();\n         } else {\n            this[s] = this.property(ids[s]);\n         }\n      });\n   }\n};\n","const CalculateTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCalculateCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class CalculateTask extends CalculateTaskCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.formulaText) {\n         this.warningMessage(\"is missing a formula.\");\n      }\n\n      if (this.formulaText) {\n         const hash = {};\n         (this.process.processDataFields(this) || []).forEach((item) => {\n            hash[`{${item.label}}`] = item;\n         });\n\n         let exp = new RegExp(`{[^}]*}`, \"g\");\n         let entries = this.formulaText.match(exp) || [];\n         entries.forEach((entry) => {\n            if (!hash[entry]) {\n               this.warningMessage(\n                  `could not resolve process value [${entry}]`\n               );\n            }\n         });\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskServiceGetResetPasswordUrlCore = require(\"../../../core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js\");\n\nmodule.exports = class ABProcessTaskServiceGetResetPasswordUrl extends (\n   ABProcessTaskServiceGetResetPasswordUrlCore\n) {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.email) {\n         this.warningMessage(\"is missing the email address.\");\n      }\n\n      const processData = (this.process.processDataFields(this) ?? [])\n         .filter((item) => item.field?.key == \"email\")\n         .map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n      if (processData.length == 0) {\n         this.warningMessage(\"has no previous tasks exporting email fields.\");\n      }\n   }\n};\n","const InsertRecordTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceInsertRecordCore.js\");\n\nmodule.exports = class InsertRecordTask extends InsertRecordTaskCore {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.objectID) {\n         this.warningMessage(\"has no Object set.\");\n      }\n\n      const fv = Object.keys(this.fieldValues || {}) || [];\n      if (fv.length == 0) {\n         this.warningMessage(\"has no fields set\");\n      } else {\n         let isSet = false;\n         fv.forEach((f) => {\n            if (\n               this.fieldValues[f]?.set != \"0\" &&\n               this.fieldValues[f]?.value != null\n            ) {\n               isSet = true;\n            }\n         });\n         if (!isSet) {\n            this.warningMessage(\"has no fields set\");\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceQueryCore = require(\"../../../core/process/tasks/ABProcessTaskServiceQueryCore.js\");\n\nconst ABQLManager = require(\"../../ql/ABQLManager.js\");\n\nmodule.exports = class ABProcessTaskServiceQuery extends (\n   ABProcessTaskServiceQueryCore\n) {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      this.attributes = attributes;\n   }\n\n   ABQLManager() {\n      return ABQLManager;\n   }\n\n   warnings() {\n      // first get all our embedded QL Command warnings\n      let qlWarnings = [];\n      if (this.qlObj) {\n         qlWarnings = qlWarnings.concat(this.qlObj.warnings());\n      }\n      // run the QL Warnings through our .warningMessage() to get a message\n      // that includes this task's name:\n      qlWarnings.forEach((w) => {\n         if (w?.message) this.warningMessage(w.message);\n      });\n      let myWarnings = super.warnings();\n      return myWarnings.filter((w) => w); // filter out any undefined.\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (this.qlObj) {\n         this.qlObj.warningsEval();\n      } else {\n         this.warningMessage(`has no Query defined.`);\n      }\n\n      if (!this.name) {\n         this.warningMessage(\"does not have a name.\", {\n            attributes: this.attributes,\n         });\n      }\n\n      let hasSave = false;\n      let curr = this.qlObj;\n      while (curr) {\n         if (curr.key === \"row_save\" || curr.key === \"set_save\") {\n            hasSave = true;\n            curr = null; // just stop here.\n         } else {\n            curr = curr.next;\n         }\n      }\n\n      if (!hasSave) {\n         this.warningMessage(\"requires at least one Save operation.\");\n      }\n   }\n};\n","const SubProcessCore = require(\"../../../core/process/tasks/ABProcessTaskSubProcessCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class SubProcess extends SubProcessCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /*\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         isEnable: `${id}_isEnable`,\n         parameterId: `${id}_parameterId`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      // Pull query tasks option list\n      let parameterOptions = (this.process.processDataFields(this) || []).map(\n         (item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         }\n      );\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 120,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.isEnable,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               value: this.isEnable,\n            },\n            {\n               id: ids.parameterId,\n               view: \"richselect\",\n               label: L(\"Repeat for\"),\n               options: parameterOptions,\n               value: this.parameterId,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.isEnable = this.property(ids.isEnable);\n      this.parameterId = this.property(ids.parameterId);\n   }\n   */\n\n   /**\n    * @method diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties(bpmnModeler) {\n      let props = super.diagramProperties();\n      props = props || [{}];\n      props[0].def = props[0].def || {};\n\n      if (this.parameterId != null) {\n         props[0].def = props[0].def || {};\n         props[0].def.loopCharacteristics = bpmnModeler\n            .get(\"moddle\")\n            .create(\"bpmn:MultiInstanceLoopCharacteristics\");\n         props[0].def.loopCharacteristics.isSequential = true;\n      }\n\n      return props;\n   }\n\n   /**\n    * @method onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      let loopCharacteristics =\n         defElement.loopCharacteristics ||\n         defElement.businessObject.loopCharacteristics ||\n         {};\n\n      switch (loopCharacteristics.$type) {\n         case \"bpmn:MultiInstanceLoopCharacteristics\":\n            this.loopType = loopCharacteristics.isSequential\n               ? \"sequential\"\n               : \"parallel\";\n            break;\n         case \"bpmn:StandardLoopCharacteristics\":\n            this.loopType = \"looping\";\n            break;\n      }\n   }\n\n   /**\n    * @method destroy()\n    * destroy this sub process and inside tasks\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // reuse .destroy function of ABProcess\n      // to clear tasks within this sub process\n      return this.process.destroy.call(this);\n   }\n\n   /**\n    * @method save()\n    * persist this sub process\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // reuse .save function of ABProcess\n      // to update tasks within this sub process\n      return this.process.save.call(this);\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcessParticipant|ABProcessLane|ABProcessElement}\n    *\n    */\n   elementNewForModelDefinition(element) {\n      let task = this.AB.processElementNewForModelDefinition(element, this);\n\n      // Add a new task to this sub process\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownElementIDs || []).forEach((eID) => {\n         this.warningMessage(\n            `is referencing an unknown process element id[${eID}]`,\n            { process: this.id, eID }\n         );\n      });\n   }\n};\n","const ABProcessTaskUserCore = require(\"../../../core/process/tasks/ABProcessTaskUserCore.js\");\n\nmodule.exports = class ABProcessTaskUser extends ABProcessTaskUserCore {};\n","const ABProcessTaskUserApprovalCore = require(\"../../../core/process/tasks/ABProcessTaskUserApprovalCore.js\");\n\nmodule.exports = class ABProcessTaskUserApproval extends (\n   ABProcessTaskUserApprovalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskUserExternalCore = require(\"../../../core/process/tasks/ABProcessTaskUserExternalCore.js\");\n\nmodule.exports = class ABProcessTaskUserExternal extends (\n   ABProcessTaskUserExternalCore\n) {};\n","const ABProcessTaskUserFormCore = require(\"../../../core/process/tasks/ABProcessTaskUserFormCore.js\");\n\nmodule.exports = class ABProcessTaskUserForm extends (\n   ABProcessTaskUserFormCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTriggerCore = require(\"../../../core/process/tasks/ABProcessTriggerCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTrigger extends ABProcessTriggerCore {};\n","const ABProcessTriggerLifecycleCore = require(\"../../../core/process/tasks/ABProcessTriggerLifecycleCore.js\");\n\nmodule.exports = class ABProcessTriggerLifecycle extends (\n   ABProcessTriggerLifecycleCore\n) {};\n","const ABProcessTriggerTimerCore = require(\"../../../core/process/tasks/ABProcessTriggerTimerCore.js\");\n\nconst START_URL = \"/process/timer/#id#/start\";\nconst STOP_URL = \"/process/timer/#id#/stop\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTriggerTimerCore {\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    */\n   save() {\n      return (\n         Promise.resolve()\n            .then(() => super.save())\n            // Restart the timer\n            .then((result) => {\n               return this.AB.Network.put({\n                  url: (this.isEnabled ? START_URL : STOP_URL).replace(\n                     \"#id#\",\n                     this.id\n                  ),\n               });\n            })\n      );\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nconst ABQLCore = require(\"../../core/ql/ABQLCore.js\");\nconst RowUpdater = require(\"../RowUpdater.js\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABQL extends ABQLCore {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super(attributes, parameterDefinitions, prevOP, task, AB);\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      // const allColumns = row.getChildViews();\n      // allColumns.shift(); // remove selector\n      this.parameterDefinitions.forEach((pDef) => {\n         // const col = allColumns.shift();\n         const myID = this.uiID(id);\n\n         this.ids = this.toIDs(myID);\n         this.params = this.params ?? {};\n\n         let $uiCondition = null;\n\n         switch (pDef.type) {\n            case \"objectFields\":\n               this.params[pDef.name] = $$(this.ids.objectfields).getValue();\n\n               break;\n\n            case \"objectName\":\n               this.params[pDef.name] = $$(this.ids.objectname).getValue();\n\n               break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n               $uiCondition = $$(this.ids.condition);\n\n               if ($uiCondition) {\n                  const condition = $uiCondition.getValue();\n\n                  if (condition && condition !== \"\") {\n                     this.params[pDef.name] = JSON.parse(condition);\n                  }\n               }\n\n               break;\n\n            case \"taskParam\":\n               this.params[pDef.name] = $$(this.ids.taskparam).getValue();\n\n               break;\n         }\n      });\n   }\n\n   /*\n    * @method toIDs()\n    * generate a set of unique webix ids to use for our UI.\n    * @param {string} myID\n    *        the unique id generated by .uiID()\n    */\n   toIDs(myID) {\n      return {\n         condition: `${myID}_condition`,\n         objectfields: `${myID}_objectfields`,\n         objectname: `${myID}_objname`,\n         popup: `${myID}_popup`,\n         select: `${myID}_select`,\n         shorthand: `${myID}_shorthand`,\n         taskparam: `${myID}_taskparam`,\n         spacer: `${myID}_spacer`,\n      };\n   }\n\n   /**\n    * @method uiAddParamForDef()\n    * Add an operation parameter for each parameterDefinition we have defined.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParamForDef(pDef, id, ui) {\n      // params are added to a .col[] definition.\n      // if our ui isn't down to the current .col element, then drill down\n      if (!ui.cols) {\n         if (ui.rows) {\n            for (let i = 0; i < ui.rows.length; i++)\n               if (ui.rows[i].cols) {\n                  this.uiAddParamForDef(pDef, id, ui.rows[i]);\n\n                  break;\n               }\n         } else throw new Error(\"provided ui is not able to add a parameter!\");\n\n         return;\n      }\n\n      const paramUI = this.uiParamUI(pDef, id);\n\n      if (paramUI) {\n         // if we only have 1 param\n         if (this.parameterDefinitions.length === 1) {\n            ui.cols.pop();\n            ui.cols.push(paramUI);\n         }\n         // if we haven't already added a parameter\n         else {\n            // create a row stack of parameters:\n            if (ui.cols.length < 3)\n               ui.cols.push({\n                  rows: [paramUI],\n               });\n            // add to the current stack of parameters\n            else ui.cols[2].rows.push(paramUI);\n         }\n      }\n   }\n\n   /**\n    * @method uiAddNext()\n    * Add the next row selector for this operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddNext(id, ui) {\n      const uiRow = this.uiNextRow(id);\n\n      // if we have a next operation defined, then add on the ui definitions\n      // for that operation:\n      if (this.next) {\n         this.next.uiAddParams(id, uiRow);\n         ui.rows.push(uiRow);\n         this.next.uiAddNext(id, ui);\n      }\n      // otherwise we just leave the selector:\n      else ui.rows.push(uiRow);\n   }\n\n   /**\n    * @method uiAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParams(id, ui) {\n      this.parameterDefinitions.forEach((pDef) => {\n         this.uiAddParamForDef(pDef, id, ui);\n      });\n   }\n\n   /*\n    * @method uiID()\n    * generate a unique webix id for this operation.\n    * @param {string} id\n    *        the webix id of the base property.query holder\n    */\n   uiID(id) {\n      if (this.prevOP) return `${this.prevOP.uiID(id)}_${this.constructor.key}`;\n\n      return `${id}_${this.constructor.key}`;\n   }\n\n   /*\n    * uiXXX Operations:\n    * are UI building operations that are performed BEFORE the webix UI\n    * is generated.  They work by filling out a {ui} object definition\n    * that webix will eventually create into the DOM.\n    *\n    * viewXXX Operations:\n    * are UI building operations that are performed AFTER the webix UI\n    * is generated. They work by adding in child views to an existing\n    * DOM.\n    */\n\n   /**\n    * @method uiNextRow()\n    * return the webix UI definition for the next of UI chaining.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiNextRow(id) {\n      const nextOptions = this.NextQLOps ?? this.constructor.NextQLOps;\n      const options = nextOptions.map((op) => {\n         return { id: op.key, value: op.label };\n      });\n\n      options.unshift({ id: 0, value: L(\"choose next operation\") });\n\n      const myID = this.uiID(id);\n      const ids = this.toIDs(myID);\n\n      const uiRow = {\n         cols: [\n            {\n               id: ids.select,\n               view: \"select\",\n               value: this.next ? this.next.constructor.key : 0,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     const resetValue = () => {\n                        const select = $$(ids.select);\n\n                        select.blockEvent();\n                        select.setValue(oldValue);\n                        select.unblockEvent();\n                     };\n\n                     if (newValue === oldValue) return;\n\n                     const newOP = nextOptions.find(\n                        (op) => op.key === newValue\n                     );\n\n                     if (!newOP) {\n                        resetValue();\n\n                        return;\n                     }\n\n                     const thisRow = $$(ids.select).getParentView();\n                     const thisQuery = thisRow.getParentView();\n                     const addOP = () => {\n                        if (newOP) {\n                           const nextOP = new newOP(\n                              {},\n                              this,\n                              this.task,\n                              this.AB\n                           );\n\n                           this.next = nextOP;\n\n                           nextOP.viewAddParams(id, thisRow);\n                           nextOP.viewAddNext(id, thisQuery);\n                        }\n                     };\n\n                     // if there are rows after this one, then warn\n                     // about changing\n                     const allRows = thisQuery.getChildViews();\n\n                     if (allRows.length - 1 > allRows.indexOf(thisRow))\n                        webix.confirm({\n                           title: L(\"continue?\"),\n                           text: L(\n                              \"changing this rule will reset any following rules.\"\n                           ),\n                           ok: L(\"Yes\"),\n                           cancel: L(\"No\"),\n                           callback: (result) => {\n                              if (result) {\n                                 // remove the current additional Rows:\n                                 let ir = allRows.length - 1;\n\n                                 while (\n                                    allRows[ir].config.id !== thisRow.config.id\n                                 ) {\n                                    thisQuery.removeView(allRows[ir]);\n                                    ir--;\n                                 }\n\n                                 // now remove the parameters\n                                 const allCols = thisRow.getChildViews();\n\n                                 let ic = allCols.length;\n\n                                 while (ic > 1) {\n                                    thisRow.removeView(allCols[ic - 1]);\n                                    ic--;\n                                 }\n\n                                 addOP();\n                              } else resetValue();\n                           },\n                        });\n                     else addOP();\n                  },\n               },\n            },\n            {\n               id: ids.spacer,\n            },\n         ],\n      };\n\n      return uiRow;\n   }\n\n   uiNextRowSelectorRefresh(id) {\n      const $select = $$(this.ids.select);\n\n      if (!$select) return;\n\n      const uiNextRow = this.uiNextRow(id);\n\n      const uiNextCol =\n         uiNextRow.cols.filter((c) => c.id == $select.config.id)[0] ??\n         uiNextRow.cols[1];\n\n      if (uiNextCol) AB.Webix.ui(uiNextCol, $select);\n   }\n\n   /**\n    * @method uiParamUI()\n    * return the webix UI definition for the parameter entry of this current\n    * operation.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiParamUI(pDef, id) {\n      const uiConfig = AB.Config.uiSettings();\n\n      let myID = this.uiID(id);\n\n      this.ids = this.toIDs(myID);\n\n      let paramUI = null;\n      let options = null;\n      let Filter = null;\n      let hashFieldIDs = null;\n      let initialCond = null;\n      let displayLabel = null;\n      let initialValue = null;\n      let Updater = null;\n      let popUp = null;\n\n      // now add the parameter\n      switch (pDef.type) {\n         case \"objectFields\":\n            // an objectFields parameter returns a select list of fields\n            // available on an Object.\n            if (this.object)\n               options = this.object.fields().map((f) => {\n                  return { id: f.id, value: f.label, icon: `fa fa-${f.icon}` };\n               });\n\n            options.unshift({\n               id: \"_PK\",\n               value: \"[PK]\",\n            });\n\n            // if not set, default .fieldID to the 1st entry in options\n            // so we will have a default.  In use, if a user sees the\n            // 1st item and continues on, then we will have chosen it.\n            if (!this.fieldID && options.length > 0) {\n               // act like it was selected:\n               this.params[pDef.name] = options[0].id;\n               this.paramChanged(pDef, id);\n            }\n\n            paramUI = {\n               id: this.ids.objectfields,\n               view: \"richselect\",\n               label: L(\"Field\"),\n               labelWidth: 70,\n               value: this.fieldID,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectName\":\n            // an objectName parameter returns a select list of available\n            // objects in this ABFactory.\n            options = this.AB.objects().map((o) => {\n               return { id: o.id, value: o.label };\n            });\n\n            if (!this.objectID && options.length > 0) {\n               this.objectID = options[0].id;\n               this.params[pDef.name] = this.objectID;\n               this.paramChanged(pDef);\n            }\n\n            paramUI = {\n               id: this.ids.objectname,\n               view: \"select\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: this.objectID,\n               options: options,\n               on: {\n                  onChange: (newValue /*, oldValue */) => {\n                     this.params = this.params ?? {};\n\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectConditions\":\n            // objectConditions: returns a filter text summary, that when\n            // clicked, pops up a Filter Entry Popup.\n            // the actual value is stored in a hidden field.\n\n            // we will create a new FilterComplex() object to use for our\n            // filtering.\n            // Our goal is to create a special filter entry for each avaiable\n            // process data value that is available.\n            // A filter entry needs to look like:\n            // {\n            //     id: `{string}`,      // A unique id selector for this filter\n            //     name: `{string}`,    // the operation name displayed\n            //     type, {obj}          // an object defining the editor to show\n            //     fn: ()=>{}           // a function used for filtering elements\n            // }\n            //\n            // In our filters, we are assigning filters to EACH field by the\n            // field.id.  So the type definition needs to look like:\n            // {\n            //     \"uniqueID of the field (field.id)\" : {webixUI definition}\n            // }\n\n            Filter = this.AB.filterComplexNew(id);\n            hashFieldIDs = this.availableProcessDataFieldsHash();\n\n            if (this.object) {\n               Filter.fieldsLoad(this.object.fields(), this.object);\n               // NOTE: this will create default filters based upon the\n               // object fields() and their types\n\n               // Now we need to add in the Process Data Fields:\n               // for each Process Data Field that matches our same object\n               const foundFields = Object.keys(hashFieldIDs).map(\n                  (f) => hashFieldIDs[f]\n               );\n\n               Filter.processFieldsLoad(foundFields);\n               /*\n               (foundFields ?? []).forEach((processField) => {\n                  const type = {};\n                  if (processField.field) {\n                     type[processField.field.id] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  } else {\n                     // if there is no .field, it is probably an embedded special field\n                     // like: .uuid\n                     const key = processField.key.split(\".\").pop();\n                     type[key] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  }\n\n                  // add an \"equals\" and \"not equals\" filter for each:\n                  Filter.filterAdd([\n                     {\n                        id: `context_equals`,\n                        name: `equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a === b;\n                        }\n                     },\n                     {\n                        id: `context_not_equal`,\n                        name: `not equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a !== b;\n                        }\n                     }\n                  ]);\n\n               }); */\n            }\n\n            // every time the Filter \"saves\" it's data, it emits this event:\n            // take the given condition and store it in our hidden element.\n            Filter.on(\"save\", (condition) => {\n               // @param {obj} condition an object describing the filter\n               // condition.\n\n               this.params = this.params ?? {};\n               this.params[pDef.name] = condition;\n\n               const shortHand = $$(this.ids.shorthand);\n\n               shortHand.define({\n                  label: Filter.toShortHand(),\n               });\n               shortHand.refresh();\n\n               // NOTE: the hidden element is a text field, so convert the\n               // {condition object} => a string\n               const elCondition = $$(this.ids.condition);\n\n               elCondition.define({\n                  value: JSON.stringify(this.params[pDef.name]),\n               });\n               elCondition.refresh();\n            });\n\n            // create the initial condition value from our inputs.\n            initialCond = \"\";\n\n            if (this.params && this.params[pDef.name]) {\n               Filter.setValue(this.params[pDef.name]);\n               initialCond = JSON.stringify(this.params[pDef.name]);\n            } else {\n               Filter.setValue(null);\n            }\n\n            // what we show on the panel, is a text representation\n            // of the current condition.\n            displayLabel = Filter.toShortHand();\n\n            paramUI = {\n               rows: [\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: displayLabel,\n                     on: {\n                        onItemClick: function () {\n                           Filter.popUp(this.$view, null, {\n                              pos: \"center\",\n                           });\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the condition\n                  // value we will parse out later\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialCond,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"objectValues\":\n            // objectValues : shows a condenced textual representation of the\n            // field => value changes.  Clicking on the text will show a popup\n            // that allows you to add/remove additional field updates for\n            // the current object.\n\n            initialValue = \"\";\n            Updater = new RowUpdater(myID, this.AB);\n\n            if (this.object) Updater.objectLoad(this.object);\n\n            // Set processed data key to value options\n            Updater.setExtendedOptions(\n               (this.task.process.processDataFields(this.task) ?? []).map(\n                  (item) => {\n                     return {\n                        id: item.key,\n                        value: item.label,\n                     };\n                  }\n               )\n            );\n\n            // NOTE: .setValue() must be called once the RowUpdater is already\n            // displayed.  See the end of popUp() below:\n            if (this.params && this.params[pDef.name]) {\n               Updater.setValue(this.params[pDef.name]);\n               initialValue = JSON.stringify(this.params[pDef.name]);\n            }\n\n            popUp = () => {\n               // show the RowUpdater in a popup:\n               const ui = {\n                  id: this.ids.popup,\n                  view: \"popup\",\n                  position: \"center\",\n                  minWidth: 700,\n                  modal: true,\n                  resize: true,\n                  body: {\n                     rows: [\n                        {\n                           height: 30,\n                           borderless: true,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value: \"X\",\n                                 width: 30,\n                                 click: () => {\n                                    $$(this.ids.popup).hide();\n                                 },\n                              },\n                           ],\n                        },\n                        Updater.ui(),\n                        {\n                           view: \"button\",\n                           value: L(\"Save\"),\n                           css: \"webix_primary\",\n                           click: () => {\n                              this.params = this.params ?? {};\n                              this.params[pDef.name] = Updater.getValue();\n                              const sh = $$(this.ids.shorthand);\n\n                              sh.define({\n                                 badge: this.params[pDef.name].length,\n                              });\n                              sh.refresh();\n\n                              const cond = $$(this.ids.condition);\n\n                              cond.define({\n                                 value: JSON.stringify(this.params[pDef.name]),\n                              });\n                              cond.refresh();\n\n                              $$(this.ids.popup).hide();\n                           },\n                        },\n                     ],\n                  },\n               };\n\n               // create and show the popup\n               this._myPopup = webix.ui(ui);\n               this._myPopup.show();\n\n               // NOTE: on a RowUpdater, the values need to be set\n               // AFTER it is displayed:\n               if (this.params && this.params[pDef.name])\n                  Updater.setValue(this.params[pDef.name]);\n            };\n\n            paramUI = {\n               rows: [\n                  // the textual shorthand for these values\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: L(\"Update Popout\"),\n                     badge: this.params[pDef.name]?.length,\n                     on: {\n                        onItemClick: () => {\n                           popUp();\n                        },\n                     },\n                  },\n                  // the hidden field that contains the results\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialValue,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"taskParam\":\n            paramUI = {\n               id: this.ids.taskparam,\n               view: \"text\",\n               label: L(\"Variable\"),\n               labelWidth: 70,\n               value: this.params[pDef.name],\n               placeholder: L(\"Enter parameter name\"),\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n      }\n\n      return paramUI;\n   }\n\n   /**\n    * @method viewAddNext()\n    * Add the next selector row After this Operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} topView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the top container that is adding a new\n    *        row for each operation.\n    */\n   viewAddNext(id, topView) {\n      const uiRow = this.uiNextRow(id);\n\n      topView.addView(uiRow);\n   }\n\n   /**\n    * @method viewAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} rowView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the ROW that the parameters are added to\n    */\n   viewAddParams(id, rowView) {\n      const params = [];\n\n      this.parameterDefinitions.forEach((pDef) => {\n         // get the definition from .uiParamUI()\n         params.push(this.uiParamUI(pDef, id));\n      });\n\n      let toInsert = null;\n\n      // stack parameters in a row if there are more than 1\n      if (params.length > 1)\n         toInsert = {\n            rows: params,\n         };\n      else toInsert = params.pop();\n\n      if (toInsert) {\n         rowView.removeView(rowView.getChildViews()[1]);\n         rowView.addView(toInsert);\n      }\n   }\n\n   warnings() {\n      let myWarnings = this._warnings || [];\n      if (this.next)\n         myWarnings = myWarnings.concat(this.next.warnings()).filter((w) => w);\n      return this.AB.uniq(myWarnings);\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      if (this.next) this.next.warningsEval();\n   }\n\n   // warningsAll() {\n   //    let myWarnings = this.warnings();\n   //    if (this.next) {\n   //       myWarnings = myWarnings.concat(this.next.warningsAll());\n   //    }\n   //    return myWarnings;\n   // }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(message) {\n      // this.emit(\"warning\", `${this.key}: ${message}`);\n      this._warnings = this._warnings || [];\n      this._warnings.push({ message: `${this.key}: ${message}` });\n   }\n\n   ////\n   //// QueryString Parser routines:\n   ////\n}\n\nmodule.exports = ABQL;\n","/*\n * ABQLFind\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\nconst ABQLFindCore = require(\"../../core/ql/ABQLFindCore.js\");\n\nclass ABQLFind extends ABQLFindCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLFind;\n","/*\n * ABQLManager\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst ABQLManagerCore = require(\"../../core/ql/ABQLManagerCore.js\");\nconst ABQLRootObject = require(\"./ABQLRootObject.js\");\n\nconst ABQLManager = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current {ABFactory} active for this interface.\n    * @return {ABQL} | null\n    */\n   fromAttributes: ABQLManagerCore.fromAttributes,\n\n   /**\n    * @method ids()\n    * return a set of unique webix ids for the ui portions of this object.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @return {object}\n    */\n   ids: (id) => {\n      return {\n         root: `${id}_root`,\n         select: `${id}_root_select`,\n         options: `${id}_root_options`,\n      };\n   },\n\n   /**\n    * @method builder\n    * return a UI component like object that will display the QL builder.\n    * The component will support:\n    *\t\t.ui(id) : returns a webix ui definition for the current builder\n    *\t\t.init(id) : performs any special actions to prepare the webix ui\n    * @param {object} rootOP\n    *\t\t  the root ABQLxxxx operation\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} active for this display.\n    * @return {object}\n    */\n   builder: (rootOP, task, AB) => {\n      // const rootOP = this.fromAttributes(attributes, task, AB);\n      // const L = (...params) => AB.Multilingual.label(...params);\n\n      return {\n         ui: (id) => {\n            rootOP = rootOP ?? new ABQLRootObject({}, task, AB);\n\n            const ids = ABQLManager.ids(id);\n            const ui = {\n               rows: [\n                  {\n                     id: ids.root,\n                     cols: [],\n                  },\n               ],\n            };\n\n            rootOP.uiAddParams(id, ui);\n            rootOP.uiAddNext(id, ui);\n\n            return ui;\n         },\n         init: (id) => {},\n      };\n   },\n\n   /**\n    * @method parse\n    * step through the current properties panel and decode the QL objects\n    * and their parameters.\n    * Return the .toOBJ() attributes definition as a result.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} object that is currently active.\n    * @return {object}\n    */\n   parse: (id, task, AB) => {\n      const ids = ABQLManager.ids(id);\n      const root = $$(ids.root);\n\n      if (!root) {\n         console.warn(\"ABQLManager.parse(): unable to find root element\");\n\n         return;\n      }\n\n      // get all the input rows\n      const rows = root.getParentView().getChildViews();\n\n      const parseCurrent = (rows, options, prevOP) => {\n         if (rows.length === 0) return null;\n\n         const row = rows.shift();\n\n         // get which operation was selected\n         // find the operation selector (skip any indents)\n         const views = row.getChildViews();\n\n         let selector = views.shift();\n\n         while (!selector?.getValue) selector = views.shift();\n\n         const value = selector.getValue();\n\n         // figure out the QLOP object\n         const OP = options.find((o) => {\n            return o.key === value || o.key === ABQLRootObject.key;\n         });\n\n         if (OP) {\n            let currOP = null;\n\n            if (prevOP) currOP = new OP({}, prevOP, task, AB);\n            else currOP = new OP({}, task, AB);\n\n            // now get currOP to initialize from it's parameters:\n            currOP.parseRow(row, id);\n\n            // carry forward any .object info if not already established\n            // by the .parseRow():\n            if (!currOP.object && prevOP) {\n               currOP.object = prevOP.object;\n               currOP.objectID = currOP.object?.id ?? null;\n            }\n\n            const nextRow = parseCurrent(\n               rows,\n               currOP.NextQLOps ?? currOP.constructor.NextQLOps,\n               currOP\n            );\n\n            currOP.next = nextRow;\n\n            return currOP;\n         }\n\n         return null;\n      };\n\n      const operation = parseCurrent(rows, ABQLManagerCore.QLOps, null);\n\n      return operation;\n   },\n};\n\nmodule.exports = ABQLManager;\n","/*\n * ABQLRootObject\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQLRootObjectCore = require(\"../../core/ql/ABQLRootObjectCore.js\");\n\nclass ABQLObject extends ABQLRootObjectCore {\n   // constructor(attributes, task, application) {\n   //     // NOTE: keep this so we can insert the prevOp === null\n   //     super(attributes, ParameterDefinitions, null, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"name\") {\n         this.objectID = this.params[pDef.name];\n         this.object = this.objectLookup(this.objectID);\n\n         // ?? is this correct?\n         // if we already have created a .next operation, and we have\n         // just changed our .object, pass that information forward.\n         if (this.next) this.next.object = this.object;\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      // for an Object operation, we need to set our .objectID after\n      // the values are parsed.\n\n      if (this.params.name) {\n         this.objectID = this.params.name;\n         this.object = this.objectLookup(this.params.name);\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.object) {\n         this.warningMessage(\"has no object set.\", {\n            objectID: this.objectID,\n         });\n      }\n   }\n}\n\nmodule.exports = ABQLObject;\n","const ABQLRowPluckCore = require(\"../../core/ql/ABQLRowPluckCore.js\");\n\nclass ABQLRowPluck extends ABQLRowPluckCore {\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n\n      // Re-generate next select options\n      if (pDef.name === \"fieldID\") this.uiNextRowSelectorRefresh(id);\n   }\n}\n\nmodule.exports = ABQLRowPluck;\n","/*\n * ABQLRowSave\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLRowSaveCore = require(\"../../core/ql/ABQLRowSaveCore.js\");\n\nclass ABQLRowSave extends ABQLRowSaveCore {\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n   }\n}\n\nmodule.exports = ABQLRowSave;\n","/*\n * ABQLRowUpdate\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQLRowUpdateCore = require(\"../../core/ql/ABQLRowUpdateCore.js\");\n\nclass ABQLRowUpdate extends ABQLRowUpdateCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   //     // #Hack! : when an Operation provides the same .NextQlOps that it\n   //     // was defined in, we can't require it again ==> circular dependency.\n   //     // so we manually set it here from the operation that created us:\n   //     this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLRowUpdate;\n","/*\n * ABQLSetFirst\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQLSetFirstCore = require(\"../../core/ql/ABQLSetFirstCore.js\");\n\nclass ABQLSetFirst extends ABQLSetFirstCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLSetFirst;\n","/*\n * ABQLSetPluck\n *\n * An ABQLSetPluck can process a set (array) of data and pluck out a specified\n * field from each row to then make an array of values that only contain that \n * field.\n * \n * Example: \narray = [\n {\n\tname: \"Neo\",\n\temail: \"neo@thematrix.com\",\n\trelationships: [ { morpheous}, {trinity} ]\n },\n {\n\tname: \"trinity\",\n\temail: \"trinity@thematrix.com\",\n\trelationships: [ {neo}, {morpheous} ]\n },\n {\n\tname: \"morpheous\",\n\temail: \"morpheous@thematrix.com\",\n\trelationships: [ {neo}, {trinity}]\n }\n\n]\n\npluck(\"email\") :\n\t[\n\t\t\"neo@thematrix.com\",\n\t\t\"trinity@thematrix.com\",\n\t\t\"morpheous@thematrix.com\"\n\t]\n\npluck(\"relationships\"):\n\t[\n\t\t{neo},\n\t\t{trinity},\n\t\t{morpheous}\n\t]\n *\n */\n\nconst ABQLSetPluckCore = require(\"../../core/ql/ABQLSetPluckCore.js\");\n\nclass ABQLSetPluck extends ABQLSetPluckCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"fieldID\") {\n         // debugger;\n         this.fieldID = this.params[pDef.name];\n         // v2 method:\n         // this.field = this.object.fieldByID(this.fieldID);\n         this.field = this.object.fieldByID(this.fieldID);\n\n         // v2 method:\n         // if (this.field && this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n\n            // ?? is this correct?\n            // if we already have created a .next operation, and we have\n            // just changed our .object, pass that information forward.\n            if (this.next) this.next.object = this.objectOut;\n         }\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * NOTE: in this process our .object and .objectOut isn't as simple\n    * as the other QL node types.  We'll have to interpolate our values\n    * from the given fieldID in our property panel.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.fieldID = this.params.fieldID;\n\n      // we now have to build backwards from the current fieldID to set our\n      // relevant .object and .objectOut\n      this.AB.objects((o) => {\n         if (!this.field) {\n            // const field = o.fieldByID(this.fieldID);\n            const field = o.fieldByID(this.fieldID);\n\n            if (field) this.field = field;\n         }\n      });\n\n      if (this.field) {\n         this.object = this.field.object;\n\n         // v2 method:\n         // if (this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n         }\n      }\n   }\n}\n\nmodule.exports = ABQLSetPluck;\n","/*\n * ABQLSetSave\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSaveCore = require(\"../../core/ql/ABQLSetSaveCore.js\");\n\nclass ABQLSetSave extends ABQLSetSaveCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"task_param\") {\n         this.taskParam = this.params[pDef.name];\n      }\n   }\n\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.taskParam = this.params[\"task_param\"];\n\n      if (!this.registered) {\n         this.task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.taskParam || this.taskParam === \"\") {\n         this.warningMessage(\"requires a name to save our data as.\");\n      }\n   }\n}\n\nmodule.exports = ABQLSetSave;\n","const ABViewCore = require(\"../../core/views/ABViewCore.js\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nmodule.exports = class ABView extends ABViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewComponent(this);\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"view\",\n         \"page\",\n         \"formpanel\",\n         \"viewcontainer\",\n         // not allowed Detail's widgets\n         \"detailcheckbox\",\n         \"detailcustom\",\n         \"detailconnect\",\n         \"detailimage\",\n         \"detailselectivity\",\n         \"detailtext\",\n         \"detailtree\",\n         // not allowed Form's widgets\n         \"button\",\n         \"checkbox\",\n         \"connect\",\n         \"datepicker\",\n         \"fieldcustom\",\n         \"textbox\",\n         \"numberbox\",\n         \"selectsingle\",\n         \"selectmultiple\",\n         \"formtree\",\n         \"fieldreadonly\",\n         // not allowed Chart's Widgets\n         \"pie\",\n         \"bar\",\n         \"line\",\n         \"area\",\n         // not allowed Report page\n         \"report\",\n         \"reportPage\",\n         \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll(); // ABViewManager.allViews();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABViewCSVExporterCore = require(\"../../core/views/ABViewCSVExporterCore\");\nconst ABViewCSVExporterComponent = require(\"./viewComponent/ABViewCSVExporterComponent\");\n\nmodule.exports = class ABViewCSVExporter extends ABViewCSVExporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewCSVExporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../core/views/ABViewCSVImporterCore\");\nconst ABViewCSVImporterComponent = require(\"./viewComponent/ABViewCSVImporterComponent\");\n\nmodule.exports = class ABViewCSVImporter extends ABViewCSVImporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(idBase) {\n      return new ABViewCSVImporterComponent(this, idBase);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.availableFieldIds?.length) {\n         this.warningsMessage(\"has no fields set for matching import data\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewCarouselComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewCarousel_${baseView.id}`,\n         Object.assign(\n            {\n               carousel: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_doOnShow = () => {\n         this.onShow();\n      };\n\n      this._handler_doReload = () => {\n         // this.datacollection?.reloadData();\n      };\n\n      this._handler_doFilter = (fnFilter, filterRules) => {\n         // NOTE: fnFilter is depreciated and will be removed.\n\n         // this.onShow(filterRules);\n         const dv = this.datacollection;\n\n         if (!dv) return;\n\n         dv.filterCondition(filterRules);\n         dv.reloadData();\n      };\n\n      this._handler_busy = () => {\n         this.busy();\n      };\n\n      this._handler_ready = () => {\n         this.ready();\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      this.filterUI = baseView.filterHelper; // component(/* App, idBase */);\n      this.linkPage = baseView.linkPageHelper.component(/* App, idBase */);\n\n      const spacer = {};\n      const settings = this.settings;\n\n      if (settings.width === 0)\n         Object.assign(spacer, {\n            width: 1,\n         });\n\n      const _ui = super.ui([\n         {\n            borderless: true,\n            cols: [\n               spacer, // spacer\n               {\n                  borderless: true,\n                  rows: [\n                     this.filterUI.ui(), // filter UI\n                     {\n                        id: ids.carousel,\n                        view: \"carousel\",\n                        cols: [],\n                        width: settings.width,\n                        height: settings.height,\n                        navigation: {\n                           items: !settings.hideItem,\n                           buttons: !settings.hideButton,\n                           type: settings.navigationType,\n                        },\n                        on: {\n                           onShow: () => {\n                              const activeIndex = $$(\n                                 ids.carousel\n                              ).getActiveIndex();\n\n                              this.switchImage(activeIndex);\n                           },\n                        },\n                     },\n                  ],\n               },\n               spacer, // spacer\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) {\n         AB.notify.builder(`Datacollection is ${dv}`, {\n            message: \"This is an invalid datacollection\",\n         });\n\n         return;\n      }\n\n      const object = dv.datasource;\n\n      if (!object) {\n         AB.notify.developer(`Object is ${dv}`, {\n            message: \"This is an invalid object\",\n         });\n\n         return;\n      }\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n      dv.on(\"loadData\", this._handler_doOnShow);\n\n      dv.removeListener(\"update\", this._handler_doReload);\n      dv.on(\"update\", this._handler_doReload);\n\n      dv.removeListener(\"delete\", this._handler_doReload);\n      dv.on(\"delete\", this._handler_doReload);\n\n      dv.removeListener(\"create\", this._handler_doReload);\n      dv.on(\"create\", this._handler_doReload);\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n      dv.on(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n      dv.on(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            dv.removeListener(key, this._handler_doOnShow);\n            dv.on(key, this._handler_doOnShow);\n         });\n      }\n\n      const baseView = this.view;\n\n      // filter helper\n      baseView.filterHelper.objectLoad(object);\n      baseView.filterHelper.viewLoad(this);\n\n      this.filterUI.init(this.AB);\n      this.filterUI.removeListener(\"filter.data\", this._handler_doFilter);\n      this.filterUI.on(\"filter.data\", this._handler_doFilter);\n\n      // link page helper\n      this.linkPage.init({\n         view: baseView,\n         datacollection: dv,\n      });\n\n      // set data-cy\n      const $carouselView = $$(this.ids.carousel)?.$view;\n\n      if ($carouselView) {\n         $carouselView.setAttribute(\n            \"data-cy\",\n            `${baseView.key} ${baseView.id}`\n         );\n         $carouselView\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button previous ${baseView.id}`\n            );\n         $carouselView\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button next ${baseView.id}`\n            );\n      }\n   }\n\n   /**\n    * @method detatch()\n    * Will make sure all our handlers are removed from any object\n    * we have attached them to.\n    *\n    * You'll want to call this in situations when we are dynamically\n    * creating and recreating instances of the same Widget (like in\n    * the ABDesigner).\n    */\n   detatch() {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n\n      if (this._handler_doReload) {\n         dv.removeListener(\"update\", this._handler_doReload);\n         dv.removeListener(\"delete\", this._handler_doReload);\n         dv.removeListener(\"create\", this._handler_doReload);\n      }\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor)\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            dv.removeListener(key, this._handler_doOnShow);\n         });\n\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n   }\n\n   myTemplate(row) {\n      if (row?.src) {\n         const settings = this.settings;\n\n         return `<div class=\"ab-carousel-image-container\">\n            <link rel=\"preload\" href=\"${\n               row.src\n            }\" as=\"image\" fetchpriotity=\"low\"/>\n            <img id=\"${this.ids.component}-${row.id}\" src=\"${\n            row.src\n         }\" class=\"content\" ondragstart=\"return false\" loading=\"lazy\" />\n            ${\n               settings.showLabel\n                  ? `<div class=\"ab-carousel-image-title\">${\n                       row.label || \"\"\n                    }</div>`\n                  : \"\"\n            }\n            <div class=\"ab-carousel-image-icon\">\n            ${\n               settings.detailsPage || settings.detailsTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n                  : \"\"\n            }\n            ${\n               settings.editPage || settings.editTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n                  : \"\"\n            }\n            <span class=\"webix_icon ab-carousel-zoom-in fa fa-search-plus\"></span>\n            <span class=\"webix_icon ab-carousel-zoom-out fa fa-search-minus\"></span>\n                  <span ab-row-id=\"${row.id}\" ab-img-file=\"${\n            row.imgFile\n         }\" class=\"webix_icon ab-carousel-rotate-left fa fa-rotate-left\"></span>\n               <span ab-row-id=\"${row.id}\" ab-img-file=\"${\n            row.imgFile\n         }\" class=\"webix_icon ab-carousel-rotate-right fa fa-rotate-right\"></span>\n               <span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>\n               <span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>\n            </div>\n         </div>`;\n      }\n      // empty image\n      else return \"\";\n   }\n\n   busy() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.disable();\n      $carousel?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.enable();\n      $carousel?.hideProgress?.();\n   }\n\n   async switchImage(currentPosition) {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // Check want to load more images\n      if (\n         currentPosition >= this._imageCount - 1 && // check last image\n         dv.totalCount > this._rowCount\n      ) {\n         // loading cursor\n         this.busy();\n\n         try {\n            await dv.loadData(this._rowCount || 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message:\n                  \"ABViewCarousel:switchImage():Error when load data from a Data collection\",\n            });\n         }\n\n         this.ready();\n      }\n   }\n\n   onShow(fnFilter = this.filterUI.getFilter()) {\n      const ids = this.ids;\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const obj = dv.datasource;\n\n      if (!obj) return;\n\n      const field = this.view.imageField;\n\n      if (!field) return;\n\n      if (dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n\n         // it will call .onShow again after dc loads completely\n         return;\n      }\n\n      const settings = this.settings;\n\n      let rows = dv.getData(fnFilter);\n\n      // Filter images by cursor\n      if (settings.filterByCursor) {\n         const cursor = dv.getCursor();\n\n         if (cursor)\n            rows = rows.filter(\n               (r) =>\n                  (r[obj.PK()] || r.id || r) ===\n                  (cursor[obj.PK()] || cursor.id || cursor)\n            );\n      }\n\n      const images = [];\n\n      rows.forEach((r) => {\n         const imgFile = r[field.columnName];\n\n         if (imgFile) {\n            const imgData = {\n               id: r.id,\n               src: `/file/${imgFile}`,\n               imgFile,\n            };\n\n            // label of row data\n            if (settings.showLabel) imgData.label = obj.displayData(r);\n\n            images.push({\n               css: \"image\",\n               borderless: true,\n               template: (...params) => {\n                  return this.myTemplate(...params);\n               },\n               data: imgData,\n            });\n         }\n      });\n\n      const ab = this.AB;\n\n      // insert the default image to first item\n      if (field.settings.defaultImageUrl)\n         images.unshift({\n            css: \"image\",\n            template: (...params) => this.myTemplate(...params),\n            data: {\n               id: ab.uuid(),\n               src: `/file/${field.settings.defaultImageUrl}`,\n               label: this.label(\"Default image\"),\n            },\n         });\n\n      // empty image\n      if (images.length < 1)\n         images.push({\n            rows: [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: settings.height,\n                  label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n               },\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  label: this.label(\"No image\"),\n               },\n            ],\n         });\n\n      // store total of rows\n      this._rowCount = rows.length;\n\n      // store total of images\n      this._imageCount = images.length;\n\n      const $carousel = $$(ids.carousel);\n      const abWebix = ab.Webix;\n\n      if ($carousel) {\n         // re-render\n         abWebix.ui(images, $carousel);\n\n         // add loading cursor\n         abWebix.extend($carousel, abWebix.ProgressBar);\n\n         // link pages events\n         const editPage = settings.editPage;\n         const detailsPage = settings.detailsPage;\n\n         // if (detailsPage || editPage) {\n         $carousel.$view.onclick = async (e) => {\n            if (e.target.className) {\n               if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(editPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-detail\") > -1\n               ) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(detailsPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n               ) {\n                  $carousel.define(\"css\", \"fullscreen\");\n                  abWebix.fullscreen.set(ids.carousel, {\n                     head: {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        elements: [\n                           {},\n                           {\n                              view: \"icon\",\n                              icon: \"fa fa-times\",\n                              click: function () {\n                                 abWebix.html.removeCss(\n                                    $carousel.getNode(),\n                                    \"fullscreen\"\n                                 );\n                                 abWebix.fullscreen.exit();\n                              },\n                           },\n                        ],\n                     },\n                  });\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-rotate-left\") > -1\n               ) {\n                  const rowId = e.target.getAttribute(\"ab-row-id\");\n                  const imgFile = e.target.getAttribute(\"ab-img-file\");\n                  this.rotateImage(rowId, imgFile, field, \"left\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-rotate-right\") > -1\n               ) {\n                  const rowId = e.target.getAttribute(\"ab-row-id\");\n                  const imgFile = e.target.getAttribute(\"ab-img-file\");\n                  this.rotateImage(rowId, imgFile, field, \"right\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-zoom-in\") > -1\n               ) {\n                  this.zoom(\"in\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-zoom-out\") > -1\n               ) {\n                  this.zoom(\"out\");\n               }\n            }\n         };\n      }\n   }\n\n   showFilterPopup($view) {\n      this.filterUI.showPopup($view);\n   }\n\n   async rotateImage(rowId, imgFile, field, direction = \"right\") {\n      this.busy();\n\n      // call api to rotate\n      if (direction == \"left\") await field.rotateLeft(imgFile);\n      else await field.rotateRight(imgFile);\n\n      // refresh image\n      const imgElm = document.getElementById(`${this.ids.component}-${rowId}`);\n      if (imgElm) {\n         await fetch(imgElm.src, { cache: \"reload\", mode: \"no-cors\" });\n         imgElm.src = `${imgElm.src}#${new Date().getTime()}`;\n      }\n\n      this.ready();\n   }\n\n   zoom(inOrOut = \"in\") {\n      const imgContainer = document.getElementsByClassName(\n         \"ab-carousel-image-container\"\n      )[0];\n      if (!imgContainer) return;\n\n      const imgElem = imgContainer.getElementsByTagName(\"img\")[0];\n      if (!imgElem) return;\n\n      const step = 15;\n      const height = parseInt(\n         (imgElem.style.height || 100).toString().replace(\"%\", \"\")\n      );\n      const newHeight = inOrOut == \"in\" ? height + step : height - step;\n      imgElem.style.height = `${newHeight}%`;\n\n      imgContainer.style.overflow = newHeight > 100 ? \"auto\" : \"\";\n   }\n}\n","const ABViewCarouselCore = require(\"../../core/views/ABViewCarouselCore\");\nimport ABViewCarouselComponent from \"./viewComponent/ABViewCarouselComponent\";\n\n// const ABViewPropertyFilterData = require(\"./viewProperties/ABViewPropertyFilterData\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\");\n\nimport ABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nlet PopupCarouselFilterMenu = null;\n\nexport default class ABViewCarousel extends ABViewCarouselCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.filter);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      return new ABViewCarouselComponent(this);\n   }\n\n   get idBase() {\n      return `ABViewCarousel_${this.id}`;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null)\n         this.__filterHelper = new ABViewPropertyFilterData(\n            this.AB,\n            this.idBase\n         );\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.imageField;\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve image field[${this.settings.field}]`\n         );\n      }\n   }\n}\n","const ABViewChartCore = require(\"../../core/views/ABViewChartCore\");\nconst ABViewChartComponent = require(\"./viewComponent/ABViewChartComponent\");\n\nmodule.exports = class ABViewChart extends ABViewChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      this.refreshData();\n   }\n\n   getDCChart() {\n      if (!this._dcChart) this._dcChart = new webix.DataCollection();\n\n      return this._dcChart;\n   }\n\n   refreshData() {\n      const dc = this.datacollection;\n      if (dc == null) return this.dcChart;\n\n      const labelCol = this.labelField();\n      const valueCol = this.valueField();\n      const valueCol2 = this.valueField2();\n\n      if (!labelCol || !valueCol) return this.dcChart;\n\n      // const labelColName = labelCol.columnName;\n      const numberColName = valueCol.columnName;\n\n      let numberColName2 = \"\";\n\n      if (this.settings.multipleSeries && valueCol2) {\n         numberColName2 = valueCol2.columnName;\n      }\n\n      const colorList = [\n         \"#ee4339\",\n         \"#ee9336\",\n         \"#eed236\",\n         \"#d3ee36\",\n         \"#a7ee70\",\n         \"#58dccd\",\n         \"#36abee\",\n         \"#476cee\",\n         \"#a244ea\",\n         \"#e33fc7\",\n      ];\n\n      const dInfo = dc.getData();\n\n      let results = [];\n      let sumData = {};\n      let sumNumber = 0;\n      let sumNumber2 = 0;\n      let countNumber = dInfo.length;\n\n      dInfo.forEach((item) => {\n         const labelKey = labelCol.format(item) || item.id;\n\n         let numberVal = parseFloat(item[numberColName] || 0);\n         let numberVal2 = null;\n\n         if (this.settings.multipleSeries)\n            numberVal2 = parseFloat(item[numberColName2]) || 0;\n\n         switch (valueCol.key) {\n            //Formula Datatype\n            case \"formula\":\n               numberVal = valueCol.format(item);\n\n               break;\n\n            //Calcualte Datatype\n            case \"calculate\":\n               numberVal = parseFloat(\n                  valueCol.constructor.convertToJs(\n                     valueCol.object,\n                     valueCol.settings.formula,\n                     item,\n                     valueCol.settings.decimalPlaces\n                  )\n               );\n\n               break;\n\n            default:\n               break;\n         }\n\n         if (sumData[labelKey] == null) {\n            let label = labelKey;\n\n            // Get label of the connect field\n            if (labelCol.isConnection) {\n               let relateValues = labelCol.pullRelationValues(item);\n               if (relateValues != null) {\n                  if (Array.isArray(relateValues))\n                     label = relateValues\n                        .map((val) => val.text || \"\")\n                        .join(\", \");\n                  else label = relateValues.text;\n               }\n            }\n\n            if (this.settings.multipleSeries) {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n                  value2: 0,\n               };\n            } else {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n               };\n            }\n         }\n\n         sumData[labelKey].value += numberVal;\n         sumNumber += numberVal;\n\n         if (this.settings.multipleSeries) {\n            sumData[labelKey].value2 += numberVal2;\n            sumNumber2 += numberVal2;\n         }\n      });\n\n      let index = 0;\n\n      for (const key in sumData) {\n         let val = sumData[key].value;\n\n         if (val <= 0) continue;\n\n         // Display to percent values\n         if (this.settings.isPercentage) {\n            val = (val / sumNumber) * 100;\n            val = Math.round(val * 100) / 100; // round decimal 2 digits\n            val = val + \" %\";\n         }\n\n         if (this.settings.multipleSeries) {\n            let val2 = sumData[key].value2;\n\n            if (val2 <= 0) continue;\n\n            // Display to percent values\n            if (this.settings.isPercentage) {\n               val2 = (val2 / sumNumber2) * 100;\n               val2 = Math.round(val2 * 100) / 100; // round decimal 2 digits\n               val2 = val2 + \" %\";\n            }\n\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               value2: val2,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         } else {\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         }\n\n         index += 1;\n      }\n\n      const dcChart = this.getDCChart();\n\n      dcChart.clearAll();\n      dcChart.parse(results);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let labelField = this.labelField();\n      if (!labelField) {\n         this.warningsMessage(\n            `can't resolve label field[${this.settings.columnLabel}]`\n         );\n      }\n\n      let valueField = this.valueField();\n      if (!valueField) {\n         this.warningsMessage(\n            `can't resolve value field[${this.settings.columnValue}]`\n         );\n      }\n   }\n};\n","const ABViewChartAreaCore = require(\"../../core/views/ABViewChartAreaCore\");\nconst ABViewChartAreaComponent = require(\"./viewComponent/ABViewChartAreaComponent\");\n\nmodule.exports = class ABViewChartArea extends ABViewChartAreaCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartAreaComponent(this);\n   }\n};\n","const ABViewChartBarCore = require(\"../../core/views/ABViewChartBarCore\");\nconst ABViewChartBarComponent = require(\"./viewComponent/ABViewChartBarComponent\");\n\nmodule.exports = class ABViewChartBar extends ABViewChartBarCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartBarComponent(this);\n   }\n};\n","const ABViewWidget = require(\"./ABViewWidget\");\nconst ABViewChartContainerComponent = require(\"./viewComponent/ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartContainer extends ABViewWidget {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartContainerComponent(this);\n   }\n\n   get datacollection() {\n      return this.parent.datacollection;\n   }\n};\n","const ABViewChartLineCore = require(\"../../core/views/ABViewChartLineCore\");\nconst ABViewChartLineComponent = require(\"./viewComponent/ABViewChartLineComponent\");\n\nmodule.exports = class ABViewChartLine extends ABViewChartLineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartLineComponent(this);\n   }\n};\n","const ABViewChartPieCore = require(\"../../core/views/ABViewChartPieCore\");\nconst ABViewChartPieComponent = require(\"./viewComponent/ABViewChartPieComponent\");\n\nmodule.exports = class ABViewChartPie extends ABViewChartPieCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartPieComponent(this);\n   }\n};\n","const ABViewCommentCore = require(\"../../core/views/ABViewCommentCore\");\nconst ABViewCommentComponent = require(\"./viewComponent/ABViewCommentComponent\");\n\nmodule.exports = class ABViewComment extends ABViewCommentCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCommentComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.getUserField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve user field[${this.settings.columnUser}]`\n         );\n      }\n\n      field = this.getCommentField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve comment field[${this.settings.columnComment}]`\n         );\n      }\n\n      field = this.getDateField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve date field[${this.settings.columnDate}]`\n         );\n      }\n   }\n};\n","const ABViewConditionalContainerCore = require(\"../../core/views/ABViewConditionalContainerCore\");\nconst ABViewConditionalContainerComponent = require(\"./viewComponent/ABViewConditionalContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainer extends (\n   ABViewConditionalContainerCore\n) {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConditionalContainerComponent(this);\n   }\n\n   async save() {\n      const viewIf = this.views().find((v) => v.name === \"If\");\n      const viewElse = this.views().find((v) => v.name === \"Else\");\n      const pendingSave = [];\n\n      if (viewIf) pendingSave.push(viewIf.save());\n\n      if (viewElse) pendingSave.push(viewElse.save());\n\n      await Promise.all(pendingSave);\n\n      await super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (\n         !this.settings.filterConditions ||\n         this.settings.filterConditions?.rules?.length == 0\n      ) {\n         this.warningsMessage(\"has no filter conditions set\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewConnectDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewConnectDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n            },\n            ids\n         )\n      );\n\n      this.field = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            type: \"space\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"icon\",\n                  icon: \"fa fa-filter\",\n                  align: \"left\",\n                  disabled: true,\n               },\n               {\n                  view: \"combo\",\n                  id: ids.filter,\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  disabled: true,\n                  on: {\n                     onChange: (id) => this.applyConnectFilter(id),\n                  },\n               },\n               {\n                  view: \"icon\",\n                  id: ids.reset,\n                  icon: \"fa fa-times\",\n                  align: \"left\",\n                  disabled: true,\n                  tooltip: this.label(\"Renmove this filter\"),\n                  on: {\n                     onItemClick: () => this.resetConnectFilter(),\n                  },\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      const [field] = object.fields(\n         (f) => f.columnName === this.settings.field\n      );\n\n      if (!field) {\n         this.AB.notify.developer(\n            `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n            {\n               context: \"ABViewConnectDataFilterComponent.init()\",\n               data: { settings: this.settings },\n            }\n         );\n\n         return;\n      }\n\n      this.field = field;\n\n      const ids = this.ids;\n      const suggest = webix.ui({\n         view: \"suggest\",\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.filter), field, {});\n            },\n         },\n      });\n      field.getAndPopulateOptions(suggest, null, field);\n\n      const $filter = $$(ids.filter);\n\n      $filter.define(\"suggest\", suggest);\n      $filter.define(\"label\", `${this.label(\"Filter by\")} ${field.label}`);\n      $filter.enable();\n      $filter.refresh();\n   }\n\n   resetConnectFilter() {\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [] });\n      dc.reloadData();\n      // Block applyConnectFields() from triggering\n\n      const $filter = $$(ids.filter);\n\n      $filter.blockEvent();\n      $filter.setValue();\n      $filter.unblockEvent();\n      $$(ids.reset).disable();\n   }\n\n   applyConnectFilter(connectId) {\n      const filterRule = {\n         key: this.field.id,\n         rule: \"equals\",\n         value: connectId,\n      };\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [filterRule] });\n      dc.reloadData();\n      $$(this.ids.reset).enable();\n   }\n}\n","import ABViewConnectDataFilterCore from \"../../core/views/ABViewConnectDataFilterCore\";\nimport ABViewConnectDataFilterComponent from \"./viewComponent/ABViewConnectDataFilterComponent\";\n\nexport default class ABViewConnectDataFilter extends ABViewConnectDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConnectDataFilterComponent(this);\n   }\n}\n","const ABViewContainerCore = require(\"../../core/views/ABViewContainerCore\");\nconst ABViewContainerComponent = require(\"./viewComponent/ABViewContainerComponent\");\n\nmodule.exports = class ABViewContainer extends ABViewContainerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewContainerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no content\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (allViews || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\nimport ABViewCustomFilter from \"../viewProperties/ABViewPropertyFilterData\";\nimport _ from \"lodash\";\n\nexport default class ABViewDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n               sortButton: \"\",\n               filterButton: \"\",\n               globalSearchToolbar: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.field = null;\n      const ab = this.AB;\n\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n      this.PopupSortComponent = new ABPopupSortField(\n         `ABViewDataFilter_Sort_Popup_${this.settings.dataviewID}`\n      );\n      this.PopupSortComponent.init(ab);\n      this.PopupSortComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n\n      this.filterHelper = new ABViewCustomFilter(\n         this.AB,\n         `ABViewDataFilter_Filter_Popup_${this.settings.dataviewID}`\n      );\n      this.filterHelper.settings = {\n         filterOption: 1,\n         userFilterPosition: \"toolbar\",\n         isGlobalToolbar: 1,\n      };\n      this.filterHelper.init(ab);\n      this.detatch();\n      this.filterHelper.on(\"filter.data\", this._handler_filterData);\n   }\n\n   advancedUI() {\n      const compId = this.ids.component;\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            rows: [\n               {},\n               {\n                  cols: [\n                     {\n                        width: 18,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-filter\",\n                        width: 40,\n                        id: this.ids.filterButton,\n                        css: `webix_primary abFilterButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.toolbarFilter($$(this.ids.filterButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} filter button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-sort\",\n                        width: 40,\n                        id: this.ids.sortButton,\n                        css: `webix_primary abSortButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.openSort($$(this.ids.sortButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} sort button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.globalSearchToolbar,\n                        view: \"search\",\n                        placeholder: this.label(\"Search..\"),\n                        css: `abGlobalSearchField${this.settings.dataviewID}`,\n                        width: 0,\n                        attributes: {\n                           \"data-cy\": `${this.ids.component} global search`,\n                           datacollection: this.settings.dataviewID,\n                        },\n                        on: {\n                           onTimedKeyPress: () => {\n                              const searchText = $$(\n                                 this.ids.globalSearchToolbar\n                              ).getValue();\n                              // store search text in datacollection because\n                              // it is shared amoung the similar filterHelpers\n                              const dc = this.datacollection;\n                              dc.settings.objectWorkspace.searchText =\n                                 searchText;\n\n                              this.filterHelper.externalSearchText(searchText);\n                           },\n                        },\n                     },\n                     {\n                        width: 18,\n                     },\n                  ],\n               },\n               {},\n            ],\n         },\n      ];\n   }\n\n   connectedFieldUI() {\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            cols: [\n               {\n                  width: 18,\n               },\n               {\n                  rows: [\n                     {},\n                     {\n                        view: \"abslayout\",\n                        cells: [\n                           {\n                              css: \"bg_gray\",\n                              view: \"combo\",\n                              id: this.ids.filter,\n                              labelWidth: 0,\n                              relative: true,\n                              disabled: true,\n                              on: {\n                                 onChange: (id) => {\n                                    this.applyConnectFilter(\n                                       $$(this.ids.filter).getList().getItem(id)\n                                    );\n                                 },\n                              },\n                           },\n                           {\n                              view: \"icon\",\n                              id: this.ids.reset,\n                              icon: \"fa fa-times\",\n                              right: 24,\n                              top: 7,\n                              width: 24,\n                              height: 24,\n                              hidden: true,\n                              tooltip: this.label(\"Remove this filter\"),\n                              on: {\n                                 onItemClick: () =>\n                                    $$(this.ids.filter).setValue(),\n                              },\n                           },\n                        ],\n                     },\n                     {},\n                  ],\n               },\n               {\n                  width: 18,\n               },\n            ],\n         },\n      ];\n   }\n\n   ui() {\n      if (\n         !this.settings?.dataviewID ||\n         (this.settings?.viewType !== \"advanced\" && !this.settings?.field)\n      )\n         return { height: 1, id: this.ids.component };\n\n      const ui =\n         this.settings.viewType == \"advanced\"\n            ? this.advancedUI()\n            : this.connectedFieldUI();\n      const _ui = super.ui(ui);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      if (this.settings.viewType == \"advanced\") {\n         if (this.settings.showSort) {\n            this.PopupSortComponent.objectLoad(object);\n            // if there are some preset sorts show them to user\n            this.PopupSortComponent.setSettings(\n               dv?.settings?.objectWorkspace?.sortFields\n            );\n         } else {\n            $$(this.ids.sortButton).hide();\n         }\n         if (this.settings.showFilter) {\n            this.filterHelper.objectLoad(object);\n         } else {\n            $$(this.ids.filterButton).hide();\n         }\n      } else if (this.settings.viewType == \"connected\") {\n         const [field] = object.fields(\n            (f) => f.columnName === this.settings.field\n         );\n\n         if (!field) {\n            this.AB.notify.developer(\n               `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n               {\n                  context: \"ABViewDataFilterComponent.init()\",\n                  data: { settings: this.settings },\n               }\n            );\n\n            return;\n         }\n\n         this.field = field;\n\n         const ids = this.ids;\n         const suggest = webix.ui({\n            view: \"suggest\",\n            filter: ({ value }, search) =>\n               value.toLowerCase().includes(search.toLowerCase()),\n            on: {\n               onShow: () => {\n                  field.populateOptionsDataCy($$(ids.filter), field, {});\n               },\n            },\n            showAllOptions: true,\n         });\n         field.getAndPopulateOptions(suggest, null, field);\n\n         const $filter = $$(ids.filter);\n\n         $filter.define(\"suggest\", suggest);\n         $filter.define(\n            \"placeholder\",\n            `${this.label(\"Filter by\")} ${field.label}`\n         );\n         $filter.enable();\n         $filter.refresh();\n      }\n   }\n\n   onShow() {\n      super.onShow();\n      this.updateUI();\n   }\n\n   applyConnectFilter(rowData) {\n      let connectedVal = rowData?.id ?? null;\n\n      if (\n         connectedVal &&\n         this.field.settings?.isCustomFK &&\n         this.field.settings?.isSource\n      ) {\n         connectedVal =\n            (this.field.indexField\n               ? rowData[this.field.indexField.columnName]\n               : null) ?? // custom index\n            (this.field.indexField2\n               ? rowData[this.field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData.id ??\n            rowData;\n      }\n\n      let filterRule = [];\n      if (connectedVal) {\n         $$(this.ids.reset).show();\n         filterRule = [\n            {\n               key: this.field.id,\n               rule: \"equals\",\n               value: connectedVal,\n            },\n         ];\n      } else {\n         $$(this.ids.reset).hide();\n      }\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: filterRule });\n      dc.reloadData();\n   }\n\n   openSort($view) {\n      this.PopupSortComponent.show($view);\n   }\n\n   /**\n    * @method callbackSortData()\n    * Process the provided sort options from our sort ui.\n    * @param {array} sortRules\n    *        Any Sort Rules added by the user.\n    */\n   async callbackSortData(sortRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.settings?.objectWorkspace?.sortFields, sortRules)) {\n         dc.settings.objectWorkspace.sortFields = sortRules;\n         await this.datacollection.reloadData();\n      }\n      this.updateUI();\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.__filterCond, filterRules)) {\n         dc.filterCondition(filterRules);\n         dc.reloadData();\n         this.updateUI();\n      }\n   }\n\n   toolbarFilter($view) {\n      this.filterHelper.showPopup($view);\n   }\n\n   updateUI() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      var filterButtons = document.getElementsByClassName(\n         `abFilterButton${this.settings.dataviewID}`\n      );\n\n      const onlyFilterRules = this.filterHelper.filterRules();\n      let filterBadge =\n         onlyFilterRules?.rules?.length > 0\n            ? onlyFilterRules?.rules?.length\n            : null;\n      for (let b of filterButtons) {\n         $$(b).define(\"badge\", filterBadge);\n         $$(b).refresh();\n      }\n\n      var sortButtons = document.getElementsByClassName(\n         `abSortButton${this.settings.dataviewID}`\n      );\n\n      const onlySortRules = dc.settings.objectWorkspace.sortFields;\n      let sortBadge = onlySortRules?.length > 0 ? onlySortRules?.length : null;\n\n      for (let b of sortButtons) {\n         $$(b).define(\"badge\", sortBadge);\n         $$(b).refresh();\n      }\n\n      var searchFields = document.getElementsByClassName(\n         `abGlobalSearchField${this.settings.dataviewID}`\n      );\n\n      const searchText = dc.settings.objectWorkspace.searchText;\n      if (searchText != null) {\n         for (let s of searchFields) {\n            var activeElement = document.activeElement;\n            if (\n               activeElement?.attributes?.datacollection?.value ==\n                  this.settings.dataviewID &&\n               activeElement == s.getElementsByTagName(\"input\")[0]\n            ) {\n               // skip the already selected input\n            } else {\n               $$(s).setValue(searchText);\n            }\n         }\n      }\n   }\n\n   detatch() {\n      this.filterHelper.removeListener(\"filter.data\", this._handler_filterData);\n      // this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n}\n","import ABViewDataFilterCore from \"../../core/views/ABViewDataFilterCore\";\nimport ABViewDataFilterComponent from \"./viewComponent/ABViewDataFilterComponent\";\n\nexport default class ABViewDataFilter extends ABViewDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataFilterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nexport default class ABViewDataSelectComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataSelect_${baseView.id}`,\n         Object.assign(\n            {\n               select: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const _ui = super.ui([\n         {\n            view: \"combo\",\n            id: this.ids.select,\n            on: {\n               onChange: (n, o) => {\n                  if (n !== o) this.cursorChange(n);\n               },\n            },\n         },\n      ]);\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async onShow() {\n      super.onShow();\n      const dc = this.datacollection;\n      if (!dc) return;\n      await dc.waitReady();\n      const labelField = this.AB.definitionByID(\n         this.settings.labelField\n      )?.columnName;\n      const options = dc\n         .getData()\n         .map((o) => ({ id: o.id, value: o[labelField] }))\n         .sort((a, b) => (a.value > b.value ? 1 : -1));\n      const $select = $$(this.ids.select);\n      $select.define(\"options\", options);\n      $select.refresh();\n      $select.setValue(dc.getCursor().id);\n   }\n\n   cursorChange(n) {\n      this.datacollection.setCursor(n);\n   }\n}\n","import ABViewDataSelectCore from \"../../core/views/ABViewDataSelectCore\";\nimport ABViewDataSelectComponent from \"./viewComponent/ABViewDataSelectComponent\";\n\nexport default class ABViewDataSelect extends ABViewDataSelectCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataSelectComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","const ABViewDataviewCore = require(\"../../core/views/ABViewDataviewCore\");\nconst ABViewDataviewComponent = require(\"./viewComponent/ABViewDataviewComponent\");\n\nconst ABViewDataviewDefaults = ABViewDataviewCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDataview extends ABViewDataviewCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.detailsPage =\n         this.settings.detailsPage ?? ABViewDataviewDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ?? ABViewDataviewDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ?? ABViewDataviewDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ?? ABViewDataviewDefaults.editTab;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDataviewComponent(this);\n   }\n};\n","const ABViewDetailCore = require(\"../../core/views/ABViewDetailCore\");\nconst ABViewDetailComponent = require(\"./viewComponent/ABViewDetailComponent\");\n\nmodule.exports = class ABViewDetail extends ABViewDetailCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDetailComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewDetailCheckboxCore = require(\"../../core/views/ABViewDetailCheckboxCore\");\nconst ABViewDetailCheckboxComponent = require(\"./viewComponent/ABViewDetailCheckboxComponent\");\n\nmodule.exports = class ABViewDetailCheckbox extends ABViewDetailCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCheckboxComponent(this);\n   }\n};\n","const ABViewDetailConnectCore = require(\"../../core/views/ABViewDetailConnectCore\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\n\nconst ABViewDetailConnectComponent = require(\"./viewComponent/ABViewDetailConnectComponent\");\n\nmodule.exports = class ABViewDetailConnect extends ABViewDetailConnectCore {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n      this.addPageTool.fromSettings(this.settings);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n};\n","const ABViewDetailCustomCore = require(\"../../core/views/ABViewDetailCustomCore\");\nconst ABViewDetailCustomComponent = require(\"./viewComponent/ABViewDetailCustomComponent\");\n\nmodule.exports = class ABViewDetailCustom extends ABViewDetailCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCustomComponent(this);\n   }\n};\n","const ABViewDetailImageCore = require(\"../../core/views/ABViewDetailImageCore\");\nconst ABViewDetailImageComponent = require(\"./viewComponent/ABViewDetailImageComponent\");\n\nmodule.exports = class ABViewDetailImage extends ABViewDetailImageCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailImageComponent(this);\n   }\n};\n","const ABViewDetailItemCore = require(\"../../core/views/ABViewDetailItemCore\");\nconst ABViewDetailItemComponent = require(\"./viewComponent/ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailItem extends ABViewDetailItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailItemComponent(this);\n   }\n};\n","const ABViewDetailTextCore = require(\"../../core/views/ABViewDetailTextCore\");\nconst ABViewDetailTextComponent = require(\"./viewComponent/ABViewDetailTextComponent\");\n\nmodule.exports = class ABViewDetailText extends ABViewDetailTextCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTextComponent(this);\n   }\n};\n","const ABViewDetailTreeCore = require(\"../../core/views/ABViewDetailTreeCore\");\nconst ABViewDetailTreeComponent = require(\"./viewComponent/ABViewDetailTreeComponent\");\n\nmodule.exports = class ABViewDetailTree extends ABViewDetailTreeCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTreeComponent(this);\n   }\n};\n","const ABViewDocxBuilderCore = require(\"../../core/views/ABViewDocxBuilderCore\");\nconst ABViewDocxBuilderComponent = require(\"./viewComponent/ABViewDocxBuilderComponent\");\n\nmodule.exports = class ABViewDocxBuilder extends ABViewDocxBuilderCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDocxBuilderComponent(this);\n   }\n\n   letUserDownload(blob, filename) {\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click();\n      a.remove(); //afterwards we remove the element again\n\n      window.URL.revokeObjectURL(url);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollections || this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.filename) {\n         this.warningsMessage(\"is missing a DOCX template file\");\n      } else {\n         // TODO: should we check for the existance of the file?\n         // this isn't currently an async friendly fn, so how?\n         // let url = this.downloadUrl();\n      }\n   }\n};\n","const ABViewFormCore = require(\"../../core/views/ABViewFormCore\");\nconst ABViewFormComponent = require(\"./viewComponent/ABViewFormComponent\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\nconst ABViewFormCustom = require(\"./ABViewFormCustom\");\nconst ABViewFormConnect = require(\"./ABViewFormConnect\");\nconst ABViewFormDatepicker = require(\"./ABViewFormDatepicker\");\nconst ABViewFormSelectMultiple = require(\"./ABViewFormSelectMultiple\");\nconst ABViewFormTextbox = require(\"./ABViewFormTextbox\");\nconst ABViewFormJson = require(\"./ABViewFormJson\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\n// const ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n// const ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\n// let PopupRecordRule = null;\n// let PopupSubmitRule = null;\n\nconst ABViewFormPropertyComponentDefaults = ABViewFormCore.defaultValues();\n\nmodule.exports = class ABViewForm extends ABViewFormCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      this._callbacks = {\n         onBeforeSaveData: () => true,\n      };\n   }\n\n   superComponent() {\n      if (this._superComponent == null)\n         this._superComponent = super.component();\n\n      return this._superComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormComponent(this);\n   }\n\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABViewFormButton.newInstance(this.application, this);\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views((v) => v.id != defaultButton.id);\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   /**\n    * @method getFormValues\n    *\n    * @param {webix form} formView\n    * @param {ABObject} obj\n    * @param {ABDatacollection} dc\n    * @param {ABDatacollection} dcLink [optional]\n    */\n   getFormValues(formView, obj, dc, dcLink) {\n      // get the fields that are on this form\n      const visibleFields = [\"id\"]; // we always want the id so we can udpate records\n      formView.getValues(function (obj) {\n         visibleFields.push(obj.config.name);\n      });\n\n      // only get data passed from form\n      const allVals = formView.getValues();\n      const formVals = {};\n      visibleFields.forEach((val) => {\n         formVals[val] = allVals[val];\n      });\n\n      // get custom values\n      this.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            comp instanceof ABViewFormConnect ||\n            comp instanceof ABViewFormDatepicker ||\n            comp instanceof ABViewFormSelectMultiple ||\n            (comp instanceof ABViewFormJson && comp.settings.type == \"filter\")\n      ).forEach((f) => {\n         const vComponent = this.viewComponents[f.id];\n         if (vComponent == null) return;\n\n         const field = f.field();\n         if (field) {\n            const getValue = vComponent.getValue ?? vComponent.logic.getValue;\n            if (getValue)\n               formVals[field.columnName] = getValue.call(vComponent, formVals);\n         }\n      });\n\n      // remove connected fields if they were not on the form and they are present in the formVals because it is a datacollection\n      obj.connectFields().forEach((f) => {\n         if (\n            visibleFields.indexOf(f.columnName) == -1 &&\n            formVals[f.columnName]\n         ) {\n            delete formVals[f.columnName];\n            delete formVals[f.relationName()];\n         }\n      });\n\n      // clear undefined values or empty arrays\n      for (const prop in formVals) {\n         if (formVals[prop] == null || formVals[prop].length == 0)\n            formVals[prop] = \"\";\n      }\n\n      // Add parent's data collection cursor when a connect field does not show\n      let linkValues;\n\n      if (dcLink) {\n         linkValues = dcLink.getCursor();\n      }\n\n      if (linkValues) {\n         const objectLink = dcLink.datasource;\n\n         const connectFields = obj.connectFields();\n         connectFields.forEach((f) => {\n            const formFieldCom = this.fieldComponents(\n               (fComp) => fComp?.field?.()?.id === f?.id\n            );\n\n            if (\n               objectLink.id == f.settings.linkObject &&\n               formFieldCom.length < 1 && // check field does not show\n               formVals[f.columnName] === undefined\n            ) {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               formVals[f.columnName] = {};\n               formVals[f.columnName][linkColName] =\n                  linkValues[linkColName] ?? linkValues.id;\n            }\n         });\n      }\n\n      // NOTE: need to pull data of current cursor to calculate Calculate & Formula fields\n      // .formVals variable does not include data that does not display in the Form widget\n      const cursorFormVals = Object.assign(dc.getCursor() ?? {}, formVals);\n\n      // Set value of calculate or formula fields to use in record rule\n      obj.fields((f) => f.key == \"calculate\" || f.key == \"formula\").forEach(\n         (f) => {\n            if (formVals[f.columnName] == null) {\n               let reCalculate = true;\n\n               // WORKAROUND: If \"Formula\" field will have Filter conditions,\n               // Then it is not able to re-calculate on client side\n               // because relational data is not full data so FilterComplex will not have data to check\n               if (f.key == \"formula\" && f.settings?.where?.rules?.length > 0) {\n                  reCalculate = false;\n               }\n\n               formVals[f.columnName] = f.format(cursorFormVals, reCalculate);\n            }\n         }\n      );\n\n      if (allVals.translations?.length > 0)\n         formVals.translations = allVals.translations;\n\n      // give the Object a final chance to review the data being handled.\n      obj.formCleanValues(formVals);\n\n      return formVals;\n   }\n\n   /**\n    * @method validateData\n    *\n    * @param {webix form} formView\n    * @param {ABObject} object\n    * @param {object} formVals\n    *\n    * @return {boolean} isValid\n    */\n   validateData($formView, object, formVals) {\n      let list = \"\";\n\n      // validate required fields\n      const requiredFields = this.fieldComponents(\n         (fComp) =>\n            fComp?.field?.().settings?.required == true ||\n            fComp?.settings?.required == true\n      ).map((fComp) => fComp.field());\n\n      // validate data\n      const validator = object.isValidData(formVals);\n      let isValid = validator.pass();\n\n      // $$($formView).validate();\n      $formView.validate();\n      /**\n       * helper function to fix the webix ui after adding an validation error\n       * message.\n       * @param {string} col - field.columnName\n       */\n      const fixInvalidMessageUI = (col) => {\n         const $forminput = $formView.elements[col];\n         if (!$forminput) return;\n         // Y position\n         const height = $forminput.$height;\n         if (height < 56) {\n            $forminput.define(\"height\", 60);\n            $forminput.resize();\n         }\n\n         // X position\n         const domInvalidMessage = $forminput.$view.getElementsByClassName(\n            \"webix_inp_bottom_label\"\n         )[0];\n         if (!domInvalidMessage?.style[\"margin-left\"]) {\n            domInvalidMessage.style.marginLeft = `${\n               this.settings.labelWidth ??\n               ABViewFormPropertyComponentDefaults.labelWidth\n            }px`;\n         }\n      };\n\n      // Display required messages\n      requiredFields.forEach((f) => {\n         if (!f) return;\n\n         const fieldVal = formVals[f.columnName];\n         if (fieldVal == \"\" || fieldVal == null || fieldVal.length < 1) {\n            $formView.markInvalid(f.columnName, L(\"This is a required field.\"));\n            list += `<li>${L(\"Missing Required Field\")} ${f.columnName}</li>`;\n            isValid = false;\n\n            // Fix position of invalid message\n            fixInvalidMessageUI(f.columnName);\n         }\n      });\n\n      // if data is invalid\n      if (!isValid) {\n         const saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // error message\n         if (validator?.errors?.length) {\n            validator.errors.forEach((err) => {\n               $formView.markInvalid(err.name, err.message);\n               list += `<li>${err.name}: ${err.message}</li>`;\n               fixInvalidMessageUI(err.name);\n            });\n\n            saveButton?.disable();\n         } else {\n            saveButton?.enable();\n         }\n      }\n      if (list) {\n         webix.alert({\n            type: \"alert-error\",\n            title: L(\"Problems Saving\"),\n            width: 400,\n            text: `<ul style='text-align:left'>${list}</ul>`,\n         });\n      }\n\n      return isValid;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   /**\n    * @method saveData\n    * save data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async saveData($formView) {\n      // call .onBeforeSaveData event\n      // if this function returns false, then it will not go on.\n      if (!this._callbacks?.onBeforeSaveData?.()) return;\n\n      $formView.clearValidation();\n\n      // get ABDatacollection\n      const dv = this.datacollection;\n      if (dv == null) return;\n\n      // get ABObject\n      const obj = dv.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dv.model;\n      if (model == null) return;\n\n      // show progress icon\n      $formView.showProgress?.({ type: \"icon\" });\n\n      // get update data\n      const formVals = this.getFormValues(\n         $formView,\n         obj,\n         dv,\n         dv.datacollectionLink\n      );\n\n      // form ready function\n      const formReady = (newFormVals) => {\n         // clear cursor after saving.\n         if (dv) {\n            if (this.settings.clearOnSave) {\n               dv.setCursor(null);\n               $formView.clear();\n            } else {\n               if (newFormVals && newFormVals.id) dv.setCursor(newFormVals.id);\n            }\n         }\n\n         $formView.hideProgress?.();\n\n         // if there was saved data pass it up to the onSaveData callback\n         // if (newFormVals) this._logic.callbacks.onSaveData(newFormVals);\n         if (newFormVals) this.emit(\"saved\", newFormVals); // Q? is this the right upgrade?\n      };\n\n      const formError = (err) => {\n         const $saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // mark error\n         if (err) {\n            if (err.invalidAttributes) {\n               for (const attr in err.invalidAttributes) {\n                  let invalidAttrs = err.invalidAttributes[attr];\n                  if (invalidAttrs && invalidAttrs[0])\n                     invalidAttrs = invalidAttrs[0];\n\n                  $formView.markInvalid(attr, invalidAttrs.message);\n               }\n            } else if (err.sqlMessage) {\n               webix.message({\n                  text: err.sqlMessage,\n                  type: \"error\",\n               });\n            } else {\n               webix.message({\n                  text: L(\"System could not save your data\"),\n                  type: \"error\",\n               });\n               this.AB.notify.developer(err, {\n                  message: \"Could not save your data\",\n                  view: this.toObj(),\n               });\n            }\n         }\n\n         $saveButton?.enable();\n\n         $formView?.hideProgress?.();\n      };\n\n      // Load data of DCs that use in record rules\n      await this.loadDcDataOfRecordRules();\n\n      // wait for our Record Rules to be ready before we continue.\n      await this.recordRulesReady();\n\n      // update value from the record rule (pre-update)\n      this.doRecordRulesPre(formVals);\n\n      // validate data\n      if (!this.validateData($formView, obj, formVals)) {\n         // console.warn(\"Data is invalid.\");\n         $formView.hideProgress?.();\n         return;\n      }\n\n      let newFormVals;\n      // {obj}\n      // The fully populated values returned back from service call\n      // We use this in our post processing Rules\n\n      try {\n         // is this an update or create?\n         if (formVals.id) {\n            newFormVals = await model.update(formVals.id, formVals);\n         } else {\n            newFormVals = await model.create(formVals);\n         }\n      } catch (err) {\n         formError(err.data);\n         throw err;\n      }\n\n      /*\n      // OLD CODE:\n      try {\n         await this.doRecordRules(newFormVals);\n         // make sure any updates from RecordRules get passed along here.\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return newFormVals;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n         // Question:  how do we respond to an error?\n         // ?? just keep going ??\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return;\n      }\n      */\n\n      try {\n         await this.doRecordRules(newFormVals);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      // make sure any updates from RecordRules get passed along here.\n      try {\n         this.doSubmitRules(newFormVals);\n      } catch (errs) {\n         this.AB.notify.developer(errs, {\n            message: \"Error processing Submit Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      formReady(newFormVals);\n      return newFormVals;\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               // topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      let childComponent = this.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ui.id)) {\n         $$(childComponent.ui.id).focus();\n      }\n   }\n\n   async loadDcDataOfRecordRules() {\n      const tasks = [];\n\n      (this.settings?.recordRules ?? []).forEach((rule) => {\n         (rule?.actionSettings?.valueRules?.fieldOperations ?? []).forEach(\n            (op) => {\n               if (op.valueType !== \"exist\") return;\n\n               const pullDataDC = this.AB.datacollectionByID(op.value);\n\n               if (\n                  pullDataDC?.dataStatus ===\n                  pullDataDC.dataStatusFlag.notInitial\n               )\n                  tasks.push(pullDataDC.loadData());\n            }\n         );\n      });\n\n      await Promise.all(tasks);\n\n      return true;\n   }\n\n   get viewComponents() {\n      const superComponent = this.superComponent();\n      return superComponent.viewComponents;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (this.settings.recordRules) {\n         // TODO: scan recordRules for warnings\n      }\n\n      if (this.settings.submitRules) {\n         // TODO: scan submitRules for warnings.\n      }\n   }\n\n   /**\n    * @method deleteData\n    * delete data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async deleteData($formView) {\n      // get ABDatacollection\n      const dc = this.datacollection;\n      if (dc == null) return;\n\n      // get ABObject\n      const obj = dc.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dc.model;\n      if (model == null) return;\n\n      // get update data\n      const formVals = $formView.getValues();\n\n      if (formVals?.id) {\n         const result = await model.delete(formVals.id);\n\n         // clear form\n         if (result) {\n            dc.setCursor(null);\n            $formView.clear();\n         }\n\n         return result;\n      }\n   }\n};\n","const ABViewFormButtonCore = require(\"../../core/views/ABViewFormButtonCore\");\nconst ABViewFormButtonComponent = require(\"./viewComponent/ABViewFormButtonComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormButtonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormButtonComponent(this);\n   }\n};\n","const ABViewFormCheckboxCore = require(\"../../core/views/ABViewFormCheckboxCore\");\nconst ABViewFormCheckboxComponent = require(\"./viewComponent/ABViewFormCheckboxComponent\");\n\nmodule.exports = class ABViewFormCheckbox extends ABViewFormCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCheckboxComponent(this);\n   }\n};\n","const ABViewFormConnectCore = require(\"../../core/views/ABViewFormConnectCore\");\nconst ABViewFormConnectComponent = require(\"./viewComponent/ABViewFormConnectComponent\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\nconst ABViewPropertyEditPage =\n   require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\nconst ABViewFormConnectPropertyComponentDefaults =\n   ABViewFormConnectCore.defaultValues();\n\nmodule.exports = class ABViewFormConnect extends ABViewFormConnectCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      // NOTE: .objectWorkspace is a v1 setting\n      // if (\n      //    !this.settings.objectWorkspace ||\n      //    !this.settings.objectWorkspace.filterConditions\n      // ) {\n      //    this.AB.error(\"Error: filter conditions do not exist\", {\n      //       error: \"filterConditions do not exist\",\n      //       viewLocation: {\n      //          application: this.application.name,\n      //          id: this.id,\n      //          name: this.label,\n      //       },\n      //       view: this,\n      //    });\n      //    // manually place an empty filter\n      //    this.settings[\"objectWorkspace\"] = {};\n      //    this.settings[\"objectWorkspace\"][\"filterConditions\"] = { glue: \"and\" };\n      // }\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n      this.editPageTool.fromSettings(this.settings);\n   }\n\n   static get addPageProperty() {\n      return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   }\n\n   static get editPageProperty() {\n      return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n\n   get editPageTool() {\n      if (this.__editPageTool == null)\n         this.__editPageTool = new ABViewPropertyEditPage();\n\n      return this.__editPageTool;\n   }\n};\n","const ABViewFormCustomCore = require(\"../../core/views/ABViewFormCustomCore\");\nconst ABViewFormCustomComponent = require(\"./viewComponent/ABViewFormCustomComponent\");\n\nmodule.exports = class ABViewFormCustom extends ABViewFormCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCustomComponent(this);\n   }\n};\n","const ABViewFormDatepickerCore = require(\"../../core/views/ABViewFormDatepickerCore\");\nconst ABViewFormDatepickerComponent = require(\"./viewComponent/ABViewFormDatepickerComponent\");\n\nmodule.exports = class ABViewFormDatepicker extends ABViewFormDatepickerCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormDatepickerComponent(this);\n   }\n};\n","const ABViewFormItemCore = require(\"../../core/views/ABViewFormItemCore\");\nconst ABViewFormItemComponent = require(\"./viewComponent/ABViewFormItemComponent\");\n\nconst ABViewFormFieldPropertyComponentDefaults =\n   ABViewFormItemCore.defaultValues();\n\nmodule.exports = class ABViewFormItem extends ABViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static get componentUI() {\n      return ABViewFormItemComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormItemComponent(this);\n   }\n\n   /**\n    * @method parentFormUniqueID\n    * return a unique ID based upon the closest form object this component is on.\n    * @param {string} key  The basic id string we will try to make unique\n    * @return {string}\n    */\n   parentFormUniqueID(key) {\n      var form = this.parentFormComponent();\n      var uniqueInstanceID;\n      if (form) {\n         uniqueInstanceID = form.uniqueInstanceID;\n      } else {\n         uniqueInstanceID = webix.uid();\n      }\n\n      return key + uniqueInstanceID;\n   }\n};\n","const ABViewFormJsonCore = require(\"../../core/views/ABViewFormJsonCore\");\nconst ABViewFormJsonComponent = require(\"./viewComponent/ABViewFormJsonComponent\");\n\nmodule.exports = class ABViewFormJson extends ABViewFormJsonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormJsonComponent(this);\n   }\n};\n","const ABViewFormNumberCore = require(\"../../core/views/ABViewFormNumberCore\");\nconst ABViewFormNumberComponent = require(\"./viewComponent/ABViewFormNumberComponent\");\n\nmodule.exports = class ABViewFormNumber extends ABViewFormNumberCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormNumberComponent(this);\n   }\n};\n","const ABViewFormReadonlyCore = require(\"../../core/views/ABViewFormReadonlyCore\");\nconst ABViewFormReadonlyComponent = require(\"./viewComponent/ABViewFormReadonlyComponent\");\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormReadonlyCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormReadonlyComponent(this);\n   }\n};\n","const ABViewFormSelectMultipleCore = require(\"../../core/views/ABViewFormSelectMultipleCore\");\nconst ABViewFormSelectMultipleComponent = require(\"./viewComponent/ABViewFormSelectMultipleComponent\");\n\nmodule.exports = class ABViewFormSelectMultiple extends (\n   ABViewFormSelectMultipleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectMultipleComponent(this);\n   }\n};\n","const ABViewFormSelectSingleCore = require(\"../../core/views/ABViewFormSelectSingleCore\");\nconst ABViewFormSelectSingleComponent = require(\"./viewComponent/ABViewFormSelectSingleComponent\");\n\nmodule.exports = class ABViewFormSelectSingle extends (\n   ABViewFormSelectSingleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectSingleComponent(this);\n   }\n};\n","const ABViewFormTextboxCore = require(\"../../core/views/ABViewFormTextboxCore\");\nconst ABViewFormTextboxComponent = require(\"./viewComponent/ABViewFormTextboxComponent\");\n\nmodule.exports = class ABViewFormTextbox extends ABViewFormTextboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTextboxComponent(this);\n   }\n};\n","const ABViewFormTreeCore = require(\"../../core/views/ABViewFormTreeCore\");\nconst ABViewFormTreeComponent = require(\"./viewComponent/ABViewFormTreeComponent\");\n\nmodule.exports = class ABViewFormTree extends ABViewFormTreeCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTreeComponent(this);\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewGanttComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGantt_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n               gantt: \"\",\n            },\n            ids\n         )\n      );\n\n      this._tempDC = null;\n      // {ABDataCollection}\n      // A link to a DC that was passed in.  NOTE: this is only for\n      // the temp DCs created in the AppBuilder Designer and passed\n      // in.  Normal DCs are handled by the default CurrentDatacollection\n      // methods.\n\n      this.TitleField = null;\n      this.StartDateField = null;\n      this.EndDateField = null;\n      this.DurationField = null;\n      this.ProgressField = null;\n      this.NotesField = null;\n\n      this.originalStartDate = null;\n      this.originalEndDate = null;\n\n      this.pendingAdds = {};\n      // {Promise}  /* id : {Promise} */\n      // In order to prevent a race condition where multiple adds can be\n      // generated on the same item, we catch the repeats and just return\n      // the same data for each.\n\n      const idGantt = this.ids.gantt;\n\n      this.ganttElement = {\n         isExistsTask: (taskId) => {\n            const localService = $$(idGantt).getService(\"local\");\n            if (!localService) return false;\n\n            const tasksData = localService.tasks();\n            if (!tasksData || !tasksData.exists) return false;\n\n            return tasksData.exists(taskId);\n         },\n         removeTask: (taskId) => {\n            if (!this.ganttElement.isExistsTask(taskId)) return;\n\n            const opsService = $$(idGantt).getService(\"operations\");\n            if (!opsService) return;\n\n            return opsService.removeTask(taskId);\n         },\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const { YEAR_SCALE, MONTH_SCALE, DAY_SCALE } = this.getConstantScales;\n      const _ui = super.ui([\n         {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"menu\",\n                  id: ids.menu,\n                  layout: \"x\",\n                  width: 300,\n                  data: [\n                     {\n                        id: \"day\",\n                        value: this.label(\"Day\"),\n                     },\n                     {\n                        id: \"week\",\n                        value: this.label(\"Week\"),\n                     },\n                     {\n                        id: \"month\",\n                        value: this.label(\"Month\"),\n                     },\n                     {\n                        id: \"year\",\n                        value: this.label(\"Year\"),\n                     },\n                  ],\n                  on: {\n                     onItemClick: (id /* , e, node */) => {\n                        this.setScale(id);\n                     },\n                  },\n               },\n            ],\n         },\n         {\n            id: ids.gantt,\n            view: \"gantt\",\n            scales: [YEAR_SCALE, MONTH_SCALE, DAY_SCALE],\n            override: new Map([\n               [\n                  gantt.services.Backend,\n                  // global webix gantt object\n                  class MyBackend extends gantt.services.Backend {\n                     async tasks() {\n                        const DC = self.CurrentDatacollection;\n                        if (!DC) return [];\n\n                        // if (DC.dataStatus != DC.dataStatusFlag.initialized) {\n                        //    await DC.loadData().catch((err) => {\n                        //       console.error(err);\n                        //    });\n                        // }\n                        return (DC.getData() || []).map((d, indx) =>\n                           self.convertFormat(d, indx)\n                        );\n                     }\n                     links() {\n                        return Promise.resolve([]);\n                     }\n                     async addTask(obj, index, parent) {\n                        if (!self.pendingAdds[obj.id]) {\n                           self.pendingAdds[obj.id] = self.taskAdd(obj);\n                        }\n                        const newTask = await self.pendingAdds[obj.id];\n                        delete self.pendingAdds[obj.id];\n                        return {\n                           id: (newTask || {}).id,\n                        };\n                     }\n                     async updateTask(id, obj) {\n                        return await self.taskUpdate(obj.id, obj);\n                     }\n                     async removeTask(id) {\n                        return await self.taskRemove(id);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // #HACK!: as of webix v.8.1.1 there is a visual glitch of the Gantt\n      // object if you replace a gantt widget with a new definition (like in\n      // the ABDesigner you can switch from Gantt1 to Gantt2 in the object\n      // workspace).  In that one case, the menu would disappear even though\n      // the data is present.  So this makes sure the menu is shown\n      const $menu = $$(this.ids.menu);\n\n      if ($menu) $menu.showItem(\"day\");\n   }\n\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return super.CurrentDatacollection || this._tempDC;\n   }\n\n   /**\n    * @method convertFormat()\n    * Convert an ABObject's row value into a gantt task data format.\n    * @param {obj} row\n    *        The current row of data returned from an ABObject.\n    * @param {int} index\n    *        The order of this task.\n    * @return {obj}\n    *         A key=>value hash corresponding to the gantt task that\n    *         represents this row of data.\n    */\n   convertFormat(row = {}, index = null) {\n      const data = {};\n      const StartDateField = this.StartDateField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (!StartDateField || (!EndDateField && !DurationField)) return data;\n\n      const currDate = new Date();\n\n      data[\"id\"] = row.id || row.uuid;\n      data[\"type\"] = \"task\";\n      data[\"parent\"] = 0;\n      data[\"open\"] = true;\n\n      // define label\n      const TitleField = this.TitleField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n\n      data[\"text\"] = TitleField\n         ? row[TitleField.columnName] || \"\"\n         : this.CurrentObject.displayData(row);\n      data[\"start_date\"] = row[StartDateField.columnName] || currDate;\n      data[\"progress\"] = ProgressField\n         ? parseFloat(row[ProgressField.columnName] || 0)\n         : 0;\n\n      if (NotesField) data[\"details\"] = row[NotesField.columnName] || \"\";\n\n      if (EndDateField)\n         data[\"end_date\"] = row[EndDateField.columnName] || currDate;\n\n      if (DurationField) data[\"duration\"] = row[DurationField.columnName] || 1;\n\n      // Default values\n      if (!data[\"end_date\"] && !data[\"duration\"]) {\n         data[\"end_date\"] = currDate;\n         data[\"duration\"] = 1;\n      }\n\n      if (index) data[\"order\"] = index;\n\n      return data;\n   }\n\n   /**\n    * @method convertValues()\n    * Convert a Gantt task into a set of values for our ABObject.\n    * @param {obj} task\n    *        The current gantt task data.\n    * @return {obj}\n    *         A key=>value hash corresponding to the ABObject that\n    *         is tied to this gantt.\n    */\n   convertValues(task) {\n      const patch = {};\n      const TitleField = this.TitleField;\n      const StartDateField = this.StartDateField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (TitleField) patch[TitleField.columnName] = task[\"text\"] || \"\";\n\n      if (StartDateField) patch[StartDateField.columnName] = task[\"start_date\"];\n\n      if (ProgressField)\n         patch[ProgressField.columnName] = parseFloat(task[\"progress\"] || 0);\n\n      if (NotesField) patch[NotesField.columnName] = task[\"details\"];\n\n      if (EndDateField) patch[EndDateField.columnName] = task[\"end_date\"];\n\n      if (DurationField) patch[DurationField.columnName] = task[\"duration\"];\n\n      return patch;\n   }\n\n   /**\n    * @method objectLoad\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      // const baseView = this.view;\n      const settings = this.settings;\n\n      if (object) {\n         this.TitleField = object.fieldByID(settings.titleFieldID);\n         this.StartDateField = object.fieldByID(settings.startDateFieldID);\n         this.EndDateField = object.fieldByID(settings.endDateFieldID);\n         this.DurationField = object.fieldByID(settings.durationFieldID);\n         this.ProgressField = object.fieldByID(settings.progressFieldID);\n         this.NotesField = object.fieldByID(settings.notesFieldID);\n      }\n   }\n\n   /**\n    * @method datacollectionLoad\n    * @param {ABDatacollection} datacollection\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const dc = this.CurrentDatacollection || datacollection;\n      if (!dc) return;\n\n      // NOTE: this can happen in the ABDesigner object workspace.\n      // we send in a temp DC with no .id\n      this._tempDC = datacollection;\n\n      // NOTE: keep .objectLoad() before any .initData() is called.\n      this.objectLoad(dc.datasource);\n\n      const eventNames = [\"create\", \"update\", \"delete\", \"initializedData\"];\n\n      eventNames.forEach((e) => {\n         if (\n            e in dc._events &&\n            this.__events.findIndex((eo) => eo.eventName === e) !== -1\n         )\n            return;\n\n         switch (e) {\n            case \"delete\":\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: \"delete\",\n                  listener: (taskId) => {\n                     // remove this task in gantt\n                     if (this.ganttElement.isExistsTask(taskId))\n                        this.ganttElement.removeTask(taskId);\n                  },\n               });\n\n               break;\n\n            default:\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: e,\n                  listener: () => {\n                     this.initData();\n                  },\n               });\n\n               break;\n         }\n      });\n   }\n\n   /**\n    * @function hide()\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   initData() {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const dataService = ganttElem.getService(\"local\");\n      if (!dataService) return;\n\n      const dcTasks = dataService.tasks();\n      if (!dcTasks) return;\n\n      // gantt v 8.1.1\n      // Note: there is a race condition that can happen here.\n      // dataService.tasks() calls the MyBackend.tasks() above which\n      // returns a Promise.\n      // when you call dcTasks.clearAll() before the promise\n      // is resolved, the gantt internally throws an error.\n      //\n      // So give webix some time to internally complete it's process\n      // before we do .clearAll();\n      setTimeout(() => {\n         dcTasks.clearAll();\n\n         const DC = this.CurrentDatacollection;\n         const gantt_data = {\n            data: DC\n               ? (DC.getData() || []).map((d, index) =>\n                    this.convertFormat(d, index)\n                 )\n               : [],\n         };\n\n         // check required fields before parse\n         if (this.StartDateField && (this.EndDateField || this.DurationField)) {\n            dcTasks.parse(gantt_data);\n         }\n\n         // Keep original start and end dates for calculate scale to display\n         const currScale = dataService.getScales();\n\n         this.originalStartDate = currScale.start;\n         this.originalEndDate = currScale.end;\n\n         this.sort();\n      }, 10);\n   }\n\n   get getConstantScales() {\n      const DAY_SCALE = { unit: \"day\", format: \"%d\" },\n         WEEK_SCALE = {\n            unit: \"week\",\n            format: (start) => {\n               const parser = webix.Date.dateToStr(\"%d %M\");\n               const wstart = webix.Date.weekStart(start);\n               const wend = webix.Date.add(\n                  webix.Date.add(wstart, 1, \"week\", true),\n                  -1,\n                  \"day\",\n                  true\n               );\n\n               return parser(wstart) + \" - \" + parser(wend);\n            },\n         },\n         MONTH_SCALE = { unit: \"month\", format: \"%F\" },\n         YEAR_SCALE = { unit: \"year\", format: \"%Y\" };\n\n      return {\n         DAY_SCALE,\n         WEEK_SCALE,\n         MONTH_SCALE,\n         YEAR_SCALE,\n      };\n   }\n\n   setScale(scale) {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const ganttData = ganttElem.getService(\"local\");\n      if (!ganttData) return;\n\n      const newScales = [];\n      const { YEAR_SCALE, MONTH_SCALE, WEEK_SCALE, DAY_SCALE } =\n         this.getConstantScales;\n\n      switch (scale) {\n         case \"day\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, DAY_SCALE);\n            break;\n\n         case \"week\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, WEEK_SCALE);\n            break;\n\n         case \"month\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE);\n            break;\n\n         case \"year\":\n            newScales.push(YEAR_SCALE);\n            break;\n      }\n\n      const abWebix = this.AB.Webix;\n      const currScale = ganttElem.getService(\"local\").getScales(),\n         start = abWebix.Date.add(this.originalStartDate, -1, scale, true),\n         end = abWebix.Date.add(this.originalEndDate, 1, scale, true);\n\n      ganttData.setScales(\n         start,\n         end,\n         currScale.precise,\n         currScale.cellWidth,\n         currScale.cellHeight,\n         newScales\n      );\n      ganttElem.$app.refresh();\n      ganttElem.getState().$batch({ top: 0, left: 0 });\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   onShow() {\n      super.onShow();\n      this.datacollectionLoad(this.datacollection);\n\n      $$(this.ids.component)?.show();\n   }\n\n   sort() {\n      // TODO: sorting;\n      return;\n      // const gantt = $$(ids.gantt).getGantt();\n      // if (!gantt) return;\n\n      // // default sort\n      // const MAX_date = new Date(8640000000000000);\n      // gantt.sort(function(a, b) {\n      //    const aStartDate = a[\"start_date\"],\n      //       aEndDate = a[\"end_date\"],\n      //       aDuration = a[\"duration\"] || 1,\n      //       bStartDate = b[\"start_date\"],\n      //       bEndDate = b[\"end_date\"],\n      //       bDuration = b[\"duration\"] || 1;\n\n      //    // if no start date, then be a last item\n      //    if (\n      //       a[this.StartDateField.columnName] == null ||\n      //       b[this.StartDateField.columnName] == null\n      //    ) {\n      //       return (\n      //          (a[this.StartDateField.columnName] || MAX_date) -\n      //          (b[this.StartDateField.columnName] || MAX_date)\n      //       );\n      //    } else if (aStartDate != bStartDate) {\n      //       return aStartDate - bStartDate;\n      //    } else if (aEndDate != bEndDate) {\n      //       return aEndDate - bEndDate;\n      //    } else if (aDuration != bDuration) {\n      //       return bDuration - aDuration;\n      //    }\n      // }, false);\n   }\n\n   async taskAdd(taskData) {\n      const patch = this.convertValues(taskData);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend addTask() method\n         // On Webix documents, the method addTask() have to return the added object so we have to pass the data we add through this method.\n         return await this.CurrentObject?.model().create(patch);\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Saving Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to save this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskAdd(): Error Saving Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskRemove(rowId) {\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend removeTask() method\n         // On Webix documents, the method removeTask() return {} (an empty object) so we return {} in removeTask() instead.\n         await this.CurrentObject.model().delete(rowId);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Removing Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to remove this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskRemove(): Error Removing Item\",\n            rowId,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskUpdate(rowId, updatedTask) {\n      const patch = this.convertValues(updatedTask);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend updateTask() method\n         // On Webix documents, the method updateTask() return {} (an empty object) so we return {} in updateTask() instead.\n         await this.CurrentObject.model().update(rowId, patch);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Updating Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to update this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskUpdate(): Error Updating Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n}\n","import ABViewGanttComponent from \"./viewComponent/ABViewGanttComponent\";\n\nconst ABViewGanttCore = require(\"../../core/views/ABViewGanttCore\");\n\nexport default class ABViewGantt extends ABViewGanttCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGanttComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (!this.settings.startDateFieldID) {\n            this.warningsMessage(`doesn't have a start date field set.`);\n         } else {\n            let field = DC.datasource?.fieldByID(\n               this.settings.startDateFieldID\n            );\n            if (!field) {\n               this.warningsMessage(\n                  `can't lookup field: startDate[${this.settings.startDateFieldID}]`\n               );\n            }\n         }\n      }\n   }\n}\n","/*\n * ABViewGridPopupExport.js\n * Manage the Popup that allows you to export data into one of our supported\n * formats.\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nexport default class ABWorkObjectPopupExport extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupExport\";\n\n      super({\n         popupExport: `${idBase}_popupExport`,\n         list: `${idBase}_popupExport_list`,\n      });\n\n      this._currentObject = null;\n      // {ABObject}\n      // The ABObject of the data we will export.  We can find out the fields\n      // from the object.\n\n      this._dataCollection = null;\n      // {ABDatacCollection}\n      // The ABDataCollection that contains the data we are going to export.\n\n      this._grid = null;\n      // {webix.grid}\n      // the current webix.grid that contains the data we are going to export.\n\n      this._filename = null;\n      // {string}\n      // the name of the desired output file.\n\n      this._hiddenFields = [];\n      // {array}\n      // An array of ABField.columnName(s) that we are not wanting to export\n   }\n\n   ui() {\n      var self = this;\n\n      // webix UI definition:\n      return {\n         view: \"popup\",\n         id: this.ids.popupExport,\n         width: 160,\n         height: 0, //150,\n         select: false,\n         hidden: true,\n         body: {\n            id: this.ids.list,\n            view: \"list\",\n            autoheight: true,\n            data: [\n               { name: \"CSV\", icon: \"file-excel-o\" },\n               { name: \"Excel\", icon: \"file-excel-o\" },\n               { name: \"PDF\", icon: \"file-pdf-o\" },\n               { name: \"PNG\", icon: \"file-image-o\" },\n            ],\n            template:\n               \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n            on: {\n               onItemClick: function (id /*, e, node */) {\n                  var component = this.getItem(id);\n                  self.export(component.name);\n               },\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n      webix.ui(this.ui());\n      $$(this.ids.popupExport).resize();\n   }\n\n   // internal business logic\n\n   /**\n    * @method dataCollectionLoad()\n    * the current ABDataCollection we are working with.\n    * @param {ABDataCollection} dc\n    */\n   dataCollectionLoad(dc) {\n      this._dataCollection = dc;\n   }\n\n   /**\n    * @method objectLoad()\n    * The current ABObject we are working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method setHiddenFields\n    * Register Fields we don't want exported in our data.\n    * @param {array} fields\n    *        An array of ABField.columnName(s) to exclude from our export.\n    */\n   setHiddenFields(fields = []) {\n      this._hiddenFields = fields ?? [];\n   }\n\n   /**\n    * @method setFilename()\n    * Register the name of the file we want our data to export as.\n    * @param {string} filename\n    */\n   setFilename(filename) {\n      this._filename = filename;\n   }\n\n   /**\n    * @method setGridComponent()\n    * Register the webix.grid that currently stores the data we are\n    * exporting.\n    * @param {webix.grid} $grid\n    */\n   setGridComponent($grid) {\n      this._grid = $grid;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    */\n   show($view) {\n      $$(this.ids.popupExport).show($view);\n   }\n\n   async export(name) {\n      let fnExport;\n\n      let columns = {};\n\n      let dc = this._dataCollection;\n      let _currentObject = this._currentObject;\n      let _grid = this._grid;\n      let _filename = this._filename;\n\n      if (\n         dc &&\n         (!dc.settings.loadAll || dc.dataStatus == dc.dataStatusFlag.notInitial)\n      ) {\n         // Load all data\n         await dc.reloadData(0, null);\n         dc.settings.loadAll = true;\n      }\n\n      // client filter data\n      // template of report\n      if (_currentObject) {\n         _currentObject.fields().forEach((f) => {\n            // hidden fields\n            if (this._hiddenFields.indexOf(f.columnName) > -1) return;\n\n            columns[f.columnName] = {\n               template: (rowData) => {\n                  return f.format(rowData);\n               },\n            };\n         });\n      }\n\n      // If there are checked items, then export them only\n      // Otherwise export all items\n      const noCheckedRow =\n         _grid.data.find({ appbuilder_select_item: 1 }).length < 1;\n      const filterRow = (row) =>\n         noCheckedRow || row?.appbuilder_select_item == 1;\n\n      switch (name) {\n         case \"CSV\":\n            webix.csv.delimiter.cols = \",\";\n\n            fnExport = webix.toCSV(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filter: filterRow,\n            });\n            break;\n         case \"Excel\":\n            fnExport = webix.toExcel(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               name:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filterHTML: true,\n               filter: filterRow,\n            });\n            break;\n         case \"PDF\":\n            fnExport = webix.toPDF(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               filterHTML: true,\n               filter: filterRow,\n            });\n            break;\n         case \"PNG\":\n            fnExport = webix.toPNG(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               // filter: NOT SUPPORT\n            });\n            break;\n      }\n\n      try {\n         await fnExport;\n         $$(this.ids.popupExport).hide();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: `ABViewGridPopupExport:export(): System could not export: ${name}`,\n            exportType: name,\n            columns,\n            fileName: _filename,\n         });\n      }\n   }\n\n   // this.dataCollectionLoad = _logic.dataCollectionLoad;\n   // this.objectLoad = _logic.objectLoad;\n   // this.setGridComponent = _logic.setGridComponent;\n   // this.setFilename = _logic.setFilename;\n   // this.setHiddenFields = _logic.setHiddenFields;\n   // this.show = _logic.show;\n}\n","/*\n * ABViewGridPopupMassUpdate\n *\n * An ABViewGrid can offer a mass update feature.  This is a ui component\n * to help with the processing of the update.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\nimport RowUpdater from \"../RowUpdater\";\n\nvar L = null;\n\nexport default class ABViewGridPopupMassUpdate extends ClassUI {\n   //.extend(idBase, function(App) {\n\n   constructor(ABViewGridComponent, idBase) {\n      idBase = idBase || \"abviewgridpopupMassUpdate\";\n\n      super({\n         component: `${idBase}_popupMassUpdate`,\n         submit: `${idBase}_submitMassUpdate`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // Which ABObject are we currently working with.\n\n      this.GridComponent = ABViewGridComponent;\n      // {ABViewGridComponent}\n      // The current ABViewGridComponent we are working with.\n\n      this.AB = ABViewGridComponent.AB;\n      // {ABFactory}\n\n      this.rowUpdater = new RowUpdater(idBase, this.AB);\n      // {RowUpdater}\n      // An instance of our RowUpdater form builder.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         view: \"popup\",\n         id: ids.component,\n         // modal: true,\n         body: {\n            width: 500,\n            rows: [\n               // Update panel\n               this.rowUpdater.ui(),\n               { height: 15 },\n               {\n                  cols: [\n                     {},\n                     {\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        width: 100,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     {\n                        id: ids.submit,\n                        css: \"webix_primary\",\n                        view: \"button\",\n                        label: L(\"Update\"),\n                        type: \"form\",\n                        width: 120,\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      webix.ui(this.ui());\n      this.rowUpdater.init(AB);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method hide()\n    * Hide the popup.\n    */\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object & datatable\n    * @param {ABObject} object\n    *        the currently selected object.\n    * @param {webix.datatable} dataTable\n    *        the dataTable we need to run the mass update on...trust me this\n    *        will be good\n    */\n   objectLoad(object, dataTable) {\n      this.CurrentObject = object;\n      this.rowUpdater.objectLoad(object);\n      this.DataTable = dataTable;\n   }\n\n   onShow() {}\n\n   /**\n    * @method show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {json} options\n    *        Additional webix options related to the .show() method.\n    */\n   show($view, options = null) {\n      if (options != null) {\n         $$(this.ids.component).show($view, options);\n      } else {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   /**\n    * @method submit()\n    * Process the submit action by getting the values to change and then\n    * running a batchUpdate() on the items in our datatable that were selected.\n    */\n   submit() {\n      // Update values to records\n      let update_button = $$(this.ids.submit),\n         update_items = this.rowUpdater.getValue() || [];\n\n      update_button.disable();\n\n      if (!this.GridComponent) {\n         // TODO : Message\n         // console.log(\"no data collection to update\");\n         update_button.enable();\n         return;\n      } else if (update_items.length < 1) {\n         // TODO : Message\n         update_button.enable();\n         return;\n      }\n\n      let $datatable = this.GridComponent.getDataTable(); // $$(DataTable.ui.id);\n      let updatedRowIds = [];\n      $datatable.data.each(function (row) {\n         if (\n            row &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item == 1\n         ) {\n            updatedRowIds.push(row.id);\n         }\n      });\n\n      let vals = {};\n      update_items.forEach((item) => {\n         let fieldInfo = this.CurrentObject.fieldByID(item.fieldId);\n         if (!fieldInfo) return;\n\n         vals[fieldInfo.columnName] = item.value;\n      });\n\n      if (updatedRowIds.length > 0) {\n         webix.confirm({\n            title: L(\"Updating Multiple Records\"),\n            text: L(\"Are you sure you want to update the selected records?\"),\n            callback: (result) => {\n               if (result) {\n                  if ($datatable && $datatable.showProgress)\n                     $datatable.showProgress({ type: \"icon\" });\n\n                  let objModel = this.CurrentObject.model();\n                  objModel\n                     .batchUpdate({\n                        rowIds: updatedRowIds,\n                        values: vals,\n                     })\n                     .then(() => {\n                        // Update webix.datatable\n                        (updatedRowIds ?? []).forEach((rowId) => {\n                           $datatable.updateItem(rowId, vals);\n                        });\n\n                        // Anything we need to do after we are done.\n                        update_button.enable();\n                        this.hide();\n\n                        if ($datatable && $datatable.hideProgress)\n                           $datatable.hideProgress();\n                     })\n                     .catch((err) => {\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewGridPopupMassUpdate:submit(): Error during batchUpdate\",\n                           rowIds: updatedRowIds,\n                           values: vals,\n                        });\n                     });\n               } else {\n                  update_button.enable();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n         update_button.enable();\n         this.hide();\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupExport from \"../ABViewGridPopupExport\";\nimport ABPopupMassUpdateClass from \"../ABViewGridPopupMassUpdate\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\n\nexport default class ABViewGridComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGrid_${baseView.id}`,\n         Object.assign(\n            {\n               table: \"\",\n\n               // component: `${base}_component`,\n               toolbar: \"\",\n               buttonDeleteSelected: \"\",\n\n               buttonFilter: \"\",\n               buttonMassUpdate: \"\",\n               buttonSort: \"\",\n               buttonExport: \"\",\n\n               globalSearchToolbar: \"\",\n\n               datatable: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.handler_select = (...params) => {\n         this.selectRow(...params);\n      };\n      // {fn} .handler_select\n      // the callback fn for our selectRow()\n      // We want this called when the .datacollection we are linked to\n      // emits an \"onChange\" event.\n\n      this.detatch();\n      baseView.filterHelper.on(\"filter.data\", this._handler_filterData);\n\n      // derive these from viewGrid\n      this.id = baseView.id;\n\n      /////\n      ///// For TEsting:\n      /////\n      // this.settings.showToolbar = 1;\n      // this.settings.isEditable = 1;\n      // this.settings.isExportable = 1;\n      // this.settings.gridFilter = {\n      //    filterOption: 1,\n      //    userFilterPosition: \"form\",\n      //    isGlobalToolbar: 1,\n      // };\n\n      // this.settings.detailsPage = \"some-uuid\";\n      // this.settings.detailTab = \"some_uuid_2\";\n      // this.settings.trackView = 1;\n      /////\n      ///// end testing\n      /////\n\n      this.columnSplitLeft = 0;\n      // {integer}\n      // Which column to \"split\"/\"freeze\" from the left side of the grid.\n\n      this.columnSplitRight = 0;\n      // {integer}\n      // The # columns to the right to freeze.\n\n      // this.datacollection = null;\n      // // {ABDataCollection}\n      // // The Webix DataCollection that manages the data we are displaying.\n\n      this.validationError = false;\n      // {bool}\n      // Has a Validation Error occured?\n\n      this.linkPage = baseView.linkPageHelper.component();\n      // {ABViewPropertyLinkPage}\n      //\n\n      const idTable = this.ids.table;\n      const ab = this.AB;\n\n      this.PopupExport = new ABPopupExport(idTable);\n      this.PopupExport.init(ab);\n      // {ABViewGridPopupExport}\n      // Popup for managing how to export our data.\n\n      this.PopupMassUpdateComponent = new ABPopupMassUpdateClass(this, idTable);\n      this.PopupMassUpdateComponent.init(ab);\n      // this.PopupMassUpdateComponent.on(\"\")\n      // {}\n      // The popup for performing a Mass Edit operation.\n\n      this.PopupSortDataTableComponent = new ABPopupSortField(idTable);\n      this.PopupSortDataTableComponent.init(ab);\n      this.PopupSortDataTableComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n\n      this.skippableColumns = [\n         \"appbuilder_select_item\",\n         \"appbuilder_view_detail\",\n         \"appbuilder_view_track\",\n         \"appbuilder_view_edit\",\n         \"appbuilder_trash\",\n      ];\n      // {array}\n      // An array of column names that should be skipped from some of our\n      // event handlers.\n\n      // this.EditField = null;\n      // // {ABFieldXXX}\n      // // Which ABField is the focus of our PopupHeader menu?\n\n      // this.EditNode = null;\n      // // {HTML DOM}\n      // // The webix.$node where the ABField Header is that our PopupHeader\n      // // should be displayed at.\n\n      this.ignoreLocalSettings = false;\n      // {bool}\n      // should we ignore our local settings in our current context?\n      // (used in ABDesigner when our settings will change as we need to\n      // use those instead of the saved settings.)\n\n      this._gridSettings = null;\n      // {hash} { grid.id : [ {columnHeader}, {columnHeader} ...]}\n      // Keep a global copy of our local Grid settings, so we can optimize the header\n      // sizes.\n\n      this._isDatacollectionLoaded = false;\n   }\n\n   // {string}\n   // the unique key for ABViewGrids to store/retrieve their local settings\n   get keyStorageSettings() {\n      return \"abviewgrid_settings\";\n   }\n\n   detatch() {\n      this.view.filterHelper.removeAllListeners(\"filter.data\");\n      [\"changeCursor\", \"cursorStale\", \"cursorSelect\"].forEach((key) => {\n         this.datacollection?.removeListener(key, this.handler_select);\n      });\n   }\n\n   /**\n    * @method getColumnIndex()\n    * return the Datatable.getColumnIndex() value\n    * @param {string} id\n    *        the uuid of the column we are referencing.\n    * @return {integer}\n    */\n   getColumnIndex(id) {\n      let indx = this.getDataTable().getColumnIndex(id);\n      if (!this.settings.massUpdate) {\n         // the index is 0 based. So if the massUpdate feature isn't\n         // enabled, we need to add 1 to the result so they look like\n         // a 1, 2, ...\n\n         indx++;\n      }\n      return indx;\n   }\n\n   uiDatatable() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const self = this;\n\n      let view = \"datatable\";\n\n      if (settings.isTreeDatable || settings.groupBy)\n         // switch datatable to support tree\n         view = \"treetable\";\n\n      let selectType = \"cell\";\n\n      if (!settings.isEditable && (settings.detailsPage || settings.editPage))\n         selectType = \"row\";\n\n      return {\n         view,\n         id: ids.datatable,\n         resizeColumn: { size: 10 },\n         resizeRow: { size: 10 },\n         prerender: false,\n         editable: settings.isEditable,\n         fixedRowHeight: false,\n         height: settings.height || 0,\n         editaction: \"custom\",\n         select: selectType,\n         footer:\n            // show footer when there are summary columns\n            settings.summaryColumns.length > 0 ||\n            settings.countColumns.length > 0,\n         tooltip: true,\n         // tooltip: {\n         //    // id: ids.tooltip,\n         //    template: (obj, common) => {\n         //       return this.toolTip(obj, common);\n         //    },\n         //    on: {\n         //       // When showing a larger image preview the tooltip sometime displays part of the image off the screen...this attempts to fix that problem\n         //       onBeforeRender: function () {\n         //          self.toolTipOnBeforeRender(this.getNode());\n         //       },\n         //       onAfterRender: function (data) {\n         //          self.toolTipOnAfterRender(this.getNode());\n         //       },\n         //    },\n         // },\n         dragColumn: true,\n         on: {\n            onBeforeSelect: function (data, preserve) {\n               if (self.skippableColumns.indexOf(data.column) != -1) {\n                  return false;\n               } else if (settings.isEditable) {\n                  const currObject = self.datacollection.datasource;\n                  const selectField = currObject.fields(\n                     (f) => f.columnName === data.column\n                  )[0];\n\n                  if (selectField == null) return true;\n\n                  const cellNode = this.getItemNode({\n                        row: data.row,\n                        column: data.column,\n                     }),\n                     rowData = this.getItem(data.row);\n\n                  return selectField.customEdit(rowData, null, cellNode);\n               } else if (!settings.detailsPage && !settings.editPage)\n                  return false;\n            },\n            onAfterSelect: (data, preserve) => {\n               // {ABObject} data\n               //            the selected object\n               // {bool} prevent\n               //        indicates whether the previous selection state should\n               //        be saved. (is multiselect and they are holding SHIFT)\n               if (this.settings.isEditable) {\n                  this.onAfterSelect(data, preserve);\n               }\n            },\n            // onBeforeEditStart: function (/*id*/) {\n            //    // Not sure what this is suposed to check, but this condition\n            //    // will always be false.\n            //    if (!this.getItem(id) == \"appbuilder_select_item\") return false;\n            // },\n            onCheck: function (row, col, val) {\n               // Update checkbox data\n               if (col == \"appbuilder_select_item\") {\n                  // do nothing because we will parse the table once we decide\n                  // if we are deleting or updating rows\n                  self.toggleUpdateDelete();\n               } else {\n                  if (settings.isEditable) {\n                     // get the field related to this col\n                     const currObject = self.datacollection.datasource;\n                     const selectField = currObject.fields(\n                        (f) => f.columnName === col\n                     )[0];\n\n                     // if the colum is not the select item column move on to\n                     // the next step to save\n                     const state = {\n                        value: val,\n                     };\n                     const editor = {\n                        row: row,\n                        column: col,\n                        config: { fieldID: selectField?.id ?? null },\n                     };\n\n                     self.onAfterEditStop(state, editor);\n                  } else {\n                     const node = this.getItemNode({\n                        row: row,\n                        column: col,\n                     });\n                     const checkbox = node.querySelector(\n                        'input[type=\"checkbox\"]'\n                     );\n\n                     if (val == 1) {\n                        checkbox.checked = false;\n                     } else {\n                        checkbox.checked = true;\n                     }\n                  }\n               }\n            },\n            onBeforeEditStop: function (state, editor) {\n               // Check if data loading is complete\n               const oldValue = state.old;\n               let newValue = state.value;\n               if (!Array.isArray(newValue)) newValue = [newValue];\n               if (\n                  oldValue != null &&\n                  oldValue != \"\" &&\n                  // If options does not load completely, then Webix returns state.value as ['', '', '']\n                  newValue.filter((val) => val != null && val != \"\").length <\n                     1 &&\n                  // Check if no data load to the option\n                  editor.getPopup?.().getList?.().data?.find({}).length < 1\n               ) {\n                  return false;\n               }\n            },\n            onAfterEditStop: (state, editor, ignoreUpdate) => {\n               if (this.validationError == false)\n                  this.onAfterEditStop(state, editor, ignoreUpdate);\n            },\n            onValidationError: function () {\n               this.validationError = true;\n            },\n            onValidationSuccess: function () {\n               this.validationError = false;\n            },\n\n            // We are sorting with server side requests now so we can remove this\n            // onAfterLoad: function () {\n            //    _logic.onAfterLoad();\n            // },\n            onColumnResize: function (\n               columnName,\n               newWidth,\n               oldWidth,\n               user_action\n            ) {\n               // if we resize the delete column we want to resize the last\n               // column but Webix will not allow since the column is split\n               const rightSplitItems = [\n                  \"appbuilder_view_detail\",\n                  \"appbuilder_view_track\",\n                  \"appbuilder_view_edit\",\n                  \"appbuilder_trash\",\n               ];\n\n               if (rightSplitItems.indexOf(columnName) != -1) {\n                  // Block events so we can leave the delete column alone\n                  this.blockEvent();\n                  // keeps original width\n                  this.setColumnWidth(columnName, oldWidth);\n                  this.unblockEvent();\n                  // Listen to events again\n\n                  // find the last column's config\n                  const column = self.getLastColumn();\n\n                  columnName = column.id;\n\n                  // determine if we are making the column larger or smaller\n                  if (newWidth < oldWidth) {\n                     newWidth = column.width + 40;\n                     // add 40 because there is not any more space to drag so we\n                     // will allow 40px increments\n                  } else {\n                     newWidth = column.width - (newWidth - 40);\n                     // take the column's width and subtrack the difference of\n                     // the expanded delet column drag\n                  }\n                  // we don't want columns to be smaller than 50 ?? do we ??\n                  // I could be wrong maybe a checkbox could be smaller so this\n                  // could change\n                  if (newWidth < 50) {\n                     newWidth = 50;\n                  }\n                  // minWidth is important because we are using fillspace:true\n                  column.minWidth = newWidth;\n                  // Sets the UI\n                  this.setColumnWidth(columnName, newWidth);\n               }\n               // Saves the new width\n               if (user_action) {\n                  self.onColumnResize(\n                     columnName,\n                     newWidth,\n                     oldWidth,\n                     user_action\n                  );\n               }\n            },\n            onRowResize: (rowId) => {\n               // V2: we no longer do anything onRowResize()\n               // before we saved the row height in the record.\n               // this.onRowResize(rowId);\n            },\n            onBeforeColumnDrag: (sourceId, event) =>\n               !(this.skippableColumns.indexOf(sourceId) !== -1),\n            onBeforeColumnDrop: (sourceId, targetId, event) =>\n               // Make sure we are not trying to drop onto one of our special\n               // columns ...\n               !(this.skippableColumns.indexOf(targetId) !== -1),\n            onAfterColumnDrop: (sourceId, targetId, event) =>\n               this.onAfterColumnDrop(sourceId, targetId, event),\n            // onAfterColumnShow: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnShow()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).showField(id);\n            // },\n            // onAfterColumnHide: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnHide()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n            // },\n\n            onHeaderClick: (id, e, node) => {\n               /* if (settings.configureHeaders) */\n               this.onHeaderClick(id, e, node);\n            },\n         },\n      };\n   }\n\n   uiFilter() {\n      return this.view.filterHelper.ui();\n\n      // make sure onFilterData is now .emit()ed instead of passing in a callback.\n   }\n\n   /**\n    * @method uiToolbar()\n    * Return the webix definition for the toolbar row for our Grids.\n    * @return {json}\n    */\n   uiToolbar() {\n      const ids = this.ids;\n      const self = this;\n\n      return {\n         view: \"toolbar\",\n         id: ids.toolbar,\n         hidden: true,\n         css: \"ab-data-toolbar\",\n         cols: [\n            {\n               view: \"button\",\n               id: ids.buttonMassUpdate,\n               css: \"webix_transparent\",\n               label: this.label(\"Edit\"),\n               icon: \"fa fa-pencil-square-o\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarMassUpdate(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonDeleteSelected,\n               css: \"webix_transparent\",\n               label: this.label(\"Delete\"),\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarDeleteSelected(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonFilter,\n               css: \"webix_transparent\",\n               label: this.label(\"Filters\"),\n               icon: \"fa fa-filter\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarFilter(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonSort,\n               css: \"webix_transparent\",\n               label: this.label(\"Sort\"),\n               icon: \"fa fa-sort\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarSort(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonExport,\n               css: \"webix_transparent\",\n               label: this.label(\"Export\"),\n               icon: \"fa fa-print\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarExport(this.$view);\n               },\n            },\n            {},\n            {\n               id: ids.globalSearchToolbar,\n               view: \"search\",\n               placeholder: this.label(\"Search...\"),\n               on: {\n                  onTimedKeyPress: () => {\n                     const searchText = $$(ids.globalSearchToolbar).getValue();\n\n                     this.view.filterHelper.externalSearchText(searchText);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      const _uiGrid = {\n         id: this.ids.table,\n         type: \"space\",\n         borderless: true,\n         rows: [\n            {},\n            {\n               view: \"label\",\n               label: this.label(\"Select an object to load.\"),\n               inputWidth: 200,\n               align: \"center\",\n            },\n            {},\n         ],\n      };\n\n      const settings = this.settings;\n\n      if (this.datacollection || settings.dataviewID !== \"\") {\n         _uiGrid.padding = settings.padding;\n         _uiGrid.rows = [];\n         if (settings.showToolbar) {\n            _uiGrid.rows.push(this.uiToolbar());\n         }\n         if (this.settings.gridFilter.filterOption) {\n            _uiGrid.rows.push(this.uiFilter());\n         }\n\n         _uiGrid.rows.push(this.uiDatatable());\n      }\n\n      const _ui = super.ui([_uiGrid]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel = 2) {\n      if (AB) await super.init(AB);\n\n      const self = this;\n      const ids = this.ids;\n\n      // WORKAROUND : Where should we define this ??\n      // For include PDF.js\n      const abWebix = AB.Webix;\n\n      abWebix.codebase = \"\";\n      abWebix.cdn = \"/js/webix\";\n\n      // this shows the options to Hide, Filter, sort , etc...\n      // only in Designer?\n      // PopupHeaderEditComponent.init({\n      //    onClick: _logic.callbackHeaderEdit, // be notified when there is a change in the hidden fields\n      // });\n\n      // NOTE: register the onAfterRender() here, so it only registers\n      // one.\n      const $DataTable = this.getDataTable();\n\n      let throttleCustomDisplay = null;\n      let scrollStarted = null;\n\n      if (!$DataTable) return;\n\n      abWebix.extend($DataTable, abWebix.ProgressBar);\n\n      $DataTable.config.accessLevel = accessLevel;\n\n      if (accessLevel < 2) $DataTable.define(\"editable\", false);\n\n      const settings = this.settings;\n\n      const customDisplays = (data) => {\n         const CurrentObject = this.datacollection?.datasource;\n\n         if (!CurrentObject || !$DataTable.data) return;\n\n         const displayRecords = [];\n\n         const verticalScrollState = $DataTable.getScrollState().y,\n            rowHeight = $DataTable.config.rowHeight,\n            height =\n               $DataTable.$view.querySelector(\".webix_ss_body\").clientHeight,\n            startRecIndex = Math.floor(verticalScrollState / rowHeight),\n            endRecIndex = startRecIndex + $DataTable.getVisibleCount();\n\n         let index = 0;\n\n         $DataTable.data.order.each((id) => {\n            if (id != null && startRecIndex <= index && index <= endRecIndex)\n               displayRecords.push(id);\n\n            index++;\n         });\n\n         let editable = settings.isEditable;\n\n         if ($DataTable.config.accessLevel < 2) editable = false;\n\n         CurrentObject.customDisplays(\n            data,\n            this.AB._App,\n            $DataTable,\n            displayRecords,\n            editable\n         );\n      };\n\n      $DataTable.attachEvent(\"onAfterRender\", function (data) {\n         $DataTable.resize();\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n\n         AB.ClassUI.CYPRESS_REF($DataTable);\n         Object.keys(ids).forEach((key) => {\n            const $el = $$(ids[key]);\n            if ($el) {\n               AB.ClassUI.CYPRESS_REF($el);\n            }\n         });\n      });\n\n      // we have some data types that have custom displays that don't look\n      // right after scrolling large data sets we need to call customDisplays\n      // again\n      $DataTable.attachEvent(\"onScroll\", function () {\n         if (scrollStarted) clearTimeout(scrollStarted);\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         scrollStarted = setTimeout(() => {\n            customDisplays(this.data);\n         }, 1500);\n      });\n      $DataTable.attachEvent(\"onAfterScroll\", function () {\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n      });\n\n      // Process our onItemClick events.\n      // this is a good place to check if our delete/trash icon was clicked.\n      $DataTable.attachEvent(\"onItemClick\", function (id, e, node) {\n         // make sure we have an object selected before processing this.\n         const dc = self.datacollection;\n         const CurrentObject = dc?.datasource;\n\n         if (!CurrentObject) return;\n\n         if (settings.isEditable === 0) {\n            const items = $DataTable.getItem(id);\n         }\n         // if this was our edit icon:\n         // console.log(e.target.className);\n         if (e === \"auto\" || e.target.className.indexOf(\"eye\") > -1) {\n            // View a Details Page:\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (e.target.className.indexOf(\"pencil\") > -1) {\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         } else if (e.target.className.indexOf(\"track\") > -1)\n            self.emit(\"object.track\", CurrentObject, id.row);\n         // App.actions.openObjectTrack(CurrentObject, id.row);\n         else if (e.target.className.indexOf(\"clear-combo-value\") > -1) {\n            const clearValue = {};\n\n            clearValue[id.column] = \"\";\n\n            const updateRow = async () => {\n               try {\n                  const response = await CurrentObject.model().update(\n                     id.row,\n                     clearValue\n                  );\n\n                  // console.log(response);\n               } catch (err) {\n                  self.AB.notify.developer(err, {\n                     context: \"ABViewGridComponent.onItemClick\",\n                     message: \"Error updating item\",\n                     obj: CurrentObject.toObj(),\n                     id: id.row,\n                  });\n               }\n            };\n\n            updateRow();\n         }\n         // if this was our trash icon:\n         else if (e.target.className.indexOf(\"trash\") > -1) {\n            // If the confirm popup is showing, then skip to show a new one\n            if (!this._deleteConfirmPopup) {\n               this._deleteConfirmPopup = abWebix.confirm({\n                  title: self.label(\"Delete data\"),\n                  text: self.label(\"Do you want to delete this row?\"),\n                  callback: (result) => {\n                     delete this._deleteConfirmPopup;\n                     if (result) {\n                        const deleteRow = async () => {\n                           try {\n                              const response =\n                                 await CurrentObject.model().delete(id.row);\n\n                              if (response.numRows > 0) {\n                                 $DataTable.remove(id);\n                                 $DataTable.clearSelection();\n                              } else\n                                 abWebix.alert({\n                                    text: self.label(\n                                       \"No rows were effected.  This does not seem right.\"\n                                    ),\n                                 });\n                           } catch (err) {\n                              self.AB.notify.developer(err, {\n                                 context: \"ABViewGridComponent.onItemClick\",\n                                 message: \"Error deleting item\",\n                                 obj: CurrentObject.toObj(),\n                                 id: id.row,\n                              });\n\n                              //// TODO: what do we do here?\n                           }\n                        };\n\n                        deleteRow();\n                     }\n\n                     $DataTable.clearSelection();\n\n                     return true;\n                  },\n               });\n            }\n         } else if (settings.detailsPage.length) {\n            // If an icon wasn't selected but a details page is set\n            // view the details page\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (settings.editPage.length) {\n            // If an icon wasn't selected but an edit page is set\n            // view the edit page\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         }\n      });\n\n      // ABViewGrid Original init();\n      if (settings.showToolbar) {\n         if (\n            settings.massUpdate ||\n            settings.isSortable ||\n            settings.isExportable ||\n            (settings.gridFilter &&\n               settings.gridFilter.filterOption &&\n               settings.gridFilter.userFilterPosition === \"toolbar\")\n         )\n            $$(ids.toolbar).show();\n\n         if (!settings.massUpdate) {\n            $$(ids.buttonMassUpdate).hide();\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (!settings.allowDelete) $$(ids.buttonDeleteSelected).hide();\n\n         if (settings.gridFilter) {\n            if (\n               settings.gridFilter.filterOption !== 1 ||\n               settings.gridFilter.userFilterPosition !== \"toolbar\"\n            )\n               $$(ids.buttonFilter).hide();\n\n            if (\n               settings.gridFilter.filterOption === 3 &&\n               settings.gridFilter.globalFilterPosition === \"single\"\n            )\n               $DataTable.hide();\n\n            if (settings.gridFilter.isGlobalToolbar)\n               $$(ids.globalSearchToolbar).show();\n            else $$(ids.globalSearchToolbar).hide();\n\n            if (settings.gridFilter.filterOption)\n               this.view.filterHelper.init(this.AB);\n         }\n\n         if (!settings.isSortable) $$(ids.buttonSort).hide();\n\n         if (!settings.isExportable) $$(ids.buttonExport).hide();\n      }\n\n      if (settings.hideHeader) this.hideHeader();\n\n      const dc =\n         this.datacollection || this.AB.datacollectionByID(settings.dataviewID);\n\n      if (!this._isDatacollectionLoaded) this.datacollectionLoad(dc);\n\n      // Make sure\n      this._gridSettings =\n         this._gridSettings ||\n         (await this.AB.Storage.get(this.keyStorageSettings)) ||\n         {};\n\n      if (dc?.datasource) {\n         // TRANSITION: ABViewGrid_orig line 862 ...\n\n         this.linkPage.init({\n            view: this.view,\n            datacollection: dc,\n         });\n\n         this.refreshHeader();\n      }\n   }\n\n   /**\n    * @method busy()\n    * Indicate that our datatable is currently busy loading/processing\n    * data.\n    */\n   busy() {\n      this.getDataTable()?.showProgress?.({ type: \"icon\" });\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const ids = this.ids;\n      const $ButtonFilter = $$(ids.buttonFilter);\n\n      if ($ButtonFilter) {\n         const onlyFilterRules = this.view.filterHelper.filterRules();\n\n         $ButtonFilter.define(\"badge\", onlyFilterRules?.rules?.length ?? 0);\n         $ButtonFilter.refresh();\n      }\n\n      const dc = this.datacollection;\n\n      dc.filterCondition(filterRules);\n      dc.reloadData();\n   }\n\n   async callbackSortData(sortRules = []) {\n      const $buttonSort = $$(this.ids.buttonSort);\n\n      $buttonSort.define(\"badge\", sortRules.length || null);\n      $buttonSort.refresh();\n\n      const gridElem = this.getDataTable();\n\n      if (gridElem.data.find({}).length < gridElem.data.count()) {\n         try {\n            // NOTE: Webix's client sorting does not support dynamic loading.\n            // If the data does not be loaded, then load all data.\n            await this.datacollection.reloadData(0, 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context:\n                  \"ABViewGrid:callbackSortData(): Error perform datacollection.reloadData()\",\n            });\n         }\n      }\n\n      // wait until the grid component will done to repaint UI\n      setTimeout(() => {\n         gridElem.sort((a, b) => this.PopupSortDataTableComponent.sort(a, b));\n      }, 777);\n   }\n\n   /**\n    * @method changePage()\n    * Helper method to switch to another View.\n    * @param {ABDataCollection} dv\n    *        The DataCollection we are working with.\n    * @param {obj} rowItem\n    *        the { row:#, column:{string} } of the item that was clicked.\n    * @param {ABViewPage.uuid} page\n    *        The .uuid of the ABViewPage/ABViewTab we are to swtich to.\n    *\n    */\n   changePage(dv, rowItem, page) {\n      const rowId = rowItem?.row ?? null;\n\n      // Set cursor to data view\n      if (dv) dv.setCursor(rowId);\n\n      // Pass settings to link page module\n      if (this.linkPage) this.linkPage.changePage(page, rowId);\n      else super.changePage(page);\n   }\n\n   columnConfig(headers = []) {\n      this.settings.columnConfig = headers;\n   }\n   /**\n    * @method datacollectionLoad()\n    * Assign an ABDataCollection to this component to use instead of any\n    * provided .dataviewID in our settings.\n    * NOTE: this primarily happens in the ABDesigner's Object Workspace.\n    * @param {ABDataCollection} dc\n    */\n   datacollectionLoad(dc) {\n      const oldDC = this.datacollection;\n      this.datacollection = dc;\n\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      if ($DataTable) {\n         // preventing too many handlers\n         if (!this.__handler_dc_busy) {\n            this.__handler_dc_busy = () => {\n               this.busy();\n            };\n\n            this.__handler_dc_ready = () => {\n               this.ready();\n               this.populateGroupData();\n            };\n\n            this.__handler_dc_loadData = () => {\n               this.populateGroupData();\n            };\n         }\n\n         if (oldDC) {\n            // remove our listeners from the previous DC\n            oldDC.removeListener(\"initializingData\", this.__handler_dc_busy);\n            oldDC.removeListener(\"initializedData\", this.__handler_dc_ready);\n            oldDC.removeListener(\"loadData\", this.__handler_dc_loadData);\n         }\n\n         if (dc) {\n            if (dc.datacollectionLink && dc.fieldLink)\n               dc.bind($DataTable, dc.datacollectionLink, dc.fieldLink);\n            else dc.bind($DataTable);\n\n            // making sure we only have 1 registered listener on this dc\n            dc.removeListener(\"initializingData\", this.__handler_dc_busy);\n            dc.on(\"initializingData\", this.__handler_dc_busy);\n            dc.removeListener(\"initializedData\", this.__handler_dc_ready);\n            dc.on(\"initializedData\", this.__handler_dc_ready);\n            dc.removeListener(\"loadData\", this.__handler_dc_loadData);\n            dc.on(\"loadData\", this.__handler_dc_loadData);\n            this.grouping();\n\n            this._isDatacollectionLoad = true;\n         } else $DataTable.unbind();\n\n         // Be sure to pass on our CurrentObject to our dependent components.\n         if (CurrentObject) {\n            this.view.filterHelper.objectLoad(CurrentObject);\n            this.PopupMassUpdateComponent.objectLoad(\n               CurrentObject,\n               this.getDataTable()\n            );\n            this.PopupSortDataTableComponent.objectLoad(CurrentObject);\n\n            this.PopupExport.objectLoad(CurrentObject);\n            this.PopupExport.dataCollectionLoad(dc);\n            this.PopupExport.setGridComponent(this.getDataTable());\n            this.PopupExport.setHiddenFields(this.settings.hiddenFields);\n            this.PopupExport.setFilename(this.view.label);\n         }\n      }\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * disable the update or delete buttons in the toolbar if there no items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   disableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.disable();\n      $$(this.ids.buttonDeleteSelected)?.disable();\n      // externally indicate that no rows are selected\n      this.emit(\"selection.cleared\");\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * enable the update or delete buttons in the toolbar if there are any items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   enableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.enable();\n      $$(this.ids.buttonDeleteSelected)?.enable();\n      // externally indicate that a row has been selected\n      this.emit(\"selection\");\n   }\n\n   freezeDeleteColumn() {\n      // we are going to always freeze the delete column if the datatable\n      // is wider than the container so it is easy to get to\n      return this.getDataTable().define(\"rightSplit\", this.columnSplitRight);\n   }\n\n   /**\n    * @method getDataTable()\n    * return the webix grid component.\n    * @return {webix.grid}\n    */\n   getDataTable() {\n      return $$(this.ids.datatable);\n   }\n\n   /**\n    * @method getLastColumn\n    * return the last column of a datagrid that is resizeable\n    */\n   getLastColumn() {\n      const $DataTable = this.getDataTable();\n\n      let lastColumn = {};\n\n      // Loop through each columns config to find out if it is in the split 1 region and set it as the last item...then it will be overwritten by next in line\n      $DataTable.eachColumn((columnId) => {\n         const columnConfig = $DataTable.getColumnConfig(columnId);\n\n         if (columnConfig.split === 1) lastColumn = columnConfig;\n      });\n\n      return lastColumn;\n   }\n\n   /**\n    * @method grouping()\n    * perform any grouping operations\n    */\n   grouping() {\n      if (!this.settings.groupBy) return;\n\n      const $treetable = this.getDataTable();\n\n      // map: {\n      //     votes:[\"votes\", \"sum\"],\n      //     title:[\"year\"]\n      // }\n      const baseGroupMap = {};\n      const CurrentObject = this.datacollection.datasource;\n\n      CurrentObject.fields().forEach((f) => {\n         switch (f.key) {\n            case \"number\":\n               baseGroupMap[f.columnName] = [f.columnName, \"sum\"];\n\n               break;\n\n            case \"calculate\":\n            case \"formula\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData) return 0;\n\n                     let sum = 0;\n\n                     listData.forEach((r) => {\n                        // we only want numbers returned so pass `true` as third param\n                        // to signify that this is part of a grouping row\n                        sum += f.format(r, false, true) * 1;\n                     });\n\n                     // simulate reformat from ABFieldFormulaCore\n                     if (!f.fieldLink || f.fieldLink.key === \"calculate\")\n                        return sum;\n                     else {\n                        const rowDataFormat = {};\n\n                        rowDataFormat[f.fieldLink.columnName] = sum;\n\n                        return f.fieldLink.format(rowDataFormat);\n                     }\n                  },\n               ];\n\n               break;\n\n            case \"connectObject\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const valRelation = r[f.relationName()];\n\n                        // array\n                        if (valRelation?.length) count += valRelation.length;\n                        // object\n                        else if (valRelation) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n\n            default:\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const val = prop(r);\n\n                        // count only exists data\n                        if (val) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n         }\n      });\n\n      // set group definition\n      // $DataTable.define(\"scheme\", {\n      //    $group: {\n      //       by: settings.groupBy,\n      //       map: groupMap\n      //    }\n      // });\n\n      // NOTE: https://snippet.webix.com/e3a2bf60\n      let groupBys = (this.settings.groupBy || \"\")\n         .split(\",\")\n         .map((g) => g.trim());\n      // Reverse the array NOTE: call .group from child to root\n      groupBys = groupBys.reverse();\n\n      groupBys.forEach((colName, gIndex) => {\n         const groupMap = this.AB.cloneDeep(baseGroupMap);\n\n         let by;\n\n         // Root\n         if (gIndex === groupBys.length - 1) by = colName;\n         // Sub groups\n         else {\n            by = (row) => {\n               let byValue = row[colName];\n\n               for (let i = gIndex + 1; i < groupBys.length; i++) {\n                  byValue = `${row[groupBys[i]]} - ${byValue}`;\n               }\n\n               return byValue;\n            };\n\n            // remove parent group data\n            groupBys.forEach((gColName) => {\n               if (gColName !== colName) groupMap[gColName] = [gColName];\n            });\n         }\n\n         $treetable.data.group({\n            by: by,\n            map: groupMap,\n         });\n      });\n   }\n\n   hideHeader() {\n      const $DataTable = this.getDataTable();\n\n      $DataTable.define(\"header\", false);\n      $DataTable.refresh();\n   }\n\n   /**\n    * @function onAfterColumnDrop\n    * When an editor drops a column to save a new column order\n    * @param {string} sourceId\n    *        the columnName of the item dragged\n    * @param {string} targetId\n    *        the columnName of the item dropped on\n    * @param {event} event\n    */\n   async onAfterColumnDrop(sourceId, targetId, event) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const settings = this.settings;\n      const columnConfig = this.localSettings();\n\n      // Reorder our current columnConfig\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n\n      for (let i = 0; i < columnConfig.length; i++)\n         if (columnConfig[i].id == sourceId) {\n            itemMoved = columnConfig[i];\n            columnConfig.splice(i, 1);\n            oPos = i;\n\n            break;\n         }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (let j = 0; j < columnConfig.length; j++)\n         if (columnConfig[j].id == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) j++;\n\n            columnConfig.splice(j, 0, itemMoved);\n\n            break;\n         }\n\n      // special case: dropped on end and need to update .fillspace\n      // if (j == columnConfig.length - 1) {\n      //    if (columnConfig[j - 1].fillspace) {\n      //       columnConfig[j - 1].fillspace = false;\n      //       columnConfig[j].fillspace = true;\n      //    }\n      // }\n\n      // if we allow local changes\n      this.localSettings(columnConfig);\n\n      if (settings.saveLocal) this.localSettingsSave();\n\n      // Now emit this event, in case an external object is wanting to\n      // respond to this: ABDesigner.objectBuilder, Interface  Designer,\n      // we send back an array[ ABField.id, ...] in the order we have\n      // them.\n      this.emit(\n         \"column.order\",\n         columnConfig.map((c) => c.fieldID)\n      );\n\n      this.refreshHeader();\n\n      // CurrentObject.fieldReorder(sourceId, targetId)\n      //    .then(() => {\n      //       // reset each column after a drop so we do not have multiple fillspace and minWidth settings\n      //       var editiable = settings.isEditable;\n      //       if ($DataTable.config.accessLevel < 2) {\n      //          editiable = false;\n      //       }\n      //       var columnHeaders = CurrentObject.columnHeaders(true, editiable);\n      //       columnHeaders.forEach(function (col) {\n      //          if (col.id == sourceId && col.fillspace == true) {\n      //             columnHeader.fillspace = false;\n      //             columnHeader.minWidth = columnHeader.width;\n      //          }\n      //       });\n\n      //       _logic.callbacks.onColumnOrderChange(CurrentObject);\n      //       // freeze columns:\n      //       let frozenColumnID =\n      //          settings.frozenColumnID != null\n      //             ? settings.frozenColumnID\n      //             : CurrentObject.workspaceFrozenColumnID;\n      //       if (frozenColumnID != \"\") {\n      //          $DataTable.define(\n      //             \"leftSplit\",\n      //             $DataTable.getColumnIndex(frozenColumnID) + columnSplitLeft\n      //          );\n      //       } else {\n      //          $DataTable.define(\"leftSplit\", columnSplitLeft);\n      //       }\n      //       _logic.freezeDeleteColumn();\n      //       $DataTable.refreshColumns();\n      //    })\n      //    .catch((err) => {\n      //       OP.Error.log(\"Error saving new column order:\", {\n      //          error: err,\n      //       });\n      //    });\n   }\n\n   /**\n    * @function onAfterEditStop\n    * When an editor is finished.\n    * @param {json} state\n    * @param {} editor\n    * @param {} ignoreUpdate\n    * @return\n    */\n   async onAfterEditStop(state, editor, ignoreUpdate) {\n      // state:   {value: \"new value\", old: \"old value\"}\n      // editor:  { column:\"columnName\", row:ID, value:'value', getInputNode:fn(), config:{}, focus: fn(), getValue: fn(), setValue: function, getInputNode: function, render: function…}\n\n      const $DataTable = this.getDataTable();\n\n      // if you don't edit an empty cell we just need to move on\n      if (\n         (!state.old && state.value === \"\") ||\n         (state.old === \"\" && state.value === \"\")\n      ) {\n         $DataTable?.clearSelection();\n\n         return false;\n      }\n\n      const CurrentObject = this.datacollection.datasource;\n\n      if (editor.config)\n         switch (editor.config.editor) {\n            case \"number\":\n               state.value = parseFloat(state.value);\n\n               break;\n\n            case \"datetime\":\n               state.value = state.value.getTime();\n\n               if (state && state.old && state.old.getTime)\n                  state.old = state.old.getTime();\n\n               break;\n\n            default:\n            // code block\n         }\n\n      // lets make sure we are comparing things properly:\n      // reduce newValue and oldValue down to PK if they were objects\n      let newVal = state.value;\n      if (newVal) {\n         newVal = newVal[CurrentObject.PK()] || newVal;\n      }\n      let oldVal = state.old;\n      if (oldVal) {\n         oldVal = oldVal[CurrentObject.PK()] || oldVal;\n      }\n\n      // NOTE: != vs !== :\n      // want to handle when newVal = \"3\" and oldVal = 3\n      // that is why we don't use !== so that we convert the values into\n      // the same case.\n      if (newVal != oldVal) {\n         const item = $DataTable?.getItem(editor.row);\n\n         item[editor.column] = state.value;\n\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid\");\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid_cell\");\n\n         //maxlength field\n         const f = CurrentObject.fieldByID(editor.config?.fieldID);\n         if (\n            f?.settings.maxLength &&\n            state.value.length > f.settings.maxLength\n         ) {\n            this.AB.alert({\n               title: this.label(\"Limit max length\"),\n               text: this.label(\n                  \"You can enter a maximum of \" +\n                     f.settings.maxLength +\n                     \" characters\"\n               ),\n            });\n            $DataTable.addCellCss(item.id, editor.column, \"webix_invalid_cell\");\n            $DataTable.refresh(editor.row);\n            $DataTable.clearSelection();\n            return false;\n         }\n\n         const validator = CurrentObject.isValidData(item);\n\n         if (validator.pass()) {\n            //// Question: do we submit full item updates?  or just patches?\n            // IF Patch:\n            // var patch = {};\n            // patch.id = item.id;\n            // patch[editor.column] = item[editor.column];\n            // await CurrentObject.model().update(item.id, patch)\n\n            const ab = this.AB;\n\n            try {\n               await CurrentObject.model().update(item.id, item);\n\n               if ($DataTable.exists(editor.row)) {\n                  $DataTable.updateItem(editor.row, item);\n                  $DataTable.clearSelection();\n                  $DataTable.refresh(editor.row);\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  context: \"ABViewGrid:onAfterEditStop(): Error saving item\",\n                  item,\n                  editor,\n                  state,\n                  object: CurrentObject.toObj(),\n               });\n\n               $DataTable.clearSelection();\n\n               if (\n                  ab.Validation.isGridValidationError(\n                     err,\n                     editor.row,\n                     $DataTable\n                  )\n               ) {\n                  // Do we reset the value?\n                  // item[editor.column] = state.old;\n                  // $DataTable.updateItem(editor.row, item);\n               } else {\n                  // this was some other Error!\n               }\n            }\n            // CurrentObject.model()\n            //    .update(item.id, item)\n            //    .then(() => {\n            //       if ($DataTable.exists(editor.row)) {\n            //          $DataTable.updateItem(editor.row, item);\n            //          $DataTable.clearSelection();\n            //          $DataTable.refresh(editor.row);\n            //       }\n            //    })\n            //    .catch((err) => {\n            //       OP.Error.log(\"Error saving item:\", {\n            //          error: err\n            //       });\n\n            //       $DataTable.clearSelection();\n            //       if (\n            //          OP.Validation.isGridValidationError(\n            //             err,\n            //             editor.row,\n            //             $DataTable\n            //          )\n            //       ) {\n            //          // Do we reset the value?\n            //          // item[editor.column] = state.old;\n            //          // $DataTable.updateItem(editor.row, item);\n            //       } else {\n            //          // this was some other Error!\n            //       }\n            //    });\n         } else validator.updateGrid(editor.row, $DataTable);\n      } else $DataTable?.clearSelection();\n\n      return false;\n\n      // var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n      // self.updateRowData(state, editor, ignoreUpdate)\n      //    .fail(function (err) { // Cached\n      //       item[editor.column] = state.old;\n      //       $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       $$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    })\n      //    .then(function (result) {\n      //       if (item) {\n      //          item[editor.column] = state.value;\n\n      //          if (result && result.constructor.name === 'Cached' && result.isUnsync())\n      //             item.isUnsync = true;\n\n      //          $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       }\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    });\n   }\n\n   /**\n    * @function onAfterSelect\n    * This is when a user clicks on a cell.  We use the onAfterSelect to\n    * trigger a normal .editCell() if there isn't a custom editor for this field.\n    * @param {json} data webix cell data\n    * @return\n    */\n   onAfterSelect(data /*, preserve */) {\n      // data: {row: 1, column: \"name\", id: \"1_name\", toString: function}\n      // data.row: ABObject.id\n      // data.column => columnName of the field\n\n      // Normal update data\n      this.getDataTable()?.editCell(data.row, data.column);\n   }\n\n   /**\n    * @function onColumnResizeResize\n    * This is when a user adjusts the size of a column\n    * @param {} columnName\n    * @param {int} newWidth\n    * @param {int} oldWidth\n    * @param {} user_action\n    * @return\n    */\n   async onColumnResize(columnName, newWidth, oldWidth, user_action) {\n      // update the settings\n\n      let requireRefresh = false;\n\n      const ab = this.AB;\n\n      if (newWidth < 30) {\n         newWidth = 30;\n         requireRefresh = true;\n\n         ab.Webix.message({\n            type: \"info\",\n            text: this.label(\"minimum column width is {0}\", [30]),\n            expire: 1000,\n         });\n      }\n\n      const localSettings = this.localSettings();\n\n      if (localSettings) {\n         const header = localSettings.find((h) => h.id == columnName);\n\n         if (header) {\n            header.width = newWidth;\n\n            delete header.adjust;\n         }\n      }\n\n      this.localSettings(localSettings);\n\n      if (this.settings.saveLocal) {\n         await this.localSettingsSave();\n         // for (const item in GridSettings) {\n         //    GridSettings[item].forEach((item) => {\n         //       // we cannot include field info because of the cicular structure\n         //       if (item?.footer?.field) {\n         //          delete item.footer.field;\n         //       }\n         //    });\n         // }\n         // await this.AB.Storage.set(this.keyStorageSettings, GridSettings);\n      }\n\n      // refresh the display\n      if (requireRefresh) this.refreshHeader();\n\n      this.freezeDeleteColumn();\n\n      // this.getDataTable().refreshColumns();\n\n      // TODO: allow external app to respond in special cases:\n      // eg: ABDesigner object workspace, interface builder, etc...\n      this.emit(\"column.resize\", columnName, newWidth, oldWidth);\n   }\n\n   /**\n    * @method onHeaderClick\n    * process the user clicking on the header for one of our columns.\n    */\n   onHeaderClick(id, e, node) {\n      if (this.skippableColumns.indexOf(id.column) !== -1) return false;\n\n      // save our EditNode & EditField:\n      // this.EditNode = node;\n\n      const EditField = this.datacollection.datasource.fields(\n         (f) => f.columnName === id.column\n      )[0];\n      // if (this.EditField) {\n      //    // show the popup\n      //    PopupHeaderEditComponent.show(node, this.EditField);\n      // }\n\n      this.emit(\"column.header.clicked\", node, EditField);\n\n      return false;\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      super.onShow();\n\n      // make sure our grid is properly .adjust()ed to the screen.\n      this.getDataTable()?.adjust();\n\n      const dv = this.datacollection;\n\n      if (dv)\n         [\"changeCursor\", \"cursorStale\", \"cursorSelect\"].forEach((key) => {\n            this.eventAdd({\n               emitter: dv,\n               eventName: key,\n               listener: this.handler_select.bind(this),\n            });\n         });\n   }\n\n   /**\n    * @method ready()\n    * Indicate that our datatable is currently ready for operation.\n    */\n   ready() {\n      const dc = this.datacollection;\n      if (\n         this.isCustomGroup &&\n         dc?.dataStatus != dc?.dataStatusFlag.initialized\n      )\n         return;\n\n      this.getDataTable()?.hideProgress?.();\n   }\n\n   /**\n    * @function refreshHeader()\n    *\n    * refresh the header for the table apart from the refresh() command\n    * @param {bool} ignoreLocal\n    *        Should we ignore our local settings and build directly from\n    *        our config settings?\n    */\n   refreshHeader(ignoreLocal = this.ignoreLocal) {\n      // columnSplitRight = 0;\n      // wait until we have an Object defined:\n      const CurrentObject = this.datacollection.datasource;\n\n      if (!CurrentObject) return;\n\n      const ids = this.ids;\n      const $DataTable = $$(ids.datatable);\n\n      if (!$DataTable) return;\n\n      const accessLevel = $DataTable.config.accessLevel;\n\n      $DataTable.define(\"leftSplit\", 0);\n      $DataTable.define(\"rightSplit\", 0);\n\n      let rowHeight = 0;\n\n      CurrentObject.imageFields().forEach((image) => {\n         const settings = image.getSettings();\n\n         if (settings.useHeight && settings.imageHeight > rowHeight)\n            rowHeight = settings.imageHeight;\n      });\n\n      if (rowHeight) $DataTable.define(\"rowHeight\", rowHeight);\n\n      // $DataTable.clearAll();\n\n      const settings = this.settings;\n\n      let editable = settings.isEditable;\n\n      if ($DataTable.config.accessLevel < 2) editable = false;\n\n      //// update DataTable structure:\n      // get column list from our local settings\n      const objColumnHeaders = CurrentObject.columnHeaders(\n         true,\n         editable,\n         // TRANSITION: moving these from .columnHeaders() to here:\n         [], //settings.summaryColumns,\n         [], //settings.countColumns,\n         [] //settings.hiddenFields\n      );\n\n      let columnHeaders = this.localSettings();\n\n      const ab = this.AB;\n\n      // if that is empty, pull from our settings.columnConfig\n      if (!columnHeaders || ignoreLocal)\n         columnHeaders = ab.cloneDeep(this.settings.columnConfig);\n\n      // if that is empty for some reason, rebuild from our CurrentObject\n      if (!columnHeaders || columnHeaders.length === 0)\n         columnHeaders = objColumnHeaders;\n\n      // sanity check:\n      // columnHeaders can't contain a column that doesn't exist in objColumHeaders:\n      // (eg: a field might have been removed but localStorage doesn't know that )\n      const objColumnHeaderIDs = objColumnHeaders.map((h) => h.fieldID);\n\n      columnHeaders = columnHeaders.filter(\n         (c) => objColumnHeaderIDs.indexOf(c.fieldID) > -1\n      );\n\n      // default our columnConfig values to our columnHeaders:\n      columnHeaders.forEach((c) => {\n         // we want to overwrite our default settings with anything stored\n         // in local storage\n         const origCol = objColumnHeaders.find((h) => h.fieldID === c.fieldID);\n\n         // none of our functions can be stored in localStorage, so scan\n         // the original column and attach any template functions to our\n         // stashed copy.\n         // also the suggest for selects and connected fields may contain a\n         // function so go ahead and copy the original suggest to the column\n         Object.keys(origCol).forEach((k) => {\n            if (typeof origCol[k] === \"function\" || k === \"suggest\") {\n               c[k] = origCol[k];\n            }\n         });\n\n         const f = CurrentObject.fieldByID(c.fieldID);\n\n         if (!f) return;\n\n         // if it's a hidden field:\n         if (settings.hiddenFields.indexOf(f.columnName) > -1) {\n            c.hidden = true;\n         }\n\n         // add summary footer:\n         if (settings.summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\")\n               c.footer = { content: \"totalColumn\", field: f };\n            else c.footer = { content: \"summColumn\" };\n         }\n         // or add the count footer\n         else if (settings.countColumns.indexOf(f.id) > -1)\n            c.footer = { content: \"countColumn\" };\n      });\n\n      let localSettings = this.localSettings();\n\n      if (!localSettings || ignoreLocal) {\n         this.localSettings(columnHeaders);\n\n         localSettings = columnHeaders;\n      }\n\n      columnHeaders = ab.cloneDeep(localSettings);\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      columnHeaders.forEach((col) => {\n         col.fillspace = false;\n\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (col.validationRules) {\n            if (typeof col.validationRules === \"string\") {\n               col.validationRules = JSON.parse(col.validationRules);\n            }\n\n            if (col.validationRules.length) {\n               const validationUI = [];\n\n               // there could be more than one so lets loop through and build the UI\n               col.validationRules.forEach((rule) => {\n                  const Filter = ab.filterComplexNew(\n                     col.id /*+ \"_\" + webix.uid()*/\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: col.id,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n\n               // create a unique view id for popup\n               const popUpId =\n                  ids.rules + \"_\" + col.id; /* + \"_\" + webix.uid() */\n\n               // store the popup ids so we can remove the later\n               rulePops.push(popUpId);\n               // add the popup to the UI but don't show it\n               ab.Webix.ui({\n                  view: \"popup\",\n                  css: \"ab-rules-popup\",\n                  id: popUpId,\n                  body: {\n                     rows: validationUI,\n                  },\n               });\n            }\n         }\n\n         // group header\n         if (\n            settings.groupBy &&\n            (settings.groupBy || \"\").indexOf(col.id) > -1\n         ) {\n            const groupField = CurrentObject.fieldByID(col.fieldID);\n\n            if (groupField)\n               col.template = (obj, common) => {\n                  // return common.treetable(obj, common) + obj.value;\n                  if (obj.$group) {\n                     const rowData = ab.cloneDeep(obj);\n\n                     rowData[groupField.columnName] = rowData.value;\n\n                     return (\n                        common.treetable(obj, common) +\n                        groupField.format(rowData)\n                     );\n                  } else return groupField.format(obj);\n               };\n         }\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(CurrentObject.application);\n            f.filter.fieldsLoad(CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: f.filter.getValue(),\n               values: $DataTable.getSelectedItem[f.columnName],\n               invalidMessage: f.invalidMessage,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $DataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n               let invalidMessage = \"\";\n\n               $DataTable.$view.complexValidations[key].forEach((filter) => {\n                  // convert rowData from { colName : data } to { id : data }\n                  const newData = {};\n\n                  (CurrentObject.fields() || []).forEach((field) => {\n                     newData[field.id] = data[field.columnName];\n                  });\n\n                  // for the case of \"this_object\" conditions:\n                  if (data.uuid) {\n                     newData[\"this_object\"] = data.uuid;\n                     data[\"this_object\"] = data.uuid;\n                  }\n\n                  // use helper funtion to check if valid\n                  // const ruleValid = filter.filters(newData);\n                  const filterComplex = ab.filterComplexNew(\n                     `rule-validate-${key}`\n                  );\n                  filterComplex.fieldsLoad(\n                     CurrentObject.fields(),\n                     CurrentObject\n                  );\n                  const ruleValid = filterComplex.isValid(data, filter.filters);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     invalidMessage = filter.invalidMessage;\n                  }\n               });\n\n               // we also need to define an error message\n               if (!isValid)\n                  ab.Webix.message({\n                     type: \"error\",\n                     text: invalidMessage,\n                  });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $DataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $DataTable.config.rulePops = rulePops;\n         $DataTable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($DataTable.config.rulePops)\n            $DataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         // remove any validation rules from the previous table\n         $DataTable.define(\"rules\", {});\n         $DataTable.refresh();\n      }\n\n      const addedColumns = [];\n      // {array} the .id of the columnHeaders we add based upon our settings.\n      // this will help us pick the lastColumn that is part of the\n      // object.\n\n      if (settings.labelAsField) {\n         // console.log(CurrentObject);\n         columnHeaders.unshift({\n            id: \"appbuilder_label_field\",\n            header: \"Label\",\n            fillspace: true,\n            template: (obj) => CurrentObject.displayData(obj),\n            // css: { 'text-align': 'center' }\n         });\n         addedColumns.push(\"appbuilder_label_field\");\n      }\n\n      if (settings.massUpdate && accessLevel === 2) {\n         columnHeaders.unshift({\n            id: \"appbuilder_select_item\",\n            header: { content: \"masterCheckbox\", contentId: \"mch\" },\n            width: 40,\n            template: \"<div class='singleSelect'>{common.checkbox()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         this.columnSplitLeft = 1;\n         addedColumns.push(\"appbuilder_select_item\");\n      } else this.columnSplitLeft = 0;\n\n      if (settings.detailsPage !== \"\" && !settings.hideButtons) {\n         columnHeaders.push({\n            id: \"appbuilder_view_detail\",\n            header: \"\",\n            width: 40,\n            template: (obj, common) =>\n               \"<div class='detailsView'><span class='webix_icon fa fa-eye'></span></div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_detail\");\n      }\n\n      if (settings.trackView !== 0 && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_view_track\",\n            header: \"\",\n            width: 40,\n            template:\n               \"<div class='track'><span class='track fa fa-history'></span></div>\",\n            css: { \"text-align\": \"center\", cursor: \"pointer\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_track\");\n      }\n\n      if (\n         settings.editPage !== \"\" &&\n         !settings.hideButtons &&\n         accessLevel === 2\n      ) {\n         columnHeaders.push({\n            id: \"appbuilder_view_edit\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='edit'>{common.editIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_edit\");\n      }\n\n      if (settings.allowDelete && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_trash\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='trash'>{common.trashIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_trash\");\n      }\n\n      // find our last displayed column (that isn't one we added);\n      let lastCol = null;\n\n      for (let i = columnHeaders.length - 1; i >= 0; i--) {\n         const col = columnHeaders[i];\n         if (!col.hidden && addedColumns.indexOf(col.id) === -1) {\n            lastCol = col;\n            break;\n         }\n      }\n\n      if (lastCol) {\n         lastCol.fillspace = true;\n         lastCol.minWidth = lastCol.width;\n         lastCol.width = 150; // set a width for last column but by default it will fill the available space or use the minWidth to take up more\n      }\n\n      $DataTable.refreshColumns(columnHeaders);\n\n      // the addedColumns represent the additional icons that can be added.\n      this.columnSplitRight = addedColumns.length;\n\n      // the .massUpdate gets added to Left so don't include that in split right:\n      if (addedColumns.indexOf(\"appbuilder_select_item\") > -1)\n         this.columnSplitRight -= 1;\n      // .columnSplitRight can't be < 0\n      if (this.columnSplitRight < 0) this.columnSplitRight = 0;\n\n      // freeze columns:\n      const frozenColumnID = settings.frozenColumnID;\n\n      if (frozenColumnID != \"\")\n         $DataTable.define(\n            \"leftSplit\",\n            $DataTable.getColumnIndex(frozenColumnID) + 1\n         );\n      else $DataTable.define(\"leftSplit\", this.columnSplitLeft);\n\n      this.freezeDeleteColumn();\n      $DataTable.refreshColumns();\n      // }\n   }\n\n   /**\n    * localSettingsSave()\n    * Persist our current working copy of our GridSettings to localStorage.\n    * @return {Promise}\n    */\n   async localSettingsSave() {\n      const ab = this.AB;\n      const savedLocalSettings =\n         (await ab.Storage.get(this.keyStorageSettings)) || {};\n      const _gridSettings = this._gridSettings;\n\n      savedLocalSettings[this.settingsID()] = _gridSettings[this.settingsID()]\n         ? _gridSettings[this.settingsID()]\n         : [];\n\n      for (const item in savedLocalSettings) {\n         savedLocalSettings[item].forEach((item) => {\n            // we cannot include field info because of the cicular structure\n            if (item?.footer?.field) delete item.footer.field;\n         });\n      }\n\n      await ab.Storage.set(this.keyStorageSettings, savedLocalSettings);\n   }\n\n   /**\n    * @method localSettings()\n    * An interface method to handle get/set operations on our local GridSettings\n    * storage.\n    * .localStorage() : a getter to return the current value\n    * .localStorage(value) : a setter to save value as our current value.\n    * @param {various} value\n    *        the value to set to our settings.\n    * @return {various}\n    */\n   localSettings(value = null) {\n      const _gridSettings = this._gridSettings;\n\n      if (value) _gridSettings[this.settingsID()] = value;\n      else return _gridSettings[this.settingsID()];\n   }\n\n   /**\n    * @method selectRow()\n    * Select the grid row that correspondes to the provided rowData.\n    * @param {json} rowData\n    *        A key=>value hash of data that matches an entry in the grid.\n    *        rowData.id should match an existing entry.\n    */\n   selectRow(rowData) {\n      let id = rowData?.id ?? rowData;\n      if (this.__timeout_selectRow) {\n         console.log(\"Duplicate selectRow():\", id);\n         clearTimeout(this.__timeout_selectRow);\n      }\n      this.__timeout_selectRow = setTimeout(() => {\n         const $DataTable = this.getDataTable();\n         if (!$DataTable) return;\n\n         if (!id) $DataTable.unselect();\n         else if ($DataTable.exists(id)) {\n            $DataTable.select(id, false);\n            $DataTable.showItem(id);\n         } else $DataTable.select(null, false);\n\n         this.__timeout_selectRow = null;\n      }, 15);\n   }\n\n   /**\n    * @method settingsID()\n    * return the unique key for this Grid + object combo to store data\n    * in our localStorage.\n    * @return {string}\n    */\n   settingsID() {\n      const CurrentObject = this.datacollection.datasource;\n\n      return `${this.id}-${CurrentObject ? CurrentObject.id : \"0\"}`;\n   }\n\n   /**\n    * @method toggleTab()\n    * recursively toggle tabs into view once a user chooses a detail/edit view\n    * to display.\n    * @param {ABView.id} parentTab\n    * @param {webix.view} wb\n    */\n   toggleTab(parentTab, wb) {\n      // find the tab || if we didn't pass and id we may have passed a domNode\n      const tab =\n         wb.getTopParentView().queryView({ id: parentTab }) || $$(parentTab);\n\n      if (!tab) return;\n\n      // set the tabbar to to the tab\n      const tabbar = tab.getParentView().getParentView();\n\n      if (!tabbar) return;\n\n      // if we have reached the top we won't have a tab\n      if (tabbar.setValue) tabbar.setValue(parentTab);\n\n      // find if it is in a multiview of a tab\n      const nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n\n      // if so then do this again\n      if (nextTab) this.toggleTab(nextTab, wb);\n   }\n\n   toggleUpdateDelete() {\n      const $DataTable = this.getDataTable();\n\n      let checkedItems = 0;\n\n      $DataTable.data.each((obj) => {\n         if (\n            typeof obj !== \"undefined\" &&\n            Object.prototype.hasOwnProperty.call(\n               obj,\n               \"appbuilder_select_item\"\n            ) &&\n            obj.appbuilder_select_item === 1\n         )\n            checkedItems++;\n      });\n\n      if (checkedItems > 0) this.enableUpdateDelete();\n      else this.disableUpdateDelete();\n   }\n\n   toolbarDeleteSelected($view) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const deleteTasks = [];\n\n      $DataTable.data.each((row) => {\n         if (\n            typeof row !== \"undefined\" &&\n            // row.hasOwnProperty(\"appbuilder_select_item\") &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item === 1\n         ) {\n            // NOTE: store a fn() to run later.\n            deleteTasks.push(() => CurrentObject.model().delete(row.id));\n         }\n      });\n\n      const abWebix = this.AB.Webix;\n\n      if (deleteTasks.length > 0)\n         abWebix.confirm({\n            title: this.label(\"Delete Multiple Records\"),\n            text: this.label(\n               \"Are you sure you want to delete the selected records?\"\n            ),\n            callback: async (result) => {\n               if (result) {\n                  // Now run those functions\n                  await Promise.all(deleteTasks.map((t) => t()));\n\n                  // Anything we need to do after we are done.\n                  this.disableUpdateDelete();\n               }\n            },\n         });\n      else\n         abWebix.alert({\n            title: this.label(\"No Records Selected\"),\n            text: this.label(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n   }\n\n   toolbarFilter($view) {\n      this.view.filterHelper.showPopup($view);\n   }\n\n   toolbarSort($view) {\n      this.PopupSortDataTableComponent.show($view);\n   }\n\n   toolbarExport($view) {\n      this.PopupExport.show($view);\n   }\n\n   toolbarMassUpdate($view) {\n      this.PopupMassUpdateComponent.show($view);\n   }\n\n   /**\n    * @function toolTip()\n    *\n    * Retrieve the items toolTip\n    */\n   toolTip(obj, common) {\n      const CurrentObject = this.datacollection.datasource;\n      const imageFieldColNames = CurrentObject.imageFields().map(\n         (f) => f.columnName\n      );\n\n      let tip = \"\";\n\n      const columnName = common.column.id.replace(\" \", \"\");\n\n      if (Array.isArray(obj[columnName])) {\n         obj[columnName].forEach(function (o) {\n            if (o.text) tip += o.text + \"<br/>\";\n         });\n      } else if (\n         typeof obj[columnName + \"__relation\"] !== \"undefined\" &&\n         typeof obj[columnName] === \"number\"\n      )\n         tip = obj[columnName + \"__relation\"].text;\n      else if (typeof obj[columnName + \"__relation\"] !== \"undefined\") {\n         let relationData = obj[columnName + \"__relation\"];\n\n         if (!Array.isArray(relationData)) relationData = [relationData];\n\n         (relationData || []).forEach(function (o) {\n            if (o) tip += o.text + \"<br/>\";\n         });\n      } else if (imageFieldColNames.indexOf(columnName) !== -1) {\n         if (!obj[columnName]) {\n            return \"\";\n         } else {\n            // TODO: we need to get this URL from the ABFieldImage object!\n            tip = `<img style='max-width: 500px; max-height: 500px;' src='/file/${obj[columnName]}' />`;\n         }\n      } else if (common.column.editor === \"date\")\n         tip = common.column.format(obj[columnName]);\n      else if (common.column.editor === \"richselect\")\n         CurrentObject.fields().forEach((f) => {\n            if (f.columnName === columnName) {\n               if (f.settings.options) {\n                  f.settings.options.forEach((o) => {\n                     if (o.id === obj[columnName]) {\n                        tip = o.text;\n                     }\n                  });\n               }\n            }\n         });\n      else tip = obj[columnName];\n\n      if (!tip) return \"\";\n      else return tip;\n   }\n\n   /**\n    * @function toolTipOnBeforeRender()\n    *\n    * Add visibility \"hidden\" to all tooltips before render so we can move to a new location without the visual jump\n    */\n   toolTipOnBeforeRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      node.style.visibility = \"hidden\";\n   }\n\n   /**\n    * @function toolTipOnAfterRender()\n    *\n    * If the tooltip is displaying off the screen we want to try to reposition it for a better experience\n    */\n   toolTipOnAfterRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      if (node.firstChild?.nodeName === \"IMG\") {\n         setTimeout(() => {\n            const imgBottom = parseInt(node.style.top.replace(\"px\", \"\")) + 500;\n            const imgRight = parseInt(node.style.left.replace(\"px\", \"\")) + 500;\n\n            if (imgBottom > window.innerHeight) {\n               const imgOffsetY = imgBottom - window.innerHeight;\n               const newTop =\n                  parseInt(node.style.top.replace(\"px\", \"\")) - imgOffsetY;\n               node.style.top = newTop + \"px\";\n            }\n\n            if (imgRight > window.innerWidth) {\n               const imgOffsetX = imgRight - window.innerWidth;\n               const newLeft =\n                  parseInt(node.style.left.replace(\"px\", \"\")) - imgOffsetX;\n               node.style.left = newLeft + \"px\";\n            }\n\n            node.style.visibility = \"visible\";\n         }, 250);\n      } else node.style.visibility = \"visible\";\n   }\n\n   get isCustomGroup() {\n      const dc = this.datacollection;\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      return (\n         $DataTable?.config?.view === \"treetable\" && !CurrentObject?.isGroup\n      );\n   }\n\n   populateGroupData() {\n      if (!this.isCustomGroup) return;\n\n      this.busy();\n\n      const dc = this.datacollection;\n      const $DataTable = this.getDataTable();\n\n      $DataTable.clearAll();\n      $DataTable.parse(dc.getData() || []);\n\n      this.grouping();\n      this.ready();\n   }\n}\n","const ABViewGridCore = require(\"../../core/views/ABViewGridCore\");\nimport ABViewGridComponent from \"./viewComponent/ABViewGridComponent\";\nimport ABViewGridFilter from \"./viewProperties/ABViewPropertyFilterData\";\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewGrid extends ABViewGridCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.gridFilter);\n   }\n\n   propertyGroupByList(ids, groupBy) {\n      let colNames = groupBy || [];\n      if (typeof colNames == \"string\") {\n         colNames = colNames.split(\",\");\n      }\n\n      let options = $$(ids.groupBy).getList().data.find({});\n\n      $$(ids.groupByList).clearAll();\n      colNames.forEach((colName) => {\n         let opt = options.filter((o) => o.id == colName)[0];\n         if (opt) {\n            $$(ids.groupByList).add(opt);\n         }\n      });\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGridComponent(this);\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null) {\n         this.__filterHelper = new ABViewGridFilter(\n            this.AB,\n            `${this.id}_filterHelper`\n         );\n      }\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let origWS = this.warningsSilent;\n      this.warningsSilent = true;\n      let DC = this.datacollection;\n      this.warningsSilent = origWS;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewGridPopupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nvar L = null;\n\nexport default class AB_Work_Object_Workspace_PopupSortFields extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupSortFields\";\n\n      super({\n         component: `${idBase}_popupSort`,\n         list: `${idBase}_popupSort_list`,\n         form: `${idBase}_popupSort_form`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // The current ABObject we are working with.\n\n      this._blockOnChange = false;\n      // {bool}\n      // Should we skip the onChange handler processing at this time?\n\n      this._settings = null;\n      // {json}\n      // default sort settings.\n\n      if (!L) {\n         L = (...params) => {\n            return (this.AB ?? AB).Multilingual.label(...params);\n         };\n      }\n   }\n\n   uiForm() {\n      const compId = this.ids.component;\n      return {\n         view: \"form\",\n         id: this.ids.form,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: (/* id, e, node */) => {\n                     this.clickAddNewSort();\n                     this.triggerOnChange();\n                  },\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `${compId} add sort button`\n                     );\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         id: this.ids.component,\n         // autoheight:true,\n         width: 600,\n         body: this.uiForm(),\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   // Our init() function for setting up our UI\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      (this.AB.Webix ?? webix).ui(this.ui());\n   }\n\n   /**\n    * @function clickAddNewSort\n    * When the user clicks the \"Add New Sort\" button, this routine will\n    * add another row to the sort form.\n    * @param {string} fieldId\n    *        The ABField.id of the field to auto select in this new row.\n    * @param {string} dir\n    *        The sort order to auto select in this new row.\n    */\n   // clickAddNewSort: function(by, dir, isMulti, id) {\n   clickAddNewSort(fieldId, dir) {\n      var self = this;\n      var sort_form = $$(this.ids.form);\n\n      var viewIndex = sort_form.getChildViews().length - 1;\n      var listFields = this.getFieldList(true);\n      sort_form.addView(\n         {\n            id: `sort_${viewIndex + 1}`,\n            cols: [\n               {\n                  view: \"combo\",\n                  width: 220,\n                  options: listFields,\n                  on: {\n                     onChange: function (columnId) {\n                        var el = this;\n                        self.onChangeCombo(columnId, el);\n                     },\n                  },\n               },\n               this._valueElement(),\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  width: 30,\n                  on: {\n                     onItemClick: function () {\n                        sort_form.removeView(this.getParentView());\n                        self.refreshFieldList(true);\n                        self.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         },\n         viewIndex\n      );\n\n      // Select field\n      if (fieldId) {\n         var fieldsCombo = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[0];\n         fieldsCombo.setValue(fieldId);\n      }\n      // select direction\n      if (dir) {\n         var dirElem = sort_form.getChildViews()[viewIndex].getChildViews()[1];\n         dirElem.setValue?.(dir);\n\n         // [ABFieldList] Sorting following order\n         dirElem.sort?.((a, b) => {\n            return (dir ?? \"\").indexOf(a.id ?? a) >\n               (dir ?? \"\").indexOf(b.id ?? b)\n               ? 1\n               : -1;\n         });\n      }\n   }\n\n   /**\n    * @function getFieldList\n    * return field list so we can present a custom UI for view\n    * @param {bool} excludeSelected\n    *        Should we ignore fields that already exist in the form?\n    * @return {array} [ { id, value } ]\n    *         an array that is compatible with the webix.list\n    *         widget.\n    */\n   getFieldList(excludeSelected) {\n      var sort_form = $$(this.ids.form),\n         listFields = [];\n\n      var allFields = this.CurrentObject.fields();\n      if (!allFields || !allFields.length) return listFields;\n\n      // Get all fields include hidden fields\n      allFields.forEach((f) => {\n         if (f.fieldIsSortable()) {\n            listFields.push({\n               id: f.id,\n               value: f.label,\n            });\n         }\n      });\n\n      // Remove selected field\n      if (excludeSelected) {\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var selectedValue = cView.getChildViews()[0].getValue();\n               if (selectedValue) {\n                  listFields = listFields.filter((f) => f.id != selectedValue);\n               }\n            });\n         }\n      }\n      return listFields;\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object\n    * @param {ABObject} object  the currently selected object.\n    */\n   objectLoad(object) {\n      this.CurrentObject = object;\n   }\n\n   /**\n    * @method setSettings\n    * Initialize the form with a set of conditions.\n    * @param {Array} settings\n    *        The default settings for this form.\n    *        [\n    *           {\n    *              key: uuid,     // ABField.id\n    *              dir: string,   // 'asc' or 'desc'\n    *           }\n    *        ]\n    */\n   setSettings(settings) {\n      this._settings = this.AB.cloneDeep(settings);\n   }\n\n   /**\n    * @method getSettings\n    * return the current sort settings stored by this form.\n    * @return {Array} -\n    *         [\n    *            {\n    *               key: uuid,     // ABField.id\n    *               dir: string,   // 'asc' or 'desc'\n    *            }\n    *         ]\n    */\n   getSettings() {\n      var sort_form = $$(this.ids.form),\n         sortFields = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue();\n            const dirElem = cView.getChildViews()[1];\n            var dir =\n               dirElem?.getValue?.() ??\n               dirElem?.data?.getRange?.()?.map((opt) => opt.id) ?? // Select list field type\n               \"\";\n            sortFields.push({\n               key: fieldId,\n               dir: dir,\n            });\n         });\n      }\n      return sortFields;\n   }\n\n   /**\n    * @method onChangeCombo()\n    * Update the display once they have chosen a field to sort by.\n    * We now need to offer the appropriate sort direction chooser.\n    * @param {string} fieldID\n    *        The value of the combo box now.\n    * @param {webix.$view} el\n    *        The current Webix.$view that was the combo box that just\n    *        changed.\n    */\n   onChangeCombo(fieldID, el) {\n      var allFields = this.CurrentObject.fields();\n      var chosenField = null,\n         sortDir = el.getParentView().getChildViews()[1],\n         // isMultiLingual = el.getParentView().getChildViews()[2],\n         // isMulti = 0,\n         options = null;\n\n      chosenField = allFields.find((f) => f.id == fieldID);\n      if (!chosenField) return;\n\n      switch (chosenField.key) {\n         case \"date\":\n            options = [\n               { id: \"asc\", value: L(\"Before -> After\") },\n               { id: \"desc\", value: L(\"After -> Before\") },\n            ];\n            break;\n         case \"number\":\n            options = [\n               { id: \"asc\", value: L(\"1 -> 9\") },\n               { id: \"desc\", value: L(\"9 -> 1\") },\n            ];\n            break;\n         case \"string\":\n         default:\n            options = [\n               { id: \"asc\", value: L(\"A -> Z\") },\n               { id: \"desc\", value: L(\"Z -> A\") },\n            ];\n            break;\n      }\n\n      if (chosenField.key == \"list\") {\n         AB.Webix.ui(this._valueListElement(chosenField), sortDir);\n      } else {\n         const valElem = this._valueElement();\n         valElem.options = options;\n         AB.Webix.ui(valElem, sortDir);\n      }\n\n      // if (columnConfig.settings.supportMultilingual)\n      //    isMulti = columnConfig.settings.supportMultilingual;\n\n      // isMultiLingual.setValue(isMulti);\n\n      this.refreshFieldList();\n      this.triggerOnChange();\n   }\n\n   /**\n    * @function onShow\n    * Rebuild the form when an onShow() is called.\n    */\n   onShow(view, options) {\n      var sort_form = $$(this.ids.form);\n\n      // clear field options in the form\n      webix.ui(this.uiForm(), sort_form);\n\n      var sorts = this._settings;\n      if (sorts && sorts.forEach) {\n         sorts.forEach((s) => {\n            this.clickAddNewSort(s.key, s.dir);\n         });\n      }\n\n      if (sorts == null || sorts.length == 0) {\n         this.clickAddNewSort();\n      }\n\n      const $popup = $$(this.ids.component);\n      $popup?.blockEvent();\n      $popup?.show(view, options);\n      $popup?.unblockEvent();\n   }\n\n   /**\n    * @method refreshFieldList\n    * return an updated field list so you cannot duplicate a sort\n    * @param {bool} ignoreRemoveViews\n    *\n    */\n   refreshFieldList(ignoreRemoveViews) {\n      var sort_form = $$(this.ids.form),\n         listFields = this.getFieldList(false),\n         selectedFields = [],\n         removeChildViews = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            let fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n               fieldObj = listFields.filter((f) => {\n                  return f.id == fieldId;\n               });\n\n            if (fieldObj.length > 0) {\n               // Add selected field to list\n               selectedFields.push(fieldObj[0]);\n            } else {\n               // Add condition to remove\n               removeChildViews.push(cView);\n            }\n         });\n      }\n\n      // Remove filter conditions when column is deleted\n      if (!ignoreRemoveViews) {\n         removeChildViews.forEach((cView /*, index */) => {\n            sort_form.removeView(cView);\n         });\n      }\n\n      // Field list should not duplicate field items\n      childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index) return false;\n\n            let fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n               fieldObj = listFields.filter((f) => {\n                  return f.id == fieldId;\n               });\n\n            // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n            var selectedFieldsExcludeCurField = selectedFields.filter((x) => {\n               if (Array.isArray(fieldObj) && fieldObj.indexOf(x) !== -1) {\n                  return false;\n               }\n               return true;\n            });\n\n            // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n            var enableFields = listFields.filter((x) => {\n               if (\n                  Array.isArray(selectedFieldsExcludeCurField) &&\n                  selectedFieldsExcludeCurField.indexOf(x) !== -1\n               ) {\n                  return false;\n               }\n               return true;\n            });\n\n            // Update field list\n            cView.getChildViews()[0].define(\"options\", enableFields);\n            cView.getChildViews()[0].refresh();\n         });\n      }\n   }\n\n   /**\n    * @function triggerOnChange\n    * This parses the sort form to build in order the sorts then saves to the application object workspace\n    */\n   triggerOnChange() {\n      // block .onChange callback\n      if (this._blockOnChange) return;\n\n      this._settings = this.getSettings();\n\n      this.emit(\"changed\", this._settings);\n   }\n\n   blockOnChange() {\n      this._blockOnChange = true;\n   }\n\n   unblockOnChange() {\n      this._blockOnChange = false;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {uuid} fieldId\n    *        the ABField.id we want to prefill the sort with\n    * @param {json} options\n    *        Additional webix.show() options parameters.\n    */\n   show($view, fieldId, options) {\n      this.blockOnChange();\n\n      this.onShow($view, options || null);\n\n      if (fieldId) {\n         this.clickAddNewSort(fieldId);\n      }\n\n      this.unblockOnChange();\n   }\n\n   /**\n    * @function sort()\n    * client sort data in list\n    *\n    * @param {Object} a\n    * @param {Object} b\n    */\n   sort(a, b) {\n      let result = 0;\n\n      const childViews = $$(this.ids.form).getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index || result != 0) return;\n\n            const fieldId = cView.getChildViews()[0].getValue();\n            const dirElem = cView.getChildViews()[1];\n            const dir =\n               dirElem?.getValue?.() ??\n               dirElem?.data?.getRange?.()?.map((opt) => opt.id) ?? // Select list field type\n               \"\";\n\n            const field = this.CurrentObject.fieldByID(fieldId);\n            if (!field) return;\n\n            const by = field.columnName; // column name\n\n            let aValue = a[by],\n               bValue = b[by];\n\n            if (field.key == \"list\") {\n               aValue = dir.indexOf(aValue);\n               bValue = dir.indexOf(bValue);\n            }\n\n            if (Array.isArray(aValue)) {\n               aValue = (aValue || [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (Array.isArray(bValue)) {\n               bValue = (bValue ?? [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (aValue != bValue) {\n               if (dir == \"asc\" || field.key == \"list\") {\n                  result = aValue > bValue ? 1 : -1;\n               } else {\n                  result = aValue < bValue ? 1 : -1;\n               }\n            }\n         });\n      }\n\n      return result;\n   }\n\n   _valueElement() {\n      return {\n         view: \"segmented\",\n         width: 200,\n         options: [\n            {\n               id: \"\",\n               value: L(\"Please select field\"),\n            },\n         ],\n         on: {\n            onChange: (/* newv, oldv */) => {\n               // 'asc' or 'desc' values\n               this.triggerOnChange();\n            },\n         },\n      };\n   }\n\n   _valueListElement(field) {\n      return {\n         view: \"list\",\n         template: \"<div class='webix_drag_handle'></div> #text#\",\n         type: {\n            height: 35,\n         },\n         height: 150,\n         select: true,\n         drag: \"order\",\n         data: field.options(),\n         on: {\n            onChange: () => {\n               this.triggerOnChange();\n            },\n            onAfterDrop: () => {\n               this.triggerOnChange();\n            },\n         },\n      };\n   }\n}\n","const ABViewImageCore = require(\"../../core/views/ABViewImageCore\");\nconst ABViewImageComponent = require(\"./viewComponent/ABViewImageComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewImage extends ABViewImageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewImageComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.filename) {\n         this.warningsMessage(`has no image set`);\n      }\n   }\n};\n","const ABViewKanbanCore = require(\"../../core/views/ABViewKanbanCore\");\nconst ABViewKanbanComponent = require(\"./viewComponent/ABViewKanbanComponent\");\n\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewKanban extends ABViewKanbanCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n\n   component() {\n      return new ABViewKanbanComponent(this);\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewKanbanFormSidePanel\n *\n * Provide a form area for editing data in the Kan Ban view.\n *\n */\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\nconst ABViewForm = require(\"./ABViewForm\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\n\nvar L = null;\n// multilingual Label fn()\n\nmodule.exports = class ABWorkObjectKanBan extends ABViewComponent {\n   constructor(comKanBan, idBase, editFields) {\n      idBase = idBase || `${comKanBan.view?.id}_formSidePanel`;\n      super(idBase, {\n         form: \"\",\n      });\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n\n      this.AB = comKanBan.AB;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.editFields = editFields;\n      // {array}\n      // An array of {ABField.id} that determines which fields should show up\n      // in the editor.\n\n      this._mockApp = this.AB.applicationNew({});\n      // {ABApplication}\n      // Any ABViews we create are expected to be in relation to\n      // an ABApplication, so we create a \"mock\" app for our\n      // workspace views to use to display.\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         id: ids.component,\n         width: 300,\n         hidden: true,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Edit Record\"),\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     align: \"right\",\n                     click: (/* id */) => {\n                        this.hide();\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"scrollview\",\n               body: {\n                  rows: [\n                     {\n                        id: ids.form,\n                        view: \"form\",\n                        borderless: true,\n                        rows: [],\n                     },\n                  ],\n               },\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   hide() {\n      $$(this.ids.component)?.hide();\n\n      this.emit(\"close\");\n   }\n\n   show(data) {\n      $$(this.ids.component)?.show();\n\n      this.refreshForm(data);\n   }\n\n   isVisible() {\n      return $$(this.ids.component)?.isVisible() ?? false;\n   }\n\n   refreshForm(data) {\n      var ids = this.ids;\n      let $formView = $$(ids.form);\n      let CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject || !$formView) return;\n\n      data = data || {};\n\n      let formAttrs = {\n         id: `${this.ids.component}_sideform`,\n         key: ABViewForm.common().key,\n         settings: {\n            columns: 1,\n            labelPosition: \"top\",\n            showLabel: 1,\n            clearOnLoad: 0,\n            clearOnSave: 0,\n            labelWidth: 120,\n            height: 0,\n         },\n      };\n\n      // let form = new ABViewForm(formAttrs, this._mockApp);\n      let form = this.AB.viewNewDetatched(formAttrs);\n\n      form.objectLoad(CurrentObject);\n\n      // Populate child elements\n      CurrentObject.fields().forEach((f, index) => {\n         // if this is one of our .editFields\n         if (!this.editFields || this.editFields.indexOf(f.id) > -1) {\n            form.addFieldToForm(f, index);\n         }\n      });\n\n      // add default button (Save button)\n      form._views.push(\n         new ABViewFormButton(\n            {\n               settings: {\n                  includeSave: true,\n                  includeCancel: false,\n                  includeReset: false,\n               },\n               position: {\n                  y: CurrentObject.fields().length, // yPosition\n               },\n            },\n            this._mockApp,\n            form\n         )\n      );\n\n      // add temp id to views\n      form._views.forEach(\n         (v, index) => (v.id = `${form.id}_${v.key}_${index}`)\n      );\n\n      let formCom = form.component(this.AB._App);\n\n      // Rebuild form\n      webix.ui(formCom.ui().rows.concat({}), $formView);\n      webix.extend($formView, webix.ProgressBar);\n\n      formCom.init(\n         this.AB,\n         2,\n         {\n            onBeforeSaveData: () => {\n               // get update data\n               var formVals = form.getFormValues($formView, CurrentObject);\n\n               // validate data\n               if (!form.validateData($formView, CurrentObject, formVals))\n                  return false;\n\n               // show progress icon\n               $formView?.showProgress({ type: \"icon\" });\n\n               if (formVals.id) {\n                  CurrentObject.model()\n                     .update(formVals.id, formVals)\n                     .then((updateVals) => {\n                        this.emit(\"update\", updateVals);\n                        // _logic.callbacks.onUpdateData(updateVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():update(): Error updating value\",\n                           formVals,\n                        });\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n               // else add new row\n               else {\n                  CurrentObject.model()\n                     .create(formVals)\n                     .then((newVals) => {\n                        // _logic.callbacks.onAddData(newVals);\n                        this.emit(\"add\", newVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():.create(): Error creating value\",\n                           formVals,\n                        });\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n\n               return false;\n            },\n         },\n         2 /* NOTE: if you can see this KanBan, you should be able to see the side form? */\n      );\n\n      // display data\n      $formView.clear();\n      $formView.parse(data);\n\n      formCom.onShow(data);\n   }\n};\n","const ABViewLabelCore = require(\"../../core/views/ABViewLabelCore\");\nconst ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABViewLabel extends ABViewLabelCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLabelComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABViewLayoutCore = require(\"../../core/views/ABViewLayoutCore\");\nconst ABViewLayoutComponent = require(\"./viewComponent/ABViewLayoutComponent\");\n\nmodule.exports = class ABViewLayout extends ABViewLayoutCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLayoutComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (this._views.length == 0) {\n         this.warningsMessage(\"has no columns set.\");\n      }\n   }\n};\n","const ABViewListCore = require(\"../../core/views/ABViewListCore\");\nconst ABViewListComponent = require(\"./viewComponent/ABViewListComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewList extends ABViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewListComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewMenuCore = require(\"../../core/views/ABViewMenuCore\");\nconst ABViewMenuComponent = require(\"./viewComponent/ABViewMenuComponent\");\n\nmodule.exports = class ABViewMenu extends ABViewMenuCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewMenuComponent(this);\n   }\n};\n","const ABViewPDFImporterCore = require(\"../../core/views/ABViewPDFImporterCore\");\nconst ABViewPDFImporterComponent = require(\"./viewComponent/ABViewPDFImporterComponent\");\n\nmodule.exports = class ABViewPDFImporter extends ABViewPDFImporterCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPDFImporterComponent(this);\n   }\n};\n","const ABViewPageCore = require(\"../../core/views/ABViewPageCore\");\n\nconst ABPropertyComponentDefaults = ABViewPageCore.defaultValues();\n\nmodule.exports = class ABViewPage extends ABViewPageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var component = super.component();\n\n      component._ui = component.ui();\n\n      // wrap our ABViewContainer in our Page scrollview\n      component.ui = () => {\n         return {\n            view: \"scrollview\",\n            borderless: true,\n            css:\n               this.settings.pageBackground ||\n               ABPropertyComponentDefaults.pageBackground,\n            body: component._ui,\n         };\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               accessLevel = accessLevel ?? this.getUserAccess();\n               return newComponent.init(this.AB, accessLevel, options);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no sub views\");\n      }\n\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABViewPivotCore = require(\"../../core/views/ABViewPivotCore\");\nconst ABViewPivotComponent = require(\"./viewComponent/ABViewPivotComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPivot extends ABViewPivotCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPivotComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewReportsManagerCore = require(\"../../core/views/ABViewReportsManagerCore\");\nconst ABViewReportsManagerComponent = require(\"./viewComponent/ABViewReportsManagerComponent\");\n\nmodule.exports = class ABViewReportsManager extends ABViewReportsManagerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewReportsManagerComponent(this);\n   }\n};\n","const ABViewSchedulerCore = require(\"../../core/views/ABViewSchedulerCore\");\nconst ABViewSchedulerComponent = require(\"./viewComponent/ABViewSchedulerComponent\");\n\nmodule.exports = class ABViewScheduler extends ABViewSchedulerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewSchedulerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n   }\n};\n","const ABViewTabCore = require(\"../../core/views/ABViewTabCore\");\n\nconst ABViewTabComponent = require(\"./viewComponent/ABViewTabComponent\");\n\nmodule.exports = class ABViewTab extends ABViewTabCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTabComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no tabs set\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (this.views() || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","const ABViewTextCore = require(\"../../core/views/ABViewTextCore\");\n\nconst ABViewTextComponent = require(\"./viewComponent/ABViewTextComponent\");\n\nmodule.exports = class ABViewText extends ABViewTextCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(parentId) {\n      return new ABViewTextComponent(this, parentId);\n   }\n};\n","const ABViewWidgetCore = require(\"../../core/views/ABViewWidgetCore\");\n\nconst ABPropertyComponentDefaults = ABViewWidgetCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewWidget extends ABViewWidgetCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let base = super.component(App);\n\n      base.onShow = (viewId) => {\n         let dv = this.datacollection; // get from a function or a (get) property\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n      };\n\n      return base;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCSVExporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVExporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               buttonFilter: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.clientFilter = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            type: \"clean\",\n            borderless: true,\n            cols: [\n               {\n                  id: ids.buttonFilter,\n                  view: \"button\",\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"fa fa-filter\",\n                  borderless: true,\n                  width: 50,\n                  label: \"\",\n                  click: () => {\n                     this.showFilterPopup();\n                  },\n               },\n               {\n                  id: ids.button,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-download\",\n                  borderless: true,\n                  width: settings.width || defaultSettings.width,\n                  label: settings.buttonLabel ?? defaultSettings.buttonLabel,\n                  click: () => {\n                     this.downloadCsvFile();\n                  },\n               },\n               { fillspace: true },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      if (!this.clientFilter) {\n         const clientFilter = AB.filterComplexNew(this.ids.filterComplex);\n\n         const dc = this.datacollection;\n\n         if (dc) {\n            const obj = dc.datasource;\n\n            clientFilter.fieldsLoad(obj?.fields?.() ?? []);\n         }\n\n         clientFilter.init();\n         clientFilter.on(\"change\", (val) => {\n            this.onFilterChange(val);\n         });\n\n         this.clientFilter = clientFilter;\n      }\n   }\n\n   downloadCsvFile() {\n      let url = `/appbuilder/csv-export/${this.view.id}`;\n\n      const where = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      const whereWidget = this.view.settings?.where;\n      if ((whereWidget?.rules ?? []).length) {\n         where.rules.push(whereWidget);\n      }\n\n      const whereClient = this.clientFilter.getValue();\n      if ((whereClient?.rules ?? []).length) {\n         where.rules.push(whereClient);\n      }\n\n      if ((where?.rules || []).length) {\n         let qsWhere = JSON.stringify(where);\n\n         qsWhere = encodeURIComponent(qsWhere);\n         url = `${url}?where=${qsWhere}`;\n      }\n\n      window.open(url);\n   }\n\n   showFilterPopup() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      this.clientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n   }\n\n   onFilterChange() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      if (!$buttonFilter) return;\n\n      const where = this.clientFilter.getValue();\n\n      $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n      $buttonFilter.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst CSVImporter = require(\"../../CSVImporter\");\n\nmodule.exports = class ABViewCSVImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVImporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               popup: \"\",\n\n               form: \"\",\n               uploader: \"\",\n               uploadFileList: \"\",\n               separatedBy: \"\",\n               headerOnFirstLine: \"\",\n               columnList: \"\",\n\n               search: \"\",\n               datatable: \"\",\n\n               statusMessage: \"\",\n               progressBar: \"\",\n\n               linkedDataButton: \"\",\n               importButton: \"\",\n               rules: \"\",\n            },\n            ids\n         )\n      );\n\n      this.csvImporter = new CSVImporter((...args) => this.label(...args));\n      // {CSVImporter}\n      // An instance of the object that imports the CSV data.\n\n      this.validationError = false;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n   }\n\n   ui() {\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-upload\",\n                  label: this.label(\n                     settings.buttonLabel || defaultSettings.buttonLabel\n                  ),\n                  width: settings.width || defaultSettings.width,\n                  click: () => {\n                     this.showPopup();\n                  },\n               },\n               {\n                  fillspace: true,\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiConfig() {\n      const ids = this.ids;\n\n      return {\n         id: ids.form,\n         view: \"form\",\n         type: \"clean\",\n         borderless: true,\n         minWidth: 400,\n         gravity: 1,\n         elements: [\n            {\n               rows: [\n                  {\n                     id: ids.uploader,\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     css: \"webix_primary\",\n                     value: this.label(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           this._csvFileInfo = fileInfo;\n\n                           return this.loadCsvFile();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     padding: 10,\n                     rows: [\n                        {\n                           id: ids.separatedBy,\n                           view: \"richselect\",\n                           name: \"separatedBy\",\n                           label: this.label(\"Separated by\"),\n                           labelWidth: 140,\n                           options: this.csvImporter.getSeparateItems(),\n                           value: \",\",\n                           on: {\n                              onChange: () => {\n                                 this.loadCsvFile();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.headerOnFirstLine,\n                           view: \"checkbox\",\n                           name: \"headerOnFirstLine\",\n                           label: this.label(\"Header on first line\"),\n                           labelWidth: 140,\n                           disabled: true,\n                           value: true,\n                           on: {\n                              onChange: (/*newVal, oldVal*/) => {\n                                 this.populateColumnList();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           minHeight: 300,\n                           body: {\n                              padding: 10,\n                              id: ids.columnList,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiRecordsView() {\n      const ids = this.ids;\n\n      return {\n         gravity: 2,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"bg_gray\",\n               cols: [\n                  { width: 5 },\n                  {\n                     id: ids.search,\n                     view: \"search\",\n                     value: \"\",\n                     label: \"\",\n                     placeholder: this.label(\"Search records...\"),\n                     keyPressTimeout: 200,\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.search($$(ids.search).getValue());\n                        },\n                     },\n                  },\n                  { width: 2 },\n               ],\n            },\n            {\n               id: ids.datatable,\n               view: \"datatable\",\n               resizeColumn: true,\n               editable: true,\n               editaction: \"dblclick\",\n               css: \"ab-csv-importer\",\n               borderless: false,\n               tooltip: (obj) => {\n                  const tooltip = obj._errorMsg\n                     ? obj._errorMsg\n                     : \"No validation errors\";\n                  return tooltip;\n               },\n               minWidth: 650,\n               columns: [],\n               on: {\n                  onValidationError: (id, obj, details) => {\n                     // console.log(`item ${id} invalid`);\n                     let errors = \"\";\n\n                     Object.keys(details).forEach((key) => {\n                        this.$view.complexValidations[key].forEach((err) => {\n                           errors += err.invalidMessage + \"</br>\";\n                        });\n                     });\n\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"invalid\",\n                        _errorMsg: errors,\n                     });\n                     $dt.unblockEvent();\n\n                     this.validationError = true;\n                  },\n                  onValidationSuccess: (id, obj, details) => {\n                     // console.log(`item ${id} valid`);\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"valid\",\n                        _errorMsg: \"\",\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = false;\n                  },\n                  onCheck: () => {\n                     const selected = $$(ids.datatable).find({\n                        _included: true,\n                     });\n                     const $importButton = $$(ids.importButton);\n\n                     $importButton.setValue(this.labelImport(selected));\n\n                     if (this.overLimitAlert(selected)) $importButton.disable();\n                     else $importButton.enable();\n                  },\n               },\n            },\n            {\n               id: ids.progressBar,\n               height: 6,\n            },\n            {\n               cols: [\n                  {\n                     id: ids.linkedDataButton,\n                     view: \"button\",\n                     label: this.label(\"Linked Data\"),\n                     type: \"icon\",\n                     icon: \"fa fa-info\",\n                     maxWidth: 180,\n                     click: () => {\n                        this.showLinkedData();\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     name: \"import\",\n                     id: ids.importButton,\n                     label: this.label(\"Import\"),\n                     css: \"webix_primary\",\n                     disabled: true,\n                     type: \"icon\",\n                     icon: \"fa fa-upload\",\n                     click: () => {\n                        this.import();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n\n      return {\n         id: ids.popup,\n         view: \"window\",\n         hidden: true,\n         position: \"center\",\n         modal: true,\n         resize: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"label\",\n                  label: this.label(\"CSV Importer\"),\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  type: \"line\",\n                  cols: [\n                     this.uiConfig(),\n                     { width: 20 },\n                     this.uiRecordsView(),\n                     { width: 1 },\n                  ],\n               },\n               {\n                  id: ids.statusMessage,\n                  view: \"label\",\n                  align: \"right\",\n                  hidden: true,\n               },\n               {\n                  hidden: true,\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: this.label(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     /*,\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: labels.component.import,\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              _logic.import();\n                           }\n                        }*/\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      // Populate values to rules\n\n      const dc = this.datacollection;\n\n      if (dc) this.objectLoad(dc.datasource);\n\n      const abWebix = AB.Webix;\n\n      abWebix.ui(this.uiPopup());\n\n      const $form = $$(ids.form);\n\n      if ($form) abWebix.extend($form, abWebix.ProgressBar);\n\n      const $progressBar = $$(ids.progressBar);\n\n      if ($progressBar) abWebix.extend($progressBar, abWebix.ProgressBar);\n   }\n\n   showPopup() {\n      const ids = this.ids;\n\n      $$(ids.popup)?.show();\n\n      this.formClear();\n\n      // open file dialog to upload\n      $$(ids.uploader).fileDialog();\n   }\n\n   hide() {\n      $$(this.ids.popup)?.hide();\n   }\n\n   formClear() {\n      const ids = this.ids;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n\n      const $form = $$(ids.form);\n\n      $form.clearValidation();\n      $form.clear();\n\n      $$(ids.separatedBy).setValue(\",\");\n\n      this.AB.Webix.ui([], $$(ids.columnList));\n\n      $$(ids.headerOnFirstLine).disable();\n      $$(ids.importButton).disable();\n\n      $$(ids.search).setValue(\"\");\n      $$(ids.uploadFileList).clearAll();\n      $$(ids.datatable).clearAll();\n\n      const $statusMessage = $$(ids.statusMessage);\n\n      $statusMessage.setValue(\"\");\n      $statusMessage.hide();\n   }\n\n   search(searchText) {\n      const $datatable = $$(this.ids.datatable);\n\n      if (!$datatable) return;\n\n      searchText = (searchText || \"\").toLowerCase();\n\n      const matchFields = this.getMatchFields();\n\n      $datatable.filter((row) => {\n         let exists = false;\n\n         (matchFields || []).forEach((f) => {\n            if (exists) return;\n\n            exists =\n               (row[`${f.columnIndex}`] || \"\")\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(searchText) > -1;\n         });\n\n         return exists;\n      });\n   }\n\n   statusTemplate(item) {\n      let template = \"\";\n\n      if (!item) return template;\n\n      switch (item._status) {\n         case \"in-progress\":\n            template = \"<span class='fa fa-refresh'></span>\";\n            break;\n         case \"invalid\":\n            template = \"<span class='fa fa-exclamation-triangle'></span>\";\n            break;\n         case \"valid\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"done\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"fail\":\n            template = \"<span class='fa fa-remove'></span>\";\n            break;\n      }\n\n      return template;\n   }\n\n   async loadCsvFile() {\n      const _csvFileInfo = this._csvFileInfo;\n\n      if (!_csvFileInfo) return false;\n\n      const csvImporter = this.csvImporter;\n\n      if (!csvImporter.validateFile(_csvFileInfo)) {\n         this.AB.Webix.alert({\n            title: this.label(\"This file extension is not allowed\"),\n            text: this.label(\"Please only upload CSV files\"),\n            ok: this.label(\"Ok\"),\n         });\n\n         return false;\n      }\n\n      const ids = this.ids;\n\n      // show loading cursor\n      const $form = $$(ids.form);\n\n      $form?.showProgress?.({ type: \"icon\" });\n\n      // read CSV file\n      const $headerOnFirstLine = $$(ids.headerOnFirstLine);\n      const $importButton = $$(ids.importButton);\n\n      $headerOnFirstLine.enable();\n      $importButton.enable();\n\n      this._dataRows = await csvImporter.getDataRows(\n         _csvFileInfo,\n         $$(ids.separatedBy).getValue()\n      );\n\n      const _dataRows = this._dataRows;\n\n      let length = _dataRows.length;\n\n      if ($headerOnFirstLine.getValue()) length = _dataRows.length - 1;\n\n      $importButton.setValue(this.labelImport(length));\n      this.populateColumnList();\n      $form?.hideProgress?.();\n\n      return true;\n   }\n\n   removeCsvFile(fileId) {\n      $$(this.ids.uploadFileList).remove(fileId);\n      this.formClear();\n\n      return true;\n   }\n\n   populateColumnList() {\n      const self = this;\n      const ids = this.ids;\n      const abWebix = this.AB.Webix;\n\n      // clear list\n      const $columnList = $$(ids.columnList);\n\n      abWebix.ui([], $columnList);\n\n      const _dataRows = this._dataRows;\n\n      if (!_dataRows) return;\n\n      // check first line of CSV\n      const firstLine = _dataRows[0];\n\n      if (!firstLine) return;\n\n      const csvColumnList = [];\n      const fieldList = [];\n      const currentObject = this.CurrentObject;\n\n      if (currentObject)\n         fieldList.push(\n            ...currentObject.fields((f) => {\n               // available fields\n               if (\n                  this.settings.availableFieldIds?.length &&\n                  this.settings.availableFieldIds.indexOf(f.id) < 0\n               ) {\n                  return false;\n               }\n\n               // filter editable fields\n               const formComp = f.formComponent();\n\n               if (!formComp) return true;\n\n               const formConfig = formComp.common();\n\n               if (!formConfig) return true;\n\n               return formConfig.key != \"fieldreadonly\";\n            })\n         );\n\n      const csvImporter = this.csvImporter;\n\n      // check first line be header columns\n      if ($$(ids.headerOnFirstLine).getValue())\n         csvColumnList.push(\n            ...firstLine.map((colName, index) => {\n               return {\n                  id: index + 1, // webix .options list disallow value 0\n                  value: colName,\n                  key: csvImporter.getGuessDataType(_dataRows, index),\n               };\n            })\n         );\n      else\n         firstLine.forEach((e, i) => {\n            csvColumnList.push({\n               id: i + 1, // webix .options list disallow value 0\n               value: this.label(\"Column {0}\", [i + 1]),\n               key: csvImporter.getGuessDataType(_dataRows, i),\n            });\n         });\n\n      // Add unselect item\n      csvColumnList.unshift({\n         id: \"none\",\n         value: this.label(\"None\"),\n      });\n\n      // populate columns to UI\n      const uiColumns = [];\n      const selectedCsvCols = [];\n\n      fieldList.forEach((f) => {\n         // match up by data type\n         const matchCol = csvColumnList.filter(\n            (c) => c.key == f.key && selectedCsvCols.indexOf(c.id) < 0\n         )[0];\n\n         let selectVal = \"none\";\n\n         if (matchCol) {\n            selectVal = matchCol.id;\n\n            // cache\n            selectedCsvCols.push(selectVal);\n         }\n\n         let columnOptUI = {\n            view: \"richselect\",\n            gravity: 2,\n            options: csvColumnList,\n            fieldId: f.id,\n            abName: \"columnIndex\",\n            value: selectVal,\n            on: {\n               onChange: function () {\n                  self.toggleLinkFields(this);\n                  self.loadDataToGrid();\n               },\n            },\n         };\n\n         // Add date format options\n         if (f.key === \"date\") {\n            const dateSeparatorOptions = [\"/\", \"-\", \".\", \",\", \" \"];\n            const dayFormatOptions = [\n               { value: this.label(\"1 to 31\"), id: \"D\" },\n               { value: this.label(\"01 to 31\"), id: \"DD\" },\n            ];\n            const monthFormatOptions = [\n               { value: this.label(\"1 to 12\"), id: \"M\" },\n               { value: this.label(\"01 to 12\"), id: \"MM\" },\n            ];\n            const yearFormatOptions = [\n               { value: this.label(\"00 to 99\"), id: \"YY\" },\n               { value: this.label(\"2000 to 2099\"), id: \"YYYY\" },\n            ];\n            const dateOrderOptions = [\n               {\n                  value: this.label(\"D-M-Y\"),\n                  id: 1,\n               },\n               {\n                  value: this.label(\"M-D-Y\"),\n                  id: 2,\n               },\n               {\n                  value: this.label(\"Y-M-D\"),\n                  id: 3,\n               },\n               {\n                  value: this.label(\"Y-D-M\"),\n                  id: 4,\n               },\n            ];\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Separator\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"separator\",\n                     abName: \"columnDateFormat\",\n                     options: dateSeparatorOptions,\n                     value: \"/\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Day\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"day\",\n                     abName: \"columnDateFormat\",\n                     options: dayFormatOptions,\n                     value: \"D\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Month\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"month\",\n                     abName: \"columnDateFormat\",\n                     options: monthFormatOptions,\n                     value: \"M\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Year\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"year\",\n                     abName: \"columnDateFormat\",\n                     options: yearFormatOptions,\n                     value: \"YY\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Order\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"order\",\n                     abName: \"columnDateFormat\",\n                     options: dateOrderOptions,\n                     value: 1,\n                  },\n               ],\n            };\n         }\n\n         // Add connected field options\n         if (f.isConnection) {\n            let linkFieldOptions = [];\n\n            if (f.datasourceLink) {\n               linkFieldOptions = f.datasourceLink\n                  .fields((fld) => !fld.isConnection)\n                  .map((fld) => {\n                     return {\n                        id: fld.id,\n                        value: fld.label,\n                     };\n                  });\n            }\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: \"=\",\n                     labelWidth: 20,\n                     abName: \"columnLinkData\",\n                     hidden: true,\n                     options: linkFieldOptions,\n                     value: linkFieldOptions[0] ? linkFieldOptions[0].id : null,\n                  },\n               ],\n            };\n         }\n\n         uiColumns.push({\n            view: \"layout\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"template\",\n                  gravity: 1,\n                  borderless: true,\n                  css: { \"padding-top\": 10 },\n                  template: `<span class=\"fa fa-${f.icon}\"></span> ${f.label}`,\n               },\n               columnOptUI,\n            ],\n         });\n      });\n      abWebix.ui(uiColumns, $columnList);\n\n      this.loadDataToGrid();\n   }\n\n   toggleLinkFields($columnOption) {\n      if (!$columnOption) return;\n\n      const $optionPanel = $columnOption.getParentView();\n      const $linkFieldOption = $optionPanel.queryView(\n         { abName: \"columnLinkData\" },\n         \"all\"\n      )[0];\n\n      if (!$linkFieldOption) return;\n\n      if ($columnOption.getValue() === \"none\") $linkFieldOption.hide();\n      else $linkFieldOption.show();\n   }\n\n   overLimitAlert(data) {\n      const limit = 1000;\n\n      if (data.length > limit) {\n         // we only allow 1000 record imports\n         this.AB.Webix.alert({\n            title: this.label(\"Too many records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"Due to browser limitations we only allow imports of {0} records. Please upload a new CSV or deselect records to import.\",\n               [limit]\n            ),\n         });\n\n         return true;\n      }\n\n      return false;\n   }\n\n   loadDataToGrid() {\n      const ids = this.ids;\n      const $datatable = $$(ids.datatable);\n      const ab = this.AB;\n\n      if (!$datatable) return;\n\n      $datatable.clearAll();\n\n      // show loading cursor\n      $datatable.showProgress?.({ type: \"icon\" });\n\n      /** Prepare Columns */\n      const matchFields = this.getMatchFields();\n      const columns = [];\n\n      // add \"status\" column\n      columns.push({\n         id: \"_status\",\n         header: \"\",\n         template: this.statusTemplate,\n         width: 30,\n      });\n\n      // add \"checkbox\" column\n      columns.push({\n         id: \"_included\",\n         header: { content: \"masterCheckbox\" },\n         template: \"{common.checkbox()}\",\n         width: 30,\n      });\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      // populate columns\n      (matchFields || []).forEach((f) => {\n         let validationRules = f.field.settings.validationRules;\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (validationRules && typeof validationRules === \"string\")\n            validationRules = JSON.parse(validationRules);\n\n         if (validationRules?.length) {\n            const validationUI = [];\n\n            // there could be more than one so lets loop through and build the UI\n            validationRules.forEach((rule) => {\n               const Filter = ab.filterComplexNew(\n                  `${f.field.id}_${ab.Webix.uid()}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               validationUI.push(Filter.ui);\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.field.id,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n                  columnIndex: f.columnIndex,\n               });\n            });\n\n            // create a unique view id for popup\n            const popUpId = `${ids.rules}_${f.field.id}_${ab.Webix.uid()}`;\n\n            // store the popup ids so we can remove the later\n            rulePops.push(popUpId);\n            // add the popup to the UI but don't show it\n            ab.Webix.ui({\n               view: \"popup\",\n               css: \"ab-rules-popup\",\n               id: popUpId,\n               body: {\n                  rows: validationUI,\n               },\n            });\n         }\n\n         const editor = f.field?.key == \"number\" ? \"number\" : \"text\";\n\n         columns.push({\n            id: f.columnIndex,\n            header: f.field.label,\n            editor: editor,\n            template: (obj, common, value /*, col, ind */) =>\n               value.replace(/[<]/g, \"&lt;\"),\n            minWidth: 150,\n            fillspace: true,\n         });\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(App);\n            f.filter.fieldsLoad(this.CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $datatable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n               columnIndex: f.columnIndex,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $datatable.$view.complexValidations = complexValidations;\n\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n\n               $datatable.$view.complexValidations[key].forEach((filter) => {\n                  const rowValue = {};\n                  // use helper funtion to check if valid\n                  // map the column names to the index numbers of data\n                  // reformat data to display\n\n                  (matchFields || []).forEach((f) => {\n                     const record = data[f.columnIndex];\n\n                     if (\n                        f.field.key === \"date\" &&\n                        record.includes(\"Invalid date\")\n                     )\n                        isValid = false;\n\n                     rowValue[f.field.id] = record;\n                  });\n\n                  const ruleValid = filter.filters(rowValue);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     // this.AB.Webix.message({\n                     //    type: \"error\",\n                     //    text: invalidMessage\n                     // });\n                  }\n               });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $datatable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $datatable.config.rulePops = rulePops;\n         $datatable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($datatable.config.rulePops) {\n            $datatable.config.rulePops.forEach((popup) => {\n               const $popup = $$(popup);\n\n               if (!$popup) return;\n\n               $popup.destructor();\n            });\n         }\n\n         // remove any validation rules from the previous table\n         $datatable.define(\"rules\", {});\n         $datatable.refresh();\n      }\n\n      /** Prepare Data */\n      const parsedData = [];\n\n      (this._dataRows || []).forEach((row, index) => {\n         const rowValue = {\n            id: index + 1,\n         };\n\n         // reformat data to display\n         (matchFields || []).forEach((f) => {\n            const data = row[f.columnIndex - 1];\n\n            if (f.field.key === \"date\") {\n               // let dateFormat = moment(data, f.format).format(\n               //    \"YYYY-MM-DD\"\n               // );\n               // debugger;\n               let dateFormat = ab.rules.toDate(data, {\n                  format: f.format,\n               });\n               dateFormat = ab.rules.toDateFormat(dateFormat, {\n                  format: \"YYYY-MM-DD\",\n               });\n\n               if (dateFormat === \"Invalid date\")\n                  dateFormat = dateFormat + \" - \" + data;\n\n               rowValue[f.columnIndex] = dateFormat;\n            } else rowValue[f.columnIndex] = data; // array to object\n         });\n\n         // insert \"true\" value of checkbox\n         rowValue[\"_included\"] = true;\n\n         parsedData.push(rowValue);\n      });\n\n      // skip the first line\n      const isSkipFirstLine = $$(ids.headerOnFirstLine).getValue();\n\n      if (isSkipFirstLine && parsedData.length > 1) parsedData.shift();\n\n      const $importButton = $$(ids.importButton);\n\n      $importButton.setValue(this.labelImport(parsedData));\n      $datatable.refreshColumns(columns);\n      $datatable.parse(parsedData);\n\n      if (this.overLimitAlert(parsedData)) $importButton.disable();\n      else $importButton.enable();\n\n      // hide loading cursor\n      $datatable.hideProgress?.();\n   }\n\n   refreshRemainingTimeText(startUpdateTime, total, index) {\n      const ids = this.ids;\n\n      // Calculate remaining time\n      const spentTime = new Date() - startUpdateTime; // milliseconds that has passed since last completed record since start\n\n      const averageRenderTime = spentTime / index; // average milliseconds per single render at this point\n\n      const remainTime = averageRenderTime * (total - index);\n\n      let result = \"\";\n\n      // Convert milliseconds to a readable string\n      const days = (remainTime / 86400000).toFixed(0);\n      const hours = (remainTime / 3600000).toFixed(0);\n      const minutes = (remainTime / 60000).toFixed(0);\n      const seconds = (remainTime / 1000).toFixed(0);\n\n      if (seconds < 1) result = \"\";\n      else if (seconds < 60)\n         result = this.label(\"Approximately {0} second(s) remaining\", [\n            seconds,\n         ]);\n      // result = `Approximately ${seconds} second${\n      //    seconds > 1 ? \"s\" : \"\"\n      // }`;\n      else if (minutes == 1)\n         result = this.label(\"Approximately 1 minute {0} seconds remaining\", [\n            seconds - 60,\n         ]);\n      // result = `Approximately 1 minute ${seconds - 60} seconds`;\n      else if (minutes < 60)\n         result = this.label(\"Approximately {0} minutes remaining\", [minutes]);\n      else if (hours < 24)\n         result = this.label(\"Approximately {0} hour(s) remaining\", [hours]);\n      else result = this.label(\"Approximately {0} day(s) remaining\", [days]);\n\n      if (result) {\n         $$(ids.importButton)?.setValue(result);\n      } else {\n         const selected = $$(ids.datatable)?.find({ _included: true });\n         $$(ids.importButton)?.setValue(this.labelImport(selected));\n      }\n   }\n\n   /**\n    * @method getMatchFields\n    *\n    * @return {Object} - [\n    *                      {\n    *                         columnIndex: {number},\n    *                         field: {ABField},\n    *                         searchField: {ABField} [optional]\n    *                      },\n    *                      ...\n    *                    ]\n    */\n   getMatchFields() {\n      const result = [];\n      const ids = this.ids;\n\n      // get richselect components\n      const $selectorViews = $$(ids.columnList)\n         .queryView({ abName: \"columnIndex\" }, \"all\")\n         .filter((selector) => selector.getValue() != \"none\");\n\n      ($selectorViews || []).forEach(($selector) => {\n         const currentObject = this.CurrentObject;\n\n         if (!currentObject) return;\n\n         // webix .options list disallow value 0\n         const field = currentObject.fieldByID($selector.config.fieldId);\n\n         if (!field) return;\n\n         const colIndex = $selector.getValue();\n         const fieldData = {\n            columnIndex: colIndex,\n            field: field,\n         };\n\n         if (field.key === \"date\") {\n            const $optionPanel = $selector.getParentView();\n            const $dateFormatSelectors = $optionPanel.queryView(\n               { abName: \"columnDateFormat\" },\n               \"all\"\n            );\n\n            // define the column to compare data to search .id\n            if ($dateFormatSelectors) {\n               $dateFormatSelectors.forEach((selector) => {\n                  fieldData[selector.config.name] = selector.getValue();\n               });\n\n               // convert all dates into mysql date format YYYY-DD-MM\n               let format;\n\n               switch (fieldData.order) {\n                  case \"1\":\n                     format =\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"2\":\n                     format =\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"3\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day;\n                     break;\n                  case \"4\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month;\n               }\n\n               fieldData.format = format;\n            }\n         }\n\n         if (field.isConnection) {\n            const $optionPanel = $selector.getParentView();\n            const $linkDataSelector = $optionPanel.queryView(\n               { abName: \"columnLinkData\" },\n               \"all\"\n            )[0];\n\n            // define the column to compare data to search .id\n            if ($linkDataSelector) {\n               const searchField = field.datasourceLink.fieldByID(\n                  $linkDataSelector.getValue()\n               );\n\n               fieldData.searchField = searchField;\n            }\n         }\n\n         result.push(fieldData);\n      });\n\n      return result;\n   }\n\n   labelImport(selected) {\n      let length = selected;\n\n      if (Array.isArray(selected)) length = selected.length;\n\n      return this.label(\"Import {0} Records\", [length]);\n   }\n\n   /**\n    * @method import\n    *\n    * @return {Promise}\n    */\n   async import() {\n      // if (dv == null) return Promise.resolve();\n\n      // // get ABObject\n      // let obj = dv.datasource;\n\n      // Make sure we are connected to an Object\n      const currentObject = this.CurrentObject;\n\n      if (!currentObject) return;\n\n      // get ABModel\n      // let model = dv.model;\n      // if (model == null) return Promise.resolve();\n\n      const ids = this.ids;\n      const $importButton = $$(ids.importButton);\n\n      $importButton.disable();\n\n      // Show loading cursor\n      const $form = $$(ids.form);\n      const $progressBar = $$(ids.progressBar);\n\n      $form.showProgress({ type: \"icon\" });\n      $progressBar.showProgress({\n         type: \"top\",\n         position: 0.0001,\n      });\n\n      // get richselect components\n      const matchFields = this.getMatchFields();\n\n      // Get object's model\n      const objModel = currentObject.model();\n      const $datatable = $$(ids.datatable);\n      const selectedRows = $datatable.find({ _included: true });\n\n      let _currProgress = 0;\n\n      const increaseProgressing = () => {\n         _currProgress += 1;\n         $progressBar.showProgress({\n            type: \"bottom\",\n            position: _currProgress / selectedRows.length,\n         });\n      };\n      const itemFailed = (itemId, errMessage) => {\n         if ($datatable) {\n            // set \"fail\" status\n            $datatable.addRowCss(itemId, \"row-fail\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"fail\",\n               _errorMsg: errMessage,\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n\n         console.error(errMessage);\n      };\n      const abWebix = this.AB.Webix;\n      const itemInvalid = (itemId, errors = []) => {\n         if ($datatable) {\n            // combine all error messages to display in tooltip\n            const errorMsg = [];\n            // mark which column are invalid\n            errors.forEach((err) => {\n               if (!err?.name) return;\n\n               const fieldInfo = matchFields.filter(\n                  (f) => f.field && f.field.columnName == err.name\n               )[0];\n\n               errorMsg.push(err.name + \": \" + err.message);\n               // we also need to define an error message\n               // abWebix.message({\n               //    type: \"error\",\n               //    text: err.name + \": \" + err.message\n               // });\n            });\n\n            // set \"fail\" status\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"invalid\",\n               _errorMsg: errorMsg.join(\"</br>\"),\n            });\n            $datatable.unblockEvent();\n            $datatable.addRowCss(itemId, \"webix_invalid\");\n         }\n         // increaseProgressing();\n      };\n      const itemPass = (itemId) => {\n         if ($datatable) {\n            // set \"done\" status\n            $datatable.removeRowCss(itemId, \"row-fail\");\n            $datatable.addRowCss(itemId, \"row-pass\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"done\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n      };\n      const itemValid = (itemId) => {\n         if ($datatable) {\n            // mark all columns valid (just in case they were invalid before)\n            // matchFields.forEach((f) => {\n            //    $datatable.removeCellCss(\n            //       itemId,\n            //       f.columnIndex,\n            //       \"webix_invalid_cell\"\n            //    );\n            // });\n            // highlight the row\n            $datatable.removeRowCss(itemId, \"webix_invalid\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n            // $datatable.addRowCss(itemId, \"row-pass\");\n         }\n      };\n      const $statusMessage = $$(ids.statusMessage);\n      const uiCleanUp = () => {\n         // To Do anyUI updates\n         // console.log(\"ui clean up now\");\n         $importButton.enable();\n\n         // Hide loading cursor\n         $form.hideProgress();\n         $progressBar.hideProgress();\n\n         $statusMessage.setValue(\"\");\n         $statusMessage.hide();\n\n         const selected = $datatable.find({ _included: true });\n\n         $importButton.setValue(this.labelImport(selected));\n         this.emit(\"done\");\n      };\n\n      const validRows = [];\n\n      let allValid = true;\n\n      // Pre Check Validations of whole CSV import\n      // update row to green if valid\n      // update row to red if !valid\n      (selectedRows || []).forEach((data, index) => {\n         const newRowData = this.getParentValues();\n\n         matchFields.forEach((f) => {\n            if (!f.field?.key) return;\n\n            switch (f.field.key) {\n               // case \"connectObject\":\n               //    // skip\n               //    break;\n               case \"number\":\n                  if (typeof data[f.columnIndex] !== \"number\") {\n                     newRowData[f.field.columnName] = (\n                        data[f.columnIndex] || \"\"\n                     ).replace(/[^-0-9.]/gi, \"\");\n\n                     break;\n                  }\n\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n\n               default:\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n            }\n         });\n\n         let isValid = false;\n         let errorMsg = \"\";\n\n         // first check legacy and server side validation\n         const validator = currentObject.isValidData(newRowData);\n\n         isValid = validator.pass();\n         errorMsg = validator.errors;\n\n         if (isValid)\n            // now check complex field validation rules\n            isValid = $datatable.validate(data.id);\n         else {\n            allValid = false;\n\n            itemInvalid(data.id, errorMsg);\n         }\n\n         if (isValid) {\n            itemValid(data.id);\n            validRows.push({ id: data.id, data: newRowData });\n         } else allValid = false;\n\n         // $datatable.unblockEvent();\n      });\n\n      if (!allValid) {\n         // To Do anyUI updates\n         // $importButton.enable();\n         //\n         // // Hide loading cursor\n         // $form.hideProgress();\n         // $progressBar.hideProgress();\n         // $statusMessage.setValue(\"\");\n         // $statusMessage.hide();\n         //\n         // // _logic.hide();\n         //\n         // if (_logic.callbacks && _logic.callbacks.onDone)\n         //    _logic.callbacks.onDone();\n         uiCleanUp();\n\n         abWebix.alert({\n            title: this.label(\"Invalid Data\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n            ),\n         });\n\n         return;\n      }\n\n      // if pass, then continue to process each row\n      // ?? : can we process in Parallel?\n      // ?? : implement hash Lookups for connected Fields\n      const hashLookups = {};\n      // {obj}  /*  { connectField.id : { 'searchWord' : \"uuid\"}}\n      // use this hash to reduce the # of lookups needed to fill in our\n      // connected entries\n\n      const connectedFields = matchFields.filter(\n         (f) => f && f.field?.isConnection && f.searchField\n      );\n\n      const throttledSize = 10;\n      let startUpdateTime;\n      let numDone = 0;\n\n      try {\n         // forEach connectedFields in csv\n         const allLookups = [];\n\n         (connectedFields || []).forEach((f) => {\n            const connectField = f.field;\n            // const searchWord = newRowData[f.columnIndex];\n            const connectObject = connectField.datasourceLink;\n\n            if (!connectObject) return;\n\n            const connectModel = connectObject.model();\n\n            if (!connectModel) return;\n\n            const linkIdKey = connectField.indexField\n               ? connectField.indexField.columnName\n               : connectField.object.PK();\n\n            // prepare default hash entry:\n            hashLookups[connectField.id] = {};\n\n            // load all values of connectedField entries\n            const gethashLookup = async () => {\n               try {\n                  const list = await connectModel.findAll({\n                     where: {}, // !!!\n                     populate: false,\n                  });\n                  const data = list.data || list;\n\n                  (data || []).forEach((row) => {\n                     // store in hash[field.id] = { 'searchKey' : \"uuid\" }\n\n                     hashLookups[connectField.id][\n                        row[f.searchField.columnName]\n                     ] = row[linkIdKey];\n                  });\n               } catch (err) {\n                  console.error(err);\n               }\n            };\n\n            allLookups.push(gethashLookup());\n         });\n\n         await Promise.all(allLookups);\n\n         // forEach validRow\n         validRows.forEach((data) => {\n            const newRowData = data.data;\n\n            // update the datagrid row to in-progress\n            $datatable.blockEvent();\n            $datatable.updateItem(data.id, {\n               _status: \"in-progress\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n\n            // forEach ConnectedField\n            (connectedFields || []).forEach((f) => {\n               // find newRowData[field.columnName] = { field.PK : hash[field.id][searchWord] }\n               const connectField = f.field;\n               const linkIdKey = connectField.indexField\n                  ? connectField.indexField.columnName\n                  : connectField.object.PK();\n               const uuid =\n                  hashLookups[connectField.id][\n                     newRowData[connectField.columnName]\n                  ];\n\n               if (!uuid) {\n                  itemInvalid(data.id, [{ name: connectField.columnName }]);\n                  allValid = false;\n               }\n\n               newRowData[connectField.columnName] = {};\n               newRowData[connectField.columnName][linkIdKey] = uuid;\n            });\n         });\n\n         if (!allValid) {\n            abWebix.alert({\n               title: this.label(\"Invalid Data\"),\n               ok: this.label(\"Ok\"),\n               text: this.label(\n                  \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n               ),\n            });\n            uiCleanUp();\n\n            return;\n         }\n\n         // NOTE: Parallel exectuion of all these:\n         const allSaves = [];\n         const createRecord = (objModel, newRowsData, element, total) =>\n            new Promise((resolve, reject) => {\n               element.doRecordRulesPre(newRowsData);\n\n               const processResult = async () => {\n                  try {\n                     const result = await objModel.batchCreate({\n                        batch: newRowsData,\n                     });\n                     const resultErrors = result.errors;\n\n                     // Show errors of each row\n                     Object.keys(resultErrors).forEach((rowIndex) => {\n                        const error = resultErrors[rowIndex];\n\n                        if (error) {\n                           itemFailed(\n                              rowIndex,\n                              error.message || error.sqlMessage || error\n                           );\n                        }\n                     });\n\n                     const resultData = result.data;\n                     const penddingRecordRules = [];\n\n                     Object.keys(resultData).forEach((rowIndex) => {\n                        penddingRecordRules.push(\n                           new Promise((resolve, reject) => {\n                              // Process Record Rule\n                              const processRowData = async () => {\n                                 try {\n                                    await element.doRecordRules(\n                                       resultData[rowIndex]\n                                    );\n\n                                    itemPass(rowIndex);\n                                    resolve();\n                                 } catch (err) {\n                                    itemFailed(rowIndex, err);\n                                    reject(\"that didn't work\");\n                                 }\n                              };\n\n                              processRowData();\n                           })\n                        );\n                     });\n\n                     const waitPenddingRecordRules = async () => {\n                        try {\n                           await Promise.all(penddingRecordRules);\n\n                           newRowsData.forEach((row) => {\n                              // itemPass(row.id);\n                              numDone++;\n                              if (numDone % throttledSize == 0) {\n                                 this.refreshRemainingTimeText(\n                                    startUpdateTime,\n                                    validRows.length,\n                                    numDone\n                                 );\n                              }\n                           });\n\n                           if (numDone === total) {\n                              uiCleanUp();\n                              $importButton.disable();\n                           }\n\n                           resolve();\n                        } catch (err) {\n                           // newRowsData.forEach((row) => {\n                           //    itemFailed(row.id, err);\n                           // });\n                           // throw err;\n                           reject(err);\n                        }\n                     };\n\n                     await waitPenddingRecordRules();\n                  } catch (err) {\n                     console.error(err);\n                     reject(err);\n                  }\n               };\n\n               processResult();\n            });\n\n         validRows.forEach((data) => {\n            allSaves.push({ id: data.id, data: data.data });\n         });\n\n         // we are going to store these promises in an array of\n         // arrays with 50 in each sub array\n         const throttledSaves = [];\n         const total = allSaves.length;\n\n         let index = 0;\n\n         while (allSaves.length) {\n            throttledSaves[index] = allSaves.splice(0, throttledSize);\n\n            index++;\n         }\n\n         // execute the array of array of 100 promises one at at time\n         const performThrottledSaves = (\n            currentRecords,\n            remainingRecords,\n            importer,\n            total\n         ) =>\n            new Promise((resolve, reject) => {\n               // execute the next 100\n               // const requests = currentRecords.map((data) => {\n               //    return createRecord(\n               //       objModel,\n               //       data.record,\n               //       data.data,\n               //       importer\n               //    );\n               // });\n\n               const processRequest = async () => {\n                  try {\n                     await createRecord(\n                        objModel,\n                        currentRecords,\n                        importer,\n                        total\n                     );\n\n                     // when done get the next 10\n                     const nextRecords = remainingRecords.shift();\n\n                     // if there are any remaining in the group call performThrottledSaves\n                     if (nextRecords?.length) {\n                        await performThrottledSaves(\n                           nextRecords,\n                           remainingRecords,\n                           importer,\n                           total\n                        );\n                     } else {\n                        // uiCleanUp();\n                        resolve();\n                     }\n                  } catch (err) {\n                     // Handle errors here\n                     reject(err);\n                  }\n               };\n\n               processRequest();\n            });\n\n         // now we are going to processes these new containers one at a time\n         // $datatable.blockEvent();\n         // this is when the real work starts so lets begin our countdown timer now\n         startUpdateTime = new Date();\n         // get the first group of Promises out of the collection\n         const next = throttledSaves.shift();\n\n         // execute our Promise iterator\n         await performThrottledSaves(next, throttledSaves, this.view, total);\n      } catch (err) {\n         // resolve Error UI\n         abWebix.alert({\n            title: this.label(\"Error Creating Records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\"One or more records failed upon creation.\"),\n         });\n         // $datatable.unblockEvent();\n         uiCleanUp();\n         console.error(err);\n      }\n   }\n\n   // Display linked data\n   uiLinkedData() {\n      const dcLink = this.datacollection?.datacollectionLink;\n      const linkedData = dcLink?.getCursor();\n      if (!linkedData) return;\n\n      return {\n         view: \"window\",\n         modal: true,\n         resize: false,\n         head: {\n            view: \"toolbar\",\n            cols: [\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hideLinkedData();\n                  },\n               },\n            ],\n         },\n         body: {\n            view: \"property\",\n            id: \"sets\",\n            editable: false,\n            width: 400,\n            height: 200,\n            elements: [\n               { label: this.label(\"Linked Data\"), type: \"label\" },\n               {\n                  label: \"ID\",\n                  type: \"text\",\n                  value: linkedData.uuid ?? linkedData.id,\n               },\n               {\n                  label: \"Label\",\n                  type: \"text\",\n                  value: dcLink.datasource.displayData(linkedData),\n               },\n            ],\n         },\n      };\n   }\n\n   showLinkedData() {\n      const ui = this.uiLinkedData();\n      this._info_popup = this.AB.Webix.ui(ui);\n      this._info_popup.show($$(this.ids.linkedDataButton).$view, {\n         pos: \"top\",\n      });\n   }\n\n   hideLinkedData() {\n      this._info_popup?.hide();\n   }\n\n   getParentValues() {\n      const result = {};\n\n      // get ABDatacollection\n      const dc = this.datacollection;\n      const currentObject = this.CurrentObject;\n\n      // Set parent's data collection cursor\n      const dcLink = dc?.datacollectionLink;\n      const linkConnectFields = [];\n\n      let objectLink;\n      let linkValues;\n\n      if (dcLink?.getCursor()) {\n         objectLink = dcLink.datasource;\n\n         linkConnectFields.push(\n            ...currentObject.fields(\n               (f) => f.isConnection && f.settings.linkObject === objectLink.id\n            )\n         );\n\n         linkValues = dcLink.getCursor();\n      }\n\n      // Set parent's data collection cursor\n      if (objectLink && linkConnectFields.length && linkValues) {\n         linkConnectFields.forEach((f) => {\n            const linkColName = f.indexField\n               ? f.indexField.columnName\n               : objectLink.PK();\n\n            result[f.columnName] = result[f.columnName] ?? {};\n            result[f.columnName][linkColName] =\n               linkValues[linkColName] ?? linkValues.id;\n         });\n      }\n\n      return result;\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartAreaComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartArea_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.areaType,\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         series: [\n            {\n               alpha: 0.7,\n               value: \"#value#\",\n               color: \"#ee4339\",\n            },\n            {\n               alpha: 0.4,\n               value: \"#value2#\",\n               color: \"#a7ee70\",\n            },\n         ],\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartBarComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartBar_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.barType,\n         preset: settings.barPreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend:\n            settings.barType === \"bar\" || !settings.barType\n               ? settings.isLegend\n                  ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n                  : \"\"\n               : settings.isLegend\n               ? {\n                    template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                    values: [], // TODO : bug in webix 5.1.7\n                 }\n               : null,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewChartComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChart_${baseView.id}`, ids);\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $component = $$(this.ids.component);\n      const abWebix = this.AB.Webix;\n\n      if ($component) abWebix.extend($component, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const dc = this.datacollection;\n\n      if (dc) {\n         const eventNames = [\n            \"changeCursor\",\n            \"cursorStale\",\n            \"create\",\n            \"update\",\n            \"delete\",\n            \"initializedData\",\n         ];\n\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            // QUESTION: is this a problem if the check !(key in (...)) finds\n            // an event that some OTHER widget has added and not this one?\n            if (\n               dc.datacollectionLink &&\n               !(key in (dc.datacollectionLink._events ?? []))\n            )\n               baseView.eventAdd({\n                  emitter: dc.datacollectionLink,\n                  eventName: key,\n                  listener: () => {\n                     baseView.refreshData();\n                  },\n               });\n         });\n\n         eventNames.forEach((evtName) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: evtName,\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n         });\n      }\n\n      baseView.refreshData();\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewChartContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewChartContainer_${baseView.id}`,\n         Object.assign(\n            {\n               chartContainer: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiChartComponent) {\n      const _ui = super.ui([\n         Object.assign({ id: this.ids.chartContainer }, uiChartComponent ?? {}),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n      // if (!this._isShow) {\n\n      // Mark this widget is showing\n      const baseView = this.view;\n\n      baseView._isShow = true;\n\n      this.refreshData(baseView.parent.getDCChart());\n      // }\n   }\n\n   refreshData(dcChart) {\n      const $chartContainer = $$(this.ids.chartContainer);\n      const $chartComponent = $$(this.ids.component);\n\n      if ($chartContainer?.data) $chartContainer.data.sync(dcChart);\n\n      setTimeout(() => {\n         $chartComponent?.adjust();\n         $chartContainer?.adjust();\n      }, 160);\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartLineComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartLine_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.lineType,\n         preset: settings.linePreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue,\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartPieComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartPie_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.pieType,\n         value: \"#value#\",\n         color: \"#color#\",\n         legend: settings.isLegend\n            ? {\n                 width: this.view.parent.settings.labelWidth,\n                 template: `<div style='font-size: ${settings.labelFontSize}px;'>#label#</div>`,\n              }\n            : null,\n         pieInnerText: `<div style='font-size: ${settings.innerFontSize}px;'>#value#</div>`,\n         shadow: 1,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCommentComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewComment_${baseView.id}`,\n         Object.assign(\n            {\n               comment: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const _ui = super.ui([\n         {\n            id: this.ids.comment,\n            view: \"comments\",\n            users: baseView.getUserData(),\n            currentUser: baseView.getCurrentUserId(),\n            height: this.settings.height,\n            data: this.getCommentData(),\n            on: {\n               onBeforeAdd: (id, obj, index) => {\n                  this.addComment(obj.text, new Date());\n               },\n               // NOTE: no update event of comment widget !!\n               // Updating event handles in .init function\n               // https://docs.webix.com/api__ui.comments_onbeforeeditstart_event.html#comment-4509366150\n\n               // onAfterEditStart: function (rowId) {\n               //    let item = this.getItem(rowId);\n\n               //    _logic.updateComment(rowId, item);\n               // },\n               onAfterDelete: (rowId) => {\n                  this.deleteComment(rowId);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      baseView.__dvEvents = baseView.__dvEvents || {};\n\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if ($comment) {\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) {\n            // Updating comment event\n            if (!baseView.__dvEvents.onStoreUpdated)\n               baseView.__dvEvents.onStoreUpdated =\n                  $commentList.data.attachEvent(\n                     \"onStoreUpdated\",\n                     (rowId, data, operate) => {\n                        if (operate === \"update\") {\n                           this.updateComment(rowId, (data || {}).text);\n                        }\n                     }\n                  );\n\n            // Implement progress bar\n            webix.extend($commentList, webix.ProgressBar);\n         }\n      }\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // bind dc to component\n      // dv.bind($$(ids.comment));\n\n      if (!baseView.__dvEvents.create)\n         baseView.__dvEvents.create = dv.on(\"create\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.update)\n         baseView.__dvEvents.update = dv.on(\"update\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.delete)\n         baseView.__dvEvents.delete = dv.on(\"delete\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.loadData)\n         baseView.__dvEvents.loadData = dv.on(\"loadData\", () =>\n            this.refreshComment()\n         );\n\n      $comment.refresh();\n   }\n\n   getCommentData() {\n      const baseView = this.view;\n      const dv = this.datacollection;\n\n      if (!dv) return null;\n\n      const userCol = baseView.getUserField();\n      const commentCol = baseView.getCommentField();\n      const dateCol = baseView.getDateField();\n\n      if (!userCol || !commentCol) return null;\n\n      const userColName = userCol.columnName;\n      const commentColName = commentCol.columnName;\n      const dateColName = dateCol ? dateCol.columnName : null;\n      const dataObject = dv.getData();\n      const dataList = [];\n\n      dataObject.forEach((item, index) => {\n         if (item[commentColName]) {\n            const user = baseView.getUserData().find((user) => {\n               return user.value === item[userColName];\n            });\n            const data = {\n               id: item.id,\n               user_id: user ? user.id : 0,\n               date: item[dateColName] ? new Date(item[dateColName]) : null,\n               default_date: new Date(item[\"created_at\"]),\n               text: item[commentColName],\n            };\n\n            dataList.push(data);\n         }\n      });\n\n      dataList.sort(function (a, b) {\n         if (dateColName)\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n         else\n            return (\n               new Date(a.default_date).getTime() -\n               new Date(b.default_date).getTime()\n            );\n      });\n\n      return dataList;\n   }\n\n   refreshComment() {\n      const baseView = this.view;\n\n      if (baseView.__refreshTimeout) clearTimeout(baseView.__refreshTimeout);\n\n      this.busy();\n\n      const ids = this.ids;\n\n      baseView.__refreshTimeout = setTimeout(() => {\n         const $comment = $$(ids.comment);\n\n         if (!$comment) return;\n\n         // clear comments\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) $commentList.clearAll();\n\n         // populate comments\n         const commentData = this.getCommentData();\n\n         if (commentData) {\n            $comment.parse(commentData);\n         }\n\n         // scroll to the last item\n         if ($commentList) $commentList.scrollTo(0, Number.MAX_SAFE_INTEGER);\n\n         delete baseView.__refreshTimeout;\n\n         this.ready();\n      }, 90);\n   }\n\n   addComment(commentText, dateTime) {\n      this.saveData(commentText, dateTime);\n   }\n\n   async updateComment(rowId, commentText) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return; // already notified\n\n      const commentField = baseView.getCommentField();\n\n      if (!commentField) return; // already notified\n\n      const values = {};\n\n      values[commentField.columnName] = commentText ?? \"\";\n\n      return await model.update(rowId, values);\n   }\n\n   async deleteComment(rowId) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return;\n\n      return await model.delete(rowId);\n   }\n\n   busy() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.disable();\n\n      if ($commentList.showProgress)\n         $commentList.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.enable();\n\n      if ($commentList.hideProgress) $commentList.hideProgress();\n   }\n\n   async saveData(commentText, dateTime) {\n      if (!commentText) return;\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const baseView = this.view;\n      const model = baseView.model();\n      const ab = this.AB;\n\n      if (!model) {\n         ab.notify.builder(\n            {},\n            {\n               message:\n                  \"ABViewComment.saveData(): could not pull a model to work with.\",\n               viewName: baseView.label,\n            }\n         );\n\n         return;\n      }\n\n      const comment = {};\n      const userField = baseView.getUserField();\n\n      if (userField) comment[userField.columnName] = ab.Account.username();\n\n      const commentField = baseView.getCommentField();\n\n      if (commentField) comment[commentField.columnName] = commentText;\n\n      const dateField = baseView.getDateField();\n\n      if (dateField) comment[dateField.columnName] = dateTime;\n\n      // add parent cursor to default\n      const dvLink = dv.datacollectionLink;\n\n      if (dvLink?.getCursor()) {\n         const objectLink = dvLink.datasource;\n         const fieldLink = dv.fieldLink;\n\n         if (objectLink && fieldLink) {\n            comment[fieldLink.columnName] = {};\n            comment[fieldLink.columnName][objectLink.PK()] =\n               dvLink.getCursor().id;\n         }\n      }\n\n      return await model.create(comment);\n   }\n};\n","/**\n * ABViewComponent\n * A common UI component class for our UI widgets.\n */\nimport ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewComponent extends ClassUI {\n   constructor(baseView, idBase, ids) {\n      super(idBase || `ABView_${baseView.id}`, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n      this.datacollection = baseView.datacollections || baseView.datacollection;\n\n      this.__events = [];\n      // {array}\n      // A collection of any listeners we are managing.\n      // {\n      //   emitter:   {EventEmitter} the object we are listening on\n      //   eventName: {string} the event key we are listening for\n      //   listener:  {fn} the function to call on\n      // }\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.CurrentDatacollectionID = null;\n      // {string}\n      // the ABDataCollection.id of the DC we are working with\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n   }\n\n   ui(uiComponents = []) {\n      // an ABView is a collection of rows:\n      const _ui = {\n         id: this.ids.component,\n         view: \"layout\",\n         type: \"space\",\n         rows: uiComponents,\n      };\n\n      // if this form is empty, then force a minimal row height\n      // so the component isn't completely hidden on the screen.\n      // (important in the editor so we don't loose the ability to edit the\n      // component)\n      if (!_ui.rows.length) _ui.height = 30;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      this.CurrentDatacollectionID = datacollection?.id;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object?.id;\n   }\n\n   /**\n    * @method eventAdd()\n    * Create a new listener on an object. Note, this will prevent multiple\n    * listeners being applied to the same Object.\n    * @param {object} evt\n    *        The definition of the event we are adding:\n    *        {\n    *           emitter:   {EventEmitter} the object we are listening on\n    *           eventName: {string} the event key we are listening for\n    *           listener:   {fn} the function to call on\n    *        }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      // make sure we haven't done this before:\n      const __events = this.__events;\n      const exists = __events.filter(\n         (e) => e.emitter === evt.emitter && e.eventName === evt.eventName\n         // && e.listener === evt.listener\n      );\n\n      if (!exists.length) {\n         // add to array\n         __events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventsClear()\n    * Remove all the attached event listeners and reset our tracking.\n    */\n   eventsClear() {\n      this.__events.forEach((evt) => {\n         evt.emitter.removeListener(evt.eventName, evt.listener);\n      });\n\n      this.__events = [];\n   }\n\n   /**\n    * @method waitInitializingDCEvery()\n    * Wait until the DC is initialized, checking every millisecond as specified by the parameter\n    * @param {number} milliSeconds\n    * The amount of milliseconds to recheck DC status.\n    * @param {object} dc\n    * the AB DC instance.\n    */\n\n   async waitInitializingDCEvery(milliSeconds, dc) {\n      if (!this.__isShowing || dc == null) return;\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      // load data when a widget is showing\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial) await dc.loadData();\n\n      return await new Promise((resolve) => {\n         if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n            resolve();\n\n            return;\n         }\n\n         const interval = setInterval(() => {\n            if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n               clearInterval(interval);\n\n               resolve();\n            }\n         }, milliSeconds);\n      });\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      // check if tab has a hint\n      if (this?.view?.settings?.hintID) {\n         // fetch the steps for the hint\n         let hint = this.AB.hintID(this.view.settings.hintID);\n         if (hint.settings.active) {\n            hint.createHintUI();\n         }\n      }\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (Array.isArray(dc)) {\n         dc.forEach((item) => {\n            if (item.dataStatus === item.dataStatusFlag.notInitial)\n               // load data when a widget is showing\n               item.loadData();\n         });\n      } else {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            dc.loadData();\n      }\n   }\n}\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainerComponent extends (\n   ABViewContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewConditionalContainer_${baseView.id}`,\n         Object.assign(\n            {\n               batch: \"\",\n            },\n            ids\n         )\n      );\n\n      this._ifComponent = null;\n      this._elseComponent = null;\n\n      // Set filter value\n      this.__filterComponent = baseView.AB.filterComplexNew(\n         `${baseView.id}_filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.populateFilterComponent();\n   }\n\n   ui() {\n      const _uiConditionalContainer = {\n         id: this.ids.batch,\n         view: \"multiview\",\n         cells: [\n            {\n               batch: \"wait\",\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"label\",\n                     label: this.label(\"Please wait...\"),\n                  },\n               ],\n            },\n         ],\n      };\n      const _ui = super.ui([_uiConditionalContainer]);\n\n      _uiConditionalContainer.cells.push(\n         Object.assign({ batch: \"if\" }, this.ifComponent.ui()),\n         Object.assign({ batch: \"else\" }, this.elseComponent.ui())\n      );\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      await Promise.all([\n         this.ifComponent.init(AB, accessLevel),\n         this.elseComponent.init(AB, accessLevel),\n      ]);\n\n      this.populateFilterComponent();\n\n      const dc = this.datacollection;\n\n      if (dc) {\n         const baseView = this.view;\n\n         // listen DC events\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"loadData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"initializedData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: key,\n               listener: (...p) => this.displayView(...p),\n            });\n         });\n      }\n\n      this.displayView();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.populateFilterComponent();\n      this.displayView();\n   }\n\n   get ifComponent() {\n      return (this._ifComponent =\n         this._ifComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"If\")\n            .component());\n   }\n\n   get elseComponent() {\n      return (this._elseComponent =\n         this._elseComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"Else\")\n            .component());\n   }\n\n   displayView(currData) {\n      const dc = this.datacollection;\n      const ids = this.ids;\n      const $batch = $$(ids.batch);\n\n      if (dc) {\n         if (!currData) currData = dc.getCursor();\n\n         // show 'waiting' panel\n         if (\n            !currData &&\n            (dc.dataStatus === dc.dataStatusFlag.notInitial ||\n               dc.dataStatus === dc.dataStatusFlag.initializing)\n         ) {\n            $batch?.showBatch(\"wait\");\n\n            return;\n         }\n      }\n\n      const isValid = this.__filterComponent.isValid(currData);\n\n      if (isValid) {\n         // if (isValid && currData) {\n         $batch?.showBatch(\"if\");\n         this.ifComponent?.onShow?.();\n      } else {\n         $batch?.showBatch(\"else\");\n         this.elseComponent?.onShow?.();\n      }\n   }\n\n   populateFilterComponent() {\n      const dc = this.datacollection;\n      const __filterComponent = this.__filterComponent;\n\n      if (dc?.datasource) __filterComponent.fieldsLoad(dc.datasource.fields());\n      else __filterComponent.fieldsLoad([]);\n\n      __filterComponent.setValue(\n         this.settings.filterConditions ??\n            this.view.constructor.defaultValues().filterConditions\n      );\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewContainer_${baseView.id}`, ids);\n\n      this.idBase = idBase;\n      this.options = null;\n\n      this.viewComponents = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child views that we manage\n\n      this.viewComponentIDs = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child.ui().ids of the views we manage\n\n      this._handlerChangePage = (pageId) => {\n         baseView.changePage(pageId);\n      };\n   }\n\n   ui(uiComponents) {\n      // Generate rows & cols of views to .layout\n      const views = this.view.viewsSortByPosition();\n      const rowViews = this.getElements(views);\n      const _ui = super.ui(uiComponents || rowViews);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB, accessLevel = 0, options = {}) {\n      await super.init(AB);\n\n      this.options = options;\n\n      const allInits = [];\n\n      // // register our callbacks:\n      // if (options) {\n      //    for (var c in _logic.callbacks) {\n      //       _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //    }\n      // }\n\n      // see access by CSS class\n      $$(this.ids.component)?.define(\"css\", `accessLevel-${accessLevel}`);\n\n      const viewComponents = this.viewComponents;\n\n      // attach all the .UI views:\n      for (const key in viewComponents) {\n         // skip when the view is removed.\n         if (\n            !viewComponents[key] ??\n            !this.view.views((v) => v.id === key).length\n         )\n            continue;\n\n         // Initial component along with options in case there are callbacks we need to listen for\n         if (accessLevel) {\n            allInits.push(viewComponents[key].init(AB, accessLevel, options));\n\n            continue;\n         }\n\n         $$(this.viewComponentIDs[key])?.hide();\n      }\n\n      await Promise.all(allInits);\n   }\n\n   getElements(views) {\n      const rows = [];\n      const componentMap = {};\n\n      let curRowIndex;\n      let curColIndex;\n\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n\n      views.forEach((v) => {\n         // let component = v.component(/* App, idPrefix */);\n         // NOTE: PONG - Just temporary to be compatible old & new versions\n         let component;\n\n         try {\n            component = v.component(this.idBase);\n            // make sure any existing handlers for changePage are removed.\n            v.removeAllListeners(\"changePage\");\n         } catch (err) {\n            component = v.component(this.idBase);\n\n            const ui = component.ui;\n\n            component.ui = (() => ui).bind(component);\n         }\n\n         this.viewComponents[v.id] = component;\n\n         ////\n         //// TODO: figure out the embedded Callbacks => emit()\n         ////\n         // if key == \"form\" or \"button\" register the callbacks to the parent\n         // NOTE this will only work on the last form of a page!\n         // if (v.key == \"form\" && v._logic.callbacks) {\n         //    _logic.callbacks = v._logic.callbacks;\n         // }\n\n         // Create a new row\n         if (v.position.y == null || v.position.y !== curRowIndex) {\n            curRowIndex = v.position.y || rows.length;\n            curColIndex = 0;\n\n            const rowNew = {\n               cols: [],\n            };\n\n            // Create columns following setting value\n            const colNumber = settings.columns || defaultSettings.columns;\n\n            for (let i = 0; i < colNumber; i++)\n               rowNew.cols.push({\n                  gravity: settings.gravity?.[i]\n                     ? parseInt(settings.gravity[i])\n                     : defaultSettings.gravity,\n               });\n\n            rows.push(rowNew);\n         }\n\n         // Get the last row\n         const rowIndx = rows.length - 1;\n         const curRow = rows[rowIndx];\n         const newPos = v.position.x ?? 0;\n         const mapKey = `${rowIndx}-${newPos}`;\n\n         let getGrav = 1;\n\n         if (componentMap[mapKey])\n            console.error(\n               `Component[${component?.ids?.component}] is overwriting component[${componentMap[mapKey].ids?.component}]. <-- Reorder them to fix.`\n            );\n\n         componentMap[mapKey] = component;\n\n         if (curRow.cols[newPos]?.gravity)\n            getGrav = curRow.cols[newPos].gravity;\n\n         const _ui = component.ui();\n\n         this.viewComponentIDs[v.id] = _ui.id;\n         _ui.gravity = getGrav;\n\n         // Add ui of sub-view to column\n         curRow.cols[newPos] = _ui;\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: this._handlerChangePage,\n         });\n\n         curColIndex++;\n      });\n\n      return rows;\n   }\n\n   onShow() {\n      super.onShow();\n\n      // calll .onShow in child components\n      Object.values(this.viewComponents).forEach((val) => {\n         val.onShow?.();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDetailComponent = require(\"./ABViewDetailComponent\");\nconst ABViewPropertyLinkPage =\n   require(\"../viewProperties/ABViewPropertyLinkPage\").default;\n\nmodule.exports = class ABViewDataviewComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDataview_${baseView.id}`,\n         Object.assign(\n            {\n               dataview: \"\",\n               reload: \"\",\n            },\n            ids\n         )\n      );\n\n      this.linkPage = null;\n   }\n\n   ui() {\n      // NOTE: need to initial the detail component here\n      // because its dom width & height values are used .template function\n      this.initDetailComponent();\n\n      const ids = this.ids;\n      const L = (...params) => (this.AB ?? AB).Multilingual.label(...params);\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            rows: [\n               {\n                  id: ids.reload,\n                  view: \"button\",\n                  value: L(\"New data available. Click to reload.\"),\n                  css: \"webix_primary webix_warn\",\n                  hidden: true,\n                  click: (id, event) => {\n                     this.reloadData();\n                  },\n               },\n               {\n                  id: ids.dataview,\n                  view: \"dataview\",\n                  scroll: \"y\",\n                  sizeToContent: true,\n                  css: \"borderless transparent\",\n                  xCount: this.settings.xCount != 1 ? this.settings.xCount : 0,\n                  height: this.settings.height,\n                  template: (item) => this.itemTemplate(item),\n                  on: {\n                     onAfterRender: () => {\n                        this.applyClickEvent();\n                        this.addCyAttribute();\n                     },\n                  },\n               },\n            ],\n         },\n      ]);\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n      if (!dc) return;\n\n      // Initial the link page helper\n      this.linkPage = this.linkPageHelper.component();\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      const ids = this.ids;\n      const $dataView = $$(ids.dataview);\n      AB.Webix.extend($dataView, AB.Webix.ProgressBar);\n      dc.bind($dataView);\n\n      this.initRefreshWarning();\n\n      window.addEventListener(\"resize\", () => {\n         clearTimeout(this._resizeEvent);\n         this._resizeEvent = setTimeout(() => {\n            this.resize($dataView.getParentView());\n            delete this._resizeEvent;\n         }, 20);\n      });\n   }\n\n   /**\n    * @method initRefreshWarning\n    *\n    */\n   initRefreshWarning() {\n      const dc = this.datacollection;\n      const includeInQuery =\n         (dc?.settings?.objectWorkspace?.filterConditions?.rules ?? []).filter(\n            (r) =>\n               [\n                  \"in_query\",\n                  \"not_in_query\",\n                  \"in_query_field\",\n                  \"not_in_query_field\",\n               ].includes(r.rule)\n         ).length > 0;\n\n      if (!includeInQuery) return;\n      [\n         \"ab.datacollection.create\",\n         \"ab.datacollection.update\",\n         \"ab.datacollection.delete\",\n      ].forEach((eventKey) => {\n         dc.on(eventKey, (data) => {\n            if (data.objectId == dc.datasource.id)\n               this.showRefreshWarning(data);\n         });\n      });\n   }\n\n   showRefreshWarning() {\n      if (this.__throttleRefreshWarning)\n         clearTimeout(this.__throttleRefreshWarning);\n\n      this.__throttleRefreshWarning = setTimeout(() => {\n         $$(this.ids.reload)?.show();\n      }, 200);\n   }\n\n   reloadData() {\n      const dc = this.datacollection;\n      dc?.reloadData();\n\n      $$(this.ids.reload)?.hide();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.resize();\n   }\n\n   resize(base_element) {\n      const $dataview = $$(this.ids.dataview);\n      if (!$dataview) {\n         // Not sure if its a problem so notify\n         this.AB.notify.developer(\n            new Error(\"Resize called on missing dataview component\"),\n            { context: \"ABViewDataviewComponent.resize()\", ids: this.ids }\n         );\n         return;\n      }\n      $dataview.resize();\n\n      const item_width = this.getItemWidth(base_element);\n      $dataview.customize({ width: item_width });\n      $dataview.getTopParentView?.().resize?.();\n   }\n\n   initDetailComponent() {\n      const detailUI = this.getDetailUI();\n      this._detail_ui = this.AB.Webix.ui(detailUI);\n\n      // 2 - Always allow access to components inside data view\n      this.detailComponent.init(null, 2);\n   }\n\n   getDetailUI() {\n      const detailCom = this.detailComponent;\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n\n      const _ui = detailCom.ui();\n      // adjust the UI to make sure it will look like a \"card\"\n      _ui.type = \"clean\";\n      _ui.css = \"ab-detail-view\";\n\n      if (detailsPage || editPage) {\n         _ui.css += ` ab-detail-hover ab-record-#itemId#`;\n\n         if (detailsPage) _ui.css += \" ab-detail-page\";\n         if (editPage) _ui.css += \" ab-edit-page\";\n      }\n\n      return _ui;\n   }\n\n   itemTemplate(item) {\n      const detailCom = this.detailComponent;\n      const $dataview = $$(this.ids.dataview);\n      const $detail_item = this._detail_ui;\n\n      // Mock up data to initialize height of item\n      if (!item || !Object.keys(item).length) {\n         item = item ?? {};\n         this.datacollection?.datasource?.fields().forEach((f) => {\n            switch (f.key) {\n               case \"string\":\n               case \"LongText\":\n                  item[f.columnName] = \"Lorem Ipsum\";\n                  break;\n               case \"date\":\n               case \"datetime\":\n                  item[f.columnName] = new Date();\n                  break;\n               case \"number\":\n                  item[f.columnName] = 7;\n                  break;\n            }\n         });\n      }\n      detailCom.displayData(item);\n\n      const itemWidth =\n         $dataview.data.count() > 0\n            ? $dataview.type.width\n            : ($detail_item.$width - 20) / this.settings.xCount;\n\n      const itemHeight =\n         $dataview.data.count() > 0\n            ? $dataview.type.height\n            : $detail_item.getChildViews()?.[0]?.$height;\n\n      const tmp_dom = document.createElement(\"div\");\n      tmp_dom.appendChild($detail_item.$view);\n\n      $detail_item.define(\"width\", itemWidth - 24);\n      $detail_item.define(\"height\", itemHeight + 15);\n      $detail_item.adjust();\n\n      // Add cy attributes\n      this.addCyItemAttributes(tmp_dom, item);\n\n      return tmp_dom.innerHTML.replace(/#itemId#/g, item.id);\n   }\n\n   getItemWidth(base_element) {\n      const $dataview = $$(this.ids.dataview);\n\n      let currElem = base_element ?? $dataview;\n      let parentWidth = currElem?.$width;\n      while (currElem) {\n         if (\n            currElem.config.view == \"scrollview\" ||\n            currElem.config.view == \"layout\"\n         )\n            parentWidth =\n               currElem?.$width < parentWidth ? currElem?.$width : parentWidth;\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      if (!parentWidth)\n         parentWidth = $dataview?.getParentView?.().$width || window.innerWidth;\n\n      if (parentWidth > window.innerWidth) parentWidth = window.innerWidth;\n\n      // check if the browser window minus webix default padding is the same as the parent window\n      // if so we need to check to see if there is a sidebar and reduce the usable space by the\n      // width of the sidebar\n      if (window.innerWidth - 19 <= parentWidth) {\n         const $sidebar = this.getTabSidebar();\n         if ($sidebar) {\n            parentWidth -= $sidebar.$width;\n         }\n      }\n\n      const recordWidth = Math.floor(parentWidth / this.settings.xCount);\n\n      return recordWidth;\n   }\n\n   getTabSidebar() {\n      const $dataview = $$(this.ids.dataview);\n      let $sidebar;\n      let currElem = $dataview;\n      while (currElem && !$sidebar) {\n         $sidebar = (currElem.getChildViews?.() ?? []).filter(\n            (item) => item?.config?.view == \"sidebar\"\n         )[0];\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      return $sidebar;\n   }\n\n   applyClickEvent() {\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n      if (!detailsPage && !editPage) return;\n\n      const $dataview = $$(this.ids.dataview);\n      if (!$dataview) return;\n\n      $dataview.$view.onclick = (e) => {\n         let clicked = false;\n         let divs = e.path ?? [];\n\n         // NOTE: Some web browser clients do not support .path\n         if (!divs.length) {\n            divs.push(e.target);\n            divs.push(e.target.parentNode);\n         }\n\n         if (editPage) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem_header\") > -1\n               ) {\n                  clicked = true;\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(editPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n                  break;\n               }\n            }\n         }\n\n         if (detailsPage && !clicked) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem\") > -1\n               ) {\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(detailsPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n\n                  break;\n               }\n            }\n         }\n      };\n   }\n\n   addCyAttribute() {\n      const baseView = this.view;\n      const $dataview = $$(this.ids.dataview);\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n\n      $dataview.$view.setAttribute(\n         \"data-cy\",\n         `dataview container ${name} ${baseView.id}`\n      );\n   }\n\n   addCyItemAttributes(dom, item) {\n      const baseView = this.view;\n      const uuid = item.uuid;\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n      dom.querySelector(\".webix_accordionitem_body\")?.setAttribute(\n         \"data-cy\",\n         `dataview item ${name} ${uuid} ${baseView.id}`\n      );\n      dom.querySelector(\".webix_accordionitem_button\")?.setAttribute(\n         \"data-cy\",\n         `dataview item button ${name} ${uuid} ${baseView.id}`\n      );\n   }\n\n   get detailComponent() {\n      return (this._detailComponent =\n         this._detailComponent ??\n         new ABViewDetailComponent(\n            this.view,\n            `${this.ids.component}_detail_view`\n         ));\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCheckboxComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail checkbox ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id ?? baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      let checkbox = \"\";\n\n      // Check\n      if (val && JSON.parse(val))\n         checkbox =\n            '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n      // Uncheck\n      else checkbox = '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n      super.setValue(checkbox);\n   }\n};\n","const ABObjectQuery = require(\"../../ABObjectQuery\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewDetailComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetail_${baseView.id}`, ids);\n      this.idBase = idBase;\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      // this wrapper allows the detail view to have a\n      // card appearance as well as enables the edit and\n      // details functions to work when clicked\n      return {\n         type: \"form\",\n         id: this.ids.component,\n         borderless: true,\n         rows: [\n            {\n               body: _ui,\n            },\n         ],\n      };\n   }\n\n   onShow() {\n      const baseView = this.view;\n\n      try {\n         const dataCy = `Detail ${baseView.name?.split(\".\")[0]} ${baseView.id}`;\n\n         $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n      } catch (e) {\n         console.warn(\"Problem setting data-cy\", e);\n      }\n\n      // listen DC events\n      const dv = this.datacollection;\n\n      if (dv) {\n         const currData = dv.getCursor();\n\n         if (currData) this.displayData(currData);\n\n         [\"changeCursor\", \"cursorStale\", \"collectionEmpty\"].forEach((key) => {\n            this.eventAdd({\n               emitter: dv,\n               eventName: key,\n               listener: (...p) => this.displayData(...p),\n            });\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"create\",\n            listener: (createdRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === createdRow.id)\n                  this.displayData(createdRow);\n            },\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"update\",\n            listener: (updatedRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === updatedRow.id)\n                  this.displayData(updatedRow);\n            },\n         });\n      }\n\n      super.onShow();\n   }\n\n   displayData(rowData = {}) {\n      // make sure we have data to work with.  If null is passed in\n      // then pull current cursor.\n      if (rowData == null) {\n         rowData = this.datacollection.getCursor();\n      }\n\n      const views = (this.view.views() || []).sort((a, b) => {\n         if (!a?.field?.() || !b?.field?.()) return 0;\n\n         // NOTE: sort order of calculated fields.\n         // FORMULA field type should be calculated before CALCULATE field type\n         if (a.field().key === \"formula\" && b.field().key === \"calculate\")\n            return -1;\n         else if (a.field().key === \"calculate\" && b.field().key === \"formula\")\n            return 1;\n\n         return 0;\n      });\n\n      views.forEach((f) => {\n         let val;\n\n         if (f.field) {\n            const field = f.field();\n\n            if (!field) return;\n\n            // get value of relation when field is a connect field\n            switch (field.key) {\n               case \"connectObject\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"list\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  if (field.settings.isMultiple === 0) {\n                     let myVal = \"\";\n\n                     field.settings.options.forEach((options) => {\n                        if (options.id === val) myVal = options.text;\n                     });\n\n                     if (field.settings.hasColors) {\n                        let myHex = \"#66666\";\n                        let hasCustomColor = \"\";\n\n                        field.settings.options.forEach((h) => {\n                           if (h.text === myVal) {\n                              myHex = h.hex;\n                              hasCustomColor = \"hascustomcolor\";\n                           }\n                        });\n\n                        myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                     }\n\n                     val = myVal;\n                  } else {\n                     const items = [];\n\n                     let myVal = \"\";\n\n                     val.forEach((value) => {\n                        let hasCustomColor = \"\";\n                        let optionHex = \"\";\n\n                        if (field.settings.hasColors && value.hex) {\n                           hasCustomColor = \"hascustomcolor\";\n                           optionHex = `background: ${value.hex};`;\n                        }\n\n                        field.settings.options.forEach((options) => {\n                           if (options.id === value.id) myVal = options.text;\n                        });\n                        items.push(\n                           `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                        );\n                     });\n\n                     val = items.join(\"\");\n                  }\n\n                  break;\n\n               case \"user\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"file\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  break;\n\n               case \"formula\":\n                  if (rowData) {\n                     // const dv = this.datacollection;\n                     // const ds = dv ? dv.datasource : null;\n                     // const needRecalculate =\n                     //    !ds || ds instanceof ABObjectQuery ? false : true;\n\n                     // NOTE: Could not to re-calculate because `__relation` data is extracted from full data at the moment\n                     // rowData.__relation format\n                     // {\n                     //    id: \"string\"\n                     //    text: \"string\"\n                     //    translations: []\n                     //    uuid:  \"0cb52669-d626-4c9d-85ea-2d931751d0ce\"\n                     //    value: \"LABEL\"\n                     // }\n                     const needRecalculate = false;\n\n                     val = field.format(rowData, needRecalculate);\n                  }\n\n                  break;\n\n               default:\n                  val = field.format(rowData);\n               // break;\n            }\n         }\n\n         // set value to each components\n         const vComponent = f.component(this.idBase);\n\n         // vComponent?.onShow();\n\n         vComponent?.setValue?.(val);\n         vComponent?.displayText?.(rowData);\n      });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailConnectComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailConnect_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const columnName =\n                  baseView.field((fld) => fld.id === settings.fieldId)\n                     ?.columnName ?? \"\";\n               const dataCy = `detail connected ${columnName} ${\n                  settings.fieldId\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      const vals = [];\n\n      if (Array.isArray(val))\n         val.forEach((record) => {\n            vals.push(\n               `<span class=\"webix_multicombo_value\">${record.text}</span>`\n            );\n         });\n      else vals.push(`<span class=\"webix_multicombo_value\">${val.text}</span>`);\n\n      super.setValue(vals.join(\"\"));\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCustomComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCustom_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const detailView = baseView.detailComponent();\n\n      let template = field ? field.columnHeader().template({}) : \"\";\n\n      return super.ui({\n         minHeight: 45,\n         height: 60,\n         template,\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail custom ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   onShow() {\n      super.onShow();\n\n      const baseView = this.view;\n      const field = baseView.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const detailCom = baseView.detailComponent(),\n         rowData = detailCom.datacollection.getCursor() || {},\n         node = $detailItem.$view;\n\n      field.customDisplay(rowData, null, node, {\n         editable: false,\n      });\n      // Hack: remove the extra webix_template class here, which adds padding so\n      // the item is not alligned with the others\n      node\n         .getElementsByClassName(\"webix_template\")[1]\n         ?.removeAttribute(\"class\");\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const rowData = {};\n\n      rowData[field.columnName] = val;\n\n      field.setValue($detailItem, rowData);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailImageComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailImage_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const _ui = {\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail image ${field?.columnName} ${field?.id} ${\n                  baseView.parentDetailComponent()?.id || baseView.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const parsedImageUrl = val || field.settings.defaultImageUrl;\n\n      if (!parsedImageUrl) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const imageUrl = field.urlImage(parsedImageUrl);\n      const settings = this.settings;\n      const width = settings.width || field.settings.imageWidth || 200;\n      const height = settings.height\n         ? `${settings.height}px`\n         : field.settings.imageHeight\n         ? `${field.settings.imageHeight}px`\n         : \"100%\";\n      const imageTemplate = [\n         `<div class=\"ab-image-data-field\">`,\n         `<div style=\"float: left; background-size: cover; background-position: center center; background-image:url('${imageUrl}');  width: ${width}px; height: ${height}; position:relative;\">`,\n         `<a href=\"${imageUrl}\" target=\"_blank\" title=\"\" class=\"fa fa-download ab-image-data-field-download\"></a>`,\n         `</div></div>`,\n      ].join(\"\");\n\n      super.setValue(imageTemplate);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SAFE_HTML_TAGS = [\n   \"abbr\",\n   \"acronym\",\n   \"b\",\n   \"blockquote\",\n   \"br\",\n   \"code\",\n   \"div\",\n   \"em\",\n   \"i\",\n   \"li\",\n   \"ol\",\n   \"p\",\n   \"span\",\n   \"strong\",\n   \"table\",\n   \"td\",\n   \"tr\",\n   \"ul\",\n   \"h1\",\n   \"h2\",\n   \"h3\",\n   \"h4\",\n   \"h5\",\n];\n\nmodule.exports = class ABViewDetailItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDetailItem_${baseView.id}`,\n         Object.assign(\n            {\n               detailItem: \"\",\n               detailItemLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiDetailItemComponent = {}) {\n      const baseView = this.view;\n\n      // setup 'label' of the element\n      const settings = baseView.detailComponent()?.settings ?? {};\n      const field = baseView.field();\n\n      const isLabelTop = settings.labelPosition == \"top\";\n\n      const group = [];\n      /** @const group will be used later as rows or cols depending on label position */\n      if (settings.showLabel) {\n         const templateLabel = isLabelTop\n            ? \"<label style='display:block; text-align: left; line-height: 32px;' class='webix_inp_top_label'>#label#</label>\"\n            : \"<label style='display: inline-block; float: left; line-height: 32px; width:#width#px;'>#label#</label>\";\n\n         const labelUi = {\n            id: this.ids.detailItemLabel,\n            view: \"template\",\n            borderless: true,\n            height: 38,\n            template: templateLabel,\n            data: { label: field?.label ?? \"\" },\n         };\n         if (!isLabelTop) labelUi.width = settings.labelWidth + 24; // Add 24px to compensate for webix padding\n         group.push(labelUi);\n      }\n\n      let height;\n      if (field?.settings?.useHeight === 1)\n         height = parseInt(field.settings.imageHeight) || height;\n\n      const valueUi = Object.assign(\n         {\n            id: this.ids.detailItem,\n            view: \"template\",\n            borderless: true,\n            autowidth: true,\n            height,\n            isUsers: field?.key === \"user\",\n            template: isLabelTop\n               ? \"<div style='min-height: 38px'>#display#</div>\"\n               : \"<div class='ab-detail-component-holder'>#display#</div>\",\n            data: { display: \"\" }, // show empty data in template\n         },\n         uiDetailItemComponent\n      );\n      // height = 0 behaves a bit differently then autoheight here.\n      if (!valueUi.height || valueUi.height == 0) {\n         delete valueUi.height;\n         valueUi.autoheight = true;\n      }\n      group.push(valueUi);\n      const itemUi = {};\n      settings.labelPosition == \"top\"\n         ? (itemUi.rows = group)\n         : (itemUi.cols = group);\n      const _ui = super.ui([itemUi]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // async init(AB) {\n   //    await super.init(AB);\n   // }\n\n   setValue(val, detailId) {\n      const $detailItem = $$(detailId ?? this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const field = this.view.field();\n\n      switch (field?.key) {\n         case \"string\":\n         case \"LongText\": {\n            const strVal = val\n               // Sanitize all of HTML tags\n               .replace(/[<]/gm, \"&lt;\")\n               // Allow safe HTML tags\n               .replace(\n                  new RegExp(`(&lt;(/)?(${SAFE_HTML_TAGS.join(\"|\")}))`, \"gm\"),\n                  \"<$2$3\"\n               );\n\n            $detailItem.setValues({ display: strVal });\n            break;\n         }\n         default:\n            $detailItem.setValues({ display: val });\n            break;\n      }\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTextComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailText_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n      const _ui = {\n         css: \"ab-text\",\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail text ${field?.columnName} ${field?.id} ${\n                  this.view.parentDetailComponent()?.id || this.view.parent.id\n               }`;\n\n               $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTreeComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailTree_${baseView.id}`, ids);\n   }\n\n   get className() {\n      return \"ab-detail-tree\";\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // add div of tree to detail\n      this.setValue(`<div class=\"${this.className}\"></div>`);\n   }\n\n   getDomTree() {\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      return $detailItem.$view.getElementsByClassName(this.className)[0];\n   }\n\n   setValue(val) {\n      // convert value to array\n      const vals = [];\n\n      if (val && !Array.isArray(val)) vals.push(val);\n\n      setTimeout(() => {\n         // get tree dom\n         const domTree = this.getDomTree();\n\n         if (!domTree) return false;\n\n         const field = this.view.field();\n         const branches = [];\n\n         if (typeof field.settings.options.data === \"undefined\")\n            field.settings.options = new this.AB.Webix.TreeCollection({\n               data: field.settings.options,\n            });\n\n         field.settings.options.data.each(function (obj) {\n            if (vals.indexOf(obj.id) !== -1) {\n               let html = \"\";\n               let rootid = obj.id;\n\n               while (this.getParentId(rootid)) {\n                  field.settings.options.data.each(function (par) {\n                     if (\n                        field.settings.options.data.getParentId(rootid) ===\n                        par.id\n                     ) {\n                        html = `${par.text}: ${html}`;\n                     }\n                  });\n\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n\n         let nodeHTML = \"<div class='list-data-values'>\";\n\n         branches.forEach(function (item) {\n            nodeHTML += `<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color: ${myHex} !important;\">${item}</span>`;\n         });\n\n         nodeHTML += \"</div>\";\n         domTree.innerHTML = nodeHTML;\n\n         let height = 33;\n\n         if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n         const $detailItem = $$(this.ids.detailItem);\n\n         $detailItem.config.height = height;\n         $detailItem.resize();\n      }, 50);\n   }\n};\n","const Docxtemplater = require(\"../../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../../js/jszip.min.js\");\nconst sizeOf = require(\"image-size\");\n\nconst ABFieldConnect = require(\"../../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDocxBuilderComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDocxBuilder_${baseView.id}`,\n         Object.assign(\n            {\n               downloadButton: \"\",\n               noFileLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const buttonWidth = settings.width ?? defaultSettings.width;\n\n      let autowidth = false;\n\n      if (buttonWidth === 0) autowidth = true;\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n\n      switch (settings.buttonPosition ?? defaultSettings.buttonPosition) {\n         case \"left\":\n            break;\n         case \"center\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            rightSpacer = {\n               type: \"spacer\",\n            };\n            break;\n         case \"right\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            break;\n      }\n\n      const buttonLabelText =\n         baseView.buttonlabel ||\n         settings.buttonlabel ||\n         defaultSettings.buttonlabel; // Use || to check empty string \"\"\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"toolbar\",\n            css:\n               settings.toolbarBackground ?? defaultSettings.toolbarBackground,\n            cols: [\n               leftSpacer,\n               {\n                  id: ids.downloadButton,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-file-word-o\",\n                  label: buttonLabelText,\n                  width: settings.width || defaultSettings.width,\n                  autowidth: autowidth,\n                  click: () => {\n                     this.renderFile();\n                  },\n                  on: {\n                     // Add data-cy attribute for cypress tests\n                     onAfterRender: () => {\n                        const name = baseView.name?.replace(\".docxBuilder\", \"\");\n                        const dataCy = `docx download ${name} ${baseView.id}`;\n                        $$(ids.downloadButton)\n                           ?.$view.querySelector(\"button\")\n                           .setAttribute(\"data-cy\", dataCy);\n                     },\n                  },\n               },\n               {\n                  id: ids.noFileLabel,\n                  view: \"label\",\n                  label: this.label(\"No template file\"),\n               },\n               {\n                  type: \"spacer\",\n               },\n               rightSpacer,\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $downloadButton = $$(ids.downloadButton);\n      const $noFileLabel = $$(ids.noFileLabel);\n\n      if (this.view.settings.filename) {\n         $downloadButton.show();\n         $noFileLabel.hide();\n      } else {\n         $downloadButton.hide();\n         $noFileLabel.show();\n      }\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const tasks = [];\n\n      this.view.datacollections.forEach((dc) => {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            tasks.push(dc.loadData());\n      });\n\n      // Show loading cursor\n      if (tasks.length > 0) this.busy();\n\n      await Promise.all(tasks);\n\n      // Hide loading cursor\n      this.ready();\n   }\n\n   busy() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.disable();\n      $downloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n      $downloadButton.refresh();\n   }\n\n   ready() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.enable();\n      $downloadButton.define(\"icon\", \"fa fa-file-word-o\");\n      $downloadButton.refresh();\n   }\n\n   async renderFile() {\n      this.busy();\n\n      const reportValues = await this.getReportData();\n\n      // console.log(\"DOCX data: \", reportValues);\n\n      // Download images\n      const images = await this.downloadImages(reportValues);\n\n      // Download the template file\n      const contentTemplateFile = await this.downloadTemplateFile();\n\n      // Generate Docx file\n      const blobFile = this.generateDocxFile(\n         contentTemplateFile,\n         reportValues,\n         images\n      );\n\n      const baseView = this.view;\n\n      // Let user download the output file\n      baseView.letUserDownload(blobFile, baseView.filelabel);\n\n      // Final step\n      this.ready();\n   }\n\n   async getReportData() {\n      const result = {};\n      const tasks = [];\n\n      // Get current cursor\n      const datacollections = this.view.datacollections;\n      const isDcLabelAdded = datacollections.length > 1;\n\n      datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach(async (dc) => {\n            tasks.push(\n               new Promise((resolve, reject) => {\n                  const obj = dc.datasource;\n                  const objModel = obj.model();\n                  const dcCursor = dc.getCursor();\n                  const dcValues = [];\n\n                  // pull the defined sort values\n                  let sorts = dc.settings.objectWorkspace.sortFields || [];\n\n                  // pull filter conditions\n                  let wheres = this.AB.cloneDeep(\n                     dc.settings.objectWorkspace.filterConditions ?? {}\n                  );\n                  // if there is a selected cursor set the filter here\n                  if (dcCursor) {\n                     // if there is a selected cursor set the filter here\n                     wheres = {\n                        glue: \"and\",\n                        rules: [\n                           {\n                              key: obj.PK(),\n                              rule: \"equals\",\n                              value: dcCursor[obj.PK()],\n                           },\n                        ],\n                     };\n                  } else if (dc.__reloadWheres) {\n                     // if we pass new wheres with a reload use them instead\n                     wheres = dc.__reloadWheres;\n                  }\n                  wheres.glue = wheres.glue || \"and\";\n                  wheres.rules = wheres.rules || [];\n\n                  const __additionalWheres = {\n                     glue: \"and\",\n                     rules: [],\n                  };\n\n                  // add the filterCond from user filters if there are rules to add\n                  if (dc?.__filterCond?.rules?.length > 0) {\n                     __additionalWheres.rules.push(dc?.__filterCond);\n                  }\n\n                  // Filter by a selected cursor of a link DC\n                  let linkRule = dc.ruleLinkedData();\n                  if (!dc.settings.loadAll && linkRule) {\n                     __additionalWheres.rules.push(linkRule);\n                  }\n                  // pull data rows following the follow data collection\n                  else if (dc.datacollectionFollow) {\n                     const followCursor = dc.datacollectionFollow.getCursor();\n                     // store the PK as a variable\n                     let PK = dc.datasource.PK();\n                     // if the datacollection we are following is a query\n                     // add \"BASE_OBJECT.\" to the PK so we can select the\n                     // right value to report the cursor change to\n                     if (dc.datacollectionFollow.settings.isQuery) {\n                        PK = \"BASE_OBJECT.\" + PK;\n                     }\n                     if (followCursor) {\n                        wheres = {\n                           glue: \"and\",\n                           rules: [\n                              {\n                                 key: dc.datasource.PK(),\n                                 rule: \"equals\",\n                                 value: followCursor[PK],\n                              },\n                           ],\n                        };\n                     }\n                     // Set no return rows\n                     else {\n                        wheres = {\n                           glue: \"and\",\n                           rules: [\n                              {\n                                 key: this.datasource.PK(),\n                                 rule: \"equals\",\n                                 value: \"NO RESULT ROW\",\n                              },\n                           ],\n                        };\n                     }\n                  }\n\n                  // Combine setting & program filters\n                  if (__additionalWheres.rules.length) {\n                     if (wheres.rules.length) {\n                        __additionalWheres.rules.unshift(wheres);\n                     }\n                     wheres = __additionalWheres;\n                  }\n\n                  // remove any null in the .rules\n                  // if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n                  wheres = obj.whereCleanUp(wheres);\n\n                  // Pull data that have full relation values.\n                  // NOTE: When get data from DataCollection, those data is pruned.\n                  objModel\n                     .findAll({\n                        where: wheres || {},\n                        skip: 0,\n                        sort: sorts,\n                        populate: true,\n                     })\n                     .then((dataList) => {\n                        // update property names to column labels to match format names in docx file\n                        const mlFields = obj.multilingualFields();\n\n                        dataList?.data.forEach((data) => {\n                           let resultData;\n\n                           // For support label of columns every languages\n                           obj.fields().forEach((f) => {\n                              const fieldLabels = [];\n\n                              // Query Objects\n                              if (obj instanceof ABObjectQuery) {\n                                 if (typeof f.object.translations === \"string\")\n                                    f.object.translations = JSON.parse(\n                                       f.object.translations\n                                    );\n\n                                 if (typeof f.translations === \"string\")\n                                    f.translations = JSON.parse(f.translations);\n\n                                 (f.object.translations || []).forEach(\n                                    (objTran) => {\n                                       const fieldTran = (\n                                          f.translations || []\n                                       ).filter(\n                                          (fieldTran) =>\n                                             fieldTran.language_code ===\n                                             objTran.language_code\n                                       )[0];\n\n                                       if (!fieldTran) return;\n\n                                       const objectLabel = objTran.label;\n                                       const fieldLabel = fieldTran.label;\n\n                                       // Replace alias with label of object\n                                       fieldLabels.push(\n                                          `${objectLabel}.${fieldLabel}`\n                                       );\n                                    }\n                                 );\n                              }\n                              // Normal Objects\n                              else if (typeof f.translations === \"string\")\n                                 f.translations = JSON.parse(f.translations);\n\n                              f.translations.forEach((tran) => {\n                                 fieldLabels.push(tran.label);\n                              });\n\n                              resultData = Object.assign(\n                                 resultData ?? {},\n                                 this.setReportValues(\n                                    data,\n                                    f,\n                                    fieldLabels,\n                                    mlFields\n                                 ) ?? {}\n                              );\n\n                              // Keep ABObject into .scope of DOCX templater\n                              resultData._object = obj;\n                           });\n\n                           dcValues.push(resultData);\n                        });\n\n                        // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n                        const datacollectionData =\n                           dcValues.length > 1 ? dcValues : dcValues[0];\n\n                        if (\n                           isDcLabelAdded ||\n                           (Array.isArray(datacollectionData) &&\n                              datacollectionData.length > 1)\n                        )\n                           (dc.translations || []).forEach((tran) => {\n                              result[tran.label] = datacollectionData;\n                           });\n                        else Object.assign(result, datacollectionData);\n\n                        resolve();\n                     });\n               })\n            );\n         });\n\n      await Promise.all(tasks);\n\n      return result;\n   }\n\n   setReportValues(data, field, fieldLabels = [], multilinguageFields) {\n      const result = {};\n\n      let val = null;\n\n      result.id = data.id;\n      result[`${field.columnName}_ORIGIN`] = data[field.columnName]; // Keep origin value for compare value with custom index\n\n      const baseView = this.view;\n\n      // Translate multilinguage fields\n      if (multilinguageFields.length) {\n         const transFields = (multilinguageFields || []).filter(\n            (fieldName) => data[fieldName] != null\n         );\n\n         baseView.translate(data, data, transFields, baseView.languageCode);\n      }\n\n      // Pull value\n      if (field instanceof ABFieldConnect) {\n         // If field is connected field, then\n         // {\n         //    fieldName: {Object} or [Array]\n         // }\n         val = data[this.AB.rules.toFieldRelationFormat(field.columnName)];\n\n         if (val?.forEach)\n            val.forEach((v) => {\n               if (!v) return;\n\n               // Sentry Fix: sometimes v is just the uuid\n               // Q: what should we do in this case?\n               if (typeof v == \"string\") return;\n\n               // format relation data\n               if (field.datasourceLink) {\n                  field.datasourceLink\n                     .fields((f) => !f.isConnection)\n                     .forEach((f) => {\n                        v[`${f.columnName}_ORIGIN`] = v[f.columnName];\n\n                        v[f.columnName] = f.format(v, {\n                           languageCode: baseView.languageCode,\n                        });\n                     });\n               }\n\n               // Keep ABObject to relation data\n               if (v && typeof v === \"object\") v._object = field.datasourceLink;\n            });\n\n         // TODO\n         // data[label + '_label'] = field.format(baseData);\n      } else\n         val = field.format(data, {\n            languageCode: baseView.languageCode,\n         });\n\n      // Set value to report with every languages of label\n      fieldLabels.forEach((label) => {\n         if (val) result[label] = val;\n         else if (!result[label]) result[label] = \"\";\n      });\n\n      // normalize child items\n      if (data.data?.length) {\n         result.data = result.data || [];\n\n         (data.data || []).forEach((childItem, index) => {\n            // add new data item\n            result.data[index] = this.setReportValues(\n               childItem,\n               field,\n               fieldLabels,\n               multilinguageFields\n            );\n         });\n      }\n\n      return result;\n   }\n\n   async downloadImages(reportValues) {\n      const images = {};\n      const tasks = [];\n      const addDownloadTask = (fieldImage, data = []) => {\n         if (Array.isArray(data) == false) {\n            data = [data];\n         }\n         data.forEach((d) => {\n            const imageVal = fieldImage.format(d);\n\n            if (imageVal && !images[imageVal]) {\n               tasks.push(\n                  new Promise((resolve, reject) => {\n                     const imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                     JSZipUtils.getBinaryContent(imgUrl, (error, content) => {\n                        if (error) return reject(error);\n\n                        // store binary of image\n                        images[imageVal] = content;\n\n                        resolve();\n                     });\n                  })\n               );\n            }\n\n            // download images of child items\n            addDownloadTask(fieldImage, d.data || []);\n         });\n      };\n\n      this.view.datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n\n            // let currCursor = dc.getCursor();\n\n            // if (currCursor) {\n            //    // Current cursor\n            //    const treeCursor = dc.getCursor(true);\n\n            //    currCursor = [this.AB.merge({}, currCursor, treeCursor)];\n            // } // List of data\n            // else currCursor = dc.getData();\n\n            obj.fields((f) => f instanceof ABFieldImage).forEach((f) => {\n               addDownloadTask(f, reportValues[dc.label] || [reportValues]);\n            });\n         });\n\n      await Promise.all(tasks);\n\n      return images;\n   }\n\n   downloadTemplateFile() {\n      const url = this.view.downloadUrl();\n\n      return new Promise((resolve, reject) => {\n         JSZipUtils.getBinaryContent(url, (error, content) => {\n            if (error) return reject(error);\n\n            resolve(content);\n         });\n      });\n   }\n\n   generateDocxFile(contentFile, data, images) {\n      const summaries = {}; // { varName: sum number, ..., varName2: number2 }\n      const zip = new JSZip(contentFile);\n      const doc = new Docxtemplater();\n      const imageModule = new ImageModule({\n         centered: false,\n         getImage: (tagValue, tagName) => {\n            // NOTE: .getImage of version 3.0.2 does not support async\n            //       we can buy newer version to support it\n            //       https://docxtemplater.com/modules/image/\n\n            return images[tagValue] || \"\";\n         },\n         getSize: (imgBuffer, tagValue, tagName) => {\n            const defaultVal = [300, 160];\n            const baseView = this.view;\n            const dc = baseView.datacollection;\n\n            if (!dc) {\n               const dcs = baseView.datacollections;\n\n               if (dcs) {\n                  dcs.forEach((dc) => {\n                     let obj = dc.datasource;\n\n                     if (!obj) return false;\n\n                     // This is a query object\n                     if (tagName.indexOf(\".\") > -1) {\n                        let tagNames = tagName.split(\".\");\n\n                        if (!obj.objects) return false; // not a query\n\n                        obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                        if (!obj) return false;\n\n                        tagName = tagNames[1]; // Field name\n                     }\n\n                     const imageField = obj.fields(\n                        (f) => f.columnName === tagName\n                     )[0];\n\n                     if (!imageField?.settings) return false;\n\n                     if (\n                        imageField.settings.useWidth &&\n                        imageField.settings.imageWidth\n                     )\n                        defaultVal[0] = imageField.settings.imageWidth;\n\n                     if (\n                        imageField.settings.useHeight &&\n                        imageField.settings.imageHeight\n                     )\n                        defaultVal[1] = imageField.settings.imageHeight;\n\n                     return false;\n                  });\n               }\n            } else {\n               let obj = dc.datasource;\n\n               if (!obj) return defaultVal;\n\n               // This is a query object\n               if (tagName.indexOf(\".\") > -1) {\n                  const tagNames = tagName.split(\".\");\n\n                  obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                  if (!obj) return defaultVal;\n\n                  tagName = tagNames[1]; // Field name\n               }\n\n               const imageField = obj.fields(\n                  (f) => f.columnName === tagName\n               )[0];\n\n               if (!imageField?.settings) return defaultVal;\n\n               if (\n                  imageField.settings.useWidth &&\n                  imageField.settings.imageWidth\n               )\n                  defaultVal[0] = imageField.settings.imageWidth;\n\n               if (\n                  imageField.settings.useHeight &&\n                  imageField.settings.imageHeight\n               )\n                  defaultVal[1] = imageField.settings.imageHeight;\n            }\n            // Find aspect ratio image dimensions\n            try {\n               var img = new Uint8Array(imgBuffer);\n               var image = sizeOf(img);\n               var ratio = Math.min(\n                  defaultVal[0] / image.width,\n                  defaultVal[1] / image.height\n               );\n\n               return [image.width * ratio, image.height * ratio];\n            } catch (err) {\n               // if invalid image, then should return 0, 0 sizes\n               return defaultVal;\n            }\n         },\n         // getSize: function (imgBuffer, tagValue, tagName) {\n         //    if (imgBuffer) {\n         //       var maxWidth = 300;\n         //       var maxHeight = 160;\n\n         //       // Find aspect ratio image dimensions\n         //       try {\n         //          var image = sizeOf(imgBuffer);\n         //          var ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n         //          return [image.width * ratio, image.height * ratio];\n         //       }\n         //       // if invalid image, then should return 0, 0 sizes\n         //       catch (err) {\n         //          return [0, 0];\n         //       }\n\n         //    }\n         //    else {\n         //       return [0, 0];\n         //    }\n         // }\n      });\n\n      try {\n         doc.attachModule(imageModule)\n            .loadZip(zip)\n            .setData(data)\n            .setOptions({\n               parser: function (tag) {\n                  return {\n                     get: function (scope, context) {\n                        // NOTE: AppBuilder custom filter : no return empty items\n                        if (tag.indexOf(\"data|\") === 0) {\n                           const prop = (tag.split(\"|\")[1] || \"\").trim();\n\n                           return (scope[\"data\"] || []).filter(function (item) {\n                              return item[prop] ? true : false;\n                           });\n                        }\n                        // Mark number to add to a variable\n                        else if (tag.indexOf(\"|$sum?\") > -1) {\n                           const prop = tag.split(\"|$sum?\")[0];\n                           const varName = tag.split(\"|$sum?\")[1];\n\n                           let number = scope[prop];\n\n                           if (typeof number === \"string\")\n                              number = number.replace(\n                                 /[^\\d.]/g, // return only number and dot\n                                 \"\"\n                              );\n\n                           if (!summaries[varName]) summaries[varName] = 0.0;\n\n                           summaries[varName] += parseFloat(number);\n\n                           return scope[prop];\n                        }\n                        // Show sum value ^\n                        else if (tag.indexOf(\"$sum?\") === 0) {\n                           const varName = tag.replace(\"$sum?\", \"\");\n\n                           return summaries[varName] || 0;\n                        }\n                        // // Sum number of .data (Grouped query)\n                        // else if (tag.indexOf(\"$sum|\") === 0) {\n                        //    const prop = (\n                        //       tag.split(\"|\")[1] || \"\"\n                        //    ).trim();\n\n                        //    let sum = 0;\n                        //    (scope[\"data\"] || []).forEach(\n                        //       (childItem) => {\n                        //          if (!childItem[prop]) return;\n\n                        //          let number = childItem[prop];\n                        //          if (typeof number === \"string\") {\n                        //             number = number.replace(\n                        //                /[^\\d.]/g, // return only number and dot\n                        //                \"\"\n                        //             );\n                        //          }\n\n                        //          try {\n                        //             sum += parseFloat(\n                        //                number || 0\n                        //             );\n                        //          } catch (e) {}\n                        //       }\n                        //    );\n\n                        //    // Print number with commas\n                        //    if (sum) {\n                        //       sum = sum\n                        //          .toString()\n                        //          .replace(\n                        //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                        //             \",\"\n                        //          );\n                        //    }\n\n                        //    return sum;\n                        // }\n                        // NOTE: AppBuilder custom filter of another data source\n                        else if (tag.indexOf(\"$\") === 0) {\n                           const props = tag.replace(\"$\", \"\").split(\"|\");\n                           const propSource = props[0].trim();\n                           const propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                           if (!propSource || !propFilter) return \"\";\n\n                           // Pull Index field of connect field\n                           let indexColName;\n\n                           const obj = scope._object;\n\n                           if (obj) {\n                              const connectedField = obj.fields(\n                                 (f) => f.columnName === propFilter\n                              )[0];\n\n                              if (connectedField) {\n                                 const indexField = connectedField.indexField;\n\n                                 indexColName = indexField\n                                    ? indexField.columnName\n                                    : null;\n                              }\n                           }\n\n                           let sourceVals = data[propSource];\n\n                           if (sourceVals && !Array.isArray(sourceVals))\n                              sourceVals = [sourceVals];\n\n                           const getVal = (data) =>\n                              data[`${indexColName}_ORIGIN`] || // Pull origin data to compare by custom index\n                              data[indexColName] ||\n                              data.id ||\n                              data;\n\n                           return (sourceVals || []).filter(function (item) {\n                              // Pull data of parent to compare\n                              let comparer = scope[propFilter];\n\n                              if (Array.isArray(comparer))\n                                 return (\n                                    comparer.filter(\n                                       (c) => getVal(c) === getVal(item)\n                                    ).length > 0\n                                 );\n                              else return getVal(item) === getVal(comparer);\n                           });\n                        }\n                        // ์NOTE : Custom filter\n                        else if (tag.indexOf(\"?\") > -1) {\n                           const result = scope;\n                           const prop = tag.split(\"?\")[0];\n                           const condition = tag.split(\"?\")[1];\n\n                           if (prop && condition) {\n                              let data = scope[prop];\n\n                              if (data) {\n                                 if (!Array.isArray(data)) data = [data];\n\n                                 return data.filter((d) =>\n                                    eval(condition.replace(/\\./g, \"d.\"))\n                                 );\n                              }\n                           }\n                           return result;\n                        } else if (tag === \".\") return scope;\n                        else return scope[tag];\n                     },\n                  };\n               },\n            })\n            .render(); // render the document\n      } catch (error) {\n         return error;\n      }\n\n      // Output the document using Data-URI\n      const docxFile = doc.getZip().generate({\n         type: \"blob\",\n         mimeType:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n\n      return docxFile;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormButton_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = baseView.settings ?? {};\n\n      const alignment =\n         settings.alignment || baseView.constructor.defaultValues().alignment;\n\n      const _ui = {\n         cols: [],\n      };\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"right\") {\n         _ui.cols.push({});\n      }\n\n      // delete button\n      if (settings.includeDelete) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.deleteLabel || this.label(\"Delete\"),\n               css: \"webix_danger\",\n               click: function () {\n                  self.onDelete(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button delete ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // cancel button\n      if (settings.includeCancel) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.cancelLabel || this.label(\"Cancel\"),\n               click: function () {\n                  self.onCancel(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button cancel ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // reset button\n      if (settings.includeReset) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.resetLabel || this.label(\"Reset\"),\n               click: function () {\n                  self.onClear(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button reset ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // save button\n      if (settings.includeSave) {\n         _ui.cols.push({\n            view: \"button\",\n            type: \"form\",\n            css: \"webix_primary\",\n            autowidth: true,\n            value: settings.saveLabel || this.label(\"Save\"),\n            click: function () {\n               self.onSave(this);\n            },\n            on: {\n               onAfterRender: function () {\n                  this.getInputNode().setAttribute(\n                     \"data-cy\",\n                     `button save ${form.id}`\n                  );\n               },\n            },\n         });\n      }\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"left\") _ui.cols.push({});\n\n      return super.ui(_ui);\n   }\n\n   onCancel(cancelButton) {\n      const baseView = this.view;\n      const settings = baseView.settings ?? {};\n\n      // get form component\n      const form = baseView.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC if not set to follow another\n      if (!dc?.isCursorFollow) {\n         dc?.setCursor(null);\n      }\n      // dc?.setStaticCursor(); // unless it should be static\n\n      cancelButton?.getFormView?.().clear();\n\n      if (settings.afterCancel) form.changePage(settings.afterCancel);\n      // If the redirect page is not defined, then redirect to parent page\n      else {\n         const noPopupFilter = (p) => p.settings && p.settings.type != \"popup\";\n\n         const pageCurr = this.view.pageParent();\n         if (pageCurr) {\n            const pageParent = pageCurr.pageParent(noPopupFilter) ?? pageCurr;\n\n            if (pageParent) form.changePage(pageParent.id);\n         }\n      }\n   }\n\n   onClear(resetButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      if (dc) {\n         dc.setCursor(null);\n      }\n\n      resetButton?.getFormView?.().clear();\n   }\n\n   onSave(saveButton) {\n      if (!saveButton) {\n         console.error(\"Require the button element\");\n         return;\n      }\n      // get form component\n      const form = this.view.parentFormComponent();\n      const formView = saveButton.getFormView();\n\n      // disable the save button\n      saveButton.disable?.();\n\n      // save data\n      form\n         .saveData(formView)\n         .then(() => {\n            saveButton.enable?.();\n\n            //Focus on first focusable component\n            form.focusOnFirst();\n         })\n         .catch((err) => {\n            console.error(err);\n            // Catch uncaught error reported in Sentry and add context\n            // APPBUILDER-WEB-1A3(https://appdev-designs.sentry.io/issues/4631880265/)\n            try {\n               saveButton.enable?.();\n            } catch (e) {\n               this.AB.notify.developer(e, {\n                  context:\n                     \"formButton.onSave > catch err > saveButton.enable()\",\n                  buttonID: this?.view?.id,\n                  formID: this?.view?.parent?.id,\n               });\n            }\n         });\n   }\n\n   onDelete(deleteButton) {\n      this.AB.Webix.confirm({\n         title: this.label(\"Delete data\"),\n         text: this.label(\"Do you want to delete this data?\"),\n         callback: async (confirm) => {\n            if (!confirm) return;\n\n            deleteButton.disable?.();\n\n            try {\n               // get form component\n               const form = this.view.parentFormComponent();\n               const $formView = deleteButton.getFormView();\n\n               // delete a record row\n               await form.deleteData($formView);\n            } catch (err) {\n               console.error(err);\n            } finally {\n               deleteButton.enable?.();\n            }\n         },\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormCheckboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui({\n         view: \"checkbox\",\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormItem = require(\"../ABViewFormItem\");\nconst ABViewFormConnect = require(\"../ABViewFormConnect\");\nconst ABViewFormCustom = require(\"../ABViewFormCustom\");\nconst ABViewFormTextbox = require(\"../ABViewFormTextbox\");\nconst ABViewFormJson = require(\"../ABViewFormJson\");\n\nasync function timeout(ms) {\n   return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst fieldValidations = [];\n\nmodule.exports = class ABViewFormComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewForm_${baseView.id}`,\n         Object.assign(\n            {\n               form: \"\",\n\n               layout: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.timerId = null;\n      this._showed = false;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const superComponent = baseView.superComponent();\n      const rows = superComponent.ui().rows ?? [];\n      const fieldValidationsHolder = this.uiValidationHolder();\n      const _ui = super.ui([\n         {\n            id: this.ids.form,\n            view: \"form\",\n            abid: baseView.id,\n            rows: rows.concat(fieldValidationsHolder),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiValidationHolder() {\n      const result = [\n         {\n            hidden: true,\n            rows: [],\n         },\n      ];\n\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      const baseView = this.view;\n      const object = this.datacollection?.datasource ?? baseView._currentObject;\n\n      if (!object) return result;\n\n      const validationUI = [];\n      const existsFields = baseView.fieldComponents();\n\n      object\n         // Pull fields that have validation rules\n         .fields((f) => f?.settings?.validationRules)\n         .forEach((f) => {\n            const view = existsFields.find(\n               (com) => f.id === com.settings.fieldId\n            );\n            if (!view) return;\n\n            // parse the rules because they were stored as a string\n            // check if rules are still a string...if so lets parse them\n            if (typeof f.settings.validationRules === \"string\") {\n               f.settings.validationRules = JSON.parse(\n                  f.settings.validationRules\n               );\n            }\n\n            // there could be more than one so lets loop through and build the UI\n            f.settings.validationRules.forEach((rule, indx) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.columnName}_${indx}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               if (typeof Filter.ui === \"function\") {\n                  validationUI.push(Filter.ui());\n               } else {\n                  // Legacy v1 method:\n                  validationUI.push(Filter.ui);\n               }\n\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.columnName,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n               });\n            });\n         });\n\n      result.rows = validationUI;\n\n      return result;\n   }\n\n   async init(AB, accessLevel, options = {}) {\n      await super.init(AB);\n\n      this.view.superComponent().init(AB, accessLevel, options);\n\n      this.initCallbacks(options);\n      this.initEvents();\n      this.initValidationRules();\n\n      const abWebix = this.AB.Webix;\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         abWebix.extend($form, abWebix.ProgressBar);\n      }\n\n      if (accessLevel < 2) $form.disable();\n   }\n\n   initCallbacks(options = {}) {\n      // ? We need to determine from these options whether to clear on load?\n      if (options?.clearOnLoad) {\n         // does this need to be a function?\n         this.view.settings.clearOnLoad = options.clearOnLoad();\n      }\n      // Q: Should we use emit the event instead ?\n      const baseView = this.view;\n\n      if (options.onBeforeSaveData)\n         baseView._callbacks.onBeforeSaveData = options.onBeforeSaveData;\n      else baseView._callbacks.onBeforeSaveData = () => true;\n   }\n\n   initEvents() {\n      // bind a data collection to form component\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // listen DC events\n      [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n         this.eventAdd({\n            emitter: dc,\n            eventName: key,\n            listener: (rowData) => {\n               const baseView = this.view;\n               const linkViaOneConnection = baseView.fieldComponents(\n                  (comp) => comp instanceof ABViewFormConnect\n               );\n               // clear previous xxx->one selections and add new from\n               // cursor change\n               linkViaOneConnection.forEach((f) => {\n                  const field = f.field();\n                  if (\n                     field?.settings?.linkViaType == \"one\" &&\n                     field?.linkViaOneValues\n                  ) {\n                     delete field.linkViaOneValues;\n                     const relationVals =\n                        rowData?.[field.relationName()] ??\n                        rowData?.[field.columnName];\n                     if (relationVals) {\n                        if (Array.isArray(relationVals)) {\n                           const valArray = [];\n                           relationVals.forEach((v) => {\n                              valArray.push(\n                                 field.getRelationValue(v, { forUpdate: true })\n                              );\n                           });\n                           field.linkViaOneValues = valArray.join(\",\");\n                        } else {\n                           field.linkViaOneValues = field.getRelationValue(\n                              relationVals,\n                              { forUpdate: true }\n                           );\n                        }\n                     }\n                  }\n               });\n\n               this.displayData(rowData);\n            },\n         });\n      });\n\n      const ids = this.ids;\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializingData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.disable();\n\n               $form.showProgress?.({ type: \"icon\" });\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.enable();\n\n               $form.hideProgress?.();\n            }\n         },\n      });\n\n      // I think this case is currently handled by the DC.[changeCursor, cursorStale]\n      // events:\n      // this.eventAdd({\n      //    emitter: dc,\n      //    eventName: \"ab.datacollection.update\",\n      //    listener: (msg, data) => {\n      //       if (!data?.objectId) return;\n\n      //       const object = dc.datasource;\n\n      //       if (!object) return;\n\n      //       if (\n      //          object.id === data.objectId ||\n      //          object.fields((f) => f.settings.linkObject === data.objectId)\n      //             .length > 0\n      //       ) {\n      //          const currData = dc.getCursor();\n\n      //          if (currData) this.displayData(currData);\n      //       }\n      //    },\n      // });\n\n      // bind the cursor event of the parent DC\n      const linkDv = dc.datacollectionLink;\n\n      if (linkDv)\n         // update the value of link field when data of the parent dc is changed\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            this.eventAdd({\n               emitter: linkDv,\n               eventName: key,\n               listener: (rowData) => {\n                  this.displayParentData(rowData);\n               },\n            });\n         });\n   }\n\n   initValidationRules() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (!fieldValidations.length) return;\n\n      // we need to store the rules for use later so lets build a container array\n      const complexValidations = [];\n\n      fieldValidations.forEach((f) => {\n         // init each ui to have the properties (app and fields) of the object we are editing\n         f.filter.applicationLoad(dc.datasource.application);\n         f.filter.fieldsLoad(dc.datasource.fields());\n         // now we can set the value because the fields are properly initialized\n         f.filter.setValue(f.validationRules);\n\n         // if there are validation rules present we need to store them in a lookup hash\n         // so multiple rules can be stored on a single field\n         if (!Array.isArray(complexValidations[f.columnName]))\n            complexValidations[f.columnName] = [];\n\n         // now we can push the rules into the hash\n         complexValidations[f.columnName].push({\n            filters: $$(f.view).getFilterHelper(),\n            // values: $$(ids.form).getValues(),\n            invalidMessage: f.invalidMessage,\n         });\n      });\n\n      const ids = this.ids;\n\n      // use the lookup to build the validation rules\n      Object.keys(complexValidations).forEach((key) => {\n         // get our field that has validation rules\n         const formField = $$(ids.form).queryView({\n            name: key,\n         });\n\n         // store the rules in a data param to be used later\n         formField.$view.complexValidations = complexValidations[key];\n         // define validation rules\n         formField.define(\"validate\", function (nval, oval, field) {\n            // get field now that we are validating\n            const fieldValidating = $$(ids.form).queryView({\n               name: field,\n            });\n\n            // default valid is true\n            let isValid = true;\n\n            // check each rule that was stored previously on the element\n            fieldValidating.$view.complexValidations.forEach((filter) => {\n               const object = dc.datasource;\n               const data = this.getValues();\n\n               // convert rowData from { colName : data } to { id : data }\n               const newData = {};\n\n               (object.fields() || []).forEach((field) => {\n                  newData[field.id] = data[field.columnName];\n               });\n\n               // for the case of \"this_object\" conditions:\n               if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n               // use helper funtion to check if valid\n               const ruleValid = filter.filters(newData);\n\n               // if invalid we need to tell the field\n               if (!ruleValid) {\n                  isValid = false;\n                  // we also need to define an error message\n                  fieldValidating.define(\n                     \"invalidMessage\",\n                     filter.invalidMessage\n                  );\n               }\n            });\n\n            return isValid;\n         });\n\n         formField.refresh();\n      });\n   }\n\n   async onShow(data) {\n      this.saveButton?.disable();\n\n      this._showed = true;\n\n      const baseView = this.view;\n\n      // call .onShow in the base component\n      const superComponent = baseView.superComponent();\n      await superComponent.onShow();\n\n      const $form = $$(this.ids.form);\n      const dc = this.datacollection;\n\n      if (dc) {\n         // clear current cursor on load\n         // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n         const settings = this.settings;\n\n         if (settings.clearOnLoad) {\n            dc.setCursor(null);\n         }\n\n         // pull data of current cursor\n         // await dc.waitReady();\n         const rowData = dc.getCursor();\n\n         if ($form) dc.bind($form);\n\n         // do this for the initial form display so we can see defaults\n         await this.displayData(rowData);\n      }\n      // show blank data in the form\n      else await this.displayData(data ?? {});\n\n      //Focus on first focusable component\n      this.focusOnFirst();\n\n      if ($form) $form.adjust();\n\n      // Load data of DCs that are use in record rules here\n      // no need to wait until they are done. (Let the save button enable)\n      // It will be re-check again when saving.\n      baseView.loadDcDataOfRecordRules();\n\n      this.saveButton?.enable();\n   }\n\n   async displayData(rowData) {\n      // If setTimeout is already scheduled, no need to do anything\n      if (this.timerId) return;\n      else this.timerId = await timeout(80);\n\n      const baseView = this.view;\n      const customFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            // rich text\n            (comp instanceof ABViewFormTextbox &&\n               comp.settings.type === \"rich\") ||\n            (comp instanceof ABViewFormJson && comp.settings.type === \"filter\")\n      );\n\n      const normalFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormItem &&\n            !(comp instanceof ABViewFormCustom)\n      );\n\n      // Set default values\n      if (!rowData) {\n         customFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            // var colName = field.columnName;\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            const defaultRowData = {};\n\n            field.defaultValue(defaultRowData);\n            field.setValue($$(comp.ids.formItem), defaultRowData);\n\n            comp?.refresh?.(defaultRowData);\n         });\n\n         normalFields.forEach((f) => {\n            if (f.key === \"button\") return;\n\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            const colName = field.columnName;\n\n            // set value to each components\n            const values = {};\n\n            field.defaultValue(values);\n            $$(comp.ids.formItem)?.setValue(values[colName] ?? \"\");\n         });\n\n         // select parent data to default value\n         const dc = this.datacollection;\n         const linkDv = dc.datacollectionLink;\n\n         if (linkDv) {\n            const parentData = linkDv.getCursor();\n\n            this.displayParentData(parentData);\n         }\n      }\n\n      // Populate value to custom fields\n      else {\n         customFields.forEach((f) => {\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            f?.field()?.setValue($$(comp.ids.formItem), rowData);\n\n            comp?.refresh?.(rowData);\n         });\n\n         normalFields.forEach((f) => {\n            if (f.key === \"button\") return;\n\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n            //\n            if (f.key === \"datepicker\") {\n               // Not sure why, but the local format isn't applied correctly\n               // without a timeout here\n               setTimeout(() => {\n                  field.setValue($$(comp.ids.formItem), rowData);\n               }, 200);\n               return;\n            }\n\n            field.setValue($$(comp.ids.formItem), rowData);\n         });\n      }\n\n      this.timerId = null;\n   }\n\n   displayParentData(rowData) {\n      const dc = this.datacollection;\n\n      // If the cursor is selected, then it will not update value of the parent field\n      const currCursor = dc.getCursor();\n      if (currCursor) return;\n\n      const relationField = dc.fieldLink;\n      if (!relationField) return;\n\n      const baseView = this.view;\n      // Pull a component of relation field\n      const relationFieldCom = baseView.fieldComponents((comp) => {\n         if (!(comp instanceof ABViewFormItem)) return false;\n\n         return comp.field()?.id === relationField.id;\n      })[0];\n      if (!relationFieldCom) return;\n\n      const relationFieldView = baseView.viewComponents[relationFieldCom.id];\n      if (!relationFieldView) return;\n\n      const $relationFieldView = $$(relationFieldView.ids.formItem),\n         relationName = relationField.relationName();\n\n      // pull data of parent's dc\n      const formData = {};\n\n      formData[relationName] = rowData;\n\n      // set data of parent to default value\n      relationField.setValue($relationFieldView, formData);\n   }\n\n   detatch() {\n      // TODO: remove any handlers we have attached.\n   }\n\n   focusOnFirst() {\n      const baseView = this.view;\n\n      let topPosition = 0;\n      let topPositionId = \"\";\n\n      baseView.views().forEach((item) => {\n         if (item.key === \"textbox\" || item.key === \"numberbox\")\n            if (item.position.y === topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n      });\n\n      const childComponent = baseView.viewComponents[topPositionId];\n\n      if (childComponent && $$(childComponent.ids.formItem))\n         $$(childComponent.ids.formItem).focus();\n   }\n\n   get saveButton() {\n      return $$(this.ids.form)?.queryView({\n         view: \"button\",\n         type: \"form\",\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormConnectComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormConnect_${baseView.id}`,\n         Object.assign(\n            {\n               popup: \"\",\n               editpopup: \"\",\n            },\n            ids\n         )\n      );\n\n      this.addPageComponent = null;\n      this.editPageComponent = null;\n   }\n\n   get field() {\n      return this.view.field();\n   }\n\n   get multiselect() {\n      return this.field?.settings.linkType == \"many\";\n   }\n\n   ui() {\n      const field = this.field;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = this.settings;\n\n      if (!field) {\n         console.error(`This field could not found : ${settings.fieldId}`);\n\n         return super.ui({\n            view: \"label\",\n            label: \"\",\n         });\n      }\n\n      const multiselect = this.multiselect; // field.settings.linkType == \"many\";\n      const formSettings = form?.settings || {};\n      const ids = this.ids;\n\n      let _ui = {\n         id: ids.formItem,\n         view: multiselect ? \"multicombo\" : \"combo\",\n         name: field.columnName,\n         required:\n            field?.settings?.required || parseInt(settings?.required) || false,\n         // label: field.label,\n         // labelWidth: settings.labelWidth,\n         dataFieldId: field.id,\n         on: {\n            onItemClick: (id, e) => {\n               if (\n                  e.target.classList.contains(\"editConnectedPage\") &&\n                  e.target.dataset.itemId\n               ) {\n                  const rowId = e.target.dataset.itemId;\n                  if (!rowId) return;\n                  this.goToEditPage(rowId);\n               }\n            },\n            onChange: (data) => {\n               this._onChange(data);\n            },\n         },\n      };\n\n      if (formSettings.showLabel) {\n         _ui.label = field.label;\n         _ui.labelWidth = formSettings.labelWidth;\n         _ui.labelPosition = formSettings.labelPosition;\n      }\n\n      this.initAddEditTool();\n\n      _ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            data: [],\n            template: `${\n               baseView?.settings?.editForm\n                  ? '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>'\n                  : \"\"\n            }#value#`,\n         },\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.formItem), field, form);\n            },\n         },\n         // Support partial matches\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n      };\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            if (settings.disable === 1) return;\n\n            const rowData = {};\n            const $formItem = $$(ids.formItem);\n\n            if ($formItem) {\n               const node = $formItem.$view;\n\n               field.customEdit(rowData, /* App,*/ node);\n            }\n         },\n      };\n\n      let apcUI = this.addPageComponent?.ui;\n      if (apcUI) {\n         // reset some component vals to make room for button\n         _ui.label = \"\";\n         _ui.labelWidth = 0;\n\n         // add click event to add new button\n         apcUI.on = {\n            onItemClick: (/*id, evt*/) => {\n               // let $form = $$(id).getFormView();\n               this.addPageComponent?.onClick(form.datacollection);\n\n               return false;\n            },\n         };\n\n         if (_ui.labelPosition == \"top\") {\n            _ui.labelPosition = \"left\";\n            _ui = {\n               inputId: ids.formItem,\n               rows: [\n                  {\n                     view: \"label\",\n                     label: field.label,\n                     // height: 22,\n                     align: \"left\",\n                  },\n                  {\n                     cols: [apcUI, _ui],\n                  },\n               ],\n            };\n         } else {\n            _ui = {\n               inputId: ids.formItem,\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: field.label,\n                           width: formSettings.labelWidth,\n                           align: \"left\",\n                        },\n                        apcUI,\n                        _ui,\n                     ],\n                  },\n               ],\n            };\n         }\n\n         _ui = super.ui(_ui);\n      } else {\n         _ui = {\n            inputId: ids.formItem,\n            rows: [_ui],\n         };\n\n         _ui = super.ui(_ui);\n\n         delete _ui.rows[0].id;\n      }\n\n      return _ui;\n   }\n\n   async _onChange(data) {\n      const ids = this.ids;\n      const field = this.field;\n      const baseView = this.view;\n\n      if (this.multiselect) {\n         if (typeof data == \"string\") {\n            data = data.split(\",\");\n         }\n      }\n\n      let selectedValues;\n      if (Array.isArray(data)) {\n         selectedValues = [];\n         data.forEach((record) => {\n            selectedValues.push(record.id || record);\n            // let recordObj = record;\n            // if (typeof record != \"object\") {\n            //    // we need to convert either index or uuid to full data object\n            //    recordObj = field.getItemFromVal(record);\n            // }\n            // if (recordObj?.id) selectedValues.push(recordObj.id);\n         });\n      } else {\n         selectedValues = data;\n         if (typeof data != \"object\") {\n            // we need to convert either index or uuid to full data object\n            selectedValues = field.getItemFromVal(data);\n         }\n         // selectedValues = field.pullRecordRelationValues(selectedValues);\n         if (selectedValues?.id) {\n            selectedValues = selectedValues.id;\n         } else {\n            selectedValues = data;\n         }\n      }\n\n      // We can now set the new value but we need to block event listening\n      // so it doesn't trigger onChange again\n      const $formItem = $$(ids.formItem);\n\n      // Q: if we don't have a $formItem, is any of the rest valid?\n      if ($formItem) {\n         // for xxx->one connections we need to populate again before setting\n         // values because we need to use the selected values to add options\n         // to the UI\n         if (this?.field?.settings?.linkViaType == \"one\") {\n            this.busy();\n            await field.getAndPopulateOptions(\n               $formItem,\n               baseView.options,\n               field,\n               baseView.parentFormComponent()\n            );\n            this.ready();\n         }\n\n         $formItem.blockEvent();\n\n         // store the user's selected option in local storage.\n         field.saveSelect(selectedValues);\n\n         const prepedVals = selectedValues.join\n            ? selectedValues.join()\n            : selectedValues;\n\n         $formItem.setValue(prepedVals);\n         $formItem.unblockEvent();\n      }\n   }\n\n   async init(AB, options) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if ($formItem) webix.extend($formItem, webix.ProgressBar);\n\n      this.initAddEditTool();\n   }\n\n   initAddEditTool() {\n      const baseView = this.view;\n\n      // Initial add/edit page tools\n      const addFormID = baseView?.settings?.formView;\n      if (addFormID && baseView && !this.addPageComponent) {\n         this.addPageComponent = baseView.addPageTool.component(\n            this.AB,\n            `${baseView.id}_${addFormID}`\n         );\n         this.addPageComponent.applicationLoad(baseView.application);\n         this.addPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n\n      const editFormID = baseView?.settings?.editForm;\n      if (editFormID && baseView && !this.editPageComponent) {\n         this.editPageComponent = baseView.editPageTool.component(\n            this.AB,\n            `${baseView.id}_${editFormID}`\n         );\n         this.editPageComponent.applicationLoad(baseView.application);\n         this.editPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n   }\n\n   async callbackSaveData(saveData) {\n      if (saveData == null) return;\n      else if (!Array.isArray(saveData)) saveData = [saveData];\n\n      const ids = this.ids;\n      const field = this.field;\n\n      // find the select component\n      const $formItem = $$(ids.formItem);\n      if (!$formItem) return;\n\n      // Refresh option list\n      this.busy();\n      field.clearStorage(this.view.settings.filterConditions);\n      const data = await field.getAndPopulateOptions(\n         $formItem,\n         this.view.options,\n         field,\n         this.view.parentFormComponent()\n      );\n      this.ready();\n\n      // field.once(\"option.data\", (data) => {\n      data.forEach((item) => {\n         item.value = item.text;\n      });\n\n      $formItem.getList().clearAll();\n      $formItem.getList().define(\"data\", data);\n\n      if (field.settings.linkType === \"many\") {\n         let selectedItems = $formItem.getValue();\n         saveData.forEach((sData) => {\n            if (selectedItems.indexOf(sData.id) === -1)\n               selectedItems = selectedItems\n                  ? `${selectedItems},${sData.id}`\n                  : sData.id;\n         });\n\n         $formItem.setValue(selectedItems);\n      } else {\n         $formItem.setValue(saveData[0].id);\n      }\n      // close the popup when we are finished\n      // $$(ids.popup)?.close();\n      // $$(ids.editpopup)?.close();\n      // });\n\n      // field.getOptions(this.settings.filterConditions, \"\");\n      // .then(function (data) {\n      //    // we need new option that will be returned from server (above)\n      //    // so we will not set this and then just reset it.\n      // });\n   }\n\n   callbackCancel() {\n      $$(this.ids?.popup)?.close?.();\n\n      return false;\n   }\n\n   callbackClearOnLoad() {\n      return true;\n   }\n\n   getValue(rowData) {\n      return this.field.getValue($$(this.ids.formItem), rowData);\n   }\n\n   formBusy($form) {\n      if (!$form) return;\n\n      $form.disable?.();\n      $form.showProgress?.({ type: \"icon\" });\n   }\n\n   formReady($form) {\n      if (!$form) return;\n\n      $form.enable?.();\n      $form.hideProgress?.();\n   }\n\n   goToEditPage(rowId) {\n      const settings = this.settings;\n\n      if (!settings.editForm) return;\n\n      const editForm = this.view.application.urlResolve(settings.editForm);\n\n      if (!editForm) return;\n\n      const $form = $$(this.ids.formItem).getFormView() || null;\n\n      // Open the form popup\n      this.editPageComponent.onClick().then(() => {\n         const dc = editForm.datacollection;\n\n         if (dc) {\n            dc.setCursor(rowId);\n\n            this.__editFormDcEvent =\n               this.__editFormDcEvent ||\n               dc.on(\"initializedData\", () => {\n                  dc.setCursor(rowId);\n               });\n         }\n      });\n   }\n\n   async onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const field = this.field;\n\n      if (!field) return;\n\n      const node = $formItem.$view;\n\n      if (!node) return;\n\n      const $node = $$(node);\n\n      if (!$node) return;\n\n      const settings = this.settings;\n      let filterConditions = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (settings?.filterConditions?.rules?.length) {\n         filterConditions = this.AB.cloneDeep(\n            this.view.settings.filterConditions\n         );\n      }\n\n      // NOTE: compatible with version 1. This code should not be here too long.\n      if (\n         !filterConditions?.rules?.length &&\n         settings?.objectWorkspace?.filterConditions?.rules?.length\n      ) {\n         filterConditions = this.AB.cloneDeep(\n            settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Add the filter connected value\n      if ((settings?.filterConnectedValue ?? \"\").indexOf(\":\") > -1) {\n         const values = settings.filterConnectedValue.split(\":\"),\n            uiConfigName = values[0],\n            connectFieldId = values[1];\n\n         filterConditions.rules.push({\n            key: connectFieldId,\n            rule: \"filterByConnectValue\",\n            value: uiConfigName,\n         });\n      }\n\n      const getFilterByConnectValues = (conditions, depth = 0) => {\n         return [\n            ...conditions.rules\n               .filter((e) => e.rule === \"filterByConnectValue\")\n               .map((e) => {\n                  const filterByConnectValue = Object.assign({}, e);\n\n                  filterByConnectValue.depth = depth;\n\n                  return filterByConnectValue;\n               }),\n         ].concat(\n            ...conditions.rules\n               .filter((e) => e.glue)\n               .map((e) => getFilterByConnectValues(e, depth + 1))\n         );\n      };\n\n      const baseView = this.view;\n      const filterByConnectValues = getFilterByConnectValues(\n         filterConditions\n      ).map((e) => {\n         for (const key in baseView.parent.viewComponents) {\n            if (\n               !(\n                  baseView.parent.viewComponents[key] instanceof\n                  this.constructor\n               )\n            )\n               continue;\n\n            const $ui = $$(\n               baseView.parent.viewComponents[key]\n                  .ui()\n                  .rows.find((vc) => vc.inputId)?.inputId\n            );\n\n            if ($ui?.config?.name === e.value) {\n               // we need to use the element id stored in the settings to find out what the\n               // ui component id is so later we can use it to look up its current value\n               e.filterValue = $ui;\n\n               break;\n            }\n         }\n\n         const ab = this.AB;\n         const field = ab\n            .objectByID(settings.objectId)\n            .fieldByID(settings.fieldId);\n         const linkedObject = ab.objectByID(field.settings.linkObject);\n         const linkedField = linkedObject.fieldByID(e.key);\n\n         if (linkedField?.settings?.isCustomFK) {\n            // finally if this is a custom foreign key we need the stored columnName by\n            // default uuid is passed for all non CFK\n            e.filterColumn = ab\n               .objectByID(linkedField.settings.linkObject)\n               .fields(\n                  (filter) =>\n                     filter.id === linkedField.settings.indexField ||\n                     linkedField.settings.indexField2\n               )[0].columnName;\n         } else e.filterColumn = null;\n\n         return e;\n      });\n\n      baseView.options = {\n         formView: settings.formView,\n         filters: filterConditions,\n         // NOTE: settings.objectWorkspace.xxx is a depreciated setting.\n         // We will be phasing this out.\n         sort: settings.sortFields ?? settings.objectWorkspace?.sortFields,\n         editable: settings.disable === 1 ? false : true,\n         editPage:\n            !settings.editForm || settings.editForm === \"none\" ? false : true,\n         filterByConnectValues,\n      };\n\n      // if this field's options are filtered off another field's value we need\n      // to make sure the UX helps the user know what to do.\n      // fetch the options and set placeholder text for this view\n      if (baseView.options.editable) {\n         const parentFields = [];\n\n         filterByConnectValues.forEach((fv) => {\n            if (fv.filterValue && fv.key) {\n               const $filterValueConfig = $$(fv.filterValue.config.id);\n\n               let parentField = null;\n\n               if (!$filterValueConfig) {\n                  // this happens in the Interface Builder when only the single form UI is displayed\n                  parentField = {\n                     id: \"perentElement\",\n                     label: this.label(\"PARENT ELEMENT\"),\n                  };\n               } else {\n                  const value = field.getValue($filterValueConfig);\n\n                  if (!value) {\n                     // if there isn't a value on the parent select element set this one to readonly and change placeholder text\n                     parentField = {\n                        id: fv.filterValue.config.id,\n                        label: $filterValueConfig.config.label,\n                     };\n                  }\n\n                  $filterValueConfig.attachEvent(\n                     \"onChange\",\n                     async (e) => {\n                        const parentVal = $filterValueConfig.getValue();\n\n                        if (parentVal) {\n                           $node.define(\"disabled\", false);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Select items\")\n                           );\n                           this.busy();\n                           await field.getAndPopulateOptions(\n                              $node,\n                              baseView.options,\n                              field,\n                              baseView.parentFormComponent()\n                           );\n                           this.ready();\n                        } else {\n                           $node.define(\"disabled\", true);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Must select item from '{0}' first.\", [\n                                 $filterValueConfig.config.label,\n                              ])\n                           );\n                        }\n\n                        // TODO: Do we need to clear selected value?\n                        // $node.setValue(\"\");\n                        $node.refresh();\n                     },\n                     false\n                  );\n               }\n\n               if (\n                  parentField &&\n                  parentFields.findIndex((e) => e.id === parentField.id) < 0\n               )\n                  parentFields.push(parentField);\n            }\n         });\n\n         if (parentFields.length && !$node.getValue()) {\n            $node.define(\"disabled\", true);\n            $node.define(\n               \"placeholder\",\n               this.label(`Must select item from '{0}' first.`, [\n                  parentFields.map((e) => e.label).join(\", \"),\n               ])\n            );\n         } else {\n            $node.define(\"disabled\", false);\n            $node.define(\"placeholder\", this.label(\"Select items\"));\n         }\n      } else {\n         $node.define(\"placeholder\", \"\");\n         $node.define(\"disabled\", true);\n      }\n\n      $node.refresh();\n\n      // Add data-cy attributes\n      const dataCy = `${field.key} ${field.columnName} ${field.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      this.busy();\n      try {\n         await field.getAndPopulateOptions(\n            // $node,\n            $formItem,\n            baseView.options,\n            field,\n            baseView.parentFormComponent()\n         );\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context:\n               \"ABViewFormConnectComponent > onShow() error calling field.getAndPopulateOptions\",\n         });\n      }\n      this.ready();\n\n      // Need to refresh selected values when they are custom index\n      this._onChange($formItem.getValue());\n   }\n\n   busy() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.disable();\n      $formItem?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.enable();\n      $formItem?.hideProgress?.();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst FocusableTemplate = require(\"../../../../webix_custom_components/focusableTemplate\");\n\nconst DEFAULT_HEIGHT = 80;\n\nmodule.exports = class ABViewFormCustomComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCustom_${baseView.id}`, ids);\n   }\n\n   get new_width() {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = baseView.settings ?? {};\n\n      let newWidth = formSettings.labelWidth;\n\n      if (settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      return newWidth;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = field?.settings ?? baseView.settings ?? {};\n\n      const requiredClass =\n         field?.settings?.required || this.settings.required\n            ? \"webix_required\"\n            : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"box-sizing: border-box; display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"box-sizing: border-box; width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 8px 0 0; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let height = 38;\n      let width = this.new_width;\n\n      if (typeof field == \"undefined\") {\n         console.warn(\n            `BaseView[${baseView.id}] returned an undefined field()`,\n            baseView.toObj()\n         );\n      }\n\n      if (field instanceof ABFieldImage) {\n         if (settings.useHeight) {\n            if (formSettings.labelPosition === \"top\") {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n               height += 38;\n            } else {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n            }\n         } else if (formSettings.labelPosition === \"top\") {\n            height = DEFAULT_HEIGHT + 38;\n         } else {\n            if (DEFAULT_HEIGHT > 38) {\n               height = DEFAULT_HEIGHT;\n            }\n         }\n         width =\n            settings.useWidth && settings.imageWidth ? settings.imageWidth : 0;\n      } else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         height = DEFAULT_HEIGHT;\n\n      let template = `<div class=\"customField ${formSettings.labelPosition}\">${\n         formSettings.labelPosition == \"top\" ? \"\" : templateLabel\n      }#template#</div>`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field?.label ?? \"\")\n         .replace(\n            /#template#/g,\n            field\n               ?.columnHeader({\n                  width: width,\n                  height: height,\n                  editable: true,\n               })\n               .template({}) ?? \"\"\n         );\n\n      if (settings.useWidth == 0) {\n         template = template.replace(\n            /\"ab-image-data-field\" style=\"float: left; width: 100%/g,\n            '\"ab-image-data-field\" style=\"float: left; width: calc(100% - ' +\n               formSettings.labelWidth +\n               \"px)\"\n         );\n      }\n\n      return super.ui({\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         css: \"ab-custom-field\",\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            view: new FocusableTemplate(this.AB._App).key,\n            css: \"customFieldCls\",\n            borderless: true,\n            template: template,\n            height: height,\n            onClick: {\n               customField: (evt, e, trg) => {\n                  if (settings.disable === 1) return;\n\n                  let rowData = {};\n\n                  const formView =\n                     this?.parentFormComponent?.() ||\n                     this.view?.parentFormComponent?.();\n\n                  if (formView) {\n                     const dv = formView.datacollection;\n                     if (dv) rowData = dv.getCursor() || {};\n                  }\n\n                  // var node = $$(ids.formItem).$view;\n                  let node = $$(trg).getParentView().$view;\n                  field?.customEdit(\n                     rowData,\n                     this.AB_App,\n                     node,\n                     this.ids.formItem,\n                     evt\n                  );\n               },\n            },\n         },\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const baseView = this.view;\n      const field = baseView.field(),\n         rowData = {},\n         node = $formItem.$view;\n\n      // Add data-cy attributes\n      const dataCy = `${baseView.key} ${field.key} ${field.columnName} ${baseView.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      const options = {\n         formId: ids.formItem,\n         editable: baseView.settings.disable === 1 ? false : true,\n      };\n\n      if (field instanceof ABFieldImage) {\n         options.height = field.settings.useHeight\n            ? parseInt(field.settings.imageHeight) || DEFAULT_HEIGHT\n            : DEFAULT_HEIGHT;\n         options.width = field.settings.useWidth\n            ? parseInt(field.settings.imageWidth) || 0\n            : 0;\n      }\n\n      field.customDisplay(rowData, this.AB._App, node, options);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormDatepickerComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormDatepicker_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const field = this.view.field();\n\n      const _ui = {\n         view: \"datepicker\",\n         suggest: {\n            body: {\n               view:\n                  this.AB.Account?._config?.languageCode == \"th\"\n                     ? \"thaicalendar\"\n                     : \"calendar\",\n               type: field.settings?.dateFormat === 1 ? \"time\" : \"\",\n               timepicker:\n                  field.key === \"datetime\" && field.settings?.timeFormat !== 1\n                     ? true\n                     : false,\n               editable: true,\n               on: {\n                  onAfterDateSelect: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onTodaySet: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onDateClear: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n               },\n            },\n            on: {\n               onShow: function () {\n                  const text = this.getMasterValue();\n                  const field = self.view.field();\n                  if (!text || !field) return true;\n\n                  const vals = {};\n                  vals[field.columnName] = text;\n                  const date = self.getValue(vals);\n\n                  const $calendar = this.getChildViews()[0];\n                  $calendar.setValue(date);\n               },\n            },\n         },\n      };\n\n      if (!field) return _ui;\n\n      // Ignore date - Only time picker\n      if (field.settings?.dateFormat === 1) _ui.type = \"time\";\n\n      // Date & Time picker\n      if (field.key === \"datetime\" && field.settings?.timeFormat !== 1)\n         _ui.timepicker = true;\n\n      // allows entering characters in datepicker input, false by default\n      _ui.editable = true;\n\n      // default value\n      if (_ui.value && !(_ui.value instanceof Date))\n         _ui.value = new Date(_ui.value);\n\n      // if we have webix locale set, will use the date format form there.\n      if (!window.webixLocale) _ui.format = field.getFormat();\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const text = rowData[field.columnName];\n      if (!field || !text) return null;\n\n      // Sentry Fix: caught an error where this.AB was not set, but this.view was...\n      // attempt to catch this situation and post more data:\n      if (!this.AB) {\n         if (this.view.AB) {\n            this.AB = this.view.AB;\n         } else {\n            let errNoAB = new Error(\n               \"ABViewFormDatePicerComponent:getValue(): AB was not set.\"\n            );\n            // sentry logs the console before the error, so dump the offending view here:\n            console.log(\"view:\", JSON.stringify(this.view.toObj()));\n            throw errNoAB;\n         }\n      }\n      // NOTE: if we are using the Thai language we force the format to be \"%d/%m/%Y\" in th-TH.js:13\n      //       so we have to use that format here\n      let dateVal = this.AB.Webix.Date.strToDate(field.getFormat())(text);\n      if (this.AB.Account?._config?.languageCode == \"th\") {\n         dateVal = this.AB.Webix.Date.strToDate(\"%j/%m/%Y\")(text);\n      }\n      const date = dateVal;\n\n      if (\n         this.AB.Account?._config?.languageCode == \"th\" &&\n         field.settings?.dateFormat !== 1\n      )\n         date.setFullYear(date.getFullYear() - 543);\n\n      return date;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewFormItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormItem_${baseView.id}`,\n         Object.assign({ formItem: \"\" }, ids)\n      );\n   }\n\n   ui(uiFormItemComponent = {}) {\n      // setup 'label' of the element\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field?.() || null,\n         label = \"\";\n      const settings = form?.settings || {};\n      const _uiFormItem = {\n         id: this.ids.formItem,\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label,\n      };\n\n      if (field) {\n         _uiFormItem.name = field.columnName;\n\n         // default value\n         const data = {};\n\n         field.defaultValue(data);\n\n         if (data[field.columnName]) _uiFormItem.value = data[field.columnName];\n\n         if (settings.showLabel) _uiFormItem.label = field.label;\n\n         if (field.settings.required || baseView.settings?.required)\n            _uiFormItem.required = 1;\n\n         if (baseView.settings?.disable === 1) _uiFormItem.disabled = true;\n\n         // add data-cy to form element for better testing code\n         _uiFormItem.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  const popup = this.getPopup();\n\n                  if (!popup) return;\n\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n\n                     // our option.ids are based on builder input and can include the ' character\n                     const node = popup.$view.querySelector(\n                        `[webix_l_id='${(option?.id ?? \"\")\n                           .toString()\n                           .replaceAll(\"'\", \"\\\\'\")}']`\n                     );\n\n                     if (!node) return;\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${\n                           form?.id || \"nf\"\n                        }`\n                     );\n                  });\n               }\n\n               this.getInputNode?.().setAttribute?.(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${\n                     form?.id || \"nf\"\n                  }`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _uiFormItem.validate = (val, data, colName) => {\n            const validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n\n      const _ui = super.ui([\n         Object.assign({}, _uiFormItem, uiFormItemComponent),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormJsonComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormJson_${baseView.id}`, ids);\n      if (this.settings.type == \"filter\") {\n         this.rowFilter = this.AB.filterComplexNew(\n            `${baseView.id}_filterComplex`,\n            {\n               isSaveHidden: true,\n               height: 300,\n               borderless: false,\n               showObjectName: true,\n            }\n         );\n      }\n   }\n\n   getFilterField(instance) {\n      if (\n         instance?.settings?.filterField &&\n         instance?.view?.parent?.viewComponents\n      ) {\n         let filterField = \"\";\n         for (const [key, value] of Object.entries(\n            instance.view.parent.viewComponents\n         )) {\n            if (value.settings.fieldId == instance.settings.filterField) {\n               filterField = value;\n            }\n         }\n\n         if (filterField?.ids?.formItem) {\n            return filterField.ids.formItem;\n         } else {\n            return \"\";\n         }\n      } else {\n         return \"\";\n      }\n   }\n\n   get getSystemObjects() {\n      // get list of all objects in the app\n      let objects = this.AB.objects();\n      // reformat objects into simple array for Webix multicombo\n      // if you do not the data causes a maximum stack error\n      let objectsArray = [];\n      objects.forEach((obj) => {\n         objectsArray.push({ id: obj.id, label: obj.label });\n      });\n      // return the simple array\n      return objectsArray;\n   }\n\n   refreshFilter(values) {\n      if (values) {\n         let fieldDefs = [];\n         values.forEach((obj) => {\n            let object = this.AB.objectByID(obj);\n            let fields = object.fields();\n            if (fields.length) {\n               fields.forEach((f) => {\n                  fieldDefs.push(f);\n               });\n            }\n         });\n         this.rowFilter.fieldsLoad(fieldDefs);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      } else {\n         this.rowFilter.fieldsLoad([]);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      }\n   }\n\n   getValue() {\n      return this.rowFilter.getValue();\n   }\n\n   setValue(formVals) {\n      $$(this.ids.formItem).config.value = formVals;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"string\":\n            _ui.view = \"textarea\";\n            _ui.disabled = true;\n            _ui.height = 200;\n            _ui.format = {\n               parse: function (parsed) {\n                  try {\n                     parsed = JSON.parse(parsed);\n                  } catch (err) {\n                     // already parsed\n                  }\n                  return parsed;\n               },\n               edit: function (stringify) {\n                  try {\n                     stringify = JSON.stringify(stringify);\n                  } catch (err) {\n                     // already a string\n                  }\n                  return stringify;\n               },\n            };\n            break;\n         case \"systemObject\":\n            _ui.view = \"multicombo\";\n            _ui.placeholder = this.label(\"Select one or more system objects\");\n            _ui.button = false;\n            _ui.stringResult = false;\n            _ui.suggest = {\n               selectAll: true,\n               body: {\n                  data: this.getSystemObjects,\n                  template: webix.template(\"#label#\"),\n               },\n            };\n            break;\n         case \"filter\":\n            _ui.view = \"forminput\";\n            _ui.css = \"ab-custom-field\";\n            _ui.body = this.rowFilter.ui;\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   init() {\n      // if (this.settings.type == \"filter\") {\n      //    this.rowFilter.init({ showObjectName: true });\n      // }\n   }\n\n   onShow() {\n      const _ui = this.ui();\n      if (this?.settings?.type == \"filter\") {\n         let filterField = this.getFilterField(this);\n         if (!$$(filterField)) return;\n         $$(filterField).detachEvent(\"onChange\");\n         $$(filterField).attachEvent(\"onChange\", (values) => {\n            this.refreshFilter(values);\n         });\n         this.rowFilter.init({ showObjectName: true });\n         this.rowFilter.on(\"changed\", (val) => {\n            this.setValue(val);\n         });\n         if ($$(this.ids.formItem).config.value) {\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n         } else {\n            this.rowFilter.setValue(\"\");\n         }\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst NumberTextInput = require(\"../../../../webix_custom_components/numbertext\");\n\nmodule.exports = class ABViewFormNumberComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormNumber_${baseView.id}`, ids);\n\n      this._numberTextInputKey = null;\n   }\n\n   get numberTextInputKey() {\n      return (this._numberTextInputKey =\n         this._numberTextInputKey || new NumberTextInput(this.AB._App).key);\n   }\n\n   ui() {\n      return super.ui({\n         view: this.settings.isStepper ? \"counter\" : this.numberTextInputKey,\n         type: \"number\",\n         validate: (val) => !isNaN(val * 1),\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormReadonlyComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormReadonly_${baseView.id}`,\n         Object.assign(\n            {\n               template: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         readonly: true,\n         css: \"ab-readonly-field\",\n         // name: component.ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            id: this.ids.template,\n            view: \"label\",\n            borderless: true,\n            css: { \"background-color\": \"#fff\" },\n            label: \"\",\n         },\n      };\n\n      const settings = baseView.parentFormComponent().settings || {};\n\n      if (settings.showLabel == true && settings.labelPosition == \"top\") {\n         _ui.body.height = 80;\n      } else if (field.settings.useHeight) {\n         _ui.body.height = parseInt(field.settings.imageHeight) || 38;\n      } else _ui.body.height = 38;\n\n      return super.ui(_ui);\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n      $form?.attachEvent(\"onChange\", (newv, oldv) => {\n         const rowData = $form?.getValues() ?? {};\n\n         this.refresh(rowData);\n      });\n   }\n\n   onShow() {\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      if (!field) return null;\n\n      return rowData[field.columnName];\n   }\n\n   refresh(rowData) {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field();\n\n      const formSettings = form.settings || {};\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label\">${field.label}</label>`;\n         else\n            templateLabel = `<label style=\"width: ${formSettings.labelWidth}px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\">${field.label}</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      const template =\n         `<div class=\"readonlyField\">${templateLabel}#template#</div>`.replace(\n            /#template#/g,\n            field\n               .columnHeader({\n                  width: newWidth,\n                  editable: true,\n               })\n               .template(rowData)\n         );\n\n      // Re-build template element\n      $$(this.ids.template)?.setHTML(template);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectMultipleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectMultiple_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = this.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n\n      const ids = this.ids;\n      const _ui = {\n         id: ids.formItem,\n         view: settings.type || baseView.constructor.defaultValues().type,\n         options: options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n\n      switch (_ui.view) {\n         case \"multicombo\":\n            _ui.tagMode = false;\n            _ui.css = \"hideWebixMulticomboTag\";\n            _ui.tagTemplate = (values) => {\n               const selectedOptions = [];\n               const $formItem = $$(ids.formItem) ?? $$(_ui.id);\n\n               values.forEach((val) => {\n                  selectedOptions.push($formItem.getList().getItem(val));\n               });\n\n               let vals = selectedOptions;\n\n               if (field.getSelectedOptions)\n                  vals = field.getSelectedOptions(field, selectedOptions);\n\n               const items = [];\n\n               vals.forEach((val) => {\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (field.settings.hasColors && val.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${val.hex};`;\n                  }\n\n                  const text = val.text ? val.text : val.value;\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${val.id}\"><span>${text}</span><span class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span></span>`\n                  );\n               });\n\n               return items.join(\"\");\n            };\n\n            break;\n\n         case \"checkbox\":\n            // radio element could not be empty options\n            _ui.options.push({\n               id: \"temp\",\n               value: this.label(\"Option\"),\n            });\n\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field(),\n         $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectSingleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectSingle_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = baseView.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n      else options.push(...(settings.options ?? []));\n\n      const _ui = {\n         view: settings.type || baseView.constructor.defaultValues().type,\n      };\n\n      if (field?.settings.hasColors) {\n         _ui.css = \"combowithcolors\";\n         _ui.options = {\n            view: \"suggest\",\n            body: {\n               view: \"list\",\n               data: options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text || opt.value,\n                     hex: field.settings.hasColors ? opt.hex : \"\",\n                  };\n               }),\n               template: function (value) {\n                  const items = [];\n\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (value.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${value.hex};`;\n                  }\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${value.value}</span></span>`\n                  );\n\n                  return items.join(\"\");\n               },\n            },\n         };\n      } else\n         _ui.options = options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text || opt.value,\n            };\n         });\n\n      // radio element could not be empty options\n      if (_ui.view === \"radio\" && _ui.options.length < 1)\n         _ui.options.push({\n            id: \"temp\",\n            value: this.label(\"Option\"),\n         });\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTextboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTextbox_${baseView.id}`, ids);\n      this.type =\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (this.type) {\n         case \"single\":\n            _ui.view = \"text\";\n            break;\n         case \"multiple\":\n            _ui.view = \"textarea\";\n            _ui.height = 200;\n            break;\n         case \"rich\":\n            _ui.view = \"forminput\";\n            _ui.height = 200;\n            _ui.css = \"ab-rich-text\";\n            _ui.body = {\n               view: \"tinymce-editor\",\n               value: \"\",\n               cdn: \"/js/webix/extras/tinymce\",\n               config: {\n                  plugins: \"link\",\n                  menubar: \"format edit\",\n                  toolbar:\n                     \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect | link\",\n               },\n            };\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   async onShow() {\n      if (this.type !== \"rich\") return;\n      await this.initTinyMCE();\n      const _ui = this.ui();\n      const _uiFormItem = _ui.rows[0];\n      let $formItem = $$(this.ids.formItem);\n\n      // WORKAROUND : to fix breaks TinyMCE when switch pages/tabs\n      // https://forum.webix.com/discussion/6772/switching-tabs-breaks-tinymce\n      if ($formItem) {\n         // recreate rich editor\n         $formItem = this.AB.Webix.ui(_uiFormItem, $formItem);\n\n         // Add dataCy to TinyMCE text editor\n         const baseView = this.view;\n\n         $formItem\n            .getChildViews()[0]\n            .getEditor(true)\n            .then((editor) => {\n               const dataCy = `${baseView.key} rich ${_uiFormItem.name} ${\n                  baseView.id ?? \"\"\n               } ${baseView.parent?.id ?? \"\"}`;\n\n               editor.contentAreaContainer.setAttribute(\"data-cy\", dataCy);\n            });\n      }\n   }\n\n   /**\n    * Ensure TinyMCE has been loaded and initialized.\n    */\n   async initTinyMCE() {\n      await this.AB.custom[\"tinymce-editor\"].init();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTreeComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTree_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {};\n\n      // this field may be deleted\n      if (!field) return super.ui(_ui);\n\n      const formSettings = baseView.parentFormComponent().settings || {};\n\n      const requiredClass =\n         field.settings.required === 1 ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n\n      const template = `${templateLabel}#template#`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field.columnHeader({\n               width: newWidth,\n            }).template\n         );\n\n      _ui.view = \"template\";\n      _ui.css = \"webix_el_box\";\n      _ui.height =\n         field.settings.useHeight === 1\n            ? parseInt(field.settings.imageHeight)\n            : 38;\n      _ui.borderless = true;\n\n      _ui.template = `<div class=\"customField\">${template}</div>`;\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            const rowData = {},\n               node = $$(this.ids.formItem).$view;\n\n            rowData[field.columnName] = this.getValue();\n            field.customEdit(rowData, this.AB._App, node, this);\n         },\n      };\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      let vals = $$(this.ids.formItem).getValues();\n\n      // Pass empty string if the returned values is empty array\n      if (Array.isArray(vals) && vals.length === 0) vals = \"\";\n\n      return vals;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewImageComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewImage_${baseView.id}`,\n         Object.assign({ image: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  id: this.ids.image,\n                  view: \"template\",\n                  template: \"\",\n                  height: settings.height,\n                  width: settings.width,\n               },\n               {},\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $image = $$(this.ids.image);\n      if (!$image) return;\n\n      const settings = this.settings;\n\n      if (settings.filename)\n         $image.define(\n            \"template\",\n            `<img src=\"/file/${settings.filename}\" height=\"${settings.height}\" width=\"${settings.width}\">`\n         );\n      else $image.define(\"template\", \"\");\n\n      $image.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFormSidePanel = require(\"../ABViewKanbanFormSidePanel\");\n\nmodule.exports = class ABViewKanbanComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewKanBan_${baseView.id}`,\n         Object.assign(\n            {\n               kanbanView: \"\",\n\n               kanban: \"\",\n               resizer: \"\",\n               formSidePanel: \"\",\n            },\n            ids\n         )\n      );\n\n      this.FormSide = new ABFormSidePanel(\n         this,\n         this.ids.formSidePanel,\n         this.settings.editFields\n      );\n\n      this.CurrentVerticalField = null;\n      this.CurrentHorizontalField = null;\n      this.CurrentOwnerField = null;\n\n      this.TextTemplate = baseView.TextTemplate;\n\n      this._updatingOwnerRowId = null;\n      this._ABFieldConnect = null;\n      this._ABFieldUser = null;\n      this._ABFieldList = null;\n   }\n\n   get ABFieldConnect() {\n      return (this._ABFieldConnect =\n         this._ABFieldConnect ||\n         this.AB.Class.ABFieldManager.fieldByKey(\"connectObject\"));\n   }\n\n   get ABFieldUser() {\n      return (this._ABFieldUser =\n         this._ABFieldUser || this.AB.Class.ABFieldManager.fieldByKey(\"user\"));\n   }\n\n   get ABFieldList() {\n      return (this._ABFieldList =\n         this._ABFieldList || this.AB.Class.ABFieldManager.fieldByKey(\"list\"));\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      this.linkPage = this.view.linkPageHelper.component();\n\n      const _ui = super.ui([\n         {\n            id: ids.kanbanView,\n            cols: [\n               {\n                  id: ids.kanban,\n                  view: \"kanban\",\n                  cols: [],\n                  userList: {\n                     view: \"menu\",\n                     // yCount: 8,\n                     // scroll: false,\n                     template: '<i class=\"fa fa-user\"></i> #value#',\n                     width: 150,\n                     on: {\n                        onSelectChange: function () {\n                           // get this row id from onAvatarClick event\n                           if (!self._updatingOwnerRowId) return;\n\n                           const userId = this.getSelectedId(false);\n                           if (!userId) return;\n\n                           self.updateOwner(self._updatingOwnerRowId, userId);\n                        },\n                     },\n                  },\n                  editor: false, // we use side bar\n                  users: [],\n                  tags: [],\n                  data: [],\n                  on: {\n                     onListAfterSelect: (itemId, list) => {\n                        this.CurrentDatacollection?.setCursor(itemId);\n                        this.emit(\"select\", itemId);\n\n                        // link pages events\n                        const editPage = this.settings.editPage;\n                        if (editPage)\n                           this.linkPage.changePage(editPage, itemId);\n\n                        const detailsPage = this.settings.detailsPage;\n                        if (detailsPage)\n                           this.linkPage.changePage(detailsPage, itemId);\n                     },\n                     onAfterStatusChange: (rowId, status /*, list */) => {\n                        this.updateStatus(rowId, status);\n                     },\n                     onAvatarClick: (rowId /*, ev, node, list */) => {\n                        // keep this row id for update owner data in .userList\n                        this._updatingOwnerRowId = rowId;\n                     },\n                  },\n               },\n               {\n                  id: ids.resizer,\n                  view: \"resizer\",\n                  css: \"bg_gray\",\n                  width: 11,\n                  hidden: true,\n               },\n               this.FormSide.ui(),\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const abWebix = this.AB.Webix;\n\n      if (this.$kb) abWebix.extend(this.$kb, abWebix.ProgressBar);\n\n      this.FormSide.init(AB);\n      this.FormSide.on(\"add\", (newVals) => {\n         this.saveData(newVals);\n      });\n      this.FormSide.on(\"update\", (updateVals) => {\n         this.saveData(updateVals);\n      });\n\n      let dc = this.view.datacollection;\n      if (dc) this.datacollectionLoad(dc);\n\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      this.show();\n   }\n\n   get $kb() {\n      return (this._kb = this._kb || $$(this.ids.kanban));\n   }\n\n   kanbanListTemplate() {\n      return {\n         icons: [\n            // { icon: \"mdi mdi-comment\", show: function (obj) { return !!obj.comments }, template: \"#comments.length#\" },\n            {\n               icon: \"fa fa-trash-o\",\n               click: (rowId /*, e */) => {\n                  this.removeCard(rowId);\n               },\n            },\n         ],\n         // avatar template\n         templateAvatar: (obj) => {\n            if (\n               this.CurrentOwnerField &&\n               obj[this.CurrentOwnerField.columnName]\n            )\n               return this.CurrentOwnerField.format(obj);\n            else return \"<span class='webix_icon fa fa-user'></span>\";\n         },\n         // template for item body\n         // show item image and text\n         templateBody: (data) => {\n            // if (!this.settings.template)\n            if (!this.TextTemplate.text)\n               return this.CurrentObject?.displayData(data);\n\n            // return our default text template\n            return this.TextTemplate.displayText(data);\n         },\n      };\n   }\n\n   /**\n    * @function hide()\n    *\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.kanbanView)?.hide();\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   async show() {\n      const ids = this.ids;\n\n      $$(ids.kanbanView)?.show();\n\n      this.FormSide.hide();\n\n      $$(ids.resizer)?.hide();\n\n      var CurrentObject = this.CurrentObject;\n      if (!CurrentObject) {\n         CurrentObject = this.datacollection?.datasource;\n      }\n      if (!CurrentObject) return;\n\n      // Get vertical grouping field and populate to kanban list\n      // NOTE: this field should be the select list type\n      const CurrentVerticalField = CurrentObject.fieldByID(\n         this.settings.verticalGroupingField\n      );\n      if (!CurrentVerticalField) return;\n\n      this.CurrentVerticalField = CurrentVerticalField;\n\n      let horizontalOptions = [];\n\n      const CurrentHorizontalField = CurrentObject.fieldByID(\n         this.settings.horizontalGroupingField\n      );\n\n      this.CurrentHorizontalField = CurrentHorizontalField;\n\n      if (\n         CurrentHorizontalField &&\n         CurrentHorizontalField instanceof this.ABFieldConnect\n      )\n         // Pull horizontal options\n         horizontalOptions = await CurrentHorizontalField.getOptions();\n\n      // Option format -  { id: \"1543563751920\", text: \"Normal\", hex: \"#4CAF50\" }\n      const verticalOptions = (CurrentVerticalField.settings.options || []).map(\n         (opt) => {\n            // Vertical & Horizontal fields\n            if (CurrentVerticalField && CurrentHorizontalField) {\n               let rows = [],\n                  // [{\n                  //    id: '',\n                  //    text: ''\n                  // }]\n                  horizontalVals = [];\n\n               // pull options of the Horizontal field\n               if (CurrentHorizontalField instanceof this.ABFieldList) {\n                  // make a copy of the settings.\n                  horizontalVals = (\n                     CurrentHorizontalField.settings.options || []\n                  ).map((o) => o);\n               } else if (CurrentHorizontalField instanceof this.ABFieldUser) {\n                  horizontalVals = CurrentHorizontalField.getUsers().map(\n                     (u) => {\n                        return {\n                           id: u.id,\n                           text: u.text || u.value,\n                        };\n                     }\n                  );\n               } else if (CurrentHorizontalField instanceof this.ABFieldConnect)\n                  horizontalVals = horizontalOptions.map(({ id, text }) => ({\n                     id,\n                     text,\n                  }));\n\n               horizontalVals.push({\n                  id: null,\n                  text: this.label(\"Other\"),\n               });\n\n               horizontalVals.forEach((val) => {\n                  const statusOps = {};\n\n                  statusOps[CurrentVerticalField.columnName] = opt.id;\n                  statusOps[CurrentHorizontalField.columnName] = val.id;\n\n                  // Header\n                  rows.push({\n                     template: val.text,\n                     height: 20,\n                     css: \"progress_header\",\n                  });\n\n                  // Kanban list\n                  rows.push({\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  });\n               });\n\n               return {\n                  header: opt.text,\n                  body: {\n                     margin: 0,\n                     rows: rows,\n                  },\n               };\n            }\n            // Vertical field only\n            else if (CurrentVerticalField) {\n               const statusOps = {};\n\n               statusOps[CurrentVerticalField.columnName] = opt.id;\n\n               return {\n                  header: opt.text,\n                  body: {\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  },\n               };\n            }\n         }\n      );\n\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      // Rebuild kanban that contains options\n      // NOTE: webix kanban does not support dynamic vertical list\n      abWebix.ui(verticalOptions, $$(ids.kanban));\n      $$(ids.kanban).reconstruct();\n\n      // Owner field\n      const CurrentOwnerField = CurrentObject.fieldByID(\n         this.settings.ownerField\n      );\n\n      this.CurrentOwnerField = CurrentOwnerField;\n\n      if (CurrentOwnerField) {\n         const $menuUser = $$(ids.kanban).getUserList();\n\n         $menuUser.clearAll();\n\n         if (CurrentOwnerField instanceof this.ABFieldUser) {\n            const users = ab.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            });\n\n            $menuUser.parse(users);\n         } else if (CurrentOwnerField instanceof this.ABFieldConnect) {\n            const options = await CurrentOwnerField.getOptions();\n\n            try {\n               $menuUser.parse(\n                  options.map((opt) => {\n                     return {\n                        id: opt.id,\n                        value: opt.text,\n                     };\n                  })\n               );\n            } catch (e) {\n               // TODO: remove this.  Trying to catch a random webix error:\n               // Cannot read properties of null (reading 'driver')\n               console.error(e);\n               console.warn(options);\n            }\n         }\n      }\n   }\n\n   busy() {\n      this.$kb?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      this.$kb?.hideProgress?.();\n   }\n\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      this.TextTemplate.objectLoad(object);\n      this.FormSide.objectLoad(object);\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const DC = this.CurrentDatacollection || datacollection;\n\n      if (DC) {\n         DC.bind(this.$kb);\n\n         const obj = DC.datasource;\n\n         if (obj) this.objectLoad(obj);\n\n         return;\n      }\n\n      this.$kb.unbind();\n   }\n\n   async updateStatus(rowId, status) {\n      if (!this.CurrentVerticalField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n\n      // update multi-values\n      if (status instanceof Object) patch = status;\n      // update single value\n      else patch[this.CurrentVerticalField.columnName] = status;\n\n      // update empty value\n      let needRefresh = false;\n\n      for (const key in patch)\n         if (!patch[key]) {\n            patch[key] = \"\";\n\n            // WORKAROUND: if update data is empty, then it will need to refresh\n            // the kanban after update\n            needRefresh = true;\n         }\n\n      try {\n         await this.CurrentObject?.model().update(rowId, patch);\n\n         this.ready();\n\n         if (needRefresh) this.show();\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = $$(this.ids.kanban).getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateStatus(): Error saving item:\",\n            rowId,\n            patch,\n         });\n      }\n   }\n\n   async updateOwner(rowId, val) {\n      if (!this.CurrentOwnerField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      const patch = {};\n\n      patch[this.CurrentOwnerField.columnName] = val;\n\n      try {\n         const updatedRow = await this.CurrentObject?.model().update(\n            rowId,\n            patch\n         );\n\n         // update card\n         this.$kb?.updateItem(rowId, updatedRow);\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = this.$kb.getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n\n         this.ready();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateOwner(): Error saving item:\",\n            rowId,\n            val,\n         });\n\n         this.ready();\n      }\n   }\n\n   saveData(data) {\n      // update\n      if (data.id && this.$kb.exists(data.id))\n         this.$kb.updateItem(data.id, data);\n      // insert\n      else this.$kb.add(data);\n   }\n\n   unselect() {\n      if (this.$kb)\n         this.$kb.eachList((list /*, status*/) => {\n            list?.unselect?.();\n         });\n   }\n\n   addCard() {\n      this.unselect();\n\n      // show the side form\n      this.FormSide.show();\n      $$(this.ids.resizer).show();\n   }\n\n   async removeCard(rowId) {\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      abWebix.confirm({\n         title: this.label(\"Remove card\"),\n         text: this.label(\"Do you want to delete this card?\"),\n         callback: async (result) => {\n            if (!result) return;\n\n            this.busy();\n\n            try {\n               const response = await this.CurrentObject?.model().delete(rowId);\n\n               if (response.numRows > 0) {\n                  this.$kb.remove(rowId);\n               } else {\n                  abWebix.alert({\n                     text: this.label(\n                        \"No rows were effected. This does not seem right.\"\n                     ),\n                  });\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  message: \"ABViewKanban:removeCard(): Error deleting item:\",\n                  rowId,\n               });\n            }\n\n            this.ready();\n         },\n      });\n   }\n\n   /**\n    * @method setFields()\n    * Save the current view options.\n    * @param options - {\n    *       verticalGrouping:    {ABField} - required\n    *       horizontalGrouping:  {ABField} - optional\n    *       ownerField:          {ABField} - optional\n    * }\n    */\n   setFields(options) {\n      this.CurrentVerticalField = options.verticalGrouping;\n      this.CurrentHorizontalField = options.horizontalGrouping;\n      this.CurrentOwnerField = options.ownerField;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLabelComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLabel_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      const _ui = super.ui([\n         this.uiFormatting({\n            view: \"label\",\n            // css: 'ab-component-header ab-ellipses-text',\n            label: baseView.text || \"*\",\n            align: this.settings.alignment,\n            type: {\n               height: \"auto\",\n            },\n         }),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   /**\n    * @method uiFormatting\n    * a common routine to properly update the displayed label\n    * UI with the css formatting for the given .settings\n    * @param {obj} _ui the current webix.ui definition\n    * @return {obj} a properly formatted webix.ui definition\n    */\n   uiFormatting(ui) {\n      // add different css settings based upon it's format\n      // type.\n      switch (parseInt(this.settings.format)) {\n         // normal\n         case 0:\n            ui.css = \"ab-component-label ab-ellipses-text\";\n            break;\n\n         // title\n         case 1:\n            ui.css = \"ab-component-header ab-ellipses-text\";\n            break;\n\n         // description\n         case 2:\n            ui.css = \"ab-component-description ab-ellipses-text\";\n            break;\n      }\n\n      return ui;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLayoutComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLayout_${baseView.id}`, ids);\n\n      const viewComponents = this.viewComponents ?? {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      baseView.views().forEach((v) => {\n         viewComponents[v.id] = v.component();\n      });\n\n      this.viewComponents = viewComponents;\n   }\n\n   ui() {\n      const viewComponents = this.viewComponents;\n      const uiComponents = Object.keys(viewComponents)\n         .map((vId) => viewComponents[vId].ui())\n         .filter((ui) => ui);\n\n      if (uiComponents.length == 0) {\n         uiComponents.push({});\n         uiComponents.push({\n            view: \"label\",\n            label: this.label(\"no content\"),\n         });\n         uiComponents.push({});\n      }\n\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            cols: uiComponents,\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      // make sure each of our child views get .init() called\n      baseView.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n\n         // initial sub-component\n         component?.init(AB, accessLevel);\n\n         // Trigger 'changePage' event to parent\n         baseView.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               baseView.changePage(pageId);\n            },\n         });\n      });\n   }\n\n   onShow() {\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n         component?.onShow();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewListComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewList_${baseView.id}`,\n         Object.assign({ list: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _uiList = {\n         id: this.ids.list,\n         view: \"dataview\",\n         type: {\n            width: 1000,\n            height: 30,\n         },\n         template: (item) => {\n            const field = this.view.field();\n\n            if (!field) return \"\";\n\n            return field.format(item);\n         },\n      };\n\n      // set height or autoHeight\n      if (settings.height !== 0) _uiList.height = settings.height;\n      else _uiList.autoHeight = true;\n\n      const _ui = super.ui([_uiList]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // bind dc to component\n      dc.bind($$(this.ids.list));\n      // $$(ids.list).sync(dv);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewMenuComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewMenu_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         parseInt(settings.menuInToolbar) ? this.uiToolbar() : this.uiMenu(),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiMenu() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const css = `${settings.buttonStyle || defaultSettings.buttonStyle} ${\n         settings.menuAlignment || defaultSettings.menuAlignment\n      } `;\n\n      return {\n         id: this.ids.menu,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout: settings.orientation || defaultSettings.orientation,\n         on: {\n            onMenuItemClick: (id /*, e, node */) => {\n               this.onClick(id);\n            },\n            onAfterRender: () => {\n               this.defineCypress();\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n   }\n\n   uiToolbar() {\n      const settings = this.settings;\n      const baseView = this.view;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const _uiMenu = this.uiMenu();\n\n      let elems = [];\n      let menuIncluded = false;\n\n      // Legacy support: use old settings values if translated values are not set\n      const menuTextLeft = baseView.menuTextLeft ?? settings.menuTextLeft;\n      const menuTextCenter = baseView.menuTextCenter ?? settings.menuTextCenter;\n      const menuTextRight = baseView.menuTextRight ?? settings.menuTextRight;\n\n      if (settings.menuPosition === \"left\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextLeft?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextLeft,\n            align: \"left\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"center\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextCenter?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push(\n            {},\n            {\n               view: \"label\",\n               label: menuTextCenter,\n               align: \"center\",\n               width: width,\n            },\n            {}\n         );\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"right\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextRight?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextRight,\n            align: \"right\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (menuIncluded === false) elems = [_uiMenu];\n\n      return {\n         view: \"toolbar\",\n         css: settings.menuTheme ?? defaultSettings.menuTheme,\n         padding: settings.menuPadding\n            ? parseInt(settings.menuPadding)\n            : defaultSettings.menuPadding,\n         elements: elems,\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $menu = $$(this.ids.menu);\n      const baseView = this.view;\n\n      if ($menu) {\n         const settings = this.settings;\n\n         baseView.ClearPagesInView($menu);\n\n         if (settings.order?.length) {\n            baseView.AddPagesToView($menu, settings.order);\n            // Force onAfterRender to fire\n            $menu.refresh();\n         }\n      }\n   }\n\n   onClick(itemId) {\n      const $menu = $$(this.ids.menu);\n      let $item;\n      try {\n         $item = $menu.getMenuItem(itemId);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context:\n               \"ABViewMenuComponent > onClick error gettint menu / menu item\",\n            itemId,\n            menu: {\n               id: this.view.id,\n               settings: this.view.settings,\n            },\n         });\n         return;\n      }\n      const baseView = this.view;\n\n      // switch tab view\n      if ($item.type === \"tab\") {\n         baseView.changePage($item.pageId);\n\n         const redirectPage = baseView.application.pages(\n            (p) => p.id === $item.pageId,\n            true\n         )[0];\n\n         if (!redirectPage) return;\n\n         const tabView = redirectPage.views((v) => v.id === $item.id, true)[0];\n\n         if (!tabView) return;\n\n         const tab = tabView.parent;\n\n         if (!tab) return;\n\n         this.toggleParent(tab);\n\n         // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n         const showIt = setInterval(() => {\n            if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n               clearInterval(showIt);\n\n               return;\n            }\n\n            tab.emit(\"changeTab\", tabView.id);\n         }, 100);\n         // }\n      }\n      // switch page\n      else baseView.changePage(itemId);\n   }\n\n   toggleParent(element) {\n      if (!element.parent) return false;\n\n      const parentElem = element.parent;\n\n      if (!parentElem?.parent) return false;\n\n      parentElem.parent.emit(\"changeTab\", parentElem.id);\n      this.toggleParent(parentElem.parent);\n   }\n\n   defineCypress() {\n      const $menu = $$(this.ids.menu);\n\n      if (!$menu) return;\n\n      $menu.data.each((item) => {\n         const node = $menu.getItemNode(item.id);\n\n         if (!node) return;\n\n         // get linked page/tab info so we can use its name in the data-cy\n         const viewInfo = this.AB.definitionByID(item.id);\n\n         node.setAttribute(\n            \"data-cy\",\n            `menu-item ${viewInfo?.name} ${item.id} ${this.view.id}`\n         );\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SMALL_PAGE_WIDTH = 150;\nconst BIG_PAGE_WIDTH = 250;\n\nmodule.exports = class ABViewPDFImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPDFImporter_${baseView.id}`,\n         Object.assign(\n            {\n               fileUploader: \"\",\n               uploadList: \"\",\n               dataview: \"\",\n               fullImagePopup: \"\",\n               fullImageCarousel: \"\",\n               fullImageSelectToggle: \"\",\n               fullImageLabel: \"\",\n               selectAll: \"\",\n               unselectAll: \"\",\n               submit: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const _ui = super.ui([\n         {\n            rows: [\n               {\n                  cols: [\n                     {\n                        id: ids.fileUploader,\n                        view: \"uploader\",\n                        name: \"records\",\n                        link: ids.uploadList,\n                        label: this.label(\"Upload a PDF file\"),\n                        inputWidth: 200,\n                        width: 210,\n                        accept: \"application/pdf\",\n                        multiple: false,\n                        autosend: false,\n                        type: \"icon\",\n                        icon: \"fa fa-file-pdf-o\",\n                        on: {\n                           onBeforeFileAdd: (fileInfo) => {\n                              this._csvFileInfo = fileInfo;\n                              if (!this._csvFileInfo) return false;\n\n                              this.loadFile();\n\n                              return true;\n                           },\n                        },\n                     },\n                     {\n                        id: ids.uploadList,\n                        view: \"list\",\n                        type: \"uploader\",\n                        autoheight: true,\n                        borderless: true,\n                        onClick: {\n                           webix_remove_upload: (e, id) => {\n                              this.removeFile(id);\n                           },\n                        },\n                     },\n                     {\n                        width: 10,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th-large\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displayBig();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displaySmall();\n                        },\n                     },\n                  ],\n               },\n               {\n                  height: 10,\n               },\n               {\n                  id: ids.dataview,\n                  view: \"dataview\",\n                  borderless: true,\n                  css: \"pdf-data-view\",\n                  multiselect: false,\n                  select: false,\n                  type: {\n                     template: (item) => {\n                        return this.pageTemplate(item);\n                     },\n                     width: \"auto\",\n                     height: \"auto\",\n                  },\n                  on: {\n                     onSelectChange: (pageIds) => {\n                        this.renderPageImages();\n                     },\n                     onItemClick: function (id, e, node) {\n                        // Unselect\n                        if (e?.target?.className?.includes?.(\"unselect-page\")) {\n                           self.unselect(id);\n                        }\n                        // Select\n                        else if (\n                           e?.target?.className?.includes?.(\"select-page\")\n                        ) {\n                           self.select(id);\n                        }\n                        // Zoom\n                        else if (e?.target?.className?.includes?.(\"pdf-zoom\")) {\n                           self._fullImagePopup.show();\n                           $$(self.ids.fullImageCarousel).setActiveIndex(\n                              parseInt(id ?? 0) - 1\n                           );\n                           self.refreshFullImage();\n                        }\n                     },\n                  },\n               },\n               {\n                  height: 10,\n               },\n               {\n                  cols: [\n                     {\n                        id: ids.selectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-check-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Select All\"),\n                        click: () => {\n                           this.selectAll();\n                        },\n                     },\n                     {\n                        id: ids.unselectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Unselect All\"),\n                        click: () => {\n                           this.unselectAll();\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.submit,\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-floppy-o\",\n                        disabled: true,\n                        maxWidth: 180,\n                        label: this.label(\"Submit\"),\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n      ]);\n\n      return _ui;\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n      return {\n         id: ids.fullImagePopup,\n         view: \"window\",\n         modal: true,\n         position: \"center\",\n         headHeight: 25,\n         head: {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"button\",\n                  type: \"icon\",\n                  icon: \"fa fa-times\",\n                  maxWidth: 25,\n                  height: 25,\n                  click: () => {\n                     $$(ids.fullImagePopup)?.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            rows: [\n               {\n                  id: ids.fullImageCarousel,\n                  view: \"carousel\",\n                  width: 600,\n                  height: 500,\n                  navigation: {\n                     items: true,\n                     buttons: true,\n                     type: \"side\",\n                  },\n                  cols: [],\n                  on: {\n                     onShow: () => {\n                        this.refreshFullImage();\n                     },\n                  },\n               },\n               {\n                  view: \"layout\",\n                  cols: [\n                     {\n                        id: ids.fullImageSelectToggle,\n                        view: \"toggle\",\n                        type: \"icon\",\n                        offIcon: \"fa fa-square-o\",\n                        onIcon: \"fa fa-check-square-o\",\n                        offLabel: this.label(\"Unselected\"),\n                        onLabel: this.label(\"Selected\"),\n                        width: 130,\n                        on: {\n                           onChange: (isSelected) => {\n                              const activeIndex = $$(\n                                 this.ids.fullImageCarousel\n                              ).getActiveIndex();\n                              const pageNumber = activeIndex + 1;\n\n                              if (isSelected) this.select(pageNumber);\n                              else this.unselect(pageNumber);\n                           },\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.fullImageLabel,\n                        view: \"label\",\n                        width: 120,\n                        label: `${this.label(\"Page Number\")}: ${\"#\"}`,\n                     },\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $dataview = $$(this.ids.dataview);\n      if ($dataview) this.AB.Webix.extend($dataview, webix.ProgressBar);\n\n      if (!this._fullImagePopup) {\n         const fullImagePopup = this.uiPopup();\n         this._fullImagePopup = this.AB.Webix.ui(fullImagePopup);\n      }\n   }\n\n   onShow() {\n      this.initPdfjs();\n      super.onShow();\n   }\n\n   /**\n    * Loads the pdfjs dependecies. We defer loading since it is a large library\n    * that is not needed in the initial page load.\n    */\n   async initPdfjs() {\n      if (this.pdfjs && window.pdfjsWorker) return;\n      this.busy();\n      this.pdfjs = (\n         await import(\n            /* webpackPrefetch: true */\n            \"../../../../init/pdfjs\"\n         )\n      ).default;\n      this.ready();\n   }\n\n   async _readFileBuffer() {\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo || !_csvFileInfo.file)\n         return Promise.resolve(new ArrayBuffer(0));\n\n      const fileReader = new FileReader();\n\n      return new Promise((resolve, reject) => {\n         fileReader.onload = (event) => {\n            const fileBuffer = event.target.result;\n            resolve(fileBuffer);\n         };\n         fileReader.onerror = (event) => {\n            reject(event);\n         };\n         fileReader.readAsArrayBuffer(_csvFileInfo.file);\n      });\n   }\n\n   async _toBlob(pageNumber, canvas) {\n      if (!canvas) return;\n\n      return new Promise((resolve, reject) => {\n         canvas.toBlob((blob) => {\n            const file = new File([blob], `${pageNumber}.png`, {\n               type: \"image/png\",\n            });\n\n            resolve(file);\n         }, \"image/png\");\n      });\n   }\n\n   async _uploadImage(pageNumber) {\n      // set quality of the saving image\n      const WIDTH_OF_SAVE_IMAGE = 1200;\n\n      // Create a temporary CANVAS dom to render page image with specify the height\n      const canvasId = `${this.view.id}_temp_canvas`;\n      const canvas =\n         document.getElementById(canvasId) ?? document.createElement(\"canvas\");\n      canvas.id = canvasId;\n      canvas.width = WIDTH_OF_SAVE_IMAGE;\n\n      await this.showPage(pageNumber, canvas);\n      const fileBlob = await this._toBlob(pageNumber, canvas);\n\n      return new Promise((resolve, reject) => {\n         // Create a uploader to upload images\n         const $uploader = this.AB.Webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: this.field.urlUpload(),\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when upload is complete:\n               onFileUpload: (item, response) => {\n                  // RETURN HERE\n                  resolve(response?.data?.uuid);\n               },\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  reject(response);\n               },\n               onUploadComplete: () => $uploader.destructor(),\n            },\n         });\n\n         $uploader.addFile(fileBlob, fileBlob.size);\n      });\n   }\n\n   _increaseProgressValue() {\n      const $dataview = $$(this.ids.dataview);\n      const maxProgressStep = ($dataview.getSelectedId(true) ?? []).length * 2;\n\n      this._progressSteps = this._progressSteps ?? 0;\n      this._progressSteps++;\n\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: this._progressSteps / maxProgressStep,\n      });\n   }\n\n   async loadFile() {\n      this.clearDataview();\n\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo) return;\n\n      const fileBuffer = await this._readFileBuffer();\n      this._pdfDoc = await this.pdfjs.getDocument(fileBuffer).promise;\n\n      const total_page = this._pdfDoc.numPages;\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const carousel_list = [];\n      for (let pageNumber = 1; pageNumber <= total_page; pageNumber++) {\n         $dataview.add({\n            id: pageNumber,\n            pageNumber,\n         });\n\n         carousel_list.push({\n            template: (item) => {\n               return this.fullImageTemplate(item);\n            },\n            data: {\n               pageNumber,\n            },\n         });\n      }\n\n      this.renderPageImages();\n      if ($carousel) this.AB.Webix.ui(carousel_list, $carousel);\n\n      // Select all of images by default\n      this.selectAll();\n\n      $$(this.ids.submit)?.enable();\n   }\n\n   removeFile(id) {\n      $$(this.ids.uploadList)?.remove(id);\n\n      delete this._pdfDoc;\n      delete this._csvFileInfo;\n      this.clearDataview();\n\n      $$(this.ids.submit)?.disable();\n\n      return true;\n   }\n\n   pageTemplateId(pageNumber) {\n      return `pdf-importer-${this.view.id}-${pageNumber}`;\n   }\n\n   pageTemplate(item) {\n      const $dataview = $$(this.ids.dataview);\n      let selectedPageIds = $dataview.getSelectedId(true);\n\n      return `\n      <div>\n         <div class=\"pdf-data-view-item\">\n            <div>\n            ${\n               selectedPageIds.filter((pageId) => pageId == item.id).length\n                  ? '<i class=\"unselect-page fa fa-check-square-o\"></i>'\n                  : '<i class=\"select-page fa fa-square-o\"></i>'\n            }\n            </div>\n            <div style=\"width: 15px;\">\n               ${item.pageNumber}\n            </div>\n         </div>\n         <div class=\"pdf-zoom pdf-data-view-image\">\n            <canvas class=\"pdf-zoom\" width=\"${\n               this.pageItemWidth\n            }\" id=\"${this.pageTemplateId(item.pageNumber)}\"></canvas>\n            <div class=\"pdf-zoom pdf-data-view-image-icon\">\n               <i class=\"pdf-zoom fa fa-search-plus fa-4x\"></i>\n            </div>\n         </div>\n      </div>\n      `;\n   }\n\n   renderPageImages() {\n      const $dataview = $$(this.ids.dataview);\n      $dataview?.find({}).forEach((item) => {\n         const canvas_dom = document.querySelector(\n            `#${this.pageTemplateId(item.pageNumber)}`\n         );\n         this.showPage(item.pageNumber, canvas_dom);\n      });\n   }\n\n   async showPage(pageNumber, canvas_dom) {\n      if (!this._pdfDoc) return;\n\n      pageNumber = parseInt(pageNumber);\n      const page = await this._pdfDoc.getPage(pageNumber);\n      const pdf_original_width = page.getViewport({ scale: 1 }).width;\n      const scale_required = canvas_dom.width / pdf_original_width;\n\n      // get viewport to render the page at required scale\n      const viewport = page.getViewport({ scale: scale_required });\n      canvas_dom.height = viewport.height;\n\n      return page.render({\n         canvasContext: canvas_dom.getContext(\"2d\"),\n         viewport: viewport,\n      }).promise;\n   }\n\n   clearDataview() {\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n\n      $dataview?.clearAll();\n      if ($carousel)\n         this.AB.Webix.ui(\n            [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: $carousel.height,\n                  label: this.label(\"No image\"),\n               },\n            ],\n            $carousel\n         );\n   }\n\n   displaySmall() {\n      this._isDisplayBig = false;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   displayBig() {\n      this._isDisplayBig = true;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   get pageItemWidth() {\n      return this._isDisplayBig ? BIG_PAGE_WIDTH : SMALL_PAGE_WIDTH;\n   }\n\n   select(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds.push(pageNumber);\n      selectedIds = selectedIds.filter((pageId) => pageId);\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   unselect(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds = selectedIds.filter(\n         (pageId) => pageId && pageId != pageNumber\n      );\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   selectAll() {\n      $$(this.ids.dataview)?.selectAll();\n   }\n\n   unselectAll() {\n      $$(this.ids.dataview)?.unselectAll();\n   }\n\n   fullImageTemplateId(pageNumber) {\n      return `${this.pageTemplateId(pageNumber)}_full_size`;\n   }\n\n   fullImageTemplate(item) {\n      const $carousel = $$(this.ids.fullImageCarousel);\n      return `<canvas width=\"${\n         $carousel.config.width - 20\n      }\" id=\"${this.fullImageTemplateId(item.pageNumber)}\"></canvas>`;\n   }\n\n   refreshFullImage() {\n      const ids = this.ids;\n      const activeIndex = $$(ids.fullImageCarousel).getActiveIndex();\n      const pageNumber = activeIndex + 1;\n      const canvas_dom = document.querySelector(\n         `#${this.fullImageTemplateId(pageNumber)}`\n      );\n      this.showPage(pageNumber, canvas_dom);\n\n      const selectedPageIds = $$(ids.dataview).getSelectedId(true);\n      const isSelected =\n         selectedPageIds.filter((pageId) => pageId == pageNumber).length > 0;\n      $$(ids.fullImageSelectToggle).setValue(isSelected);\n\n      $$(ids.fullImageLabel).setValue(\n         `${this.label(\"Page Number\")}: ${pageNumber}`\n      );\n   }\n\n   get object() {\n      return this.view.datacollection?.datasource;\n   }\n\n   get field() {\n      return this.object?.fields?.(\n         (f) => f.id == this.view.settings.fieldID\n      )[0];\n   }\n\n   busy() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.disable();\n      $uploadList?.disable();\n      $submit?.disable();\n      $selectAll?.disable();\n      $unselectAll?.disable();\n      $selectToggle?.disable();\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: 0.001,\n      });\n   }\n\n   ready() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.enable();\n      $uploadList?.enable();\n      $submit?.enable();\n      $selectAll?.enable();\n      $unselectAll?.enable();\n      $selectToggle?.enable();\n      $dataview?.hideProgress?.();\n\n      delete this._progressSteps;\n   }\n\n   async submit() {\n      const field = this.field;\n      if (!this._pdfDoc || !field) return;\n\n      this.busy();\n\n      const ids = this.ids;\n      const $dataview = $$(ids.dataview);\n      const selectedPageIds = $dataview.getSelectedId(true) ?? [];\n      const model = field.object.model();\n      const dcLink = this.datacollection.datacollectionLink;\n      const newValues = [];\n\n      for (let i = 0; i < selectedPageIds.length; i++) {\n         const pageNumber = selectedPageIds[i];\n         if (pageNumber == null || pageNumber == \"\") return;\n\n         const uploadId = await this._uploadImage(pageNumber);\n\n         this._increaseProgressValue();\n\n         // Insert Data\n         const values = field.object.defaultValues();\n         values[field.columnName] = uploadId;\n\n         // Set linked data from the parent DC\n         const linkValues = dcLink?.getCursor();\n         if (linkValues) {\n            const objectLink = dcLink?.datasource;\n\n            const connectFields = field.object.connectFields();\n            connectFields.forEach((f) => {\n               if (\n                  objectLink.id == f.settings.linkObject &&\n                  values[f.columnName] === undefined\n               ) {\n                  const linkColName = f.indexField\n                     ? f.indexField.columnName\n                     : objectLink.PK();\n\n                  values[f.columnName] = {};\n                  values[f.columnName][linkColName] =\n                     linkValues[linkColName] ?? linkValues.id;\n               }\n            });\n         }\n\n         newValues.push(await model.create(values));\n\n         this._increaseProgressValue();\n      }\n\n      this.view.doSubmitRules(newValues);\n\n      // NOTE: trigger this event to ABViewPropertyAddPage\n      if (newValues) this.view.emit(\"saved\", newValues);\n\n      this.ready();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFieldCalculate = require(\"../../dataFields/ABFieldCalculate\");\nconst ABFieldFormula = require(\"../../dataFields/ABFieldFormula\");\nconst ABFieldNumber = require(\"../../dataFields/ABFieldNumber\");\n/* global pivot */\nmodule.exports = class ABViewPivotComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPivot_${baseView.id}`,\n         Object.assign({ pivot: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const uiPivot = {\n         id: this.ids.pivot,\n         view: \"pivot\",\n         readonly: true,\n         removeMissed: settings.removeMissed,\n         totalColumn: settings.totalColumn,\n         separateLabel: settings.separateLabel,\n         min: settings.min,\n         max: settings.max,\n         height: settings.height,\n         fields: this._getFields(),\n         format: (value) => {\n            const decimalPlaces = settings.decimalPlaces ?? 2;\n\n            return value && value != \"0\"\n               ? parseFloat(value).toFixed(decimalPlaces || 0)\n               : value;\n         },\n         override: new Map([\n            [\n               pivot.services.Backend,\n               class MyBackend extends pivot.services.Backend {\n                  async data() {\n                     const dc = self.datacollection;\n                     if (!dc) return webix.promise.resolve([]);\n\n                     const object = dc.datasource;\n                     if (!object) return webix.promise.resolve([]);\n\n                     switch (dc.dataStatus) {\n                        case dc.dataStatusFlag.notInitial:\n                           await dc.loadData();\n                           break;\n                     }\n\n                     const data = dc.getData();\n                     const dataMapped = data.map((d) => {\n                        const result = {};\n\n                        object.fields().forEach((f) => {\n                           if (\n                              f instanceof ABFieldCalculate ||\n                              f instanceof ABFieldFormula ||\n                              f instanceof ABFieldNumber\n                           )\n                              result[f.columnName] = d[f.columnName];\n                           else result[f.columnName] = f.format(d);\n                        });\n\n                        return result;\n                     });\n\n                     return webix.promise.resolve(dataMapped);\n                  }\n               },\n            ],\n            [\n               pivot.views.table,\n               class CustomTable extends pivot.views.table {\n                  CellFormat(value) {\n                     const decimalPlaces = settings.decimalPlaces ?? 2;\n                     if (!value) value = value === 0 ? \"0\" : \"\";\n                     return value\n                        ? parseFloat(value).toFixed(decimalPlaces)\n                        : value;\n                  }\n               },\n            ],\n         ]),\n      };\n\n      if (settings.structure) uiPivot.structure = settings.structure;\n\n      const _ui = super.ui([uiPivot]);\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   _getFields() {\n      const dc = this.datacollection;\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = object.fields().map((f) => {\n         let fieldType = \"text\";\n\n         switch (f.key) {\n            case \"calculate\":\n            case \"formula\":\n            case \"number\":\n               fieldType = \"number\";\n               break;\n            case \"date\":\n            case \"datetime\":\n               fieldType = \"date\";\n               break;\n         }\n\n         return {\n            id: f.columnName,\n            value: f.label,\n            type: fieldType,\n         };\n      });\n\n      return fields;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewReportsManagerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewReportManager_${baseView.id}`,\n         Object.assign(\n            {\n               reportManager: \"\",\n            },\n            ids\n         )\n      );\n\n      this.readonly = false;\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldText = dc?.datasource.fieldByID(\n         settings.dataviewFields.text\n      )?.columnName;\n      const fieldQueries = dc?.datasource.fieldByID(\n         settings.dataviewFields.queries\n      )?.columnName;\n      const ids = this.ids;\n      class MyBackend extends reports.services.Backend {\n         async getModules() {\n            if (dc == null) return [];\n\n            await self.waitInitializingDCEvery(1000, dc);\n\n            return dc.getData().map((e) => {\n               return {\n                  id: e.id,\n                  name: e[fieldName],\n                  text: JSON.stringify(e[fieldText]),\n                  updated: e[\"updated_at\"],\n               };\n            });\n         }\n\n         async addModule(data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            const response = await dc.model.create(parsedData);\n\n            return {\n               id: response.id,\n            };\n         }\n\n         async updateModule(id, data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            let response = {};\n\n            response = await dc.model.update(id, parsedData);\n\n            return { id: response.id };\n         }\n\n         async deleteModule(id) {\n            await dc.model.delete(id);\n\n            return { id: id };\n         }\n\n         async getModels() {\n            const reportModels = {};\n\n            // If no selected DC then get all DCs\n            (settings.datacollectionIDs.length > 0\n               ? settings.datacollectionIDs\n               : self.view.application.datacollectionIDs\n            ).forEach((dcID) => {\n               const dc = ab.datacollectionByID(dcID);\n\n               if (!dc) return;\n\n               const obj = dc.datasource;\n\n               if (!obj) return;\n\n               const reportFields = self.getReportFields(dc);\n\n               // get connected data collections\n               // let linkedFields = [];\n               // (obj.connectFields() || []).forEach((f, index) => {\n               //    let connectedDcs = ab.datacollections(\n               //       (dColl) =>\n               //          dColl &&\n               //          dColl.datasource &&\n               //          dColl.datasource.id === f.settings.linkObject\n               //    );\n               //    (connectedDcs || []).forEach((linkedDc) => {\n               //       linkedFields.push({\n               //          id: index + 1,\n               //          name: linkedDc.label,\n               //          source: dc.id,\n               //          target: linkedDc.id\n               //       });\n               //    });\n               // });\n\n               // // MOCK UP for testing\n               // let linkedFields = [\n               //    {\n               //       id: \"id\",\n               //       name: \"id\",\n               //       source: \"39378ee0-38f0-4b9d-a5aa-dddc61137fcd\", // Player\n               //       target: \"0de82362-4ab5-4f0f-8cfa-d1288d173cba\" // Team\n               //    }\n               // ];\n\n               reportModels[dc.id] = {\n                  id: dc.id,\n                  name: dc.label,\n                  data: reportFields,\n                  refs: [],\n               };\n            });\n\n            return reportModels;\n         }\n\n         async getQueries() {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return [];\n\n            return (\n               (\n                  await dc.model.findAll({\n                     where: {\n                        uuid: moduleID,\n                     },\n                  })\n               ).data[0][fieldQueries] || []\n            );\n         }\n\n         async addQuery(data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryID = abWebix.uid();\n\n            queries.push(Object.assign({ id: queryID }, data));\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id: queryID };\n         }\n\n         async updateQuery(id, data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            queries[queryIndex] = Object.assign({ id }, data);\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id };\n         }\n\n         async deleteQuery(id) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = moduleData[fieldQueries] || [];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            if (queryIndex >= 0) {\n               const parsedData = {};\n\n               parsedData[fieldQueries] = queries\n                  .filter((e, i) => i !== queryIndex)\n                  .sort((a, b) => {\n                     if (a.name < b.name) return -1;\n\n                     if (a.name > b.name) return 1;\n\n                     return 0;\n                  });\n\n               await dc.model.update(moduleID, parsedData);\n            }\n\n            return { id: id };\n         }\n\n         async getData(config) {\n            let result = [];\n            let pullDataTasks = [];\n            let dcIds = [];\n            let dcData = {};\n            let reportFields = [];\n\n            // pull data of the base and join DCs\n            dcIds.push(config.data);\n            (config.joins || []).forEach((j) => {\n               dcIds.push(j.sid);\n               dcIds.push(j.tid);\n            });\n            dcIds = ab.uniq(dcIds);\n            dcIds.forEach((dcId) => {\n               pullDataTasks.push(\n                  new Promise((resolve, reject) => {\n                     const getData = async () => {\n                        try {\n                           dcData[dcId] = (await self.getData(dcId)) || [];\n\n                           resolve();\n                        } catch (err) {\n                           reject(err);\n                        }\n                     };\n\n                     getData();\n                  })\n               );\n            });\n\n            dcIds.forEach((dcId) => {\n               const dataCol = ab.datacollectionByID(dcId);\n\n               if (!dataCol) return;\n\n               reportFields = reportFields.concat(\n                  self.getReportFields(dataCol).map((f) => {\n                     // change format of id to match the report widget\n                     f.id = `${dcId}.${f.id}`; // dc_id.field_id\n                     return f;\n                  })\n               );\n            });\n\n            await Promise.all(pullDataTasks);\n\n            // the data result equals data of the base DC\n            result = dcData[config.data] || [];\n\n            if (config.joins?.length)\n               (config.joins || []).forEach((j) => {\n                  const sourceDc = ab.datacollectionByID(j.sid);\n                  if (!sourceDc) return;\n\n                  const sourceObj = sourceDc.datasource;\n                  if (!sourceObj) return;\n\n                  const targetDc = ab.datacollectionByID(j.tid);\n                  if (!targetDc) return;\n\n                  const targetObj = targetDc.datasource;\n                  if (!targetObj) return;\n\n                  const sourceLinkField = sourceObj.fieldByID(j.sf);\n                  const targetLinkField = targetObj.fieldByID(j.tf);\n                  if (!sourceLinkField && !targetLinkField) return;\n\n                  const sourceData = dcData[j.sid] || [];\n                  const targetData = dcData[j.tid] || [];\n\n                  sourceData.forEach((sData) => {\n                     targetData.forEach((tData) => {\n                        let sVal =\n                           sData[\n                              sourceLinkField\n                                 ? `${j.sid}.${sourceLinkField.columnName}.id`\n                                 : `${j.sid}.id`\n                           ] || [];\n\n                        let tVal =\n                           tData[\n                              targetLinkField\n                                 ? `${j.tid}.${targetLinkField.columnName}.id`\n                                 : `${j.tid}.id`\n                           ] || [];\n\n                        if (!Array.isArray(sVal)) sVal = [sVal];\n\n                        if (!Array.isArray(tVal)) tVal = [tVal];\n\n                        // Add joined row to the result array\n                        const matchedVal = sVal.filter(\n                           (val) => tVal.indexOf(val) > -1\n                        );\n\n                        if (matchedVal?.length) {\n                           const updateRows =\n                              result.filter(\n                                 (r) =>\n                                    r[`${j.sid}.id`] === sData[`${j.sid}.id`] &&\n                                    !r[`${j.tid}.id`]\n                              ) || [];\n\n                           if (updateRows?.length)\n                              (updateRows || []).forEach((r) => {\n                                 for (const key in tData)\n                                    if (key !== \"id\") r[key] = tData[key];\n                              });\n                           else\n                              result.push(\n                                 Object.assign(\n                                    ab.cloneDeep(sData),\n                                    ab.cloneDeep(tData)\n                                 )\n                              );\n                        }\n                     });\n                  });\n               });\n\n            // filter & sort\n            const queryVal = JSON.parse(config.query || \"{}\");\n\n            if (queryVal?.rules?.length)\n               queryVal.rules.forEach((r) => {\n                  if (!r || !r.type || !r.condition) return;\n\n                  switch (r.type) {\n                     case \"date\":\n                        // Convert string to Date object\n                        if (r.condition.filter) {\n                           if (typeof r.condition.filter === \"string\")\n                              r.condition.filter = ab.rules.toDate(\n                                 r.condition.filter\n                              );\n\n                           if (\n                              r.condition.filter.start &&\n                              typeof r.condition.filter.start === \"string\"\n                           )\n                              r.condition.filter.start = ab.rules.toDate(\n                                 r.condition.filter.start\n                              );\n\n                           if (\n                              r.condition.filter.end &&\n                              typeof r.condition.filter.end === \"string\"\n                           )\n                              r.condition.filter.end = ab.rules.toDate(\n                                 r.condition.filter.end\n                              );\n                        }\n\n                        break;\n                  }\n               });\n\n            // create a new query widget to get the filter function\n            const filterElem = abWebix.ui({\n               view: \"query\",\n               fields: reportFields,\n               value: queryVal,\n            });\n\n            // create a new data collection and apply the query filter\n            const tempDc = new abWebix.DataCollection();\n\n            tempDc.parse(result);\n\n            // filter\n            let filterFn;\n\n            try {\n               filterFn = filterElem.getFilterFunction();\n            } catch (error) {\n               // continue regardless of error\n            }\n\n            if (filterFn) tempDc.filter(filterFn);\n\n            // sorting\n            (config.sort || []).forEach((sort) => {\n               if (sort.id)\n                  tempDc.sort({\n                     as: \"string\",\n                     dir: sort.mod || \"asc\",\n                     by: `#${sort.id}#`,\n                  });\n            });\n\n            result = tempDc.serialize();\n\n            // clear\n            filterElem.destructor();\n            tempDc.destructor();\n\n            // group by\n            if (config?.group?.length) {\n               result = _.groupBy(result, (e) => {\n                  return config.group\n                     .map((column) => {\n                        const parsedColumn = column.split(\".\");\n                        const originalColumn =\n                           parsedColumn.length > 2\n                              ? `${parsedColumn[1]}.${parsedColumn[2]}`\n                              : column;\n                        const reportField = reportFields.find(\n                           (reportField) => reportField.id === originalColumn\n                        );\n\n                        switch (reportField.type) {\n                           case \"date\": {\n                              const dateStringData = abWebix.i18n.dateFormatStr(\n                                 e[originalColumn]\n                              );\n                              const parsedDateStringData =\n                                 dateStringData.split(\"/\");\n\n                              switch (parsedColumn[0]) {\n                                 case \"day\":\n                                    e[column] = parsedDateStringData[1];\n\n                                    return parsedDateStringData[1];\n\n                                 case \"month\":\n                                    e[column] = parsedDateStringData[0];\n\n                                    return parsedDateStringData[0];\n\n                                 case \"year\":\n                                    e[column] = parsedDateStringData[2];\n\n                                    return parsedDateStringData[2];\n\n                                 case \"yearmonth\": {\n                                    e[\n                                       column\n                                    ] = `${parsedDateStringData[0]}/${parsedDateStringData[2]}`;\n\n                                    return e[column];\n                                 }\n\n                                 default:\n                                    e[column] = dateStringData;\n\n                                    return dateStringData;\n\n                                 // switch (reportField.abField.key) {\n                                 //    case \"datetime\":\n                                 //       return abWebix.i18n.fullDateFormatStr(\n                                 //          e[originalColumn]\n                                 //       );\n\n                                 //    default:\n                                 //       break;\n                                 // }\n                              }\n                           }\n\n                           default:\n                              return e[originalColumn]?.toString?.();\n                        }\n                     })\n                     .join(\"\");\n               });\n\n               result = Object.values(result).map((groupedData) => {\n                  const groupedResult = {};\n\n                  (config.columns || []).forEach((col) => {\n                     const agg = col.split(\".\")[0];\n                     const rawCol = col.replace(\n                        /sum.|avg.|count.|max.|min./g,\n                        \"\"\n                     );\n\n                     switch (agg) {\n                        case \"sum\":\n                           groupedResult[col] = ab.sumBy(groupedData, rawCol);\n                           break;\n                        case \"avg\":\n                           groupedResult[col] = ab.meanBy(groupedData, rawCol);\n                           break;\n                        case \"count\":\n                           groupedResult[col] = (groupedData || []).length;\n                           break;\n                        case \"max\":\n                           groupedResult[col] =\n                              (ab.maxBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        case \"min\":\n                           groupedResult[col] =\n                              (ab.minBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        default:\n                           groupedResult[col] = groupedData[0][col];\n                           break;\n                     }\n                  });\n\n                  return groupedResult;\n               });\n            }\n\n            return result;\n         }\n\n         async getOptions(fields) {\n            return [];\n         }\n         async getFieldData(fieldId) {\n            return [];\n         }\n      }\n      class MyLocal extends reports.services.Local {\n         constructor(app) {\n            super(app);\n\n            this._currentModuleID = \"\";\n         }\n\n         getQueries() {\n            const currentModuleID = $$(ids.reportManager).getState().moduleId;\n\n            if (this._currentModuleID !== currentModuleID) {\n               this._currentModuleID = currentModuleID;\n               this._queries = null;\n            }\n\n            return super.getQueries();\n         }\n      }\n      class MyEditor extends reports.views.editor {\n         init() {\n            super.init();\n\n            if (!self.readonly || settings.editMode === 1) return;\n\n            const $tabbar = this.$$(\"tabbar\");\n\n            if (settings.hideCommonTab === 1) {\n               const listener = () => {\n                  $tabbar.callEvent(\"onChange\", [\"data\"]);\n                  $tabbar.disableOption(\"common\");\n                  self.removeListener(\"editMode.tabbar.query\", listener);\n               };\n\n               self.on(\"editMode.tabbar.query\", listener);\n            }\n\n            if (settings.hideDataTab === 1) $tabbar.disableOption(\"other\");\n\n            if (settings.hideViewTab === 1) $tabbar.disableOption(\"structure\");\n\n            this.on(this.app, \"editMode.button.back\", () => {\n               this.Reset(true);\n            });\n         }\n\n         Reset(forceReset = false) {\n            const id = this.AppState.moduleId;\n            const condition = self.readonly && !(settings.editMode === 1);\n\n            if (!condition || id == null || forceReset) super.Reset();\n\n            this.Local.getModule(id);\n         }\n\n         TrackChanges() {\n            super.TrackChanges();\n\n            if (settings.hideCommonTab) self.emit(\"editMode.tabbar.query\");\n         }\n      }\n      class MyToolBar extends reports.views.toolbar {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly && !(settings.editMode === 1)) {\n               ui.elements[5].cols = ui.elements[5].cols.map((e) =>\n                  Object.assign(e, {\n                     hidden: self.readonly && !(settings.editMode === 1),\n                  })\n               );\n\n               ui.elements[5].cols.push(\n                  {},\n                  {\n                     view: \"button\",\n                     type: \"icon\",\n                     icon: \"wxi-angle-double-left\",\n                     label: self.label(\"Back\"),\n                     localId: \"forceReset\",\n                     click: () => {\n                        return this.app.callEvent(\"editMode.button.back\", []);\n                     },\n                  }\n               );\n            }\n\n            return ui;\n         }\n      }\n      class MyEditorCommon extends reports.views[\"editor/common\"] {\n         config() {\n            const ui = super.config();\n\n            if (!self.readonly) return ui;\n\n            return Object.assign({}, ui, {\n               elements: ui.elements.map((e, i) =>\n                  Object.assign(\n                     {\n                        hidden: !(i >= 2 && i < 5),\n                     },\n                     e\n                  )\n               ),\n            });\n         }\n\n         ShowDeleteButton() {\n            super.ShowDeleteButton();\n\n            if (self.readonly) this.$$(\"delete\").hide();\n         }\n      }\n      class MyEditorData extends reports.views[\"editor/data\"] {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly) {\n               ui.rows[0].rows[0].hidden = true;\n\n               ui.rows[0].rows.unshift({\n                  label: \"Filtering query\",\n                  view: \"label\",\n                  width: 120,\n               });\n            }\n\n            return ui;\n         }\n      }\n      class MyTable extends reports.views.table {\n         // NOTE: fix format of date column type\n         GetColumnConfig(a) {\n            let config = {\n               id: a.id,\n               header:\n                  !a.meta.header || a.meta.header === \"none\"\n                     ? a.meta.name || a.name\n                     : [\n                          a.meta.name || a.name,\n                          {\n                             content:\n                                a.header === \"text\"\n                                   ? \"textFilter\"\n                                   : \"richSelectFilter\",\n                          },\n                       ],\n               type: a.type,\n               sort: \"date\",\n               width: a.width || 200,\n            };\n\n            const abField = self.AB.datacollectionByID(\n               a.mid\n            )?.datasource.fields((field) => field.columnName === a.name)[0];\n\n            switch (a.type) {\n               case \"date\":\n                  config.format = (val) => {\n                     // check valid date\n                     if (val?.getTime && !isNaN(val.getTime()))\n                        return abField?.key === \"datetime\"\n                           ? abWebix.i18n.fullDateFormatStr(val)\n                           : abWebix.i18n.dateFormatStr(val);\n                     else return \"\";\n                  };\n\n                  break;\n\n               default:\n                  config = super.GetColumnConfig(a);\n\n                  break;\n            }\n\n            return config;\n         }\n\n         async GetTableData(mod) {\n            const data = await super.GetTableData(mod);\n            const buckets = mod.buckets;\n\n            if (!buckets) return data;\n\n            if (buckets.length === 0) return data;\n\n            const columnIDs = mod.columns.map((e) => e.id);\n            const parsedBuckets = mod.buckets.filter((bucket) =>\n               columnIDs.includes(bucket.column)\n            );\n\n            if (parsedBuckets.length === 0) return data;\n\n            const records = data[0].map((e) => {\n               const parseRecord = {};\n\n               parsedBuckets.forEach((bucket) => {\n                  const options = bucket.options;\n\n                  for (let i = 0; i < options.length; i++)\n                     if (\n                        options[i].values?.includes(e[bucket.column]) ||\n                        i === options.length - 1\n                     ) {\n                        parseRecord[bucket.column] = options[i].id;\n\n                        break;\n                     }\n               });\n\n               return Object.assign({}, e, parseRecord);\n            });\n\n            return [records, data[1]];\n         }\n      }\n\n      const _ui = super.ui([\n         {\n            id: ids.reportManager,\n            view: \"reports\",\n            toolbar: true,\n            override: new Map([\n               [reports.services.Backend, MyBackend],\n               [reports.services.Local, MyLocal],\n               [reports.views.editor, MyEditor],\n               [reports.views.toolbar, MyToolBar],\n               [reports.views[\"editor/common\"], MyEditorCommon],\n               [reports.views[\"editor/data\"], MyEditorData],\n               [reports.views.table, MyTable],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n      delete _ui.height;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      this.AB = AB;\n      this.readonly = accessLevel < 2;\n\n      const $reportManager = $$(this.ids.reportManager);\n      const state = $reportManager.getState();\n\n      state.readonly = this.readonly;\n      state.mode =\n         this.readonly && this.settings.editMode === 1 ? \"edit\" : \"list\";\n   }\n\n   getReportFields(dc) {\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = [];\n\n      object.fields().forEach((f) => {\n         const columnFormat = f.columnHeader();\n\n         if (!f.isConnection) {\n            let type = \"text\";\n\n            switch (f.key) {\n               case \"boolean\":\n               case \"number\":\n               case \"date\":\n                  type = f.key;\n\n                  break;\n\n               case \"datetime\":\n                  type = \"date\";\n\n                  break;\n\n               default:\n                  break;\n            }\n\n            fields.push({\n               id: f.columnName,\n               name: f.label,\n               filter: f.fieldIsFilterable(),\n               edit: false,\n               type: type,\n               format: columnFormat.format,\n               options: columnFormat.options,\n               ref: \"\",\n               key: false,\n               show: true,\n               abField: f,\n            });\n\n            return;\n         }\n\n         if (f.isSource()) {\n            const linkedDcs = this.view.application.datacollectionsIncluded(\n               (dc) =>\n                  this.settings.datacollectionIDs.includes(dc.id) &&\n                  dc.settings.datasourceID === f.settings.linkObject\n            );\n\n            (linkedDcs || []).forEach((linkDc) => {\n               fields.push({\n                  id: f.id,\n                  name: f.label,\n                  filter: false,\n                  edit: false,\n                  type: \"reference\",\n                  ref: linkDc.id,\n                  key: false,\n                  show: false,\n               });\n            });\n         }\n      });\n\n      return fields;\n   }\n\n   async getData(datacollectionId) {\n      const datacollection = this.AB.datacollectionByID(datacollectionId);\n      if (!datacollection) return [];\n\n      const object = datacollection.datasource;\n      if (!object) return [];\n\n      await this.waitInitializingDCEvery(1000, datacollection);\n\n      const reportFields = this.getReportFields(datacollection);\n      const reportData = [];\n      const rawData = datacollection.getData();\n\n      (rawData || []).forEach((row) => {\n         const reportRow = { id: row.id };\n\n         reportRow[`${datacollection.id}.id`] = row.id;\n\n         object.fields().forEach((field) => {\n            const columnName = field.columnName;\n            const col = `${datacollection.id}.${columnName}`;\n\n            if (field) {\n               // FK value of the connect field\n               if (field.isConnection) {\n                  let $pk = field.datasourceLink.PK();\n                  if (Array.isArray(row[columnName]))\n                     reportRow[`${col}.id`] = row[columnName].map(\n                        (link) => link[$pk] || link.id || link\n                     );\n                  else if (row[columnName])\n                     reportRow[`${col}.id`] =\n                        row[columnName][$pk] ||\n                        row[columnName].id ||\n                        row[columnName];\n               } else reportRow[col] = field.format(row);\n            } else reportRow[col] = row[columnName];\n\n            const rField = reportFields.find(\n               (f) => f.id === columnName || f.id === field.id\n            );\n\n            if (!rField) return;\n\n            switch (rField.type) {\n               case \"text\":\n               case \"reference\":\n                  reportRow[col] = (reportRow[col] || \"\").toString();\n                  break;\n\n               case \"number\":\n                  reportRow[col] = parseFloat(\n                     (reportRow[col] || 0).toString().replace(/[^\\d.-]/g, \"\")\n                  );\n                  break;\n\n               case \"date\":\n                  reportRow[col] = row[columnName];\n                  if (reportRow[col]) {\n                     if (!(reportRow[col] instanceof Date))\n                        reportRow[col] = this.AB.rules.toDate(row[columnName]);\n                  } else reportRow[col] = \"\";\n                  break;\n            }\n         });\n\n         reportData.push(reportRow);\n      });\n\n      return reportData;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewSchedulerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewScheduler_${baseView.id}`,\n         Object.assign(\n            {\n               scheduler: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const ab = this.AB;\n      const self = this;\n      const abWebix = this.AB.Webix;\n      const settings = this.settings;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldStart = dc?.datasource.fieldByID(\n         settings.dataviewFields.start\n      )?.columnName;\n      const fieldEnd = dc?.datasource.fieldByID(\n         settings.dataviewFields.end\n      )?.columnName;\n      const fieldAllDay = dc?.datasource.fieldByID(\n         settings.dataviewFields.allDay\n      )?.columnName;\n      const fieldRepeat = dc?.datasource.fieldByID(\n         settings.dataviewFields.repeat\n      )?.columnName;\n      const fieldCalendar = dc?.datasource.fieldByID(\n         settings.dataviewFields.calendar\n      )?.columnName;\n      const fieldEventColor = dc?.datasource.fieldByID(\n         settings.dataviewFields.color\n      )?.columnName;\n      const fieldNotes = dc?.datasource.fieldByID(\n         settings.dataviewFields.notes\n      )?.columnName;\n      const fieldOriginID = dc?.datasource.fieldByID(\n         settings.dataviewFields.originID\n      )?.columnName;\n      const fieldSectionID = dc?.datasource.fieldByID(\n         settings.dataviewFields.sectionID\n      )?.columnName;\n      const fieldUnitID = dc?.datasource.fieldByID(\n         settings.dataviewFields.unitID\n      )?.columnName;\n      const dcCalendar = ab.datacollectionByID(\n         this.settings.calendarDataviewID\n      );\n      const fieldTitle = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.title\n      )?.columnName;\n      const fieldCalendarColor = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.color\n      )?.columnName;\n      const fieldActive = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.active\n      )?.columnName;\n      const timelineOptions = [];\n\n      Object.keys(settings.timeline).forEach((key) => {\n         if (settings.timeline[key] === 0) return;\n\n         timelineOptions.push({\n            id: `${key}`,\n            value: `${key.charAt(0).toUpperCase()}${key.slice(1)}`,\n         });\n      });\n\n      const _ui = super.ui([\n         {\n            padding: 6,\n            cols: [\n               { view: \"label\", width: 150, label: \"Export events data to: \" },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"Excel\"),\n                  hidden: settings.export.excel === 0,\n                  click: () => {\n                     abWebix.toExcel(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"CSV\"),\n                  hidden: settings.export.csv === 0,\n                  click: () => {\n                     abWebix.toCSV(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"PDF\"),\n                  hidden: settings.export.pdf === 0,\n                  click: () => {\n                     abWebix.toPDF(ids.scheduler, { autowidth: true });\n                  },\n               },\n               {},\n            ],\n         },\n         {\n            id: ids.scheduler,\n            view: \"scheduler\",\n            date: new Date(),\n            readonly: settings.readonly === 1,\n            timeline: settings.timeline.timeline === 1,\n            override: new Map([\n               [\n                  scheduler.services.Backend,\n                  class MyBackend extends reports.services.Backend {\n                     async addCalendar(obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        const response = await dcCalendar.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async addEvent(obj) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        const response = await dc.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async calendars() {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dcCalendar == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dcCalendar);\n\n                        return dcCalendar.getData().map((e) => {\n                           return {\n                              id: e.id,\n                              text: e[fieldTitle],\n                              color: e[fieldCalendarColor],\n                              active: e[fieldActive],\n                           };\n                        });\n                     }\n                     async events(params) {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dc == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dc);\n\n                        const units = await this.units();\n                        const sections = await this.sections();\n\n                        return dc.getData().map((e) => {\n                           let unitID = units.find(\n                              (u) => u.id === e[fieldUnitID]\n                           )?.id;\n                           let sectionID = sections.find(\n                              (s) => s.id === e[fieldSectionID]\n                           )?.id;\n\n                           if (sectionID == null || unitID == null) {\n                              sectionID = sectionID || \"No Section\";\n                              unitID = unitID || \"No Unit\";\n\n                              // const data = {};\n\n                              // data[fieldSectionID] = sectionID;\n                              // data[fieldUnitID] = unitID;\n\n                              // dc.model.update(e.id, data);\n                           }\n\n                           return {\n                              id: e.id,\n                              text: e[fieldName],\n                              start_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldStart]),\n                              end_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldEnd]),\n                              all_day: e[fieldAllDay],\n                              recurring: e[fieldRepeat],\n                              calendar: e[fieldCalendar],\n                              color: e[fieldEventColor],\n                              section: sectionID,\n                              units: unitID,\n                              details: e[fieldNotes],\n                              origin_id: e[fieldOriginID],\n                           };\n                        });\n                     }\n                     async removeCalendar(id) {\n                        await dcCalendar.model.delete(id);\n                     }\n                     async removeEvent(id) {\n                        await dc.model.delete(id);\n                     }\n                     async sections() {\n                        return [\n                           { text: \"No Section\", id: \"No Section\" },\n                        ].concat(\n                           settings.timelineSectionList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 text: e,\n                              };\n                           })\n                        );\n                     }\n                     async units() {\n                        return [{ id: \"No Unit\", value: \"No Unit\" }].concat(\n                           settings.unitList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 value: e,\n                              };\n                           })\n                        );\n                     }\n                     async updateCalendar(id, obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        await dcCalendar.model.update(id, data);\n                     }\n                     async updateEvent(id, obj, mode, date) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        await dc.model.update(id, data);\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/nav\"],\n                  class CustomBarsView extends scheduler.views[\"bars/nav\"] {\n                     config() {\n                        const uiNav = super.config();\n                        uiNav.width = 160;\n                        uiNav.options = timelineOptions;\n                        return uiNav;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/navpopup\"],\n                  class CustomNavPopupView extends scheduler.views[\n                     \"bars/navpopup\"\n                  ] {\n                     config() {\n                        const uiNavPopup = super.config();\n\n                        const options = timelineOptions.map((e) =>\n                           Object.assign({ icon: `shi-${e.id}` }, e)\n                        );\n\n                        if (this.app.config.calendars)\n                           uiNavPopup.body.body.rows[0].data = options;\n                        else uiNavPopup.body.data = options;\n\n                        return uiNavPopup;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"modes/day/multiday\"],\n                  class CustomModesDayMultiday extends scheduler.views[\n                     \"modes/day/multiday\"\n                  ] {\n                     LimitData(data) {\n                        // Get an error the case when the data parameter is undefined.\n                        super.LimitData(data || []);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTabComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewTab_${baseView.id}`,\n         Object.assign(\n            {\n               tab: \"\",\n\n               sidebar: \"\",\n               expandMenu: \"\",\n               collapseMenu: \"\",\n\n               popupTabManager: \"\",\n               popupTabManagerForm: \"\",\n               popupTabManagerSaveButton: \"\",\n            },\n            ids\n         )\n      );\n\n      this.viewComponents =\n         this.viewComponents ||\n         baseView\n            .views((v) => v.getUserAccess())\n            .map((v) => {\n               return {\n                  view: v,\n                  // component: v.component(App)\n               };\n            });\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      let _ui = null;\n\n      // We are going to make a custom icon using the first letter of a menu item for menu items that don't have an icon\n      // to do this we need to modify the default template with the method webix recommended form this snippet https://snippet.webix.com/b566d9f8\n      abWebix.type(abWebix.ui.tree, {\n         baseType: \"sideBar\", // inherit everything else from sidebar type\n         name: \"customIcons\",\n         icon: (obj, common) => {\n            if (obj.icon.length)\n               return [\n                  \"<span class='webix_icon webix_sidebar_icon fa fa-fw fa-\",\n                  obj.icon,\n                  \"'></span>\",\n               ].join(\"\");\n\n            return [\n               \"<span class='webix_icon webix_sidebar_icon sidebarCustomIcon'>\",\n               obj.value.charAt(0).toUpperCase(),\n               \"</span>\",\n            ].join(\"\");\n         },\n      });\n\n      const viewComponents = this.viewComponents;\n      const settings = this.settings;\n\n      if (viewComponents.length > 0) {\n         if (settings.stackTabs) {\n            // define your menu items from the view components\n            const menuItems = viewComponents.map((vc) => {\n               const view = vc.view;\n\n               return {\n                  id: `${view.id}_menu`,\n                  value: view.label,\n                  icon: view.tabicon ? view.tabicon : \"\",\n               };\n            });\n\n            if (menuItems.length) {\n               // create a menu item for the collapse option to use later\n               const collapseMenu = {\n                  id: ids.collapseMenu,\n                  value: this.label(\"Collapse Menu\"),\n                  icon: \"chevron-circle-left\",\n               };\n\n               // create a menu item from the expand option to use later\n               const expandMenu = {\n                  id: ids.expandMenu,\n                  value: this.label(\"Expand Menu\"),\n                  icon: \"chevron-circle-right\",\n                  hidden: true,\n               };\n\n               // find out what the first option is so we can set it later\n               let selectedItem = `${viewComponents[0].view.id}_menu`;\n\n               const abStorage = ab.Storage;\n               const sidebar = {\n                  view: \"sidebar\",\n                  type: \"customIcons\", // define the sidebar type with the new template created above\n                  id: ids.sidebar,\n                  height: settings.height,\n                  width: settings.sidebarWidth ? settings.sidebarWidth : 0,\n                  scroll: true,\n                  position: settings.sidebarPos ? settings.sidebarPos : \"left\",\n                  css: settings.darkTheme ? \"webix_dark\" : \"\",\n                  data: menuItems.concat(collapseMenu), // add you menu items along with the collapse option to start\n                  on: {\n                     onItemClick: (id) => {\n                        // when a menu item is clicked\n                        if (id === ids.collapseMenu) {\n                           // if it was the collapse menu item\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the collapse option from the menu\n                              $sidebar.remove(ids.collapseMenu);\n                              // add the expand option to the menu\n                              $sidebar.add(expandMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else if (id === ids.expandMenu) {\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the expand option from the menu\n                              $sidebar.remove(ids.expandMenu);\n                              // add the collapse option to the menu\n                              $sidebar.add(collapseMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else {\n                           // store the selecte menu item just in case someone toggles the menu later\n                           selectedItem = id;\n                           // if the menu item is a regular menu item\n                           // call the onShow with the view id to load the view\n\n                           id = id.replace(\"_menu\", \"\");\n                           let node = $$(id);\n                           if (node) {\n                              node.show(false, false);\n                           } else {\n                              // How often does this occure?\n                              let msg = `ABViewTabComponent[${this.name}][${this.id}] could not resolve UI panel for provided menu [${selectedItem}].`;\n                              this.AB.notify(\"developer\", msg, {});\n                           }\n                           // $$(id).show(false, false);\n\n                           // onShow(id);\n                        }\n                     },\n                     onSelectChange: () => {\n                        addDataCy();\n                     },\n                     onAfterRender: () => {\n                        addDataCy();\n                     },\n                  },\n               };\n\n               const multiview = {\n                  view: \"multiview\",\n                  id: ids.tab,\n                  keepViews: true,\n                  minWidth: settings.minWidth,\n                  cells: viewComponents.map((view) => {\n                     const tabUi = {\n                        id: view.view.id,\n                        // ui will be loaded when its tab is opened\n                        view: \"layout\",\n                        rows: [],\n                     };\n\n                     return tabUi;\n                  }),\n                  on: {\n                     onViewChange: (prevId, nextId) => {\n                        this.onShow(nextId);\n                     },\n                  },\n               };\n\n               const addDataCy = function () {\n                  const $sidebar = $$(ids.sidebar);\n\n                  // set ids of controller buttons\n                  const collapseNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.collapseMenu}\"]`\n                  );\n\n                  if (collapseNode)\n                     collapseNode.setAttribute(\n                        \"data-cy\",\n                        `tab-collapseMenu-${ids.collapseMenu}`\n                     );\n\n                  const expandNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.expandMenu}\"]`\n                  );\n\n                  if (expandNode)\n                     expandNode.setAttribute(\n                        \"data-cy\",\n                        `tab-expandMenu-${ids.expandMenu}`\n                     );\n\n                  baseView.views((view) => {\n                     const node = $sidebar?.$view?.querySelector(\n                        `[webix_tm_id=\"${view.id}_menu\"]`\n                     );\n\n                     if (!node) {\n                        return;\n                     }\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `tab-${view.name.replace(\" \", \"\")}-${view.id}-${\n                           baseView.id\n                        }`\n                     );\n                  });\n               };\n\n               let columns = [sidebar, multiview];\n\n               if (settings.sidebarPos === \"right\") {\n                  columns = [multiview, sidebar];\n               }\n\n               _ui = {\n                  cols: columns,\n               };\n            } else\n               _ui = {\n                  view: \"spacer\",\n               };\n         } else {\n            const cells = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  const tabUi = {\n                     id: view.id,\n                     // ui will be loaded when its tab is opened\n                     view: \"layout\",\n                     rows: [],\n                  };\n\n                  let tabTemplate = \"\";\n\n                  // tab icon\n                  if (view.tabicon) {\n                     if (settings.iconOnTop)\n                        tabTemplate = [\n                           \"<div class='ab-tabIconContainer'><span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span><br/>\",\n                           view.label,\n                           \"</div>\",\n                        ].join(\"\");\n                     else\n                        tabTemplate = [\n                           \"<span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span> \",\n                           view.label,\n                        ].join(\"\");\n                  }\n\n                  // no icon\n                  else tabTemplate = view.label;\n\n                  return {\n                     header: tabTemplate,\n                     body: tabUi,\n                  };\n               });\n\n            // if there are cells to display then return a tabview\n            if (cells.length) {\n               _ui = {\n                  rows: [\n                     {\n                        view: \"tabview\",\n                        id: ids.tab,\n                        minWidth: settings.minWidth,\n                        height: settings.height,\n                        tabbar: {\n                           height: 60,\n                           type: \"bottom\",\n                           css: settings.darkTheme ? \"webix_dark\" : \"\",\n                           on: {\n                              onAfterRender: () => {\n                                 baseView.views((view) => {\n                                    const node = $$(\n                                       ids.tab\n                                    )?.$view?.querySelector(\n                                       `[button_id=\"${view.id}\"]`\n                                    );\n\n                                    if (!node) return;\n\n                                    node.setAttribute(\n                                       \"data-cy\",\n                                       `tab ${view.name} ${view.id} ${baseView.id}`\n                                    );\n                                 });\n                              },\n                           },\n                        },\n                        multiview: {\n                           on: {\n                              onViewChange: (prevId, nextId) => {\n                                 this.onShow(nextId);\n                              },\n                           },\n                        },\n                        cells: cells,\n                     },\n                  ],\n               };\n            }\n            // else we return a spacer\n            else\n               _ui = {\n                  view: \"spacer\",\n               };\n         }\n      } else\n         _ui = {\n            view: \"spacer\",\n         };\n\n      _ui = super.ui([_ui]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      if ($tab) abWebix.extend($tab, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // vc.component.init(AB);\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: vc.view,\n            eventName: \"changePage\",\n            listener: (...p) => this.changePage(...p),\n         });\n      });\n\n      // Trigger 'changeTab' event to parent\n      this.eventAdd({\n         emitter: baseView,\n         eventName: \"changeTab\",\n         listener: (...p) => this.changeTab(...p),\n      });\n\n      // initialize the sidebar and figure out if it should be collased or not\n      const $sidebar = $$(ids.sidebar);\n\n      if (!$sidebar) return;\n\n      const state = await ab.Storage.get(`${ids.tab}-state`);\n\n      if (!state) return;\n\n      // create a menu item for the collapse option to use later\n      const collapseMenu = {\n         id: ids.collapseMenu,\n         value: this.label(\"Collapse Menu\"),\n         icon: \"chevron-circle-left\",\n      };\n\n      // create a menu item from the expand option to use later\n      const expandMenu = {\n         id: ids.expandMenu,\n         value: this.label(\"Expand Menu\"),\n         icon: \"chevron-circle-right\",\n         hidden: true,\n      };\n\n      // this will collapse or expand the sidebar\n      $sidebar.setState(state);\n\n      const checkCollapseMenu = $sidebar.getItem(ids.collapseMenu) ?? null;\n      const checkExpandMenu = $sidebar.getItem(ids.expandMenu) ?? null;\n\n      // if the state is collapsed we need to make sure the expand option is available\n      if (state.collapsed) {\n         if (checkCollapseMenu && checkExpandMenu)\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(expandMenu);\n      } else if (checkCollapseMenu && checkExpandMenu)\n         // $sidebar.remove(ids.collapseMenu);\n         $sidebar.add(collapseMenu);\n   }\n\n   changePage(pageId) {\n      const $tab = $$(this.ids.tab);\n\n      $tab?.blockEvent();\n      this.view.changePage(pageId);\n      $tab?.unblockEvent();\n   }\n\n   changeTab(tabViewId) {\n      const baseView = this.view;\n      const $tabViewId = $$(tabViewId);\n\n      // switch tab view\n      this.toggleParent(baseView.parent);\n\n      if (this.settings.stackTabs)\n         if (!$tabViewId.isVisible()) {\n            const showIt = setInterval(() => {\n               if ($tabViewId.isVisible()) clearInterval(showIt);\n\n               $tabViewId.show(false, false);\n            }, 200);\n         } else $$(this.ids.tab).setValue(tabViewId);\n   }\n\n   toggleParent(view) {\n      const $viewID = $$(view.id);\n\n      if (view.key === \"tab\" || view.key === \"viewcontainer\") {\n         $viewID?.show(false, false);\n      }\n      if (view.parent) {\n         this.toggleParent(view.parent);\n      }\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      let defaultViewIsSet = false;\n\n      const $sidebar = $$(ids.sidebar);\n\n      // if no viewId is given, then try to get the currently selected ID\n      if (!viewId && $sidebar)\n         viewId = $sidebar.getSelectedId().replace(\"_menu\", \"\");\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // set default view id\n         const currView = baseView.views((view) => {\n            return view.id === vc.view.id;\n         });\n\n         let accessLevel = 0;\n\n         if (currView.length) accessLevel = currView[0].getUserAccess();\n\n         // choose the 1st View if we don't have one we are looking for.\n         if (!viewId && !defaultViewIsSet && accessLevel > 0) {\n            viewId = vc.view.id;\n\n            defaultViewIsSet = true;\n         }\n\n         // create view's component once\n         const $tab = $$(ids.tab);\n         const settings = this.settings;\n\n         if (!vc?.component && vc?.view?.id === viewId) {\n            // show loading cursor\n            if ($tab?.showProgress) $tab.showProgress({ type: \"icon\" });\n\n            vc.component = vc.view.component();\n\n            const $viewID = $$(vc.view.id);\n            const ab = this.AB;\n            const abWebix = ab.Webix;\n\n            if (settings.stackTabs) {\n               // update multiview UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-multiview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            } else {\n               // update tab UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-tabview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            }\n\n            // for tabs we need to look at the view's accessLevels\n            accessLevel = vc.view.getUserAccess();\n\n            vc.component.init(ab, accessLevel);\n\n            // done\n            setTimeout(() => {\n               // $$(v.view.id).adjust();\n\n               $tab?.hideProgress?.();\n               // check if tab has a hint\n               // if (vc?.view?.settings?.hintID) {\n               //    // fetch the steps for the hint\n               //    let hint = ab.hintID(vc.view.settings.hintID);\n               //    hint.createHintUI();\n               // }\n            }, 10);\n         }\n\n         // show UI\n         if (vc?.view?.id === viewId && vc?.component?.onShow)\n            vc.component.onShow();\n\n         if (settings.stackTabs && vc?.view?.id === viewId) {\n            $$(viewId)?.show(false, false);\n            $sidebar?.select(`${viewId}_menu`);\n         }\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTextComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewText_${baseView.id}`,\n         Object.assign(\n            {\n               text: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n\n      const _uiText = {\n         id: ids.text,\n         view: \"template\",\n         minHeight: 10,\n         css: \"ab-custom-template\",\n         borderless: true,\n      };\n\n      if (settings.height) _uiText.height = settings.height;\n      else _uiText.autoheight = true;\n\n      const _ui = super.ui([_uiText]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   displayText(value) {\n      const ids = this.ids;\n      const result = this.view.displayText(value, ids.text);\n\n      const $text = $$(ids.text);\n\n      if (!$text) return;\n\n      $text.define(\"template\", result);\n      $text.refresh();\n   }\n\n   onShow() {\n      super.onShow();\n\n      // listen DC events\n      const dataview = this.datacollection;\n      const baseView = this.view;\n\n      if (dataview && baseView.parent.key !== \"dataview\") {\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            baseView.eventAdd({\n               emitter: dataview,\n               eventName: key,\n               listener: (...p) => this.displayText(...p),\n            });\n         });\n      }\n\n      this.displayText();\n   }\n};\n","import ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewProperty extends ClassUI {\n   // constructor() {}\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {};\n   }\n\n   /** == Property == */\n   /**\n    * @function propertyComponent\n    * return the view and logic to display in property panel\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   static propertyComponent() {\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n\n   fromSettings(settings) {\n      this.settings = settings;\n   }\n\n   toSettings() {\n      return this.settings || {};\n   }\n\n   /** == UI == */\n   /**\n    * @function component\n    * return the view and logic to display in display widget\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewFormButton from \"../ABViewFormButton\";\nimport ABViewPDFImporter from \"../ABViewPDFImporter\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyAddPage extends ABViewProperty {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         formView: \"none\", // id of form to add new data\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formView: `${idBase}_formView`,\n      };\n\n      let ui = {\n         id: ids.formView,\n         name: \"formView\",\n         view: \"richselect\",\n         label: L(\"Add New Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formView).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            let pagesHasForm = view\n               .pageRoot()\n               .pages((p) => {\n                  return p.views((v) => {\n                     return (\n                        v &&\n                        v.key == \"form\" &&\n                        v.datacollection &&\n                        v.datacollection.datasource &&\n                        v.datacollection.datasource.id ==\n                           view.field().settings.linkObject\n                     );\n                  }, true).length;\n               }, true)\n               .map((p) => {\n                  return {\n                     id: p.id,\n                     value: p.label,\n                  };\n               });\n\n            editForms = editForms.concat(pagesHasForm);\n\n            let $selector = $$(ids.formView);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.formView || this.default.formView\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            settings.formView = $$(ids.formView).getValue();\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.formView =\n         settings.formView || this.constructor.default.formView;\n   }\n\n   getIds(idBase, App) {\n      return {\n         popup: App._App.unique(`${idBase}_popup_add_new`),\n         field: idBase.split(\"_\")[1],\n         button: App._App.unique(`${idBase}_popup_add_new_button`),\n      };\n   }\n\n   component(App, idBase) {\n      // This can be overwritten by creating a different getIds before calling .super\n      let ids = this.getIds(idBase, App);\n\n      let ui = \"\";\n\n      if (\n         this.settings.formView &&\n         this.settings.formView != this.constructor.default.formView\n      ) {\n         // let iDiv = document.createElement(\"div\");\n         // iDiv.className = \"ab-connect-add-new\";\n         const dataCy = `add new CR button ${this.settings.formView} ${ids.field}`;\n         // iDiv.innerHTML = `<a href=\"javascript:void(0);\" class=\"fa fa-plus ab-connect-add-new-link\" data-cy=\"${dataCy}\"></a>`;\n         // iDiv.appendChild(node);\n         // ui = iDiv.outerHTML;\n         ui = {\n            id: ids.button,\n            view: \"button\",\n            type: \"icon\",\n            icon: \"fa fa-plus\",\n            width: 32,\n            height: 32,\n            css: \"webix_primary ab-connect-add-new-link\",\n            on: {\n               onAfterRender: () => {\n                  $$(ids.button)\n                     ?.$view.querySelector(\"button\")\n                     .setAttribute(\"data-cy\", dataCy);\n               },\n            },\n         };\n      }\n\n      let _logic = {\n         callbacks: {\n            onSaveData: (saveData) => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n            },\n            onCancel: () => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n\n               return false;\n            },\n            onClearOnLoad: () => {\n               return true;\n            },\n            clearOnLoad: () => {\n               return true;\n            },\n         },\n\n         applicationLoad: (application) => {\n            this._application = application;\n         },\n\n         onClick: (dc) => {\n            let pageId = this.settings.formView;\n            let page = this._application.pages((p) => p.id == pageId, true)[0];\n\n            return _logic.openFormPopup(page, dc);\n         },\n\n         /**\n          * @method openFormPopup\n          *\n          * @param page {ABViewPage}\n          * @param dc {ABDataCollection}\n          */\n         openFormPopup: (page, dc) => {\n            return new Promise((resolve, reject) => {\n               if (this._application == null) return resolve();\n\n               if ($$(ids.popup)) {\n                  $$(ids.popup).show();\n                  return resolve();\n               }\n\n               // Clone page so we modify without causing problems\n               let pageClone = page.clone(null, null, { ignoreSubPages: true });\n               pageClone.id = this._application.AB.uuid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               // pageClone.id = pageClone.id + \"-\" + webix.uid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               let popUpComp = pageClone.component();\n               let ui = popUpComp.ui();\n\n               // Listen 'saved' event of the form widget\n               const saveViews =\n                  pageClone.views(\n                     (v) =>\n                        v instanceof ABViewFormButton ||\n                        v instanceof ABViewPDFImporter,\n                     true\n                  ) ?? [];\n\n               saveViews.forEach((view) => {\n                  const v =\n                     view instanceof ABViewFormButton ? view.parent : view;\n                  v.on(\"saved\", (savedData) => {\n                     _logic?.callbacks?.onSaveData(savedData);\n                     // ? is there ever a case where we want to keep an add popup open after saving?\n                     // ! setting this to always close\n\n                     if ($$(ids.popup)) {\n                        $$(ids.popup).close();\n                     } else {\n                        var popup = this.getTopParentView();\n                        popup.close();\n                     }\n                  });\n               });\n\n               let popupTemplate = {\n                  view: \"window\",\n                  id: ids.popup,\n                  modal: true,\n                  position: \"center\",\n                  // position:function(stthis.__addPageToolate){\n                  // \tstate.left = x + 20this.__addPageTool; // offset the popups\n                  // \tstate.top = y + 20;this.__addPageTool\n                  // },\n                  resize: true,\n                  width: parseInt(this.settings.popupWidth) || 700,\n                  height: parseInt(this.settings.popupHeight) + 44 || 450,\n                  css: \"ab-main-container\",\n                  head: {\n                     view: \"toolbar\",\n                     css: \"webix_dark\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: page.label,\n                           css: \"modal_title\",\n                           align: \"center\",\n                        },\n                        {\n                           view: \"button\",\n                           label: L(\"Close\"),\n                           autowidth: true,\n                           align: \"center\",\n                           click: function () {\n                              var popup = this.getTopParentView();\n                              popup.close();\n                           },\n                        },\n                     ],\n                  },\n                  body: {\n                     view: \"scrollview\",\n                     scroll: true,\n                     body: ui,\n                  },\n               };\n\n               // Create popup\n               webix.ui(popupTemplate).show();\n\n               // Initial UI components\n               const accessLevel = 3; // TODO: Is it correct\n               popUpComp.init(this._application.AB, accessLevel, {\n                  onSaveData: _logic.callbacks.onSaveData,\n                  onCancelClick: _logic.callbacks.onCancel,\n                  clearOnLoad: _logic.callbacks.clearOnLoad,\n                  onClearOnLoad: _logic.callbacks.onClearOnLoad,\n               });\n\n               popUpComp.onShow();\n\n               setTimeout(async () => {\n                  _logic.setDefaultValue(dc, pageClone);\n\n                  resolve();\n               }, 100);\n            });\n         },\n\n         setDefaultValue: (dc, page) => {\n            if (!dc) return;\n\n            let obj = dc.datasource;\n            if (!obj) return;\n\n            let linkedData = dc.getCursor();\n            if (!linkedData) return;\n\n            page.views().forEach((v) => {\n               if (!v || v.key != \"form\") return;\n\n               v.views().forEach((fView) => {\n                  if (fView.key != \"connect\" || fView.settings == null) return;\n\n                  let field = fView.field();\n                  if (field == null) return;\n\n                  let objLink = field.datasourceLink;\n                  if (objLink == null || objLink.id != obj.id) return;\n\n                  let data = {};\n                  let relationName = field.relationName();\n                  data[relationName] = {\n                     id: linkedData.id,\n                  };\n\n                  // Add custom index values\n                  let indexes = obj.indexes() || [];\n                  indexes.forEach((idx) => {\n                     (idx.fields || []).forEach((f) => {\n                        data[relationName][f.columnName] =\n                           linkedData[f.columnName];\n                     });\n                  });\n\n                  // Set label of selected item\n                  if (linkedData.text) {\n                     data[relationName].text = linkedData.text;\n                     data[relationName].value = data[relationName].text;\n                  } else {\n                     let rawData = {};\n                     rawData[relationName] = linkedData;\n                     data[relationName].text = field.format(rawData);\n                     data[relationName].value = data[relationName].text;\n                  }\n\n                  let comp = v.viewComponents[fView.id];\n                  if (!comp) return;\n\n                  const ui = typeof comp.ui == \"function\" ? comp.ui() : comp.ui;\n                  const inputId = ui?.inputId || ui?.rows?.[0]?.inputId;\n\n                  if (inputId) field.setValue($$(inputId), data);\n               });\n            });\n         },\n      };\n\n      let init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n         if (ui) {\n            for (let c in options) {\n               ui.on[c] = options[c];\n            }\n         }\n      };\n\n      return {\n         ui: ui,\n         init: init,\n\n         applicationLoad: _logic.applicationLoad,\n         onClick: _logic.onClick,\n         openFormPopup: _logic.openFormPopup,\n      };\n   }\n}\n","import ABViewPropertyAddPage from \"./ABViewPropertyAddPage\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyEditPage extends ABViewPropertyAddPage {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         editForm: \"none\", // The url pointer of ABViewForm\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formEdit: `${idBase}_editForm`,\n      };\n\n      let ui = {\n         id: ids.formEdit,\n         name: \"editForm\",\n         view: \"richselect\",\n         label: L(\"Edit Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formEdit).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n            clearOnLoad: () => {\n               return false; // always false, we're trying to edit data\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n            settings.clearOnLoad = false; // doesn't work\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            (view.pageRoot().pages(() => true, true) || []).forEach((p) => {\n               if (!p) return;\n\n               p.views(() => true, true).forEach((v) => {\n                  if (\n                     v &&\n                     v.key == \"form\" &&\n                     v.datacollection &&\n                     v.datacollection.datasource &&\n                     v.datacollection.datasource.id ==\n                        view.field().settings.linkObject\n                  ) {\n                     editForms.push({\n                        id: v.urlPointer(),\n                        value: `${p.label} - ${v.label}`,\n                     });\n                  }\n               });\n            });\n\n            let $selector = $$(ids.formEdit);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.editForm || this.default.editForm\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            let $selector = $$(ids.formEdit);\n            let $selectPopup = $selector.getPopup();\n            let selectedItem = ($selectPopup.config.body.data || []).filter(\n               (opt) => opt.id == $selector.getValue()\n            )[0];\n            if (selectedItem) {\n               settings.editForm = selectedItem.id; // The url pointer of ABViewForm\n            }\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.editForm =\n         settings.editForm || this.constructor.default.editForm;\n   }\n\n   component(App, idBase) {\n      // Overwrite the popup-lookup function\n      function getIds(idBase, App) {\n         return {\n            popup: App._App.unique(`${idBase}_popup_edit_form`),\n            field: idBase.split(\"_\")[1],\n         };\n      }\n      this.getIds = getIds;\n\n      // call to addpage\n      let comp = super.component(App, idBase);\n\n      comp.onClick = () => {\n         if (\n            !this._application ||\n            !this.settings.editForm ||\n            this.settings.editForm == this.constructor.default.editForm\n         )\n            return Promise.resolve();\n\n         let form = this._application.urlResolve(this.settings.editForm);\n         if (!form) return Promise.resolve();\n\n         let page = form.pageParent();\n         if (!page) return Promise.resolve();\n\n         return comp.openFormPopup(page);\n      };\n\n      return comp;\n   }\n}\n","/*\n * ABViewPropertyFilterData\n * This is a displayable ui component that will manage displaying a\n * means of searching for the user.\n *\n * This component will emit: \"filter.data\" when one of the filter options\n * have been enabled.\n *    \"filter.data\" has 2 parameters: fnFilter, filterRules\n *       fnFilter {function} when passed a row of data from the grid,\n *                return true/false if it passes the filter.\n *       filterRules {array} of each of the filter rules that have been\n *                created. Note: the fnFilter still checks the validity\n *                of the row based on these rules.\n *                (this is used for the parent component to indicate how\n *                many rules are currently applied to the data being displayed)\n */\nconst ABMLClass = require(\"../../ABMLClass\");\nimport ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\n// const ABViewGridFilterRule = require(\"../../../rules/ABViewGridFilterRule\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass FilterRuleSettings extends ABMLClass {\n   constructor() {\n      super([\"label\"], AB);\n   }\n\n   fromSettings(settings) {\n      super.fromValues(settings);\n      this.filters = settings.filters;\n   }\n\n   toSettings() {\n      let obj = super.toObj();\n      obj.filters = this.filters;\n      return obj;\n   }\n}\n\nclass ABViewPropertyFilterDataComponent extends ABViewComponent {\n   constructor(viewPropertyFilterData, idBase) {\n      var base = idBase || viewPropertyFilterData.idBase;\n      super(base, {});\n   }\n}\n\nexport default class ABViewPropertyFilterData extends ABViewProperty {\n   constructor(AB, idBase) {\n      super(idBase, {\n         buttonAddfilter: \"\",\n         filterPanel: \"\",\n         globalFilterFormContainer: \"\",\n         globalFilterForm: \"\",\n         filterMenutoolbar: \"\",\n         resetFilterButton: \"\",\n      });\n\n      this.AB = AB;\n      this.idBase = idBase;\n      this.object = null;\n      // this.queryRules = [];\n\n      this.__externalSearchText = null;\n      // {string}\n      // External sources of text filters are stored here. This is most likely\n      // from the global search toolbar entry.\n      this.rowFilter = this.AB.filterComplexNew(`${this.ids.component}_filter`);\n      // {RowFilter}\n      // When .userFilterPosition == \"toolbar\" we use this RowFilter to\n      // display a form in a popup where the toolbar button is.\n\n      this.rowFilterForm = this.AB.filterComplexNew(\n         `${this.ids.component}_filter_form`\n      );\n      // {RowFilter}\n      // When .userFilterPosition == \"form\" we use this RowFilter to\n      // display a form under the toolbar.\n\n      this._handler_rowFilterChanged = (value) => {\n         let filterRules = value.rules || [];\n\n         // if ($$(ids.buttonFilter)) {\n         //    $$(ids.buttonFilter).define('badge', filterRules.length || null);\n         //    $$(ids.buttonFilter).refresh();\n         // }\n\n         // be notified when there is a change in the filter\n         this.triggerCallback((rowData) => {\n            return this.rowFilter.isValid(rowData);\n         }, filterRules);\n      };\n\n      this._handler_rowFilterFormChanged = () => {\n         this.triggerCallback();\n      };\n\n      this.initialized = false;\n      // {bool}\n      // make sure this is not .init() more than once\n   }\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         filterOption: 1,\n         // {integer}\n         // 0 - Not allow\n         // 1 - Enable user filter\n         // 2 - Predefined filter menu\n         // 3 - Global filter input\n\n         // filterOptions == 1 options\n         userFilterPosition: \"toolbar\",\n         // {string} the location of the filter:\n         //    \"toolbar\" : there will be an \"Add Filters\" button on\n         //                the toolbar that will trigger the form popup\n         //    \"form\"    : there will be a button under the toolbar that\n         //                will bring up the form popup.\n\n         isGlobalToolbar: 1,\n         // {boolean|truthy}\n         // when \"toolbar\" is chosen for userFilterPosition, this setting\n         // allows us to also include the search criteria specified in\n         // the search box on the toolbar.\n\n         // filterOptions == 2 options\n         // predefined filters created by the builders. There will be\n         // an area under the toolbar that displays buttons to choose\n         // between one of the predefined queryRules.\n         // queryRules: [], // An array of ABViewGridFilterRule object\n\n         // filterOptions == 3 options\n         // globalFilterPosition: \"default\",\n         // {string} [ \"default\", \"single\" ]\n         //    \"default\" : shows default grid with all potential matches\n         //    \"single\"  : grid only shows when it has a match.  only 1\n         //                match is shown. ( is this true?? )\n      };\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      settings.filterOption =\n         typeof settings.filterOption != \"undefined\"\n            ? settings.filterOption\n            : ABViewPropertyFilterData.default.filterOption;\n\n      settings.isGlobalToolbar =\n         typeof settings.isGlobalToolbar != \"undefined\"\n            ? settings.isGlobalToolbar\n            : ABViewPropertyFilterData.default.isGlobalToolbar;\n\n      this.settings = settings;\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.object = object;\n\n      if (this.rowFilter) {\n         // this.rowFilter.applicationLoad(object.application);\n         this.rowFilter.fieldsLoad(object.fields());\n      }\n\n      if (this.rowFilterForm) {\n         // this.rowFilterForm.applicationLoad(object.application);\n         this.rowFilterForm.fieldsLoad(object.fields());\n      }\n   }\n\n   viewLoad(view) {\n      this.view = view;\n   }\n\n   /** == UI == */\n   ui() {\n      var self = this;\n      var ids = this.ids;\n\n      return {\n         id: ids.filterPanel,\n         type: \"space\",\n         borderless: true,\n         padding: 0,\n         hidden: true,\n         rows: [\n            {\n               id: ids.globalFilterFormContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.globalFilterForm,\n                     view: \"text\",\n                     placeholder: L(\"Search or scan a barcode to see results\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.triggerCallback();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: function () {\n                        var $form = $$(ids.globalFilterForm);\n                        $form.setValue(\"\");\n                        $form.focus();\n                        $form.callEvent(\"onTimedKeyPress\");\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.buttonAddfilter,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Filter\"),\n               click: () => {\n                  this.rowFilterForm.popUp($$(ids.buttonAddfilter).getNode(), {\n                     pos: \"bottom\",\n                  });\n               },\n            },\n            {\n               view: \"toolbar\",\n               id: ids.filterMenutoolbar,\n               css: \"ab-data-toolbar\",\n               hidden: true,\n               cols: [\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     id: ids.resetFilterButton,\n                     label: L(\"Reset Filter\"),\n                     icon: \"fa fa-ban\",\n                     type: \"icon\",\n                     // badge: 0,\n                     autowidth: true,\n                     click: function () {\n                        self.resetFilter();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      var ids = this.ids;\n      // this.filter_popup = webix.ui({\n      //    view: \"popup\",\n      //    id: ids.component,\n      //    width: 600,\n      //    height: 400,\n      //    hidden: true,\n      //    body: this.rowFilter.ui,\n      // });\n\n      this.rowFilter.init();\n      this.rowFilter.removeListener(\"changed\", this._handler_rowFilterChanged);\n      this.rowFilter.on(\"changed\", this._handler_rowFilterChanged);\n\n      this.rowFilterForm.init();\n      this.rowFilterForm.removeListener(\n         \"changed\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"changed\", this._handler_rowFilterFormChanged);\n      this.rowFilterForm.removeListener(\n         \"save\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"save\", this._handler_rowFilterFormChanged);\n\n      $$(ids.filterPanel)?.hide();\n      $$(ids.buttonAddfilter)?.hide();\n      $$(ids.filterMenutoolbar)?.hide();\n      $$(ids.globalFilterFormContainer)?.hide();\n\n      switch (this.settings.filterOption) {\n         case 0:\n            break;\n         case 1:\n            switch (this.settings.userFilterPosition) {\n               case \"form\":\n                  $$(ids.buttonAddfilter)?.show();\n                  $$(ids.filterPanel)?.show();\n                  break;\n               case \"toolbar\":\n                  $$(ids.filterPanel)?.hide();\n                  break;\n            }\n            break;\n         case 2:\n            $$(ids.filterPanel)?.show();\n            var $filterMenutoolbar = $$(ids.filterMenutoolbar);\n            if ($filterMenutoolbar) {\n               $filterMenutoolbar.show();\n\n               // populate filter items\n               if (this.settings?.queryRules) {\n                  (this.settings.queryRules || []).forEach((qr) => {\n                     let Rule = new FilterRuleSettings();\n                     Rule.fromSettings(qr);\n                     var filterRuleButton = {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        label: Rule.label,\n                        icon: \"fa fa-filter\",\n                        type: \"icon\",\n                        // badge: 0,\n                        autowidth: true,\n                        click: () => {\n                           this.emit(\"filter.data\", null, Rule.filters);\n                           // this.selectFilter(qr.filter);\n                        },\n                     };\n                     $filterMenutoolbar.addView(filterRuleButton);\n                  });\n               }\n            }\n            break;\n         case 3:\n            $$(ids.globalFilterFormContainer)?.show();\n            $$(ids.filterPanel)?.show();\n            break;\n      }\n   }\n\n   filterRules() {\n      let rowFilterRules = null;\n\n      switch (this.settings.userFilterPosition) {\n         case \"form\":\n            rowFilterRules = this.rowFilterForm.getValue();\n            break;\n         case \"toolbar\":\n            rowFilterRules = this.rowFilter.getValue();\n            break;\n      }\n\n      return rowFilterRules;\n   }\n\n   /**\n    * @method getFilter()\n    * Return a fn() that returns {truthy} with a given row of\n    * data.\n    */\n   getFilter() {\n      // default filter\n      if (this.__currentFilter == null) {\n         // if empty search text in global single mode, then no display rows\n         if (\n            this.settings.filterOption == 3 &&\n            this.settings.globalFilterPosition == \"single\"\n         )\n            this.__currentFilter = (/* row */) => {\n               return false;\n            };\n         // always true, show every rows\n         else\n            this.__currentFilter = (/* row */) => {\n               return true;\n            };\n      }\n\n      return this.__currentFilter;\n   }\n\n   /**\n    * @method triggerCallback()\n    * We compile our current search options and emit them back to our\n    * parent container.\n    */\n   triggerCallback(/*fnFilter, filterRules*/) {\n      let searchRules = this.searchText(this.__externalSearchText);\n      let rowFilterRules = this.filterRules();\n\n      let badgeCount = 0;\n      if (rowFilterRules?.rules?.length) {\n         badgeCount = rowFilterRules?.rules?.length;\n         if (searchRules) {\n            badgeCount++;\n            rowFilterRules = {\n               glue: \"and\",\n               rules: [rowFilterRules, searchRules],\n            };\n         }\n      } else {\n         rowFilterRules = searchRules;\n      }\n\n      this.emit(\"filter.data\", null, rowFilterRules);\n\n      if (badgeCount == 0) badgeCount = false;\n      const $button = $$(this.ids.buttonAddfilter);\n      if ($button) {\n         $button.config.badge = badgeCount;\n         $button.refresh();\n      }\n   }\n\n   resetFilter() {\n      this.triggerCallback(() => true, []);\n   }\n\n   /**\n    * @method externalSearchText()\n    * Save any search criteria established from outside this filterHelper.\n    * NOTE: The ABViewGrid has a toolbar search entry that will provide\n    * this value.\n    * @param {string} search\n    *        The typed in search criteria.\n    */\n   externalSearchText(search = null) {\n      this.__externalSearchText = search;\n      this.triggerCallback(); // update each time\n   }\n\n   /**\n    * @method searchText()\n    * Retrieve the typed in search terms from the user, and convert them\n    * into a set of Rules that will modify our results.\n    * If an external search param is provided, use that instead.\n    * @param {string} externalText\n    * @return {json} The QB Rule condition for the search criteria\n    */\n   searchText(externalText) {\n      var search;\n      if (externalText) {\n         search = externalText;\n      } else {\n         search = ($$(this.ids.globalFilterForm)?.getValue() ?? \"\").trim();\n      }\n      if (!search) return null; // <-- includes \"\"\n\n      // find the individual \"terms\" that we should search for\n      let terms = search.trim().toLowerCase().split(\" \");\n\n      // build a set of conditions for each term\n      var allTerms = [];\n\n      var allFields = this.object?.fields() || [];\n\n      terms.forEach((t) => {\n         var fieldTerms = [];\n\n         // for each field, add a match condition for that field\n         // (if the field applies)\n         allFields.forEach((f) => {\n            if (f.fieldIsFilterable()) {\n               switch (f.key) {\n                  case \"number\":\n                  case \"string\":\n                  case \"LongText\":\n                  case \"email\":\n                     fieldTerms.push({\n                        key: f.id,\n                        rule: \"contains\",\n                        value: t,\n                     });\n                     break;\n\n                  case \"list\":\n                     var options = f.options();\n                     options.forEach((o) => {\n                        if (o.text.indexOf(t) > -1) {\n                           fieldTerms.push({\n                              key: f.id,\n                              rule: \"equals\",\n                              value: o.id,\n                           });\n                        }\n                     });\n                     break;\n               }\n            }\n         });\n\n         if (fieldTerms.length > 0) {\n            allTerms.push({\n               glue: \"or\",\n               rules: fieldTerms,\n            });\n         }\n      });\n\n      if (allTerms.length > 0) {\n         var searchRules = {\n            glue: \"and\",\n            rules: allTerms,\n         };\n         return searchRules;\n      } else {\n         return null;\n      }\n   }\n\n   showPopup($view) {\n      // this.filter_popup.show($view, null, { pos: \"top\" });\n      this.rowFilter.popUp($view, null, { pos: \"center\" });\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewPropertyLinkPageComponent extends ABViewComponent {\n   constructor(linkPageHelper, idBase) {\n      let base = idBase || `ABViewPropertyLinkPage_xxx`;\n      super(base, {});\n\n      this.linkPageHelper = linkPageHelper;\n      this.AB = linkPageHelper.AB;\n\n      this.view = null;\n      // {ABViewXXXX}\n      // the ABView object this link references.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The related Datacollection to this view that drives it's data.\n      // we usually have to set the cursor before the view displays the\n      // appropriate data.\n   }\n\n   ui() {\n      return {};\n   }\n\n   init(options) {\n      if (options.view) this.view = options.view;\n\n      if (options.datacollection) this.datacollection = options.datacollection;\n   }\n\n   changePage(pageId, rowId) {\n      if (this.datacollection) {\n         this.datacollection.once(\"changeCursor\", () => {\n            this.view?.changePage(pageId);\n         });\n         this.datacollection.setCursor(rowId);\n      } else {\n         this.view?.changePage(pageId);\n      }\n   }\n}\n\nexport default class ABViewPropertyLinkPage extends ABViewProperty {\n   // constructor() {\n   //    super();\n   // }\n\n   /** == UI == */\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   component(v1App = false) {\n      let component = new ABViewPropertyLinkPageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (...params) => {\n               return newComponent.init(...params);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n            changePage: (...params) => {\n               return newComponent.changePage(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nmodule.exports = class ABViewQueryBuilderObjectFieldConditions {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(label) {\n      this.label = label;\n      this.ui = null;\n   }\n\n   /**\n    * cleanRules\n    * walk through all the QueryBuilder (QB) rules and make conversions\n    * of the data into their proper formats.\n    * @param {obj} rules  the {rules} obj that is returned from the QB object\n    * @param {array} fields  an array of field definitions from the QB object\n    * @param {bool} dateToString  convert Dates to String format?\n    */\n   cleanRules(rules, fields, dateToString) {\n      if (typeof dateToString == \"undefined\") dateToString = true;\n\n      // walk the given condition rules / values, walk them and make sure\n      // any given rules have properly formatted values.\n      function processCondition(rule) {\n         // make sure rule is provided\n         if (rule) {\n            if (rule.glue && rule.rules) {\n               rule.rules.forEach((r) => {\n                  processCondition(r);\n               });\n            } else {\n               // converting a single rule:\n\n               var field = fields.filter((f) => {\n                  return f.id == rule.key;\n               })[0];\n               if (field) {\n                  switch (field.type) {\n                     case \"number\":\n                     case \"formula\":\n                        // when getting data from the server, the numbers are\n                        // sent back as strings (\"100.25\").\n                        // make sure to convert strings to numbers:\n                        if (typeof rule.value == \"string\") {\n                           if (rule.value.indexOf(\".\") == -1) {\n                              rule.value = parseInt(rule.value);\n                           } else {\n                              rule.value = parseFloat(rule.value);\n                           }\n                        }\n                        break;\n                     case \"date\":\n                        // in some cases we want to convert the Date() object returned\n                        // by QueryBuilder into a string for saving on the Server.\n                        if (dateToString) {\n                           // if we have a Date() obj returned from QueryBuilder,\n                           // convert to a string format:\n                           if (rule.value instanceof Date) {\n                              rule.value = webix.i18n.dateFormatStr(rule.value);\n                           }\n                        } else {\n                           // in other cases we want to convert the string returned\n                           // by the server into a Date() for the QB\n                           if (typeof rule.value == \"string\") {\n                              rule.value = new Date(rule.value);\n                           }\n                        }\n\n                        break;\n                  }\n               }\n            }\n         }\n      }\n      processCondition(rules);\n   }\n\n   // component\n   // initialize the UI display for this popup editor.\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      var L = App.Label;\n\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: myUnique(\"qbObjectFieldConditions\"),\n         queryBuilder: myUnique(\"qBuilder\"),\n         queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n         queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n         showQBButton: myUnique(\"showQBButton\"),\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"layout\",\n         id: ids.queryBuilderLayout,\n         hidden: true,\n         type: \"line\",\n         rows: [\n            {\n               id: ids.showQBButton,\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     name: \"addqb\",\n                     value: L(\"Add Custom Conditions\"),\n                     autowidth: true,\n                     click: function () {\n                        $$(ids.queryBuilderContainer).show();\n                        $$(ids.showQBButton).hide();\n                        // _logic.buttonCancel();\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n            {\n               hidden: true,\n               id: ids.queryBuilderContainer,\n               cols: [\n                  {\n                     view: \"querybuilder\",\n                     id: ids.queryBuilder,\n                     fields: this.conditionFields(),\n                  },\n               ],\n            },\n         ],\n      };\n\n      // tack on a label if provided.\n      if (this.label) {\n         this.ui.rows[1].cols.unshift({\n            view: \"label\",\n            css: \"ab-text-bold\",\n            label: this.label,\n            width: this.AB.UISettings.config().labelWidthLarge,\n         });\n      }\n\n      // for setting up UI\n      this.init = (options) => {\n         options = options || {};\n\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         /**\n          * cleanRules\n          * walk through all the QueryBuilder (QB) rules and make conversions\n          * of the data into their proper formats.\n          * @param {obj} rules  the {rules} obj that is returned from the QB object\n          * @param {array} fields  an array of field definitions from the QB object\n          * @param {bool} dateToString  convert Dates to String format?\n          */\n         cleanRules: (rules, fields, dateToString) => {\n            this.cleanRules(rules, fields, dateToString);\n         },\n\n         getValue: () => {\n            var values = null;\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               values = QB.getValue();\n            }\n\n            // convert dates to simpler format:\n            // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n            // and webix doesn't seem to understand them when we send them back.\n            // so save simple date values: \"mm/dd/yyyy\"\n            if (values) {\n               _logic.cleanRules(values[0], values[1], true);\n            }\n\n            return values;\n         },\n\n         setValue: (values) => {\n            values = values || [];\n            if (!Array.isArray(values)) values = [values];\n            if (values.length == 0) {\n               values.push({});\n            } // push default rules\n            if (values.length < 2) {\n               values.push(this.conditionFields());\n            }\n\n            // convert dates from our server side \"string\" format into\n            // Date() objects.\n            _logic.cleanRules(values[0], values[1], false);\n\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               if (values[0] && values[0].rules && values[0].rules.length) {\n                  QB.setValue(values[0]);\n                  $$(ids.queryBuilderContainer).show();\n                  $$(ids.showQBButton).hide();\n               }\n            }\n         },\n      });\n\n      this.getValue = _logic.getValue;\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\n         \"string\",\n         \"LongText\",\n         \"number\",\n         \"date\",\n         \"email\",\n         \"formula\",\n         \"calculate\",\n      ];\n\n      var currFields = [];\n\n      if (this.currentObject) {\n         this.currentObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n\n               let type = f.key;\n               if (f.key == \"formula\" || f.key == \"calculate\") type = \"number\";\n               else if (f.key == \"LongText\") type = \"string\";\n\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: type,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // process\n   // Take the provided data and process each of our rules.\n   // @param {obj} options\n   // @return {promise}\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= this.listRules.length) {\n               resolve();\n            }\n         };\n\n         this.listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (this.listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   showQueryBuilderContainer() {\n      $$(this.ids.queryBuilderLayout).show();\n      $$(this.ids.queryBuilderContainer).show();\n      $$(this.ids.showQBButton).hide();\n   }\n\n   // // fromSettings\n   // // Create an initial set of default values based upon our settings object.\n   // // @param {obj} settings  The settings object we created in .toSettings()\n   // fromSettings (settings) {\n   // \t// settings: [\n   // \t//  { rule.settings },\n   // \t//  { rule.settings }\n   // \t// ]\n\n   // \t// clear any existing Rules:\n   // \tthis.listRules.forEach((rule)=>{\n   // \t\t$$(this.ids.rules).removeView(rule.ids.component);\n   // \t})\n   // \tthis.listRules = [];\n\n   // \tif (settings) {\n   // \t\tsettings.forEach((ruleSettings)=>{\n   // \t\t\tthis.addRule(ruleSettings);\n   // \t\t})\n   // \t}\n   // }\n\n   // // toSettings\n   // // create a settings object to be persisted with the application.\n   // // @return {array} of rule settings.\n   // toSettings () {\n   // \tvar settings = [];\n   // \tthis.listRules.forEach((r)=>{\n   // \t\tsettings.push(r.toSettings());\n   // \t})\n   // \treturn settings;\n   // }\n};\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nconst ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRule {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(listActions) {\n      this.listActions = listActions || []; // the list of Actions this Rule manages\n\n      this.actionDropList = []; // the Webix UI droplist\n      this.listActions.forEach((a) => {\n         this.actionDropList.push({ id: a.key, value: a.label });\n      });\n\n      this.selectedAction = null; // the currently selected Action.key\n      if (this.actionDropList.length > 0) {\n         this.selectedAction = this.actionDropList[0].id;\n      }\n\n      this.removable = true; // can I delete this rule?\n\n      this.currentObject = null; // What ABObject is this associated with\n      // NOTE: this is important for Actions.\n\n      this.objectQB = null; // The QueryBuilder (QB) object\n\n      this.currentForm = null;\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      // this is different because multiple instances of this View can be displayed\n      // at the same time.  So make each instance Unique:\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: myUnique(\"component\"),\n\n         selectAction: myUnique(\"chooseAction\"),\n\n         queryBuilder: myUnique(\"queryBuilder\"),\n\n         valueDisplay: myUnique(\"valueArea\"),\n      });\n\n      this.objectQB.label = L(\"When\");\n      this.objectQB.component(this.App, this.idBase);\n      this.ui = this._generateUI();\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         this.objectQB.init();\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.component(this.App, this.idBase);\n            var comp = Action.valueDisplay(ids.valueDisplay);\n\n            _logic.replaceValueDisplay(comp);\n\n            // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            comp.init();\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         replaceValueDisplay: (component) => {\n            // remove current content area:\n            var $ValueDisplay = $$(this.ids.valueDisplay);\n            if (!$ValueDisplay) return;\n\n            var children = $ValueDisplay.getChildViews();\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               $ValueDisplay.removeView(c);\n            });\n\n            $ValueDisplay.addView(component.ui);\n         },\n\n         selectAction: (newValue, oldVal) => {\n            if (newValue) {\n               $$(this.ids.component)\n                  .getChildViews()\n                  .forEach((views) => {\n                     views.show();\n                  });\n            }\n            // bonus:  save current state of previous Action\n            var prevAction = this.getAction(oldVal);\n            if (prevAction) {\n               prevAction.stashCondition(this.objectQB.getValue());\n            }\n\n            // now switch to the new Action\n            this.selectedAction = newValue;\n            var currAction = this.currentAction();\n            if (currAction) {\n               // reset Condition filters.\n               this.objectQB.setValue(currAction.condition());\n\n               // have Action display it's values form\n               currAction.component(this.App, this.idBase);\n               var component = currAction.valueDisplay(ids.valueDisplay);\n               _logic.replaceValueDisplay(component);\n               component.init();\n               // currAction.valueDisplay(ids.valueDisplay);\n            }\n         },\n      });\n   }\n\n   // not intended to be called externally\n   _generateUI() {\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rules\",\n         padding: 20,\n         // margin: 10,\n\n         // this should be a CSS setting: this.AB.Config.xxxx\n         // width: 680,\n         type: \"line\",\n         rows: [\n            {\n               view: \"template\",\n               css: \"ab-component-form-rules-delete\",\n               template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n               height: 30,\n               borderless: true,\n               hidddatasourceen: this.removable == false,\n               onClick: {\n                  \"ab-component-remove\": (e, id, trg) => {\n                     this._logic.callbacks.onDelete(this);\n                  },\n               },\n            },\n            // Action\n            {\n               id: this.ids.selectAction,\n               view: \"richselect\",\n               label: L(\"Action\"),\n               placeholder: L(\"Choose an action\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               options: this.actionDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     this._logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n\n            // Values\n            {\n               for: \"values\",\n               hidden: true,\n               cells: [\n                  {\n                     view: \"layout\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Values\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           id: this.ids.valueDisplay,\n                           view: \"layout\",\n                           rows: [\n                              {\n                                 label: L(\n                                    \" ABViewRule: This should be the Set Area\"\n                                 ),\n                                 css: \"ab-text-bold\",\n                                 height: 30,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n\n            // When\n            this.objectQB.ui,\n         ],\n      };\n   }\n\n   // return the QueryBuilder fields data for the currently selected Action.\n   conditionFields() {\n      var fields = [];\n\n      var selectedAction = this.currentAction();\n      if (selectedAction) {\n         fields = selectedAction.conditionFields();\n      }\n\n      return fields;\n   }\n\n   currentAction() {\n      return this.getAction(this.selectedAction);\n   }\n\n   getAction(key) {\n      return this.listActions.filter((a) => {\n         return a.key == key;\n      })[0];\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n      this.listActions.forEach((a) => {\n         a.objectLoad(object);\n      });\n\n      var label = L(\"When\");\n\n      this.objectQB = new ObjectQueryBuilder(label);\n      this.objectQB.objectLoad(object);\n\n      // regenerate our UI when a new object is loaded.\n      if (this.ids) {\n         this.ui = this._generateUI();\n      }\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.listActions.forEach((a) => {\n         a.formLoad(form);\n      });\n   }\n\n   processPre(options = {}) {\n      let isValid = this.isValid(options.data);\n      if (!isValid) return;\n\n      let currentAction = this.currentAction();\n      if (!currentAction) return;\n\n      currentAction.processUpdateObject({}, options.data);\n   }\n\n   // process\n   // Take the provided data and process this rule\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      var currentAction = this.currentAction();\n      if (!currentAction) return Promise.resolve();\n\n      let isValid = this.isValid(options.data);\n      if (isValid) {\n         return currentAction.process(options);\n      } else {\n         // else just resolve and continue on\n         return new Promise((resolve, reject) => {\n            resolve();\n         });\n      }\n   }\n\n   fromSettings(settings) {\n      settings = settings || {};\n\n      if (settings.selectedAction) {\n         // store our Query Rules\n         this.selectedAction = settings.selectedAction;\n         var selectedAction = this.currentAction();\n         if (!selectedAction) return;\n         selectedAction.stashCondition(settings.queryRules || {});\n\n         // if our UI components are present, populate them properly:\n         if (this.ids) {\n            // Trigger our UI to refresh with this selected Action:\n            // NOTE: this also populates the QueryBuilder\n            $$(this.ids.selectAction).setValue(this.selectedAction);\n            // this._logic.selectAction(this.selectedAction);\n         }\n\n         // now continue with setting up our settings:\n         selectedAction.fromSettings(settings.actionSettings);\n      }\n   }\n\n   toSettings() {\n      var settings = {};\n\n      if (this.selectedAction) {\n         settings.selectedAction = this.selectedAction;\n         settings.queryRules = this.objectQB.getValue();\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            settings.actionSettings = currentAction.toSettings();\n         }\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      var currAction = this.currentAction();\n      if (currAction && this.objectQB) {\n         this.objectQB.setValue(currAction.condition());\n         currAction.qbFixAfterShow();\n      }\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   async isReady() {\n      let currentAction = this.currentAction();\n      if (currentAction) {\n         return currentAction.isReady();\n      }\n      return Promise.resolve();\n   }\n\n   isValid(data = {}) {\n      const fields = this.currentObject.fields(),\n         currentAction = this.currentAction(),\n         QBCondition = currentAction.condition(),\n         query = QBCondition[0] ?? {};\n\n      const convertToNumber = (text = \"\") => {\n         // if we have multiple rules we need to check if value is already a number before converting.\n         if (typeof text == \"number\") return text;\n\n         return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n      };\n\n      // Fix string data in number type\n      // NOTE: \"1000\" > \"99\" = false    >_<!\n      fields\n         .filter(\n            (f) =>\n               f.key == \"number\" || f.key == \"calculate\" || f.key == \"formula\"\n         )\n         .forEach((f) => {\n            try {\n               // filter conditions\n               if (Array.isArray(query?.rules)) {\n                  query.rules.forEach((r) => {\n                     // NOTE: compatible with old settings\n                     if (r.key == f.id || r.key == f.columnName)\n                        r.value = convertToNumber(r.value);\n                  });\n               }\n\n               // row data\n               if (\n                  data[f.columnName] &&\n                  typeof data[f.columnName] === \"string\"\n               ) {\n                  data[f.columnName] = convertToNumber(data[f.columnName]);\n               }\n            } catch (e) {\n               // continue regardless of error\n            }\n         });\n\n      const hiddenFilter = (this.AB ?? AB).filterComplexNew(\n         `${this.idBase}_filter_complex`\n      );\n      hiddenFilter.fieldsLoad(fields, this.currentObject);\n      hiddenFilter.setValue(query);\n      hiddenFilter.init();\n\n      return hiddenFilter.isValid(data);\n\n      // var id = \"hiddenQB_\" + webix.uid();\n\n      // // if our data passes the QueryRules then tell Action to process\n      // var ui = {\n      //    id: id,\n      //    hidden: true,\n      //    view: \"querybuilder\",\n      // };\n      // var hiddenQB = webix.ui(ui);\n\n      // let currentAction = this.currentAction();\n      // var QBCondition = currentAction.condition();\n\n      // if (this.objectQB) {\n      //    this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n      // }\n\n      // let query = QBCondition[0] || {},\n      //    fields = QBCondition[1] || [];\n\n      // // hiddenQB.setValue(QBCondition);\n      // hiddenQB.setValue({\n      //    query: query,\n      //    fields: fields,\n      // });\n\n      // var QBHelper = hiddenQB.getFilterHelper();\n      // var isValid = QBHelper(data);\n\n      // hiddenQB.destructor(); // remove the QB\n\n      // return isValid;\n   }\n\n   get isPreProcess() {\n      let currentAction = this.currentAction();\n      return currentAction.isPreProcess || false;\n   }\n};\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n    */\n   constructor(App, idBase, currentForm) {\n      this.key = \"ABViewRuleAction\";\n\n      this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n      this.currentForm = null;\n\n      this.queryRules = {}; // default set of rules for the Query Builder condition\n\n      this.valueRules = {}; // the initial Value Rules for this Action\n      // The Action Subclass defines what this {} is.\n\n      this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      this.label = L(\"generic abviewruleaction\");\n\n      function myUnique(key) {\n         return App.unique(`${idBase}_${key}`);\n      }\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: `${myUnique(\"component\")}_${webix.uid()}`,\n      });\n\n      this._ui = null; // internally track our UI Component value Rules\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n      });\n   }\n\n   // condition\n   // Return the querybuilder setup structure for this Action.\n   // @return {array}  of querybuilder setup\n   //\t\t\t\t\t[\n   //\t\t\t\t\t\t{rules},\n   //\t\t\t\t\t\t[fields]\n   //\t\t\t\t\t]\n   condition() {\n      return [this.conditionRules(), this.conditionFields()];\n   }\n\n   // stashCondition\n   // capture the current set of rules provided by the QB object.\n   // This doesn't guarantee these will be saved to the App settings.\n   // Instead it is a temporary stash. Only the selected Action's\n   // values will be persisited to the App settings.\n   // @param {obj/Array} rules  The QueryBuilder rule value returned from\n   //\t\t\t\t\t\t\t .getValue()\n   //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n   //\n   stashCondition(rules) {\n      // check to see if they sent us the raw QueryBuilder values and only\n      // pull off the rules if they did\n      if (Array.isArray(rules)) {\n         rules = rules[0];\n      }\n\n      // sanity check on glue value: don't update if null or not given.\n      if (rules) {\n         // sometimes .glue is undefined  so default to 'and'\n         if (rules.glue != \"or\") rules.glue = \"and\";\n\n         this.queryRules = rules;\n      }\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      var currFields = [];\n\n      if (this.queryObject) {\n         this.queryObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: f.key,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // conditionRules()\n   // Return the current rule definition object for this Action.\n   // @return {obj}\n   conditionRules() {\n      return this.queryRules;\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      // this.currentObject = object;\t\t\t\t// DO WE NEED THIS?\n      this.queryObjectLoad(object);\n   }\n\n   // queryObjectLoad\n   // save the current object this Action is using to build query rules.\n   queryObjectLoad(object) {\n      this.queryObject = object;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      console.error(\n         \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      );\n      return new Promise((resolve, reject) => {\n         reject(\n            new Error(\n               \"ABViewRuleAction.process() should be overridden by its child class.\"\n            )\n         );\n      });\n   }\n\n   // valueDisplay\n   // create the form to collect the specific data this Action needs to function.\n   // @param {string} webixID  the $$(webixID) of the area to insert our display.\n   valueDisplay(webixID) {\n      return this.valueDisplayComponent(webixID);\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      return (this._ui = {\n         ui: {\n            template: \"ABViewRuleAction.valueDisplayComponent\",\n         },\n         init: (data) => {\n            console.error(\n               \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n            );\n            console.warn(\" --> passed in data:\", data);\n         },\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n      settings = settings ?? {};\n      this.valueRules = settings.valueRules ?? settings;\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      var settings = {};\n\n      // require the child to insert the valueRules\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   isReady() {\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      // our child classes can implement this if needed.\n      // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n   }\n};\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleList {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(childSettings) {\n      this.listRules = [];\n      this.currentObject = null;\n\n      // ensure required values:\n      childSettings = childSettings || {};\n      childSettings.labels = childSettings.labels || {};\n      childSettings.labels.header =\n         childSettings.labels.header || \"ab.components.form.ruleList\";\n      childSettings.labels.headerDefault =\n         childSettings.labels.headerDefault || \"*Rule List\";\n      this.childSettings = childSettings;\n   }\n\n   /**\n    * @method component\n    * initialize the UI display for this popup editor.\n    * @param {obj} App  The common UI App object shared among our UI components\n    * @param {string} idBase A unique Key used the the base of our unique ids\n    */\n   component(App, idBase) {\n      this.App = this.App || App;\n      this.idBase = idBase;\n\n      App = App || this.App;\n\n      this.currentForm = null;\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: `${idBase}_component`,\n         rules: `${idBase}_rules`,\n         rulesScrollview: `${idBase}_rulesScrollview`,\n\n         action: `${idBase}_action`,\n         when: `${idBase}_when`,\n\n         values: `${idBase}_values`,\n         set: `${idBase}_set`,\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"window\",\n         id: ids.component,\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: this.childSettings.labels.headerDefault,\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"iconButton\",\n                  label: L(\"Add new rule\"),\n                  width: 150,\n                  click: () => {\n                     this.addRule();\n                     console.log($$(ids.rules).$height);\n                     $$(ids.rulesScrollview).scrollTo(0, $$(ids.rules).$height);\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  view: \"scrollview\",\n                  id: ids.rulesScrollview,\n                  scroll: \"xy\",\n                  body: {\n                     view: \"layout\",\n                     id: ids.rules,\n                     margin: 20,\n                     padding: 10,\n                     rows: [],\n                  },\n               },\n               // {\n               // \tcss: { 'background-color': '#fff' },\n               // \tcols: [\n               // \t\t{\n               // \t\t\tview: \"button\",\n               // \t\t\ticon: \"plus\",\n               // \t\t\ttype: \"iconButton\",\n               // \t\t\tlabel: labels.component.addNewRule,\n               // \t\t\twidth: 150,\n               // \t\t\tclick: () => {\n               // \t\t\t\tthis.addRule();\n               // \t\t\t}\n               // \t\t},\n               // \t\t{ fillspace: true }\n               // \t]\n               // },\n               {\n                  css: { \"background-color\": \"#fff\" },\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonCancel();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"save\",\n                        label: L(\"Save\"),\n                        type: \"form\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonSave();\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // var _currentObject = null;\n      var _rules = [];\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         buttonCancel: function () {\n            $$(ids.component).hide();\n         },\n\n         buttonSave: () => {\n            var results = this.toSettings();\n\n            _logic.callbacks.onSave(results);\n            _logic.hide();\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         show: function () {\n            $$(ids.component).show();\n         },\n      });\n\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   /**\n    * @method addRule\n    * Instantiate a new Rule in our list.\n    * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n    */\n   addRule(settings) {\n      var Rule = this.getRule();\n      if (!Rule) return;\n\n      this.listRules.push(Rule);\n\n      // if we have tried to create our component:\n      if (this.ids) {\n         // if our actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            Rule.component(this.App, this.idBase); // prepare the UI component\n            var viewId = RulesUI.addView(Rule.ui);\n\n            Rule.init({\n               onDelete: (deletedRule) => {\n                  $$(this.ids.rules).removeView(Rule.ids.component);\n\n                  var index = this.listRules.indexOf(deletedRule);\n                  if (index !== -1) {\n                     this.listRules.splice(index, 1);\n                  }\n               },\n            });\n         }\n      }\n\n      if (settings) {\n         Rule.fromSettings(settings);\n      }\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      // settings: [\n      //  { rule.settings },\n      //  { rule.settings }\n      // ]\n\n      // clear any existing Rules:\n      this.listRules.forEach((rule) => {\n         if (\n            this.ids &&\n            this.ids.rules &&\n            rule &&\n            rule.ids &&\n            rule.ids.component\n         ) {\n            $$(this.ids.rules).removeView(rule.ids.component);\n         }\n      });\n      this.listRules = [];\n\n      if (settings) {\n         settings.forEach((ruleSettings) => {\n            this.addRule(ruleSettings);\n         });\n      }\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.currentObject = object;\n\n      // tell each of our rules about our object\n      this.listRules.forEach((r) => {\n         r.objectLoad(object);\n      });\n   }\n\n   processPre(options) {\n      (this.listRules || [])\n         .filter((rule) => rule.isPreProcess == true)\n         .forEach((rule) => {\n            rule.processPre(options, options.data);\n         });\n   }\n\n   /**\n    * @method process\n    * Take the provided data and process each of our rules.\n    * @param {obj} options\n    * @return {promise}\n    */\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let listRules = (this.listRules || []).filter(\n            (rule) => !rule.isPreProcess\n         );\n\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= listRules.length) {\n               resolve();\n            }\n         };\n\n         listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   /**\n    * @method toSettings\n    * create a settings object to be persisted with the application.\n    * @return {array} of rule settings.\n    */\n   toSettings() {\n      var settings = [];\n      this.listRules.forEach((r) => {\n         settings.push(r.toSettings());\n      });\n      return settings;\n   }\n\n   getRule() {\n      console.error(\n         \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n      );\n      return null;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.App = this.App || form.App;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   rulesReady() {\n      // This base class should be overwritten by any subclass that needs\n      // to prepare:\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      this.listRules.forEach((r) => {\n         r.qbFixAfterShow();\n      });\n   }\n};\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Record\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\nconst RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nconst RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\nconst RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nmodule.exports = class ABViewRuleListFormRecordRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.components.form.recordRules\",\n            headerDefault: \"*Record Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleUpdateExisting(\n            this.App,\n            `${this.idBase}_ruleActionUpdate`,\n            this.currentForm\n         ),\n         new RoleInsertConnected(\n            this.App,\n            `${this.idBase}_ruleActionInsert`,\n            this.currentForm\n         ),\n         new RoleUpdateConnected(\n            this.App,\n            `${this.idBase}_ruleActionUpdateConnected`,\n            this.currentForm\n         ),\n         new RoleRemoveConnected(\n            this.App,\n            `${this.idBase}_ruleActionRemoveConnected`,\n            this.currentForm\n         ),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      if (this.currentObject) {\n         Rule.objectLoad(this.currentObject);\n      }\n      return Rule;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our list of Rules is\n    * ready to work.\n    * @return {Promise}\n    */\n   async rulesReady() {\n      var allReady = (this.listRules || []).map((r) => r.isReady());\n      await Promise.all(allReady);\n   }\n};\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleConfirmMessage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\");\nconst RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\nconst RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\nconst RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\nconst RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nconst RuleEmail = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\");\n\nmodule.exports = class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.component.form.submitRule\",\n            headerDefault: \"*Submit Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleConfirmMessage(\n            this.App,\n            `${this.idBase}_ruleActionConfirmMessage`\n         ),\n         new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n         new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n         new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n         new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         new RuleEmail(this.App, `${this.idBase}_ruleActionEmail`),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      Rule.objectLoad(this.currentObject);\n      Rule.formLoad(this.currentForm);\n      return Rule;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleInsertConnected\n//\n// An action that allows you to insert a connected object.\n//\n// NOTE: this is very similar to the Update Connected Rule, so we subclass that one and\n// modify it to only Insert data.\n//\n//\nconst UpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleInsertConnected extends (\n   UpdateConnected\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleInsertConnected\";\n      this.label = L(\"Insert Connected Object\");\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var Component = super.valueDisplayChooser(idBase);\n\n      // in our case, there are no additional QB conditions:\n      // so overwrite the .showQBIfNeeded() routine to not show anything:\n      Component._logic.showQBIfNeeded = function () {};\n\n      return Component;\n   }\n\n   /**\n    * queryBuilderDisplay\n    * override our parent .queryBuilderDisplay to not create a new .objectQB\n    * @return {null}\n    */\n   queryBuilderDisplay() {\n      return null;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      // var condition = null; // our lookup condition\n\n      // we are going to create a new instance of the connected object\n      // and make sure our .id is in the connected object's connectionField\n      // the server side will take care of making the proper relationship.\n\n      // first, create a new set of values:\n      var newObjectValues = {};\n\n      // update them according to our rules\n      this.processUpdateObject({}, newObjectValues);\n\n      if (newObjectValues.newRecords) {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues.newRecords.forEach((r) => {\n            r[connectedObjectField.columnName] = options.data.id;\n            // perform the update/insert\n            return model.create(r);\n         });\n      } else {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues[connectedObjectField.columnName] = options.data.id;\n\n         // perform the update/insert\n         return model.create(newObjectValues);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //\tvalueRules:{}\t\t// from ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      // we don't use .qpCondition\n      delete settings.qbCondition;\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleRemoveConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionFormRecordRuleUpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleRemoveConnected extends (\n   ABViewRuleActionFormRecordRuleUpdateConnected\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleRemoveConnected\";\n      this.label = L(\"Remove Connected Record\");\n\n      this.isUpdateValueDisabled = true; // disable update data of each fields\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      let selectedField = this.selectedField();\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         // get the model from the provided Form Obj:\n         let dc = options.form.datacollection;\n         if (!dc) return resolve();\n\n         let model = dc.model;\n         if (!model) return resolve();\n\n         let updatedVals = {};\n         updatedVals[selectedField.columnName] = \"\";\n\n         model\n            .update(options.data.id, updatedVals)\n            .then(resolve)\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n                  data: options.data,\n               });\n               reject(err);\n            });\n      });\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdate\n//\n// An action that allows you to update fields on an object that was currently\n// Added/Updated.\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdate extends (\n   ABViewRuleActionObjectUpdater\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n   }\n\n   get isPreProcess() {\n      return true;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ObjectQueryBuilder = require(\"../ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdateConnected extends (\n   ABViewRuleActionObjectUpdater\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n      this.label = L(\"Update Connected Record\");\n\n      this.baseObject = null; // the object the current form is working with.\n      // Use this to find our connected fields.\n\n      this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n      // used for updating.  This should be one of the connection Fields.\n\n      this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n      this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n      this.qbCondition = null; // the QB condition entered for selecting which remote object.\n   }\n\n   // field\n\n   /**\n    * objectLoad\n    * save the current object this Action is associated with.\n    * in the case of the UpdateConnected Action, assigning us\n    * this object only impacts the queryObject.\n    *\n    * The Updater form will use another object we select in\n    * the form dropdown.\n    *\n    * @param {object} object\n    *\n    */\n   objectLoad(object) {\n      this.queryObjectLoad(object);\n      this.baseObject = object;\n\n      // now build our fieldDropList for the select\n      var connectionFields = this.connectedFieldList();\n      connectionFields.forEach((cf) => {\n         this.fieldDropList.push({\n            id: cf.id,\n            value: cf.label,\n         });\n      });\n   }\n\n   /**\n    * connectedFieldList\n    * return the fields in our .baseObject that are connections to other objects.\n    * @return {array} of {ABField}\n    */\n   connectedFieldList() {\n      var connectKey = ABFieldConnect.defaults().key;\n      if (this.baseObject && this.baseObject.fields) {\n         return this.baseObject.fields((f) => {\n            return f.key == connectKey;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * connectedObject\n    * return the ABObject associated with the selected connection field.\n    * @return {ABObject}\n    */\n   connectedObject() {\n      if (this.selectedFieldID) {\n         var selectedField = this.selectedField();\n         if (selectedField) {\n            return selectedField.datasourceLink;\n         }\n      }\n\n      return null;\n   }\n\n   /**\n    * selectedField\n    * return the selected {ABField} object.\n    * @return {ABField}\n    */\n   selectedField() {\n      return this.connectedFieldList().filter((f) => {\n         return f.id == this.selectedFieldID;\n      })[0];\n   }\n\n   /**\n    * valueDisplayComponent\n    * Return an ABView to display our values form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayComponent(idBase) {\n      if (this._uiChooser == null) {\n         this._uiChooser = this.valueDisplayChooser(idBase);\n      }\n\n      return this._uiChooser;\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         component: myUnique(\"updateConnectedValues\"),\n         updateForm: myUnique(\"updateChooser\"),\n         selectConnectedField: myUnique(\"updateSelect\"),\n         updateFieldsForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rule\",\n         rows: [\n            {\n               id: ids.selectConnectedField,\n               view: \"richselect\",\n               label: L(\"Select which connected object to update.\"),\n               labelWidth: 300,\n               value: this.selectedField,\n               options: this.fieldDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     _logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n         ],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n\n         // make sure our currently selected field is selected.\n         if (this.selectedFieldID) {\n            var select = $$(ids.selectConnectedField);\n            if (select) {\n               select.setValue(this.selectedFieldID);\n            }\n         }\n      };\n\n      var _logic = (this._logic = {\n         addDisplay: (view) => {\n            $$(ids.component).addView(view);\n         },\n\n         // removePreviousDisplays\n         // remove the previous components that reflected the conditions and\n         // update values of the previously selected field.\n         removePreviousDisplays: () => {\n            var allViews = $$(ids.component).getChildViews();\n            var cloneAllViews = [];\n            allViews.forEach((v) => {\n               cloneAllViews.push(v);\n            });\n            cloneAllViews.forEach((v) => {\n               // don't remove the field picker\n               if (v.config.id != ids.selectConnectedField) {\n                  $$(ids.component).removeView(v);\n               }\n            });\n         },\n\n         selectAction: (newVal, oldVal) => {\n            _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n            this.selectedFieldID = newVal;\n            var connectedObject = this.connectedObject();\n\n            if (connectedObject) {\n               // it is the remote object that we are allowed to Update fields on.\n               this.updateObjectLoad(connectedObject);\n               ///// NOTE: important to call super.valueDisplayComponent()\n               this.updateComponent = super.valueDisplayComponent(\n                  ids.updateFieldsForm\n               ); // parent obj\n\n               _logic.showQBIfNeeded();\n\n               // create a new blank update form\n               _logic.addDisplay(this.updateComponent.ui);\n               this.updateComponent.init();\n\n               if (this.isUpdateValueDisabled) {\n                  let $updateForm = $$(this.updateComponent.ui.id);\n                  if ($updateForm) {\n                     $updateForm.disable();\n                     $updateForm.hide();\n                  }\n               }\n            } else {\n               this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n                  fieldID: this.selectedFieldID,\n               });\n            }\n         },\n\n         showQBIfNeeded: () => {\n            //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n            //// the user the ability to set a condition on the update even if the field\n            //// is only a one to one.\n            //// If we want to remove the filter in case of a \"one\" linkType, then put\n            //// these conditions back in:\n\n            // var field = this.selectedField();\n\n            // // we don't need the QB if the destination object link type if 'one'.\n            // // there will only be one to get back, so no conditions needed.\n            // if (field.settings.linkType != 'one') {\n\n            var qbComponent = this.queryBuilderDisplay();\n\n            qbComponent.component(this.App, this.idBase);\n            _logic.addDisplay(qbComponent.ui);\n            qbComponent.init({});\n\n            // }\n         },\n\n         fromSettings: (settings) => {\n            // // first time through, be sure to set the connectedObject first\n            // this.selectedFieldID = settings.selectedFieldID;\n            // var connectedObject = this.connectedObject();\n\n            // this triggers the update of the display, creation of QB,\n            $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n            if (this.objectQB) {\n               this.objectQB.setValue(this.qbCondition);\n            }\n\n            if (this.updateComponent) {\n               this.updateComponent.fromSettings(settings);\n            }\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(rowSettings);\n               }\n            });\n\n            return settings;\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   /**\n    * queryBuilderDisplay\n    * returns our Query Builder object used in our display.\n    * It is called by the .showQBIfNeeded() method.\n    * @return {ABViewQueryBuilderObjectFieldConditions}\n    */\n   queryBuilderDisplay() {\n      if (!this.objectQB) {\n         this.objectQB = new ObjectQueryBuilder(\n            L(\"How to choose which object:\")\n         );\n\n         var connObj = this.connectedObject();\n         if (connObj) this.objectQB.objectLoad(connObj);\n      }\n      return this.objectQB;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      this._formData = options.data;\n\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      var condition = null; // our lookup condition\n\n      // modifyCondition\n      // async fn() to fill out what the condition should be for limiting the remote\n      // objects to values in use by the current object.\n      // @param {fn} cb  the callback to use when we are finished:\n      //\t\t\t\t\tcb(err, )\n      var modifyCondition = (cb) => {\n         // So, let's get a copy of our current data, with all it's connected items\n         // attached.\n         var thisModel = this.baseObject.model();\n         thisModel\n            .findConnected(connectionField.columnName, options.data)\n            .then((items) => {\n               // if we didn't get any results, then simply return\n               // NOTE: this will leave condition == null and cancel this update.\n               if (!items || items.length == 0) {\n                  cb();\n                  return;\n               }\n\n               // then use these to limit the connected data of our Action:\n\n               // get all the ids\n               var ids = items.map((i) => {\n                  return i.id;\n               });\n\n               // resulting condition: { id in [listIDs]} AND { QB Condition }\n               condition = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: `${connObj.tableName}.${connObj.PK()}`,\n                        rule: \"in\",\n                        value: ids,\n                     },\n                  ],\n               };\n\n               // check to make sure qbCondition actually has a condition before adding it\n               // to our condition:\n               if (Object.keys(this.qbCondition).length > 0) {\n                  condition.rules.push(this.qbCondition);\n               }\n\n               cb();\n            })\n            .catch(cb);\n      };\n\n      // .process() returns a Promise\n      return new Promise((resolve, reject) => {\n         // upateIt()\n         // updates a given item with our changes.\n         // @param {obj} item  the item to update\n         // @param {fn}  cb    a callback function when update is complete.\n         var updateIt = (item, cb) => {\n            let isUpdated = this.processUpdateObject({}, item);\n            if (!isUpdated) {\n               cb();\n            } else {\n               model\n                  .update(item.id, item)\n                  .then(() => {\n                     cb();\n                  })\n                  .catch((err) => {\n                     this.AB.notify.developer(err, {\n                        message:\n                           \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n                        data: options.data,\n                     });\n                     cb(err);\n                  });\n            }\n         };\n\n         // now figure out which elements belong to this object\n         // done in modifyCondition()\n         modifyCondition((err) => {\n            if (err) {\n               AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.modifyCondition: error:\",\n                  data: options.data,\n               });\n               reject(err);\n               return;\n            }\n\n            if (condition === null) {\n               // this is the case where we didn't have the proper data to complete our\n               // update.  So let's just fail gracefully, and continue on.\n\n               // QUESTION: is this the right way to handle it?\n               resolve();\n            } else {\n               // get all the entries that match our condition:\n               model\n                  .findAll({ where: condition })\n                  .then((list) => {\n                     var done = 0;\n\n                     // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n                     if (list && list.data) {\n                        list = list.data;\n                     }\n\n                     // for each entry, update it with our values:\n                     list.forEach((item) => {\n                        updateIt(item, (err) => {\n                           if (err) {\n                              return reject(err);\n                           }\n                           done++;\n                           if (done >= list.length) {\n                              // now they are all updated, so continue.\n                              resolve();\n                           }\n                        });\n                     });\n\n                     // if there were no entries to update -> continue\n                     if (list.length == 0) {\n                        resolve();\n                     }\n                  })\n                  .catch(reject);\n            }\n         }); // end modifyCondition()\n      }); // end Promise()\n   }\n\n   /**\n    * fromSettings\n    * initialize this Action = require(a given set of setting values.\n    * @param {obj} settings  the settings {} returned = require(toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      this.selectedFieldID = settings.selectedFieldID || null;\n      this.qbCondition = settings.qbCondition || {};\n\n      super.fromSettings(settings);\n\n      // if we have a display component, then populate it:\n      if (this._uiChooser) {\n         this._logic.fromSettings(settings);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //  qbCondition: [],\n      //\tvalueRules:{}\t\t// = require(ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.selectedFieldID = this.selectedFieldID;\n\n      var qbCond = null;\n      if (this.objectQB) {\n         qbCond = this.objectQB.getValue();\n         if (Array.isArray(qbCond)) {\n            qbCond = qbCond[0];\n         }\n\n         // FIX: make sure qbCond root element has a 'glue'\n         if (qbCond) {\n            qbCond.glue = qbCond?.glue || \"and\";\n         }\n      }\n      settings.qbCondition = qbCond;\n\n      // if we have a display component, then request our details = require(it:\n      if (this._uiChooser) {\n         settings.valueRules = this._logic.toSettings();\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      if (this.objectQB) {\n         this.objectQB.setValue(this.qbCondition);\n      }\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleClosePopup\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleClosePopup extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleClosePopup\";\n      this.label = L(\"Close the current popup\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"layout\",\n            rows: [],\n         },\n\n         init: () => {},\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let form = options.form;\n         if (!form) return;\n\n         let popup = form.pageParent((p) => p.settings.type == \"popup\");\n         if (!popup) return;\n\n         // get the dom id of page. it is dom id that is generated in ABLiveTool.js\n         // let pageDomId = [\"ab_live_page\", popup.application.id, popup.id].join(\n         //    \"_\"\n         // );\n\n         // close current popup\n         let $popup = $$(popup.id);\n         if ($popup) $popup.hide();\n\n         // this clears the UI's record of the current form.\n         options.form.changePage(null);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleConfirmMessage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n      this.label = L(\"Show a confirmation message\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.message,\n            view: \"textarea\",\n            // label: this.labels.component.message,\n            // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            height: 130,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.message).setValue(valueRules.message || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               message: $$(ids.message).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var confirmMessage = this.valueRules.message || \"\";\n\n         webix.message({\n            text: confirmMessage,\n            type: \"info\",\n         });\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleEmail extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n      this.label = L(\"Send a custom email\");\n\n      this.queryObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.queryObject) {\n   //       this.queryObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         form: `${idBase}_form`,\n         popup: `${idBase}_popup`,\n         list: `${idBase}_fieldList`,\n         toEmailsContainer: `${idBase}_toEmailsContainer`,\n         toEmails: `${idBase}_toEmails`,\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (newVal, oldVal) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    \"Email is invalid\"\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    _logic.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        view: \"textarea\",\n                        id: ids.message,\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     // \tview: 'label',\n                     // \tlabel: 'Message',\n                     // \tcss: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     // \tview: 'forminput',\n                     // \tid: ids.message,\n                     // \tname: 'message',\n                     // \tlabel: 'Message',\n                     // \tcss: \"ab-rich-text\",\n                     // \twidth: 320,\n                     // \theight: 400,\n                     // \tbody: {\n                     // \t\tview: 'tinymce-editor'\n                     // \t}\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: function (obj, common) {\n                           return _logic.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id, e, node) {\n                              var component = this.getItem(id);\n\n                              _logic.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n\n         init: () => {\n            if (this.queryObject) {\n               $$(ids.list).parse(\n                  this.queryObject.fields((f) => f.fieldUseAsLabel())\n               );\n               $$(ids.list).refresh();\n            }\n\n            _logic.refreshUI();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.form).setValues(valueRules);\n\n            // Populate recipients\n            var recipients = valueRules.toEmails || [];\n            recipients.forEach((r) => {\n               _logic.toEmailAdd({\n                  type: r.type, // 'to', 'cc' or 'bcc'\n                  emailType: r.emailType, // 'email' or 'field'\n                  value: r.value,\n               });\n            });\n\n            _logic.refreshUI();\n         },\n\n         toSettings: () => {\n            var formVals = $$(ids.form).getValues() || {};\n\n            // Get recipients\n            var recipients = [];\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((e) => {\n                  // var type = e.queryView({ name: 'type' }).getValue();\n                  var type = \"to\"; // TODO\n                  var emailType = e.queryView({ name: \"emailType\" }).getValue();\n                  var value = e.queryView({ name: emailType }).getValue();\n\n                  recipients.push({\n                     type: type,\n                     emailType: emailType,\n                     value: value,\n                  });\n               });\n\n            // return the confirm message\n            return {\n               fromName: formVals[\"fromName\"],\n               fromEmail: formVals[\"fromEmail\"],\n               toEmails: recipients,\n               subject: formVals[\"subject\"],\n               message: formVals[\"message\"],\n            };\n         },\n\n         /**\n          * @method toEmailTemplate\n          *\n          * @param settings - {\n          * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n          * \t\t\temailType: string, // 'email' or 'field'\n          * \t\t\tvalue: string\n          * }\n          */\n         toEmailTemplate: (settings) => {\n            settings = settings || {};\n\n            return {\n               width: 320,\n               cols: [\n                  // {\n                  // \tview: 'richselect',\n                  // \tname: 'type',\n                  // \tvalue: settings.type || 'to',\n                  // \twidth: 80,\n                  // \toptions: [\n                  // \t\t{ id: 'to', value: \"To:\" },\n                  // \t\t// EmailNotification does not support cc, bcc and reply.\n                  // \t\t// { id: 'cc', value: \"Cc:\" },\n                  // \t\t// { id: 'bcc', value: \"Bcc:\" },\n                  // \t\t// { id: 'reply', value: \"Reply-To:\" }\n                  // \t]\n                  // },\n                  {\n                     view: \"richselect\",\n                     name: \"emailType\",\n                     value: settings.emailType || \"email\",\n                     width: 150,\n                     options: [\n                        {\n                           id: \"email\",\n                           value: L(\"A custom email address\"),\n                        },\n                        { id: \"field\", value: L(\"An email field\") },\n                        { id: \"query\", value: L(\"From query\") },\n                     ],\n                     on: {\n                        onChange: function (newVal, oldVal) {\n                           _logic.emailTypeChange(newVal, this);\n                        },\n                     },\n                  },\n                  {\n                     width: 150,\n                     name: \"emailValue\",\n                     visibleBatch: settings.emailType || \"email\",\n                     cols: [\n                        {\n                           view: \"text\",\n                           name: \"email\",\n                           batch: \"email\",\n                           value:\n                              settings.emailType == \"email\"\n                                 ? settings.value\n                                 : \"\",\n                           validate: webix.rules.isEmail,\n                           width: 150,\n                           on: {\n                              onChange: function (newVal, oldVal) {\n                                 _logic.toEmailValidate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"field\",\n                           batch: \"field\",\n                           value:\n                              settings.emailType == \"field\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.emailFieldOptions(),\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"query\",\n                           batch: \"query\",\n                           value:\n                              settings.emailType == \"query\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.queryOptions(),\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash-o\",\n                     width: 32,\n                     click: function () {\n                        var $toView = this.getParentView();\n\n                        _logic.toEmailRemove($toView);\n                     },\n                  },\n               ],\n            };\n         },\n\n         toEmailAdd: (settings) => {\n            var count = $$(ids.toEmails).getChildViews().length;\n\n            $$(ids.toEmails).addView(_logic.toEmailTemplate(settings), count);\n\n            _logic.refreshUI();\n         },\n\n         emailTypeChange: (type, $select) => {\n            var $recipient = $select.getParentView();\n            var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n            switch (type) {\n               case \"field\":\n                  $emailValue.showBatch(\"field\");\n                  break;\n               case \"query\":\n                  $emailValue.showBatch(\"query\");\n                  break;\n               default:\n                  $emailValue.showBatch(\"email\");\n                  break;\n            }\n\n            $$(ids.toEmailsContainer).adjust();\n         },\n\n         toEmailRemove: ($toView) => {\n            $$(ids.toEmails).removeView($toView);\n\n            _logic.refreshUI();\n         },\n\n         toEmailValidate: () => {\n            var isAllValid = true;\n\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((v) => {\n                  let emailText = v.queryView({ name: \"email\" });\n                  if (emailText.getValue() && !emailText.validate()) {\n                     isAllValid = false;\n                  }\n               });\n\n            if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n            else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n         },\n\n         fieldTemplate: (field, common) => {\n            return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n         },\n\n         emailFieldOptions: () => {\n            var existsFieldIds = [];\n            var options = [];\n\n            var fnAddOptions = (currObj, fLink) => {\n               var emailFields = currObj\n                  .fields((f) => f instanceof ABFieldEmail)\n                  .map((f) => {\n                     var optId = \"\",\n                        optLabel = \"\";\n\n                     if (fLink) {\n                        optId = `${fLink.id}|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                     } else {\n                        optId = `|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label}`;\n                     }\n\n                     return {\n                        id: optId, // linkFieldId|fieldUrl\n                        value: optLabel,\n                     };\n                  });\n\n               // TODO: prevent duplicate\n\n               options = options.concat(emailFields);\n            };\n\n            fnAddOptions(this.queryObject);\n\n            this.queryObject.connectFields().forEach((f) => {\n               // prevent looping\n               if (\n                  // - prevent include connect objects of the base object\n                  // f.datasourceLink.id == this.queryObject.id ||\n                  // - check duplicate include objects\n                  existsFieldIds.indexOf(f.id) > -1\n               )\n                  return;\n\n               // store\n               existsFieldIds.push(f.id);\n\n               // add email fields of link object\n               fnAddOptions(f.datasourceLink, f);\n            });\n\n            return options;\n         },\n\n         queryOptions: () => {\n            var options = [];\n\n            // get data collections who is query and contains email field\n            let dcQueries = this.currentForm.AB.datacollections((dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            });\n\n            dcQueries.forEach((dv) => {\n               if (dv.datasource) {\n                  dv.datasource\n                     .fields((f) => f.key == \"email\")\n                     .forEach((f) => {\n                        options.push({\n                           id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n                           value: `${dv.label}.${f.label}`,\n                        });\n                     });\n               }\n            });\n\n            return options;\n         },\n\n         enterField: (field) => {\n            var focusElem = webix.UIManager.getFocus();\n            var val = \"\";\n\n            if (\n               focusElem.config.view != \"text\" ||\n               focusElem.config.view != \"textarea\"\n            ) {\n               if (focusElem.getValue) val = focusElem.getValue();\n\n               if (focusElem.setValue)\n                  focusElem.setValue(`${val}${field.label}`);\n\n               webix.UIManager.setFocus(focusElem);\n            }\n         },\n\n         refreshUI: () => {\n            $$(ids.toEmailsContainer).adjust();\n            $$(ids.message).adjust();\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options - {\n   //\t\t\t\t\t\t\tdata: {obj} rowData,\n   //\t\t\t\t\t\t\tform: {ABViewForm}\n   //\t\t\t\t\t\t}\n   process(options) {\n      // validate sender's email is invalid\n      if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n         return Promise.resolve();\n      }\n\n      var recipients = [];\n\n      return Promise.resolve()\n         .then(() => {\n            // Pull recipients data\n            return new Promise((resolve, reject) => {\n               var tasks = [];\n\n               this.valueRules.toEmails.forEach((rec) => {\n                  tasks.push(\n                     new Promise((next, err) => {\n                        // TODO: Cc, Bcc\n\n                        // field\n                        if (rec.emailType == \"field\") {\n                           var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n                           var emailField =\n                              this.queryObject.application.urlResolve(\n                                 emailFieldUrl\n                              );\n                           if (emailField) {\n                              // Pull email source object\n                              if (emailField.object.id == this.queryObject.id) {\n                                 var emailData =\n                                    options.data[emailField.columnName];\n                                 if (emailData)\n                                    recipients = recipients.concat(emailData);\n                              }\n                              // Pull emails from link object\n                              else {\n                                 let linkFieldId = rec.value.split(\"|\")[0];\n                                 let linkFields = this.queryObject.fields(\n                                    (f) =>\n                                       f instanceof ABFieldConnect &&\n                                       f.id == linkFieldId\n                                 );\n                                 linkFields.forEach((f) => {\n                                    var linkedData =\n                                       options.data[f.relationName()] || [];\n\n                                    // convert to an array\n                                    if (\n                                       linkedData &&\n                                       !Array.isArray(linkedData)\n                                    )\n                                       linkedData = [linkedData];\n\n                                    // pull email address\n                                    linkedData.forEach((d) => {\n                                       var email = d[emailField.columnName];\n                                       if (email)\n                                          recipients = recipients.concat(email);\n                                    });\n                                 });\n                              }\n\n                              next();\n                           } else {\n                              next();\n                           }\n                        }\n\n                        // query\n                        else if (rec.emailType == \"query\") {\n                           var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n                           if (!dvIdAndFieldId) return next();\n\n                           var dcId = dvIdAndFieldId.split(\"|\")[0];\n                           var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n                           var dcQuery =\n                              this.currentForm.AB.datacollectionByID(dcId);\n                           if (!dcQuery) return next();\n\n                           var field = dcQuery.datasource.fieldByID(fieldId);\n                           if (!field) return next();\n\n                           // get data of data collection\n                           dcQuery.getData().forEach((data) => {\n                              var emailAddr = data[field.columnName];\n                              if (emailAddr) recipients.push(emailAddr);\n                           });\n\n                           next();\n                        }\n\n                        // email\n                        else {\n                           recipients.push(rec.value);\n                           next();\n                        }\n                     })\n                  );\n               });\n\n               Promise.all(tasks).catch(reject).then(resolve);\n            });\n         })\n         .then(() => {\n            // send out\n            return new Promise((resolve, reject) => {\n               recipients = this.AB.uniq(recipients).filter((r) => r);\n\n               if (!recipients || recipients.length < 1) return resolve();\n\n               // replace form value to template\n               var fromName = this.valueRules.fromName,\n                  subject = this.valueRules.subject,\n                  message = this.valueRules.message;\n\n               this.queryObject\n                  .fields((f) => f.fieldUseAsLabel())\n                  .forEach((f) => {\n                     var template = new RegExp(`{${f.label}}`, \"g\"),\n                        data = f.format(options.data);\n\n                     fromName = fromName.replace(template, data);\n                     subject = subject.replace(template, data);\n                     message = message.replace(template, data);\n                  });\n\n               // send a email\n               this.AB.Network.post({\n                  url: \"/app_builder/email\",\n                  params: {\n                     fromName: fromName,\n                     fromEmail: this.valueRules.fromEmail,\n                     subject: subject,\n                     message: message,\n                     recipients: this.AB.uniq(recipients),\n                  },\n               })\n                  .then(() => {\n                     resolve();\n                  })\n                  .catch(reject);\n            });\n         });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleExistPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleExistPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleExistPage\";\n      this.label = L(\"Redirect to an existing page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         pagesAndTabs: `${idBase}_PagesAndTabs`,\n      };\n\n      this._ui = {\n         ui: { id: ids.pagesAndTabs, view: \"richselect\", options: [] },\n\n         init: () => {\n            _logic.populateOptions();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         populateOptions: () => {\n            // Pull page list to \"Redirect to an existing page\"\n            var _pageOptions = [];\n\n            /**\n             * @param pageOrTab\t{Object}\t- ABViewPage or ABViewTab\n             * @param indent\t{integer}\n             * @param type\t\t{string}\t- 'page' or 'tab'\n             * @param pageId\t{uuid}\t\t- the id of page (only tab)\n             */\n            var addPage = (pageOrTab, indent, type, pageId) => {\n               indent = indent || \"\";\n\n               let icon = \"fa fa-file-o\";\n               if (type == \"tab\") icon = \"fa fa-window-maximize\";\n\n               let pageParent = pageOrTab.pageParent();\n\n               _pageOptions.push({\n                  id: pageOrTab.id,\n                  value: indent + pageOrTab.label,\n                  type: type,\n                  pageId: pageParent ? pageParent.id : null,\n\n                  icon: icon,\n               });\n\n               if (type == \"page\" || type == \"tab\") {\n                  if (pageOrTab.pages) {\n                     pageOrTab.pages().forEach(function (p) {\n                        addPage(p, indent + \"-\", \"page\");\n                     });\n                  }\n\n                  // add 'tab' options\n                  if (pageOrTab.views) {\n                     pageOrTab\n                        .views((v) => v.key == \"tab\")\n                        .forEach((tab) => {\n                           // add 'tab view' to options\n                           tab.views().forEach((tabView) => {\n                              addPage(\n                                 tabView,\n                                 indent + \"-\",\n                                 \"tab\",\n                                 pageOrTab.id\n                              );\n                           });\n                        });\n                  }\n               }\n            };\n\n            addPage(this.currentForm.pageRoot(), \"\", \"page\");\n\n            $$(ids.pagesAndTabs).define(\"options\", _pageOptions);\n            $$(ids.pagesAndTabs).refresh();\n         },\n\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.pagesAndTabs).setValue(\n               valueRules.tabId || valueRules.pageId || \"\"\n            );\n         },\n\n         toSettings: () => {\n            var result = {};\n\n            var selectedId = $$(ids.pagesAndTabs).getValue();\n            var selectedItem = $$(ids.pagesAndTabs)\n               .getPopup()\n               .getList()\n               .config.data.filter((opt) => opt.id == selectedId)[0];\n            if (selectedItem) {\n               if (selectedItem.type == \"tab\") {\n                  // store page id and tab id\n                  result = {\n                     pageId: selectedItem.pageId,\n                     tabId: selectedId,\n                  };\n               } else {\n                  // store only page id\n                  result = {\n                     pageId: selectedId,\n                  };\n               }\n            }\n\n            // return the confirm message\n            return result;\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect page\n         if (this.valueRules.pageId) {\n            options.form.changePage(this.valueRules.pageId);\n\n            if (this.valueRules.tabId) {\n               var curPage = options.form.application.pages(\n                  (p) => p.id == this.valueRules.pageId,\n                  true\n               )[0];\n               if (!curPage) return resolve();\n\n               // switch tab\n               var tabView = curPage.views(\n                  (v) => v.id == this.valueRules.tabId,\n                  true\n               )[0];\n               if (!tabView) return resolve();\n\n               var tab = tabView.parent;\n               if (!tab) return resolve();\n\n               var toggleParent = (element) => {\n                  if (!element.parent) return false;\n                  var parentElem = element.parent;\n                  if (!parentElem.parent) return false;\n                  parentElem.parent.emit(\"changeTab\", parentElem.id);\n                  toggleParent(parentElem.parent);\n               };\n\n               toggleParent(tab);\n               let showIt = setInterval(function () {\n                  if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                     clearInterval(showIt);\n                     return;\n                  }\n                  tab.emit(\"changeTab\", tabView.id);\n               }, 100);\n            }\n         }\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleParentPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleParentPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleParentPage\";\n      this.label = L(\"Redirect to the parent page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"label\",\n            label: this.label,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n      };\n\n      var _logic = {};\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var pageCurrent = options.form.pageParent();\n         var pageParent = pageCurrent.pageParent();\n\n         // redirect page\n         options.form.changePage(pageParent.id);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleWebsite extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleWebsite\";\n      this.label = L(\"Redirect to another website URL\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         website: `${idBase}_website`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.website,\n            view: \"text\",\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.website).setValue(valueRules.website || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               website: $$(ids.website).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect to website\n         if (this.valueRules.website)\n            window.open(\n               `http://${this.valueRules.website.replace(\"http://\", \"\")}`,\n               \"_blank\"\n            );\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nmodule.exports = class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n\n      this.updateObject = null; // the object this Action will Update.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n\n      this.stashRules = {}; // keep track of rule settings among our selected objects.\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      if (this._uiUpdater == null) {\n         this._uiUpdater = this.valueDisplayList(idBase);\n      }\n\n      return this._uiUpdater;\n   }\n\n   // Our Values Display is a List of ValueRows\n   // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n   valueDisplayList(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n      var ids = {\n         updateForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         view: \"form\",\n         id: ids.updateForm,\n         elements: [],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n         _logic.setValues(valueRules);\n      };\n\n      var _logic = {\n         removeAddRow: () => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n\n            var addRow = rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            })[0];\n            if (!addRow) return;\n\n            UpdateForm.removeView(addRow);\n         },\n\n         // addRow\n         // add a new data entry to this form.\n         // @param {obj} data  (optional) initial values for this row.\n         addRow: (data) => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n            if (\n               data == null &&\n               rows.filter((r) => {\n                  return r.queryView(function (view) {\n                     return view.config.name == \"field\" && !view.getValue();\n                  });\n               }).length > 0\n            )\n               return;\n\n            // get a new Row Component\n            var row = this.valueDisplayRow(idBase);\n\n            // add row to Form\n            UpdateForm.addView(row.ui);\n\n            // initialize row with any provided data:\n            row.init({\n               onAdd: () => {\n                  // add a new Row\n                  _logic.addRow();\n               },\n               onDelete: (rowId) => {\n                  // remove a row\n                  _logic.delRow(rowId);\n               },\n               data: data,\n            });\n\n            // store this row\n            this.formRows.push(row);\n         },\n\n         delRow: (rowId) => {\n            // store this row\n            this.formRows.forEach((r, index) => {\n               if (r.ui.id == rowId) this.formRows.splice(index, 0);\n            });\n\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // remove UI\n            UpdateForm.removeView($$(rowId));\n         },\n\n         formClear: () => {\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            var children = UpdateForm.getChildViews();\n\n            // NOTE: need to clone this array, because it is connected with the UpdatForm's\n            // internal array of items.  Once we start .removeView() the element actually\n            // is removed from the internal array, which then upset's the .forEach() from\n            // properly iterating through the structure.  It results in missed items from\n            // being sent to the .forEach().\n            // So Clone it and use that for .forEach()\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               UpdateForm.removeView(c);\n            });\n\n            // clear our stored .formRows\n            this.formRows = [];\n         },\n\n         formGet: () => {\n            var UpdateForm = $$(ids.updateForm);\n            if (!UpdateForm) {\n               // this is a problem!\n               this.currentForm.AB.notify.developer(\n                  new Error(\"no webix form\"),\n                  {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:formGet  could not find webix form\",\n                     id: ids.updateForm,\n                  }\n               );\n               return null;\n            }\n\n            return UpdateForm;\n         },\n\n         setValues: (valueRules) => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n\n            valueRules = valueRules || {};\n            valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n            // find the form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // clear form:\n            _logic.formClear();\n\n            // if there are values to\n            if (valueRules.fieldOperations.length > 0) {\n               valueRules.fieldOperations.forEach((r) => {\n                  _logic.addRow(r);\n               });\n            }\n\n            // our default operation will cause an empty row to\n            // appear after our first value entry.\n            // let's remove that one, and then add a new one\n            // at the end:\n            _logic.removeAddRow();\n\n            // display an empty row\n            _logic.addRow();\n         },\n\n         fromSettings: (settings) => {\n            // Note: we just want the { valueRules:[] } here:\n            var mySettings = settings.valueRules || settings;\n\n            _logic.setValues(mySettings);\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(fr.toSettings());\n               }\n            });\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   valueDisplayRow(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         row: myUnique(\"row\"),\n         updateForm: myUnique(\"updateFormRow\"),\n         field: myUnique(\"field\"),\n         value: myUnique(\"value\"),\n         selectDc: myUnique(\"selectDc\"),\n         selectBy: myUnique(\"selectBy\"),\n         queryField: myUnique(\"queryField\"),\n         multiview: myUnique(\"multiview\"),\n         buttonAdd: myUnique(\"add\"),\n         buttonDelete: myUnique(\"delete\"),\n      };\n\n      var FilterComponent;\n\n      var _logic = {\n         callbacks: {\n            onAdd: () => {},\n            onDelete: () => {},\n         },\n\n         buttonsToggle: () => {\n            $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n            $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n         },\n\n         getFieldList: (shouldFilter) => {\n            var options = [];\n            if (this.updateObject) {\n               options = (this.updateObject.fields() || []).map((f) => {\n                  return {\n                     id: f.id,\n                     value: f.label,\n                  };\n               });\n\n               // options = (this.updateObject.fields() || [])\n               // .filter(f => {\n               //\n               // \tif (f.key != 'connectObject') {\n               // \t\treturn true;\n               // \t} else {\n               // \t\t// if this is a connection field, only return\n               // \t\t// fields that are 1:x  where this field is the\n               // \t\t// source:\n               // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n               //\n               // \t\t// 6-14-2018 Changing from only 1:x to support many\n               // \t\t// if this is a connected field, only return\n               // \t\t// fields that this is the source\n               // \t\treturn (f.isSource())\n               // \t}\n               // })\n               // .map(f => {\n               // \treturn {\n               // \t\tid: f.id,\n               // \t\tvalue: f.label\n               // \t};\n               // });\n\n               // Remove fields who are selected\n               if (shouldFilter) {\n                  // store this row\n                  var usedHash = {};\n                  this.formRows.forEach((row) => {\n                     var rowView = $$(row.ui.id);\n                     if (rowView) {\n                        var field = rowView\n                           .getChildViews()[0]\n                           .getChildViews()[1];\n                        usedHash[field.getValue()] = true;\n                     }\n                  });\n                  options = options.filter((o) => {\n                     return !usedHash[o.id];\n                  });\n               }\n            }\n            return options;\n         },\n\n         isValid: () => {\n            var validator = this.currentForm.AB.Validation.validator();\n            var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n            var FormView = valueField.getParentView().getParentView();\n\n            var field = this.getUpdateObjectField($$(ids.field).getValue());\n            if (field) {\n               var value = field.getValue(valueField, {});\n\n               // // if a standard component that supports .getValue()\n               // if (valueField.getValue) {\n               // \tvalue = valueField.getValue();\n               // } else {\n               // \t// else use for field.getValue();\n               // \tvalue = field.getValue(valueField, {});\n               // }\n\n               // our .isValidData() wants value in an object:\n               var obj = {};\n               obj[field.columnName] = value;\n\n               field.isValidData(obj, validator);\n\n               // if value is empty, this is also an error:\n               if (\n                  value == \"\" ||\n                  value == null ||\n                  (Array.isArray(value) && value.length == 0)\n               ) {\n                  validator.addError(\n                     field.columnName,\n                     L(\"A value is required\")\n                  );\n               }\n\n               // field.getParentView()  ->  row\n               // row.getParentView()  -> Form\n               FormView.clearValidation();\n               validator.updateForm(FormView);\n\n               return validator.pass();\n            } else {\n               // if we didn't find an associated field ... then this isn't good\n               // data.\n\n               //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n               // field.\n               var fieldField = $$(ids.row)\n                  .getChildViews()[0]\n                  .getChildViews()[1];\n               fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n               fieldField.define(\"invalid\", true);\n               fieldField.refresh();\n               // fieldField.markInvalid(this.labels.component.errorRequired);\n               return false;\n            }\n         },\n\n         selectField: (columnID) => {\n            var field = this.getUpdateObjectField(columnID);\n            if (!field) return;\n\n            var fieldComponent = field.formComponent(),\n               abView = fieldComponent.newInstance(field.object.application),\n               formFieldComponent = abView.component(this.App),\n               $componentView = formFieldComponent.ui,\n               $inputView;\n\n            $componentView.id = ids.value; // set our expected id\n\n            // find all the DataSources\n            var datasources = this.currentForm.AB.datacollections(\n               (dc) => dc.datasource\n            );\n\n            // create a droplist with those dataSources\n            var optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({ id: dc.id, value: dc.label });\n            });\n\n            // create a droplist with select options\n            var optionsSelectBy = [\n               { id: \"select-one\", value: L(\"Current selection\") },\n               {\n                  id: \"filter-select-one\",\n                  value: L(\"Select first after filter by...\"),\n               },\n            ];\n\n            var $optionUpdateExsits = {\n               type: \"clean\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.selectDc,\n                           view: \"combo\",\n                           options: optionsDataSources,\n                           placeholder: L(\"Choose a data source\"),\n                           on: {\n                              onChange: (newv, oldv) => {\n                                 var selectedDC =\n                                    this.currentForm.AB.datacollectionByID(\n                                       newv\n                                    );\n                                 if (\n                                    selectedDC &&\n                                    (selectedDC.sourceType == \"query\" ||\n                                       !field.isConnection)\n                                 ) {\n                                    var queryFieldOptions = [];\n                                    selectedDC.datasource\n                                       .fields()\n                                       .forEach((f) => {\n                                          queryFieldOptions.push({\n                                             id: f.id,\n                                             value: f.label,\n                                          });\n                                       });\n                                    $$(ids.queryField).define(\n                                       \"options\",\n                                       queryFieldOptions\n                                    );\n                                    $$(ids.queryField).refresh();\n                                    $$(ids.queryField).show();\n                                 } else {\n                                    $$(ids.queryField).hide();\n                                 }\n                              },\n                           },\n                        },\n                        // we will place a list of query fields if you choose a datasource that has a query source type\n                        {\n                           id: ids.queryField,\n                           view: \"combo\",\n                           hidden: true,\n                           placeholder: L(\"Choose value from...\"),\n                           options: [{ id: 1, value: \"figure this out\" }],\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.selectBy,\n                     view: \"combo\",\n                     options: optionsSelectBy,\n                     placeholder: L(\"Choose select option\"),\n                     on: {\n                        onChange: (newv, oldv) => {\n                           var $row = $$(ids.row);\n                           $row.removeView($row.getChildViews()[1]);\n                           if (newv == \"select-one\") {\n                              $row.addView({}, 1);\n                           } else {\n                              var options =\n                                 this.currentForm.datacollection.datasource\n                                    .fields()\n                                    .map(function (f) {\n                                       return {\n                                          id: f.id,\n                                          value: f.label,\n                                       };\n                                    });\n\n                              FilterComponent = this.AB.filterComplexNew(\n                                 `${idBase}_filter`\n                              );\n                              // FilterComponent.applicationLoad(\n                              //    this.currentForm.application\n                              // );\n                              FilterComponent.init({\n                                 isRecordRule: true,\n                                 recordRuleFieldOptions: options,\n                              });\n                              FilterComponent.on(\"change\", (val) => {\n                                 _logic.onFilterChange(val);\n                              });\n\n                              $row.addView(FilterComponent.ui, 1);\n\n                              var dcId = $$(ids.selectDc).getValue();\n                              var dataCollection =\n                                 this.currentForm.AB.datacollectionByID(dcId);\n                              if (dataCollection) {\n                                 _logic.populateFilters(dataCollection);\n                              }\n                           }\n                        },\n                     },\n                  },\n               ],\n            };\n\n            // WORKAROUND: add '[Current User]' option to the user data field\n            if (field.key == \"user\") {\n               $componentView.options = $componentView.options || [];\n               $componentView.options.unshift({\n                  id: \"ab-current-user\",\n                  value: L(\"[Current User]\"),\n               });\n            }\n\n            // UPDATE: ok, in practice we have not had any use cases where\n            // we want individual values on connectedObject fields, but\n            // instead we want to insert the current selected element from\n            // a relevant data view.  So, replace the fieldComponet\n            // from a connectedObject field with a list of data views that\n            // are based upon the same object we are connected to:\n            if (field.isConnection) {\n               // find the ABObject this field connects to\n               var connectedObject = field.datasourceLink;\n\n               // find all the DataSources that are based upon this ABObject\n               // to do this, we find the root Page we are on, then ask that Page for datasources:\n               datasources = datasources.filter((dc) => {\n                  return dc.datasource.id == connectedObject.id;\n               });\n\n               var dcQueries = this.currentForm.AB.datacollections((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n               datasources = datasources.concat(dcQueries);\n\n               // refresh a droplist with those dataSources\n               optionsDataSources = [];\n               datasources.forEach((dc) => {\n                  optionsDataSources.push({ id: dc.id, value: dc.label });\n               });\n\n               // add select an array value option\n               optionsSelectBy.push({\n                  id: \"filter-select-all\",\n                  value: L(\"Select all after filter by...\"),\n               });\n\n               $inputView = $optionUpdateExsits;\n\n               // and the upcoming formFieldComponent.init()\n               // doesn't need to do anything:\n               formFieldComponent = {\n                  init: function () {},\n               };\n\n               // and we reset field so it's customDisplay isn't called:\n               // field = {};\n            } else {\n               $inputView = {\n                  id: ids.multiview,\n                  view: \"multiview\",\n                  cells: [\n                     {\n                        batch: \"custom\",\n                        rows: [\n                           $componentView,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or exists value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    $multiview.showBatch(\"exist\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        // Update value from exists object\n                        batch: \"exist\",\n                        rows: [\n                           $optionUpdateExsits,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or custom value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    // clear filter view\n                                    $$(ids.selectBy).setValue(\"select-one\");\n\n                                    $multiview.showBatch(\"custom\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               };\n            }\n\n            // Change component to display this field's form input\n            var $row = $$(ids.row).getChildViews()[0];\n            $row.removeView($row.getChildViews()[3]);\n            $row.addView($inputView, 3);\n\n            formFieldComponent.init();\n\n            // Show custom display of data field\n            if (!field.isConnection && field.customDisplay) {\n               // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n               var compNodeView = $$($componentView.id).$view;\n\n               // wait until render UI complete\n               setTimeout(() => {\n                  field.customDisplay(field, this.App, compNodeView, {\n                     editable: true,\n\n                     // tree\n                     isForm: true,\n                  });\n               }, 50);\n            }\n\n            // Show the remove button\n            var $buttonRemove = $row.getChildViews()[4];\n            $buttonRemove.show();\n\n            // Add a new row\n            if (columnID) _logic.callbacks.onAdd();\n         },\n\n         setValue: (data) => {\n            $$(ids.field).setValue(data.fieldID);\n            // note: this triggers our _logic.selectField() fn.\n            var field = this.getUpdateObjectField(data.fieldID);\n            if (field) {\n               var setValueFn = () => {\n                  $$(ids.selectDc).setValue(data.value);\n                  if (data.queryField) {\n                     $$(ids.queryField).setValue(data.queryField);\n                  }\n                  var selectBy = data.selectBy || \"select-one\";\n                  $$(ids.selectBy).setValue(selectBy);\n\n                  if (selectBy != \"select-one\") {\n                     var collectionId = data.value;\n                     var dataCollection =\n                        this.currentForm.AB.datacollectionByID(collectionId);\n                     if (dataCollection && data.filterConditions) {\n                        _logic.populateFilters(\n                           dataCollection,\n                           data.filterConditions\n                        );\n                     }\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  setValueFn();\n               } else {\n                  if (data.valueType == \"exist\") {\n                     $$(ids.multiview).showBatch(\"exist\");\n\n                     setValueFn();\n                  } else {\n                     $$(ids.multiview).showBatch(\"custom\");\n\n                     // wait until render UI complete\n                     setTimeout(function () {\n                        // set value to custom field\n                        var rowData = {};\n                        rowData[field.columnName] = data.value;\n                        field.setValue($$(ids.value), rowData);\n                     }, 50);\n                  }\n               }\n            }\n         },\n\n         populateFilters: (dataView, filterConditions) => {\n            filterConditions =\n               filterConditions ||\n               ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n            // Populate data to popups\n            // FilterComponent.objectLoad(objectCopy);\n            FilterComponent.fieldsLoad(\n               dataView.datasource ? dataView.datasource.fields() : []\n            );\n            FilterComponent.setValue(filterConditions);\n         },\n\n         toSettings: () => {\n            // if this isn't the last entry row\n            // * a row with valid data has the [delete] button showing.\n            var buttonDelete = $$(ids.buttonDelete);\n            if (buttonDelete && buttonDelete.isVisible()) {\n               var data = {};\n               data.fieldID = $$(ids.field).getValue();\n\n               var $valueField = $$(ids.value);\n               var field = this.getUpdateObjectField(data.fieldID);\n\n               var getValueFn = () => {\n                  data.value = $$(ids.selectDc).getValue();\n                  data.queryField = $$(ids.queryField).getValue();\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.selectBy = $$(ids.selectBy).getValue();\n                  data.valueType = \"exist\";\n                  if (FilterComponent) {\n                     data.filterConditions = FilterComponent.getValue();\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  getValueFn();\n               } else {\n                  if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                     getValueFn();\n                  } else {\n                     data.value = field.getValue($valueField, {});\n                     data.op = \"set\"; // possible to create other types of operations.\n                     data.type = field.key;\n                     data.valueType = \"custom\";\n                  }\n               }\n\n               return data;\n            } else {\n               return null;\n            }\n         },\n      };\n\n      var _ui = {\n         id: ids.row,\n         view: \"layout\",\n         rows: [\n            {\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     name: \"field\",\n                     placeholder: L(\"Choose a field\"),\n                     id: ids.field,\n                     height: 32,\n                     options: _logic.getFieldList(true),\n                     on: {\n                        onChange: function (columnId) {\n                           _logic.selectField(columnId);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"To\"),\n                  },\n\n                  // Field value\n                  // NOTE: this view gets replaced each time a field is selected.\n                  // We replace it with a component associated with the Field\n                  {},\n\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     id: ids.buttonDelete,\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     hidden: true,\n                     click: function () {\n                        _logic.callbacks.onDelete(ids.row);\n                     },\n                  },\n               ],\n            },\n            {}, // we will add filters here if we need them\n         ],\n      };\n\n      var init = (options) => {\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         if (options.data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            _logic.setValue(options.data);\n\n            // _logic.buttonsToggle();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   getUpdateObjectField(fieldID) {\n      return (\n         this.queryObject?.fieldByID(fieldID) ??\n         this.updateObject?.fieldByID(fieldID) ??\n         this.currentForm.AB.fieldNew(\n            this.currentForm.AB.definitionByID(fieldID) ?? {},\n            this.currentForm.AB.objectNew({})\n         )\n      );\n   }\n\n   /**\n    * @method processUpdateObject\n    * Perform the specified update actions on the provided objectToUpdate\n    * @param {obj} options  Additional information required to make updates.\n    * @param {obj} objectToUpdate  The object to make the updates on.\n    * @return {boolean}   true if an update took place, false if no updates.\n    */\n   processUpdateObject(options, objectToUpdate) {\n      this._formData = objectToUpdate;\n      // return new Promise((resolve, reject) => {\n      var isUpdated = false;\n\n      this.valueRules = this.valueRules || {};\n      this.valueRules.fieldOperations = this.valueRules.fieldOperations || [];\n\n      // var allPromises = [];\n\n      // for each of our operations\n      this.valueRules.fieldOperations.forEach((op) => {\n         // op = {\n         // \tfieldID:'zzzzz',\n         //\tvalue: 'xxx',\n         //\top: 'set',\n         //  type:'',\n         //  queryField: '', // id of ABField\n         //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n         //  valueType: \"\", ['custom', 'exist']\n         // \tfilterConditions: { // array of filters to apply to the data table\n         //\t\tglue: 'and',\n         // \t\trules: []\n         //  }\n         // }\n\n         var field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n\n         let value = op?.value?.id ?? op?.value;\n\n         switch (value) {\n            case \"ab-current-user\":\n               value = this.currentForm.AB.Account.username();\n               break;\n            case \"ab-current-date\":\n               value = new Date();\n               break;\n         }\n\n         // in the case of a connected Field, we use op.value to get the\n         // datacollection, and find it's currently selected value:\n         if ((field.isConnection && !field.isUser) || op.valueType == \"exist\") {\n            // NOTE: 30 May 2018 :current decision from Ric is to limit this\n            // to only handle 1:x connections where we update the current obj\n            // with the PK of the value from the DC.\n            //\n            // In the future, if we want to handle the other options,\n            // we need to modify this to handle the M:x connections where\n            // we insert our PK into the value from the DC.\n\n            // op.value is the ABDatacollection.id we need to find\n            const dataCollection = this.currentForm.AB.datacollectionByID(\n               op.value\n            );\n            if (!dataCollection) {\n               isUpdated = false;\n               return;\n            }\n\n            // we don't want to mess with the dataView directly since it might\n            // be used by other parts of the system and this refresh might reset\n            // it's cursor.\n            // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n            // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n            // adjust operator and switch key value to actual value when found\n            var filterConditions = this.currentForm.AB.cloneDeep(\n               op.filterConditions\n            );\n            if (filterConditions && filterConditions.rules) {\n               filterConditions.rules\n                  .filter((r) => {\n                     return (\n                        r.rule == \"same_as_field\" ||\n                        r.rule == \"not_same_as_field\"\n                     );\n                  })\n                  .forEach((item) => {\n                     var valueField =\n                        this.currentForm.datacollection.datasource.fieldByID(\n                           item.value\n                        );\n                     if (valueField.isConnection) {\n                        item.value = valueField.format(this._formData);\n                     } else {\n                        item.value = this._formData[valueField.columnName];\n                     }\n\n                     if (item.rule == \"not_same_as_field\") {\n                        item.rule = \"not equals\";\n                     } else {\n                        item.rule = \"equals\";\n                     }\n                  });\n            }\n\n            let clonedDataCollection =\n               dataCollection.filteredClone(filterConditions);\n\n            switch (op.selectBy) {\n               // the 'select-one' is getting the currently set cursor on this data collection\n               // and using that value.\n               // TODO: rename to 'select-cursor'\n               case \"select-one\":\n               default: // dataView.getItem(dataView.getCursor());\n                  value = clonedDataCollection.getCursor();\n\n                  if (value) {\n                     // NOTE: webix documentation issue: .getCursor() is supposed to return\n                     // the .id of the item.  However it seems to be returning the {obj}\n\n                     if (op.valueType == \"exist\") {\n                        let fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        if (fieldWithValue)\n                           value = value[fieldWithValue.columnName];\n                     } else if (value.id) {\n                        value = value.id;\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (!value) break;\n\n                        if (field.isConnection) {\n                           // if we are setting a connection we do not want to pass the full object because\n                           // batch creates payload gets too large\n                           objectToUpdate[field.columnName] = {};\n                           objectToUpdate[field.columnName].id =\n                              value[field.datasourceLink.PK()];\n                           objectToUpdate[field.columnName][\n                              field.datasourceLink.PK()\n                           ] = value[field.datasourceLink.PK()];\n\n                           // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n                           if (field.settings.isCustomFK) {\n                              if (field.indexField) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField.columnName\n                                 ] = value[field.indexField.columnName];\n                              }\n                              if (field.indexField2) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField2.columnName\n                                 ] = value[field.indexField2.columnName];\n                              }\n                           }\n\n                           field.datasourceLink\n                              .fields(\n                                 (f) =>\n                                    f.key == \"combined\" || f.key == \"AutoIndex\"\n                              )\n                              .forEach((f) => {\n                                 objectToUpdate[field.columnName][\n                                    f.columnName\n                                 ] = value[f.columnName];\n                              });\n                        } else {\n                           objectToUpdate[field.columnName] = value;\n                        }\n\n                        break;\n                  }\n                  break;\n\n               // attempt to filter this data collection by the given filterConditions\n               case \"filter-select-all\":\n                  var newValues = [];\n\n                  var currRow = clonedDataCollection.getFirstRecord();\n                  while (currRow) {\n                     // do something there\n\n                     switch (clonedDataCollection.sourceType) {\n                        // case: datacollection is an object\n                        // we want to set our field to this values\n                        case \"object\":\n                           newValues.push(currRow.id);\n                           break;\n\n                        // case: datacollection is a query\n                        // our field is a pointer to an object. we want to pull out that object\n                        // from the query data.\n                        case \"query\": {\n                           let fieldWithValue =\n                              clonedDataCollection.datasource.fieldByID(\n                                 op.queryField\n                              );\n\n                           var newValue = currRow[fieldWithValue.columnName];\n\n                           if (typeof newValue == \"undefined\") {\n                              newValue = currRow[fieldWithValue.relationName()];\n\n                              if (Array.isArray(newValue)) {\n                                 newValue = newValue.map((v) => {\n                                    return v.id ? v.id : v;\n                                 });\n                              } else if (newValue.id) {\n                                 newValue = newValue.id;\n                              }\n                           }\n\n                           newValues = this.currentForm.AB.uniq(\n                              newValues.concat(newValue)\n                           );\n\n                           break;\n                        }\n                     }\n\n                     currRow = clonedDataCollection.getNextRecord(currRow);\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (field.linkType() == \"one\") {\n                           var updates = [];\n                           newValues.forEach((v) => {\n                              var objectToUpdateClone =\n                                 this.currentForm.AB.cloneDeep(objectToUpdate);\n                              objectToUpdateClone[field.columnName] = v;\n                              updates.push(objectToUpdateClone);\n                           });\n                           objectToUpdate.newRecords = updates;\n                        } else {\n                           objectToUpdate[field.columnName] = newValues;\n                        }\n                        break;\n                  }\n                  break;\n\n               case \"filter-select-one\":\n                  newValues = [];\n\n                  value = clonedDataCollection.getFirstRecord();\n\n                  if (value) {\n                     // case: datacollection is a query\n                     // our field is a pointer to an object. we want to pull out that object\n                     // from the query data.\n                     if (\n                        clonedDataCollection.sourceType == \"query\" ||\n                        (op.valueType == \"exist\" && op.queryField)\n                     ) {\n                        let fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        newValue = value[fieldWithValue.columnName];\n\n                        if (typeof newValue == \"undefined\") {\n                           newValue = value[fieldWithValue.relationName()];\n                           if (Array.isArray(newValue)) {\n                              newValue = newValue[0];\n                           }\n                           if (newValue.id) newValue = newValue.id;\n                        }\n\n                        value = newValue;\n                     }\n                     // case: datacollection is an object\n                     // we want to set our field to this values\n                     else if (clonedDataCollection.sourceType == \"object\") {\n                        // NOTE: webix documentation issue: .getCursor() is supposed to return\n                        // the .id of the item.  However it seems to be returning the {obj}\n\n                        // we need to use the objects indexField(2) if there is one\n                        // otherwise default to the id\n                        var lookup;\n                        if (field.indexField) {\n                           lookup = field.indexField.columnName;\n                        } else if (field.indexField2) {\n                           lookup = field.indexField2.columnName;\n                        }\n                        if (lookup && value[lookup]) {\n                           value = value[lookup];\n                        } else if (value.id) {\n                           value = value.id;\n                        }\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        objectToUpdate[field.columnName] = value;\n                        break;\n                  }\n                  break;\n            }\n\n            isUpdated = true;\n\n            // allPromises.push(connectedPromise);\n         } else {\n            // var setPromise = new Promise((resolve, reject) => {\n            switch (op.op) {\n               case \"set\":\n                  objectToUpdate[field.columnName] = value;\n                  break;\n            }\n\n            isUpdated = true;\n\n            //    resolve(isUpdated);\n            // });\n\n            // allPromises.push(setPromise);\n\n            // console.log(\"finished\");\n         }\n      });\n\n      return isUpdated;\n      // Promise.all(allPromises).then(() => {\n      //    resolve(isUpdated);\n      // });\n      // });\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         let isUpdated = this.processUpdateObject({}, options.data);\n         if (!isUpdated) {\n            resolve();\n         } else {\n            // get the model from the provided Form Obj:\n            var dv = options.form.datacollection;\n            if (!dv) return resolve();\n\n            var model = dv.model;\n            model\n               .update(options.data.id, options.data)\n               .then(resolve)\n               .catch((err) => {\n                  this.currentForm.AB.notify.developer(err, {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:process  update error\",\n                     id: options.data.id,\n                     data: options.data,\n                  });\n                  reject(err);\n               });\n         }\n      });\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      super.objectLoad(object);\n      this.updateObjectLoad(object);\n   }\n\n   // updateObjectLoad\n   // save the given object as the object we will update.\n   updateObjectLoad(object) {\n      // stash rules for old object\n      if (this.updateObject) {\n         this.stashRules[this.updateObject.id] = this.valueRules;\n      }\n\n      this.updateObject = object;\n\n      // with a new updateObject, then reset our UI\n      this._uiUpdater = null;\n\n      // reload any stashed rules, or set to {}\n      this.valueRules = this.stashRules[this.updateObject.id] || {};\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // make sure UI is updated:\n      // set our updateObject\n      if (settings.updateObjectID) {\n         this.updateObject = this.currentForm.AB.objectByID(\n            settings.updateObjectID\n         );\n      } else {\n         // DEPRECIATED method of resolving objects .urlResolve()\n         if (settings.updateObjectURL) {\n            var updateObject = this.currentForm.application.urlResolve(\n               settings.updateObjectURL\n            );\n            this.updateObject = updateObject;\n         }\n      }\n\n      // if we have a display component, then populate it:\n      if (this._uiUpdater) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._uiUpdater.fromSettings(settings);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._uiUpdater.toSettings();\n      settings.updateObjectURL = this.updateObject.urlPointer();\n\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * Here we need to scan each of our field operations, and verify all\n    * related data collections are initialized before we can continue.\n    * @return {Promise}\n    */\n   isReady() {\n      var allReady = [];\n      let fieldOps = this.valueRules?.fieldOperations ?? [];\n      fieldOps.forEach((op) => {\n         let field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n         if (!field.isConnection && op.valueType !== \"exist\") return;\n\n         // this references a DC\n         let DC = this.currentForm.AB.datacollectionByID(op.value);\n         if (DC?.dataStatus === DC?.dataStatusFlag.initialized) return;\n\n         // not ready yet, so wait until the 'initializedData' event\n         allReady.push(\n            new Promise((resolve /*, reject */) => {\n               DC.on(\"initializedData\", () => {\n                  resolve();\n               });\n            })\n         );\n      });\n      return Promise.all(allReady);\n   }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ImageModule=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";var DocUtils=require(\"docxtemplater\").DocUtils;DocUtils.convertPixelsToEmus=function(pixel){return Math.round(pixel*9525)};module.exports=DocUtils},{docxtemplater:5}],2:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./docUtils\");var extensionRegex=/[^.]+\\.([^.]+)/;var rels={getPrefix:function getPrefix(fileType){return fileType===\"docx\"?\"word\":\"ppt\"},getFileTypeName:function getFileTypeName(fileType){return fileType===\"docx\"?\"document\":\"presentation\"},getRelsFileName:function getRelsFileName(fileName){return fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/,\"$1\")+\".xml.rels\"},getRelsFilePath:function getRelsFilePath(fileName,fileType){var relsFileName=rels.getRelsFileName(fileName);var prefix=fileType===\"pptx\"?\"ppt/slides\":\"word\";return prefix+\"/_rels/\"+relsFileName}};module.exports=function(){function ImgManager(zip,fileName,xmlDocuments,fileType){_classCallCheck(this,ImgManager);this.fileName=fileName;this.prefix=rels.getPrefix(fileType);this.zip=zip;this.xmlDocuments=xmlDocuments;this.fileTypeName=rels.getFileTypeName(fileType);this.mediaPrefix=fileType===\"pptx\"?\"../media\":\"media\";var relsFilePath=rels.getRelsFilePath(fileName,fileType);this.relsDoc=xmlDocuments[relsFilePath]||this.createEmptyRelsDoc(xmlDocuments,relsFilePath)}_createClass(ImgManager,[{key:\"createEmptyRelsDoc\",value:function createEmptyRelsDoc(xmlDocuments,relsFileName){var mainRels=this.prefix+\"/_rels/\"+this.fileTypeName+\".xml.rels\";var doc=xmlDocuments[mainRels];if(!doc){var err=new Error(\"Could not copy from empty relsdoc\");err.properties={mainRels:mainRels,relsFileName:relsFileName,files:Object.keys(this.zip.files)};throw err}var relsDoc=DocUtils.str2xml(DocUtils.xml2str(doc));var relationships=relsDoc.getElementsByTagName(\"Relationships\")[0];var relationshipChilds=relationships.getElementsByTagName(\"Relationship\");for(var i=0,l=relationshipChilds.length;i<l;i++){relationships.removeChild(relationshipChilds[i])}xmlDocuments[relsFileName]=relsDoc;return relsDoc}},{key:\"loadImageRels\",value:function loadImageRels(){var iterable=this.relsDoc.getElementsByTagName(\"Relationship\");return Array.prototype.reduce.call(iterable,function(max,relationship){var id=relationship.getAttribute(\"Id\");if(/^rId[0-9]+$/.test(id)){return Math.max(max,parseInt(id.substr(3),10))}return max},0)}},{key:\"addExtensionRels\",value:function addExtensionRels(contentType,extension){var contentTypeDoc=this.xmlDocuments[\"[Content_Types].xml\"];var defaultTags=contentTypeDoc.getElementsByTagName(\"Default\");var extensionRegistered=Array.prototype.some.call(defaultTags,function(tag){return tag.getAttribute(\"Extension\")===extension});if(extensionRegistered){return}var types=contentTypeDoc.getElementsByTagName(\"Types\")[0];var newTag=contentTypeDoc.createElement(\"Default\");newTag.namespaceURI=null;newTag.setAttribute(\"ContentType\",contentType);newTag.setAttribute(\"Extension\",extension);types.appendChild(newTag)}},{key:\"addImageRels\",value:function addImageRels(imageName,imageData,i){if(i==null){i=0}var realImageName=i===0?imageName:imageName+(\"(\"+i+\")\");var imagePath=this.prefix+\"/media/\"+realImageName;if(this.zip.files[imagePath]!=null){return this.addImageRels(imageName,imageData,i+1)}var image={name:imagePath,data:imageData,options:{binary:true}};this.zip.file(image.name,image.data,image.options);var extension=realImageName.replace(extensionRegex,\"$1\");this.addExtensionRels(\"image/\"+extension,extension);var relationships=this.relsDoc.getElementsByTagName(\"Relationships\")[0];var newTag=this.relsDoc.createElement(\"Relationship\");newTag.namespaceURI=null;var maxRid=this.loadImageRels()+1;newTag.setAttribute(\"Id\",\"rId\"+maxRid);newTag.setAttribute(\"Type\",\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");newTag.setAttribute(\"Target\",this.mediaPrefix+\"/\"+realImageName);relationships.appendChild(newTag);return maxRid}}]);return ImgManager}()},{\"./docUtils\":1}],3:[function(require,module,exports){\"use strict\";module.exports={getImageXml:function getImageXml(rId,size){return('<w:drawing>\\n\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t<wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\\n\\t\\t\\t<wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getImageXmlCentered:function getImageXmlCentered(rId,size){return('<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\"center\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getPptxImageXml:function getPptxImageXml(rId,size,offset){return('<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\"6\" name=\"Picture 2\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\" cstate=\"print\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\"'+offset.x+'\" y=\"'+offset.y+'\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"accent1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"tx1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"bg2\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t').replace(/\\t|\\n/g,\"\")}}},{}],4:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),fileType:\"docx\",delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){var parts=parsed.slice(0,index);for(var i=parts.length-1;i>=0;i--){var part=parts[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils;DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\")},{\"./errors\":6,\"./memoize\":9,\"./module-wrapper\":11,\"./traits\":20,xmldom:23}],5:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.fileType===\"docx\"||this.fileType===\"pptx\"){this.fileTypeConfig=Docxtemplater.FileTypeConfig[this.fileType]}this.fileTypeConfig=this.options.fileTypeConfig||this.fileTypeConfig;this.options.xmlFileNames=[];return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip)}},{key:\"render\",value:function render(){var _this2=this;this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render();_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.encodeUtf8(DocUtils.xml2str(_this2.xmlDocuments[fileName]));return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":4,\"./errors\":6,\"./file-type-config\":7,\"./xml-matcher\":21,\"./xml-templater\":22}],6:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],7:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":12,\"./modules/loop\":13,\"./modules/rawxml\":14,\"./modules/render\":15,\"./modules/space-preserve\":16}],8:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":4,\"./errors\":6}],9:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],10:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],11:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],12:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));\nreturn[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":4,\"../errors\":6,\"../mergesort\":10,\"../module-wrapper\":11,\"../traits\":20}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":4,\"../module-wrapper\":11}],14:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":4,\"../errors\":6,\"../module-wrapper\":11}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":11}],16:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":11}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":4}],18:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":4,\"./scope-manager\":19}],19:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":6}],20:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){throwRawTagNotInParagraph({part:part,rootError:rootError})}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});var type=Object.prototype.toString.call(inner);if(type===\"[object Array]\"){inner=DocUtils.concatArrays(inner)}return DocUtils.concatArrays([postparsed.slice(0,left),[inner],postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":4,\"./errors\":6}],21:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":4,\"./memoize\":9}],22:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(){this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":4,\"./errors\":6,\"./lexer\":8,\"./parser.js\":17,\"./render.js\":18,\"./scope-manager\":19,\"./xml-matcher\":21}],23:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":24,\"./sax\":25}],24:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){\nreturn true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"<!--\",node.data,\"-->\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],25:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"-->\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/index.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var templates=require(\"./templates\");var DocUtils=require(\"docxtemplater\").DocUtils;var DOMParser=require(\"xmldom\").DOMParser;function isNaN(number){return!(number===number)}var ImgManager=require(\"./imgManager\");var moduleName=\"open-xml-templating/docxtemplater-image-module\";function getInnerDocx(_ref){var part=_ref.part;return part}function getInnerPptx(_ref2){var part=_ref2.part,left=_ref2.left,right=_ref2.right,postparsed=_ref2.postparsed;var xmlString=postparsed.slice(left+1,right).reduce(function(concat,item){return concat+item.value},\"\");var xmlDoc=(new DOMParser).parseFromString(\"<xml>\"+xmlString+\"</xml>\");var offset=xmlDoc.getElementsByTagName(\"a:off\");var ext=xmlDoc.getElementsByTagName(\"a:ext\");part.ext={cx:parseInt(ext[0].getAttribute(\"cx\"),10),cy:parseInt(ext[0].getAttribute(\"cy\"),10)};part.offset={x:parseInt(offset[0].getAttribute(\"x\"),10),y:parseInt(offset[0].getAttribute(\"y\"),10)};return part}var ImageModule=function(){function ImageModule(options){_classCallCheck(this,ImageModule);this.name=\"ImageModule\";this.options=options||{};this.imgManagers={};if(this.options.centered==null){this.options.centered=false}if(this.options.getImage==null){throw new Error(\"You should pass getImage\")}if(this.options.getSize==null){throw new Error(\"You should pass getSize\")}this.imageNumber=1}_createClass(ImageModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){\nvar relsFiles=docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function(file){return file.name});this.fileTypeConfig=docxtemplater.fileTypeConfig;this.fileType=docxtemplater.fileType;this.zip=docxtemplater.zip;options.xmlFileNames=options.xmlFileNames.concat(relsFiles);return options}},{key:\"set\",value:function set(options){if(options.zip){this.zip=options.zip}if(options.xmlDocuments){this.xmlDocuments=options.xmlDocuments}}},{key:\"parse\",value:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent.substring(0,2)===\"%%\"){return{type:type,value:placeHolderContent.substr(2),module:module,centered:true}}if(placeHolderContent.substring(0,1)===\"%\"){return{type:type,value:placeHolderContent.substr(1),module:module,centered:false}}return null}},{key:\"postparse\",value:function postparse(parsed){var expandTo=void 0;var getInner=void 0;if(this.fileType===\"pptx\"){expandTo=\"p:sp\";getInner=getInnerPptx}else{expandTo=this.options.centered?\"w:p\":\"w:t\";getInner=getInnerDocx}return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:expandTo})}},{key:\"render\",value:function render(part,options){this.imgManagers[options.filePath]=this.imgManagers[options.filePath]||new ImgManager(this.zip,options.filePath,this.xmlDocuments,this.fileType);var imgManager=this.imgManagers[options.filePath];if(!part.type===\"placeholder\"||part.module!==moduleName){return null}try{var tagValue=options.scopeManager.getValue(part.value);if(!tagValue){throw new Error(\"tagValue is empty\")}var imgBuffer=this.options.getImage(tagValue,part.value);var rId=imgManager.addImageRels(this.getNextImageName(),imgBuffer);var sizePixel=this.options.getSize(imgBuffer,tagValue,part.value);return this.getRenderedPart(part,rId,sizePixel)}catch(e){return{value:this.fileTypeConfig.tagTextXml}}}},{key:\"getRenderedPart\",value:function getRenderedPart(part,rId,sizePixel){if(isNaN(rId)){throw new Error(\"rId is NaN, aborting\")}var size=[DocUtils.convertPixelsToEmus(sizePixel[0]),DocUtils.convertPixelsToEmus(sizePixel[1])];var centered=this.options.centered||part.centered;var newText=void 0;if(this.fileType===\"pptx\"){newText=this.getRenderedPartPptx(part,rId,size,centered)}else{newText=this.getRenderedPartDocx(rId,size,centered)}return{value:newText}}},{key:\"getRenderedPartPptx\",value:function getRenderedPartPptx(part,rId,size,centered){var offset={x:part.offset.x,y:part.offset.y};var cellCX=part.ext.cx;var cellCY=part.ext.cy;var imgW=size[0];var imgH=size[1];if(centered){offset.x+=cellCX/2-imgW/2;offset.y+=cellCY/2-imgH/2}return templates.getPptxImageXml(rId,[imgW,imgH],offset)}},{key:\"getRenderedPartDocx\",value:function getRenderedPartDocx(rId,size,centered){return centered?templates.getImageXmlCentered(rId,size):templates.getImageXml(rId,size)}},{key:\"getNextImageName\",value:function getNextImageName(){var name=\"image_generated_\"+this.imageNumber+\".png\";this.imageNumber++;return name}}]);return ImageModule}();module.exports=ImageModule},{\"./imgManager\":2,\"./templates\":3,docxtemplater:5,xmldom:23}]},{},[])(\"/src/js/index.js\")});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Docxtemplater=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils},{\"./errors\":2,\"./memoize\":5,xmldom:19}],2:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],3:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":8,\"./modules/loop\":9,\"./modules/rawxml\":10,\"./modules/render\":11,\"./modules/space-preserve\":12}],4:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":1,\"./errors\":2}],5:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],6:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],7:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],8:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));return[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":1,\"../errors\":2,\"../mergesort\":6,\"../module-wrapper\":7,\"../traits\":16}],9:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":1,\"../module-wrapper\":7}],10:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":1,\"../errors\":2,\"../module-wrapper\":7}],11:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":7}],12:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":7}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":1}],14:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":1,\"./scope-manager\":15}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":2}],16:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag,postparsed:options.postparsed,expandTo:options.expandTo,index:options.index};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}if(xmlElement.tag.indexOf(\"<a:tc\")===0){return\"a:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){if(rootError instanceof Errors.XTTemplateError){throwRawTagNotInParagraph({part:part,rootError:rootError,postparsed:postparsed,expandTo:expandTo,index:index})}throw rootError}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});if(!inner.length){inner.expanded=[leftParts,rightParts];inner=[inner]}return DocUtils.concatArrays([postparsed.slice(0,left),inner,postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":1,\"./errors\":2}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":1,\"./memoize\":5}],18:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(to){this.filePath=to;this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":1,\"./errors\":2,\"./lexer\":4,\"./parser.js\":13,\"./render.js\":14,\"./scope-manager\":15,\"./xml-matcher\":17}],19:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":20,\"./sax\":21}],20:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"\\x3c!--\",node.data,\"--\\x3e\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],21:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"--\\x3e\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/docxtemplater.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.zip){this.updateFileTypeConfig()}return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;this.updateFileTypeConfig();return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip);return this}},{key:\"updateFileTypeConfig\",value:function updateFileTypeConfig(){this.fileType=this.zip.files[\"word/document.xml\"]?\"docx\":\"pptx\";this.fileTypeConfig=this.options.fileTypeConfig||Docxtemplater.FileTypeConfig[this.fileType];return this}},{key:\"render\",value:function render(){var _this2=this;this.options.xmlFileNames=[];this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render(to);_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.xml2str(_this2.xmlDocuments[fileName]);return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":1,\"./errors\":2,\"./file-type-config\":3,\"./module-wrapper\":7,\"./traits\":16,\"./xml-matcher\":17,\"./xml-templater\":18}]},{},[])(\"/src/js/docxtemplater.js\")});","/*!\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){\"use strict\";function d(a){if(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0;for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}}var e=a(\"./dataReader\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6}],2:[function(a,b,c){\"use strict\";var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";c.encode=function(a,b){for(var c,e,f,g,h,i,j,k=\"\",l=0;l<a.length;)c=a.charCodeAt(l++),e=a.charCodeAt(l++),f=a.charCodeAt(l++),g=c>>2,h=(3&c)<<4|e>>4,i=(15&e)<<2|f>>6,j=63&f,isNaN(e)?i=j=64:isNaN(f)&&(j=64),k=k+d.charAt(g)+d.charAt(h)+d.charAt(i)+d.charAt(j);return k},c.decode=function(a,b){var c,e,f,g,h,i,j,k=\"\",l=0;for(a=a.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");l<a.length;)g=d.indexOf(a.charAt(l++)),h=d.indexOf(a.charAt(l++)),i=d.indexOf(a.charAt(l++)),j=d.indexOf(a.charAt(l++)),c=g<<2|h>>4,e=(15&h)<<4|i>>2,f=(3&i)<<6|j,k+=String.fromCharCode(c),64!=i&&(k+=String.fromCharCode(e)),64!=j&&(k+=String.fromCharCode(f));return k}},{}],3:[function(a,b,c){\"use strict\";function d(){this.compressedSize=0,this.uncompressedSize=0,this.crc32=0,this.compressionMethod=null,this.compressedContent=null}d.prototype={getContent:function(){return null},getCompressedContent:function(){return null}},b.exports=d},{}],4:[function(a,b,c){\"use strict\";c.STORE={magic:\"\\0\\0\",compress:function(a,b){return a},uncompress:function(a){return a},compressInputType:null,uncompressInputType:null},c.DEFLATE=a(\"./flate\")},{\"./flate\":9}],5:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];b.exports=function(a,b){if(\"undefined\"==typeof a||!a.length)return 0;var c=\"string\"!==d.getTypeOf(a);\"undefined\"==typeof b&&(b=0);var f=0,g=0,h=0;b^=-1;for(var i=0,j=a.length;i<j;i++)h=c?a[i]:a.charCodeAt(i),g=255&(b^h),f=e[g],b=b>>>8^f;return b^-1}},{\"./utils\":22}],6:[function(a,b,c){\"use strict\";function d(a){this.data=null,this.length=0,this.index=0,this.zero=0}var e=a(\"./utils\");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+a+\"). Corrupted zip ?\")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo(\"string\",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1)}},b.exports=d},{\"./utils\":22}],7:[function(a,b,c){\"use strict\";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!1,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],8:[function(a,b,c){\"use strict\";var d=a(\"./utils\");c.string2binary=function(a){return d.string2binary(a)},c.string2Uint8Array=function(a){return d.transformTo(\"uint8array\",a)},c.uint8Array2String=function(a){return d.transformTo(\"string\",a)},c.string2Blob=function(a){var b=d.transformTo(\"arraybuffer\",a);return d.arrayBuffer2Blob(b)},c.arrayBuffer2Blob=function(a){return d.arrayBuffer2Blob(a)},c.transformTo=function(a,b){return d.transformTo(a,b)},c.getTypeOf=function(a){return d.getTypeOf(a)},c.checkSupport=function(a){return d.checkSupport(a)},c.MAX_VALUE_16BITS=d.MAX_VALUE_16BITS,c.MAX_VALUE_32BITS=d.MAX_VALUE_32BITS,c.pretty=function(a){return d.pretty(a)},c.findCompression=function(a){return d.findCompression(a)},c.isRegExp=function(a){return d.isRegExp(a)}},{\"./utils\":22}],9:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,e=a(\"pako\");c.uncompressInputType=d?\"uint8array\":\"array\",c.compressInputType=d?\"uint8array\":\"array\",c.magic=\"\\b\\0\",c.compress=function(a,b){return e.deflateRaw(a,{level:b.level||-1})},c.uncompress=function(a){return e.inflateRaw(a)}},{pako:25}],10:[function(a,b,c){\"use strict\";function d(a,b){return this instanceof d?(this.files={},this.comment=null,this.root=\"\",a&&this.load(a,b),void(this.clone=function(){var a=new d;for(var b in this)\"function\"!=typeof this[b]&&(a[b]=this[b]);return a})):new d(a,b)}var e=a(\"./base64\");d.prototype=a(\"./object\"),d.prototype.load=a(\"./load\"),d.support=a(\"./support\"),d.defaults=a(\"./defaults\"),d.utils=a(\"./deprecatedPublicUtils\"),d.base64={encode:function(a){return e.encode(a)},decode:function(a){return e.decode(a)}},d.compressions=a(\"./compressions\"),b.exports=d},{\"./base64\":2,\"./compressions\":4,\"./defaults\":7,\"./deprecatedPublicUtils\":8,\"./load\":11,\"./object\":14,\"./support\":18}],11:[function(a,b,c){\"use strict\";var d=a(\"./base64\"),e=a(\"./utf8\"),f=a(\"./utils\"),g=a(\"./zipEntries\");b.exports=function(a,b){var c,h,i,j;for(b=f.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:e.utf8decode}),b.base64&&(a=d.decode(a)),h=new g(a,b),c=h.files,i=0;i<c.length;i++)j=c[i],this.file(j.fileNameStr,j.decompressed,{binary:!0,optimizedBinaryString:!0,date:j.date,dir:j.dir,comment:j.fileCommentStr.length?j.fileCommentStr:null,unixPermissions:j.unixPermissions,dosPermissions:j.dosPermissions,createFolders:b.createFolders});return h.zipComment.length&&(this.comment=h.zipComment),this}},{\"./base64\":2,\"./utf8\":21,\"./utils\":22,\"./zipEntries\":23}],12:[function(a,b,c){(function(a){\"use strict\";b.exports=function(b,c){return new a(b,c)},b.exports.test=function(b){return a.isBuffer(b)}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){\"use strict\";function d(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./uint8ArrayReader\");d.prototype=new e,d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./uint8ArrayReader\":19}],14:[function(a,b,c){\"use strict\";var d=a(\"./support\"),e=a(\"./utils\"),f=a(\"./crc32\"),g=a(\"./signature\"),h=a(\"./defaults\"),i=a(\"./base64\"),j=a(\"./compressions\"),k=a(\"./compressedObject\"),l=a(\"./nodeBuffer\"),m=a(\"./utf8\"),n=a(\"./stringWriter\"),o=a(\"./uint8ArrayWriter\"),p=function(a){if(a._data instanceof k&&(a._data=a._data.getContent(),a.options.binary=!0,a.options.base64=!1,\"uint8array\"===e.getTypeOf(a._data))){var b=a._data;a._data=new Uint8Array(b.length),0!==b.length&&a._data.set(b,0)}return a._data},q=function(a){var b=p(a),c=e.getTypeOf(b);return\"string\"===c?!a.options.binary&&d.nodebuffer?l(b,\"utf-8\"):a.asBinary():b},r=function(a){var b=p(this);return null===b||\"undefined\"==typeof b?\"\":(this.options.base64&&(b=i.decode(b)),b=a&&this.options.binary?D.utf8decode(b):e.transformTo(\"string\",b),a||this.options.binary||(b=e.transformTo(\"string\",D.utf8encode(b))),b)},s=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this.options=c,this._initialMetadata={dir:c.dir,date:c.date}};s.prototype={asText:function(){return r.call(this,!0)},asBinary:function(){return r.call(this,!1)},asNodeBuffer:function(){var a=q(this);return e.transformTo(\"nodebuffer\",a)},asUint8Array:function(){var a=q(this);return e.transformTo(\"uint8array\",a)},asArrayBuffer:function(){return this.asUint8Array().buffer}};var t=function(a,b){var c,d=\"\";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},u=function(a){return a=a||{},a.base64!==!0||null!==a.binary&&void 0!==a.binary||(a.binary=!0),a=e.extend(a,h),a.date=a.date||new Date,null!==a.compression&&(a.compression=a.compression.toUpperCase()),a},v=function(a,b,c){var d,f=e.getTypeOf(b);if(c=u(c),\"string\"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=x(a)),c.createFolders&&(d=w(a))&&y.call(this,d,!0),c.dir||null===b||\"undefined\"==typeof b)c.base64=!1,c.binary=!1,b=null,f=null;else if(\"string\"===f)c.binary&&!c.base64&&c.optimizedBinaryString!==!0&&(b=e.string2binary(b));else{if(c.base64=!1,c.binary=!0,!(f||b instanceof k))throw new Error(\"The data of '\"+a+\"' is in an unsupported format !\");\"arraybuffer\"===f&&(b=e.transformTo(\"uint8array\",b))}var g=new s(a,b,c);return this.files[a]=g,g},w=function(a){\"/\"==a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf(\"/\");return b>0?a.substring(0,b):\"\"},x=function(a){return\"/\"!=a.slice(-1)&&(a+=\"/\"),a},y=function(a,b){return b=\"undefined\"!=typeof b&&b,a=x(a),this.files[a]||v.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},z=function(a,b,c){var d,g=new k;return a._data instanceof k?(g.uncompressedSize=a._data.uncompressedSize,g.crc32=a._data.crc32,0===g.uncompressedSize||a.dir?(b=j.STORE,g.compressedContent=\"\",g.crc32=0):a._data.compressionMethod===b.magic?g.compressedContent=a._data.getCompressedContent():(d=a._data.getContent(),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c))):(d=q(a),d&&0!==d.length&&!a.dir||(b=j.STORE,d=\"\"),g.uncompressedSize=d.length,g.crc32=f(d),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c)),g.compressedSize=g.compressedContent.length,g.compressionMethod=b.magic,g},A=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},B=function(a,b){return 63&(a||0)},C=function(a,b,c,d,h,i){var j,k,l,n,o=(c.compressedContent,i!==m.utf8encode),p=e.transformTo(\"string\",i(b.name)),q=e.transformTo(\"string\",m.utf8encode(b.name)),r=b.comment||\"\",s=e.transformTo(\"string\",i(r)),u=e.transformTo(\"string\",m.utf8encode(r)),v=q.length!==b.name.length,w=u.length!==r.length,x=b.options,y=\"\",z=\"\",C=\"\";l=b._initialMetadata.dir!==b.dir?b.dir:x.dir,n=b._initialMetadata.date!==b.date?b.date:x.date;var D=0,E=0;l&&(D|=16),\"UNIX\"===h?(E=798,D|=A(b.unixPermissions,l)):(E=20,D|=B(b.dosPermissions,l)),j=n.getHours(),j<<=6,j|=n.getMinutes(),j<<=5,j|=n.getSeconds()/2,k=n.getFullYear()-1980,k<<=4,k|=n.getMonth()+1,k<<=5,k|=n.getDate(),v&&(z=t(1,1)+t(f(p),4)+q,y+=\"up\"+t(z.length,2)+z),w&&(C=t(1,1)+t(this.crc32(s),4)+u,y+=\"uc\"+t(C.length,2)+C);var F=\"\";F+=\"\\n\\0\",F+=o||!v&&!w?\"\\0\\0\":\"\\0\\b\",F+=c.compressionMethod,F+=t(j,2),F+=t(k,2),F+=t(c.crc32,4),F+=t(c.compressedSize,4),F+=t(c.uncompressedSize,4),F+=t(p.length,2),F+=t(y.length,2);var G=g.LOCAL_FILE_HEADER+F+p+y,H=g.CENTRAL_FILE_HEADER+t(E,2)+F+t(s.length,2)+\"\\0\\0\\0\\0\"+t(D,4)+t(d,4)+p+y+s;return{fileRecord:G,dirRecord:H,compressedObject:c}},D={load:function(a,b){throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\")},filter:function(a){var b,c,d,f,g=[];for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],f=new s(d.name,d._data,e.extend(d.options)),c=b.slice(this.root.length,b.length),b.slice(0,this.root.length)===this.root&&a(c,f)&&g.push(f));return g},file:function(a,b,c){if(1===arguments.length){if(e.isRegExp(a)){var d=a;return this.filter(function(a,b){return!b.dir&&d.test(a)})}return this.filter(function(b,c){return!c.dir&&b===a})[0]||null}return a=this.root+a,v.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(e.isRegExp(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=y.call(this,b),d=this.clone();return d.root=c.name,d},remove:function(a){a=this.root+a;var b=this.files[a];if(b||(\"/\"!=a.slice(-1)&&(a+=\"/\"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){a=e.extend(a||{},{base64:!0,compression:\"STORE\",compressionOptions:null,type:\"base64\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:m.utf8encode}),e.checkSupport(a.type),\"darwin\"!==a.platform&&\"freebsd\"!==a.platform&&\"linux\"!==a.platform&&\"sunos\"!==a.platform||(a.platform=\"UNIX\"),\"win32\"===a.platform&&(a.platform=\"DOS\");var b,c,d=[],f=0,h=0,k=e.transformTo(\"string\",a.encodeFileName(a.comment||this.comment||\"\"));for(var l in this.files)if(this.files.hasOwnProperty(l)){var p=this.files[l],q=p.options.compression||a.compression.toUpperCase(),r=j[q];if(!r)throw new Error(q+\" is not a valid compression method !\");var s=p.options.compressionOptions||a.compressionOptions||{},u=z.call(this,p,r,s),v=C.call(this,l,p,u,f,a.platform,a.encodeFileName);f+=v.fileRecord.length+u.compressedSize,h+=v.dirRecord.length,d.push(v)}var w=\"\";w=g.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+t(d.length,2)+t(d.length,2)+t(h,4)+t(f,4)+t(k.length,2)+k;var x=a.type.toLowerCase();for(b=\"uint8array\"===x||\"arraybuffer\"===x||\"blob\"===x||\"nodebuffer\"===x?new o(f+h+w.length):new n(f+h+w.length),c=0;c<d.length;c++)b.append(d[c].fileRecord),b.append(d[c].compressedObject.compressedContent);for(c=0;c<d.length;c++)b.append(d[c].dirRecord);b.append(w);var y=b.finalize();switch(a.type.toLowerCase()){case\"uint8array\":case\"arraybuffer\":case\"nodebuffer\":return e.transformTo(a.type.toLowerCase(),y);case\"blob\":return e.arrayBuffer2Blob(e.transformTo(\"arraybuffer\",y),a.mimeType);case\"base64\":return a.base64?i.encode(y):y;default:return y}},crc32:function(a,b){return f(a,b)},utf8encode:function(a){return e.transformTo(\"string\",m.utf8encode(a))},utf8decode:function(a){return m.utf8decode(a)}};b.exports=D},{\"./base64\":2,\"./compressedObject\":3,\"./compressions\":4,\"./crc32\":5,\"./defaults\":7,\"./nodeBuffer\":12,\"./signature\":15,\"./stringWriter\":17,\"./support\":18,\"./uint8ArrayWriter\":20,\"./utf8\":21,\"./utils\":22}],15:[function(a,b,c){\"use strict\";c.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",c.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",c.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",c.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",c.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],16:[function(a,b,c){\"use strict\";function d(a,b){this.data=a,b||(this.data=f.string2binary(this.data)),this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./dataReader\"),f=a(\"./utils\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6,\"./utils\":22}],17:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(){this.data=[]};e.prototype={append:function(a){a=d.transformTo(\"string\",a),this.data.push(a)},finalize:function(){return this.data.join(\"\")}},b.exports=e},{\"./utils\":22}],18:[function(a,b,c){(function(a){\"use strict\";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,c.nodebuffer=\"undefined\"!=typeof a,c.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)c.blob=!1;else{var b=new ArrayBuffer(0);try{c.blob=0===new Blob([b],{type:\"application/zip\"}).size}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;f.append(b),c.blob=0===f.getBlob(\"application/zip\").size}catch(d){c.blob=!1}}}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],19:[function(a,b,c){\"use strict\";function d(a){a&&(this.data=a,this.length=this.data.length,this.index=0,this.zero=0)}var e=a(\"./arrayReader\");d.prototype=new e,d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./arrayReader\":1}],20:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(a){this.data=new Uint8Array(a),this.index=0};e.prototype={append:function(a){0!==a.length&&(a=d.transformTo(\"uint8array\",a),this.data.set(a,this.index),this.index+=a.length)},finalize:function(){return this.data}},b.exports=e},{\"./utils\":22}],21:[function(a,b,c){\"use strict\";for(var d=a(\"./utils\"),e=a(\"./support\"),f=a(\"./nodeBuffer\"),g=new Array(256),h=0;h<256;h++)g[h]=h>=252?6:h>=248?5:h>=240?4:h>=224?3:h>=192?2:1;g[254]=g[254]=1;var i=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=e.uint8array?new Uint8Array(i):new Array(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},j=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+g[a[c]]>b?c:b},k=function(a){var b,c,e,f,h=a.length,i=new Array(2*h);for(c=0,b=0;b<h;)if(e=a[b++],e<128)i[c++]=e;else if(f=g[e],f>4)i[c++]=65533,b+=f-1;else{for(e&=2===f?31:3===f?15:7;f>1&&b<h;)e=e<<6|63&a[b++],f--;f>1?i[c++]=65533:e<65536?i[c++]=e:(e-=65536,i[c++]=55296|e>>10&1023,i[c++]=56320|1023&e)}return i.length!==c&&(i.subarray?i=i.subarray(0,c):i.length=c),d.applyFromCharCode(i)};c.utf8encode=function(a){return e.nodebuffer?f(a,\"utf-8\"):i(a)},c.utf8decode=function(a){if(e.nodebuffer)return d.transformTo(\"nodebuffer\",a).toString(\"utf-8\");a=d.transformTo(e.uint8array?\"uint8array\":\"array\",a);for(var b=[],c=0,f=a.length,g=65536;c<f;){var h=j(a,Math.min(c+g,f));e.uint8array?b.push(k(a.subarray(c,h))):b.push(k(a.slice(c,h))),c=h}return b.join(\"\")}},{\"./nodeBuffer\":12,\"./support\":18,\"./utils\":22}],22:[function(a,b,c){\"use strict\";function d(a){return a}function e(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function f(a){var b=65536,d=[],e=a.length,f=c.getTypeOf(a),g=0,h=!0;try{switch(f){case\"uint8array\":String.fromCharCode.apply(null,new Uint8Array(0));break;case\"nodebuffer\":String.fromCharCode.apply(null,j(0))}}catch(i){h=!1}if(!h){for(var k=\"\",l=0;l<a.length;l++)k+=String.fromCharCode(a[l]);return k}for(;g<e&&b>1;)try{\"array\"===f||\"nodebuffer\"===f?d.push(String.fromCharCode.apply(null,a.slice(g,Math.min(g+b,e)))):d.push(String.fromCharCode.apply(null,a.subarray(g,Math.min(g+b,e)))),g+=b}catch(i){b=Math.floor(b/2)}return d.join(\"\")}function g(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var h=a(\"./support\"),i=a(\"./compressions\"),j=a(\"./nodeBuffer\");c.string2binary=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=String.fromCharCode(255&a.charCodeAt(c));return b},c.arrayBuffer2Blob=function(a,b){c.checkSupport(\"blob\"),b=b||\"application/zip\";try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error(\"Bug : can't construct the Blob.\")}}},c.applyFromCharCode=f;var k={};k.string={string:d,array:function(a){return e(a,new Array(a.length))},arraybuffer:function(a){return k.string.uint8array(a).buffer},uint8array:function(a){return e(a,new Uint8Array(a.length))},nodebuffer:function(a){return e(a,j(a.length))}},k.array={string:f,array:d,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(a)}},k.arraybuffer={string:function(a){return f(new Uint8Array(a))},array:function(a){return g(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:d,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(new Uint8Array(a))}},k.uint8array={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:d,nodebuffer:function(a){return j(a)}},k.nodebuffer={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return k.nodebuffer.uint8array(a).buffer},uint8array:function(a){return g(a,new Uint8Array(a.length))},nodebuffer:d},c.transformTo=function(a,b){if(b||(b=\"\"),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=k[d][a](b);return e},c.getTypeOf=function(a){return\"string\"==typeof a?\"string\":\"[object Array]\"===Object.prototype.toString.call(a)?\"array\":h.nodebuffer&&j.test(a)?\"nodebuffer\":h.uint8array&&a instanceof Uint8Array?\"uint8array\":h.arraybuffer&&a instanceof ArrayBuffer?\"arraybuffer\":void 0},c.checkSupport=function(a){var b=h[a.toLowerCase()];if(!b)throw new Error(a+\" is not supported by this browser\")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d=\"\";for(c=0;c<(a||\"\").length;c++)b=a.charCodeAt(c),d+=\"\\\\x\"+(b<16?\"0\":\"\")+b.toString(16).toUpperCase();return d},c.findCompression=function(a){for(var b in i)if(i.hasOwnProperty(b)&&i[b].magic===a)return i[b];return null},c.isRegExp=function(a){return\"[object RegExp]\"===Object.prototype.toString.call(a)},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&\"undefined\"==typeof c[b]&&(c[b]=arguments[a][b]);return c}},{\"./compressions\":4,\"./nodeBuffer\":12,\"./support\":18}],23:[function(a,b,c){\"use strict\";function d(a,b){this.files=[],this.loadOptions=b,a&&this.load(a)}var e=a(\"./stringReader\"),f=a(\"./nodeBufferReader\"),g=a(\"./uint8ArrayReader\"),h=a(\"./arrayReader\"),i=a(\"./utils\"),j=a(\"./signature\"),k=a(\"./zipEntry\"),l=a(\"./support\");a(\"./object\");d.prototype={checkSignature:function(a){var b=this.reader.readString(4);if(b!==a)throw new Error(\"Corrupted zip or bug : unexpected signature (\"+i.pretty(b)+\", expected \"+i.pretty(a)+\")\")},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=l.uint8array?\"uint8array\":\"array\",c=i.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.versionMadeBy=this.reader.readString(2),this.versionNeeded=this.reader.readInt(2),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readString(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(j.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readString(4)===j.CENTRAL_FILE_HEADER;)a=new k({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(j.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,j.LOCAL_FILE_HEADER);throw b?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip : can't find end of central directory\")}this.reader.setIndex(a);var c=a;if(this.checkSignature(j.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(a),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,j.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,j.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(e)+\" bytes.\")},prepareReader:function(a){var b=i.getTypeOf(a);if(i.checkSupport(b),\"string\"!==b||l.uint8array)if(\"nodebuffer\"===b)this.reader=new f(a);else if(l.uint8array)this.reader=new g(i.transformTo(\"uint8array\",a));else{if(!l.array)throw new Error(\"Unexpected error: unsupported type '\"+b+\"'\");this.reader=new h(i.transformTo(\"array\",a))}else this.reader=new e(a,this.loadOptions.optimizedBinaryString)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{\"./arrayReader\":1,\"./nodeBufferReader\":13,\"./object\":14,\"./signature\":15,\"./stringReader\":16,\"./support\":18,\"./uint8ArrayReader\":19,\"./utils\":22,\"./zipEntry\":24}],24:[function(a,b,c){\"use strict\";function d(a,b){this.options=a,this.loadOptions=b}var e=a(\"./stringReader\"),f=a(\"./utils\"),g=a(\"./compressedObject\"),h=a(\"./object\"),i=a(\"./support\"),j=0,k=3;d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},prepareCompressedContent:function(a,b,c){return function(){var d=a.index;a.setIndex(b);var e=a.readData(c);return a.setIndex(d),e}},prepareContent:function(a,b,c,d,e){return function(){var a=f.transformTo(d.uncompressInputType,this.getCompressedContent()),b=d.uncompress(a);if(b.length!==e)throw new Error(\"Bug : uncompressed data size mismatch\");return b}},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize==-1||this.uncompressedSize==-1)throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)\");if(b=f.findCompression(this.compressionMethod),null===b)throw new Error(\"Corrupted zip : compression \"+f.pretty(this.compressionMethod)+\" unknown (inner file : \"+f.transformTo(\"string\",this.fileName)+\")\");if(this.decompressed=new g,this.decompressed.compressedSize=this.compressedSize,this.decompressed.uncompressedSize=this.uncompressedSize,this.decompressed.crc32=this.crc32,this.decompressed.compressionMethod=this.compressionMethod,this.decompressed.getCompressedContent=this.prepareCompressedContent(a,a.index,this.compressedSize,b),this.decompressed.getContent=this.prepareContent(a,a.index,this.compressedSize,b,this.uncompressedSize),this.loadOptions.checkCRC32&&(this.decompressed=f.transformTo(\"string\",this.decompressed.getContent()),h.crc32(this.decompressed)!==this.crc32))throw new Error(\"Corrupted zip : CRC32 mismatch\");\n},readCentralPart:function(a){if(this.versionMadeBy=a.readInt(2),this.versionNeeded=a.readInt(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4),this.fileNameLength=a.readInt(2),this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");this.fileName=a.readData(this.fileNameLength),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===j&&(this.dosPermissions=63&this.externalFileAttributes),a===k&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=new e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index;for(this.extraFields=this.extraFields||{};a.index<e+this.extraFieldsLength;)b=a.readInt(2),c=a.readInt(2),d=a.readString(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=i.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=h.utf8decode(this.fileName),this.fileCommentStr=h.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileName)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileComment)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null}},b.exports=d},{\"./compressedObject\":3,\"./object\":14,\"./stringReader\":16,\"./support\":18,\"./utils\":22}],25:[function(a,b,c){\"use strict\";var d=a(\"./lib/utils/common\").assign,e=a(\"./lib/deflate\"),f=a(\"./lib/inflate\"),g=a(\"./lib/zlib/constants\"),h={};d(h,e,f,g),b.exports=h},{\"./lib/deflate\":26,\"./lib/inflate\":27,\"./lib/utils/common\":28,\"./lib/zlib/constants\":31}],26:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e=\"string\"==typeof b.dictionary?j.string2buf(b.dictionary):\"[object ArrayBuffer]\"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a(\"./zlib/deflate\"),i=a(\"./utils/common\"),j=a(\"./utils/strings\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,\"string\"==typeof a?e.input=j.string2buf(a):\"[object ArrayBuffer]\"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||(\"string\"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/deflate\":33,\"./zlib/messages\":38,\"./zlib/zstream\":40}],27:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a(\"./zlib/inflate\"),h=a(\"./utils/common\"),i=a(\"./utils/strings\"),j=a(\"./zlib/constants\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=a(\"./zlib/gzheader\"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,\"string\"==typeof a?m.input=i.binstring2buf(a):\"[object ArrayBuffer]\"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l=\"string\"==typeof p?i.string2buf(p):\"[object ArrayBuffer]\"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/constants\":31,\"./zlib/gzheader\":34,\"./zlib/inflate\":36,\"./zlib/messages\":38,\"./zlib/zstream\":40}],28:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if(\"object\"!=typeof c)throw new TypeError(c+\"must be non-object\");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],29:[function(a,b,c){\"use strict\";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c=\"\",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a(\"./common\"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{\"./common\":28}],30:[function(a,b,c){\"use strict\";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],31:[function(a,b,c){\"use strict\";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],32:[function(a,b,c){\"use strict\";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],33:[function(a,b,c){\"use strict\";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a(\"../utils/common\"),F=a(\"./trees\"),G=a(\"./adler32\"),H=a(\"./crc32\"),I=a(\"./messages\"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./messages\":38,\"./trees\":39}],34:[function(a,b,c){\"use strict\";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}b.exports=d},{}],35:[function(a,b,c){\"use strict\";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg=\"invalid literal/length code\",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg=\"invalid distance code\",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],36:[function(a,b,c){\"use strict\";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg=\"\",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg=\"incorrect header check\",c.mode=ma;break}if((15&m)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg=\"invalid window size\",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(57344&c.flags){a.msg=\"unknown header flags set\",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,\nn+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg=\"header crc mismatch\",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg=\"invalid block type\",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg=\"invalid stored block lengths\",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg=\"too many length or distance symbols\",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid code lengths set\",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg=\"invalid bit length repeat\",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg=\"invalid bit length repeat\",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg=\"invalid code -- missing end-of-block\",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid literal/lengths set\",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg=\"invalid distances set\",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg=\"invalid literal/length code\",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg=\"invalid distance code\",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg=\"invalid distance too far back\",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg=\"invalid distance too far back\",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg=\"incorrect data check\",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg=\"incorrect length check\",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a(\"../utils/common\"),t=a(\"./adler32\"),u=a(\"./crc32\"),v=a(\"./inffast\"),w=a(\"./inftrees\"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./inffast\":35,\"./inftrees\":37}],37:[function(a,b,c){\"use strict\";var d=a(\"../utils/common\"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{\"../utils/common\":28}],38:[function(a,b,c){\"use strict\";b.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],39:[function(a,b,c){\"use strict\";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a(\"../utils/common\"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{\"../utils/common\":28}],40:[function(a,b,c){\"use strict\";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomActiveList {\n   get key() {\n      return \"activelist\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.list, webix.ActiveContent);\n   }\n};\n","/*\n * countfooter\n *\n * Add the count footer to the webix's datatable.\n *\n */\n\nmodule.exports = class ABCountFooter {\n   get key() {\n      return \"countfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.countColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               var rowData = datatable.find({}) || [];\n               rowData.forEach((row) => {\n                  if (row == null) return;\n\n                  var data =\n                     row[info.columnId] || row[info.columnId + \"__relation\"];\n\n                  // array\n                  if (data && Array.isArray(data)) {\n                     result += data.length;\n                  } else if (\n                     data != null &&\n                     data != \"\" &&\n                     data != false &&\n                     data != \"false\" &&\n                     data != \"0\"\n                  ) {\n                     result += 1;\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * Custom Component Manager\n * Make sure our {ABComponent}s are initialized with our custom\n * Webix Components.\n */\n\n// Import our Custom Components here:\nvar componentList = [\n   require(\"./activelist\"),\n   require(\"./countfooter\"),\n   require(\"./datetimepicker\"),\n   require(\"./editlist\"),\n   require(\"./edittree\"),\n   require(\"./editunitlist\"),\n   require(\"./focusableTemplate\"),\n   require(\"./formioPreview\"),\n   require(\"./formioBuilder\").default,\n   require(\"./numbertext\"),\n   require(\"./thaicalendar\"),\n   require(\"./timepicker\"),\n   require(\"./tinyMce\").default,\n   require(\"./totalfooter\"),\n   require(\"./treesuggest\"),\n   // require('./savablelayout')\n];\n\nmodule.exports = class ABCustomComponentManager {\n   constructor() {}\n\n   initComponents(App) {\n      App.custom = App.custom || {};\n\n      componentList.forEach((Component) => {\n         var component = new Component(App);\n         App.custom[component.key] = component;\n      });\n\n      // Transition to v2:\n      App.AB.custom = App.custom;\n   }\n};\n","/*\n * custom_datetimepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomDateTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"datetimepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_datetimepicker\"), // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.datetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: \"calendar\",\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.datetime = webix.extend(\n         {\n            popupType: \"datetime\",\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n   }\n};\n","/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditTree {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"edittree\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n   }\n};\n","/*\n * custom_editunitlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditUnitList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editunitlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n      /*\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n*/\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.unitlist);\n   }\n};\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFocusableTemplate {\n   get key() {\n      return \"focusabletemplate\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         focus: function () {\n            return false;\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.template, webix.UIManager);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n * Note: Moved from ABDesigner to prevent loading formIO library globally or\n * duplicating it. Revisit when formIOv5 releases as it should then be possible\n * to package the form renderer without the builder.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n */\nimport ABLazyCustomComponent from \"./lazyComponent.js\";\nexport default class ABCustomFormBuilderBuilder extends ABLazyCustomComponent {\n   get key() {\n      return \"formiobuilder\";\n   }\n\n   constructor(App) {\n      super(App);\n      this.label = this.AB.Label();\n      this.view = this.key;\n   }\n\n   /**\n    * Load the FormIO dependency and add the component to webix\n    * @returns {Promise<null>}\n    */\n   async init() {\n      if (this.initialized) return;\n      const { FormBuilder } = await import(\n         /* webpackPrefetch: true */\n         /* webpackFetchPrioirtiy: \"low\" */\n         \"../init/formio.js\"\n      );\n      this.FormBuilder = FormBuilder;\n      // Tell Webix to create an INSTANCE of our custom component:\n      this.AB.Webix.protoUI(this.ui(), this.AB.Webix.ui.popup);\n      this.initialized = true;\n   }\n\n   /**\n    * Generate the custom webix ui\n    * @method ui\n    * @returns {Object} custom webix ui\n    */\n   ui() {\n      const _this = this;\n\n      return {\n         name: this.key,\n         defaults: {\n            css: \"scrolly forceOpen\",\n            hidden: false,\n            autofit: true,\n         },\n         $init: async function (config) {\n            let comp, defaultComponent;\n\n            if (config.dataFields) {\n               comp = this.parseDataFields(config.dataFields);\n               defaultComponent = comp.approveButton.schema;\n            } else {\n               comp = _this.inputComponents();\n               defaultComponent = comp.saveButton.schema;\n            }\n\n            const formComponents = config.formComponents\n               ? config.formComponents\n               : { components: [defaultComponent] };\n\n            try {\n               this.builder = new this.FormBuilder(this.$view, formComponents, {\n                  noDefaultSubmitButton: true,\n                  noNewEdit: true,\n                  builder: {\n                     basic: false,\n                     advanced: false,\n                     customBasic: false,\n                     premium: false,\n                     custom: {\n                        title: this.label(\"Fields\"),\n                        weight: 0,\n                        default: true,\n                        components: comp,\n                     },\n                     layout: {\n                        components: {\n                           table: true,\n                        },\n                     },\n                  },\n               });\n               await this.builder.ready;\n            } catch (err) {\n               this.notify(\"Error initializing formio builder\", err);\n            }\n         },\n         // set up a function that can be called to request the form schema\n         getFormData: function () {\n            return this.builder.schema ?? this.builder.form;\n         },\n         // Pass functions into the Webix component to be use in $init\n         label: this.label,\n         parseDataFields: this.parseDataFields,\n         notify: this.AB.notify.developer,\n         FormBuilder: this.FormBuilder,\n      };\n   }\n\n   /**\n    * Generate the formio custom components based on the fields.\n    * Used internally in the webix component.\n    * @method parseDataFields\n    * @param {object[]} fields {field: ABField, key, label, object: ABObject}\n    * @returns {object} each key is a formio component\n    */\n   parseDataFields(fields) {\n      const components = {};\n      fields?.forEach(({ field, key, label }) => {\n         if (!field) return;\n\n         const schema = {\n            abFieldID: field.id,\n            label: field.label,\n            disabled: true,\n            key,\n            _key: key,\n            type: \"textfield\",\n            input: true,\n         };\n\n         switch (field.key) {\n            case \"boolean\":\n               schema.type = \"checkbox\";\n               break;\n            case \"calculate\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = ${field.settings.formula\n                  .replace(/{/g, \"data['\")\n                  .replace(/}/g, \"']\")}`;\n               break;\n            case \"connectObject\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = data['${key}.format']`;\n               break;\n            case \"date\":\n               schema.type = \"datetime\";\n               schema.format = \"MMMM d, yyyy\";\n               break;\n            case \"datetime\":\n               schema.type = \"datetime\";\n               schema.format = \"MMMM d, yyyy h:mm a\";\n               break;\n            case \"email\":\n               schema.type = \"email\";\n               break;\n            case \"file\":\n               schema.type = \"htmlelement\";\n               schema.tag = \"a\";\n               schema.className = \"btn btn-primary btn-block\";\n               schema.content = `<i class='fa fa-paperclip'></i> {{data['${key}']?.filename ?? \"No File\"}}`;\n               schema.attrs = [\n                  {\n                     attr: \"href\",\n                     value: field.urlFile(`{{data['${key}'].uuid}}`),\n                  },\n                  {\n                     attr: \"target\",\n                     value: \"_blank\",\n                  },\n               ];\n               schema.refreshOnChange = true;\n               schema.input = false;\n               break;\n            case \"image\":\n               schema.type = \"htmlelement\";\n               schema.tag = \"img\";\n               schema.className = \"img-thumbnail max100\";\n               schema.content = \"\";\n               (schema.attrs = [\n                  {\n                     attr: \"src\",\n                     value: field.urlImage(`{{data['${key}']}}`),\n                  },\n               ]),\n                  (schema.refreshOnChange = true);\n               schema.input = false;\n               break;\n            case \"list\":\n               var values = [];\n               field.settings.options.forEach((opt) => {\n                  values.push({\n                     label: opt.text,\n                     value: opt.id,\n                  });\n               });\n               schema.type = \"select\";\n               schema.data = { values };\n               schema.multiple = field.settings.isMultiple;\n               break;\n            case \"LongText\":\n               schema.type = \"textarea\";\n               break;\n            case \"number\":\n               schema.type = \"number\";\n               break;\n            case \"TextFormula\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = '${field.settings.textFormula}'`;\n               break;\n            default:\n               break;\n         }\n         components[key] = {\n            title: label,\n            key,\n            icon: field.icon,\n            schema,\n         };\n      });\n\n      components[\"approveButton\"] = {\n         title: this.label(\"Approve Button\"),\n         key: \"approve\",\n         icon: \"check-square\",\n         schema: {\n            label: this.label(\"Approve\"),\n            type: \"button\",\n            key: \"approve\",\n            event: \"approve\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-thumbs-up\",\n            action: \"event\",\n            theme: \"success\",\n         },\n      };\n      components[\"denyButton\"] = {\n         title: this.label(\"Deny Button\"),\n         key: \"deny\",\n         icon: \"ban\",\n         schema: {\n            label: this.label(\"Deny\"),\n            type: \"button\",\n            key: \"deny\",\n            event: \"deny\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-thumbs-down\",\n            action: \"event\",\n            theme: \"danger\",\n         },\n      };\n      components[\"customButton\"] = {\n         title: this.label(\"Custom Action Button\"),\n         key: \"custom\",\n         icon: \"cog\",\n         schema: {\n            label: this.label(\"Custom Name\"),\n            type: \"button\",\n            key: \"custom\",\n            event: \"yourEvent\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-cog\",\n            action: \"event\",\n            theme: \"primary\",\n         },\n      };\n      return components;\n   }\n\n   inputComponents() {\n      return {\n         textbox: {\n            title: \"Textbox\",\n            key: \"YOUR_KEY\",\n            icon: \"font\",\n            schema: {\n               type: \"textfield\",\n               key: \"YOUR_KEY\",\n               label: \"[YOUR LABEL]\",\n               placeholder: \"Enter your information.\",\n               input: true,\n            },\n         },\n         textarea: {\n            title: \"Textarea\",\n            key: \"YOUR_KEY\",\n            icon: \"bold\",\n            schema: {\n               type: \"textarea\",\n               key: \"YOUR_KEY\",\n               label: \"[YOUR LABEL]\",\n               placeholder: \"Enter your information.\",\n            },\n         },\n         saveButton: {\n            title: \"Submit Button\",\n            key: \"submit\",\n            icon: \"check-square\",\n            schema: {\n               label: \"Submit\",\n               type: \"button\",\n               key: \"submit\",\n               event: \"submit\",\n               block: true,\n               size: \"lg\",\n               input: false,\n               leftIcon: \"fa fa-check-square\",\n               action: \"event\",\n               theme: \"success\",\n            },\n         },\n      };\n   }\n}\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n *\n */\nconst ABLazyCustomComponent = require(\"./lazyComponent.js\");\nmodule.exports = class ABCustomFormIOPreview extends ABLazyCustomComponent {\n   get key() {\n      return \"formiopreview\";\n   }\n\n   async init() {\n      if (this.initialized) return;\n      const { Form } = await import(\n         /* webpackPrefetch: true */\n         /* webpackFetchPrioirtiy: \"low\" */\n         \"../init/formio.js\"\n      );\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly\",\n            borderless: true,\n         },\n         $init: async function (config) {\n            this.$ready.push(() => this.initForm(config));\n         },\n\n         initForm: async (config) => {\n            var formComponents = config.formComponents ?? {};\n            var formData = config.formData ?? {};\n            const component = $$(config.id);\n\n            // JOHNNY: we now have formio designs where we need to pull out\n            // more than just an .id from connected fields. Let's no longer\n            // do this:\n            // // we need to find out when we are passing an array of objects and reduce it down to an array of IDs\n            // for (var data in formData) {\n            //    if (\n            //       Array.isArray(formData[data]) &&\n            //       typeof formData[data][0] == \"object\"\n            //    ) {\n            //       formData[data] = formData[data].map((item) => item.id);\n            //    }\n            // }\n\n            const form = new Form(component.$view, formComponents);\n            component._formio = form;\n            // readOnly: true\n            // sanitizeConfig: {\n            //     addTags: [\"a\", \"label\", \"img\", \"i\"],\n            //     addAttr: [\"src\", \"href\", \"class\", \"target\"]\n            // }\n            // }).then(function (form) {\n            await form.build();\n            // now that it is set up we can push it into the global var\n            // formBuilder = builder;\n            // Provide a default submission.\n            form.instance.submission = {\n               data: formData,\n            };\n            (formComponents.components || []).forEach((comp) => {\n               if (\n                  comp.type == \"button\" &&\n                  comp.action == \"event\" &&\n                  comp.event\n               ) {\n                  form.instance.once(comp.event, function (/* click */) {\n                     config?.onButton(comp.event);\n                     // _this.emit(\"button\", comp.event);\n                  });\n               }\n            });\n            // });\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      this._logic = {};\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      this.AB.Webix.protoUI(_ui, this.AB.Webix.ui.view);\n      this.initialized = true;\n   }\n};\n","/**\n * Base class for any custom webix component that we want to initalize lazily,\n * usually to reduce the dependency size required on load.\n */\nvar ABEmitter = require(\"../AppBuilder/platform/ABEmitter.js\");\nmodule.exports = class ABLazyCustomComponent extends ABEmitter {\n   constructor({ AB }) {\n      super();\n      this.initialized = false;\n      this.AB = AB;\n      this.setDefaultUI();\n   }\n\n   /**\n    * Sets a default UI used before the actual webix component is ready. Meant as\n    * a helper to future developers.\n    */\n   setDefaultUI() {\n      this.AB.Webix.protoUI(\n         {\n            name: this.key,\n            defaults: {\n               template:\n                  \"This custom webix component has not been initialized. <br>Call AB.custom.#key#.init() before using this component.\",\n               data: { key: this.key },\n            },\n            $init: () =>\n               console.warn(\n                  `${this.key} custom webix component used before being initalized`\n               ),\n         },\n         this.AB.Webix.ui.template\n      );\n   }\n};\n","/*\n * numbertext\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomNumberText {\n   get key() {\n      return \"numbertext\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n\n         defaults: {\n            css: \"webix_el_text\",\n         },\n\n         // override this function to return number value type\n         $getValue: function () {\n            var val = this.getInputNode().value;\n            if (val) return JSON.parse(val);\n            // Convert to number\n            else return \"\";\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.text);\n   }\n};\n","/*\n * Thai Calendar\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomThaiCalendar {\n   get key() {\n      return \"thaicalendar\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      this.view = this.key;\n\n      const i18n = webix.i18n;\n\n      // Our webix UI definition:\n      const _ui = {\n         name: this.key,\n         defaults: {\n            calendarHeader: function (d) {\n               return `${i18n.calendar.monthFull[d.getMonth()]} ${\n                  d.getFullYear() + 543\n               }`;\n            },\n         },\n      };\n\n      if (webix.ui.calendar.$protoWait[0]._zoom_logic) {\n         _ui._zoom_logic = AB.cloneDeep(\n            webix.ui.calendar.$protoWait[0]._zoom_logic\n         );\n         _ui._zoom_logic[1] = Object.assign(_ui._zoom_logic[1], {\n            _getTitle: this._getYearTitle,\n         });\n         _ui._zoom_logic[2] = Object.assign(_ui._zoom_logic[2], {\n            _getTitle: this._getYearRangeTitle,\n            _getContent: this._getYearContent,\n            _setContent: this._setYear,\n         });\n      }\n\n      if (webix.ui.calendar.$protoWait[0].Qd) {\n         _ui.Qd = AB.cloneDeep(webix.ui.calendar.$protoWait[0].Qd);\n         _ui.Qd[1] = Object.assign(_ui.Qd[1], {\n            Jv: this._getYearTitle,\n         });\n         _ui.Qd[2] = Object.assign(_ui.Qd[2], {\n            Jv: this._getYearRangeTitle,\n            Zv: this._getYearContent,\n            Xv: this._setYear,\n         });\n      }\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.calendar);\n\n      webix.editors.$popup.thaidate = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: false,\n         },\n      };\n\n      webix.editors.$popup.thaidatetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.thaidate = webix.extend(\n         {\n            popupType: \"thaidate\",\n         },\n         webix.editors.date\n      );\n\n      webix.editors.thaidatetime = webix.extend(\n         {\n            popupType: \"thaidatetime\",\n         },\n         webix.editors.date\n      );\n   }\n\n   _getYearTitle(date) {\n      return date.getFullYear() + 543;\n   }\n\n   _getYearRangeTitle(date, calendar) {\n      let start = date.getFullYear() + 543;\n      calendar._zoom_start_date = start = start - (start % 10) - 1;\n      return start + \" - \" + (start + 10 + 1);\n   }\n\n   _getYearContent(i, calendar) {\n      return calendar._zoom_start_date + i;\n   }\n\n   _setYear(next, i, calendar) {\n      next.setFullYear(calendar._zoom_start_date - 543 + i);\n   }\n};\n","/*\n * custom_timepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"timepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_timepicker\"), // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.time = {\n         view: \"popup\",\n         body: {\n            view: \"calendar\",\n            width: 220,\n            height: 200,\n            type: \"time\",\n         },\n      };\n\n      webix.editors.time = webix.extend(\n         {\n            popupType: \"time\",\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * tinyMce\n *\n * Create a custom webix component.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n */\nimport ABLazyCustomComponent from \"./lazyComponent.js\";\nexport default class ABCustomTinyMCE extends ABLazyCustomComponent {\n   get key() {\n      return \"tinymce-editor\";\n   }\n\n   async init() {\n      if (this.initialized) return;\n\n      await import(\n         /* webpackPrefetch: true */\n         \"../js/webix/extras/tinymce.js\"\n      );\n      this.initialized = true;\n   }\n}\n","/*\n * totalfooter\n *\n * Add the contents of records to show in footer of the webix's datatable.\n *\n */\n\nmodule.exports = class ABTotalFooter {\n   get key() {\n      return \"totalfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.totalColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               datatable.eachRow(function (row) {\n                  var record = datatable.getItem(row);\n\n                  var data = info.field.format(record);\n\n                  // array\n                  if (data) {\n                     result += parseFloat(data); // we need to use parseFloat because numbers could be decimals\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"treesuggest\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            type: \"tree\",\n            width: 0,\n            body: {\n               borderless: true,\n               select: true,\n               template: function (obj, common) {\n                  return (\n                     \"<span>\" +\n                     (obj.$count ? \"<b>\" + obj.value + \"</b>\" : obj.value) +\n                     \"</span>\"\n                  );\n               },\n               ready: function () {\n                  this.openAll();\n               },\n               on: {\n                  onAfterSelect: function (id, e) {\n                     if (this.getItem(id).$count) {\n                        this.getParentView().setMasterValue(\"\");\n                        this.show(\n                           $$(this.getParentView().config.master).getInputNode()\n                        );\n                     }\n                  },\n               },\n            },\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.suggest);\n   }\n};\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","EventEmitter","constructor","super","this","isAuthenticated","_config","_listRoles","_listScopes","_listUsers","init","AB","UserConfig","Config","userConfig","MetaConfig","metaConfig","roles","scopes","users","Network","on","context","err","data","console","error","emit","Promise","canSwitcheroo","r","uuid","length","isSwitcherood","userReal","isSystemDesigner","email","language","languageCode","logout","post","url","tenantUrl","Tenant","setting","key","fn","filter","rolesAll","username","userList","imageID","image_id","sendEmailNotifications","Alert","opts","webix","alert","title","Multilingual","label","text","message","ok","Confirm","labelYes","labelNo","cancel","confirm","callback","result","fnYes","fnNo","ConfirmDelete","Message","timeout","expire","MLClass","_missingLabelID","_missingLabels","_pluginLabelsMissing","isLabelUpdateEnabled","labels","labelConfig","_languages","languageConfig","pluginLabels","currentLanguage","Account","enableLabelUpdates","altText","values","postMissing","arguments","Array","isArray","replace","newKey","slice","postMissingLabel","forEach","v","i","sub","replaceAll","labelPlugin","plugin","languages","pluginLoadLabels","pluginLabelReport","warn","JSON","stringify","clearTimeout","sendBatch","batchLabels","missingLabels","k","l","shift","push","then","catch","toString","indexOf","setTimeout","destroy","save","toObj","toDefinition","Atomic","parent","wildcard","newListener","maxListeners","baseURL","numRetries","_network","isRealTime","options","siteConfig","appbuilder","urlCoreServer","networkNumRetries","get","params","jobResponse","type","useThese","search","val","encodeURIComponent","join","_request","put","isNetworkConnected","salSend","packet","_retry","notify","developer","publishResponse","reject","headers","authToken","Authorization","tenantID","method","statusText","Analytics","log","_err","status","responseText","parse","response","queue","resend","listSocketEvents","socketDataSave","HashSocketJobs","packets","keyBlacklist","ev","io","socket","__length","objectId","obj","objectByID","name","jobID","socketDataLog","blKey","parts","PK","blacklistKey","time","blacklist","model","isCsvPacked","lengthPacked","csvUnpack","lengthUnpacked","__lengthPacked","toFixed","performance","mark","op","normalizeData","measure","socketLog","socketLogClear","isConnected","route","query","match","http","undefined","toLowerCase","request","jwres","statusCode","errStr","body","Stringify","setMaxListeners","queueLock","_queueCount","cachJobResponse","Lock","networkType","queueFlush","idConnectionCheck","window","addEventListener","delete","_connectionCheck","isNetworkSlow","_networkSlow","registerNetworkTestWorker","worker","slow","_networkTestWorker","onmessage","setContext","category","level","networkStatus","navigator","connection","Connection","onLine","NONE","refQueue","queueCount","acquire","Storage","jID","set","release","logError","hasResponded","resCount","resNumber","processRequest","cb","entry","job","res","rej","done","reset","getTokens","tenantStorage","Webix","storage","prefix","local","value","clear","remove","clearAll","_storage","config","encrypted","textClickToEnter","tenantConfig","String","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthLarge","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","innerWidth","icons","ABValidator","errors","addError","pass","fail","toValidationObject","invalidAttributes","attr","updateForm","form","vObj","Validation","isFormValidationError","updateGrid","rowID","grid","isGridValidationError","ABFactory","definitions","Dialog","ClassUI","Class","FilterComplex","ABViewManager","SortPopup","ABViewComponent","A","UISettings","validator","errorSailsCleanup","raw","hasFocused","attrs","wasForm","elements","msg","markInvalid","focus","row","Grid","wasGrid","addCellCss","refresh","clearSelection","Definitions","_plugins","_pendingNetworkRequests","fullDef","pending","pkt","newDef","definitionNew","serverDef","definitionCreate","_definitions","platformRules","toDate","dateText","ignoreTime","format","isValid","Date","toDateFormat","date","momentObj","localeCode","locale","subtractDate","number","unit","subtract","addDate","add","getUTCDayTimeRange","now","year","getFullYear","month","getMonth","getDate","startOfDay","endOfDay","startOfDayUTC","getTime","getTimezoneOffset","endOfDayUTC","formatDate","isoString","toISOString","concat","rules","allInits","all","_localSettings","json","definitionSync","def","definitionDestroy","definitionUpdate","domain","info","plugins","pluginLoad","p","cloneDeep","rest","emitData","Label","localSettings","isNil","isUUID","RegExp","test","merge","orderBy","uniq","kebabCase","sumBy","meanBy","maxBy","minBy","isString","scriptLoad","head","document","script","createElement","src","onreadystatechange","onload","onerror","appendChild","scriptLoadAll","urls","u","cssLoad","link","rel","href","cssLoadAll","csvToJson","csvData","header","skipEmptyLines","jsonToCsv","jsonData","ABMLClass","attributes","appType","versionData","versionNumber","changeLog","author","version","keepVersion","commitMessage","timestamp","icon","isSystemObject","roleAccess","isAccessManaged","accessManagers","isTranslationManaged","translationManagers","isTutorialManaged","tutorialManagers","hintIDs","objectIDs","queryIDs","datacollectionIDs","newPages","pageIDs","definitionByID","pageNew","appID","pageID","_pages","processIDs","pID","processByID","processID","objectListSettings","isOpen","searchText","sortDirection","isGroup","translations","fromValues","ViewManager","isAccessibleForRoles","foundRole","parseInt","useRole","role","pages","isWebApp","isMobile","datacollectionsExcluded","datacollections","datacollectionsIncluded","sort","sortFn","a","b","localeCompare","objectsExcluded","objects","objectsIncluded","hintsExcluded","hints","h","hintsIncluded","connectedObjects","connectedFields","connectFields","connectedObj","f","settings","linkObject","linkedObjects","currObjID","linkedObjectID","linkedFields","columnName","deep","_searchDeep","curr","items","resultsCurr","resultsP","processes","hasProcess","process","views","_views","subViews","lookDeep","view","pageViews","subPages","viewAll","allViews","queriesExcluded","queries","q","queriesIncluded","urlResolve","pointer","split","parseStep","steps","urlPointer","acrossApp","urlObject","urlPage","urlQuery","objectlistIsOpen","objectlistSearchText","objectlistSortDirection","objectlistIsGroup","newView","pageByID","viewNew","application","ABViewManagerMobile","ABApplication","pageDefault","DefaultValues","object","datasourceID","linkDatacollectionID","linkFieldID","followDatacollectionID","objectWorkspace","filterConditions","glue","sortFields","loadAll","populate","isQuery","fixSelect","syncType","__dataCollection","_dataCollectionNew","refreshFilterConditions","__bindComponentIds","__flexComponentIds","_dataStatus","dataStatusFlag","notInitial","__filterCond","__model","contextKey","preventPopulate","__datasource","queryByID","__treeCollection","_treeCollectionNew","__isGroup","removeFromApplications","next","apps","applications","allRemoves","app","datacollectionRemove","$dc","datasource","datacollection","sourceType","datacollectionLink","datacollectionByID","fieldLink","fieldByID","initializing","initialized","dataStatus","setCursor","itemId","setCursorTree","currTreeId","getCursor","currTreeItem","getItem","_itemId","dc","__previousCursorId","exists","tc","find","treeItem","$parent","treeCursor","currId","currItem","item","currItemAndChilds","serialize","refreshLinkCursor","getFirstRecord","getFirstId","getNextRecord","record","getNextId","force","linkCursor","dvLink","filterData","rowData","isParentFilterValid","setStaticCursor","currentUserUsername","userFields","fields","found","currRowId","rowId","count","isCursorFollow","dcFollow","datacollectionFollow","loadData","filterCondition","cond","___AD","onAfterCursorChange","attachEvent","currData","isRelated","relateData","needAdd","updatedVals","bad","ABObjectQuery","objList","where","newDataId","alias","objectAlias","rule","findAll","newQueryData","updatedV","skipDatasourceFilter","isValidData","__reloadWheres","bcids","$$","pos","getParentView","index","DC","addView","L","css","click","event","reloadData","removeView","parseTreeCollection","datasourceLink","d","updateItemData","updateRelateVal","relationName","rowRelateVal","valIsRelated","updateItem","updateRelationalDataFromLinkDC","incomingObj","iPK","newData","currCursor","needsRefresh","localField","colName","relName","linkType","rval","getRelationValue","newPacket","objectID","field","fieldID","needUpdate","isExists","updatedIds","updatedTreeIds","_queryUpdateData","updateCursor","ABObject","assign","dcItem","staleRefresh","deleteId","needDelete","deletedIds","deletedTreeIds","delId","updateRelateVals","relateVal","linkDC","eventAdd","emitter","eventName","listener","currentCursor","previousCursorId","isMyDataThere","shouldPopulate","valuesToAdd","valuesIn","valuesToRemove","prmsAllRefreshes","allAdds","followDC","followCursor","waitForDataCollectionToInitialize","eventRemove","getWhereClause","start","limit","wheres","__additionalWheres","linkRule","ruleLinkedData","unshift","whereCleanUp","sorts","s2","l2","skip","parentDc","dcFilters","dv","_pendingLoadDataResolve","platformFind","processIncomingData","queuedParse","incomingData","total_count","nextData","remain","splice","parsedData","async","__totalCount","__throttleIncoming","load","reloadTimer","reloadPromise","reloadPromise__resolve","reloadPromise__reject","reloadWheres","getData","linkDv","linkObj","linkVal","totalCount","bind","unbind","removeComponent","comId","dataCollectionLink","linkCursorId","linkViaType","filterRule","__filterDatasource","filterComplexNew","fieldsLoad","setValue","__filterDatacollection","isAlreadyThere","allMatch","__filterScope","scopeList","userScopes","s","allowAll","objectIds","scopeRules","sRules","scopeWhere","syncTypeFlag","server","client","oItem","tran","updatedTran","tranKey","dcLink","cursorLink","linkedField","relatedData","newItem","clone","clonedDatacollection","parseMe","cursorID","filteredClone","filters","evt","__events","eventClear","removeListener","waitReady","builder","ABApplicationMobile","ABDefinition","ABComponent","ABFieldManager","ABIndex","ABObjectExternal","ABObjectImport","ABObjectApi","ABObjectApiNetsuite","ABDataCollection","ABHint","ABProcess","ABProcessParticipant","ABProcessLane","ABProcessTaskManager","ABStep","ABViewDetailItem","ABViewFormItem","ABMobileViewFormItem","RowFilter","hash","_allApplications","_allObjects","_allHints","_allProcesses","_allQueries","_allSteps","_allDatacollections","nameFilter","toApplicationNameFormat","toFieldRelationFormat","toJunctionTableFK","objectName","fkName","substring","toJunctionTableNameFormat","appName","sourceTableName","targetTableName","toObjectNameFormat","definitionClean","allDefinitions","keyList","keyFn","objectKeysByDef","isRaw","definitionsParse","defs","applicationByID","ID","applicationNew","applicationMobileNew","datacollectionNew","fieldNew","newField","indexNew","objectNew","isExternal","isImported","isNetsuite","isAPI","objectFile","objectLanguage","objectProcessDefinition","objectProcessForm","objectProcessInstance","objectRole","objectScope","objectToken","objectUser","objectKey","objectSecret","hintID","hintNew","stepID","stepNew","stepDef","hint","processNew","processElementNew","taskDef","defaults","newTask","processElementNewForModelDefinition","element","newElement","defaultDef","definitionForElement","fromElement","queryNew","rowfilterNew","App","idBase","_App","viewNewDetatched","_mockApp","_notifyInfo","moreInfo","fieldName","datacollectionID","datacollectionName","ds","datacollectionDSID","datacollectionDSName","processName","_tenantID","user","_user","taskID","taskName","applicationID","applicationName","viewID","viewName","viewKey","Fields","FIELD","allFields","fieldByKey","active","description","transition","showIntroStep","stepIDs","_steps","sID","ele","stepAdd","step","stepByID","stepRemove","stepIndex","unique","fieldIDs","_unknownFieldIDs","fId","attributeFieldIDs","indexName","dbTableName","uniqueName","ABEmitter","fieldList","mlFields","translate","defaultTranslations","language_code","languageDefault","unTranslate","currLanguage","first","t","foundOne","trans","_where","_sort","_skip","_limit","staleRefreshInProcess","staleRefreshMap","staleRefreshPending","staleRefreshTimerID","responseContext","contextValues","prepareMultilingualData","multilingualFields","shouldTranslate","urlParamsCreate","urlRest","urlParamsDelete","urlRestItem","urlParamsFind","urlParamsUpdate","urlRestCount","numberOfRows","currID","Err","staleRefreshProcess","currentEntries","responseHash","allKeys","findConnected","results","myObj","returnData","upsert","csv_packed","csvPack","packedData","relations","myObject","content","returnType","I","connections","connField","connHash","connPK","indx","_csvID","ids","hasRelationData","connData","c","connDataCsv","properties","parseResult","keyFields","parseFields","populatedData","entries","connEntry","dateFields","calculatedFields","objectLink","olPK","relatedMlFields","subData","relationValue","calField","ABModelApi","readonly","apiType","isFetched","getPagingValues","pagingSettings","paging","dataFromKey","itemResult","dataKey","ABModelApiNetsuite","credentials","columnRef","ABModel","ABObjectCore","connName","labelFormat","labelSettings","isNoLabelDisplay","tableName","primaryColumnName","transColumnName","urlPath","createdInAppID","frozenColumnID","hiddenFields","importedFieldIDs","_fields","importIndexes","indexIDs","_unknownIndex","indexes","_indexes","objectLinks","isConnection","fieldImport","fieldRemove","origLen","fid","fieldReorder","sourceId","targetId","itemMoved","oPos","j","fieldSave","fieldAdd","imageFields","isMultilingual","indexByID","indexRemove","idx","indexSave","urlRestBatch","urlRestLog","urlRestRefresh","workspaceSortFields","workspaceViews","currView","getCurrentView","workspaceFilterConditions","workspaceFrozenColumnID","workspaceHiddenFields","isReadOnly","defaultValues","defaultValue","urlField","remoteCreate","cloneOne","prop","minRelationData","colIds","colId","colIdNoBracket","defaultFld","fieldUseAsLabel","displayData","labelData","defaultField","trim","noLabelText","rawString","valField","newValue","cleanRule","ABModelQuery","__missingObject","__missingFields","__cantFilter","__duplicateFields","__linkProblems","alias2Obj","importJoins","joins","importFields","_objectWorkspaceViews","objectWorkspaceViews","grouping","hidePrefix","exportJoins","exportFields","fieldSettings","newFields","fieldInfo","objectByAlias","_objects","objID","canFilterField","isNew","clonedField","currFields","_joins","objectBase","links","_links","uniqueObjectIDs","newLinks","storeObject","storeLinks","processJoin","baseObject","linkField","rootObject","canFilterObject","linkedObject","isDisabled","disabled","_concat","ABProcessTaskSubProcess","onProcessReady","xmlDefinition","currElements","_elements","elementIDs","eID","_connections","diagramID","modelDefinition","modelNew","modelUpdate","xml","allConnections","connectionForDiagramID","dID","connectionsIncoming","to","connectionsOutgoing","from","connectionRemove","connectionSimplyElement","bo","businessObject","sourceRef","targetRef","connectionUpsert","simpleConn","elementAdd","elementByID","elementForDiagramID","elementRemove","isTriggeredBy","taskForTriggerKey","connectionNextTask","currElement","connectionPreviousTask","processData","tasksToAsk","allPreviousTasks","queryPreviousTasks","processDataFields","parentFields","allPreviousConnectionsForConnection","conn","hashConn","allPreviousConnectionsForElement","prevConnections","task","prevTasks","processDataObjects","triggerKey","list","param","responses","processedIDs","apply","el","AllViews","Views","default","common","V","viewClass","addViewClass","View","getFieldVal","pureRelationName","isNaN","getConnectFieldValue","connectedVal","extractVal","itemData","indexField","indexField2","fieldVal","_settings","condition","_QueryFields","_Fields","_logic","callbacks","onChange","removeHtmlTags","div","innerHTML","textContent","innerText","condResult","ruleFieldType","textValid","dateValid","numberValid","listValid","booleanValid","userValid","connectFieldValid","thisObjectValid","compareValue","compareArray","queryFieldValid","setHours","Number","queryId","fieldId","qIdBase","inQueryFieldFilter","inQueryValid","inQueryFilter","dataCollectionValid","compareValueLowercase","ruleSafe","listThisObjects","newRowData","_Object","processFieldsLoad","processFields","_ProcessFields","uiInit","fieldIsFilterable","thisObjOption","fieldsToQB","showObjectName","conditions","processFieldKeys","hasQueryField","isProcessParticipant","fieldsAddFiltersBoolean","fieldsAddFiltersConnectObject","isSource","fieldsAddFiltersString","opt","isCustomFK","fieldsAddFiltersQuery","fieldsAddFiltersDate","fieldsAddFiltersNumber","fieldsAddFiltersList","fieldsAddFiltersUser","fieldsAddFiltersThisObject","isRecordRule","fieldsAddFiltersRecordRule","processField","includes","processFieldId","pop","fieldsAddFiltersContext","fieldsAddFiltersCustom","dateConditions","less","component","beforeCondition","greater","afterCondition","less_or_equal","onOrBeforeCondition","greater_or_equal","onOrAfterCondition","is_current_date","isCurrentDateCondition","less_current","beforeCurrentCondition","greater_current","afterCurrentCondition","less_or_equal_current","onOrBeforeCurrentCondition","greater_or_equal_current","onOrAfterCurrentCondition","last_days","onLastDaysCondition","next_days","onNextDaysCondition","is_empty","isEmpty","is_not_empty","isNotEmpty","condKey","batch","handler","stringConditions","contains","containsCondition","not_contains","notContainsCondition","equals","isCondition","not_equal","isNotCondition","numberConditions","equalCondition","notEqualCondition","lessThanCondition","moreThanCondition","lessThanOrEqualCondition","moreThanOrEqualCondition","listConditions","equalListCondition","notEqualListCondition","booleanConditions","checked","checkedCondition","unchecked","notCheckedCondition","userConditions","is_current_user","isCurrentUserCondition","is_not_current_user","isNotCurrentUserCondition","contain_current_user","containsCurrentUserCondition","not_contain_current_user","notContainsCurrentUserCondition","connectConditions","same_as_user","sameAsUser","not_same_as_user","notSameAsUser","in_data_collection","inDataCollection","not_in_data_collection","notInDataCollection","queryConditions","in_query_field","inQueryField","not_in_query_field","notInQueryField","in_query","inQuery","not_in_query","notInQuery","thisObjectConditions","recordRuleConditions","same_as_field","sameAsField","not_same_as_field","notSameAsField","contextConditions","context_equals","equalsProcessValue","context_not_equal","notEqualsProcessValueCondition","context_in","inProcessValueCondition","context_not_in","notInProcessValueCondition","_customOptions","queriesLoad","_Queries","getValue","isComplete","noValueRules","isCompleteRules","returnSingular","columnId","config_settings","queryValid","ABField","ABFieldAutoIndexDefaults","isFilterable","isSortable","menuName","supportRequire","supportUnique","useAsLabel","compatibleOrmTypes","compatibleMysqlTypes","delimiter","displayLength","previewText","getDelimiterSign","delimiterItem","delimiterList","sign","setValueToIndex","displayNumber","ABFieldBooleanDefaults","AGE","dateString","dataDate","diffYears","Math","round","floor","YEAR","MONTH","DAY","DATE","HOUR","MINUTE","MINUTE_TO_HOUR","mins","hours","rhours","minutes","rminutes","parseFloat","ABFieldCalculateDefaults","formula","decimalSign","decimalPlaces","ABFieldCalculateCore","convertToJs","place","recalculate","numberVal","calVal","dateVal","booleanVal","eval","ABFieldCombinedDefaults","combinedFields","getCombinedFields","fld","connectVal","connectLabel","ABFieldConnectDefaults","linkColumn","fieldDefaults","names","configError","pullRelationValues","selectedData","dataValue","propName","forUpdate","reservedNames","fieldKey","fieldOrmTypes","fieldMysqlTypes","fieldIcon","fieldMenuName","fieldDescription","fieldIsSortable","fieldSupportRequire","fieldSupportQuery","supportQuery","defaultCheck","defaultVal","returnVal","showIcon","required","width","myDef","ABFieldDateDefaults","dateFormat","defaultDate","defaultDateValue","validateCondition","validateRangeUnit","validateRangeBefore","validateRangeAfter","validateStartDate","validateEndDate","dateResult","currentDate","prototype","call","isFinite","startDate","endDate","startDateDisplay","getDateDisplay","endDateDisplay","minDate","maxDate","exportValue","dateObj","getFormat","dateFormatString","dateData","dateToString","RegEx","ABFieldDateCore","timeFormat","defaultTime","defaultTimeValue","baseDefault","currDate","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","getTimeFormat","datetimeFormat","dateToStr","ABFieldEmailDefaults","defaultCheckbox","Reg","ABFieldFileDefaults","removeExistingData","fileSize","fileType","limitFileSize","limitFileType","filename","requestParam","allParameters","myParameter","ABFieldFormulaDefaults","reCalculate","isGrouped","reformat","numData","rowDataFormat","fieldBase","filterHelper","numberList","decimalSize","getDecimalSize","multiplier","pow","sum","max","min","_rowFilter","ABFieldImageDefaults","useWidth","imageWidth","useHeight","imageHeight","useDefaultImage","defaultImageUrl","ABFieldJsonDefaults","ABFieldListDefaults","isMultiple","hasColors","multipleDefault","pendingDeletions","defaultVals","hex","optTran","ABFieldLongTextDefaults","MAX_CHAR_LENGTH","supportMultilingual","ABFieldNumberDefaults","typeFormat","typeDecimals","typeDecimalPlaces","typeRounding","typeThousands","validation","validateMinimum","validateMaximum","formatList","iL","position","places","n","errMessage","formatSign","thousandsSign","postfix","digit","formatNumber","groupDelimiter","groupSize","decimalDelimiter","negativeSign","dataStr","abs","integerStr","decimalStr","integerValue","substr","decimalVal","ABFieldStringDefaults","ABFieldTextFormulaDefaults","textFormula","setValueToFormula","formulaString","fieldRegExp","matches_field_array","autoIndexVal","setBuildinValueToFormula","matches_buildin_array","buildinList","getBuildInFunction","formula_array","isBracketInBracket","functionName","parameters_array","isMatch","resultParameters","parameter_size","getLeft","getRight","getMid","getTrim","getTrimLeft","getTrimRight","getLength","getRegExpReplace","trimLeft","getExtractRegex","getReplace","getLower","getUpper","getCapitalize","getRandom","getNumberToWords","getDateDayOfWeekName","getDateMonthOfYearName","getFormatDate","string","endPosition","endposition","reverseStr","reverseString","reverse","startPosition","trimRight","regexp","replaceString","extractResult","searchValue","replaceValue","toUpperCase","charAt","random","units","tens","scales","end","chunks","chunksLen","chunk","ints","word","words","resultFormula","ABFieldSelectivity","ABFieldTreeDefaults","ABFieldConnect","ABFieldUserDefaults","USERNAME_FIELD_ID","editable","isCurrentUser","isShowProfileImage","isShowUsername","isUser","ABMobileView","ABMobilePageDefaults","ABPropertyComponentDefaults","defaultPage","hideTitle","hideTabs","myAppID","menuType","DV","missingPageID","allPageDeletes","allPages","pageRemove","pageInsert","setPageDefault","refreshInstance","page","updateIcon","lookUpIds","mapNewIdFn","copy","ABMobileViewDefaults","labelKey","tabicon","ABViewPropertyComponentDefaults","warningsSilent","__missingViews","newInstance","viewIcon","tabIcon","viewIDs","isRoot","height","x","y","dx","dy","allParents","parents","curView","parentFormComponent","parentDetailComponent","detail","pageParent","filterFn","parentPage","pageRoot","rootPage","dataviewID","_currentObject","errNoDCID","errNoDC","viewByID","viewRemove","viewInsert","viewReorder","viewId","toPosition","findIndex","allViewDeletes","wantsAdd","copyUpdateProperyList","ignoreSubPages","copiedSubPage","ignoreSubViews","copiedView","newName","allSaves","p2","vi","ABViewCustomPropertyComponentDefaults","ABViewDefaults","componentList","ABViewFormButtonPropertyComponentDefaults","includeSave","saveLabel","includeCancel","cancelLabel","includeReset","resetLabel","afterCancel","alignment","isDefault","ABViewFormButtonDefaults","ABMobileViewFormCheckboxPropertyComponentDefaults","ABMobileViewFormCheckboxDefaults","ABMobileViewFormConnectPropertyComponentDefaults","formView","popupWidth","popupHeight","ABMobileViewFormConnectDefaults","ABRecordRule","ABSubmitRule","ABViewFormDefaults","ABViewFormPropertyComponentDefaults","showLabel","labelPosition","labelWidth","clearOnLoad","clearOnSave","displayRules","editForm","recordRules","submitRules","objectLoad","viewsToAllow","fieldComponents","flattenComponents","components","comp","addFieldToForm","yPosition","fieldComponent","formComponentMobile","RecordRule","_recordRule","formLoad","fromSettings","recordRulesReady","rulesReady","doRecordRulesPre","processPre","doRecordRules","doSubmitRules","SubmitRules","ABViewFormCustomPropertyComponentDefaults","ABViewFormCustomDefaults","ABMobileViewFormDatepickerPropertyComponentDefaults","timepicker","ABMobileViewFormDatepickerDefaults","ABMobileViewFormDatetimePropertyComponentDefaults","ABMobileViewFormDatetimeDefaults","ABMobileViewFormEmailPropertyComponentDefaults","ABMobileViewFormEmailDefaults","ABViewFormFilePropertyComponentDefaults","ABViewFormFileDefaults","ABViewFormFormulaPropertyComponentDefaults","ABViewFormFormulaDefaults","ABMobileViewFormFile","ABViewFormImagePropertyComponentDefaults","ABViewImageFileDefaults","ABViewFormFieldPropertyComponentDefaults","disable","ABMobileViewFormNumberPropertyComponentDefaults","isStepper","ABMobileViewFormNumberDefaults","ABMobileViewFormCustom","ABMobileViewFormReadonlyPropertyComponentDefaults","ABMobileViewFormReadonlyDefaults","ABMobileViewFormSelectSingle","ABMobileViewFormSelectMultiplePropertyComponentDefaults","ABMobileViewFormSelectMultipleDefaults","ABMobileViewFormSelectSinglePropertyComponentDefaults","ABMobileViewFormSelectSingleDefaults","ABViewFormTextboxPropertyComponentDefaults","placeholder","ABViewFormTextboxDefaults","ABViewLabelPropertyComponentDefaults","formatNormal","formatTitle","formatDescription","ABViewListPropertyComponentDefaults","linkPageAdd","ABViewTimelinePropertyComponentDefaults","ABProcessLaneDefaults","ABProcessParticipantDefaults","validChecker","attribute","laneIDs","stashed","useAccount","account","useField","userField","Tasks","DEFINITIONTYPES","AllProcessElements","ELEMENT","DiagramReplace","target","eventDefinitionType","allTasks","tasks","DiagramReplaceDefinitionsForType","StartEvents","Gateways","EndEvents","eventDefinitions","$type","state","laneDiagramID","errorConfig","instance","initState","instanceValues","taskState","isEndTask","allArgs","myLane","myState","nextTasks","myDiagramObj","hashDiagramObjects","onError","exitFlows","tasksFromFlow","flow","flowObj","targetIDs","tid","targetTask","hashProcessDataValues","listDataFields","currentProcessValues","_prevState","stateCompleted","stateUpdate","wantToDoSomething","startElements","elem","previousElements","objectOfStartElement","startElem","objectOfPrevElement","prevElem","qlObj","ABProcessElement","ABProcessTaskEndDefaults","actionName","className","triggered","ABProcessGatewayExclusiveDefaults","ABProcessTaskEmailDefaults","myDefaults","subject","AccountingBatchProcessingDefaults","AccountingFPCloseDefaults","AccountingFPYearCloseDefaults","AccountingJEArchiveDefaults","CalculateDefaults","_fakeNum","_fakeObj","ABProcessTaskServiceDefaults","ABProcessTaskGetResetPasswordUrlDefaults","InsertRecordDefaults","isRepeat","startElement","currProcess","previousElement","fieldRepeat","repeatColumn","ABQLManager","ABProcessTaskServiceQueryDefaults","_datasources","fromAttributes","registerDatasource","processDataField","SubProcessDefaults","NOSPAM","isExpanded","isEnable","_unknownElementIDs","processTask","connectionAttrs","parameterId","dataFieldsAll","dataFieldOpt","dataFieldsAllInserted","previousFields","startsWith","stateData","returnField","ABFieldList","ABProcessTaskApprovalDefaults","fixBoolean","formBuilder","preProcessFormIOComponents","abFieldID","vals","path","pluck","action","myID","listField","ABProcessTaskUserDefaults","ui","ABProcessTaskUserExternalDefaults","who","toUsers","ABProcessTaskUserFormDefaults","ABProcessTriggerDefaults","ABProcessTrigger","ABProcessTaskTriggerLifecycleDefaults","lifecycleKey","repeatEvery","repeatTime","repeatDaily","repeatWeekly","repeatMonthly","isEnabled","timeVals","setUTCHours","setUTCMinutes","getUTCHours","getCronExpression","day","dayWeek","minute","hour","parameterDefinitions","prevOP","objectOut","initObject","objectLookup","nextOP","NextQLOps","OP","qlOP","quotedLabel","availableProcessDataFieldsHash","availableProcessDataFields","hashFieldIDs","paramChanged","pDef","ABQL","ParameterDefinitions","ABQLFindCore","ABQLManagerCore","matchingOPs","QLOps","Op","ABQLObjectCore","objNameDef","warningMessage","QLUpdate","QLSave","QLPluck","ABQLSetPluck","ABQLRowUpdate","ABQLRowSave","ABQLRowPluckCore","nextQLOps","NextQLOp","ABQLSetSave","ABQLRowSaveCore","ABQLRowUpdateCore","ABQLRow","ABQLSetFirstCore","ABQLSetPluckCore","objectOutID","ABQLSetSaveCore","taskParam","registered","task_param","ABViewWidget","ABViewCSVExporterDefaults","ABViewCSVExporterPropertyComponentDefaults","buttonLabel","hasHeader","hiddenFieldIds","ABViewCSVImporterDefaults","ABViewCSVImporterPropertyComponentDefaults","availableFieldIds","rowDatas","ABViewCarouselPropertyComponentDefaults","hideItem","hideButton","navigationType","filterByCursor","detailsPage","detailsTab","editPage","editTab","parseIntOrDefault","_this","parseOrDefault","imageField","ABViewChartContainer","ABViewChartAreaPropertyComponentDefaults","areaType","isLegend","chartHeight","labelFontSize","stepValue","maxValue","ABViewChartBarPropertyComponentDefaults","barType","barPreset","ABViewContainer","ABViewChartPropertyComponentDefaults","columnValue","columnLabel","columnValue2","isPercentage","multipleSeries","ABViewChartDefaults","labelField","valueField","valueField2","ABViewChartLinePropertyComponentDefaults","lineType","linePreset","ABViewChartPiePropertyComponentDefaults","pieType","innerFontSize","ABViewCommentPropertyComponentDefaults","columnUser","columnComment","columnDate","getCurrentUserId","userObject","getUsers","currentUser","image","getUserField","getCommentField","getDateField","getUserData","UserImageField","imageURL","urlImage","ABViewPropertyDefaults","ifPanel","removable","elsePanel","ABViewConnectDataFilterPropertyComponentDefaults","ABView","columns","gravity","movable","viewsSortByPosition","accessLevels","accessibleRoles","getUserAccess","accessLevel","isAccessManager","currentRole","urlView","updateAccessLevels","roleId","viewDestroy","ABViewDataFilterPropertyComponentDefaults","viewType","showFilter","showSort","ABViewDataSelectPropertyComponentDefaults","ABViewDetail","ABViewDataviewPropertyComponentDefaults","xCount","ABViewDataviewDefaults","dataview","ABViewDetailCheckboxPropertyComponentDefaults","ABViewDetailCheckboxDefaults","ABViewDetailPropertyComponentDefaults","ABViewDetailDefaults","addFieldToDetail","detailComponent","ABViewDetailCustomPropertyComponentDefaults","ABViewDetailCustomDefaults","ABViewDetailImagePropertyComponentDefaults","ABViewDetailImageDefaults","detailView","getCurrentData","detailCom","ABViewDetailTextPropertyComponentDefaults","ABViewDetailTextDefaults","ABViewDetailTreeDefaults","ABViewDocxBuilderPropertyComponentDefaults","buttonlabel","filelabel","toolbarBackground","buttonPosition","uploadUrl","downloadUrl","dvList","includeDelete","deleteLabel","ABViewFormCheckboxPropertyComponentDefaults","ABViewFormCheckboxDefaults","ABViewFormConnectPropertyComponentDefaults","ABViewFormConnectDefaults","formComponent","ABViewFormDatepickerPropertyComponentDefaults","ABViewFormDatepickerDefaults","ABViewFormJsonPropertyComponentDefaults","ABViewFormJsonDefaults","ABViewFormNumberPropertyComponentDefaults","ABViewFormNumberDefaults","ABViewFormCustom","ABViewFormReadonlyPropertyComponentDefaults","ABViewFormReadonlyDefaults","ABViewFormSelectMultiplePropertyComponentDefaults","ABSelectMultipleDefaults","ABViewFormSelectSinglePropertyComponentDefaults","ABSelectSingleDefaults","ABViewFormTreePropertyComponentDefaults","ABTreeDefaults","ABViewGanttPropertyComponentDefaults","titleFieldID","startDateFieldID","endDateFieldID","durationFieldID","progressFieldID","notesFieldID","ABViewGridPropertyComponentDefaults","padding","showToolbar","isEditable","massUpdate","allowDelete","isExportable","trackView","summaryColumns","countColumns","gridFilter","filterOption","userFilterPosition","isGlobalToolbar","hideHeader","labelAsField","hideButtons","groupBy","columnConfig","saveLocal","settingsDefault","base","settingsDefaultJSON","owFields","removeField","shouldSave","ABViewImagePropertyComponentDefaults","ABViewKanbanPropertyComponentDefaults","editFields","verticalGroupingField","horizontalGroupingField","ownerField","template","textTemplate","TextTemplate","PropertyComponentDefaults","numColumns","addColumn","isEdited","ABViewMenuPropertyComponentDefaults","orientation","buttonStyle","menuAlignment","menuInToolbar","menuPadding","menuTheme","menuPosition","menuTextLeft","menuTextRight","menuTextCenter","order","ABMenuDefaults","isChecked","pageId","ClearPagesInView","AddPagesToView","displayPage","existsPage","tabId","existsTab","getAliasname","menuItem","getSubMenu","getMenuItem","submenu","pageInfo","lang","translation","aliasname","getParentPageId","tabView","currentView","ABViewPDFImporterPropertyComponentDefaults","pageWidth","fixedPageWidth","pageBackground","getPageActionKey","ABViewPivotPropertyComponentDefaults","removeMissed","totalColumn","separateLabel","structure","ABViewReportManagerPropertyComponentDefaults","dataviewFields","editMode","hideCommonTab","hideDataTab","hideViewTab","parsedSettings","key1","key2","ABViewSchedulerPropertyComponentDefaults","allDay","repeat","calendar","color","sectionID","unitID","notes","originID","calendarDataviewID","calendarDataviewFields","timeline","week","agenda","timelineSectionList","unitList","export","excel","csv","pdf","_object","scheduler","ABViewTabPropertyComponentDefaults","minWidth","stackTabs","darkTheme","sidebarWidth","sidebarPos","iconOnTop","ABViewTabDefaults","addTab","tabName","ABViewTextPropertyComponentDefaults","displayText","componentID","clearTemplateValue","fData","columnSpan","rowSpan","ABApplicationCore","ABViewPage","_handler_page_updated","definition","pg","applicationForID","errDepreciated","definitionForID","areaKey","newObj","_listInsert","entity","_listRemove","begLen","datacollectionInsert","objectInsert","objectRemove","processInsert","processRemove","queryInsert","queryRemove","exportIDs","parseView","pid","pdef","vid","vdef","warningsEval","checks","warningsMessage","allRoles","warningsAll","warnings","_warnings","ABApplicationMobileCore","ABViewPageMobile","newPage","oldPage","CustomComponentManager","uid","actions","custom","create","edit","formName","import","rename","yes","no","none","close","defaultPlaceholder","invalidMessage","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","renameErrorMessage","renameSuccessMessage","dataFieldHeaderLabel","dataFieldHeaderLabelPlaceholder","dataFieldLabel","dataFieldLabelPlaceholder","dataFieldColumnName","dataFieldColumnNamePlaceholder","dataFieldShowIcon","componentDropZone","initComponents","_actions","ABDataCollectionCore","blacklistLoadData","datacollectionId","bindParentDc","define","cursorUpdated","__prevLinkDcCursor","hideProgressOfComponents","attachFlexlayout","showProgress","sync","onDataRequestEvent","loadNext","unsync","detachEvent","onDcLoadData","off","hideProgress","DataCollection","_extendCollection","treeStore","TreeCollection","dataStore","extend","SelectionModel","finally","onAfterLoadEvent","addCss","removeCss","render","onAfterLoad","addRowToTree","parentAlias","dataId","parentItemIds","parentId","_alias","_dataId","treeNode","parentItemId","boundComp","datacollectionById","ABDefinitionCore","ABHintCore","allSteps","allDestroy","hintIndex","createHintUI","display","cookie","hide","dontShow","newStep","nextEl","hintId","eventEl","theNextEl","querySelector","checkVisibility","onNext","boxes","querySelectorAll","onPrevious","delay","ABIndexCore","migrateCreate","migrateDrop","ABMLClassCore","ABModelCore","errorPopup","no_socket_trigger","handler_create","handler_common","handler_delete","handler_findAll","handler_logs","handler_update","batchCreate","once","newVal","nestedRules","loadInto","DT","logs","update","batchUpdate","rowIds","boolFields","actualColumn","lcColumn","bField","_handler_object_migrate","fromObj","hasOwnProperty","disableRelatedQueries","fieldDrops","skipMigrate","isAdd","columnResize","newWidth","columnHeaders","isObjectWorkspace","hiddenFieldNames","columnHeader","validationRules","adjust","footer","customDisplays","DataTable","eachColumn","node","getItemNode","column","customDisplay","allWarnings","w","isUuid","getDbInfo","formCleanValues","formCleanData","atomicjs","ABObjectApiCore","fetchData","insertDataMax","verb","withCredentials","parsedResponse","pendingModelCreate","ABObjectApiNetsuiteCore","Field","Type","Null","Key","Default","Extra","definitionId","ABObjectQueryCore","conditionScan","fieldEntry","oldWidth","originTemplate","_conditionCheck","isConditionComplete","ABProcessCore","_unknownShapes","allElements","appsWithProcess","_new","_old","needSave","elementNewForModelDefinition","unknownShape","shape","unknownShapeRemove","_DOMParser","DOMParser","xmlStr","parseFromString","ActiveXObject","xmlDoc","loadXML","getElementsByTagName","ABStepCore","ABViewManagerCore","ABViewManagerMobileCore","getSeparateItems","validateFile","fileInfo","file","extensionType","getDataRows","separatedBy","reader","FileReader","dataCols","dCol","readAsText","getGuessDataType","dataRows","colIndex","line","str","FilterComplexCore","_toInternal","_toExternal","_uiQueryOptionId","_uiFieldOptionId","_options","_initComplete","observing","and","or","thisObject","inQueryFieldQueryPlaceholder","inQueryFieldFieldPlaceholder","contextDefaultOption","popup","querybuilder","recordRuleFieldOptions","rows","borderless","hidden","isSaveHidden","myPopup","__blockOnChange","getState","$observe","_cond","helper","$query","getFilterFunction","qbSettings","il8n","dateFormatStr","toShortHand","uiQueryCustomValue","enable","$el","$filterView","$app","require","_fnBaseGetValue","GetValue","queryOptId","fieldOptId","selectedQueryId","selectedFieldId","CreateFilter","inputs","uiValue","localId","mode","parser","i18n","margin","getService","$queryOpt","$fieldOpt","fieldColumnName","uiQueryValue","uiDataCollectionValue","uiCustomValue","uiContextValue","uiNoneValue","uiUserValue","uiListValue","LinkType","uiTextValue","uiQueryFieldValue","uiRecordRuleValue","uiBooleanValue","onAfterRender","queryView","$view","style","zIndex","isQueryField","linkObjectId","qOpts","pullFieldOption","Query","fieldOptions","qVal","$fieldOption","getChildViews","refreshFieldOption","processFieldKey","pField","popUp","show","addCustomOption","RowFilterCore","filterForm","addNewFilter","inputValue","queryCombo","queryFieldCombo","queryFieldComboQuery","queryFieldComboField","fieldMatch","dataCollection","listOptions","datePicker","batchName","queryFieldOptions","recordRuleOptions","getFieldList","getFilterUI","isolate","cols","oldVal","selectCombineCondition","suggest","onBeforeShow","resize","$viewCond","selectField","cells","oldValue","onChangeRule","onChangeQueryFieldCombo","validate","isNumber","onTimedKeyPress","autowidth","indexView","getFormView","removeNewFilter","getAddButtonUI","$viewForm","toggleAddNewButton","ignoreNotify","showBatch","Queries","ruleViewId","getActiveId","$viewComparer","getList","defaultOpt","dcOptions","_Application","blockOnChange","unblockOnChange","$fieldElem","selectedOpt","getPopup","valueViewId","$viewConditionValue","dateField","logic","col","blockEvent","unblockEvent","_completeConditions","ABViewForm","RowUpdater","addNew","_mockFormWidget","uiItem","self","$viewItem","maxWidth","_extendedOptions","toggleCustomProcessOption","removeItem","addItem","$form","ProgressBar","toggleForm","excludeSelected","$viewContainer","$customValueElem","_pullInputElement","$processValueElem","isVisible","isProcessValue","formFieldComponent","childViews","inputView","busy","getOptions","labelRight","layout","ready","$field","setExtendedOptions","showProcessOption","$customOption","$processOption","$elem","childView","ABFieldCore","editorValues","addValidation","Filter","filterComplex","fnMigrate","migrateUpdate","customEdit","formKey","FC","getSettings","ABFieldAutoIndexCore","editor","$group","detailComponentSetting","ABFieldBooleanCore","checkbox","ABFieldCombineCore","ABFieldConnectCore","multiselect","editFormat","editParse","openOptions","button","$suggest","$list","getAndPopulateOptions","whereClause","term","theEditor","_getOptionsThrottle","_timeToPullData","_getOptionsResolve","haveResolved","respond","linkedObj","linkedCol","linkedModel","showAllOptions","getStorageID","storedOptions","selected","linkViaOneValues","whereRels","sortRels","valHash","clearStorage","storageID","itemObj","getItemFromVal","returnVals","combineFilters","filterByConnectValues","parseFilterByConnectValues","depth","valuesByDepth","ef","$parentField","filterValue","parentValue","filterColumn","filterField","dataFieldId","valItem","formVals","handlerOptionData","$destructed","populateOptions","addCy","_sortByRecent","populateOptionsDataCy","currVal","selectedVals","cVal","some","selectedItem","each","option","setAttribute","pullRecordRelationValues","_recentStorageId","saveSelect","selectedItems","recentSelected","aId","bId","formComponentSetting","webixLocale","longDateFormatStr","ABFieldDateTimeCore","timeToStr","ABFieldEmailCore","ABFieldFileCore","fileTemplate","typesList","maximumSize","parentContainer","webixContainer","container","domNode","urlUpload","uploader","apiOnly","upload","inputName","multiple","onBeforeFileAdd","classList","acceptableTypes","acceptableSizes","size","onFileUpload","onFileUploadError","addDropZone","dataset","deleteFile","uploaderId","fileDialog","rowid","iconDisplay","fileDisplay","fileURL","fileLink","getAttribute","fileicon","fileDeleteIcon","removeAttribute","isWebix","urlFile","ABFieldFormulaCore","ABFieldImageCore","idCustomContainer","formId","containerHeight","imageSrcHeight","heightVal","imageTemplate","imgHeight","imgWidth","percent","uploadInProgress","showImage","readAsDataURL","dataTable","deleteImage","removeDefaultImage","imageDisplay","isRemoveDefaultImage","html","backgroundImage","imageIcon","imageDeleteIcon","toBase64","img","Image","crossOrigin","canvas","getContext","drawImage","imageData","toDataURL","rotateLeft","imgFile","rotateRight","ABFieldJsonCore","ABFieldListCore","numDone","numToDo","remainingFields","_getSelectedOptions","hasCustomColor","optionHex","selectedObj","clearButton","stopPropagation","getSelectedOptions","ABFieldLongTextCore","ind","ABFieldNumberCore","INIT_EDITOR","editors","defaultSettings","allowClear","removeOnly","readOnly","showDropdown","ABFieldSelectivityDefaults","selectivityRender","cypress","dataCy","prepareData","selectivity","setOptions","selectivityInput","isUsers","templates","multipleSelectedItem","highlighted","additionalText","isLabelHidden","Selectivity","Inputs","Multiple","selectivitySetBadge","singleSelectedItem","Single","trigerEditPageEvent","editMenus","eMenu","__hasClickEvent","preventDefault","parentElm","parentElement","thisField","caretElems","getElementsByClassName","caretElm","parentNode","removeChild","selectivitySettings","selectivityGet","selectivitySet","setData","selectivityDestroy","clientHeight","badge","anchor","textnode","createTextNode","ABFieldStringCore","ABFieldTextFormulaCore","ABFieldTreeCore","formClass","placeHolder","isForm","branches","selectOptions","rootid","getParentId","par","nodeHTML","myHex","setBadge","idPopup","idTree","parentComponent","firstRender","populateTree","getValues","$Tree","uncheckAll","openAll","checkItem","onShow","onItemCheck","dom","tree","uncheckItem","eachSubItem","getChecked","scrollHeight","setValues","ABFieldUserCore","SiteUser","Defaults","linkCol","newLinkDef","setDisplayOptions","ABMobilePageCore","__Handler_ABDEF_UPDATED","__Handler_DEF_UPDATED","removeAllListeners","ABMobileViewCore","viewsToIgnore","ABMobileViewCustomCore","ABMobileViewFormCore","ABMobileViewFormButton","refreshDefaultButton","defaultButton","yList","posY","ABMobileViewFormButtonCore","ABMobileViewFormCheckboxCore","ABMobileViewFormConnectCore","__filterComponent","ABMobileViewFormCustomCore","ABMobileViewFormDateCore","ABMobileViewFormDatetimeCore","ABMobileViewFormEmailCore","ABMobileViewFormFileCore","ABMobileViewFormFormulaCore","ABMobileViewFormImageCore","ABMobileViewFormItemCore","ABMobileViewFormNumberCore","ABMobileViewFormReadonlyCore","ABMobileViewFormSelectMultipleCore","ABMobileViewFormSelectSingleCore","ABMobileViewFormTextboxCore","ABMobileViewLabelCore","ABMobileViewListCore","ABMobileViewTimelineCore","ABProcessLaneCore","transferParticipantWhereToMe","myParticipant","swap","children","child","lanes","objChild","setLane","defElement","ABProcessParticipantCore","diagramProperties","ABProcessElementCore","findLane","Lane","currObj","propertiesShow","propertiesStash","property","switchTo","propertiesID","ABProcessEndCore","ABProcessGatewayExclusiveCore","myOutgoingConnections","numCondWithOne","ABProcessTaskEmailCore","verifySetting","verifyNextLane","verifyRoleAccount","nextLanesResolved","valKey","ABProcessTaskServiceCore","AccountingBatchProcessingCore","propertyIDs","processBatchValue","objectBatch","fieldBatchEntries","fieldBatchFinancialPeriod","objectJE","fieldJEAccount","fieldJERC","fieldJEStatus","fieldJEStatusComplete","objectBR","fieldBRFinancialPeriod","fieldBRAccount","fieldBRRC","fieldBREntries","processValues","objectList","blankField","defaultFields","updateFields","fieldPickers","fieldValues","fp","picker","batchFields","fieldPickersBatch","jeFields","fieldPickersJE","compileStatusValues","statusField","onStatusComplete","wbxComplete","jeEntryID","jeEntry","jeFieldStatusValues","brFields","fieldPickersBR","AccountingFPCloseCore","processFPValue","objectFP","objectGL","objectAcc","fieldFPStart","fieldFPOpen","fieldFPStatus","fieldFPActive","fieldGLStarting","fieldGLRunning","fieldGLAccount","fieldGLRc","fieldGLDebit","fieldGLCredit","fieldAccType","fieldAccAsset","fieldAccExpense","fieldAccLiabilities","fieldAccEquity","fieldAccIncome","getFieldOptions","getStatusFieldOptions","statusFieldId","fpObject","fpStatusField","getListOptions","fpFields","glFields","accFields","fpStatusFields","accTypeOptions","elementsConfig","fieldGLElem","updateFPFields","updateGLFields","updateAccFields","fpStatusOptions","updateAccTypeOptions","AccountingFPYearCloseCore","processFPYearValue","objectFPYear","objectFPMonth","objectAccount","valueFundBalances","valueNetIncome","fieldFPYearStart","fieldFPYearEnd","fieldFPYearStatus","fieldFPYearActive","fieldFPMonthStart","fieldFPMonthEnd","fieldGLStartBalance","fieldGLRunningBalance","fieldGLrc","fieldAccNumber","fieldAccTypeIncome","fieldAccTypeExpense","fieldAccTypeEquity","fpYearDateFields","fpYearStatusFields","fpYearStatusOptions","fpMonthDateFields","glNumberFields","glRcFields","accNumberFields","accTypeFields","fpYearDateOptions","updateFPYearStatusOptions","fpMonthDateOpts","glRcOptions","glNumberOptions","updateAccNumberFields","updateFPYearActiveOptions","AccountingJEArchiveCore","objectBalance","objectJEArchive","fieldBatchFiscalMonth","fieldJeAccount","fieldJeRC","fieldJeArchiveBalance","fieldBrFiscalMonth","fieldBrAccount","fieldBrRC","fieldsMatch","getConnectFieldOptions","refreshFieldsMatch","$fieldsMatch","JEObj","JEArchiveObj","fJe","fieldBatchList","fieldBalanceList","fieldJeList","fieldJeArchiveList","refreshBatchFields","refreshBRFields","refreshJeFields","refreshJeArchiveFields","CalculateTaskCore","formulaText","exp","ABProcessTaskServiceGetResetPasswordUrlCore","InsertRecordTaskCore","fv","isSet","ABProcessTaskServiceQueryCore","qlWarnings","hasSave","SubProcessCore","bpmnModeler","props","loopCharacteristics","isSequential","loopType","ABProcessTaskUserCore","ABProcessTaskUserApprovalCore","ABProcessTaskUserExternalCore","ABProcessTaskUserFormCore","ABProcessTriggerCore","ABProcessTriggerLifecycleCore","ABProcessTriggerTimerCore","ABQLCore","parseRow","uiID","toIDs","$uiCondition","objectfields","objectname","taskparam","select","shorthand","spacer","uiAddParamForDef","paramUI","uiParamUI","uiAddNext","uiRow","uiNextRow","uiAddParams","nextOptions","resetValue","newOP","thisRow","thisQuery","addOP","viewAddParams","viewAddNext","allRows","ir","allCols","ic","uiNextRowSelectorRefresh","$select","uiNextCol","uiConfig","uiSettings","initialCond","displayLabel","initialValue","Updater","foundFields","shortHand","elCondition","onItemClick","modal","fillspace","sh","_myPopup","topView","rowView","toInsert","myWarnings","ABQLRootObject","root","rootOP","parseCurrent","selector","currOP","nextRow","ABQLRootObjectCore","ABViewCore","changePage","ABViewCSVExporterCore","ABViewCSVExporterComponent","ABViewCSVImporterCore","ABViewCSVImporterComponent","ABViewCarouselComponent","baseView","carousel","_handler_doOnShow","_handler_doReload","_handler_doFilter","fnFilter","filterRules","_handler_busy","_handler_ready","filterUI","linkPage","linkPageHelper","_ui","navigation","buttons","activeIndex","getActiveIndex","switchImage","viewLoad","$carouselView","firstElementChild","detatch","myTemplate","$carousel","currentPosition","_imageCount","_rowCount","getFilter","cursor","images","imgData","ab","align","abWebix","onclick","getNode","fullscreen","exit","rotateImage","zoom","showFilterPopup","showPopup","direction","imgElm","getElementById","fetch","cache","inOrOut","imgContainer","imgElem","newHeight","overflow","ABViewCarouselCore","ABViewCarousel","__filterHelper","ABViewPropertyFilterData","__linkPageHelper","ABViewPropertyLinkPage","ABViewChartCore","ABViewChartComponent","refreshData","getDCChart","_dcChart","dcChart","labelCol","valueCol","valueCol2","numberColName","numberColName2","colorList","dInfo","sumData","sumNumber","sumNumber2","countNumber","numberVal2","relateValues","value2","val2","ABViewChartAreaCore","ABViewChartAreaComponent","ABViewChartBarCore","ABViewChartBarComponent","ABViewChartContainerComponent","ABViewChartLineCore","ABViewChartLineComponent","ABViewChartPieCore","ABViewChartPieComponent","ABViewCommentCore","ABViewCommentComponent","ABViewConditionalContainerCore","ABViewConditionalContainerComponent","viewIf","viewElse","pendingSave","ABViewConnectDataFilterComponent","idbase","applyConnectFilter","tooltip","resetConnectFilter","$filter","connectId","ABViewConnectDataFilter","ABViewContainerCore","ABViewContainerComponent","ABViewDataFilterComponent","sortButton","filterButton","globalSearchToolbar","_handler_filterData","callbackFilterData","PopupSortComponent","sortOptions","callbackSortData","advancedUI","compId","maxHeight","toolbarFilter","getInputNode","openSort","externalSearchText","connectedFieldUI","relative","right","top","setSettings","updateUI","sortRules","filterButtons","onlyFilterRules","filterBadge","sortButtons","onlySortRules","sortBadge","searchFields","activeElement","ABViewDataFilter","ABViewDataSelectComponent","cursorChange","ABViewDataSelect","ABViewDataviewCore","ABViewDataviewComponent","ABViewDetailCore","ABViewDetailComponent","ABViewDetailCheckboxCore","ABViewDetailCheckboxComponent","ABViewDetailConnectCore","ABViewPropertyAddPage","ABViewDetailConnectComponent","addPageTool","__addPageTool","ABViewDetailCustomCore","ABViewDetailCustomComponent","ABViewDetailImageCore","ABViewDetailImageComponent","ABViewDetailItemCore","ABViewDetailItemComponent","ABViewDetailTextCore","ABViewDetailTextComponent","ABViewDetailTreeCore","ABViewDetailTreeComponent","ABViewDocxBuilderCore","ABViewDocxBuilderComponent","letUserDownload","blob","URL","createObjectURL","download","revokeObjectURL","ABViewFormCore","ABViewFormComponent","ABViewFormButton","ABViewFormConnect","ABViewFormDatepicker","ABViewFormSelectMultiple","ABViewFormJson","_callbacks","onBeforeSaveData","superComponent","_superComponent","getFormValues","visibleFields","allVals","vComponent","viewComponents","linkValues","formFieldCom","fComp","linkColName","cursorFormVals","validateData","$formView","requiredFields","fixInvalidMessageUI","$forminput","$height","domInvalidMessage","marginLeft","saveButton","saveData","clearValidation","formError","$saveButton","invalidAttrs","sqlMessage","loadDcDataOfRecordRules","newFormVals","errs","formReady","focusOnFirst","topPositionId","childComponent","actionSettings","valueRules","fieldOperations","valueType","pullDataDC","deleteData","ABViewFormButtonCore","ABViewFormButtonComponent","ABViewFormCheckboxCore","ABViewFormCheckboxComponent","ABViewFormConnectCore","ABViewFormConnectComponent","ABViewPropertyEditPage","editPageTool","addPageProperty","propertyComponent","editPageProperty","__editPageTool","ABViewFormCustomCore","ABViewFormCustomComponent","ABViewFormDatepickerCore","ABViewFormDatepickerComponent","ABViewFormItemCore","ABViewFormItemComponent","componentUI","parentFormUniqueID","uniqueInstanceID","ABViewFormJsonCore","ABViewFormJsonComponent","ABViewFormNumberCore","ABViewFormNumberComponent","ABViewFormReadonlyCore","ABViewFormReadonlyComponent","ABViewFormSelectMultipleCore","ABViewFormSelectMultipleComponent","ABViewFormSelectSingleCore","ABViewFormSelectSingleComponent","ABViewFormTextboxCore","ABViewFormTextboxComponent","ABViewFormTreeCore","ABViewFormTreeComponent","ABViewGanttComponent","menu","gantt","_tempDC","TitleField","StartDateField","EndDateField","DurationField","ProgressField","NotesField","originalStartDate","originalEndDate","pendingAdds","idGantt","ganttElement","isExistsTask","taskId","localService","tasksData","removeTask","opsService","YEAR_SCALE","MONTH_SCALE","DAY_SCALE","getConstantScales","setScale","override","Map","services","Backend","CurrentDatacollection","convertFormat","addTask","taskAdd","updateTask","taskUpdate","taskRemove","$menu","showItem","CurrentObject","convertValues","patch","datacollectionLoad","_events","eo","initData","ganttElem","dataService","dcTasks","gantt_data","currScale","getScales","WEEK_SCALE","wstart","weekStart","wend","scale","ganttData","newScales","setScales","precise","cellWidth","cellHeight","$batch","left","taskData","updatedTask","ABViewGanttCore","ABViewGantt","ABWorkObjectPopupExport","popupExport","_dataCollection","_grid","_filename","_hiddenFields","autoheight","dataCollectionLoad","setHiddenFields","setFilename","setGridComponent","$grid","fnExport","noCheckedRow","appbuilder_select_item","filterRow","toCSV","toExcel","filterHTML","toPDF","toPNG","exportType","fileName","ABViewGridPopupMassUpdate","ABViewGridComponent","submit","GridComponent","rowUpdater","update_button","update_items","$datatable","getDataTable","updatedRowIds","table","toolbar","buttonDeleteSelected","buttonFilter","buttonMassUpdate","buttonSort","buttonExport","datatable","handler_select","selectRow","columnSplitLeft","columnSplitRight","validationError","idTable","PopupExport","PopupMassUpdateComponent","PopupSortDataTableComponent","skippableColumns","ignoreLocalSettings","_gridSettings","_isDatacollectionLoaded","keyStorageSettings","getColumnIndex","uiDatatable","isTreeDatable","selectType","resizeColumn","resizeRow","prerender","fixedRowHeight","editaction","dragColumn","onBeforeSelect","preserve","cellNode","onAfterSelect","onCheck","toggleUpdateDelete","onAfterEditStop","onBeforeEditStop","old","ignoreUpdate","onValidationError","onValidationSuccess","onColumnResize","user_action","setColumnWidth","getLastColumn","onRowResize","onBeforeColumnDrag","onBeforeColumnDrop","onAfterColumnDrop","onHeaderClick","uiFilter","uiToolbar","toolbarMassUpdate","toolbarDeleteSelected","toolbarSort","toolbarExport","_uiGrid","inputWidth","codebase","cdn","$DataTable","throttleCustomDisplay","scrollStarted","displayRecords","verticalScrollState","getScrollState","rowHeight","startRecIndex","endRecIndex","getVisibleCount","CYPRESS_REF","toggleTab","clearValue","updateRow","_deleteConfirmPopup","numRows","deleteRow","globalFilterPosition","refreshHeader","$ButtonFilter","$buttonSort","gridElem","rowItem","oldDC","__handler_dc_busy","__handler_dc_ready","populateGroupData","__handler_dc_loadData","_isDatacollectionLoad","disableUpdateDelete","enableUpdateDelete","freezeDeleteColumn","lastColumn","getColumnConfig","$treetable","baseGroupMap","listData","valRelation","groupBys","g","gIndex","groupMap","by","byValue","gColName","group","localSettingsSave","removeCellCss","maxLength","editCell","requireRefresh","EditField","isCustomGroup","ignoreLocal","objColumnHeaders","objColumnHeaderIDs","origCol","fieldValidations","rulePops","validationUI","popUpId","groupField","treetable","complexValidations","getSelectedItem","destructor","addedColumns","contentId","lastCol","refreshColumns","savedLocalSettings","settingsID","__timeout_selectRow","unselect","parentTab","wb","tab","getTopParentView","tabbar","nextTab","checkedItems","deleteTasks","toolTip","imageFieldColNames","tip","relationData","toolTipOnBeforeRender","visibility","toolTipOnAfterRender","firstChild","nodeName","imgBottom","imgRight","innerHeight","imgOffsetY","newTop","imgOffsetX","newLeft","ABViewGridCore","ABViewGrid","propertyGroupByList","colNames","groupByList","origWS","AB_Work_Object_Workspace_PopupSortFields","_blockOnChange","uiForm","clickAddNewSort","triggerOnChange","dir","sort_form","viewIndex","listFields","onChangeCombo","_valueElement","refreshFieldList","dirElem","cView","selectedValue","getRange","chosenField","sortDir","_valueListElement","valElem","$popup","ignoreRemoveViews","selectedFields","removeChildViews","fieldObj","selectedFieldsExcludeCurField","enableFields","aValue","bValue","drag","onAfterDrop","ABViewImageCore","ABViewImageComponent","ABViewKanbanCore","ABViewKanbanComponent","ABViewKanban","comKanBan","CurrentObjectID","refreshForm","formAttrs","formCom","updateVals","newVals","ABViewLabelCore","ABViewLabelComponent","ABViewLayoutCore","ABViewLayoutComponent","ABViewListCore","ABViewListComponent","ABViewMenuCore","ABViewMenuComponent","ABViewPDFImporterCore","ABViewPDFImporterComponent","ABViewPageCore","v1App","newComponent","ABViewPivotCore","ABViewPivotComponent","ABViewReportsManagerCore","ABViewReportsManagerComponent","ABViewSchedulerCore","ABViewSchedulerComponent","ABViewTabCore","ABViewTabComponent","ABViewTextCore","ABViewTextComponent","ABViewWidgetCore","clientFilter","downloadCsvFile","onFilterChange","whereWidget","whereClient","qsWhere","open","$buttonFilter","CSVImporter","uploadFileList","headerOnFirstLine","columnList","statusMessage","progressBar","linkedDataButton","importButton","csvImporter","args","_dataRows","_csvFileInfo","accept","autosend","loadCsvFile","onClick","webix_remove_upload","removeCsvFile","populateColumnList","minHeight","uiRecordsView","keyPressTimeout","_errorMsg","details","$dt","_status","_included","$importButton","labelImport","overLimitAlert","showLinkedData","uiPopup","$progressBar","formClear","$statusMessage","matchFields","getMatchFields","columnIndex","statusTemplate","$headerOnFirstLine","fileId","$columnList","firstLine","csvColumnList","currentObject","formComp","formConfig","uiColumns","selectedCsvCols","matchCol","selectVal","columnOptUI","abName","toggleLinkFields","loadDataToGrid","dateSeparatorOptions","dayFormatOptions","monthFormatOptions","yearFormatOptions","dateOrderOptions","linkFieldOptions","$columnOption","$linkFieldOption","getFilterHelper","rowValue","refreshRemainingTimeText","startUpdateTime","total","remainTime","days","seconds","$selector","fieldData","$dateFormatSelectors","separator","$linkDataSelector","searchField","objModel","selectedRows","_currProgress","increaseProgressing","itemFailed","addRowCss","itemInvalid","errorMsg","uiCleanUp","validRows","allValid","getParentValues","removeRowCss","hashLookups","allLookups","connectField","connectObject","connectModel","linkIdKey","gethashLookup","createRecord","newRowsData","resultErrors","rowIndex","resultData","penddingRecordRules","processRowData","waitPenddingRecordRules","processResult","throttledSaves","performThrottledSaves","currentRecords","remainingRecords","importer","nextRecords","uiLinkedData","linkedData","hideLinkedData","_info_popup","linkConnectFields","yAxis","xAxis","legend","series","alpha","preset","$component","eventNames","evtName","chartContainer","uiChartComponent","_isShow","$chartContainer","$chartComponent","pieInnerText","shadow","comment","getCommentData","onBeforeAdd","addComment","onAfterDelete","deleteComment","__dvEvents","$comment","$commentList","onStoreUpdated","operate","updateComment","refreshComment","userCol","commentCol","dateCol","userColName","commentColName","dateColName","dataObject","dataList","user_id","default_date","__refreshTimeout","commentData","scrollTo","MAX_SAFE_INTEGER","commentText","dateTime","commentField","CurrentDatacollectionID","uiComponents","eventsClear","waitInitializingDCEvery","milliSeconds","__isShowing","interval","setInterval","clearInterval","_ifComponent","_elseComponent","populateFilterComponent","_uiConditionalContainer","ifComponent","elseComponent","displayView","viewComponentIDs","_handlerChangePage","rowViews","getElements","componentMap","curRowIndex","curColIndex","rowNew","colNumber","rowIndx","curRow","newPos","mapKey","getGrav","reload","initDetailComponent","scroll","sizeToContent","itemTemplate","applyClickEvent","addCyAttribute","$dataView","initRefreshWarning","_resizeEvent","eventKey","showRefreshWarning","__throttleRefreshWarning","base_element","$dataview","item_width","getItemWidth","customize","detailUI","getDetailUI","_detail_ui","$detail_item","itemWidth","$width","itemHeight","tmp_dom","addCyItemAttributes","currElem","parentWidth","$sidebar","getTabSidebar","clicked","divs","_detailComponent","detailItem","createdRow","updatedRow","myVal","needRecalculate","$detailItem","parsedImageUrl","imageUrl","SAFE_HTML_TAGS","detailItemLabel","uiDetailItemComponent","isLabelTop","templateLabel","labelUi","valueUi","itemUi","detailId","strVal","getDomTree","domTree","Docxtemplater","ImageModule","JSZipUtils","JSZip","sizeOf","ABFieldImage","downloadButton","noFileLabel","leftSpacer","rightSpacer","buttonLabelText","renderFile","$downloadButton","$noFileLabel","reportValues","getReportData","downloadImages","contentTemplateFile","downloadTemplateFile","blobFile","generateDocxFile","isDcLabelAdded","dcCursor","dcValues","fieldLabels","objTran","fieldTran","objectLabel","fieldLabel","setReportValues","datacollectionData","multilinguageFields","transFields","childItem","addDownloadTask","fieldImage","imageVal","imgUrl","getBinaryContent","contentFile","summaries","zip","doc","imageModule","centered","getImage","tagValue","tagName","getSize","imgBuffer","tagNames","dcs","Uint8Array","ratio","attachModule","loadZip","tag","scope","varName","propSource","propFilter","indexColName","connectedField","sourceVals","getVal","comparer","docxFile","getZip","generate","mimeType","onDelete","onCancel","onClear","onSave","cancelButton","noPopupFilter","pageCurr","resetButton","buttonID","formID","deleteButton","ABViewFormTextbox","timerId","_showed","fieldValidationsHolder","uiValidationHolder","abid","existsFields","com","initCallbacks","initEvents","initValidationRules","relationVals","valArray","displayParentData","applicationLoad","formField","nval","oval","fieldValidating","ms","customFields","normalFields","formItem","defaultRowData","parentData","relationField","relationFieldCom","relationFieldView","$relationFieldView","formData","topPosition","editpopup","addPageComponent","editPageComponent","formSettings","goToEditPage","_onChange","initAddEditTool","selectAll","customField","trg","$formItem","apcUI","inputId","selectedValues","prepedVals","addFormID","onSaveData","callbackSaveData","onCancelClick","callbackCancel","callbackClearOnLoad","editFormID","sData","formBusy","__editFormDcEvent","$node","filterConnectedValue","uiConfigName","connectFieldId","getFilterByConnectValues","filterByConnectValue","$ui","vc","$filterValueConfig","parentField","FocusableTemplate","new_width","requiredClass","DEFAULT_HEIGHT","paddingY","paddingX","AB_App","onAfterDateSelect","setMasterValue","onTodaySet","onDateClear","getMasterValue","errNoAB","strToDate","setFullYear","uiFormItemComponent","_uiFormItem","rowFilter","getFilterField","getSystemObjects","objectsArray","refreshFilter","fieldDefs","parsed","stringResult","NumberTextInput","_numberTextInputKey","numberTextInputKey","newv","oldv","setHTML","tagMode","tagTemplate","selectedOptions","menubar","initTinyMCE","getEditor","contentAreaContainer","$image","ABFormSidePanel","kanbanView","kanban","resizer","formSidePanel","FormSide","CurrentVerticalField","CurrentHorizontalField","CurrentOwnerField","_updatingOwnerRowId","_ABFieldConnect","_ABFieldUser","_ABFieldList","ABFieldUser","onSelectChange","userId","getSelectedId","updateOwner","tags","onListAfterSelect","onAfterStatusChange","updateStatus","onAvatarClick","$kb","_kb","kanbanListTemplate","removeCard","templateAvatar","templateBody","horizontalOptions","verticalOptions","horizontalVals","statusOps","reconstruct","$menuUser","getUserList","needRefresh","eachList","addCard","setFields","verticalGrouping","horizontalGrouping","uiFormatting","vId","_uiList","autoHeight","uiMenu","datatype","onMenuItemClick","defineCypress","subsign","_uiMenu","elems","menuIncluded","$item","redirectPage","toggleParent","showIt","parentElem","viewInfo","fileUploader","uploadList","fullImagePopup","fullImageCarousel","fullImageSelectToggle","fullImageLabel","unselectAll","loadFile","removeFile","displayBig","displaySmall","pageTemplate","pageIds","renderPageImages","_fullImagePopup","setActiveIndex","refreshFullImage","headHeight","offIcon","onIcon","offLabel","onLabel","isSelected","pageNumber","initPdfjs","pdfjs","pdfjsWorker","_readFileBuffer","ArrayBuffer","fileReader","fileBuffer","readAsArrayBuffer","_toBlob","toBlob","File","_uploadImage","canvasId","showPage","fileBlob","$uploader","onUploadComplete","addFile","_increaseProgressValue","maxProgressStep","_progressSteps","clearDataview","_pdfDoc","getDocument","promise","total_page","numPages","carousel_list","fullImageTemplate","pageTemplateId","pageItemWidth","canvas_dom","getPage","pdf_original_width","getViewport","scale_required","viewport","canvasContext","_isDisplayBig","selectedIds","fullImageTemplateId","$fileUploader","$uploadList","$submit","$selectAll","$unselectAll","$selectToggle","selectedPageIds","newValues","uploadId","ABFieldCalculate","ABFieldFormula","ABFieldNumber","pivot","uiPivot","_getFields","dataMapped","CellFormat","fieldType","reportManager","fieldText","fieldQueries","MyBackend","reports","getModules","updated","addModule","updateModule","deleteModule","getModels","reportModels","dcID","reportFields","getReportFields","refs","getQueries","moduleID","moduleId","addQuery","moduleData","queryID","updateQuery","queryIndex","deleteQuery","pullDataTasks","dcIds","dcData","sid","dcId","dataCol","sourceDc","sourceObj","targetDc","targetObj","sourceLinkField","sf","targetLinkField","tf","sourceData","targetData","tData","sVal","tVal","matchedVal","updateRows","queryVal","filterElem","tempDc","as","mod","_","parsedColumn","originalColumn","reportField","dateStringData","parsedDateStringData","groupedData","groupedResult","agg","rawCol","getFieldData","MyLocal","Local","_currentModuleID","currentModuleID","_queries","MyEditor","$tabbar","callEvent","disableOption","Reset","forceReset","AppState","getModule","TrackChanges","MyToolBar","MyEditorCommon","ShowDeleteButton","MyEditorData","MyTable","GetColumnConfig","meta","abField","mid","fullDateFormatStr","GetTableData","buckets","columnIDs","parsedBuckets","bucket","parseRecord","columnFormat","linkedDcs","linkDc","ref","reportData","reportRow","$pk","rField","fieldStart","fieldEnd","fieldAllDay","fieldCalendar","fieldEventColor","fieldNotes","fieldOriginID","fieldSectionID","fieldUnitID","dcCalendar","fieldTitle","fieldCalendarColor","fieldActive","timelineOptions","addCalendar","addEvent","start_date","end_date","all_day","recurring","section","origin_id","calendars","events","sections","removeCalendar","removeEvent","updateCalendar","updateEvent","uiNav","uiNavPopup","LimitData","sidebar","expandMenu","collapseMenu","popupTabManager","popupTabManagerForm","popupTabManagerSaveButton","baseType","menuItems","abStorage","toggle","addDataCy","multiview","keepViews","onViewChange","prevId","nextId","collapseNode","expandNode","tabUi","tabTemplate","$tab","changeTab","setState","checkCollapseMenu","checkExpandMenu","collapsed","tabViewId","$tabViewId","$viewID","defaultViewIsSet","_uiText","$text","ABViewProperty","toSettings","editForms","pagesHasForm","getIds","onClearOnLoad","_application","openFormPopup","pageClone","popUpComp","savedData","popupTemplate","setDefaultValue","fView","objLink","rawData","formEdit","FilterRuleSettings","buttonAddfilter","filterPanel","globalFilterFormContainer","globalFilterForm","filterMenutoolbar","resetFilterButton","__externalSearchText","rowFilterForm","_handler_rowFilterChanged","triggerCallback","_handler_rowFilterFormChanged","resetFilter","$filterMenutoolbar","queryRules","qr","Rule","filterRuleButton","rowFilterRules","__currentFilter","searchRules","badgeCount","$button","externalText","terms","allTerms","fieldTerms","ABViewPropertyLinkPageComponent","cleanRules","processCondition","myUnique","queryBuilder","queryBuilderContainer","queryBuilderLayout","showQBButton","conditionFields","QB","fieldTypes","onDone","listRules","showQueryBuilderContainer","ObjectQueryBuilder","listActions","actionDropList","selectedAction","objectQB","currentForm","selectAction","valueDisplay","_generateUI","Action","currentAction","replaceValueDisplay","$ValueDisplay","cloneChildren","prevAction","getAction","stashCondition","currAction","hidddatasourceen","for","processUpdateObject","qbFixAfterShow","isReady","convertToNumber","hiddenFilter","isPreProcess","queryObject","conditionRules","queryObjectLoad","webixID","valueDisplayComponent","childSettings","headerDefault","rulesScrollview","when","addRule","buttonCancel","buttonSave","getRule","RulesUI","deletedRule","ruleSettings","ABViewRuleList","ABViewRule","RoleUpdateExisting","RoleInsertConnected","RoleUpdateConnected","RoleRemoveConnected","allReady","RoleConfirmMessage","RuleExistPage","RuleParentPage","RuleClosePopup","RuleWebsite","RuleEmail","UpdateConnected","valueDisplayChooser","Component","showQBIfNeeded","queryBuilderDisplay","connObj","connectedObject","connectionField","selectedField","newObjectValues","newRecords","connectedObjectField","qbCondition","ABViewRuleActionFormRecordRuleUpdateConnected","isUpdateValueDisabled","_formData","ABViewRuleActionObjectUpdater","selectedFieldID","fieldDropList","connectedFieldList","cf","connectKey","_uiChooser","selectConnectedField","updateFieldsForm","addDisplay","removePreviousDisplays","cloneAllViews","updateObjectLoad","updateComponent","$updateForm","qbComponent","formRows","fr","rowSettings","modifyCondition","updateIt","qbCond","ABViewRuleAction","confirmMessage","ABFieldEmail","toEmailsContainer","toEmails","isEmail","toEmailAdd","fieldTemplate","enterField","refreshUI","emailType","recipients","fromName","fromEmail","toEmailTemplate","emailTypeChange","visibleBatch","toEmailValidate","emailFieldOptions","queryOptions","$toView","toEmailRemove","$emailValue","isAllValid","emailText","existsFieldIds","fnAddOptions","fLink","emailFields","optId","optLabel","focusElem","UIManager","getFocus","setFocus","rec","emailFieldUrl","emailField","emailData","linkFieldId","dvIdAndFieldId","dcQuery","emailAddr","pagesAndTabs","_pageOptions","addPage","pageOrTab","indent","selectedId","curPage","website","ABViewRuleActionObjectUpdaterDefaults","updateObject","stashRules","_uiUpdater","valueDisplayList","removeAddRow","UpdateForm","formGet","addRow","valueDisplayRow","onAdd","delRow","mySettings","FilterComponent","selectDc","selectBy","queryField","buttonAdd","buttonDelete","buttonsToggle","shouldFilter","usedHash","FormView","getUpdateObjectField","fieldField","columnID","$inputView","$componentView","datasources","optionsDataSources","optionsSelectBy","$optionUpdateExsits","selectedDC","$row","populateFilters","dcQueries","$multiview","compNodeView","setValueFn","collectionId","dataView","$valueField","objectToUpdate","isUpdated","clonedDataCollection","fieldWithValue","currRow","updates","objectToUpdateClone","lookup","updateObjectID","updateObjectURL","DocUtils","convertPixelsToEmus","pixel","docxtemplater","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","extensionRegex","rels","getPrefix","getFileTypeName","getRelsFileName","getRelsFilePath","ImgManager","xmlDocuments","TypeError","_classCallCheck","fileTypeName","mediaPrefix","relsFilePath","relsDoc","createEmptyRelsDoc","relsFileName","mainRels","files","str2xml","xml2str","relationships","relationshipChilds","iterable","reduce","relationship","contentType","extension","contentTypeDoc","defaultTags","types","newTag","namespaceURI","imageName","realImageName","imagePath","addImageRels","binary","addExtensionRels","maxRid","loadImageRels","getImageXml","rId","getImageXmlCentered","getPptxImageXml","offset","memoize","XMLSerializer","Errors","nullGetter","part","delimiters","mergeObjects","resObj","xmlNode","serializeToString","decodeUtf8","decodeURIComponent","escape","convertSpaces","explanation","encodeUtf8","unescape","errorHandler","charMap","regexStripRegexp","escapeRegExp","charMapRegexes","endChar","startChar","rstart","rend","wordToUtf8","utf8ToWord","concatArrays","arrays","array","spaceRegexp","fromCharCode","throwXmlTagNotFound","XTTemplateError","pregMatchAll","regex","matchArray","exec","sizeOfObject","traits","moduleWrapper","xmldom","wrapper","compiled","modules","fileTypeConfig","FileTypeConfig","xmlFileNames","loadAsync","currentFile","createTemplateClass","templatedFiles","getTemplatedFiles","_this2","baseModules","moduleFunction","optionsTransformer","asText","compile","compileFile","mapper","getRenderedMap","mapped","setTags","usedData","createTemplateClassFromContent","filePath","_this3","xmltOptions","XmlTemplater","textPath","getFullText","XmlMatcher","XTError","stack","XTScopeParserError","XTInternalError","loopModule","spacePreserveModule","rawXmlModule","expandPairTrait","PptXFileTypeConfig","tagsXmlTextArray","tagsXmlLexedArray","tagRawXml","tagTextXml","DocXFileTypeConfig","docx","pptx","inRange","range","updateInTextTag","inTextTag","offsetSort","getTag","throwUnclosedTagException","xtag","assertDelimiterOrdered","delimiterMatches","fullText","inDelimiter","lastDelimiterMatch","delimiterMatch","throwUnopenedTagException","getAllIndexes","arr","Reader","innerContentParts","full","parseDelimiters","ranges","delimiterLength","cutNext","delimiterIndex","partContent","delimitersInOffset","delimiterInOffset","xmlparsed","newArray","xmlparse","xmltags","matches","textMatchArray","othersMatchArray","contentLength","allMatches","totalMatches","tagText","_getTag","tagMatcher","other","func","stringifyJson","getMinFromArrays","minIndex","totalLength","resultArray","arrayIndex","emptyFun","identity","getTraits","postparse","every","mergeSort","getExpandToDefault","throwClosingTagNotMatchOpeningTag","openingtag","closingtag","getOpenCountChange","location","getPairs","countOpen","firstTrait","currentTrait","outer","T","throwUnmatchedLoopException","_ref","_postparse","trait","pairs","expandedPairs","pair","expandTo","currentPairIndex","innerParts","newParsed","inPair","expandedPair","basePart","subparsed","dashInnerRegex","moduleName","placeHolderContent","inverted","traitName","totalValue","scopeManager","loopOver","createSubScopeManager","getInner","postparsed","paragraphParts","throwRawTagShouldBeOnlyTextInParagraph","RawXmlModule","expandToOne","Render","spacePreserve","inChunk","lexed","inPlaceHolder","tailParts","token","moduleParsed","moduleParse","ScopeManager","createBaseScopeManager","moduleRendered","moduleRender","scopePath","loopOverValue","functor","currentValue","num","isValueFalsy","functorIfInverted","rootError","lastTagIsOpenTag","innerLastTag","innerCurrentTag","addTag","expandOne","throwRawTagNotInParagraph","leftParts","rightParts","inner","xmlElements","getListXmlElements","memoized","tagsXmlArray","tagsXmlArrayJoined","charactersAddedCumulative","charactersAdded","replacerUnshift","pn","last","handleRecursiveCase","xmlMatcher","Lexer","Parser","_render","fromJson","setModules","inspect","xmllexed","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","source","sax","XMLReader","domBuilder","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","nbsp","startDocument","DOMImplementation","createDocument","documentURI","localName","qName","createElementNS","len","getURI","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","skippedEntity","endDocument","normalize","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","dest","_extends","Super","pt","ppt","__proto__","htmlns","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","Node","_xmlEncoder","charCodeAt","_visitNode","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","needNamespaceDefine","isHTML","ns","pubid","sysid","internalSubset","importNode","node2","cloneNode","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","versions","qualifiedName","doctype","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","rtv","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","splitText","newText","newNode","getTextContent","$$length","nameStartChar","nameChar","tagNamePattern","S_TAG","S_ATTR","S_ATTR_SPACE","S_EQ","S_ATTR_NOQUOT_VALUE","S_ATTR_END","S_TAG_SPACE","S_TAG_CLOSE","defaultNSMapCopy","entityReplacer","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","localNSMap","endMatch","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","attrName","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","lastIndexOf","matchs","reg","lastMatch","endDTD","_set_proto_","thiz","getLocalName","getInnerDocx","getInnerPptx","_ref2","xmlString","ext","cx","cy","imgManagers","imageNumber","relsFiles","imgManager","getNextImageName","sizePixel","getRenderedPart","getRenderedPartPptx","getRenderedPartDocx","cellCX","cellCY","imgW","imgH","expanded","xmlElement","updateFileTypeConfig","zero","byteAt","lastIndexOfSignature","readData","checkOffset","encode","decode","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","STORE","magic","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","getTypeOf","checkIndex","setIndex","readInt","readString","transformTo","readDate","base64","createFolders","compression","compressionOptions","unixPermissions","dosPermissions","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","Uint16Array","Uint32Array","deflateRaw","inflateRaw","pako","support","utils","compressions","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","fileNameStr","decompressed","fileCommentStr","zipComment","isBuffer","Buffer","_data","nodebuffer","asBinary","D","utf8encode","_initialMetadata","asNodeBuffer","asUint8Array","asArrayBuffer","buffer","z","C","E","B","F","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","compressedObject","folder","platform","encodeFileName","CENTRAL_DIRECTORY_END","append","finalize","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","arraybuffer","uint8array","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","subarray","applyFromCharCode","byteLength","loadOptions","checkSignature","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","prepareContent","fileNameLength","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","chunkSize","windowBits","memLevel","strategy","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","pending_buf","pending_out","total_out","_tr_flush_block","block_start","strstart","wrap","adler","G","H","total_in","max_chain_length","prev_length","nice_match","w_size","la","w_mask","prev","ka","good_match","lookahead","match_start","window_size","hash_size","insert","ja","ins_h","hash_shift","hash_mask","J","ua","match_length","_tr_tally","max_lazy_match","M","wa","xa","last_lit","va","prev_match","U","match_available","good_length","max_lazy","nice_length","max_chain","pending_buf_size","gzhead","gzindex","$","last_flush","w_bits","hash_bits","dyn_ltree","ha","dyn_dtree","fa","bl_tree","ga","l_desc","d_desc","bl_desc","bl_count","ia","heap","ea","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","data_type","Z","na","sa","_tr_init","O","Q","X","K","N","P","R","S","W","Y","aa","ba","da","ma","oa","pa","qa","ra","ta","ya","deflateInit","deflateReset","deflateResetKeep","hcrc","extra","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","ca","inflateReset","inflateReset2","inflateResetKeep","inflateInit","za","Aa","Ba","Ca","inflateInfo","static_tree","extra_bits","extra_base","max_length","has_stree","dyn_tree","max_code","stat_desc","protoUI","ActiveContent","datafilter","countColumn","summColumn","datetime","popupType","EditAbility","unitlist","ABCustomFormBuilderBuilder","FormBuilder","autofit","$init","defaultComponent","dataFields","parseDataFields","approveButton","schema","inputComponents","formComponents","noDefaultSubmitButton","noNewEdit","basic","advanced","customBasic","premium","weight","getFormData","_key","inputType","calculateValue","refreshOnChange","block","leftIcon","theme","textbox","textarea","ABLazyCustomComponent","Form","$ready","initForm","_formio","submission","onButton","setDefaultUI","$getValue","calendarHeader","monthFull","$protoWait","_zoom_logic","_getTitle","_getYearTitle","_getYearRangeTitle","_getContent","_getYearContent","_setContent","_setYear","Qd","Jv","Zv","Xv","thaidate","thaidatetime","_zoom_start_date","ABCustomTinyMCE","eachRow","$count","master"],"sourceRoot":""}