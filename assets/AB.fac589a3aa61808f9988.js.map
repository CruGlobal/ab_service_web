{"version":3,"file":"AB.fac589a3aa61808f9988.js","mappings":"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A,WACA,WACA,mBACA,8BACA,WACA,KACA,oBACA,aACA,WACA,gBACA,MACA,WACA,OACA,YACA,cACA,UACA,OACA,OACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,gBACA,eACA,eACA,kBACA,yBACA,MACA,OACA,UACA,iBACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,YACA,mBACA,UACA,YACA,QACA,YACA,cACA,OACA,OACA,OACA,OACA,WACA,aACA,UACA,YACA,MACA,MACA,WACA,aACA,WACA,WACA,MACA,aACA,MACA,aACA,WACA,mBACA,mBACA,aACA,kBACA,mBACA,SACA,eACA,MACA,aACA,aACA,cACA,sBACA,sBACA,uBACA,oBACA,WACA,kBACA,YACA,KACA,UACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,QACA,eACA,iBACA,eACA,iBACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,QACA,SACA,SACA,WACA,iBACA,cACA,YACA,UACA,QACA,QACA,QACA,iBACA,eACA,MACA,OACA,YACA,UACA,WACA,SACA,MACA,OACA,UACA,UACA,YACA,aACA,eACA,WACA,aACA,UACA,WACA,iBACA,SACA,OACA,YACA,mBACA,cACA,kBACA,OACA,aACA,OACA,OACA,QACA,MACA,UACA,YACA,WACA,WACA,OACA,WACA,SACA,YACA,UACA,aACA,UACA,OACA,SACA,eACA,WACA,WACA,kBACA,oBACA,UACA,SACA,OACA,OACA,UACA,QACA,aACA,aACA,SACA,WACA,aACA,gBACA,kBACA,kBACA,SACA,SACA,OACA,MACA,OACA,WACA,cACA,qBACA,uBACA,SACA,eACA,gBACA,uBACA,MACA,YACA,aACA,KACA,WACA,aACA,oBACA,kBACA,gBACA,eACA,MACA,OACA,SACA,cACA,OACA,iBACA,eACA,cACA,eACA,eACA,eACA,SACA,aACA,eACA,iBACA,oBACA,eACA,YACA,cACA,eACA,cACA,aACA,UACA,OACA,SACA,OACA,oBACA,UACA,cACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,cACA,gBACA,OACA,eACA,YACA,eACA,WACA,UACA,aACA,iBACA,UACA,WACA,UACA,QACA,MACA,KACA,OACA,QACA,aACA,aACA,KACA,YACA,OACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,cACA,qBACA,uBACA,qBACA,gBACA,iBACA,WACA,OACA,QACA,WACA,cACA,cACA,gBACA,cACA,cACA,eACA,YACA,eACA,eACA,iBACA,cACA,kBACA,eACA,cACA,cACA,kBACA,UACA,QACA,SACA,aACA,QACA,UACA,YACA,UACA,OACA,aACA,QACA,YACA,cACA,cACA,cACA,gBACA,iBACA,cACA,kBACA,QACA,QACA,WACA,WACA,UACA,YACA,MACA,QACA,OACA,QACA,SACA,WACA,OACA,cACA,MACA,YACA,cACA,oBACA,WACA,UACA,SACA,SACA,MACA,WACA,MACA,aACA,MACA,WACA,SACA,SACA,gBACA,OACA,UACA,QACA,UACA,aACA,WACA,YACA,YACA,YACA,aACA,cACA,aACA,OACA,WACA,kBACA,SACA,QACA,OACA,WACA,UACA,UACA,iBACA,OACA,kBACA,kBACA,mBACA,gBACA,aACA,QACA,SACA,eACA,aACA,iBACA,OACA,MACA,aACA,QACA,UACA,YACA,OACA,cACA,cACA,gBACA,gBACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,YACA,aACA,mBACA,QACA,eACA,eACA,iBACA,WACA,SACA,eACA,OACA,QACA,SACA,eACA,aACA,gBACA,QACA,UACA,SACA,cACA,eACA,iBACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,UACA,YACA,cACA,cACA,gBACA,YACA,YACA,QACA,QACA,eACA,iBACA,MACA,SACA,SACA,gBACA,kBACA,UACA,QACA,eACA,QACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,mBACA,QACA,OACA,cACA,gBACA,OACA,OACA,cACA,cACA,gBACA,UACA,YACA,QACA,eACA,eACA,KACA,SACA,WACA,kBACA,oBACA,QACA,aACA,cACA,KACA,SACA,UACA,QACA,UACA,SACA,eACA,gBACA,UACA,aACA,SACA,SACA,UACA,SACA,QACA,YACA,aACA,UACA,MACA,OACA,SACA,cACA,eACA,SACA,MACA,aACA,MACA,QACA,QACA,MACA,SACA,OACA,WACA,SACA,SACA,eACA,cACA,SACA,OACA,SACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,SACA,SACA,OACA,eACA,eACA,kBACA,gBACA,SACA,UACA,gBACA,WACA,SACA,UACA,cACA,UACA,WACA,QACA,QACA,UACA,aACA,UACA,WACA,iBACA,kBACA,cACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,aACA,gBACA,UACA,QACA,UACA,SACA,WACA,iBACA,iBACA,OACA,YACA,kBACA,iBACA,cACA,SACA,QACA,eACA,gBACA,eACA,cACA,cACA,gBACA,OACA,cACA,gBACA,cACA,gBACA,cACA,qBACA,YACA,SACA,WACA,QACA,cACA,cACA,UACA,QACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,gBACA,WACA,cACA,aACA,KACA,WACA,UACA,YACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,mBACA,mBACA,sBACA,6BACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,kBACA,oBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,YACA,QACA,cACA,kBACA,QACA,UACA,OACA,SACA,cACA,SACA,QACA,MACA,MACA,SACA,gBACA,eACA,KACA,SACA,UACA,iBACA,WACA,YACA,OACA,mBACA,aACA,SACA,SACA,aACA,WACA,SACA,MACA,MACA,OACA,cACA,gBACA,UACA,SACA,YACA,cACA,aACA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","sources":["webpack://ab_platform_web/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://ab_platform_web/./resources/Account.js","webpack://ab_platform_web/./AppBuilder/_factory_utils/Dialog.js","webpack://ab_platform_web/./resources/Multilingual.js","webpack://ab_platform_web/./resources/NetworkRest.js","webpack://ab_platform_web/./resources/NetworkRestSocket.js","webpack://ab_platform_web/./resources/Network.js","webpack://ab_platform_web/./resources/StorageLocal.js","webpack://ab_platform_web/./resources/Storage.js","webpack://ab_platform_web/./resources/Tenant.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configDesktop.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configMobile.js","webpack://ab_platform_web/./AppBuilder/uiSettings/config.js","webpack://ab_platform_web/./AppBuilder/uiSettings/icons.js","webpack://ab_platform_web/./AppBuilder/ABFactory.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationCore.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationMobileCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDataCollectionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDefinitionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFactoryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFieldManager.js","webpack://ab_platform_web/./AppBuilder/core/ABHintCore.js","webpack://ab_platform_web/./AppBuilder/core/ABIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/ABMLClassCore.js","webpack://ab_platform_web/./AppBuilder/core/ABModelCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectApiCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/ABStepCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerMobileCore.js","webpack://ab_platform_web/./AppBuilder/core/FilterComplexCore.js","webpack://ab_platform_web/./AppBuilder/core/RowFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldAutoIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldBooleanCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCombineCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateTimeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFileCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldImageCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldListCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldLongTextCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldStringCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTextFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldUserCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobilePageCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormDateCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormDatetimeCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormFileCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormImageCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessLaneCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessParticipantCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessTaskManager.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessElementCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessEndCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessGatewayExclusiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceInsertRecordCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskSubProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserApprovalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserExternalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerLifecycleCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerTimerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLFindCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRootObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRow.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowUpdateCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSet.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetFirstCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVExporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCarouselCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartAreaCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartBarCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartLineCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartPieCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCommentCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConditionalContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConnectDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataviewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDocxBuilderCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormDatepickerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGanttCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGridCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewKanbanCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLayoutCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewMenuCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPDFImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPivotCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewReportsManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewSchedulerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTabCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewWidgetCore.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplication.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplicationMobile.js","webpack://ab_platform_web/./AppBuilder/platform/ABComponent.js","webpack://ab_platform_web/./AppBuilder/platform/ABDataCollection.js","webpack://ab_platform_web/./AppBuilder/platform/ABDefinition.js","webpack://ab_platform_web/./AppBuilder/platform/ABEmitter.js","webpack://ab_platform_web/./AppBuilder/platform/ABHint.js","webpack://ab_platform_web/./AppBuilder/platform/ABIndex.js","webpack://ab_platform_web/./AppBuilder/platform/ABMLClass.js","webpack://ab_platform_web/./AppBuilder/platform/ABModel.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABObject.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectExternal.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectImport.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABProcess.js","webpack://ab_platform_web/./AppBuilder/platform/ABStep.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManager.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManagerMobile.js","webpack://ab_platform_web/./AppBuilder/platform/CSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/FilterComplex.js","webpack://ab_platform_web/./AppBuilder/platform/RowFilter.js","webpack://ab_platform_web/./AppBuilder/platform/RowUpdater.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABField.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldAutoIndex.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldBoolean.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCombine.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldConnect.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDateTime.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldEmail.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFile.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldImage.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldJson.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldList.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldLongText.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldNumber.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldSelectivity.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldString.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTextFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTree.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldUser.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobilePage.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileView.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormDate.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormDatetime.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormEmail.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormFile.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormFormula.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormImage.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewList.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessLane.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessParticipant.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessElement.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessEnd.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessGatewayExclusive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskEmail.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskService.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingJEArchive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceInsertRecord.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceQuery.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskSubProcess.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserApproval.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserExternal.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTrigger.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerLifecycle.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerTimer.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQL.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLFind.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLManager.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRootObject.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowSave.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetFirst.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetSave.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABView.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVExporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCarouselComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCarousel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartArea.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartBar.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartLine.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartPie.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewComment.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConditionalContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConnectDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConnectDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataview.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetail.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDocxBuilder.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormDatepicker.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormJson.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGanttComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupExport.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupMassUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGridComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupSortFields.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanban.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanbanFormSidePanel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLayout.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewList.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewMenu.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPDFImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPivot.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewReportsManager.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewScheduler.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewTab.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewWidget.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVExporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartAreaComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartBarComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartLineComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartPieComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCommentComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConditionalContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataviewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDocxBuilderComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormButtonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormDatepickerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormJsonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormNumberComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormReadonlyComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectMultipleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectSingleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTextboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewKanbanComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLabelComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLayoutComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewListComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewMenuComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPDFImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPivotComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewReportsManagerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewSchedulerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTabComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewProperty.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyAddPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyEditPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyFilterData.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyLinkPage.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRule.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleAction.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleList.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormRecordRules.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormSubmitRules.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleInsertConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdate.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleClosePopup.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleExistPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleParentPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleWebsite.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://ab_platform_web/./js/docxtemplater-image-module.v3.0.2.min.js","webpack://ab_platform_web/./js/docxtemplater.v3.0.12.min.js","webpack://ab_platform_web/./js/jszip.min.js","webpack://ab_platform_web/./webix_custom_components/activelist.js","webpack://ab_platform_web/./webix_custom_components/countfooter.js","webpack://ab_platform_web/./webix_custom_components/customComponentManager.js","webpack://ab_platform_web/./webix_custom_components/datetimepicker.js","webpack://ab_platform_web/./webix_custom_components/editlist.js","webpack://ab_platform_web/./webix_custom_components/edittree.js","webpack://ab_platform_web/./webix_custom_components/editunitlist.js","webpack://ab_platform_web/./webix_custom_components/focusableTemplate.js","webpack://ab_platform_web/./webix_custom_components/formioBuilder.js","webpack://ab_platform_web/./webix_custom_components/formioPreview.js","webpack://ab_platform_web/./webix_custom_components/lazyComponent.js","webpack://ab_platform_web/./webix_custom_components/numbertext.js","webpack://ab_platform_web/./webix_custom_components/thaicalendar.js","webpack://ab_platform_web/./webix_custom_components/timepicker.js","webpack://ab_platform_web/./webix_custom_components/tinyMce.js","webpack://ab_platform_web/./webix_custom_components/totalfooter.js","webpack://ab_platform_web/./webix_custom_components/treesuggest.js"],"sourcesContent":["var map = {\n\t\"./af\": 94506,\n\t\"./af.js\": 94506,\n\t\"./ar\": 59687,\n\t\"./ar-dz\": 62887,\n\t\"./ar-dz.js\": 62887,\n\t\"./ar-kw\": 66307,\n\t\"./ar-kw.js\": 66307,\n\t\"./ar-ly\": 51664,\n\t\"./ar-ly.js\": 51664,\n\t\"./ar-ma\": 89926,\n\t\"./ar-ma.js\": 89926,\n\t\"./ar-ps\": 68634,\n\t\"./ar-ps.js\": 68634,\n\t\"./ar-sa\": 85207,\n\t\"./ar-sa.js\": 85207,\n\t\"./ar-tn\": 52912,\n\t\"./ar-tn.js\": 52912,\n\t\"./ar.js\": 59687,\n\t\"./az\": 5011,\n\t\"./az.js\": 5011,\n\t\"./be\": 25997,\n\t\"./be.js\": 25997,\n\t\"./bg\": 4427,\n\t\"./bg.js\": 4427,\n\t\"./bm\": 85385,\n\t\"./bm.js\": 85385,\n\t\"./bn\": 67703,\n\t\"./bn-bd\": 57002,\n\t\"./bn-bd.js\": 57002,\n\t\"./bn.js\": 67703,\n\t\"./bo\": 39841,\n\t\"./bo.js\": 39841,\n\t\"./br\": 45642,\n\t\"./br.js\": 45642,\n\t\"./bs\": 69038,\n\t\"./bs.js\": 69038,\n\t\"./ca\": 53512,\n\t\"./ca.js\": 53512,\n\t\"./cs\": 39497,\n\t\"./cs.js\": 39497,\n\t\"./cv\": 6479,\n\t\"./cv.js\": 6479,\n\t\"./cy\": 89318,\n\t\"./cy.js\": 89318,\n\t\"./da\": 97229,\n\t\"./da.js\": 97229,\n\t\"./de\": 63460,\n\t\"./de-at\": 51044,\n\t\"./de-at.js\": 51044,\n\t\"./de-ch\": 26445,\n\t\"./de-ch.js\": 26445,\n\t\"./de.js\": 63460,\n\t\"./dv\": 32096,\n\t\"./dv.js\": 32096,\n\t\"./el\": 16048,\n\t\"./el.js\": 16048,\n\t\"./en-au\": 74301,\n\t\"./en-au.js\": 74301,\n\t\"./en-ca\": 66855,\n\t\"./en-ca.js\": 66855,\n\t\"./en-gb\": 761,\n\t\"./en-gb.js\": 761,\n\t\"./en-ie\": 46127,\n\t\"./en-ie.js\": 46127,\n\t\"./en-il\": 49157,\n\t\"./en-il.js\": 49157,\n\t\"./en-in\": 37199,\n\t\"./en-in.js\": 37199,\n\t\"./en-nz\": 31511,\n\t\"./en-nz.js\": 31511,\n\t\"./en-sg\": 47309,\n\t\"./en-sg.js\": 47309,\n\t\"./eo\": 92160,\n\t\"./eo.js\": 92160,\n\t\"./es\": 68582,\n\t\"./es-do\": 71885,\n\t\"./es-do.js\": 71885,\n\t\"./es-mx\": 68131,\n\t\"./es-mx.js\": 68131,\n\t\"./es-us\": 16962,\n\t\"./es-us.js\": 16962,\n\t\"./es.js\": 68582,\n\t\"./et\": 98890,\n\t\"./et.js\": 98890,\n\t\"./eu\": 37704,\n\t\"./eu.js\": 37704,\n\t\"./fa\": 22562,\n\t\"./fa.js\": 22562,\n\t\"./fi\": 70877,\n\t\"./fi.js\": 70877,\n\t\"./fil\": 34246,\n\t\"./fil.js\": 34246,\n\t\"./fo\": 78341,\n\t\"./fo.js\": 78341,\n\t\"./fr\": 19867,\n\t\"./fr-ca\": 82347,\n\t\"./fr-ca.js\": 82347,\n\t\"./fr-ch\": 17683,\n\t\"./fr-ch.js\": 17683,\n\t\"./fr.js\": 19867,\n\t\"./fy\": 21982,\n\t\"./fy.js\": 21982,\n\t\"./ga\": 13905,\n\t\"./ga.js\": 13905,\n\t\"./gd\": 13443,\n\t\"./gd.js\": 13443,\n\t\"./gl\": 66905,\n\t\"./gl.js\": 66905,\n\t\"./gom-deva\": 91324,\n\t\"./gom-deva.js\": 91324,\n\t\"./gom-latn\": 41890,\n\t\"./gom-latn.js\": 41890,\n\t\"./gu\": 37134,\n\t\"./gu.js\": 37134,\n\t\"./he\": 96835,\n\t\"./he.js\": 96835,\n\t\"./hi\": 81394,\n\t\"./hi.js\": 81394,\n\t\"./hr\": 13564,\n\t\"./hr.js\": 13564,\n\t\"./hu\": 46269,\n\t\"./hu.js\": 46269,\n\t\"./hy-am\": 57269,\n\t\"./hy-am.js\": 57269,\n\t\"./id\": 44254,\n\t\"./id.js\": 44254,\n\t\"./is\": 8699,\n\t\"./is.js\": 8699,\n\t\"./it\": 28301,\n\t\"./it-ch\": 92887,\n\t\"./it-ch.js\": 92887,\n\t\"./it.js\": 28301,\n\t\"./ja\": 64642,\n\t\"./ja.js\": 64642,\n\t\"./jv\": 62168,\n\t\"./jv.js\": 62168,\n\t\"./ka\": 94501,\n\t\"./ka.js\": 94501,\n\t\"./kk\": 49537,\n\t\"./kk.js\": 49537,\n\t\"./km\": 45808,\n\t\"./km.js\": 45808,\n\t\"./kn\": 34881,\n\t\"./kn.js\": 34881,\n\t\"./ko\": 62951,\n\t\"./ko.js\": 62951,\n\t\"./ku\": 92452,\n\t\"./ku-kmr\": 36063,\n\t\"./ku-kmr.js\": 36063,\n\t\"./ku.js\": 92452,\n\t\"./ky\": 1853,\n\t\"./ky.js\": 1853,\n\t\"./lb\": 77639,\n\t\"./lb.js\": 77639,\n\t\"./lo\": 34502,\n\t\"./lo.js\": 34502,\n\t\"./lt\": 60874,\n\t\"./lt.js\": 60874,\n\t\"./lv\": 18237,\n\t\"./lv.js\": 18237,\n\t\"./me\": 87878,\n\t\"./me.js\": 87878,\n\t\"./mi\": 64234,\n\t\"./mi.js\": 64234,\n\t\"./mk\": 17535,\n\t\"./mk.js\": 17535,\n\t\"./ml\": 43896,\n\t\"./ml.js\": 43896,\n\t\"./mn\": 63046,\n\t\"./mn.js\": 63046,\n\t\"./mr\": 80927,\n\t\"./mr.js\": 80927,\n\t\"./ms\": 37224,\n\t\"./ms-my\": 66332,\n\t\"./ms-my.js\": 66332,\n\t\"./ms.js\": 37224,\n\t\"./mt\": 24866,\n\t\"./mt.js\": 24866,\n\t\"./my\": 24206,\n\t\"./my.js\": 24206,\n\t\"./nb\": 66723,\n\t\"./nb.js\": 66723,\n\t\"./ne\": 45097,\n\t\"./ne.js\": 45097,\n\t\"./nl\": 37529,\n\t\"./nl-be\": 1355,\n\t\"./nl-be.js\": 1355,\n\t\"./nl.js\": 37529,\n\t\"./nn\": 30296,\n\t\"./nn.js\": 30296,\n\t\"./oc-lnc\": 4802,\n\t\"./oc-lnc.js\": 4802,\n\t\"./pa-in\": 77057,\n\t\"./pa-in.js\": 77057,\n\t\"./pl\": 69850,\n\t\"./pl.js\": 69850,\n\t\"./pt\": 15552,\n\t\"./pt-br\": 83726,\n\t\"./pt-br.js\": 83726,\n\t\"./pt.js\": 15552,\n\t\"./ro\": 1717,\n\t\"./ro.js\": 1717,\n\t\"./ru\": 79117,\n\t\"./ru.js\": 79117,\n\t\"./sd\": 61742,\n\t\"./sd.js\": 61742,\n\t\"./se\": 92049,\n\t\"./se.js\": 92049,\n\t\"./si\": 83329,\n\t\"./si.js\": 83329,\n\t\"./sk\": 27619,\n\t\"./sk.js\": 27619,\n\t\"./sl\": 76707,\n\t\"./sl.js\": 76707,\n\t\"./sq\": 84281,\n\t\"./sq.js\": 84281,\n\t\"./sr\": 60436,\n\t\"./sr-cyrl\": 13408,\n\t\"./sr-cyrl.js\": 13408,\n\t\"./sr.js\": 60436,\n\t\"./ss\": 27500,\n\t\"./ss.js\": 27500,\n\t\"./sv\": 6950,\n\t\"./sv.js\": 6950,\n\t\"./sw\": 54222,\n\t\"./sw.js\": 54222,\n\t\"./ta\": 73746,\n\t\"./ta.js\": 73746,\n\t\"./te\": 1130,\n\t\"./te.js\": 1130,\n\t\"./tet\": 34740,\n\t\"./tet.js\": 34740,\n\t\"./tg\": 13378,\n\t\"./tg.js\": 13378,\n\t\"./th\": 20628,\n\t\"./th.js\": 20628,\n\t\"./tk\": 92622,\n\t\"./tk.js\": 92622,\n\t\"./tl-ph\": 30100,\n\t\"./tl-ph.js\": 30100,\n\t\"./tlh\": 22871,\n\t\"./tlh.js\": 22871,\n\t\"./tr\": 33600,\n\t\"./tr.js\": 33600,\n\t\"./tzl\": 18985,\n\t\"./tzl.js\": 18985,\n\t\"./tzm\": 3627,\n\t\"./tzm-latn\": 51145,\n\t\"./tzm-latn.js\": 51145,\n\t\"./tzm.js\": 3627,\n\t\"./ug-cn\": 4790,\n\t\"./ug-cn.js\": 4790,\n\t\"./uk\": 97712,\n\t\"./uk.js\": 97712,\n\t\"./ur\": 99529,\n\t\"./ur.js\": 99529,\n\t\"./uz\": 99141,\n\t\"./uz-latn\": 61737,\n\t\"./uz-latn.js\": 61737,\n\t\"./uz.js\": 99141,\n\t\"./vi\": 98205,\n\t\"./vi.js\": 98205,\n\t\"./x-pseudo\": 20697,\n\t\"./x-pseudo.js\": 20697,\n\t\"./yo\": 37826,\n\t\"./yo.js\": 37826,\n\t\"./zh-cn\": 83994,\n\t\"./zh-cn.js\": 83994,\n\t\"./zh-hk\": 36892,\n\t\"./zh-hk.js\": 36892,\n\t\"./zh-mo\": 43884,\n\t\"./zh-mo.js\": 43884,\n\t\"./zh-tw\": 85136,\n\t\"./zh-tw.js\": 85136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","var EventEmitter = require(\"events\").EventEmitter;\n\nclass Account extends EventEmitter {\n   constructor() {\n      super();\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._listRoles = null;\n      // {array}\n      // a list of all the Defined Roles in the Tenant's system.\n\n      this._listScopes = null;\n      // {array | null}\n      // a list of all the Defined Scopes in the Tenant's sytem.\n\n      this._listUsers = null;\n      // {array | null}\n      // a list of all the Defined Users in the Tenant's system.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var UserConfig = this.AB.Config.userConfig();\n      if (UserConfig) {\n         this.isAuthenticated = true;\n         this._config = UserConfig;\n      }\n\n      var MetaConfig = this.AB.Config.metaConfig();\n      if (MetaConfig) {\n         this._listRoles = MetaConfig.roles || [];\n         this._listScopes = MetaConfig.scopes || [];\n         this._listUsers = MetaConfig.users || [];\n      }\n\n      this.AB.Network.on(\"account.logout\", (context, err, data) => {\n         if (err) {\n            console.error(err);\n            return;\n         }\n         this.emit(\"logout\", data);\n      });\n\n      return Promise.resolve();\n   }\n\n   canSwitcheroo() {\n      return (\n         this.roles((r) => r.uuid === \"320ef94a-73b5-476e-9db4-c08130c64bb8\")\n            .length > 0\n      );\n   }\n\n   isSwitcherood() {\n      return this.AB.Config.userReal();\n   }\n\n   isSystemDesigner() {\n      return (\n         this.roles((r) => r.uuid === \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\")\n            .length > 0\n      );\n   }\n\n   email() {\n      return this._config?.email ?? \"\";\n   }\n\n   language() {\n      return this._config?.languageCode ?? \"en\";\n   }\n\n   logout() {\n      return this.AB.Network.post(\n         {\n            url: \"/auth/logout\",\n            data: { tenantUrl: this.AB.Tenant.setting(\"url\") },\n         },\n         {\n            key: \"account.logout\",\n            context: {},\n         }\n      );\n   }\n\n   roles(fn = () => true) {\n      return (this._config?.roles || []).filter(fn);\n   }\n   rolesAll() {\n      return this._listRoles;\n   }\n\n   scopes() {\n      return this._listScopes;\n   }\n\n   username() {\n      return this._config?.username;\n   }\n\n   userList() {\n      return this._listUsers;\n   }\n\n   uuid() {\n      return this._config?.uuid;\n   }\n\n   imageID() {\n      return this._config?.image_id;\n   }\n\n   sendEmailNotifications() {\n      return this._config?.sendEmailNotifications;\n   }\n}\n\nexport default new Account();\n","//\n// Dialog\n// A common set of UI dialogs to show the User.\n//\n// NOTE: IN TRANSITION: this is our previous method of handling\n// dialogs.  In future, refactor to use webix directly in code.\n//\n\nexport default {\n   // Instance properties\n\n   // Alert\n   // A dialogue that popup with a message, and requires an [ok] button press\n   Alert: function (opts) {\n      webix.alert({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\"opp.dialog.alert.title\", \"*Alert\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.alert.text\",\n               \"*Something is wrong.\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.dialog.alert.ok\", \"*OK\"),\n      });\n   },\n\n   // Confirm\n   // A [Yes] [No] dialogue that pops up with a message\n   Confirm: function (opts) {\n      var title =\n         opts.title ||\n         AB.Multilingual.label(\"opp.dialog.confirm.confirmTitle\", \"* Confirm\");\n      var message =\n         opts.text ||\n         opts.message ||\n         AB.Multilingual.label(\n            \"opp.dialog.confirm.confirmMsg\",\n            \"* Are you sure you want to do this?\"\n         );\n\n      var labelYes =\n         opts.labelYes ||\n         opts.ok ||\n         AB.Multilingual.label(\"opp.common.yes\", \"* yes\");\n      var labelNo =\n         opts.labelNo ||\n         opts.cancel ||\n         AB.Multilingual.label(\"opp.common.no\", \"* no\");\n\n      // var fnYes = opts.fnYes || function () { };\n      // var fnNo = opts.fnNo || function () { };\n\n      webix.confirm({\n         title: title,\n         text: message,\n\n         ok: labelYes,\n         cancel: labelNo,\n\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n\n      // bootbox.dialog({\n      //     title: title,\n      //     message: message,\n      //     buttons: {\n      //         yes: {\n      //             label: labelYes,\n      //             className: 'btn-primary',\n      //             callback: fnYes\n      //         },\n      //         no: {\n      //             label: labelNo,\n      //             className: 'btn-default',\n      //             callback: fnNo\n      //         }\n      //     }\n      // });\n   },\n\n   // ConfirmDelete\n   // A Confirm dialogue geared towards deleting items.\n   // [delete] [cancel]\n   ConfirmDelete: function (opts) {\n      this.Confirm({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteTitle\",\n               \"* Confirm Delete\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.common.delete\", \"* Delete\"),\n         cancel:\n            opts.cancel ||\n            AB.Multilingual.label(\"opp.common.cancel\", \"* Cancel\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteMsg\",\n               \"* Are you sure you want to delete this?\",\n               [\"this\"]\n            ),\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n   },\n\n   // Message\n   // A simple message displayed to the user.  Can time out\n   Message: function (opts) {\n      var message = opts.text || opts.message;\n      var timeout = opts.timeout || 2000;\n\n      webix.message({\n         text: message,\n         expire: timeout,\n      });\n   },\n};\n","/*\n * Multilingual\n * manage our multilingual Translations/Labels/etc.\n */\n\nvar MLClass = require(\"../AppBuilder/platform/ABMLClass\");\n\nclass Multilingual extends MLClass {\n   constructor() {\n      super([], {});\n      // super()\n      //    [] = no labels\n      //    {} = placeholder ABFactory entry until .init() is called.\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._missingLabelID = false;\n      this._missingLabels = {};\n      this._pluginLabelsMissing = {};\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.labels = this.AB.Config.labelConfig();\n      this._languages = this.AB.Config.languageConfig();\n\n      this.pluginLabels = {};\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   currentLanguage() {\n      return this.AB.Account.language();\n   }\n\n   label(key, altText, values = [], postMissing = true) {\n      // part of our transition: L(\"single string\") should start to work:\n      if (typeof altText == \"undefined\" && key) {\n         altText = key;\n      }\n\n      // other case: L(\"single string {0}\", [])\n      if (arguments.length == 2 && Array.isArray(altText)) {\n         values = altText;\n         altText = key;\n      }\n\n      // We need to escape \" characters or else they will get added to the the lang.js\n      // then we get errors next time we try to parse it as JSON (see appbuilder.label-missing)\n      altText = altText.replace(/\"/g, '\\\\\"');\n      key = key.replace(/\"/g, '\\\\\"');\n\n      // NOTE: transition to new Labels\n      // currently our code still uses the L(key, altText, values) format, but\n      // the labels we get back are in L(altText, values) format.\n      //\n      // we are going to keep this like this until we have a well functioning\n      // UI display of our Apps, which should flesh out most of the missing\n      // labels to our files.\n      //\n      // After that, convert our L(k, t, v) to L(t, v)\n\n      var newKey = altText;\n      if (newKey[0] == \"*\") {\n         newKey = newKey.slice(1);\n      }\n      var label = this.labels[newKey];\n      if (!label) {\n         if (postMissing) {\n            this.postMissingLabel(key, altText);\n         }\n         label = altText;\n      }\n\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      label = label.replace(/\\\\\"/g, '\"'); // unescape \" in the label\n      return label;\n   }\n\n   labelPlugin(plugin, altText, values = []) {\n      // 1st check to see if it is a common label from platform:\n      var label = this.label(altText, altText, values, false);\n      if (!label) {\n         // ok, so check to see if it is a Plugin Label:\n         label = this.pluginLabels[plugin][altText];\n      }\n      if (!label) {\n         // !! record it missing.\n         this._pluginLabelsMissing[plugin] =\n            this._pluginLabelsMissing[plugin] || {};\n         this._pluginLabelsMissing[plugin][altText] = altText;\n         label = altText;\n      }\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      return label;\n   }\n\n   languages() {\n      return this._languages;\n\n      // console.error(\n      //    \"Multilingual:languages(): Implement Language Storage/Retrieval.\"\n      // );\n      // return [];\n   }\n\n   pluginLoadLabels(key, labels) {\n      this.pluginLabels[key] = labels;\n   }\n   pluginLabelReport(key) {\n      console.warn(\"missing labels for plugin: \", key);\n      console.warn(\"current language:\", this.currentLanguage());\n      var labels = JSON.stringify(this._pluginLabelsMissing[key], null, 3);\n      console.warn(labels);\n   }\n\n   postMissingLabel(key, altText) {\n      if (this._missingLabelID) {\n         clearTimeout(this._missingLabelID);\n      }\n      var batchLength = 50;\n      var sendBatch = () => {\n         var batchLabels = [];\n         let missingLabels = Object.keys(this._missingLabels).map(\n            (k) => this._missingLabels[k]\n         );\n         if (missingLabels.length <= batchLength) {\n            batchLabels = missingLabels;\n            this._missingLabels = {};\n         } else {\n            for (var i = 0; i <= batchLength; i++) {\n               var l = missingLabels.shift();\n               batchLabels.push(l);\n               delete this._missingLabels[l.key];\n            }\n         }\n         this.AB.Network.post({\n            url: \"/multilingual/label-missing\",\n            data: { labels: JSON.stringify(batchLabels) },\n         })\n            .then(() => {\n               if (Object.keys(this._missingLabels).length > 0) {\n                  sendBatch();\n               }\n            })\n            .catch((err) => {\n               const strErr = err.toString();\n               if (strErr.indexOf(\"unable to get\") > -1) {\n                  console.error(\n                     \"Missing language file for :\" + this.currentLanguage()\n                  );\n               }\n            });\n      };\n      this._missingLabelID = setTimeout(() => {\n         sendBatch();\n      }, 1000);\n\n      this._missingLabels[key] = { key, altText };\n   }\n   ///\n   /// Disable un-needed ABMLClass functionality\n   ///\n   /// NOTE: we are mainly Piggybacking on ABMLClass for it's\n   /// .translate() and .unTranslate() capabilities. So disable these\n   /// for good measure.\n   destroy() {\n      console.error(\"Multilingual:destroy(): Should not be called.\");\n      return Promise.resolve();\n   }\n   save() {\n      console.error(\"Multilingual:save(): Should not be called.\");\n      return Promise.resolve();\n   }\n   toObj() {\n      console.error(\"Multilingual:toObj(): Should not be called.\");\n      return {};\n   }\n   toDefinition() {\n      console.error(\"Multilingual:toDefinition(): Should not be called.\");\n      return {};\n   }\n}\n\nexport default new Multilingual();\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\n/* global navigator Connection */\n// import Account from \"./Account\";\n// import analytics from \"./Analytics\";\n// import EventEmitter from \"eventemitter2\";\nvar EventEmitter = require(\"events\").EventEmitter;\n// import Lock from \"./Lock\";\n\n// import { storage } from \"./Storage\";\n// import Tenant from \"./Tenant\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Temp placeholders until Resources are implemented:\n\n// End Temp\n\nconst Atomic = require(\"atomicjs/dist/atomic.min.js\");\n// Atomic : a small $.ajax() replacement\n\nvar Config = null;\n// {} Config\n// the site specific configuration information\n\nclass NetworkRest extends EventEmitter {\n   constructor(parent) {\n      // {Network} parent\n\n      super({\n         wildcard: true,\n         newListener: false,\n         maxListeners: 0,\n      });\n\n      this.baseURL = null;\n      // {string} .baseURL\n      // the url of our site.\n\n      this.numRetries = 3;\n      // {int} .numRetries\n      // the number or times we should attempt to issue a network request.\n\n      this._network = parent;\n      // {Network} ._network\n      // the Parent Network Resource that the rest of the Platform actually\n      // works with.\n\n      this.isRealTime = false;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n   }\n\n   /**\n    * @method init\n    * @param {ABFactory} AB\n    * @param {object} options\n    * @param {string} options.baseURL\n    * @return {Promise}\n    */\n   init(AB, options) {\n      this.AB = AB;\n\n      Config = this.AB.Config.siteConfig();\n      options = options || {};\n      if (options) {\n         this.baseURL = options.baseURL || Config.appbuilder.urlCoreServer;\n         this.numRetries =\n            options.networkNumRetries || Config.appbuilder.networkNumRetries;\n      }\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(params, jobResponse) {\n      params.type = params.type || \"GET\";\n\n      // data sent to params on a \"GET\" request need to be converted to\n      // uri querystring values:\n      var data = params.data || params.params;\n      if (data) {\n         var useThese = [\"string\", \"number\", \"boolean\"];\n         var search = Object.keys(data)\n            .map(function (key) {\n               var val = data[key];\n               if (useThese.indexOf(typeof val) == -1) {\n                  val = JSON.stringify(val);\n               }\n               return key + \"=\" + encodeURIComponent(val);\n            })\n            .join(\"&\");\n\n         var join = \"?\";\n         if (params.url.indexOf(\"?\") > -1) {\n            join = \"&\";\n         }\n         params.url = [params.url, search].join(join);\n      }\n\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(params, jobResponse) {\n      params.type = params.type || \"POST\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(params, jobResponse) {\n      params.type = params.type || \"PUT\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(params, jobResponse) {\n      params.type = params.type || \"DELETE\";\n      return this._request(params, jobResponse);\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return this._network.isNetworkConnected();\n   }\n\n   salSend(params) {\n      return Atomic(params.url, params).then((packet) => {\n         // {json} packet\n         // the response from Atomic is in format:\n         // {data: {…}, xhr: XMLHttpRequest}\n         // we just want to send back our { status:\"\", data:xxx } packet.\n         return packet.data;\n      });\n   }\n\n   /**\n    * _request()\n    * perform the actual AJAX request for this operation.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   _request(params, jobResponse) {\n      // make sure we don't process too many retries:\n      params._retry = params._retry || 0;\n      if (params._retry >= this.numRetries) {\n         var err = new Error(\n            `Too many retries (${this.numRetries}) for ${params.url}`\n         );\n         err.code = \"E_TOMANYRETRIES\";\n         this.AB.notify.developer(err, {\n            context: \"NetworkRest:_request: Too Many Retries\",\n         });\n         // this.AB.Analytics.logError(err);\n         if (jobResponse) {\n            this._network.publishResponse(jobResponse, err);\n         }\n\n         return Promise.reject(err);\n      }\n\n      return new Promise((resolve, reject) => {\n         params.url = params.url || \"/\";\n         if (params.url[0] == \"/\") {\n            params.url = this.baseURL + params.url;\n         }\n\n         params.headers = params.headers || {};\n         if (this.AB.Account.authToken) {\n            params.headers.Authorization = this.AB.Account.authToken;\n         }\n         params.headers[\"Content-type\"] = \"application/json\";\n\n         var tenantID = this.AB.Tenant.id();\n         if (tenantID) {\n            params.headers[\"tenant-token\"] = tenantID;\n         }\n\n         // params.timeout = params.timeout || 6000;\n\n         if (this.isNetworkConnected()) {\n            params.method = params.method || params.type;\n            params.timeout = 6000; // ??\n            params.data = params.data || params.params;\n            delete params.params;\n\n            this.salSend(params)\n               .then((packet) => {\n                  // TODO: check if packet.status == \"error\"\n                  // and then .publishResponse() as an error\n\n                  //\n                  var data = packet;\n                  if (jobResponse) {\n                     this._network.publishResponse(jobResponse, null, data);\n                  }\n                  resolve(data);\n               })\n               .catch((err) => {\n                  // err.status\n                  // err.statusText\n                  // err.responseText\n                  // err.message  {socket}\n                  // err.stack    {socket}\n\n                  // if this is a network connection error, send the attempt again:\n                  if (\n                     err.statusText == \"Request timeout\" ||\n                     (err.message && err.message.indexOf(\"disconnected\") > -1)\n                  ) {\n                     //// Network Error: conneciton refused, access denied, etc...\n                     this.AB.Analytics.log(\n                        \"NetworkRest._request():network connection error detected. Trying again\"\n                     );\n\n                     params._retry++;\n\n                     // retry the attempt:\n                     this._request(params)\n                        .then((data) => {\n                           // console.log('--- timeout.then():',data);\n                           this.AB.warn(\n                              \"*** NetworkRest._request().then(): attempt resolved.\"\n                           );\n                           resolve(data);\n                        })\n                        .catch((_err) => {\n                           this.AB.notify.developer(_err, {\n                              message:\n                                 \"*** NetworkRest._request().catch(): retry failed:\",\n                           });\n                           reject(_err);\n                        });\n\n                     return;\n                  } else {\n                     // Else attempt to emit() some common Error types for\n                     // additional Platform Handling.\n                     if (err.status == 403) {\n                        this.emit(\"error.badAuth\", err);\n                     } else if (err.status >= 400 && err.status < 500) {\n                        this.emit(\"error.badRequest\", err);\n                     } else if (err.status >= 500) {\n                        this.emit(\"error.badServer\", err);\n                     }\n                  }\n\n                  var packet = null;\n                  if (err.responseText) {\n                     try {\n                        packet = JSON.parse(err.responseText);\n                     } catch (e) {}\n                  }\n                  // if this is an req.ab.error() response:\n                  if (packet && packet.status == \"error\") {\n                     // check if REAUTH Error:\n                     if (packet.id == 5 || packet.code == \"E_REAUTH\") {\n                        this._network.emit(\"reauth\");\n                        return;\n                     }\n\n                     this.AB.notify.developer(new Error(packet.message), {\n                        context:\n                           \"NetworkRest:_request:Error returned from Server (req.ab.error())\",\n                        data: packet.data,\n                        status: packet.status,\n                     });\n                     // this.AB.Analytics.logError(packet.data);\n                     // this.AB.error(packet.data);\n                     if (jobResponse) {\n                        this._network.publishResponse(\n                           jobResponse,\n                           packet,\n                           null\n                        );\n                     }\n                     return reject(packet.data);\n                  } else {\n                     // unknown/unexpected error:\n                     var error = new Error(\n                        `${err.status} ${err.statusText || err.message}: ${\n                           params.method\n                        } ${params.url}`\n                     );\n                     error.response = err.responseText;\n                     error.text = err.statusText;\n                     error.err = err;\n                     error.url = `${params.method} ${params.url}`;\n                     this.AB.notify.developer(error, {\n                        context:\n                           \"NetworkRest:_request:Unknown Error returned from server\",\n                        err,\n                        response: err.responseText,\n                        text: err.statusText || err.message,\n                        url: error.url,\n                     });\n                     // this.AB.Analytics.logError(error);\n                     // this.AB.error(error);\n                     if (jobResponse) {\n                        this._network.publishResponse(jobResponse, error);\n                     }\n                     return reject(error);\n                  }\n               });\n         } else {\n            // now Queue this request params.\n            this.AB.Analytics.log(\n               \"NetworkRest:_request(): Network is offline. Queuing request.\"\n            );\n            this._network\n               .queue(params, jobResponse)\n               .then(() => {\n                  resolve({ status: \"queued\" });\n               })\n               .catch(reject);\n         }\n      });\n   }\n\n   /**\n    * resend()\n    * processes messages that were queued due to network connectivity\n    * issues.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   resend(params, jobResponse) {\n      // var op = params.type.toLowerCase();\n      return this._request(params, jobResponse);\n   }\n}\n\nexport default NetworkRest;\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\nimport performance from \"../utils/performance\";\nimport NetworkRest from \"./NetworkRest\";\n\nconst listSocketEvents = [\n   // NOTE: ABFactory.definitionXXX() will manage emitting these\n   // events internally:\n   // \"ab.abdefinition.create\",\n   // \"ab.abdefinition.update\",\n   // \"ab.abdefinition.delete\",\n   \"ab.datacollection.create\",\n   \"ab.datacollection.update\",\n   \"ab.datacollection.stale\",\n   \"ab.datacollection.delete\",\n   \"ab.inbox.create\",\n   \"ab.inbox.update\",\n   // \"ab.object.update\",\n];\n// {array}\n// The io.socket.* events we are listening for that relate to our datacollection\n// maintainence.\n\nclass NetworkRestSocket extends NetworkRest {\n   constructor(parent) {\n      // {Network} parent\n\n      super(parent);\n\n      this.isRealTime = true;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n\n      // Pass the io.socket.on(*) events to our AB factory.\n      listSocketEvents.forEach((ev) => {\n         io.socket.on(ev, (data) => {\n            // check if the ev contains 'datacollection'\n            // and do a single normalizeData() on the incoming data here\n            // before sending it off to be processed.\n            if (ev.indexOf(\"ab.datacollection\") > -1) {\n               let values = data.data;\n               if (values) {\n                  let obj = this.AB.objectByID(data.objectId);\n                  if (obj) {\n                     let model = obj.model();\n                     if (ev != \"ab.datacollection.delete\") {\n                        let jobID = this.AB.jobID();\n                        performance.mark(`${ev}:normalization`, {\n                           op: \"function\",\n                           data: { jobID },\n                        });\n                        model.normalizeData(data.data);\n                        performance.measure(`${ev}:normalization`);\n                     }\n                  }\n               }\n            }\n            this.AB.emit(ev, data);\n         });\n      });\n   }\n\n   //\n   // Interface API\n   //\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return io.socket.isConnected();\n   }\n\n   salSend(params) {\n      let route, query;\n      try {\n         // Extract paramitized route (ex: `/app_builder/model/:ID`) for performance tracking\n         [, route, query] = params.url.match(\n            /https?:\\/\\/[^/]+(\\/[^?]+)\\??(.*)/\n         );\n         route = route.replace(/\\b[a-fA-F\\d-]{36}\\b/g, \":ID\");\n         performance.mark(route, {\n            op: \"websocket.client\",\n            data: {\n               http: {\n                  query: query || undefined,\n                  method: params.method,\n               },\n               url: params.url,\n            },\n         });\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: `salSend() create performance.mark`,\n         });\n      }\n\n      return new Promise((resolve, reject) => {\n         params.method = params.method.toLowerCase();\n\n         io.socket.request(params, (data, jwres) => {\n            // {json} data\n            // the data response from the request\n            // {json} jwres\n            // A JSON WebSocket Response object.\n            //    {json} jwres.headers :  header values\n            //    {int}  jwres.statusCode : http response code\n            //    {json} jwres.body === resData\n\n            // if this is an  error\n            if (jwres.statusCode >= 400) {\n               // Our NetworkRest.error( err ) should be in this format:\n               // err.status\n               // err.statusText\n               // err.responseText\n\n               var errStr = jwres.error ? jwres.error.toString() : jwres.body;\n\n               var err = new Error(`Socket Error: ${errStr}`);\n               err.status = jwres.statusCode;\n               err.statusText = errStr;\n               err.responseText = jwres.body;\n\n               // on RequestTimeout:\n               // err.statusText == \"Request timeout\"\n\n               reject(err);\n            } else {\n               // some errors like socket disconnected return an Error for data\n               if (data instanceof Error) {\n                  reject(data);\n                  return;\n               }\n\n               if (typeof data == \"string\") {\n                  performance.mark(\"JSON.parse\", { op: \"serialize\" });\n                  data = JSON.parse(data);\n                  performance.measure(\"JSON.parse\");\n               }\n\n               // Got a JSON response but was the service response an error?\n               // this would be a strange case where the .statusCode < 400\n               if (data?.status == \"error\") {\n                  // make sure to reject an err.responseText = data\n                  reject({\n                     status: jwres.statusCode,\n                     responseText: JSON.Stringify(data),\n                  });\n               }\n               // Success!\n               else {\n                  performance.measure(route);\n                  resolve(data);\n               }\n            }\n         });\n      });\n   }\n}\n\nexport default NetworkRestSocket;\n","/*\n * Network.js\n * A network manager for interfacing with our AppBuilder server.\n */\nvar EventEmitter = require(\"events\").EventEmitter;\nimport NetworkRest from \"./NetworkRest\";\nimport NetworkRestSocket from \"./NetworkRestSocket\";\n// import NetworkRelay from \"./NetworkRelay\";\n\nclass Network extends EventEmitter {\n   constructor() {\n      super();\n\n      this.setMaxListeners(0);\n      // we'll have > 10 for sure!\n\n      this.queueLock = null;\n      // {Lock} .queueLock\n      // our semaphore for coordinating our access to our local storage.\n\n      this._config = null;\n      this._network = null;\n      // {NetworkRelay | NetworkRest | NetworkSocket}\n      // the underlying Network connection object actually performing the\n      // communications with the Server.\n      // Which one is specified in the config.appbuilder.networkType setting\n\n      this._queueCount = 0;\n      // {int} _queueCount\n      // the # of network operations currently queued, pending Network\n      // reconnect.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.queueLock = new this.AB.Lock();\n\n      this._config = this.AB.Config.siteConfig();\n      if (this._config) {\n         switch (this._config.appbuilder.networkType) {\n            case \"relay\":\n               // this._network = new NetworkRelay();\n               break;\n\n            case \"socket\":\n               this._network = new NetworkRestSocket(this);\n               break;\n\n            case \"rest\":\n            default:\n               this._network = new NetworkRest(this);\n               break;\n         }\n\n         return this._network.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      //\n      // Handle reconnections and flushing the Queue:\n      //\n      if (io && io.socket) {\n         // When our Socket reconnects, be sure to flush any pending transactions.\n         io.socket.on(\"connected\", () => {\n            this.queueFlush();\n            if (this.idConnectionCheck) {\n               clearTimeout(this.idConnectionCheck);\n               this.idConnectionCheck = null;\n            }\n         });\n      } else {\n         console.error(\"!!! Network.init() : Did not find io.socket\");\n         window.addEventListener(\"online\", () => this.queueFlush());\n      }\n\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.isRealTime\n    * indicates wether or not the current network connection supports\n    * RealTime updates.\n    * @return {bool}\n    */\n   get isRealTime() {\n      return this._network.isRealTime;\n   }\n\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(...params) {\n      return this._network.get(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * this is a CREATE operation.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(...params) {\n      return this._network.post(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * This is for UPDATE/REPLACE operations to data on the server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(...params) {\n      return this._network.put(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(...params) {\n      return this._network.delete(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   _connectionCheck() {\n      // if (!this.idConnectionCheck) {\n      if (this.isNetworkConnected()) {\n         this.queueFlush().catch(() => {\n            // on an error, we are still having connection issues\n            this.idConnectionCheck = setTimeout(() => {\n               this._connectionCheck();\n            }, 250);\n         });\n         this.idConnectionCheck = null;\n      } else {\n         this.idConnectionCheck = setTimeout(() => {\n            this._connectionCheck();\n         }, 250);\n      }\n      // }\n   }\n\n   /**\n    * @method networkStatus\n    * return the connection type currently registered with the network\n    * plugin.\n    * @return {string}\n    */\n   networkStatus() {\n      return navigator.connection.type;\n   }\n\n   /**\n    * @method isNetworkConnected\n    * return true/false if the device is currently connected to the\n    * internet.\n    * @return {bool}\n    */\n   isNetworkConnected() {\n      // if this is a Web Client and using sails.socket.io\n      if (io && io.socket && io.socket.isConnected) {\n         return io.socket.isConnected();\n      }\n\n      // if this isn't a Cordova Plugin, then return navigator data:\n      if (typeof Connection == \"undefined\") {\n         // NOTE: this technically only detects if we are connected to a\n         // network.  It doesn't guarantee we can communicate across the 'net\n         return navigator.onLine;\n      }\n\n      // Cordova Plugin:\n      return this.networkStatus() != Connection.NONE;\n   }\n\n   /**\n    * publishResponse()\n    * emit the requested response for this network operation.\n    * @param {obj} jobResponse\n    * @param {obj} error\n    * @param {obj} data\n    */\n   publishResponse(jobResponse, error, data) {\n      if (data) {\n         data = this.normalizeData(data);\n      }\n      this.emit(jobResponse.key, jobResponse.context, error, data);\n   }\n\n   normalizeData(data) {\n      // Data returning from our server is wrapped in an outer layer of\n      // information that is for our Networking API.\n      // the outer wrapper should be:\n      // on success :\n      // {\n      //   status: \"success\",\n      //   data:{Data For App}\n      // }\n      // on Error:\n      // {\n      //   status: \"error\",\n      //   id: {int} error code\n      //   ... other data here\n      // }\n\n      // we have physically received a data packet from the server,\n      // but we are informed that our transaction was problematic\n      // (400 level USER problem?)\n      if (data.status === \"error\") {\n         // TODO: review Error procedure here\n         return data;\n      }\n\n      // on success\n      // make sure we return the Application Level Data packet:\n      return data.data || data;\n   }\n\n   ////\n   //// Queued Requests\n   ////\n\n   /**\n    * refQueue()\n    * sub classes can override this for their own separate Queue Data\n    * @return {string}\n    */\n   refQueue() {\n      return \"networkQueue\";\n   }\n\n   /**\n    * queueCount()\n    * return the # of messages in the queue.\n    * @return {int}\n    */\n   queueCount() {\n      return this._queueCount;\n   }\n\n   /**\n    * Adds a request to the outgoing queue.\n    *\n    * @param {object} data\n    * @param {object} jobResponse\n    * @return {Promise}\n    */\n   queue(data, jobResponse) {\n      var refQueue = this.refQueue();\n\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n            .then((queue) => {\n               queue = queue || [];\n               queue.push({ data, jobResponse });\n               this.AB.log(\n                  `:::: ${queue.length} request${\n                     queue.length > 1 ? \"s\" : \"\"\n                  } queued`\n               );\n               this._queueCount = queue.length;\n               return this.AB.Storage.set(refQueue, queue);\n            })\n            .then(() => {\n               this.emit(\"queued\");\n               // if we are not already polling the network, start\n               if (!this.idConnectionCheck) {\n                  this._connectionCheck();\n               }\n               this.queueLock.release();\n               resolve();\n            })\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"Error while queueing data\",\n               });\n               this.AB.Analytics.logError(err);\n               reject(err);\n\n               this.queueLock.release();\n            });\n      });\n   }\n\n   /**\n    * queueFlush()\n    * Flush the queue and send the contents to the relay server.\n    */\n   queueFlush() {\n      var refQueue = this.refQueue();\n\n      // if we are not connected, then stop\n      if (!this.isNetworkConnected()) {\n         var error = new Error(\"Not connected to the internet.\");\n         error.code = \"E_NOTCONNECTED\";\n         return Promise.reject(error);\n      }\n\n      // otherwise, attempt to flush the queue:\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n\n            //\n            // Get queue contents\n            //\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n\n            //\n            // Send off each queued request\n            //\n            .then((queue) => {\n               // default to [] if not found\n               queue = queue || [];\n\n               // recursively process each pending queue request\n               var processRequest = (cb) => {\n                  if (queue.length == 0) {\n                     cb();\n                  } else {\n                     var entry = queue.shift();\n                     var params = entry.data;\n                     var job = entry.jobResponse;\n                     this._network\n                        .resend(params, job)\n                        .then(() => {\n                           processRequest(cb);\n                        })\n                        .catch((err) => {\n                           // if the err was due to a network connection error\n                           if (err && err.code == \"E_TOMANYRETRIES\") {\n                              cb(err);\n                              return;\n                           }\n                           // otherwise, try the next\n                           processRequest(cb);\n                        });\n                  }\n               };\n\n               return new Promise((res, rej) => {\n                  processRequest((err) => {\n                     if (err) {\n                        rej(err);\n                     } else {\n                        res();\n                     }\n                  });\n               });\n            })\n\n            //\n            // Clear queue contents\n            //\n            .then(() => {\n               this._queueCount = 0;\n               return this.AB.Storage.set(refQueue, []);\n            })\n\n            // release the Lock\n            .then(() => {\n               this.emit(\"queue.synced\");\n               return this.queueLock.release();\n            })\n\n            // all done.\n            .then(() => {\n               resolve();\n            })\n\n            // respond to errors:\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"commAPI queueFlush error\",\n               });\n               this.AB.Analytics.logError(err);\n\n               this.queueLock.release().then(() => {\n                  reject(err);\n               });\n            });\n      });\n   }\n\n   /**\n    * Reset credentials to a blank state.\n    * @return {Promise}\n    */\n   reset() {\n      return Promise.resolve();\n   }\n\n   /**\n    * type()\n    * return the type of network connection we are using.\n    * [\"rest\", \"socket\", \"relay\"]\n    * @return {string}\n    */\n   type() {\n      return this._config.appbuilder.networkType;\n   }\n\n   // uuid() {\n   //    return this.AB.uuid();\n   // }\n\n   getTokens() {\n      // called in appPage.js : openRelayLoader()\n      return {};\n   }\n}\n\nexport default new Network();\n","/*\n * StorageLocal\n *\n * An interface for storing and retrieving Client Side data.  Data stored\n * in StorageLoacal is NOT encrypted.\n *\n * This implementation is based upon the webix.storage.local library.\n * See: https://docs.webix.com/api__refs__storage.local.html\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nclass StorageLocal extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      // {Webix.storage} object.\n      // We divide the storage data according to the tenant we are working\n      // with.  This way Users who can move between different Tenants can\n      // keep their local data separated.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var tenantID = this.AB.Tenant.id();\n      if (!tenantID) {\n         tenantID = \"noAuth\";\n         // \"noAuth\" is considered the tenant on our Login sequence\n         // which should have a minimum of data stored (language maybe?)\n      }\n\n      this.tenantStorage = this.AB.Webix.storage.prefix(\n         tenantID,\n         this.AB.Webix.storage.local\n      );\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   set(key, value /* , options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.put(key, value);\n      });\n   }\n\n   get(key /*, options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.get(key);\n      });\n   }\n\n   clear(key) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.remove(key);\n      });\n   }\n\n   clearAll() {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.clear();\n      });\n   }\n}\n\nexport default new StorageLocal();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport StorageLocal from \"./StorageLocal.js\";\n\nclass Storage extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      this._config = null;\n      this._storage = null;\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var config = this.AB.Config.siteConfig();\n      if (config) {\n         if (config.storage && config.storage.encrypted) {\n            console.error(\"TODO: Implement Encrypted Storage\");\n            // this._storage = StorageEncrypted;\n            this._storage = StorageLocal;\n         } else {\n            this._storage = StorageLocal;\n         }\n\n         return this._storage.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      return Promise.resolve();\n   }\n\n   set(...params) {\n      return this._storage.set(...params);\n   }\n\n   get(...params) {\n      return this._storage.get(...params);\n   }\n\n   clear(...params) {\n      return this._storage.clear(...params);\n   }\n\n   clearAll(...params) {\n      return this._storage.clearAll(...params);\n   }\n}\n\nexport default new Storage();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nclass Tenant extends EventEmitter {\n   constructor() {\n      super();\n\n      this.text = false;\n      this._config = null;\n      this.textClickToEnter = null;\n   }\n\n   init() {\n      var config = Config.tenantConfig();\n      if (config) {\n         // check if we have options that are stored as a string\n         if (\n            typeof config.options === \"string\" ||\n            config.options instanceof String\n         ) {\n            // if we do try to parse them into a JSON object\n            try {\n               config.options = JSON.parse(config.options);\n            } catch (error) {\n               console.error(error);\n            }\n         }\n         this._config = config;\n         this.textClickToEnter = config.options.textClickToEnter;\n      }\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   id() {\n      if (!this._config || this._config.id == \"??\") {\n         return null;\n      }\n      return this._config.id;\n   }\n\n   setting(key, value) {\n      if (this._config) {\n         if (value) {\n            this._config.options[key] = value;\n            return;\n         }\n         return this._config.options[key];\n      }\n   }\n}\n\nexport default new Tenant();\n","/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\nimport Icons from \"./icons\";\n\nexport default {\n   config: function () {\n      // TODO: decide which config file to return here:\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   },\n   icons: Icons.icons,\n};\n","export default {\n   icons: [\n      \"500px\",\n      \"address-book\",\n      \"address-book-o\",\n      \"address-card\",\n      \"address-card-o\",\n      \"adjust\",\n      \"adn\",\n      \"align-center\",\n      \"align-justify\",\n      \"align-left\",\n      \"align-right\",\n      \"amazon\",\n      \"ambulance\",\n      \"american-sign-language-interpreting\",\n      \"anchor\",\n      \"android\",\n      \"angellist\",\n      \"angle-double-down\",\n      \"angle-double-left\",\n      \"angle-double-right\",\n      \"angle-double-up\",\n      \"angle-down\",\n      \"angle-left\",\n      \"angle-right\",\n      \"angle-up\",\n      \"apple\",\n      \"archive\",\n      \"area-chart\",\n      \"arrow-circle-down\",\n      \"arrow-circle-left\",\n      \"arrow-circle-o-down\",\n      \"arrow-circle-o-left\",\n      \"arrow-circle-o-right\",\n      \"arrow-circle-o-up\",\n      \"arrow-circle-right\",\n      \"arrow-circle-up\",\n      \"arrow-down\",\n      \"arrow-left\",\n      \"arrow-right\",\n      \"arrow-up\",\n      \"arrows\",\n      \"arrows-alt\",\n      \"arrows-h\",\n      \"arrows-v\",\n      \"asl-interpreting\",\n      \"assistive-listening-systems\",\n      \"asterisk\",\n      \"at\",\n      \"audio-description\",\n      \"automobile\",\n      \"backward\",\n      \"balance-scale\",\n      \"ban\",\n      \"bandcamp\",\n      \"bank\",\n      \"bar-chart\",\n      \"bar-chart-o\",\n      \"barcode\",\n      \"bars\",\n      \"bath\",\n      \"bathtub\",\n      \"battery\",\n      \"battery-0\",\n      \"battery-1\",\n      \"battery-2\",\n      \"battery-3\",\n      \"battery-4\",\n      \"battery-empty\",\n      \"battery-full\",\n      \"battery-half\",\n      \"battery-quarter\",\n      \"battery-three-quarters\",\n      \"bed\",\n      \"beer\",\n      \"behance\",\n      \"behance-square\",\n      \"bell\",\n      \"bell-o\",\n      \"bell-slash\",\n      \"bell-slash-o\",\n      \"bicycle\",\n      \"binoculars\",\n      \"birthday-cake\",\n      \"bitbucket\",\n      \"bitbucket-square\",\n      \"bitcoin\",\n      \"black-tie\",\n      \"blind\",\n      \"bluetooth\",\n      \"bluetooth-b\",\n      \"bold\",\n      \"bolt\",\n      \"bomb\",\n      \"book\",\n      \"bookmark\",\n      \"bookmark-o\",\n      \"braille\",\n      \"briefcase\",\n      \"btc\",\n      \"bug\",\n      \"building\",\n      \"building-o\",\n      \"bullhorn\",\n      \"bullseye\",\n      \"bus\",\n      \"buysellads\",\n      \"cab\",\n      \"calculator\",\n      \"calendar\",\n      \"calendar-check-o\",\n      \"calendar-minus-o\",\n      \"calendar-o\",\n      \"calendar-plus-o\",\n      \"calendar-times-o\",\n      \"camera\",\n      \"camera-retro\",\n      \"car\",\n      \"caret-down\",\n      \"caret-left\",\n      \"caret-right\",\n      \"caret-square-o-down\",\n      \"caret-square-o-left\",\n      \"caret-square-o-right\",\n      \"caret-square-o-up\",\n      \"caret-up\",\n      \"cart-arrow-down\",\n      \"cart-plus\",\n      \"cc\",\n      \"cc-amex\",\n      \"cc-diners-club\",\n      \"cc-discover\",\n      \"cc-jcb\",\n      \"cc-mastercard\",\n      \"cc-paypal\",\n      \"cc-stripe\",\n      \"cc-visa\",\n      \"certificate\",\n      \"chain\",\n      \"chain-broken\",\n      \"check\",\n      \"check-circle\",\n      \"check-circle-o\",\n      \"check-square\",\n      \"check-square-o\",\n      \"chevron-circle-down\",\n      \"chevron-circle-left\",\n      \"chevron-circle-right\",\n      \"chevron-circle-up\",\n      \"chevron-down\",\n      \"chevron-left\",\n      \"chevron-right\",\n      \"chevron-up\",\n      \"child\",\n      \"chrome\",\n      \"circle\",\n      \"circle-o\",\n      \"circle-o-notch\",\n      \"circle-thin\",\n      \"clipboard\",\n      \"clock-o\",\n      \"clone\",\n      \"close\",\n      \"cloud\",\n      \"cloud-download\",\n      \"cloud-upload\",\n      \"cny\",\n      \"code\",\n      \"code-fork\",\n      \"codepen\",\n      \"codiepie\",\n      \"coffee\",\n      \"cog\",\n      \"cogs\",\n      \"columns\",\n      \"comment\",\n      \"comment-o\",\n      \"commenting\",\n      \"commenting-o\",\n      \"comments\",\n      \"comments-o\",\n      \"compass\",\n      \"compress\",\n      \"connectdevelop\",\n      \"contao\",\n      \"copy\",\n      \"copyright\",\n      \"creative-commons\",\n      \"credit-card\",\n      \"credit-card-alt\",\n      \"crop\",\n      \"crosshairs\",\n      \"css3\",\n      \"cube\",\n      \"cubes\",\n      \"cut\",\n      \"cutlery\",\n      \"dashboard\",\n      \"dashcube\",\n      \"database\",\n      \"deaf\",\n      \"deafness\",\n      \"dedent\",\n      \"delicious\",\n      \"desktop\",\n      \"deviantart\",\n      \"diamond\",\n      \"digg\",\n      \"dollar\",\n      \"dot-circle-o\",\n      \"download\",\n      \"dribbble\",\n      \"drivers-license\",\n      \"drivers-license-o\",\n      \"dropbox\",\n      \"drupal\",\n      \"edge\",\n      \"edit\",\n      \"eercast\",\n      \"eject\",\n      \"ellipsis-h\",\n      \"ellipsis-v\",\n      \"empire\",\n      \"envelope\",\n      \"envelope-o\",\n      \"envelope-open\",\n      \"envelope-open-o\",\n      \"envelope-square\",\n      \"envira\",\n      \"eraser\",\n      \"etsy\",\n      \"eur\",\n      \"euro\",\n      \"exchange\",\n      \"exclamation\",\n      \"exclamation-circle\",\n      \"exclamation-triangle\",\n      \"expand\",\n      \"expeditedssl\",\n      \"external-link\",\n      \"external-link-square\",\n      \"eye\",\n      \"eye-slash\",\n      \"eyedropper\",\n      \"fa\",\n      \"facebook\",\n      \"facebook-f\",\n      \"facebook-official\",\n      \"facebook-square\",\n      \"fast-backward\",\n      \"fast-forward\",\n      \"fax\",\n      \"feed\",\n      \"female\",\n      \"fighter-jet\",\n      \"file\",\n      \"file-archive-o\",\n      \"file-audio-o\",\n      \"file-code-o\",\n      \"file-excel-o\",\n      \"file-image-o\",\n      \"file-movie-o\",\n      \"file-o\",\n      \"file-pdf-o\",\n      \"file-photo-o\",\n      \"file-picture-o\",\n      \"file-powerpoint-o\",\n      \"file-sound-o\",\n      \"file-text\",\n      \"file-text-o\",\n      \"file-video-o\",\n      \"file-word-o\",\n      \"file-zip-o\",\n      \"files-o\",\n      \"film\",\n      \"filter\",\n      \"fire\",\n      \"fire-extinguisher\",\n      \"firefox\",\n      \"first-order\",\n      \"flag\",\n      \"flag-checkered\",\n      \"flag-o\",\n      \"flash\",\n      \"flask\",\n      \"flickr\",\n      \"floppy-o\",\n      \"folder\",\n      \"folder-o\",\n      \"folder-open\",\n      \"folder-open-o\",\n      \"font\",\n      \"font-awesome\",\n      \"fonticons\",\n      \"fort-awesome\",\n      \"forumbee\",\n      \"forward\",\n      \"foursquare\",\n      \"free-code-camp\",\n      \"frown-o\",\n      \"futbol-o\",\n      \"gamepad\",\n      \"gavel\",\n      \"gbp\",\n      \"ge\",\n      \"gear\",\n      \"gears\",\n      \"genderless\",\n      \"get-pocket\",\n      \"gg\",\n      \"gg-circle\",\n      \"gift\",\n      \"git\",\n      \"git-square\",\n      \"github\",\n      \"github-alt\",\n      \"github-square\",\n      \"gitlab\",\n      \"gittip\",\n      \"glass\",\n      \"glide\",\n      \"glide-g\",\n      \"globe\",\n      \"google\",\n      \"google-plus\",\n      \"google-plus-circle\",\n      \"google-plus-official\",\n      \"google-plus-square\",\n      \"google-wallet\",\n      \"graduation-cap\",\n      \"gratipay\",\n      \"grav\",\n      \"group\",\n      \"h-square\",\n      \"hacker-news\",\n      \"hand-grab-o\",\n      \"hand-lizard-o\",\n      \"hand-o-down\",\n      \"hand-o-left\",\n      \"hand-o-right\",\n      \"hand-o-up\",\n      \"hand-paper-o\",\n      \"hand-peace-o\",\n      \"hand-pointer-o\",\n      \"hand-rock-o\",\n      \"hand-scissors-o\",\n      \"hand-spock-o\",\n      \"hand-stop-o\",\n      \"handshake-o\",\n      \"hard-of-hearing\",\n      \"hashtag\",\n      \"hdd-o\",\n      \"header\",\n      \"headphones\",\n      \"heart\",\n      \"heart-o\",\n      \"heartbeat\",\n      \"history\",\n      \"home\",\n      \"hospital-o\",\n      \"hotel\",\n      \"hourglass\",\n      \"hourglass-1\",\n      \"hourglass-2\",\n      \"hourglass-3\",\n      \"hourglass-end\",\n      \"hourglass-half\",\n      \"hourglass-o\",\n      \"hourglass-start\",\n      \"houzz\",\n      \"html5\",\n      \"i-cursor\",\n      \"id-badge\",\n      \"id-card\",\n      \"id-card-o\",\n      \"ils\",\n      \"image\",\n      \"imdb\",\n      \"inbox\",\n      \"indent\",\n      \"industry\",\n      \"info\",\n      \"info-circle\",\n      \"inr\",\n      \"instagram\",\n      \"institution\",\n      \"internet-explorer\",\n      \"intersex\",\n      \"ioxhost\",\n      \"italic\",\n      \"joomla\",\n      \"jpy\",\n      \"jsfiddle\",\n      \"key\",\n      \"keyboard-o\",\n      \"krw\",\n      \"language\",\n      \"laptop\",\n      \"lastfm\",\n      \"lastfm-square\",\n      \"leaf\",\n      \"leanpub\",\n      \"legal\",\n      \"lemon-o\",\n      \"level-down\",\n      \"level-up\",\n      \"life-bouy\",\n      \"life-buoy\",\n      \"life-ring\",\n      \"life-saver\",\n      \"lightbulb-o\",\n      \"line-chart\",\n      \"link\",\n      \"linkedin\",\n      \"linkedin-square\",\n      \"linode\",\n      \"linux\",\n      \"list\",\n      \"list-alt\",\n      \"list-ol\",\n      \"list-ul\",\n      \"location-arrow\",\n      \"lock\",\n      \"long-arrow-down\",\n      \"long-arrow-left\",\n      \"long-arrow-right\",\n      \"long-arrow-up\",\n      \"low-vision\",\n      \"magic\",\n      \"magnet\",\n      \"mail-forward\",\n      \"mail-reply\",\n      \"mail-reply-all\",\n      \"male\",\n      \"map\",\n      \"map-marker\",\n      \"map-o\",\n      \"map-pin\",\n      \"map-signs\",\n      \"mars\",\n      \"mars-double\",\n      \"mars-stroke\",\n      \"mars-stroke-h\",\n      \"mars-stroke-v\",\n      \"maxcdn\",\n      \"meanpath\",\n      \"medium\",\n      \"medkit\",\n      \"meetup\",\n      \"meh-o\",\n      \"mercury\",\n      \"microchip\",\n      \"microphone\",\n      \"microphone-slash\",\n      \"minus\",\n      \"minus-circle\",\n      \"minus-square\",\n      \"minus-square-o\",\n      \"mixcloud\",\n      \"mobile\",\n      \"mobile-phone\",\n      \"modx\",\n      \"money\",\n      \"moon-o\",\n      \"mortar-board\",\n      \"motorcycle\",\n      \"mouse-pointer\",\n      \"music\",\n      \"navicon\",\n      \"neuter\",\n      \"newspaper-o\",\n      \"object-group\",\n      \"object-ungroup\",\n      \"odnoklassniki\",\n      \"odnoklassniki-square\",\n      \"opencart\",\n      \"openid\",\n      \"opera\",\n      \"optin-monster\",\n      \"outdent\",\n      \"pagelines\",\n      \"paint-brush\",\n      \"paper-plane\",\n      \"paper-plane-o\",\n      \"paperclip\",\n      \"paragraph\",\n      \"paste\",\n      \"pause\",\n      \"pause-circle\",\n      \"pause-circle-o\",\n      \"paw\",\n      \"paypal\",\n      \"pencil\",\n      \"pencil-square\",\n      \"pencil-square-o\",\n      \"percent\",\n      \"phone\",\n      \"phone-square\",\n      \"photo\",\n      \"picture-o\",\n      \"pie-chart\",\n      \"pied-piper\",\n      \"pied-piper-alt\",\n      \"pied-piper-pp\",\n      \"pinterest\",\n      \"pinterest-p\",\n      \"pinterest-square\",\n      \"plane\",\n      \"play\",\n      \"play-circle\",\n      \"play-circle-o\",\n      \"plug\",\n      \"plus\",\n      \"plus-circle\",\n      \"plus-square\",\n      \"plus-square-o\",\n      \"podcast\",\n      \"power-off\",\n      \"print\",\n      \"product-hunt\",\n      \"puzzle-piece\",\n      \"qq\",\n      \"qrcode\",\n      \"question\",\n      \"question-circle\",\n      \"question-circle-o\",\n      \"quora\",\n      \"quote-left\",\n      \"quote-right\",\n      \"ra\",\n      \"random\",\n      \"ravelry\",\n      \"rebel\",\n      \"recycle\",\n      \"reddit\",\n      \"reddit-alien\",\n      \"reddit-square\",\n      \"refresh\",\n      \"registered\",\n      \"remove\",\n      \"renren\",\n      \"reorder\",\n      \"repeat\",\n      \"reply\",\n      \"reply-all\",\n      \"resistance\",\n      \"retweet\",\n      \"rmb\",\n      \"road\",\n      \"rocket\",\n      \"rotate-left\",\n      \"rotate-right\",\n      \"rouble\",\n      \"rss\",\n      \"rss-square\",\n      \"rub\",\n      \"ruble\",\n      \"rupee\",\n      \"s15\",\n      \"safari\",\n      \"save\",\n      \"scissors\",\n      \"scribd\",\n      \"search\",\n      \"search-minus\",\n      \"search-plus\",\n      \"sellsy\",\n      \"send\",\n      \"send-o\",\n      \"server\",\n      \"share\",\n      \"share-alt\",\n      \"share-alt-square\",\n      \"share-square\",\n      \"share-square-o\",\n      \"shekel\",\n      \"sheqel\",\n      \"shield\",\n      \"ship\",\n      \"shirtsinbulk\",\n      \"shopping-bag\",\n      \"shopping-basket\",\n      \"shopping-cart\",\n      \"shower\",\n      \"sign-in\",\n      \"sign-language\",\n      \"sign-out\",\n      \"signal\",\n      \"signing\",\n      \"simplybuilt\",\n      \"sitemap\",\n      \"skyatlas\",\n      \"skype\",\n      \"slack\",\n      \"sliders\",\n      \"slideshare\",\n      \"smile-o\",\n      \"snapchat\",\n      \"snapchat-ghost\",\n      \"snapchat-square\",\n      \"snowflake-o\",\n      \"soccer-ball-o\",\n      \"sort\",\n      \"sort-alpha-asc\",\n      \"sort-alpha-desc\",\n      \"sort-amount-asc\",\n      \"sort-amount-desc\",\n      \"sort-asc\",\n      \"sort-desc\",\n      \"sort-down\",\n      \"sort-numeric-asc\",\n      \"sort-numeric-desc\",\n      \"sort-up\",\n      \"soundcloud\",\n      \"space-shuttle\",\n      \"spinner\",\n      \"spoon\",\n      \"spotify\",\n      \"square\",\n      \"square-o\",\n      \"stack-exchange\",\n      \"stack-overflow\",\n      \"star\",\n      \"star-half\",\n      \"star-half-empty\",\n      \"star-half-full\",\n      \"star-half-o\",\n      \"star-o\",\n      \"steam\",\n      \"steam-square\",\n      \"step-backward\",\n      \"step-forward\",\n      \"stethoscope\",\n      \"sticky-note\",\n      \"sticky-note-o\",\n      \"stop\",\n      \"stop-circle\",\n      \"stop-circle-o\",\n      \"street-view\",\n      \"strikethrough\",\n      \"stumbleupon\",\n      \"stumbleupon-circle\",\n      \"subscript\",\n      \"subway\",\n      \"suitcase\",\n      \"sun-o\",\n      \"superpowers\",\n      \"superscript\",\n      \"support\",\n      \"table\",\n      \"tablet\",\n      \"tachometer\",\n      \"tag\",\n      \"tags\",\n      \"tasks\",\n      \"taxi\",\n      \"telegram\",\n      \"television\",\n      \"tencent-weibo\",\n      \"terminal\",\n      \"text-height\",\n      \"text-width\",\n      \"th\",\n      \"th-large\",\n      \"th-list\",\n      \"themeisle\",\n      \"thermometer\",\n      \"thermometer-0\",\n      \"thermometer-1\",\n      \"thermometer-2\",\n      \"thermometer-3\",\n      \"thermometer-4\",\n      \"thermometer-empty\",\n      \"thermometer-full\",\n      \"thermometer-half\",\n      \"thermometer-quarter\",\n      \"thermometer-three-quarters\",\n      \"thumb-tack\",\n      \"thumbs-down\",\n      \"thumbs-o-down\",\n      \"thumbs-o-up\",\n      \"thumbs-up\",\n      \"ticket\",\n      \"times\",\n      \"times-circle\",\n      \"times-circle-o\",\n      \"times-rectangle\",\n      \"times-rectangle-o\",\n      \"tint\",\n      \"toggle-down\",\n      \"toggle-left\",\n      \"toggle-off\",\n      \"toggle-on\",\n      \"toggle-right\",\n      \"toggle-up\",\n      \"trademark\",\n      \"train\",\n      \"transgender\",\n      \"transgender-alt\",\n      \"trash\",\n      \"trash-o\",\n      \"tree\",\n      \"trello\",\n      \"tripadvisor\",\n      \"trophy\",\n      \"truck\",\n      \"try\",\n      \"tty\",\n      \"tumblr\",\n      \"tumblr-square\",\n      \"turkish-lira\",\n      \"tv\",\n      \"twitch\",\n      \"twitter\",\n      \"twitter-square\",\n      \"umbrella\",\n      \"underline\",\n      \"undo\",\n      \"universal-access\",\n      \"university\",\n      \"unlink\",\n      \"unlock\",\n      \"unlock-alt\",\n      \"unsorted\",\n      \"upload\",\n      \"usb\",\n      \"usd\",\n      \"user\",\n      \"user-circle\",\n      \"user-circle-o\",\n      \"user-md\",\n      \"user-o\",\n      \"user-plus\",\n      \"user-secret\",\n      \"user-times\",\n      \"users\",\n      \"vcard\",\n      \"vcard-o\",\n      \"venus\",\n      \"venus-double\",\n      \"venus-mars\",\n      \"viacoin\",\n      \"viadeo\",\n      \"viadeo-square\",\n      \"video-camera\",\n      \"vimeo\",\n      \"vimeo-square\",\n      \"vine\",\n      \"vk\",\n      \"volume-control-phone\",\n      \"volume-down\",\n      \"volume-off\",\n      \"volume-up\",\n      \"warning\",\n      \"wechat\",\n      \"weibo\",\n      \"weixin\",\n      \"whatsapp\",\n      \"wheelchair\",\n      \"wheelchair-alt\",\n      \"wifi\",\n      \"wikipedia-w\",\n      \"window-close\",\n      \"window-close-o\",\n      \"window-maximize\",\n      \"window-minimize\",\n      \"window-restore\",\n      \"windows\",\n      \"won\",\n      \"wordpress\",\n      \"wpbeginner\",\n      \"wpexplorer\",\n      \"wpforms\",\n      \"wrench\",\n      \"xing\",\n      \"xing-square\",\n      \"y-combinator\",\n      \"y-combinator-square\",\n      \"yahoo\",\n      \"yc\",\n      \"yc-square\",\n      \"yelp\",\n      \"yen\",\n      \"yoast\",\n      \"youtube\",\n      \"youtube-play\",\n      \"youtube-square\",\n   ],\n};\n","import ABFactoryCore from \"./core/ABFactoryCore\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport performance from \"../utils/performance\";\nimport FilterComplex from \"./platform/FilterComplex\";\n\n//\n// Our Common Resources\n//\nimport Config from \"../config/Config.js\";\n// Config : responsible for all the configuration/settings of our instance.\n\nimport Account from \"../resources/Account.js\";\n// Account : manages the current Logged in User and Account information.\n\nimport ClassUI from \"../ui/ClassUI.js\";\n\nimport Dialog from \"./_factory_utils/Dialog.js\";\n// Dialog : common UI dialogs.\n\nimport Multilingual from \"../resources/Multilingual.js\";\n// Multilingual: our interface Labels and language options\n\nimport Network from \"../resources/Network.js\";\n// Network: our interface for communicating to our server\n\nimport Storage from \"../resources/Storage.js\";\n// Storage: manages our interface for local storage\n\nimport ABViewManager from \"./core/ABViewManagerCore\";\n\nimport Tenant from \"../resources/Tenant.js\";\n// Tenant: manages the Tenant information of the current instance\n\nimport UISettings from \"./uiSettings/config.js\";\n// UISettings: detailed settings for our common UI elements\n\nclass ABValidator {\n   constructor(AB) {\n      this.AB = AB;\n      this.errors = [];\n   }\n\n   addError(name, message) {\n      this.errors.push({ name: name, message: message });\n   }\n\n   pass() {\n      return this.errors.length == 0;\n   }\n\n   fail() {\n      return this.errors.length > 0;\n   }\n\n   toValidationObject() {\n      var obj = {\n         error: \"E_VALIDATION\",\n         invalidAttributes: {},\n      };\n\n      var attr = obj.invalidAttributes;\n\n      this.errors.forEach((e) => {\n         attr[e.name] = attr[e.name] || [];\n         attr[e.name].push(e);\n      });\n\n      return obj;\n   }\n\n   updateForm(form) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isFormValidationError(vObj, form);\n   }\n\n   updateGrid(rowID, grid) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isGridValidationError(vObj, rowID, grid);\n   }\n}\n\n//\n// AppBuilder Objects\n//\n\nclass ABFactory extends ABFactoryCore {\n   constructor(definitions) {\n      super(definitions);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // Resources\n      //\n      this.Account = Account;\n      this.Dialog = Dialog;\n      this.Multilingual = Multilingual;\n      this.Network = Network;\n      this.Storage = Storage;\n      this.Tenant = Tenant;\n      this.Webix = webix;\n\n      // Plugin Classes\n      this.ClassUI = ClassUI;\n\n      // additional Class definitions\n      this.Class.FilterComplex = FilterComplex;\n      this.Class.ABViewManager = ABViewManager;\n\n      // Temp placeholders until Resources are implemented:\n      this.Analytics = {\n         log: () => {},\n         logError: () => {},\n      };\n      this.Lock = class Lock {\n         constructor() {}\n\n         acquire() {\n            return Promise.resolve();\n         }\n         release() {\n            return Promise.resolve();\n         }\n      };\n\n      this.UISettings = UISettings;\n\n      this.Validation = {\n         validator: () => {\n            return new ABValidator(this);\n         },\n\n         errorSailsCleanup: function (error) {\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               // dig down to sails provided error object:\n               if (\n                  error.error &&\n                  error.error == \"E_UNKNOWN\" &&\n                  error.raw &&\n                  error.raw.length > 0\n               ) {\n                  error = error.raw[0];\n               }\n\n               // drill down to the embedded .err object if it exists\n               if (error.err) {\n                  error = error.err;\n               }\n\n               // if this is from our server response:\n               if (\n                  error.data &&\n                  error.data.error &&\n                  error.data.error == \"E_VALIDATION\"\n               ) {\n                  error = error.data;\n               }\n            }\n\n            return error;\n         },\n\n         /**\n          * @function AB.Validation.isFormValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of the form elements.\n          *\n          * @codestart\n          * var form = $$('formID');\n          * var values = form.getValues();\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Form.isFormValidationError(err, form)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {obj} error\n          *        the error response object\n          * @param {obj} form\n          *        the webix form instance (or reference)\n          * @return {bool}\n          *         true if error was about a form element.\n          *         false otherwise.\n          */\n         isFormValidationError: function (error, form) {\n            var hasFocused = false;\n            // {bool} have we set focus to form component?\n\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasForm = false;\n                     for (var attr in attrs) {\n                        // if this is a field in the form:\n                        if (form.elements[attr]) {\n                           var errors = attrs[attr];\n                           var msg = [];\n                           errors.forEach(function (err) {\n                              msg.push(err.message);\n                           });\n\n                           // set the invalid error message\n                           form.markInvalid(attr, msg.join(\", \"));\n\n                           // set focus to the 1st form element we mark:\n                           if (!hasFocused) {\n                              form.elements[attr].focus();\n                              hasFocused = true;\n                           }\n\n                           wasForm = true;\n                        }\n                     }\n\n                     if (wasForm) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our form with an error\n            // this was not a validation error so return false\n            return false;\n         },\n\n         /**\n          * @method AB.Validation.isGridValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of our grid columns.\n          *\n          * @codestart\n          * var grid = $$('myGrid');\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Validation.isGridValidationError(err, editor, grid)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {Error} error\n          *        the error response object\n          * @param {integer} row\n          *        the row id of the Grid to update.\n          * @param {webix.datatable} Grid\n          *        the webix grid instance (or reference)\n          * @return {bool}\n          *         true if error was about a grid column.\n          *         false otherwise.\n          */\n         isGridValidationError: function (error, row, Grid) {\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasGrid = false;\n                     for (var attr in attrs) {\n                        Grid.addCellCss(row, attr, \"webix_invalid\");\n                        Grid.addCellCss(row, attr, \"webix_invalid_cell\");\n\n                        var msg = [];\n                        attrs[attr].forEach((e) => {\n                           msg.push(e.message);\n                        });\n\n                        webix.alert({\n                           text: attr + \": \" + msg.join(\", \"),\n                        });\n\n                        wasGrid = true;\n                     }\n\n                     Grid.refresh(row);\n                     Grid.clearSelection();\n\n                     if (wasGrid) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our Grid with an error\n            // this was not a validation error so return false\n            return false;\n         },\n      };\n\n      // TODO: make sure \"error\" s are handled and sent to logs\n      // this.on(\"error\", ()=>{ Analytics.error })\n\n      this.Definitions = {};\n      // {obj} the provided interface for working with the ABDefinition table.\n      // NOTE: on the web client, we simply perform web API calls to perform\n      // the actions.  These are defined below.\n\n      this.on(\"error\", (err) => {\n         // this simply prevents thrown errors if there are no listeners.\n         console.error(err);\n      });\n\n      this._plugins = [];\n      // {array} of loaded Plugin.applications.\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our definitionsXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this.Network.on(\"definition.create\", (context, err, fullDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: fullDef.id,\n            data: fullDef,\n         };\n         this.emit(\"ab.abdefinition.create\", pkt);\n\n         let newDef = this.definitionNew(fullDef);\n         pending?.resolve(newDef);\n      });\n\n      this.Network.on(\"definition.update\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            if (err.toString().indexOf(\"Not Found\") > -1) {\n               return this.definitionCreate(context.values)\n                  .then(pending?.resolve)\n                  .catch(pending?.reject);\n            }\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         this._definitions[context.id] = serverDef;\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: serverDef.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.update\", pkt);\n\n         pending?.resolve(serverDef);\n      });\n\n      this.Network.on(\"definition.delete\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         delete this._definitions[context.id];\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: context.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.delete\", pkt);\n\n         pending?.resolve();\n      });\n\n      //\n      // Rules\n      //\n      const platformRules = {\n         /**\n          * @method toDate\n          *\n          * @param {string} dateText\n          * @param {Object} options - {\n          *                               format: \"string\",\n          *                               ignoreTime: boolean\n          *                            }\n          * @return {Date}\n          */\n         toDate: (dateText = \"\", options = {}) => {\n            if (!dateText) return;\n\n            if (options.ignoreTime) dateText = dateText.replace(/T.*/, \"\");\n\n            let result = options.format\n               ? moment(dateText, options.format)\n               : moment(dateText);\n\n            let supportFormats = [\n               \"YYYY-MM-DD\",\n               \"YYYY/MM/DD\",\n               \"DD/MM/YYYY\",\n               \"MM/DD/YYYY\",\n               \"DD-MM-YYYY\",\n               \"MM-DD-YYYY\",\n            ];\n\n            supportFormats.forEach((format) => {\n               if (!result || !result.isValid())\n                  result = moment(dateText, format);\n            });\n\n            return new Date(result);\n         },\n\n         /**\n          * @method toDateFormat\n          *\n          * @param {Date} date\n          * @param {Object} options - {\n          *           format: \"string\",\n          *           localeCode: \"string\"\n          *         }\n          *\n          * @return {string}\n          */\n         toDateFormat: (date, options) => {\n            if (!date) return \"\";\n\n            let momentObj = moment(date);\n\n            if (options.localeCode) momentObj.locale(options.localeCode);\n\n            return momentObj.format(options.format);\n         },\n\n         /**\n          * @method subtractDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         subtractDate: (date, number, unit) => {\n            return moment(date).subtract(number, unit).toDate();\n         },\n\n         /**\n          * @method addDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         addDate: (date, number, unit) => {\n            return moment(date).add(number, unit).toDate();\n         },\n      };\n      (Object.keys(platformRules) || []).forEach((k) => {\n         this.rules[k] = platformRules[k];\n      });\n   }\n\n   /**\n    * init()\n    * prepare the ABFactory for operation. This includes parsing the\n    * definitions into useable objects, preparing the System Resources, etc.\n    * @return {Promise}\n    */\n   async init() {\n      //\n      // Prepare our Resources First\n      //\n      var allInits = [];\n\n      allInits.push(this.Account.init(this));\n      allInits.push(this.Multilingual.init(this));\n      allInits.push(this.Network.init(this));\n      allInits.push(this.Tenant.init(this));\n\n      await Promise.all(allInits);\n      await this.Storage.init(this);\n      var data = await this.Storage.get(\"local_settings\");\n      this._localSettings = data || {};\n\n      //\n      // Real Time Update Handlers\n      //\n\n      // new ABDefinition created:\n      this.on(\"ab.abdefinition.create\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"created\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition updated:\n      this.on(\"ab.abdefinition.update\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"updated\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition delete:\n      this.on(\"ab.abdefinition.delete\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         delete this._definitions[pkt.id];\n         this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      });\n\n      return super.init();\n\n      // return Promise.all(allInits)\n      //    .then(() => {\n      //       // some Resources depend on the above to be .init() before they can\n      //       // .init() themselves.\n      //       return this.Storage.init(this).then(() => {\n      //          return this.Storage.get(\"local_settings\").then((data) => {\n      //             this._localSettings = data || {};\n      //          });\n      //       });\n      //    })\n      //    .then(() => {\n      //       //\n      //       // RealTime Updates of our ABDefinitions\n      //       //\n\n      //       // new ABDefinition created:\n      //       this.on(\"ab.abdefinition.create\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"created\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition updated:\n      //       this.on(\"ab.abdefinition.update\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"updated\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition delete:\n      //       this.on(\"ab.abdefinition.delete\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          delete this._definitions[pkt.id];\n      //          this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      //       });\n\n      //       return super.init();\n      //    });\n   }\n\n   /**\n    * definiitonCreate(def)\n    * create a new ABDefinition\n    * @param {obj} def\n    *        the value hash of the new definition entry\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionCreate(def) {\n      // we will set our uuid\n      if (typeof def.id == \"undefined\") {\n         def.id = this.uuid();\n         def.json.id = def.id;\n      }\n\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.create\",\n            context: {\n               uuid,\n            },\n         };\n         this.Network.post(\n            {\n               url: `/definition/create`,\n               data: def,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to CREATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to CREATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionCreate()\",\n               message,\n               def,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionDestroy(id)\n    * delete an ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @return {Promise}\n    */\n   async definitionDestroy(id) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.delete\",\n            context: {\n               id,\n               uuid,\n            },\n         };\n         this.Network.delete(\n            {\n               url: `/definition/${id}`,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to DESTROY definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to DELETE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionDestroy()\",\n               message,\n               id,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionUpdate(id, def)\n    * update an existing ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to update.\n    * @param {obj} values\n    *        the value hash of the new definition values\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionUpdate(id, values) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.update\",\n            context: {\n               id,\n               uuid,\n               values,\n            },\n         };\n         this.Network.put(\n            {\n               url: `/definition/${id}`,\n               data: values,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to UPDATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to UPDATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionUpdate()\",\n               message,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   // definitionsParse(defs = []) {\n   //    if (!Array.isArray(defs)) {\n   //       defs = [defs];\n   //    }\n\n   //    // store/replace the incoming definitions\n   //    // 1st: insert ALL our definitions internally\n   //    defs.forEach((d) => {\n   //       this._definitions[d.id] = d;\n   //    });\n   //    // 2nd: Now we can then go through and signal the \"updates\"\n   //    // and the related objects can find their dependent definitions.\n   //    defs.forEach((d) => {\n   //       this.definitionSync(\"updated\", d.id, d);\n   //    });\n\n   //    return Promise.resolve();\n   // }\n\n   /**\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain which group of people we are sending a notification to.\n    * @param {Error} error An error object generated at the point of issue.\n    * @param {json} info Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      performance.notify(domain, error, info);\n   }\n\n   plugins() {\n      return this._plugins;\n   }\n   pluginLoad(p) {\n      this._plugins.push(p);\n   }\n\n   //\n   // Utilities\n   //\n   alert(options) {\n      this.Webix.alert(options);\n   }\n\n   cloneDeep(value) {\n      return _.cloneDeep(value);\n   }\n\n   error(message, ...rest) {\n      var emitData = {\n         message: `ABFactory[${this.Tenant.id()}]:${message.toString()}`,\n      };\n\n      console.error(emitData.message);\n      if (message instanceof Error) {\n         emitData.error = message;\n         // this dumps the error.stack\n         console.error(message);\n      }\n\n      if (rest && rest.length > 0) {\n         rest.forEach((r) => {\n            if (r instanceof Error) {\n               emitData.error = r;\n               // this dumps the error.stack\n               console.error(r);\n            }\n\n            if (typeof r == \"object\") {\n               for (var k in r) {\n                  emitData[k] = r[k];\n                  console.error(k, r[k]);\n               }\n            }\n         });\n      }\n      this.emit(\"error\", emitData);\n   }\n\n   jobID() {\n      return nanoid();\n   }\n\n   Label() {\n      return (...params) => {\n         return this.Multilingual.label(...params);\n      };\n   }\n\n   localSettings(key, value) {\n      if (typeof value == \"undefined\") {\n         // this is a getter:\n         return this._localSettings[key];\n      } else {\n         // setting a value:\n         this._localSettings[key] = value;\n         return this.Storage.set(`local_settings`, this._localSettings);\n      }\n   }\n\n   log(message, ...rest) {\n      console.log(message);\n      rest.forEach((r) => {\n         console.log(r);\n      });\n   }\n\n   /**\n    * @method rules.isUUID\n    * evaluate a given value to see if it matches the format of a uuid\n    * @param {string} key\n    * @return {boolean}\n    */\n   isUUID(key) {\n      var checker = RegExp(\n         \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n         \"i\"\n      );\n      return checker.test(key);\n   }\n\n   merge(...params) {\n      return _.merge(...params);\n   }\n\n   orderBy(...params) {\n      return _.orderBy(...params);\n   }\n\n   uniq(...params) {\n      return _.uniq(...params);\n   }\n\n   kebabCase(...params) {\n      return _.kebabCase(...params);\n   }\n\n   sumBy(...params) {\n      return _.sumBy(...params);\n   }\n\n   meanBy(...params) {\n      return _.meanBy(...params);\n   }\n\n   maxBy(...params) {\n      return _.maxBy(...params);\n   }\n\n   minBy(...params) {\n      return _.minBy(...params);\n   }\n\n   uuid() {\n      return uuidv4();\n   }\n\n   warn(message, ...rest) {\n      console.warn(message);\n      rest.forEach((r) => {\n         console.warn(r);\n      });\n   }\n\n   isString(...params) {\n      return _.isString(params);\n   }\n}\n\nexport default ABFactory;\n","/**\n * ABApplicationCore\n *\n * This is the core ABApplication class that manages the common operations\n * of an ABApplication across platforms.\n *\n * It's primary responsibility is to decode a given set of attributes into\n * a working instance of an ABApplication that can return instances of\n * it's defined sub objects.\n *\n * Platform Specific versions of those objects should be defined in a peer\n * directory named platform. These versions of the objects should override\n * these Core objects with platform specific methods of operation (like\n * .save()).\n *\n * Initially your target application should load your platform/ABApplication.js\n * file, which will include this file and sub class it.\n *\n * However, this file will include the remaining files from your platform/*\n * versions.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManager = require(\"../platform/ABViewManager\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nfunction toBool(val) {\n   if (typeof val == \"undefined\") {\n      return false;\n   }\n\n   if (val === \"\" || val === \"false\" || val === \"0\") {\n      return false;\n   }\n\n   if (val === \"true\" || val === \"1\") {\n      return true;\n   }\n\n   return val;\n}\n\nmodule.exports = class ABApplicationCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\", \"description\"], AB);\n\n      // attributes should be in format:\n      // {\n      //    id:##,\n      //    json:{},\n      //    name:\"XYZ\"\n      // }\n      attributes.json = attributes.json || {};\n\n      // ABApplication Attributes\n      this.id = attributes.id;\n      // {string} uuid\n\n      this.type = attributes.type || \"application\";\n      // {string} .type\n      // the ABDefinition.type of this object.\n\n      this.appType = attributes.appType || \"web\";\n      // {string} .appType\n      // the kind of Application this is. [\"web\", \"mobile\"]\n\n      this.json = attributes.json;\n      if (typeof this.json == \"string\") this.json = JSON.parse(this.json);\n      // {obj} .json\n      // the full settings of this ABApplication\n\n      this.json[\"versionData\"] = attributes.json?.versionData || {\n         versionNumber: \"1.0.0\",\n         changeLog: {\n            \"1.0.0\": {\n               author: \"N/A\",\n               version: \"1.0.0\",\n               keepVersion: 0,\n               commitMessage: \"Initial Version\",\n               timestamp: new Date().toISOString(),\n            },\n         },\n      };\n\n      if (typeof this.json.versionData == \"string\")\n         this.json.versionData = JSON.parse(this.json.versionData);\n      // {obj} .json\n      // the full version log data of this ABApplication\n\n      this.name = attributes.name || this.json.name || \"\";\n      // {string} .name\n      // the hard coded name of this ABDefinition Object, not to be confused\n      // with the .label.  The .name is created at design time and is a text\n      // reference for this object.\n\n      this.icon = attributes.icon || \"fa-rocket\";\n      // {string} .icon\n      // this is a reference to a font awesome icon including the `fa-`\n      // example `fa-child` should be stored for the `child` icon to be used\n      // if user wants to get creative they can add more to this field following\n      // these examples https://fontawesome.com/v4/examples/\n\n      this.isSystemObject = toBool(attributes.isSystemObject);\n      // {bool} .isSystemObject\n      // is this one of the integrated System Objects used by our framework?\n      // Some ABApplications and ABObjects are central to the running of the\n      // AppBuilder site.  They are marked with .isSystemObject = true;  It\n      // requires the role \"System Designer\" in order to edit/modify them.\n\n      this.roleAccess = attributes.roleAccess || [];\n      if (!Array.isArray(this.roleAccess)) {\n         this.roleAccess = [this.roleAccess];\n      }\n      this.roleAccess = this.roleAccess.filter((r) => r);\n      // {array}\n      // the {ABSiteRole.id}s of the roles allowed to work with this\n      // ABApplication. (see .isAccessManaged for more info)\n\n      this.isAccessManaged = JSON.parse(attributes.isAccessManaged || false);\n      // {bool} .isAccessManaged\n      // does this Application imploy the more sophisticated  Access\n      // permissions, or the simpler Role access permissions.\n      // {true} : allows an administrator to set which role can View|Edit|Delete\n      //          elements of an application.\n      // {false}: indicates users having one of the .roleAccess values can have\n      //          full access to this application\n\n      this.accessManagers = attributes.accessManagers;\n      if (typeof this.accessManagers == \"string\")\n         this.accessManagers = JSON.parse(this.accessManagers);\n      // {??} .accessManagers\n      // if .isAccessManaged == true, then .accessManagers contain the definitions\n      // of the detailed access permissions.\n\n      this.isTranslationManaged = JSON.parse(\n         attributes.isTranslationManaged || false\n      );\n      this.translationManagers = attributes.translationManagers;\n      if (typeof this.translationManagers == \"string\")\n         this.translationManagers = JSON.parse(this.translationManagers);\n\n      this.isTutorialManaged = JSON.parse(\n         attributes.isTutorialManaged || false\n      );\n      this.tutorialManagers = attributes.tutorialManagers;\n      if (typeof this.tutorialManagers == \"string\")\n         this.tutorialManagers = JSON.parse(this.tutorialManagers);\n\n      this.hintIDs = attributes.json.hintIDs || [];\n      // {array} .hintIDs\n      // All the {ABHint.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABHint}s are included or excluded from\n      // this app.\n\n      this.objectIDs = attributes.json.objectIDs || [];\n      // {array} .objectIDs\n      // All the {ABObject.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObject}s are included or excluded from this app.\n\n      this.queryIDs = attributes.json.queryIDs || [];\n      // {array} .queryIDs\n      // All the {ABObjectQuery.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObjectQueries}s are included or excluded from\n      // this app.\n\n      this.datacollectionIDs = attributes.json.datacollectionIDs || [];\n      // {array} .datacollectionIDs\n      // All the {ABDataCollection.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABDataCollection}s are included or excluded from\n      // this app.\n\n      // import all our {ABViewPage}s\n      let newPages = [];\n      (attributes.json.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            newPages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.id}] is referenceing an unknown Page[${id}]`,\n               {\n                  appID: this.id,\n                  pageID: id,\n               }\n            );\n            // console.error(\n            //    `App[${this.id}] is referenceing an unknown Page[${id}]`\n            // );\n         }\n      });\n      this._pages = newPages;\n      // {array} ._pages\n      // an array of all the {ABViewPages} this ABApplication offers as\n      // interfaces for working with our Data.\n      // ABViewPages operate within the confines of an ABApplication so\n      // they are created/stored/accessed from within an ABApplication\n\n      (attributes.json.processIDs || []).forEach((pID) => {\n         var p = this.AB.processByID(pID);\n         if (!p) {\n            this.emit(\n               \"warning\",\n               `Application is referencing an unknown process.`,\n               { appID: this.id, processID: pID }\n            );\n         }\n      });\n\n      this.processIDs = attributes.json.processIDs || [];\n      // {array} .processIDs\n      // an array of all the {ABProcess.id}s referenced by this Application.\n\n      // Object List Settings\n      attributes.json.objectListSettings =\n         attributes.json.objectListSettings || {};\n      this.objectListSettings = this.objectListSettings || {};\n      this.objectListSettings.isOpen = JSON.parse(\n         attributes.json.objectListSettings.isOpen || false\n      );\n      this.objectListSettings.searchText =\n         attributes.json.objectListSettings.searchText || \"\";\n      this.objectListSettings.sortDirection =\n         attributes.json.objectListSettings.sortDirection || \"asc\";\n      this.objectListSettings.isGroup = JSON.parse(\n         attributes.json.objectListSettings.isGroup || false\n      );\n\n      // let the MLClass now process the translations:\n      // transition issues:\n      attributes.translations =\n         attributes.translations || attributes.json.translations;\n\n      super.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   get ViewManager() {\n      return ABViewManager;\n   }\n\n   /// ABApplication data methods\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABApplication is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      // if we are on the basic Role assignments:\n      if (!this.isAccessManaged) {\n         (roles || []).forEach((r) => {\n            if (this.roleAccess.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n         return foundRole;\n      }\n\n      // isAccessManaged has been set, so 2 kinds of ppl can\n      // see this App\n      // 1) an AccessManager\n      if (parseInt(this.accessManagers.useRole)) {\n         (roles || []).forEach((r) => {\n            if (this.accessManagers.role.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n      }\n\n      // stop here if found.\n      if (foundRole) return foundRole;\n\n      // 2) someone who has a role that can see one of it's pages.\n      // scan each Page of this Application\n      (this.pages() || []).forEach((p) => {\n         // check to see if that page.isAccessibleForRoles()\n         if (p.isAccessibleForRoles(roles)) {\n            foundRole = true;\n         }\n      });\n      return foundRole;\n   }\n\n   get isWebApp() {\n      return this.appType == \"web\";\n   }\n\n   get isMobile() {\n      return this.appType == \"mobile\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      let versionData = this.json.versionData;\n\n      this.json = super.toObj();\n\n      this.json.name = this.name;\n\n      this.json.versionData = versionData;\n\n      this.json.objectIDs = this.objectIDs;\n\n      this.json.objectListSettings = this.objectListSettings;\n\n      this.json.hintIDs = this.hintIDs;\n\n      this.json.queryIDs = this.queryIDs;\n\n      this.json.datacollectionIDs = this.datacollectionIDs;\n\n      this.json.pageIDs = (this._pages || []).map((p) => p.id);\n\n      this.json.processIDs = this.processIDs || [];\n\n      // // for each MobileApp: compile to json\n      // var currApps = [];\n      // this._mobileApps.forEach((app) => {\n      //    currApps.push(app.toObj())\n      // })\n      // this.json.mobileApps = currApps;\n\n      return {\n         id: this.id,\n         type: this.type || \"application\",\n         appType: this.appType || \"web\",\n         name: this.name,\n         icon: this.icon,\n         isSystemObject: this.isSystemObject,\n         json: this.json,\n         roleAccess: this.roleAccess,\n         translations: this.json.translations,\n         isAccessManaged: this.isAccessManaged,\n         isTranslationManaged: this.isTranslationManaged,\n         isTutorialManaged: this.isTutorialManaged,\n         accessManagers: this.accessManagers,\n         translationManagers: this.translationManagers,\n         tutorialManagers: this.tutorialManagers,\n      };\n   }\n\n   ///\n   /// Mobile Apps\n   ///\n\n   ///\n   /// Datacollections\n   ///\n\n   // datacollectionNew(values) {\n   //    return new ABDataCollectionCore(values, this);\n   // }\n\n   datacollectionsExcluded(filter = () => true) {\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   datacollectionsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Objects\n   ///\n\n   objectsExcluded(filter = () => true) {\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   objectsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Hints\n   ///\n\n   hintsExcluded(filter = () => true) {\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) == -1;\n      }).filter(filter);\n   }\n\n   hintsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   /**\n    * @method connectedObjects()\n    *\n    * return an array of all the connected ABObjects for a given ABObject.\n    *\n    * @param {string} id\n    *        an ID of an ABObject\n    * @return {array}   array of options for webix select\n    *         [ {id, value}, ... ]\n    */\n   connectedObjects(id) {\n      console.error(\n         \"ABApplicationCore.connectedObjects(): who is calling this?\"\n      );\n\n      if (id == \"\") return [];\n\n      // Determine the object from the ID\n      var myObj = this.AB.objectByID(id);\n\n      // Get all the connected Fields for that object\n      var connectedFields = myObj.connectFields();\n      // Store the related fields associatively inside their related Objects ID\n      var connectedObj = {};\n      connectedFields.forEach((f) => {\n         connectedObj[f.settings.linkObject] = this.AB.objectByID(\n            f.settings.linkObject\n         );\n      });\n      // Look up the objects by their ID and push them in an options array\n      var linkedObjects = [];\n      Object.keys(connectedObj).forEach(function (key /*, index */) {\n         linkedObjects.push({\n            id: this[key].id,\n            value: this[key].label,\n         });\n      }, connectedObj /* = this. inside fn */);\n\n      return linkedObjects;\n   }\n\n   /**\n    * @method connectedFields()\n    * return an array of all the connected ABFields for a given ABObject\n    * @param {string} currObjID\n    *        an ID of the current ABObject\n    * @param {string} linkedObjectID\n    *        an ID of the linked ABObject\n    * @return {array}\n    *        array of options for webix select\n    */\n   connectedFields(currObjID, linkedObjectID) {\n      console.error(\"!!! Who is calling this?\");\n\n      // Determine the object from the currObjID\n      var myObj = this.AB.objectByID(currObjID);\n\n      // Get all the connected Fields for our object that match the linkedObjectID\n      var connectedFields = myObj.connectFields(\n         (f) => f.settings.linkObject == linkedObjectID\n      );\n      // Build an arry of options for the webix select\n      var linkedFields = [];\n      connectedFields.forEach((f) => {\n         linkedFields.push({ id: f.columnName, value: f.label });\n      });\n\n      return linkedFields;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    * return an array of all the ABViewPages for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewPages that this fn\n    *        returns true for.\n    * @param {boolean} deep\n    *        flag to search in sub pages\n    * @return {array}\n    *        array of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._pages || this._pages.length < 1) return result;\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         // function searchDeep(curr) {\n         //    let resultsCurr = curr._pages.filter(filter);\n\n         //    for (let p of curr._pages) {\n         //       let resultsP = searchDeep(p);\n         //       if (resultsP.length) {\n         //          resultsCurr = resultsCurr.concat(resultsP);\n         //       }\n         //    }\n         //    // if we get here, end\n         //    return resultsCurr;\n         // }\n\n         // result = searchDeep(this);\n         result = this._searchDeep(this, \"_pages\", filter);\n      }\n      // find root pages\n      else {\n         result = (this._pages || []).filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method _searchDeep()\n    * search each node of a tree and return all matches that pass the provided\n    * filter.\n    * @param {AB*} curr\n    *        An object that contains a tree structure.\n    * @param {string} key\n    *        The curr[key] reference of the array of items to search\n    * @param {function} filter\n    *        The curr[key].filter(filter) that returns true/false if a node is\n    *        to be included in the result.\n    * @return {array}\n    */\n   _searchDeep(curr, key, filter) {\n      let items = curr[key] ?? [];\n      let resultsCurr = items.filter?.(filter) ?? [];\n\n      for (let p of items) {\n         let resultsP = this._searchDeep(p, key, filter);\n         if (resultsP.length) {\n            resultsCurr = resultsCurr.concat(resultsP);\n         }\n      }\n\n      return resultsCurr;\n   }\n\n   ///\n   /// Processes\n   ///\n\n   /**\n    * @method processes()\n    * return an array of all the ABProcesses for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABProcesses that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABProcesses\n    */\n   processes(filter = () => true) {\n      return this.AB.processes((p) => {\n         return this.processIDs.indexOf(p.id) > -1;\n      }).filter(filter);\n   }\n\n   hasProcess(process) {\n      if (process && process.id) {\n         return this.processIDs.indexOf(process.id) > -1;\n      } else {\n         return false;\n      }\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    * return an array of all the Views for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of Views that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of Views\n    */\n   views(filter) {\n      var result = [];\n      var views = [];\n      var pages = [];\n\n      if (\n         (!this._pages || this._pages.length < 1) &&\n         (!this._views || this._views.length < 1)\n      )\n         return result;\n\n      function lookDeep(view) {\n         if (view._pages && view._pages.length) {\n            view._pages.forEach((p) => {\n               // check the page views recusively\n               var pageViews = p.views(filter, true);\n               // if there was a match store it\n               if (pageViews && pageViews.length > 0) {\n                  result = pageViews;\n               }\n               // if no match move on to the subpages\n               if (result.length < 1) {\n                  // loop through each subpage recursively\n                  var subPages = p.pages(filter, true);\n                  // if there was a match store it\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n                  if (result.length < 1) {\n                     lookDeep(p);\n                  }\n               }\n            });\n         }\n      }\n\n      // look at views recursively\n      if (filter) {\n         // look at views recursively (views can have subviews and so on)\n         if (this._views) {\n            views = this._views.filter(filter);\n\n            if (views.length < 1) {\n               this._views.forEach((v) => {\n                  var subViews = v.views(filter, true);\n                  if (subViews && subViews.length > 0) {\n                     views = subViews;\n                  }\n               });\n            }\n         }\n\n         // if no views of the root page match now look at the sub pages and their views\n         if (views.length) {\n            result = views;\n         } else {\n            // check the first level subpages\n            result = this._pages.filter(filter);\n\n            // if no match check each pages views and subpages\n            if (result.length < 1) {\n               // looping through pages\n               lookDeep(this);\n            }\n         }\n      }\n      // find all views\n      else {\n         // recusively gather all views on this view\n         if (this._views) {\n            views = this._views;\n            if (views.length) {\n               views.forEach((v) => {\n                  var subViews = v.views(() => true, true);\n                  if (subViews && subViews.length) {\n                     views = views.concat(subViews);\n                  }\n               });\n            }\n         }\n\n         // recursively gather all pages and their views\n         if (this._pages) {\n            pages = this._pages;\n            if (pages.length) {\n               pages.forEach((p) => {\n                  // grab all views on this page\n                  var pageViews = p.views(() => true, true);\n                  if (pageViews && pageViews.length) {\n                     views = views.concat(pageViews);\n                  }\n                  // grab all subpages on this page\n                  var subPages = p.pages(() => true, true);\n                  if (subPages && subPages.length) {\n                     pages = pages.concat(subPages);\n                     subPages.forEach((sub) => {\n                        var subViews = sub.views(() => true, true);\n                        if (subViews && subViews.length) {\n                           views = views.concat(subViews);\n                        }\n                     });\n                  }\n               });\n            }\n         }\n\n         result = result.concat(pages, views);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewAll()\n    * return a list of all the {ABViewxxx} classes available.\n    * @return {array} of ABView objects\n    */\n   viewAll(fn = () => true) {\n      return this.ViewManager.allViews(fn);\n   }\n\n   ///\n   /// Queries\n   ///\n\n   /**\n    * queriesExcluded()\n    * return a list of ABObjectQuery(s) that are not included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @return {array}\n    */\n   queriesExcluded(filter = () => true) {\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) == -1;\n      }).filter(filter);\n   }\n\n   /**\n    * queriesIncluded()\n    * return a list of ABObjectQuery(s) that are included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @param {fn} [sort] function to sort by, default is .label\n    * @return {array}\n    */\n   queriesIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Roles\n   ///\n\n   /**\n    * @method roles()\n    * return an array of all the ABRole for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which roles to return.\n    * @return {array}   array of ABRole\n    */\n   // roles(filter = () => true) {\n   //    return (this.role || []).filter(filter);\n   // }\n\n   /**\n    * @method urlResolve()\n    * given an object pointer, return the specific object referenced.\n    * pointer must start with a '#', use '/' as delimiters, and either\n    * reference an object's .id, or an object's .property.\n    * for example:\n    * #/_objects   : resolves to the array of ._objects pointed to by this\n    *               application.\n    * #/_objects/[object.id] : reolved to a specific object\n    * #/_objects/[object.id]/_fields/[field.id] : resolves to a specific data field\n    *               refereced by object.id.\n    *\n    * @param {string} pointer : the string url referencing the object you want\n    *                       to retrieve.\n    * @return {obj}\n    */\n   urlResolve(pointer) {\n      var parts = pointer.split(\"/\");\n\n      var parseStep = (obj, steps) => {\n         // we're done.  obj is what we are looking for:\n         if (steps.length == 0) {\n            return obj;\n         }\n\n         // pull the next step key:\n         var key = steps.shift();\n\n         // special case, \"#\" makes sure we are talking about the\n         // Application object\n         if (key == \"#\") {\n            return parseStep(this, steps);\n         }\n\n         // if obj is an [], then key should be an .id reference to\n         // lookup:\n         if (Array.isArray(obj)) {\n            obj = obj.filter(function (o) {\n               return o.id == key;\n            })[0];\n            return parseStep(obj, steps);\n         }\n\n         // otherwise obj should be an {} and key a property:\n         if (obj && obj[key]) {\n            return parseStep(obj[key], steps);\n         }\n\n         if (key == \"_objects\") {\n            console.error(new Error(\"REFACTOR: old objectBy url reference:\"));\n\n            // This can be gotten from our AB\n            var id = steps.shift();\n            return parseStep(this.AB.objectByID(id), steps);\n         }\n\n         // if we got here, there is an error!\n         // console.error('!!! failed to lookup url:'+pointer);\n         console.error(\"!!! failed to lookup url:\" + pointer);\n         return null;\n      };\n\n      return parseStep(this, parts);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer for this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      // NOTE: if we need to expand this to search across\n      // applications, then add in this application.id here:\n      if (acrossApp) return \"#/\" + this.id + \"/\";\n      else return \"#/\";\n   }\n\n   /**\n    * @method urlObject()\n    * return the url pointer for objects in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlObject(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_objects/\";\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for pages in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPage(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_pages/\";\n   }\n\n   /**\n    * @method urlQuery()\n    * return the url pointer for queries in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlQuery(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_queries/\";\n   }\n\n   /**\n    * @method version()\n    * return the current version of this Application.\n    * Version information is in format \"{Major}.{Minor}.{patch}\"\n    * @return {string}\n    */\n   get version() {\n      return this.json?.versionData?.versionNumber ?? \"0.0.0\";\n   }\n\n   ///\n   ///   Object List Settings\n   ///\n   get objectlistIsOpen() {\n      return this.objectListSettings.isOpen;\n   }\n\n   set objectlistIsOpen(isOpen) {\n      this.objectListSettings.isOpen = isOpen;\n   }\n\n   get objectlistSearchText() {\n      return this.objectListSettings.searchText;\n   }\n\n   set objectlistSearchText(searchText) {\n      this.objectListSettings.searchText = searchText;\n   }\n\n   get objectlistSortDirection() {\n      return this.objectListSettings.sortDirection;\n   }\n\n   set objectlistSortDirection(sortDirection) {\n      this.objectListSettings.sortDirection = sortDirection;\n   }\n\n   get objectlistIsGroup() {\n      return this.objectListSettings.isGroup;\n   }\n\n   set objectlistIsGroup(isGroup) {\n      this.objectListSettings.isGroup = isGroup;\n   }\n\n   ///\n   /// Instance generators\n   ///\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABApplication.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      // values.key = ABViewPageCore.common().key;\n      values.key = \"page\";\n\n      return this.ViewManager.newView(values, this, null);\n   }\n\n   /**\n    * @method pageByID()\n    * return pages from the given {id}\n    * @param {string} id\n    *        the uuid of the page to return.\n    * @param {bool} deep\n    *        should this search deep (through all our children's children)\n    * @return {ABViewPage}\n    */\n   pageByID(id, deep = true) {\n      return this.pages((f) => f.id == id, deep)[0];\n   }\n\n   /**\n    * @method viewNew()\n    *\n    * return an instance of a new (unsaved) ABView.\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.ViewManager.newView(values, application, parent);\n   }\n\n   ///\n   /// Utilities\n   ///\n\n   cloneDeep(/* object */) {\n      var errorDepreciated = new Error(\n         \"ABApplicationCore.cloneDeep(): Depreciated!  Use AB.cloneDeep() instead.\"\n      );\n      throw errorDepreciated;\n\n      // return JSON.parse(JSON.stringify(object));\n   }\n};\n","/**\n * ABApplicationMobileCore\n *\n * This is the core ABApplicationMobile class that manages the common operations\n * of a Mobile PWA ABApplication.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManagerMobile = require(\"../platform/ABViewManagerMobile\");\nvar ABApplication = require(\"../platform/ABApplication\");\n\nmodule.exports = class ABApplicationMobileCore extends ABApplication {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.appType = \"mobile\"; // Just making sure.\n      this.networkType = attributes.networkType;\n\n      this.pageDefault = attributes.pageDefault;\n      // {uuid}\n      // the {ABMobilePage}.uuid of the page that is our default Page.\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   get ViewManager() {\n      return ABViewManagerMobile;\n   }\n\n   pageNew(def) {\n      console.error(\"TODO: pageNew for ApplicationMobile\");\n      return null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var json = super.toObj();\n      json.appType = \"mobile\";\n      json.networkType = this.networkType;\n\n      json.pageDefault = this.pageDefault;\n\n      return json;\n   }\n};\n","/*\n * ABDataCollection\n * Defines a set of data that other parts of the Application can work with.\n * it can point to either an ABObject, or ABObjectQuery, and can have an\n * filter, and sorts defined.\n *\n *\n *\n */\n// const ABEmitter = require(\"../platform/ABEmitter\");\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\n// const ABObject = require(\"../platform/ABObject\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n// const RowFilter = require(\"../platform/RowFilter\");\n\nvar DefaultValues = {\n   id: \"uuid\",\n   label: \"\", // label\n   object: {}, // json of ABObject\n   query: {}, // json of ABObjectQuery\n   settings: {\n      datasourceID: \"\", // id of ABObject or ABObjectQuery\n      linkDatacollectionID: \"\", // id of ABDatacollection\n      linkFieldID: \"\", // id of ABField\n      followDatacollectionID: \"\", // id of ABDatacollection\n      objectWorkspace: {\n         filterConditions: {\n            // array of filters to apply to the data table\n            glue: \"and\",\n            rules: [],\n         },\n         sortFields: [], // array of columns with their sort configurations\n      },\n      loadAll: false,\n      // preventPopulate: false, depreciating in favour of populate\n      populate: true, // true/false or array of columns to populate.\n      isQuery: false, // if true it is a query, otherwise it is a object.\n\n      fixSelect: \"\", // _CurrentUser, _FirstRecord, _FirstRecordDefault or row id\n\n      syncType: 1, // 1 (Server), 2 (Client)\n   },\n};\n\nconst QueuedOperations = [];\n// {array} of operations that we want to perform but allow some space\n// between operations.\nvar _queueTimer = null;\n\nfunction runQueue() {\n   // if (!_queueTimer) {\n   //    _queueTimer = setInterval(() => {\n   //       runQueue();\n   //    }, 20);\n   // }\n   if (QueuedOperations.length == 0) {\n      // stop\n      // clearInterval(_queueTimer);\n      _queueTimer = null;\n      return;\n   }\n   var op = QueuedOperations.shift();\n   op.fn();\n   _queueTimer = setTimeout(runQueue, op.timeout);\n}\nfunction queueOperation(fn, timeout = 20) {\n   QueuedOperations.push({ fn, timeout });\n   if (!_queueTimer) {\n      runQueue();\n   }\n}\n\nmodule.exports = class ABDataCollectionCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      attributes = attributes || {};\n\n      // this.application = application;\n\n      this.fromValues(attributes);\n\n      this.__dataCollection = this._dataCollectionNew([]);\n      // {DataCollection}\n      // This is a working instance of a DataCollection, not an {ABDatacCollection}\n      // On web/mobile this is a webix component.  So keep the creation as part of\n      // the platform/ABDataCollection implementation.\n\n      // Set filter value\n      this.refreshFilterConditions();\n\n      this.__bindComponentIds = [];\n      this.__flexComponentIds = [];\n\n      // refresh a data collection\n      // this.init();\n\n      // mark data status does not be initialized\n      this._dataStatus = this.dataStatusFlag.notInitial;\n\n      this.__filterCond = null;\n      // {QueryCondition}\n      // A passed in Query Condition for filtering our DataCollection.\n      // This value is ANDed with our normal filter conditions.\n   }\n\n   /**\n    * contextKey()\n    *\n    * return a unique key that represents data from/for this type of object.\n    *\n    * used when creating Network jobs and needing to be notified when a job\n    * is complete.  We send a contextKey() to the Network job and then listen\n    * for it to know when it is complete.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"datacollection\";\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id;\n      // {string} .id\n      // the uuid of this ABDataCollection Definition.\n\n      this.name = values.name || null;\n      // {string} .name\n      // the unchanging name of this ABDataCollection\n\n      this.type = values.type || \"datacollection\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      values.settings = values.settings || {};\n      this.settings = this.settings || {};\n      // {obj} .settings\n      // the specific operation values for this ABDataCollection\n\n      this.settings.linkDatacollectionID =\n         values.settings.linkDatacollectionID ||\n         DefaultValues.settings.linkDatacollectionID;\n      // {string} .settings.linkDaacollectionID\n      // the uuid of another ABDataCollection that provides the link/trigger\n      // for filtering the values of this ABDataCollection.\n\n      this.settings.linkFieldID =\n         values.settings.linkFieldID || DefaultValues.settings.linkFieldID;\n      // {string} .settings.linkFieldID\n      // the uuid of the ABDataField of the .linkDatacollection ABObject\n      // whose value is the trigger value for this ABDataCollection\n\n      this.settings.followDatacollectionID =\n         values.settings.followDatacollectionID ||\n         DefaultValues.settings.followDatacollectionID;\n      // {string} .settings.followDatacollectionID\n      // the uuid of another ABDataCollection that provides the follow cursor data collection\n\n      this.settings.objectWorkspace = values.settings.objectWorkspace || {\n         filterConditions:\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         sortFields: DefaultValues.settings.objectWorkspace.sortFields,\n      };\n      // {obj} .settings.objectWorkspace\n      // the default settings for what is shown in the AppBuilder's\n      // DataCollection workspace\n\n      this.settings.fixSelect = values.settings.fixSelect;\n\n      // Convert to boolean\n      this.settings.loadAll = JSON.parse(\n         values.settings.loadAll || DefaultValues.settings.loadAll\n      );\n      // {bool} .settings.loadAll\n      // do we load all the data at one time? false == load by pages.\n\n      this.settings.isQuery = JSON.parse(\n         values.settings.isQuery || DefaultValues.settings.isQuery\n      );\n      // {bool} .settings.isQuery\n      // is the data source for this ABDataCollection based upon an\n      // ABObjectQuery?\n\n      this.settings.populate = (() => {\n         // First check .populate\n         if (values.settings.populate != undefined) {\n            return values.settings.populate;\n            // Then check legacy .preventPopulate\n         } else if (\n            values.settings.preventPopulate == true ||\n            values.settings.preventPopulate == \"1\"\n         ) {\n            return false;\n         } else return DefaultValues.settings.populate;\n      })();\n      // {bool | array} populate\n      // Control whcih related connections to populate. Default, true, populates\n      // all connections. False loads no connnections. Also accepts an array of\n      // column names to load specefic connections.\n\n      // Convert to number\n      this.settings.syncType = parseInt(\n         values.settings.syncType || DefaultValues.settings.syncType\n      );\n      // {int} .settings.syncType\n      // how is the data between this ABDataCollection and it's\n      // .datasource synced?\n\n      this.__datasource = null;\n      // {obj} .__datasource\n      // the reference to the ABObject/ABObjectQuery that this ABDataCollection\n      // is based off of.\n\n      this.settings.datasourceID =\n         values.settings.datasourceID || DefaultValues.settings.datasourceID;\n      // {string} .settings.datasourceID\n      // the uuid of the .__datasource object to use\n\n      // now lookup and reference the proper datasource\n      if (this.settings.datasourceID) {\n         // check for an ABObject\n         var obj = this.AB.objectByID(this.settings.datasourceID);\n         if (!obj) {\n            // this must be an ABObjectQuery then ...\n            obj = this.AB.queryByID(this.settings.datasourceID);\n         }\n\n         if (obj) {\n            this.__datasource = obj;\n            this.settings.isQuery = obj.type === \"query\";\n            if (this.settings.isQuery) {\n               if (this.__datasource.isGroup) {\n                  if (!this.__treeCollection)\n                     this.__treeCollection = this._treeCollectionNew();\n                  // {TreeCollection}\n                  // This is a webix TreeCollection (or similar)\n                  // keep it's implementation as part of the platform\n\n                  this.__isGroup = true;\n               }\n            }\n         } else {\n            console.error(\n               `ABDataCollection[${this.name}][${this.id}] unable to find datasource [${this.settings.datasourceID}]`\n            );\n         }\n      }\n\n      // // Populate data source: ABObject or ABObjectQuery\n      // if (values.query && values.query[0]) {\n      //    this.__datasource = new ABObjectQuery(\n      //       values.query[0],\n      //       this.application\n      //    );\n      //    this.settings.isQuery = true;\n\n      //    if (this.__datasource.isGroup) {\n      //       if (!this.__treeCollection)\n      //          this.__treeCollection = this._treeCollectionNew();\n\n      //       this.__isGroup = true;\n      //    }\n      // } else if (values.object && values.object[0]) {\n      //    this.__datasource = new ABObject(values.object[0], this.application);\n      //    this.settings.isQuery = false;\n      // }\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj(); // untranslate the object\n\n      return {\n         id: this.id,\n         name: this.name || this.label,\n         type: this.type || \"datacollection\",\n         settings: this.AB.cloneDeep(this.settings || {}),\n         translations: obj.translations,\n      };\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDatacollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *      .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      return this;\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABDatacollection\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      var removeFromApplications = () => {\n         return new Promise((next, err) => {\n            // this.AB.applications().then((apps) => {\n\n            const apps = this.AB.applications();\n            // NOTE: apps is a webix datacollection\n\n            var allRemoves = [];\n\n            var appsWithObject = apps.filter((a) => {\n               return a.datacollectionsIncluded((o) => o.id == this.id);\n            });\n            appsWithObject.forEach((app) => {\n               allRemoves.push(app.datacollectionRemove(this));\n            });\n\n            return Promise.all(allRemoves).then(next).catch(err);\n            // });\n         });\n      };\n\n      return Promise.resolve()\n         .then(() => {\n            return removeFromApplications();\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @property $dc\n    * return the underlying webix datacollection\n    * @return {webix.datacollection}\n    */\n   get $dc() {\n      return this.__dataCollection;\n   }\n\n   /**\n    * @property datasource\n    * return a object of this component.\n    *\n    * @return {ABObject|ABObjectQuery}\n    */\n   get datasource() {\n      if (!this.__datasource) {\n         if (this.id && this.name) {\n            // occassionally we have blank DCs (without .id or .name)\n            // and I don't want to see errors for those\n            var err = new Error(\n               `DataCollection[${this.name}][${this.id}] missing reference datasource`\n            );\n            this.AB.notify(\"builder\", err, { datacollection: this.toObj() });\n         }\n         return null;\n      }\n      var obj = this.AB.objectByID(this.__datasource.id);\n      if (!obj) {\n         obj = this.AB.queryByID(this.__datasource.id);\n      }\n      return obj;\n   }\n\n   /**\n    * @property datasource\n    * set a object to data collection\n    *\n    * @param {ABObject|ABObjectQuery} object\n    */\n   set datasource(object) {\n      this.__datasource = object;\n\n      this.refreshFilterConditions();\n   }\n\n   /**\n    * @property sourceType\n    * return type of source.\n    *\n    * @return {string} - 'object' or 'query'\n    */\n   get sourceType() {\n      return this.settings.isQuery ? \"query\" : \"object\";\n   }\n\n   /**\n    * @method datacollectionLink\n    * return a ABDatacollection that link of this.\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollectionLink() {\n      if (!this.AB) return null;\n\n      return this.AB.datacollectionByID(this.settings.linkDatacollectionID);\n   }\n\n   /**\n    * @property fieldLink\n    * return a ABFieldConnect field that link of this.\n    *\n    * @return {ABFieldConnect}\n    */\n   get fieldLink() {\n      let object = this.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.linkFieldID);\n   }\n\n   /**\n    * @property model\n    * return a source model\n    *\n    * @return ABModel\n    */\n   get model() {\n      let object = this.datasource; // already notified\n\n      return object ? object.model() : null;\n   }\n\n   get dataStatusFlag() {\n      return {\n         notInitial: 0,\n         initializing: 1,\n         initialized: 2,\n      };\n   }\n\n   get dataStatus() {\n      return this._dataStatus;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   setCursor(itemId) {\n      // If the static cursor is set, then this DC could not set cursor to other rows\n      if (\n         this.settings.fixSelect &&\n         (this.settings.fixSelect != \"_FirstRecordDefault\" ||\n            this.settings.fixSelect == itemId)\n      )\n         return;\n\n      if (this.__treeCollection) {\n         // set cursor of tree collection\n         this.setCursorTree(itemId);\n\n         // pull current row id\n         let currTreeId = this.__treeCollection.getCursor();\n         if (currTreeId) {\n            let currTreeItem = this.__treeCollection.getItem(currTreeId);\n            if (currTreeItem) itemId = currTreeItem._itemId;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc) {\n         // Store the old cursor id\n         this.__previousCursorId = dc.getCursor();\n\n         // clear cursor\n         if (itemId == null) {\n            dc.setCursor(null);\n         }\n         // If set rowId equal current cursor, it will not trigger .onAfterCursorChange event\n         else if (dc.getCursor() == itemId) {\n            this.emit(\"changeCursor\", this.getCursor());\n         }\n         // set new cursor\n         else if (dc.exists(itemId)) {\n            dc.setCursor(itemId);\n         }\n      }\n   }\n\n   /**\n    *\n    * @param {string|number} itemId - Id of item or Id of row data\n    */\n   setCursorTree(itemId) {\n      let tc = this.__treeCollection;\n      if (tc && tc.getCursor() != itemId) {\n         // If it is id of tree collection, then find row id of data\n         let treeCursor = tc.find({ id: itemId }, true);\n         if (treeCursor) {\n            tc.setCursor(itemId);\n         }\n         // If it is not id of tree collection, then find/set root of data\n         else {\n            let treeItem = tc.find({ _itemId: itemId, $parent: 0 }, true);\n            if (treeItem) tc.setCursor(treeItem.id);\n            else tc.setCursor(null);\n         }\n      }\n   }\n\n   getCursor(treeCursor = false) {\n      // Cursor of tree collection\n      if (treeCursor && this.__treeCollection) {\n         let currId = this.__treeCollection.getCursor();\n         if (currId) {\n            let currItem = this.__treeCollection.getItem(currId);\n\n            // filter current id for serialize\n            this.__treeCollection.filter(\n               (item) => item._itemId == currItem._itemId\n            );\n\n            // pull item with child items\n            let currItemAndChilds =\n               this.__treeCollection.serialize()[0] || null;\n\n            // refresh filter\n            this.refreshLinkCursor();\n\n            return currItemAndChilds;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      let currId = dc.getCursor();\n      let currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getFirstRecord() {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getFirstId();\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getNextRecord(record) {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getNextId(record.id);\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   /**\n    * @method refreshLinkCursor\n    *    If the data collection is bound to another and it is the child connection\n    *    it finds it's parents current set cursor and then filters its data\n    *    based off of the cursor.\n    */\n   refreshLinkCursor() {\n      // NOTE: If DC does not set load all data, then it does not need to filter by the parent DC.\n      // because it fetch data when the cursor of the parent DC changes.\n      if (!this.settings.loadAll) return;\n\n      // do not set the filter unless this dc is initialized \"dataStatusFlag==2\"\n      // if (this.dataStatus != this.dataStatusFlag.initialized) return;\n\n      // filter the data in the data collection\n      // using its parents current cursor because all the data in this child\n      // data collection has been loaded and the frontend can decide what is\n      // seen or not seen\n      let linkCursor;\n      let dvLink = this.datacollectionLink;\n      if (dvLink) {\n         linkCursor = dvLink.getCursor();\n      }\n\n      let filterData = (rowData) => {\n         // if link dc cursor is null:\n         // ... if there's no parent show all data\n         // ... if we have a parent hide all data - address cases where user see\n         //     unexpected data (ns_app#318) - should this be a DC setting?\n         if (!linkCursor) return dvLink ? false : true;\n         else return this.isParentFilterValid(rowData);\n      };\n\n      if (this.__dataCollection) this.__dataCollection.filter(filterData);\n      if (this.__treeCollection) this.__treeCollection.filter(filterData);\n   }\n\n   setStaticCursor() {\n      if (this.settings.fixSelect) {\n         // set cursor to the current user\n         if (this.settings.fixSelect == \"_CurrentUser\") {\n            var username = this.currentUserUsername();\n            var userFields = this.datasource.fields((f) => f.key == \"user\");\n\n            // find a row that contains the current user\n            var row = this.__dataCollection.find((r) => {\n               var found = false;\n\n               userFields.forEach((f) => {\n                  if (found || r[f.columnName] == null) return;\n\n                  if (r[f.columnName].filter) {\n                     // Array - isMultiple\n                     found =\n                        r[f.columnName].filter((data) => data.id == username)\n                           .length > 0;\n                  } else if (r[f.columnName] == username) {\n                     found = true;\n                  }\n               });\n\n               return found;\n            }, true);\n\n            // set a first row of current user to cursor\n            if (row) {\n               this.__dataCollection.setCursor(row.id);\n\n               this.setCursorTree(row.id);\n            }\n         } else if (\n            this.settings.fixSelect == \"_FirstRecord\" ||\n            this.settings.fixSelect == \"_FirstRecordDefault\"\n         ) {\n            // // find a row that contains the current user\n            // var row = this.__dataCollection.find((r) => {\n\n            //  var found = false;\n            //  if (!found) {\n            //    found = true;\n            //    return true; // just give us the first record\n            //  }\n\n            // }, true);\n\n            // // set a first row of current user to cursor\n            // if (row)\n            //  this.__dataCollection.setCursor(row.id);\n\n            let currRowId = this.__dataCollection.getCursor();\n            if (\n               !currRowId ||\n               (currRowId && !this.__dataCollection.exists(currRowId))\n            ) {\n               // If current cursor is filtered by parent DC, then select new cursor\n\n               // set a first row to cursor\n               let rowId = this.__dataCollection.getFirstId();\n               // if (rowId) {\n               this.__dataCollection.setCursor(rowId || null);\n\n               this.setCursorTree(rowId);\n               // }\n            }\n         } else {\n            this.__dataCollection.setCursor(this.settings.fixSelect);\n\n            this.setCursorTree(this.settings.fixSelect);\n         }\n      }\n\n      // Set the cursor to the first row\n      if (this.isCursorFollow) {\n         const rowId = this.__dataCollection.getFirstId();\n         this.setCursor(rowId || null);\n         this.setCursorTree(rowId || null);\n\n         // If no data but the parent DC set cursor, then this should be reload data.\n         const dcFollow = this.datacollectionFollow;\n         if (!rowId && dcFollow.getCursor()) {\n            this.loadData();\n         }\n      }\n   }\n\n   ///\n   /// Data\n   ///\n\n   /**\n    * @method filterCondition()\n    * Provide a temporary filter condition to modify the data we are returning.\n    * Used by User search criterias.\n    * @param {json} cond\n    *        A valid QueryCondition to filter the response.\n    */\n   filterCondition(cond = null) {\n      this.__filterCond = cond;\n   }\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      this.initialized = true;\n\n      if (!this.__dataCollection.___AD.onAfterCursorChange) {\n         this.__dataCollection.___AD.onAfterCursorChange =\n            this.__dataCollection.attachEvent(\"onAfterCursorChange\", () => {\n               // debugger;\n               var currData = this.getCursor();\n\n               this.emit(\"changeCursor\", currData);\n            });\n      }\n\n      // relate data functions\n      let isRelated = (relateData, rowId, PK = \"id\") => {\n         if (Array.isArray(relateData)) {\n            return relateData.filter((v) => (v[PK] || v) == rowId).length > 0;\n         } else {\n            return relateData && (relateData[PK] || relateData) == rowId;\n         }\n      };\n\n      // events\n      this.on(\"ab.datacollection.create\", (data) => {\n         // If this DC is following cursor for other DC, then it should not add the new item to their list.\n         if (this.isCursorFollow) return;\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data || !data.data) return;\n\n         let needAdd = false;\n         let updatedVals = [];\n\n         Promise.resolve()\n            .then(() => {\n               return new Promise((next, bad) => {\n                  // Query\n                  if (obj instanceof this.AB.Class.ABObjectQuery) {\n                     let objList =\n                        obj.objects((o) => o.id == data.objectId) || [];\n\n                     needAdd = objList.length > 0;\n\n                     if (!needAdd) return next();\n\n                     let where = {\n                        glue: \"or\",\n                        rules: [],\n                     };\n\n                     objList.forEach((o) => {\n                        let newDataId = data.data[`${o.PK()}`];\n                        if (!newDataId) return;\n\n                        where.rules.push({\n                           key: `${o.alias || obj.objectAlias(o.id)}.${o.PK()}`,\n                           rule: \"equals\",\n                           value: newDataId,\n                        });\n                     });\n\n                     obj.model()\n                        .findAll({\n                           where: where,\n                        })\n                        .then((newQueryData) => {\n                           updatedVals = newQueryData.data || [];\n                           updatedVals.forEach((v) => {\n                              delete v.id;\n                           });\n\n                           next();\n                        })\n                        .catch(bad);\n                  }\n                  // Object\n                  else {\n                     needAdd = obj.id == data.objectId;\n                     updatedVals = [data.data];\n                     next();\n                  }\n               });\n            })\n            .then(() => {\n               if (needAdd) {\n                  // normalize data before add to data collection\n                  var model = obj.model();\n\n                  // UPDATE: this should already have happened in NetworkRestSocket\n                  // when the initial data is received.\n                  //model.normalizeData(updatedVals);\n\n                  (updatedVals || []).forEach((updatedV) => {\n                     // filter condition before add\n                     if (!this.isValidData(updatedV)) return;\n\n                     // check to see if item already exisits in data collection\n                     // and check to see that we are not loading the data serverside from cursor\n                     if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        !this.__reloadWheres\n                     ) {\n                        this.__dataCollection.add(updatedV, 0);\n                        this.emit(\"create\", updatedV);\n                        // this.__dataCollection.setCursor(rowData.id);\n                     } else if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        this.__reloadWheres\n                     ) {\n                        // debugger;\n                        if (this.isParentFilterValid(updatedV)) {\n                           // we track bound components and flexlayout components\n                           var attachedComponents =\n                              this.__bindComponentIds.concat(\n                                 this.__flexComponentIds\n                              );\n                           attachedComponents.forEach((bcids) => {\n                              // if the reload button already exisits move on\n                              if ($$(bcids + \"_reloadView\")) {\n                                 return false;\n                              }\n\n                              // find the position of the data view\n                              var pos = 0;\n                              var parent = $$(bcids).getParentView();\n                              if ($$(bcids).getParentView().index) {\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .index($$(bcids));\n                              } else if (\n                                 $$(bcids).getParentView().getParentView().index\n                              ) {\n                                 // this is a data view and it is inside a\n                                 // scroll view that is inside an accodion\n                                 // so we need to go deeper to add the button\n                                 parent = $$(bcids)\n                                    .getParentView()\n                                    .getParentView();\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .getParentView()\n                                    .index($$(bcids).getParentView());\n                              }\n\n                              // store the datacollection so we can pass it to the button later\n                              var DC = this;\n                              // add a button that reloads the view when clicked\n                              if (parent.addView) {\n                                 var L = this.AB.Label();\n                                 parent.addView(\n                                    {\n                                       id: bcids + \"_reloadView\",\n                                       view: \"button\",\n                                       value: L(\n                                          \"New data available. Click to reload.\"\n                                       ),\n                                       css: \"webix_primary webix_warn\",\n                                       click: function (id, event) {\n                                          DC.reloadData();\n                                          $$(id).getParentView().removeView(id);\n                                       },\n                                    },\n                                    pos\n                                 );\n                              }\n                           });\n                           // this.emit(\"create\", updatedV);\n                        }\n                     }\n                  });\n\n                  if (\n                     this.__treeCollection // && this.__treeCollection.exists(updatedVals.id)\n                  ) {\n                     this.parseTreeCollection({\n                        data: updatedVals,\n                     });\n                  }\n               }\n\n               // ABObject only\n               if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n                  // if it is a linked object\n                  let connectedFields = this.datasource.connectFields(\n                     (f) =>\n                        f.datasourceLink && f.datasourceLink.id == data.objectId\n                  );\n\n                  // It should always be only one item for ABObject\n                  updatedVals = updatedVals[0];\n\n                  // update relation data\n                  if (\n                     updatedVals &&\n                     connectedFields &&\n                     connectedFields.length > 0\n                  ) {\n                     // various PK name\n                     let PK = connectedFields[0].object.PK();\n                     if (!updatedVals.id && PK != \"id\")\n                        updatedVals.id = updatedVals[PK];\n\n                     this.__dataCollection.find({}).forEach((d) => {\n                        let updateItemData = {};\n\n                        connectedFields.forEach((f) => {\n                           var updateRelateVal = {};\n                           if (f && f.fieldLink) {\n                              updateRelateVal =\n                                 updatedVals[f.fieldLink.relationName()] || {};\n                           }\n\n                           let rowRelateVal = d[f.relationName()] || {};\n\n                           let valIsRelated = isRelated(\n                              updateRelateVal,\n                              d.id,\n                              PK\n                           );\n\n                           // Relate data\n                           if (\n                              Array.isArray(rowRelateVal) &&\n                              rowRelateVal.filter(\n                                 (v) =>\n                                    v == updatedVals.id ||\n                                    v.id == updatedVals.id ||\n                                    v[PK] == updatedVals.id\n                              ).length < 1 &&\n                              valIsRelated\n                           ) {\n                              rowRelateVal.push(updatedVals);\n\n                              updateItemData[f.relationName()] = rowRelateVal;\n                              updateItemData[f.columnName] = updateItemData[\n                                 f.relationName()\n                              ].map((v) => v.id || v[PK] || v);\n                           } else if (\n                              !Array.isArray(rowRelateVal) &&\n                              (rowRelateVal != updatedVals.id ||\n                                 rowRelateVal.id != updatedVals.id ||\n                                 rowRelateVal[PK] != updatedVals.id) &&\n                              valIsRelated\n                           ) {\n                              updateItemData[f.relationName()] = updatedVals;\n                              updateItemData[f.columnName] =\n                                 updatedVals.id || updatedVals;\n                           }\n                        });\n\n                        // If this item needs to update\n                        if (Object.keys(updateItemData).length > 0) {\n                           // normalize data before add to data collection\n                           var model = obj.model();\n\n                           // UPDATE: this should already have happened in NetworkRestSocket\n                           // when the initial data is received.\n                           // model.normalizeData(updateItemData);\n\n                           this.__dataCollection.updateItem(\n                              d.id,\n                              updateItemData\n                           );\n\n                           if (this.__treeCollection)\n                              this.__treeCollection.updateItem(\n                                 d.id,\n                                 updateItemData\n                              );\n\n                           this.emit(\n                              \"update\",\n                              this.__dataCollection.getItem(d.id)\n                           );\n                        }\n                     });\n                  }\n               }\n\n               // filter link data collection's cursor\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            });\n      });\n\n      this.on(\"ab.datacollection.update\", (data) => {\n         // {json} data\n         // incoming socket payload:\n         // data.objectId {string} uuid of the ABObject's row that was updated\n         // data.data {json} the new updated value of that row entry.\n\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         // updated values\n         let values = data.data;\n         if (!values) return;\n\n         // DC who is following cursor should update only current cursor.\n         if (this.getCursor()?.id != (values[obj.PK()] ?? values.id))\n            return;\n\n         let needUpdate = false;\n         let isExists = false;\n         let updatedIds = [];\n         // {array}\n         // an array of the row indexs in our DataCollection that have values\n         // that need to be updated.\n\n         let updatedTreeIds = [];\n         let updatedVals = {};\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needUpdate = objList.length > 0;\n            if (needUpdate) {\n               (objList || []).forEach((o) => {\n                  updatedIds = updatedIds.concat(\n                     this.__dataCollection\n                        .find((item) => {\n                           return (\n                              item[\n                                 `${this.datasource.objectAlias(\n                                    o.id\n                                 )}.${o.PK()}`\n                              ] == (values[o.PK()] || values.id)\n                           );\n                        })\n                        .map((o) => o.id) || []\n                  );\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     updatedTreeIds = updatedTreeIds.concat(\n                        this.__treeCollection\n                           .find((item) => {\n                              return (\n                                 item[\n                                    `${this.datasource.objectAlias(\n                                       o.id\n                                    )}.${o.PK()}`\n                                 ] == (values[o.PK()] || values.id)\n                              );\n                           })\n                           .map((o) => o.id) || []\n                     );\n                  }\n               });\n\n               isExists = updatedIds.length > 0;\n\n               updatedVals = this._queryUpdateData(objList, values);\n            }\n         }\n         // Object\n         else {\n            needUpdate = obj.id == data.objectId;\n            if (needUpdate) {\n               // various PK name\n               if (!values.id && obj.PK() != \"id\") values.id = values[obj.PK()];\n\n               updatedIds.push(values.id);\n\n               isExists = this.__dataCollection.exists(values.id);\n               updatedVals = values;\n            }\n         }\n\n         // if it is the source object\n         if (needUpdate) {\n            if (isExists) {\n               if (this.isValidData(updatedVals)) {\n                  // NOTE: this is now done in NetworkRestSocket before\n                  // we start the update events.\n                  // normalize data before update data collection\n                  // var model = obj.model();\n                  // model.normalizeData(updatedVals);\n\n                  if (this.__dataCollection) {\n                     updatedIds = this.AB.uniq(updatedIds);\n                     updatedIds.forEach((itemId) => {\n                        this.__dataCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  if (this.__treeCollection) {\n                     // update data in tree\n                     updatedTreeIds = this.AB.uniq(updatedTreeIds);\n                     updatedTreeIds.forEach((itemId) => {\n                        this.__treeCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  this.emit(\"update\", updatedVals);\n\n                  // If the update item is current cursor, then should tell components to update.\n                  let currData = this.getCursor();\n                  if (currData && currData.id == updatedVals.id) {\n                     this.emit(\"changeCursor\", currData);\n                  }\n               } \n               else {\n                  // Johnny: Here we are simply removing the DataCollection Entries that are\n                  // no longer valid.\n                  // Just cycle through the collected updatedIds and remove them.\n                  updatedIds.forEach((id) => {\n                     // If the item is current cursor, then the current cursor should be cleared.\n                     let currData = this.getCursor();\n                     if (currData && currData.id == id)\n                        this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(id);\n\n                     // TODO: update tree list\n                     // if (this.__treeCollection) {\n                     //  this.__treeCollection.remove(id);\n                     // }\n\n                     this.emit(\"delete\", id);\n                  });\n               }\n            }\n            // filter before add new record\n            else if (this.isValidData(updatedVals)) {\n               // this means the updated record was not loaded yet so we are adding it to the top of the grid\n               // the placement will probably change on the next load of the data\n               this.__dataCollection.add(updatedVals, 0);\n\n               if (this.__treeCollection)\n                  this.parseTreeCollection({\n                     data: [updatedVals],\n                  });\n\n               this.emit(\"create\", updatedVals);\n            }\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n            if (!values.id && PK != \"id\") values.id = values[PK];\n\n            if (this.__dataCollection.count() > 0) {\n               this.__dataCollection.find({}).forEach((d) => {\n                  let updateItemData = {\n                     id: d.id,\n                  };\n\n                  connectedFields.forEach((f) => {\n                     if (!f) return;\n\n                     let updateRelateVal = {};\n                     let rowRelateVal = d[f.relationName()] || {};\n\n                     if (f.fieldLink)\n                        updateRelateVal =\n                           values[f.fieldLink.relationName()] || {};\n\n                     let valIsRelated = isRelated(updateRelateVal, d.id, PK);\n\n                     // Unrelate data\n                     if (\n                        Array.isArray(rowRelateVal) &&\n                        rowRelateVal.filter(\n                           (v) =>\n                              v == values.id ||\n                              v.id == values.id ||\n                              v[PK] == values.id\n                        ).length > 0 &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = rowRelateVal.filter(\n                           (v) => (v.id || v[PK] || v) != values.id\n                        );\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal == values.id ||\n                           rowRelateVal.id == values.id ||\n                           rowRelateVal[PK] == values.id) &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = null;\n                        updateItemData[f.columnName] = null;\n                     }\n\n                     // Relate data or Update\n                     if (Array.isArray(rowRelateVal) && valIsRelated) {\n                        // update relate data\n                        if (\n                           rowRelateVal.filter(\n                              (v) =>\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                           ).length > 0\n                        ) {\n                           rowRelateVal.forEach((v, index) => {\n                              if (\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                              )\n                                 rowRelateVal[index] = values;\n                           });\n                        }\n                        // add new relate\n                        else {\n                           rowRelateVal.push(values);\n                        }\n\n                        updateItemData[f.relationName()] = rowRelateVal;\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal != values.id ||\n                           rowRelateVal.id != values.id ||\n                           rowRelateVal[PK] != values.id) &&\n                        valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = values;\n                        updateItemData[f.columnName] = values.id || values;\n                     }\n                  });\n\n                  // If this item needs to update\n                  if (Object.keys(updateItemData).length > 0) {\n                     // normalize data before add to data collection\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n\n                     // NOTE: We could not normalize relational data because they are not full data\n                     // Merge update data to exists data instead\n\n                     if (this.__treeCollection?.exists(d.id)) {\n                        const treeItem = Object.assign(\n                           this.__treeCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__treeCollection.updateItem(d.id, treeItem);\n                     }\n\n                     if (this.__dataCollection?.exists(d.id)) {\n                        const dcItem = Object.assign(\n                           this.__dataCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__dataCollection.updateItem(d.id, dcItem);\n                        this.emit(\n                           \"update\",\n                           this.__dataCollection.getItem(d.id)\n                        );\n                     }\n                  }\n               });\n            }\n         }\n\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      // We are subscribing to notifications from the server that an item may be stale and needs updating\n      // We will improve this later and verify that it needs updating before attempting the update on the client side\n      this.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         // if we don't have a datasource or model, there is nothing we can do here:\n         // Verify the datasource has the object we are listening for if not just stop here\n         if (\n            !this.datasource ||\n            !this.model ||\n            this.datasource.id != data.objectId\n         ) {\n            return;\n         }\n\n         // updated values\n         var values = data.data;\n\n         if (!values) return;\n\n         // use the Object's defined Primary Key:\n         var PK = this.model.object.PK();\n         if (!values[PK]) {\n            PK = \"id\";\n         }\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.[PK] != (values[PK] ?? values.id)\n         ) {\n            return;\n         }\n\n         if (values) {\n            if (this.__dataCollection.exists(values[PK])) {\n               var cond = { where: {} };\n               cond.where[PK] = values[PK];\n               // this data collection has the record so we need to query the server to find out what it's latest data is so we can update all instances\n               this.model.staleRefresh(cond).then((res) => {\n                  // check to make sure there is data to work with\n                  if (Array.isArray(res.data) && res.data.length) {\n                     // debugger;\n                     let obj = this.datasource;\n                     if (!obj) return;\n                     // normalize data before add to data collection\n\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n                     //var model = obj.model();\n                     // model.normalizeData(res.data[0]);\n\n                     // tell the webix data collection to update using their API with the row id (values.id) and content (res.data[0])\n                     if (this.__dataCollection.exists(values[PK])) {\n                        this.__dataCollection.updateItem(\n                           values[PK],\n                           res.data[0]\n                        );\n                     }\n\n                     // If the update item is current cursor, then should tell components to update.\n                     var currData = this.getCursor();\n                     if (currData && currData[PK] == values[PK]) {\n                        this.emit(\"changeCursor\", currData);\n                     }\n                  } else {\n                     // If there is no data in the object then it was deleted...lets clean things up\n                     // If the deleted item is current cursor, then the current cursor should be cleared.\n                     var currId = this.getCursor();\n                     if (currId == values[PK]) this.emit(\"changeCursor\", null);\n\n                     this.__dataCollection.remove(values[PK]);\n                     this.emit(\"delete\", values[PK]);\n                  }\n               });\n            }\n         }\n\n         // filter link data collection's cursor\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      this.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         let deleteId = data.data;\n         let needDelete = false;\n         let deletedIds = [];\n         let deletedTreeIds = [];\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needDelete = objList.length > 0;\n            if (needDelete) {\n               (objList || []).forEach((o) => {\n                  deletedIds =\n                     this.__dataCollection\n                        .find((item) => {\n                           return item[`${o.alias}.${o.PK()}`] == deleteId;\n                        })\n                        .map((o) => o.id) || [];\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     deletedTreeIds =\n                        this.__treeCollection\n                           .find((item) => {\n                              return item[`${o.alias}.${o.PK()}`] == deleteId;\n                           })\n                           .map((o) => o.id) || [];\n                  }\n               });\n            }\n         }\n         // Object\n         else {\n            needDelete = obj.id == data.objectId;\n            if (needDelete) {\n               deletedIds.push(deleteId);\n            }\n         }\n\n         // if it is the source object\n         if (needDelete) {\n            // If the deleted item is current cursor, then the current cursor should be cleared.\n            var currData = this.getCursor();\n\n            deletedIds.forEach((delId) => {\n               if (currData && currData[obj.PK()] == delId)\n                  this.emit(\"changeCursor\", null);\n\n               if (this.__dataCollection.exists(delId))\n                  this.__dataCollection.remove(delId);\n            });\n\n            if (this.__treeCollection) {\n               deletedTreeIds.forEach((delId) => {\n                  if (this.__treeCollection.exists(delId))\n                     this.__treeCollection.remove(delId);\n               });\n            }\n\n            if (deletedIds[0]) this.emit(\"delete\", deletedIds[0]);\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n\n            this.__dataCollection.find({}).forEach((d) => {\n               let updateRelateVals = {};\n\n               connectedFields.forEach((f) => {\n                  let relateVal = d[f.relationName()];\n                  if (relateVal == null) return;\n\n                  if (\n                     Array.isArray(relateVal)\n                     // JOHNNY: for speed improvements, don't make this check:\n                     // just do it and that will reduce 1x through the array.\n                     // &&\n                     // relateVal.filter(\n                     //    (v) =>\n                     //       v == deleteId ||\n                     //       v.id == deleteId ||\n                     //       v[PK] == deleteId\n                     // ).length > 0\n                  ) {\n                     updateRelateVals[f.relationName()] = relateVal.filter(\n                        (v) => (v.id || v[PK] || v) != deleteId\n                     );\n                     updateRelateVals[f.columnName] = updateRelateVals[\n                        f.relationName()\n                     ].map((v) => v.id || v[PK] || v);\n                  } else if (\n                     relateVal == deleteId ||\n                     relateVal.id == deleteId ||\n                     relateVal[PK] == deleteId\n                  ) {\n                     updateRelateVals[f.relationName()] = null;\n                     updateRelateVals[f.columnName] = null;\n                  }\n               });\n\n               // If this item needs to update\n               if (Object.keys(updateRelateVals).length > 0) {\n                  // normalize data before add to data collection\n\n                  // var model = obj.model();\n                  // model.normalizeData(updateRelateVals);\n\n                  this.__dataCollection.updateItem(d.id, updateRelateVals);\n\n                  if (this.__treeCollection)\n                     this.__treeCollection.updateItem(d.id, updateRelateVals);\n\n                  this.emit(\"update\", this.__dataCollection.getItem(d.id));\n               }\n            });\n         }\n      });\n\n      // add listeners when cursor of link data collection is changed\n      const linkDC = this.datacollectionLink;\n      // if (linkDC && this.settings.loadAll) {\n      if (linkDC) {\n         this.eventAdd({\n            emitter: linkDC,\n            eventName: \"changeCursor\",\n            listener: (currentCursor) => {\n               // NOTE: we can clear data here to update UI display, then data will be fetched when webix.dataFeed event\n               if (!this.settings?.loadAll && currentCursor?.id != linkDC.previousCursorId)\n                  this.clearAll();\n\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n      }\n\n      // add listeners when cursor of the followed data collection is changed\n      const followDC = this.datacollectionFollow;\n      if (followDC) {\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"changeCursor\",\n            listener: () => {\n               const followCursor = followDC.getCursor();\n               const currentCursor = this.getCursor();\n\n               // If the cursor is not the new, then it should not reload.\n               if (followCursor?.[followDC.datasource.PK()] == currentCursor?.[this.datasource.PK()])\n                  return;\n\n               this.clearAll();\n               this.loadData();\n            },\n         });\n      }\n   }\n\n   /*\n    * waitForDataCollectionToInitialize()\n    * there are certain situations where this datacollection shouldn't\n    * load until another one has loaded.  In those cases, the fn()\n    * will wait for the required datacollection to emit \"initializedData\"\n    * before continuing on.\n    * @param {ABViewDataCollection} DC\n    *      the DC this datacollection depends on.\n    * @returns {Promise}\n    */\n   async waitForDataCollectionToInitialize(DC, msg) {\n      DC.init();\n\n      return new Promise((resolve, reject) => {\n         switch (DC.dataStatus) {\n            // if that DC hasn't started initializing yet, start it!\n            case DC.dataStatusFlag.notInitial:\n               DC.loadData().catch(reject);\n            // no break;\n\n            // once in the process of initializing\n            /* eslint-disable no-fallthrough*/\n            case DC.dataStatusFlag.initializing:\n               /* eslint-enable no-fallthrough*/\n               // listen for \"initializedData\" event from the DC\n               // then we can continue.\n               this.eventRemove(\"initializedData\");\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"initializedData\",\n                  listener: () => {\n                     // go next\n                     resolve();\n                  },\n               });\n               break;\n\n            // if it is already initialized, we can continue:\n            case DC.dataStatusFlag.initialized:\n               resolve();\n               break;\n\n            // just in case, if the status is not known, just continue\n            default:\n               resolve();\n               break;\n         }\n      });\n   }\n\n   async loadData(start, limit) {\n      // mark data status is initializing\n      if (this._dataStatus == this.dataStatusFlag.notInitial) {\n         this._dataStatus = this.dataStatusFlag.initializing;\n         this.emit(\"initializingData\", {});\n      }\n\n      var obj = this.datasource;\n      if (obj == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      var model = obj.model();\n      if (model == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      // pull the defined sort values\n      var sorts = this.settings.objectWorkspace.sortFields || [];\n\n      // pull filter conditions\n      let wheres = this.AB.cloneDeep(\n         this.settings.objectWorkspace.filterConditions ?? null\n      );\n      // if we pass new wheres with a reload use them instead\n      if (this.__reloadWheres) {\n         wheres = this.__reloadWheres;\n      }\n\n      const __additionalWheres = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (this.__filterCond) {\n         __additionalWheres.rules.push(this.__filterCond);\n      }\n\n      // Filter by a selected cursor of a link DC\n      const dataCollectionLink = this.datacollectionLink;\n      const fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         const linkCursorId = dataCollectionLink?.getCursor()?.id;\n         if (linkCursorId) {\n            __additionalWheres.rules.push({\n               alias: fieldLink.alias, // ABObjectQuery\n               key: fieldLink.id,\n               rule: fieldLink.alias ? \"contains\" : \"equals\", // NOTE: If object is query, then use \"contains\" because ABOBjectQuery return JSON\n               value: fieldLink.getRelationValue(\n                  dataCollectionLink.__dataCollection.getItem(linkCursorId)\n               ),\n            });\n         }\n      }\n      // pull data rows following the follow data collection\n      else if (this.datacollectionFollow) {\n         const followCursor = this.datacollectionFollow.getCursor();\n         // store the PK as a variable\n         let PK = this.datasource.PK();\n         // if the datacollection we are following is a query\n         // add \"BASE_OBJECT.\" to the PK so we can select the\n         // right value to report the cursor change to\n         if (this.datacollectionFollow.settings.isQuery) {\n            PK = \"BASE_OBJECT.\" + PK;\n         }\n         if (followCursor) {\n            start = 0;\n            limit = null;\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: followCursor[PK],\n                  },\n               ],\n            };\n         }\n         // Set no return rows\n         else {\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: \"NO RESULT ROW\",\n                  },\n               ],\n            };\n         }\n      }\n\n      // Combine setting & program filters\n      if (__additionalWheres.rules.length) {\n         __additionalWheres.rules.unshift(wheres);\n         wheres = __additionalWheres;\n      }\n\n      // remove any null in the .rules\n      if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n\n      // set query condition\n      var cond = {\n         where: wheres || {},\n         // limit: limit || 20,\n         skip: start || 0,\n         sort: sorts,\n         populate:\n            this.settings.populate ??\n            (this.settings.preventPopulate ? false : true),\n      };\n\n      //// NOTE: we no longer set a default limit on loadData() but\n      //// require the platform.loadData() to pass in a default limit.\n      if (limit != null) {\n         cond.limit = limit;\n      }\n\n      // if settings specify loadAll, then remove the limit\n      if (this.settings.loadAll && !this.isCursorFollow) {\n         delete cond.limit;\n      }\n\n      //\n      // Step 1: make sure any DataCollections we are linked to are\n      // initialized first.  Then proceed with our initialization.\n      //\n      const parentDc = this.datacollectionLink ?? this.datacollectionFollow;\n      // If we are linked to another datacollection then wait for it\n      if (parentDc) {\n         await this.waitForDataCollectionToInitialize(parentDc);\n      }\n\n      //\n      // Step 2: if we have any filter rules that depend on other DataCollections,\n      // then wait for them to be initialized first.\n      // eg: \"(not_)in_data_collection\" rule filters\n      if (wheres?.rules?.length) {\n         const dcFilters = [];\n\n         wheres.rules.forEach((rule) => {\n            // if this collection is filtered by data collections we need to load them in case we need to validate from them later\n            if (\n               rule.rule == \"in_data_collection\" ||\n               rule.rule == \"not_in_data_collection\"\n            ) {\n               const dv = this.AB.datacollectionByID(rule.value);\n               if (dv) {\n                  dcFilters.push(this.waitForDataCollectionToInitialize(dv));\n               }\n            }\n         });\n\n         await Promise.all(dcFilters);\n      }\n\n      //\n      // Step 3: pull data to data collection\n      // we will keep track of the resolve, reject for this\n      // operation.\n      // the actual resolve() should happen in the\n      // .processIncomingData() after the  data is processed.\n      return new Promise((resolve, reject) => {\n         this._pendingLoadDataResolve = {\n            resolve: resolve,\n            reject: reject,\n         };\n\n         this.platformFind(model, cond).catch((err) => {\n            reject(err);\n         });\n      });\n   }\n\n   platformFind(model, cond) {\n      //// Core Migration Note:\n      //// the ABViewDataCollectionCore now manages data in a different way:\n      //// local data  vs  Remote Data\n      //// this will need to be updated to reflect that management:\n      //// (and also explains why we refactored things into .processIncomingData())\n      return model.findAll(cond).then((data) => {\n         return this.processIncomingData(data);\n      });\n   }\n\n   /**\n    * @method queuedParse()\n    * This is an attempt at loading very large datasets into a Webix DC without locking up\n    * the display.\n    * @param {array} data\n    *        The data to load into the __dataCollection\n    * @param {callback} cb\n    *        A callback to call when the data has been fully loaded.\n    */\n   async queuedParse(incomingData, cb) {\n      const data = incomingData?.data || incomingData;\n      if (!data?.length) {\n         cb?.();\n         return Promise.resolve();\n      }\n\n      const total_count = incomingData.total_count;\n\n      let nextData;\n      if (data.length > 250) {\n         let pos = this.__dataCollection.count();\n         let remain = data.splice(250);\n         nextData = {\n            data: remain,\n            pos: pos + data.length,\n            total_count,\n         };\n      }\n\n      const parsedData = {\n         data,\n         pos: incomingData.pos,\n         total_count,\n      };\n      this.__dataCollection.parse(parsedData);\n\n      return new Promise((resolve) => {\n         setTimeout(async () => {\n            await this.queuedParse(nextData);\n            cb?.();\n            resolve();\n         }, 15);\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      return Promise.resolve().then(() => {\n         // store total count\n         this.__totalCount = data.total_count;\n\n         // Need to .parse at the first time\n         if (!this.__dataCollection.find({}).length) {\n            this.__dataCollection.clearAll();\n            // this.__dataCollection.parse(data);\n         }\n\n         if (this.__throttleIncoming) clearTimeout(this.__throttleIncoming);\n         this.__throttleIncoming = setTimeout(async () => {\n            // using queuedParse() to responsively handle large datasets.\n            await this.queuedParse(data);\n\n            // In order to get the total_count updated I had to use .load()\n            this.__dataCollection.load(async () => {\n               setTimeout(() => {\n                  this.refreshLinkCursor();\n               }, 250);\n\n               return {\n                  // NOTE: return a empty array to prevent render items in DataTable twice. (Items are rendered in .queuedParse function)\n                  data: [],\n                  pos: data.pos,\n                  total_count: data.total_count,\n               };\n            });\n\n            // this does nothing???\n            this.parseTreeCollection(data);\n\n            // if we are linked, then refresh our cursor\n            var linkDv = this.datacollectionLink;\n            if (linkDv) {\n               // filter data by match link data collection\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            } else {\n               // set static cursor\n               this.setStaticCursor();\n            }\n\n            // now we close out our .loadData() promise.resolve() :\n            if (this._pendingLoadDataResolve) {\n               this._pendingLoadDataResolve.resolve();\n\n               // after we call .resolve() stop tracking this:\n               this._pendingLoadDataResolve = null;\n            }\n\n            // If dc set load all, then it will not trigger .loadData in dc at\n            // .onAfterLoad event\n            if (this.settings.loadAll) {\n               this.emit(\"loadData\", {});\n            }\n\n            // mark initialized data\n            if (this._dataStatus != this.dataStatusFlag.initialized) {\n               this._dataStatus = this.dataStatusFlag.initialized;\n               this.emit(\"initializedData\", {});\n            }\n         }, 100);\n      });\n   }\n\n   /**\n    * @method reloadData()\n    * Trigger the DataCollection to reload its data from the server.\n    * @param {int} start\n    *        Start position of where we want the data to load.\n    * @param {int} limit\n    *        How many entries to load at a time.\n    * @return {Promise}\n    */\n   reloadData(start, limit) {\n      // var waitForDataCollectionToInitialize = (DC) => {\n      //    return new Promise((resolve, reject) => {\n      //       switch (DC.dataStatus) {\n      //          // if that DC hasn't started initializing yet, start it!\n      //          case DC.dataStatusFlag.notInitial:\n      //             DC.loadData().catch(reject);\n      //          // no break;\n\n      //          // once in the process of initializing\n      //          /* eslint-disable no-fallthrough*/\n      //          case DC.dataStatusFlag.initializing:\n      //             /* eslint-enable no-fallthrough*/\n      //             // listen for \"initializedData\" event from the DC\n      //             // then we can continue.\n      //             this.eventAdd({\n      //                emitter: DC,\n      //                eventName: \"initializedData\",\n      //                listener: () => {\n      //                   // go next\n      //                   resolve();\n      //                },\n      //             });\n      //             break;\n\n      //          // if it is already initialized, we can continue:\n      //          case DC.dataStatusFlag.initialized:\n      //             resolve();\n      //             break;\n\n      //          // just in case, if the status is not known, just continue\n      //          default:\n      //             resolve();\n      //             break;\n      //       }\n      //    });\n      // };\n\n      return Promise.resolve().then(() => {\n         // check if we are currently waiting for more data requests on this datacollection before continuing\n         if (this.reloadTimer) {\n            // if we are already waiting delete the current timer\n            clearTimeout(this.reloadTimer);\n            delete this.reloadTimer;\n         }\n\n         // return a promise\n         if (!this.reloadPromise) {\n            this.reloadPromise = new Promise((resolve, reject) => {\n               this.reloadPromise__resolve = resolve;\n               this.reloadPromise__reject = reject;\n            });\n         }\n\n         // then create a new timeout to delete current timeout, clear data\n         // and load new\n         this.reloadTimer = setTimeout(() => {\n            // clear the data from the dataCollection,\n            this.clearAll();\n            // then loads new data from the server\n            return this.loadData(start, limit)\n               .then(() => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__resolve();\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               })\n               .catch((err) => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__reject(err);\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               });\n         }, 50);\n         // setting to 50ms because right now we do not see many\n         // concurrent calls,  we need to increase this if we begin to\n\n         return this.reloadPromise;\n      });\n   }\n\n   /**\n    * reloadWheres()\n    * stores the child data collections filters for subsequent loads.\n    * It is called from bindParentDc() when child data collections that are not\n    * marked to load all data are initializing. To do this we use webix\n    * server side binding by setting the param of \"dataFeed\".\n    * @param {obj} wheres  the new filters for the data collection\n    *        This is a combination of any exisiting filters the data collection\n    *        alreay had as well as the filter for the current cursor set by the\n    *        master data collection. We store this in __reloadWheres for when\n    *        the data needs to be updated.\n    *        The format of the wheres is our Query Builder Format\n    *        ex: {\n    *              \"glue\": \"and\",\n    *              \"rules\": [{\n    *                \"key\": \"33ba8957-6b9c-4ddb-9533-c46b13878ae1\",\n    *                \"rule\": \"contains\",\n    *                \"value\": \"1594176994894\"\n    *              }]\n    *            }\n    */\n   reloadWheres(wheres) {\n      this.__reloadWheres = wheres;\n   }\n\n   getData(filter) {\n      var dc = this.__dataCollection;\n      if (dc) {\n         return dc.find((row) => {\n            let isValid = true;\n\n            // data collection filter\n            // isValid = this.isValidData(row);\n\n            // NOTE: data are filtered from the server side (webix.dataFeed)\n            // parent dc filter\n            let linkDv = this.datacollectionLink;\n            if (linkDv && this.settings.loadAll && isValid) {\n               isValid = this.isParentFilterValid(row);\n            }\n\n            // addition filter\n            if (isValid && filter) {\n               isValid = filter(row);\n            }\n\n            return isValid;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   isParentFilterValid(rowData) {\n      // data is empty\n      if (rowData == null) return false;\n\n      var linkDv = this.datacollectionLink;\n      if (linkDv == null) return true;\n\n      const linkObj = linkDv.datasource;\n      if (linkObj == null) return true;\n\n      var fieldLink = this.fieldLink;\n      if (fieldLink == null) return true;\n\n      // if the parent's cursor is not set we have not filted this collection\n      // yet so the data that comes back should be valid\n      var linkCursor = linkDv.getCursor();\n      if (linkCursor == null) {\n         return true;\n      }\n\n      var linkVal = rowData[fieldLink.relationName()];\n      if (linkVal == null) {\n         // try to get relation value(id) again\n         if (rowData[fieldLink.columnName]) {\n            linkVal = rowData[fieldLink.columnName];\n         } else {\n            return false;\n         }\n      }\n\n      let PK = fieldLink.object.PK();\n\n      // array - 1:M , M:N\n      if (linkVal.filter) {\n         return (\n            linkVal.filter(\n               (val) =>\n                  (val[PK] || val.id || val) ==\n                  (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n            ).length > 0\n         );\n      } else {\n         return (\n            (linkVal[PK] || linkVal.id || linkVal) ==\n            (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n         );\n      }\n   }\n\n   clearAll() {\n      if (this.__dataCollection) this.__dataCollection.clearAll();\n\n      if (this.__treeCollection) this.__treeCollection.clearAll();\n\n      this._dataStatus = this.dataStatusFlag.notInitial;\n   }\n\n   get totalCount() {\n      return this.__totalCount || 0;\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method bind\n    * @param {Object} component - a webix element instance\n    */\n   bind(/* component */) {\n      console.error(\"Platform.ABDataCollection.bind() Not implemented\");\n   }\n\n   unbind(/* component */) {\n      console.error(\"Platform.ABDataCollection.unbind() Not implemented\");\n   }\n\n   removeComponent(comId) {\n      // get index\n      let index = this.__bindComponentIds.indexOf(comId);\n\n      // delete\n      this.__bindComponentIds.splice(index, 1);\n   }\n\n   /**\n    * @method refreshFilterConditions()\n    * This is called in two primary cases:\n    *    - on initialization of a DC to setup our filters.\n    *    - in the operation of the ABDesigner when using a DC to display data\n    *      in the Work_object_grid and the datacollection_work(?)\n    * In the case of the ABDesigner, new temporary where conditions are provided\n    * from the possible filters we can set, and those need to effect the data\n    * we display.\n    * @param {ABRowFilter.where} wheres\n    *        The filter condition from the ABRowFilter values we are storing.\n    */\n   refreshFilterConditions(wheres = null) {\n      // There are 3 Filters that help us know if our data is Valid:\n      // 1) A filter for any ABObjectQuery we are managing.\n      // 2) A filter for our own filter condition\n      // 3) A filter that represents what our scopes allows\n\n      // Set filter of ABObject\n      if (this.__filterDatasource == null)\n         this.__filterDatasource = this.AB.filterComplexNew(\n            `${this.id}_filterDatasource`\n         );\n\n      if (this.datasource) {\n         // this.__filterDatasource.applicationLoad(this.datasource.application);\n         this.__filterDatasource.fieldsLoad(this.datasource.fields());\n\n         let filterConditions;\n\n         // Query\n         if (this.datasource instanceof this.AB.Class.ABObjectQuery) {\n            filterConditions = this.datasource.where;\n         }\n         // Apr 29, 2021 Removed this because we do not want Object filters to\n         // effect validation of DataCollections\n         // Object\n\n         // else if (this.datasource instanceof ABObject) {\n         //    let currentView = this.datasource.currentView();\n         //    if (currentView && currentView.filterConditions)\n         //       filterConditions = currentView.filterConditions;\n         // }\n\n         if (filterConditions)\n            this.__filterDatasource.setValue(filterConditions);\n         else this.__filterDatasource.setValue({});\n      } else {\n         this.__filterDatasource.fieldsLoad([]);\n         this.__filterDatasource.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of data view\n      // Apr 29, 2021 Added this code back to validate with DataCollection Filters\n      if (this.__filterDatacollection == null)\n         this.__filterDatacollection = this.AB.filterComplexNew(\n            `${this.id}_filterDatacollection`\n         );\n\n      // this.__filterDatacollection.applicationLoad(\n      //    this.datasource ? this.datasource.application : null\n      // );\n      this.__filterDatacollection.fieldsLoad(\n         this.datasource ? this.datasource.fields() : []\n      );\n\n      if (wheres) this.settings.objectWorkspace.filterConditions = wheres;\n\n      if (\n         this.settings &&\n         this.settings.objectWorkspace &&\n         this.settings.objectWorkspace.filterConditions\n      ) {\n         this.__filterDatacollection.setValue(\n            this.settings.objectWorkspace.filterConditions\n         );\n      } else {\n         this.__filterDatacollection.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of user's scope\n      if (this.__filterScope == null)\n         this.__filterScope = this.AB.filterComplexNew(\n            `${this.id}_filterScope`\n         );\n\n      if (this.datasource) {\n         let scopeList = (this.userScopes || []).filter(\n            (s) =>\n               !s.allowAll &&\n               (s.objectIds || []).indexOf(this.datasource.id) > -1\n         );\n         if (scopeList && scopeList.length > 0) {\n            // this.__filterScope.applicationLoad(this.datasource.application);\n            this.__filterScope.fieldsLoad(this.datasource.fields() || []);\n\n            // concat all rules of scopes\n            let scopeRules = [];\n            scopeList\n               .filter(\n                  (s) => s.filter && s.filter.rules && s.filter.rules.length\n               )\n               .forEach((s) => {\n                  let sRules = (s.filter.rules || []).filter(\n                     (r) =>\n                        this.datasource.fields((f) => f.id == r.key).length > 0\n                  );\n\n                  scopeRules = scopeRules.concat(sRules);\n               });\n\n            let scopeWhere = {\n               glue: \"or\",\n               rules: scopeRules,\n            };\n            this.__filterScope.setValue(scopeWhere);\n         }\n      }\n   }\n\n   get isGroup() {\n      return this.__isGroup || false;\n   }\n\n   ///\n   /// Sync type\n   ///\n\n   get syncTypeFlag() {\n      return {\n         server: 1,\n         client: 2,\n      };\n   }\n\n   get syncType() {\n      return this.settings.syncType || DefaultValues.syncType;\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(/*data*/) {\n      var error = new Error(\n         \"the platform.ABDataCollection._dataCollectionNew() is expected to return a proper DataCollection!\"\n      );\n      console.error(error);\n      return null;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      console.error(\n         \"the platform.ABDataCollection._treeCollectionNew() is expected to return a proper TreeCollection!\"\n      );\n      return null;\n   }\n\n   parseTreeCollection(data = {}) {\n      // TODO all this does is log \"is missing?\"\n      if (data === {}) {\n         console.log(\n            \"Platform.ABDataCollection.parseTreeCollection() missing!\"\n         );\n      }\n   }\n   // parseTreeCollection(data = {}) {\n\n   //  if (!(this.__datasource instanceof ABObjectQuery) ||\n   //    !this.__datasource.isGroup ||\n   //    !this.__treeCollection)\n   //    return;\n\n   //  let addRowToTree = (join = {}, parentAlias = null) => {\n\n   //    let alias = join.alias;\n\n   //    (data.data || []).forEach(row => {\n\n   //      let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n   //      if (!dataId) return;\n\n   //      // find parent nodes\n   //      let parentItemIds = [];\n   //      let parentId = row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n   //      if (parentId) {\n   //        parentItemIds = this.__treeCollection\n   //          .find(item => item._alias == parentAlias && item._dataId == parentId)\n   //          .map(item => item.id);\n   //      }\n\n   //      // check exists\n   //      let exists = this.__treeCollection.find(item => {\n   //        return item._alias == alias &&\n   //          item._dataId == dataId &&\n   //          (parentItemIds.length == 0 || parentItemIds.indexOf(item.$parent) > -1);\n   //      }, true);\n   //      if (exists) return;\n\n   //      let treeNode = {};\n   //      treeNode._alias = alias;\n   //      treeNode._dataId = dataId;\n   //      treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n   //      Object.keys(row).forEach(propName => {\n\n   //        // Pull value from alias\n   //        if (propName.indexOf(`${alias}.`) == 0) {\n   //          treeNode[propName] = row[propName];\n   //        }\n\n   //      });\n\n   //      if (row.translations)\n   //        treeNode.translations = row.translations;\n\n   //      // child nodes\n   //      if (parentItemIds.length > 0)\n   //        parentItemIds.forEach(parentItemId => {\n   //          this.__treeCollection.add(treeNode, null, parentItemId);\n   //        });\n   //      // root node\n   //      else\n   //        this.__treeCollection.add(treeNode, null);\n\n   //    });\n\n   //    // Sub-joins\n   //    (join.links || []).forEach(link => {\n   //      addRowToTree(link, alias);\n   //    });\n\n   //  };\n\n   //  // Show loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.showProgress)\n   //      boundComp.showProgress({ type: \"icon\" });\n\n   //  });\n\n   //  addRowToTree(this.__datasource.joins());\n\n   //  // Hide loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.hideProgress)\n   //      boundComp.hideProgress();\n\n   //  })\n   // }\n\n   /**\n    * @method _queryUpdateData\n    *\n    * @param {Array} objList - List of ABObject\n    * @param {Object} values\n    */\n   _queryUpdateData(objList, values) {\n      let updatedVals = {};\n\n      // Add alias to properties of update data\n      Object.keys(values).forEach((key) => {\n         objList.forEach((oItem) => {\n            let alias = this.datasource.objectAlias(oItem.id);\n\n            updatedVals[`${alias}.${key}`] = values[key];\n\n            // Add alias to properties of .translations\n            if (\n               key == \"translations\" &&\n               values[\"translations\"] &&\n               values[\"translations\"].length\n            ) {\n               updatedVals.translations = [];\n\n               values[\"translations\"].forEach((tran) => {\n                  let updatedTran = {};\n\n                  Object.keys(tran).forEach((tranKey) => {\n                     if (tranKey == \"language_code\")\n                        updatedTran[\"language_code\"] = tran[\"language_code\"];\n                     else updatedTran[`${alias}.${tranKey}`] = tran[tranKey];\n                  });\n\n                  updatedVals.translations.push(updatedTran);\n               });\n            }\n         });\n      });\n\n      return updatedVals;\n   }\n\n   isValidData(rowData) {\n      let result = true;\n\n      // NOTE: should we use filter of the current view of object to filter\n      //        if yes, update .wheres condition in .loadData too\n      if (this.__filterDatasource)\n         result = result && this.__filterDatasource.isValid(rowData);\n\n      if (this.__filterDatacollection)\n         result = result && this.__filterDatacollection.isValid(rowData);\n\n      if (result && this.__filterScope)\n         result = result && this.__filterScope.isValid(rowData);\n\n      return result;\n   }\n\n   // Clone\n\n   clone(settings) {\n      settings = settings || this.toObj();\n      var clonedDatacollection = new this.constructor(settings, this.AB);\n      clonedDatacollection.__datasource = this.__datasource;\n      clonedDatacollection._dataStatus = this._dataStatus;\n\n      // clonedDatacollection.__dataCollection = this.__dataCollection.copy();\n      clonedDatacollection.__filterDatacollection.setValue(\n         settings.settings.objectWorkspace.filterConditions\n      );\n\n      var parseMe = () => {\n         if (clonedDatacollection.__dataCollection) {\n            clonedDatacollection.__dataCollection.parse(\n               this.__dataCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n         if (clonedDatacollection.__treeCollection) {\n            clonedDatacollection.__treeCollection.parse(\n               this.__treeCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n      };\n\n      parseMe();\n\n      // return new Promise((resolve, reject) => {\n      //    // load the data\n      //    clonedDatacollection\n      //       .loadData()\n      //       .then(() => {\n\n      // set the cursor\n      clonedDatacollection.setStaticCursor();\n\n      var cursorID = this.getCursor();\n      if (cursorID) {\n         // NOTE: webix documentation issue: .getCursor() is supposed to return\n         // the .id of the item.  However it seems to be returning the {obj}\n         if (cursorID.id) cursorID = cursorID.id;\n\n         clonedDatacollection.setCursor(cursorID);\n      }\n\n      return clonedDatacollection;\n\n      // resolve(clonedDatacollection);\n      //       })\n      //       .catch(reject);\n      // });\n   }\n\n   filteredClone(filters) {\n      var obj = this.toObj();\n\n      // check to see that filters are set (this is sometimes helpful to select the first record without doing so at the data collection level)\n      if (filters?.rules?.length) {\n         if (obj.settings.objectWorkspace.filterConditions?.rules?.length) {\n            obj.settings.objectWorkspace.filterConditions.rules =\n               obj.settings.objectWorkspace.filterConditions.rules.concat(\n                  filters.rules\n               );\n         } else {\n            obj.settings.objectWorkspace.filterConditions = filters;\n         }\n      }\n      let clonedDC = this.clone(obj);\n      return clonedDC; // new ABViewDataCollection(settings, this.application, this.parent);\n   }\n\n   //\n   // Event handles\n   //\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    *              emitter: object,\n    *              eventName: string,\n    *              listener: function\n    *            }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      this.__events = this.__events || [];\n\n      let exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    */\n   eventClear() {\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method eventRemove()\n    * unsubscribe a event.\n    *\n    */\n   eventRemove(eventName) {\n      if (this.__events?.length > 0 && eventName) {\n         this.__events.forEach((e) => {\n            if (eventName == e.eventName)\n               e.emitter.removeListener(e.eventName, e.listener);\n         });\n\n         this.__events = this.__events.filter((e) => e.eventName != eventName);\n      }\n   }\n\n   get userScopes() {\n      return [];\n   }\n\n   get isCursorFollow() {\n      return (\n         this.settings.followDatacollectionID &&\n         (!this.settings.linkDatacollectionID || !this.settings.linkFieldID)\n      );\n   }\n\n   get datacollectionFollow() {\n      if (!this.isCursorFollow) return null;\n\n      return (this.AB ?? AB).datacollectionByID(\n         this.settings.followDatacollectionID\n      );\n   }\n\n   get previousCursorId() {\n      return this.__previousCursorId;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nmodule.exports = class ABDefinitionCore {\n   constructor(attributes, AB) {\n      this.AB = AB;\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\ttype: 'xxxxx',\n\t\t\tjson: \"{json}\"\n\t\t}\n\t\t*/\n      if (attributes.id) {\n         this.id = attributes.id;\n      }\n      this.name =\n         attributes?.name ||\n         attributes?.json?.name ||\n         attributes?.json?.label ||\n         attributes?.json?.translations?.[0]?.label ||\n         \"\";\n      if (!this.name) {\n         this.AB.notify.builder(\n            new Error(\"Attributes for definition had no 'name'\"),\n            {\n               context: \"ABDefinitionCore.fromValues()\",\n               attributes,\n            }\n         );\n      }\n      this.type = attributes.type || attributes?.json?.type || \"\";\n      this.json = attributes.json || null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.json,\n      };\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABDefinition\n    * Also remove it from our parent application\n    * @return {Promise}\n    */\n   destroy() {\n      return this.AB.definitionDestroy(this.id);\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   async save() {\n      if (this.id) {\n         return this.AB.definitionUpdate(this.id, this.toObj());\n      } else {\n         return this.AB.definitionCreate(this.toObj());\n      }\n   }\n};\n","/*\n * ABFactoryCore\n * an object that contains the definitions and references for a single tenant.\n * It is expected that an instance of this should be returned from an\n * ABBootstrap.init(req).then((AB)=>{}) call.\n */\n\n// const _ = require(\"lodash\");\n// const uuidv4 = require(\"uuid\");\n\nconst ABApplication = require(\"../platform/ABApplication\");\nconst ABApplicationMobile = require(\"../platform/ABApplicationMobile\");\nconst ABDefinition = require(\"../platform/ABDefinition\");\n\nconst ABComponent = require(\"../platform/ABComponent\");\n\nconst ABFieldManager = require(\"./ABFieldManager\");\n\nconst ABIndex = require(\"../platform/ABIndex\");\nconst ABObject = require(\"../platform/ABObject\");\nconst ABObjectExternal = require(\"../platform/ABObjectExternal\");\nconst ABObjectImport = require(\"../platform/ABObjectImport\");\nconst ABObjectApi = require(\"../platform/ABObjectApi\");\nconst ABDataCollection = require(\"../platform/ABDataCollection\");\nconst ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\nconst ABHint = require(\"../platform/ABHint\");\nconst ABProcess = require(\"../platform/ABProcess\");\n\nconst ABProcessParticipant = require(\"../platform/process/ABProcessParticipant\");\nconst ABProcessLane = require(\"../platform/process/ABProcessLane\");\nconst ABProcessTaskManager = require(\"./process/ABProcessTaskManager\");\n\nconst ABStep = require(\"../platform/ABStep\");\n\nconst ABViewDetailItem = require(\"../platform/views/ABViewDetailItem\");\nconst ABViewFormItem = require(\"../platform/views/ABViewFormItem\");\nconst ABMobileViewFormItem = require(\"../platform/mobile/ABMobileViewFormItem\");\n\n// const ABObjectWorkspaceViewGrid = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGrid\");\n// const ABObjectWorkspaceViewKanban = require(\"../platform/workspaceViews/ABObjectWorkspaceViewKanban\");\n// const ABObjectWorkspaceViewGantt = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGantt\");\n\nconst RowFilter = require(\"../platform/RowFilter\");\nconst FilterComplex = require(\"../platform/FilterComplex\");\n\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\nconst EventEmitter = require(\"../platform/ABEmitter\");\n\nclass ABFactory extends EventEmitter {\n   constructor(definitions) {\n      /**\n       * @param {hash} definitions\n       *        { ABDefinition.id : {ABDefinition} }\n       *        of all the definitions defined for the current Tenant\n       */\n\n      super();\n      this.setMaxListeners(0);\n\n      this._definitions = definitions || {};\n      // {hash}  { ABDefinition.id : {ABDefinition} }\n      // ensure ._definitions is a HASH{ ID : {ABDefinition}}\n      if (Array.isArray(definitions)) {\n         var hash = {};\n         definitions.forEach((d) => {\n            hash[d.id] = d;\n         });\n         this._definitions = hash;\n      }\n\n      //\n      //\n      // Manage our working objects\n      //\n\n      this._allApplications = [];\n      // {array} of all the ABApplication(s) in our site.\n\n      this._allObjects = [];\n      // {array} of all the ABObject(s) in our site.\n\n      this._allHints = [];\n      // {array} of all the ABHint(s) in our site.\n\n      this._allProcesses = [];\n      // {array} of all the ABProcess(s) in our site.\n\n      this._allQueries = [];\n      // {array} of all the ABObjectQuery(s) in our site.\n\n      this._allSteps = [];\n      // {array} of all the ABStep(s) in our site.\n\n      this._allDatacollections = [];\n      // {array} of all the ABDataCollection(s) in our site.\n\n      //\n      // Class References\n      //\n      this.Class = {\n         ABApplication,\n         ABComponent,\n         ABDefinition,\n         ABFieldManager,\n         ABIndex,\n         ABMLClass,\n         ABObject,\n         ABObjectExternal,\n         ABObjectImport,\n         ABObjectApi,\n         ABObjectQuery,\n         ABProcessParticipant,\n         // ABRole      // Do we need this anymore?\n\n         // ABObjectWorkspaceViewGrid,\n         // ABObjectWorkspaceViewKanban,\n         // ABObjectWorkspaceViewGantt,\n\n         ABProcessTaskManager,\n\n         ABViewDetailItem,\n         ABViewFormItem,\n         ABMobileViewFormItem,\n      };\n\n      //\n      // Rules\n      // These are a common set of \"rules\" for all platforms.\n      //\n      this.rules = {\n         /**\n          * @method AB.rules.isUUID\n          * evaluate a given value to see if it matches the format of a uuid\n          * @param {string} key\n          * @return {boolean}\n          */\n         isUUID: function (key) {\n            var checker = RegExp(\n               \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n               \"i\"\n            );\n            return checker.test(key);\n         },\n\n         /**\n          * @method AB.rules.nameFilter()\n          * return a properly formatted name for an AppBuilder object.\n          * @param {string} name\n          *        The name of the object we are conditioning.\n          * @return {string}\n          */\n         nameFilter: function (name) {\n            return String(name).replace(/[^a-z0-9_.]/gi, \"\");\n         },\n\n         /**\n          * @method AB.rules.toApplicationNameFormat()\n          * return a properly formatted Application Name\n          * @param {string} name\n          *        The name of the Application we are conditioning.\n          * @return {string}\n          */\n         toApplicationNameFormat: function (name) {\n            return \"AB_\" + this.nameFilter(name);\n         },\n\n         /**\n          * @method AB.rules.toFieldRelationFormat()\n          * This function uses for define relation name of Knex Objection\n          * return a relation name of column\n          * @param {string} colName\n          *        The name of the Column\n          * @return {string}\n          */\n         toFieldRelationFormat: function (colName) {\n            return this.nameFilter(colName) + \"__relation\";\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableFK()\n          * return foriegnkey (FK) column name for a junction table name\n          * @param {string} objectName\n          *        The name of the Object with a connection\n          * @param {string} columnName\n          *        The name of the connection columnName.\n          * @return {string}\n          */\n         toJunctionTableFK: function (objectName, columnName) {\n            var fkName = objectName + \"_\" + columnName;\n\n            if (fkName.length > 64) fkName = fkName.substring(0, 64);\n\n            return fkName;\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableNameFormat()\n          * return many-to-many junction table name\n          * @param {string} appName\n          *        The name of the Application for this object\n          * @param {string} sourceTableName\n          *        The name of the source object we are conditioning.\n          * @param {string} targetTableName\n          *        The name of the target object we are conditioning.\n          * @param {string} colName\n          * @return {string}\n          */\n         toJunctionTableNameFormat: function (\n            appName,\n            sourceTableName,\n            targetTableName,\n            colName\n         ) {\n            // The maximum length of a table name in MySql is 64 characters\n            appName = this.toApplicationNameFormat(appName);\n            if (appName.length > 17) appName = appName.substring(0, 17);\n\n            if (sourceTableName.length > 15)\n               sourceTableName = sourceTableName.substring(0, 15);\n\n            if (targetTableName.length > 15)\n               targetTableName = targetTableName.substring(0, 15);\n\n            colName = this.nameFilter(colName);\n            if (colName.length > 14) colName = colName.substring(0, 14);\n\n            return \"{appName}_{sourceName}_{targetName}_{colName}\"\n               .replace(\"{appName}\", appName)\n               .replace(\"{sourceName}\", sourceTableName)\n               .replace(\"{targetName}\", targetTableName)\n               .replace(\"{colName}\", colName);\n         },\n\n         /**\n          * @method AB.rules.toObjectNameFormat\n          * return a properly formatted Object/Table Name\n          * @param {string} objectName\n          *        The {ABObject}.name of the Object we are conditioning.\n          * @return {string}\n          */\n         toObjectNameFormat: function (objectName) {\n            return `AB_${this.nameFilter(objectName)}`;\n         },\n      };\n\n      // Notify Helpers\n      this.notify.builder = (...params) => {\n         this.notify(\"builder\", ...params);\n      };\n\n      this.notify.developer = (...params) => {\n         this.notify(\"developer\", ...params);\n      };\n   }\n\n   /**\n    * @method definitionClean()\n    * make sure the provided ABDefinition values are properly formatted\n    * @param {ABDefinition} d\n    *        The json settings of an ABDefinition object.\n    */\n   definitionClean(d) {\n      if (typeof d.json == \"string\") {\n         try {\n            d.json = JSON.parse(d.json);\n         } catch (e) {\n            console.log(e);\n            console.error(` Error on definition id[${d.id}]`);\n         }\n      }\n   }\n\n   init() {\n      let allDefinitions = Object.keys(this._definitions).map(\n         (k) => this._definitions[k]\n      );\n      // {array} all our definitions in an Array format.\n\n      // make sure our definitions.json field is an {} and not string\n      allDefinitions.forEach((d) => {\n         this.definitionClean(d);\n      });\n\n      // perform these in order:\n      [\n         \"object\",\n         \"query\",\n         \"datacollection\",\n         \"process\",\n         \"hint\",\n         \"step\",\n         \"application\",\n      ].forEach((type) => {\n         var objTypes = allDefinitions.filter((d) => d.type == type);\n         objTypes.forEach((def) => {\n            let { keyList, keyFn } = this.objectKeysByDef(def);\n            if (keyList) {\n               this[keyList].push(this[keyFn](def.json));\n            }\n         });\n      });\n\n      this.emit(\"init.objects_ready\");\n      return Promise.resolve();\n   }\n\n   /**\n    * @method objectKeysByDef()\n    * Analyze the provided ABDefinition json and return which set of list and\n    * functions are used to create a new instance of this definition.\n    * @param {json} def\n    *        the ABDefinition json of the definition we are evaluating\n    * @return { keyList, keyFn }\n    *        keyList: {string}  which of our internal lists to store this new\n    *                 object.\n    *        keyFn: {string} which of our methods to call with the def.json\n    *               as the param that will create the new object.\n    *\n    *        ex:  this[keyList].push( this[keyFn](def.json));\n    *\n    *        if this def is not one of the types we track,\n    *        keyList = keyFn = null;\n    */\n   objectKeysByDef(def) {\n      switch (def.type) {\n         case \"application\":\n            return { keyList: \"_allApplications\", keyFn: \"applicationNew\" };\n\n         case \"datacollection\":\n            return {\n               keyList: \"_allDatacollections\",\n               keyFn: \"datacollectionNew\",\n            };\n\n         case \"hint\":\n            return { keyList: \"_allHints\", keyFn: \"hintNew\" };\n\n         case \"steps\":\n            return { keyList: \"_allSteps\", keyFn: \"stepNew\" };\n\n         case \"object\":\n            return { keyList: \"_allObjects\", keyFn: \"objectNew\" };\n\n         case \"process\":\n            return { keyList: \"_allProcesses\", keyFn: \"processNew\" };\n\n         case \"query\":\n            return { keyList: \"_allQueries\", keyFn: \"queryNew\" };\n\n         default:\n            // we don't manage any other\n            return { keyList: null, keyFn: null };\n      }\n   }\n\n   //\n   // Definitions\n   //\n\n   /**\n    * definitionByID(id)\n    * return an ABDefinition.json value ready for our objects to use.\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @param {bool} isRaw\n    *        indicates if we want the full ABDefinition, or the .json param\n    *        true : returns full ABDefinition value.\n    *        false: returns the .json parameter used by most ABObjects.\n    * @return {Promise}\n    */\n   definitionByID(id, isRaw = false) {\n      if (this._definitions[id]) {\n         if (isRaw) {\n            return this._definitions[id];\n         } else {\n            return this._definitions[id].json;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * definitionNew(values)\n    * return an ABDefinition object tied to this Tenant.\n    * @param {obj} values\n    *        The value hash of the ABDefinition object to create.\n    * @return {ABDefinition}\n    */\n   definitionNew(values) {\n      return new ABDefinition(values, this);\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   definitionsParse(defs = []) {\n      if (!Array.isArray(defs)) {\n         defs = [defs];\n      }\n\n      // store/replace the incoming definitions\n      // 1st: insert ALL our definitions internally\n      defs.forEach((d) => {\n         this.definitionClean(d);\n         this._definitions[d.id] = d;\n      });\n      // 2nd: Now we can then go through and signal the \"updates\"\n      // and the related objects can find their dependent definitions.\n      defs.forEach((d) => {\n         this.definitionSync(\"updated\", d.id, d);\n      });\n\n      return Promise.resolve();\n   }\n\n   /**\n    * definitionSync()\n    * Synchronize an individual definition into our repository of definitions.\n    * @param {string} op\n    *        the type of synchronization this is\n    *        [ \"created\", \"updated\", \"destroyed\"]\n    * @param {uuid} id\n    *        the definition.id of the definition we are synchronizing\n    * @param {json} def\n    *        the ABDefinition attributes we are storing.\n    */\n   definitionSync(op, id, def) {\n      var { keyList, keyFn } = this.objectKeysByDef(def);\n      if (keyList) {\n         var curr;\n         switch (op) {\n            case \"created\":\n               this[keyList].push(this[keyFn](def.json));\n               this.emit(\"definition.created\", def.json);\n               break;\n\n            case \"updated\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n\n               // remove from list\n               this[keyList] = this[keyList].filter((d) => d.id != id);\n               // add new one:\n               this[keyList].push(this[keyFn](def.json));\n\n               // signal this object needs to be updated:\n               // NOTE: if this is one of the objects we are tracking,\n               // we don't need to this.emit() the message.\n               if (curr) {\n                  curr.emit(\"definition.updated\", def.json);\n               } else {\n                  this.emit(\"definition.updated\", def.json);\n               }\n               break;\n\n            case \"destroyed\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n               if (curr) {\n                  // remove from list\n                  this[keyList] = this[keyList].filter((d) => d.id != id);\n\n                  // signal this object needs to be updated:\n                  curr.emit(\"definition.deleted\", def.json);\n\n                  this.emit(\"definition.deleted\", def.json);\n               }\n               break;\n         }\n      }\n   }\n\n   //\n   // ABObjects\n   //\n   /**\n    * @method applications()\n    * return all the ABApplications that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABApplications.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   applications(fn = () => true) {\n      return (this._allApplications || []).filter(fn);\n   }\n\n   /**\n    * @method applicationByID()\n    * returns a single ABApplication that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABApplication we are searching\n    *        for.\n    * @return {ABApplication}\n    *        the matching ABApplication object if found\n    *        {null} if not found.\n    */\n   applicationByID(ID) {\n      return this.applications((a) => a.id == ID)[0];\n   }\n\n   /**\n    * @method applicationNew()\n    * Return a new instance of an ABApplication object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplication object we are\n    *        creating.\n    * @return {ABApplication}\n    */\n   applicationNew(values) {\n      // just in case we got here by mistake:\n      if (values.appType == \"mobile\") {\n         return this.applicationMobileNew(values);\n      }\n\n      return new ABApplication(values, this);\n   }\n\n   /**\n    * @method applicationMobileNew()\n    * Return a new instance of an ABApplicationMobile object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplicationMobile object we are\n    *        creating.\n    * @return {ABApplicationMobile}\n    */\n   applicationMobileNew(values) {\n      return new ABApplicationMobile(values, this);\n   }\n\n   /**\n    * @method datacollections()\n    * return an array of all the ABDataCollection for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABDataCollection that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABDataCollection\n    */\n   datacollections(filter = () => true) {\n      return (this._allDatacollections || []).filter(filter);\n   }\n\n   /**\n    * @method datacollectionByID()\n    * returns a single ABDatacollection that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABDatacollection we are searching\n    *        for.\n    * @return {ABDatacollection}\n    *        the matching ABDatacollection object if found\n    *        {null} if not found.\n    */\n   datacollectionByID(ID) {\n      // an undefined or null ID should not match any DC.\n      if (!ID) return null;\n\n      return this.datacollections((dc) => {\n         return dc.id == ID || dc.name == ID || dc.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method datacollectionNew()\n    * create a new instance of ABDataCollection\n    * @param {obj} values\n    *        the initial values for the DC\n    * @return {ABDatacollection}\n    */\n   datacollectionNew(values) {\n      var dc = new ABDataCollection(values, this);\n      dc.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allDatacollections = this._allDatacollections.filter(\n            (d) => d.id != dc.id\n         );\n      });\n      return dc;\n   }\n\n   /**\n    * @method fieldNew()\n    * return an instance of a new (unsaved) ABField that is tied to a given\n    * ABObject.\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    * @param {obj} values  the initial values for this field.\n    *                - { key:'{string}'} is required\n    * @param {ABObject} object  the parent object this field belongs to.\n    * @return {ABField}\n    */\n   fieldNew(values, object) {\n      // NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n      return ABFieldManager.newField(values, object);\n   }\n\n   /**\n    * @method indexNew()\n    * return an instance of a new (unsaved) ABIndex.\n    * @return {ABIndex}\n    */\n   indexNew(values, object) {\n      return new ABIndex(values, object);\n   }\n\n   /**\n    * @method Label()\n    * a simple label factory.\n    * It is expected to be called like this:\n    * @codestart\n    *    var L = AB.Label();\n    *    var outputText = L(\"Hello World\");\n    *    var o2 = L(\"I'm {0} years old\", [5]);\n    * @codeend\n    * @return {fn}\n    */\n   Label() {\n      return (key, altText, values = []) => {\n         var label = key;\n         if (altText) {\n            if (Array.isArray(altText)) {\n               values = altText;\n            } else {\n               label = altText;\n            }\n         }\n\n         values.forEach((v, i) => {\n            var sub = `{${i}}`;\n            label = label.replaceAll(sub, v);\n         });\n\n         return label;\n      };\n   }\n\n   /**\n    * @method objects()\n    * return an array of all the ABObjects for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjects that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObject\n    */\n   objects(filter = () => true) {\n      return (this._allObjects || []).filter(filter);\n   }\n\n   /**\n    * @method objectByID()\n    * return the specific object requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   objectByID(ID) {\n      return this.objects((o) => {\n         return o.id == ID || o.name == ID || o.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method objectNew()\n    * return an instance of a new (unsaved) ABObject that is tied to this\n    * ABApplication.\n    * NOTE: this new object is not included in our this.objects until a .save()\n    * is performed on the object.\n    * @return {ABObject}\n    */\n   objectNew(values) {\n      var newObj = null;\n\n      if (values.isExternal == true)\n         newObj = new ABObjectExternal(values, this);\n      else if (values.isImported == true)\n         newObj = new ABObjectImport(values, this);\n      else if (values.isAPI == true) newObj = new ABObjectApi(values, this);\n      else newObj = new ABObject(values, this);\n\n      /*\n      // IS THIS CORRECT?\n      newObj.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allObjects = this._allObjects.filter((o) => o.id != newObj.id);\n      });\n      */\n\n      return newObj;\n   }\n\n   objectFile() {\n      return this.objectByID(\"4a9d89c9-f4eb-41af-91e4-909eff389f3e\");\n   }\n\n   objectLanguage() {\n      return this.objectByID(\"d84cd351-d96c-490f-9afb-2a0b880ca0ec\");\n   }\n\n   objectProcessForm() {\n      return this.objectByID(\"d36ae4c8-edef-48d8-bd9c-79a0edcaa067\");\n   }\n\n   objectProcessInstance() {\n      return this.objectByID(\"2ba85be0-78db-4eda-ba43-c2c4e3831849\");\n   }\n\n   objectRole() {\n      return this.objectByID(\"c33692f3-26b7-4af3-a02e-139fb519296d\");\n   }\n\n   objectScope() {\n      return this.objectByID(\"af10e37c-9b3a-4dc6-a52a-85d52320b659\");\n   }\n\n   objectToken() {\n      return this.objectByID(\"08826ac7-4b33-4745-a3d7-f7831ca4ff59\");\n   }\n\n   objectUser() {\n      return this.objectByID(\"228e3d91-5e42-49ec-b37c-59323ae433a1\");\n   }\n\n   objectKey() {\n      return this.objectByID(\"d734fe8c-b615-446c-8a5f-793ddece19f9\");\n   }\n\n   objectSecret() {\n      return this.objectByID(\"db5b3b26-5300-4c92-bc73-8ce4f4696992\");\n   }\n\n   //\n   // Hints\n   //\n   /**\n    * @method hints()\n    * return all the ABHints that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABHints.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   hints(filter = () => true) {\n      return (this._allHints || []).filter(filter);\n   }\n\n   /**\n    * @method hintByID()\n    * return the specific hint requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   hintID(ID) {\n      return this.hints((h) => {\n         return h.id == ID || h.name == ID || h.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method hintNew()\n    * return an instance of a new (unsaved) ABHint that is tied to this\n    * ABApplication.\n    * NOTE: this new hint is not included in our this.hints until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   hintNew(values) {\n      var newHint = new ABHint(values, this);\n\n      return newHint;\n   }\n\n   //\n   // Steps\n   //\n   /**\n    * @method steps()\n    * return all the ABSteps that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABSteps.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   steps(filter = () => true) {\n      return (this._allSteps || []).filter(filter);\n   }\n\n   /**\n    * @method stepByID()\n    * return the specific step requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   stepID(ID) {\n      return this.steps((s) => {\n         return s.id == ID || s.name == ID || s.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method stepNew()\n    * return an instance of a new (unsaved) ABStep that is tied to this\n    * ABApplication.\n    * NOTE: this new step is not included in our this.steps until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   stepNew(id, hintID) {\n      var stepDef = this.definitionByID(id);\n      if (stepDef) {\n         var getStep = new ABStep(stepDef, this);\n         return getStep;\n      } else {\n         var params = {\n            settings: {\n               hint: hintID,\n            },\n         };\n         var newStep = new ABStep(params, this);\n         return newStep;\n      }\n      return null;\n   }\n\n   //\n   // Processes\n   //\n   /**\n    * @method processes()\n    * return all the ABProcess that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABProcess.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   processes(filter = () => true) {\n      return (this._allProcesses || []).filter(filter);\n   }\n\n   /**\n    * @method processByID()\n    * return the specific process requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   processByID(ID) {\n      return this.processes((p) => {\n         return p.id == ID || p.name == ID || p.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method processNew()\n    * Return a new instance of an ABProcess object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABProcess object we are\n    *        creating.\n    * @return {ABProcess}\n    */\n   processNew(values) {\n      return new ABProcess(values, this);\n   }\n\n   /**\n    * @method processElementNew(id)\n    * return an instance of a new ABProcessOBJ that is tied to a given\n    * ABProcess.\n    * @param {string} id\n    *        the ABDefinition.id of the element we are creating\n    * @param {ABProcess} process\n    *        the process this task is a part of.\n    * @return {ABProcessTask}\n    */\n   processElementNew(id, process) {\n      var taskDef = this.definitionByID(id);\n      if (taskDef) {\n         switch (taskDef.type) {\n            case ABProcessParticipant.defaults().type:\n               return new ABProcessParticipant(taskDef, process, this);\n            // break;\n\n            case ABProcessLane.defaults().type:\n               return new ABProcessLane(taskDef, process, this);\n            // break;\n\n            default:\n               // default to a Task\n               return ABProcessTaskManager.newTask(taskDef, process, this);\n            // break;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * @method processElementNewForModelDefinition(def)\n    *\n    * return an instance of a new ABProcess[OBJ] that is tied to the given\n    * BPMI:Element definition.\n    *\n    * @param {BPMI:Element} element the element definition from our BPMI\n    *              modler.\n    * @return {ABProcess[OBJ]}\n    */\n   processElementNewForModelDefinition(element, process) {\n      var newElement = null;\n\n      switch (element.type) {\n         case \"bpmn:Participant\":\n            newElement = new ABProcessParticipant({}, process, this);\n            break;\n\n         case \"bpmn:Lane\":\n            newElement = new ABProcessLane({}, process, this);\n            break;\n\n         default:\n            var defaultDef = ABProcessTaskManager.definitionForElement(element);\n            if (defaultDef) {\n               newElement = ABProcessTaskManager.newTask(\n                  defaultDef,\n                  process,\n                  this\n               );\n            }\n            break;\n      }\n\n      // now make sure this new Obj pulls any relevant info from the\n      // diagram element\n      if (newElement) {\n         newElement.fromElement(element);\n      }\n      return newElement;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery(s).\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjectQuery(s) that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObjectQuery\n    */\n   queries(filter = () => true) {\n      return (this._allQueries || []).filter(filter);\n   }\n   // queriesAll() {\n   //    console.error(\n   //       \"ABFactory.queriesAll() Depreciated! Use .queries() instead. \"\n   //    );\n   //    return this.queries();\n   // }\n\n   /**\n    * @method queryByID()\n    * return the specific query requested by the provided id.\n    * NOTE: this method has been extended to allow .name and .label\n    * as possible lookup values.\n    * @param {string} ID\n    * @return {ABObjectQuery}\n    */\n   queryByID(ID) {\n      return this.queries((q) => {\n         return q.id == ID || q.name == ID || q.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method queryNew()\n    * return an instance of a new (unsaved) ABObjectQuery that is tied to this\n    * ABFactory.\n    * @return {ABObjectQuery}\n    */\n   queryNew(values) {\n      return new ABObjectQuery(values, this);\n   }\n\n   /**\n    * @method rowfilterNew()\n    * return an instance of a new RowFilter that is tied to this\n    * ABFactory.\n    * @return {RowFilter}\n    */\n   rowfilterNew(App, idBase) {\n      if (App) {\n         console.error(\"!! Who is calling this with an App?\");\n      }\n      return new RowFilter(App || this._App, idBase, this);\n   }\n\n   /**\n    * @method filterComplexNew()\n    * return an instance of a new FilterComplex that is tied to this\n    * ABFactory.\n    * @return {FilterComplex}\n    */\n   filterComplexNew(idBase, options = {}) {\n      return new FilterComplex(idBase, this, options);\n   }\n\n   /**\n    * @method viewNewDetatched()\n    * Return an instance of a View that is NOT attached to an ABApplication.\n    * @return {ABViewXXX}\n    */\n   viewNewDetatched(values) {\n      if (!this._mockApp) {\n         this._mockApp = this.applicationNew({});\n      }\n      return this._mockApp.viewNew(values, this._mockApp);\n   }\n\n   //\n   // Utilities\n   //\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(/* ...params */) {\n      console.error(\n         \"ABFactory.notify() is expected to be overwritten by the platform!\"\n      );\n   }\n\n   /**\n    * notifyInfo()\n    * a common routine to parse the info parameter provided to .notify() into\n    * a more detailed set of data.\n    * @param {json} info\n    * @return {json}\n    */\n   _notifyInfo(info) {\n      var moreInfo = {};\n\n      if (info) {\n         Object.keys(info).forEach((k) => {\n            switch (k) {\n               case \"field\":\n                  moreInfo.objectID = info[k].object?.id;\n                  moreInfo.objectName = info[k].object?.name;\n                  moreInfo.fieldID = info[k].id;\n                  moreInfo.fieldName = info[k].label || info[k].name;\n                  break;\n\n               case \"object\":\n                  moreInfo.objectID = info[k].id;\n                  moreInfo.objectName = info[k].name;\n                  break;\n\n               case \"datacollection\":\n                  moreInfo.datacollectionID = info[k].id;\n                  moreInfo.datacollectionName = info[k].label || info[k].name;\n                  var ds = info[k].datasource;\n                  if (ds) {\n                     moreInfo.datacollectionDSID = ds.id;\n                     moreInfo.datacollectionDSName = ds.name;\n                  }\n                  break;\n\n               case \"process\":\n                  moreInfo.processID = info[k].id;\n                  moreInfo.processName = info[k].label || info[k].name;\n                  break;\n\n               case \"req\":\n                  moreInfo.req = {\n                     jobID: info[k].jobID,\n                     tenantID: info[k]._tenantID,\n                     user: info[k]._user,\n                  };\n                  break;\n\n               case \"task\":\n                  if (info[k].process) {\n                     moreInfo.processID = info[k].process.id;\n                     moreInfo.processName =\n                        info[k].process.label || info[k].process.name;\n                  }\n                  moreInfo.taskID = info[k].id;\n                  moreInfo.taskName = info[k].label || info[k].name;\n                  break;\n\n               case \"view\":\n                  if (info[k].application) {\n                     moreInfo.applicationID = info[k].application.id;\n                     moreInfo.applicationName =\n                        info[k].application.label || info[k].application.name;\n                  }\n                  moreInfo.viewID = info[k].id;\n                  moreInfo.viewName = info[k].label || info[k].name;\n                  moreInfo.viewKey = info[k].key;\n                  break;\n               default:\n                  moreInfo[k] = info[k];\n                  break;\n            }\n         });\n      }\n\n      return moreInfo;\n   }\n}\n\nmodule.exports = ABFactory;\n","/*\n * ABFieldManager\n *\n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n/*\n * Fields\n * A name => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\n\nvar AllFieldClasses = [\n   require(\"../platform/dataFields/ABFieldString\"),\n   require(\"../platform/dataFields/ABFieldLongText\"),\n   require(\"../platform/dataFields/ABFieldNumber\"),\n   require(\"../platform/dataFields/ABFieldDate\"),\n   require(\"../platform/dataFields/ABFieldDateTime\"),\n   require(\"../platform/dataFields/ABFieldBoolean\"),\n   require(\"../platform/dataFields/ABFieldList\"),\n   require(\"../platform/dataFields/ABFieldTree\"),\n   require(\"../platform/dataFields/ABFieldEmail\"),\n   require(\"../platform/dataFields/ABFieldFile\"),\n   require(\"../platform/dataFields/ABFieldImage\"),\n   require(\"../platform/dataFields/ABFieldUser\"),\n   require(\"../platform/dataFields/ABFieldConnect\"),\n   require(\"../platform/dataFields/ABFieldCalculate\"),\n   require(\"../platform/dataFields/ABFieldTextFormula\"),\n   require(\"../platform/dataFields/ABFieldFormula\"),\n   require(\"../platform/dataFields/ABFieldAutoIndex\"),\n   require(\"../platform/dataFields/ABFieldJson\"),\n   require(\"../platform/dataFields/ABFieldCombine\"),\n   require(\"../platform/dataFields/ABFieldSelectivity\"),\n];\n\nAllFieldClasses.forEach((FIELD) => {\n   Fields[FIELD.defaults().key] = FIELD;\n});\n\nmodule.exports = class ABFieldManager {\n   /*\n    * @function allFields\n    * return all the currently defined ABFields in an array.\n    * @return [{ABField},...]\n    */\n   static allFields() {\n      var fields = [];\n      for (var f in Fields) {\n         fields.push(Fields[f]);\n      }\n      return fields;\n   }\n\n   /**\n    * @function fieldByKey()\n    * Return a specific ABField that matches the given key\n    * @param {string} key\n    *        The ABField.key value we are looking for.\n    * @return {ABFieldXXX || undefined}\n    */\n   static fieldByKey(key) {\n      return Fields[key];\n   }\n\n   /*\n    * @function newField\n    * return an instance of an ABField based upon the values.key value.\n    * @return {ABField}\n    */\n   static newField(values, object) {\n      if (values.key) {\n         try {\n            return new Fields[values.key](values, object);\n         } catch (err) {\n            console.log(\"Error\", err);\n            console.log(\"Available fields\", Fields);\n            console.log(\"Requested field\", values.key);\n         }\n      } else {\n         console.log(\"-------\");\n         console.log(\"values:\");\n         console.error(values);\n         console.log();\n         console.error(\"object:\");\n         console.error(object);\n         console.log(\"-------\");\n         throw new Error(\n            `ABFieldManager.newField(): Unknown Field Key [${values.name}][${values.key}] for object[${object.name}]`\n         );\n         //// TODO: what to do here?\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABHintCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"description\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      description: 'description',\n      type: 'hint',\n      settings: {\n         active: {boolean},\n         view: uuid\n      }\n    }\n    */\n      let active = attributes?.settings.hasOwnProperty(\"active\")\n         ? attributes?.settings?.active\n         : \"1\";\n\n      this.id = attributes?.id || \"\";\n      this.name = attributes?.name || \"New Tutorial\";\n      this.description = attributes?.description || \"\";\n      this.type = attributes?.type || \"hint\";\n      this.settings = {};\n      this.settings.active = active;\n      this.settings.transition = attributes?.settings?.transition;\n      this.settings.showIntroStep = attributes?.settings?.showIntroStep;\n      this.settings.view = attributes?.settings?.view || \"\";\n      this.stepIDs = attributes?.stepIDs || [];\n\n      let currSteps = this?._steps || {};\n      this._steps = {};\n      (attributes?.stepIDs || []).forEach((sID) => {\n         if (!sID) return;\n         var ele = this.AB.stepNew(sID, this.id);\n         if (ele) {\n            this._steps[sID] = ele;\n         }\n      });\n      if (attributes) super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"type\", \"settings\", \"stepIDs\", \"id\", \"name\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * steps()\n    * return an array of steps that match the given filter (or all steps\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABStep]}\n    */\n   steps(fn = () => true) {\n      var allSteps = Object.keys(this._steps).map((e) => {\n         return this._steps[e];\n      });\n      return allSteps.filter(fn);\n   }\n\n   /**\n    * stepAdd()\n    * insert a step to be added to this hint.\n    * @param {ABStep} element\n    *        the full instance of an ABStep to track.\n    */\n   stepAdd(step) {\n      this._steps[step.id] = step;\n   }\n\n   /**\n    * stepByID()\n    * return the {ABStep} that has the given .id\n    * @param {string} id\n    * @return {ABStep[OBJ]}\n    */\n   stepByID(id) {\n      return this._steps[id] ?? null;\n   }\n\n   /**\n    * stepRemove()\n    * remove a step from being displayed by this hint.\n    * @param {id} ABStep ID\n    *        an ID of a step\n    *        to remove.\n    */\n   stepRemove(id) {\n      // remove from stepIDs array\n      let stepIndex = this.stepIDs.indexOf(id);\n      if (stepIndex > -1) {\n         this.stepIDs.splice(stepIndex, 1);\n      }\n      // remove from _steps definitions\n      delete this._steps[id];\n   }\n};\n","const ABMLClass = require(\"../platform/ABMLClass\");\n\nmodule.exports = class ABIndexCore extends ABMLClass {\n   constructor(attributes, object) {\n      super([\"label\"], object.AB);\n      this.object = object;\n\n      this.fromValues(attributes);\n   }\n\n   fromValues(attributes) {\n      /*\n      {\n        id: uuid(),\n        name: 'name',\n        fields:[\n            {ABDataField.id}\n        ],\n        unique: {boolean}\n      }\n      */\n      this.id = attributes.id;\n      this.type = \"index\";\n      this.name = attributes.name;\n      this.unique = JSON.parse(attributes.unique || false);\n\n      // Convert to an array\n      if (attributes.fieldIDs && !Array.isArray(attributes.fieldIDs)) {\n         attributes.fieldIDs = [attributes.fieldIDs];\n      }\n\n      this._unknownFieldIDs = [];\n      this.fields = (attributes.fieldIDs || [])\n         .map((f) => {\n            let field = this.object.fieldByID(f);\n            if (!field) {\n               this._unknownFieldIDs.push(f);\n               let err = new Error(\n                  `Index[${this.name}][${this.id}] is referencing an unknown field[${f}]`\n               );\n               this.AB.notify.developer(err, {\n                  index: this.id,\n                  field: f,\n               });\n            }\n            return field;\n         })\n         .filter((fId) => fId);\n\n      if (this.fields.length == 0) {\n         let err = new Error(\n            `Index[${this.name}][${this.id}] is not referencing any fields`\n         );\n         this.AB.notify.developer(err, {\n            index: this.id,\n            attributeFieldIDs: attributes.fieldIDs || [],\n         });\n      }\n\n      // let the MLClass process the Translations\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let result = super.toObj();\n\n      result.id = this.id;\n      result.type = \"index\";\n      result.name = this.name;\n      result.unique = this.unique;\n\n      // Convert to an array\n      if (this.fields && !Array.isArray(this.fields)) {\n         this.fields = [this.fields];\n      }\n\n      result.fieldIDs = (this.fields || [])\n         .map((f) => {\n            // Convert to the id of field\n            return f.id || f;\n         })\n         .filter((fId) => fId);\n\n      // carry along the unknown Field IDs so a\n      // developer/builder can come along and trace\n      // what happened.\n      this._unknownFieldIDs.forEach((f) => {\n         result.fieldIDs.push(f);\n      });\n\n      return result;\n   }\n\n   get indexName() {\n      let tableName = this.object.dbTableName();\n\n      // Maximum 64 characters long\n      return `${tableName}_${this.name}`.replace(/ /g, \"\").substring(0, 64);\n   }\n\n   get uniqueName() {\n      let indexName = this.indexName.substring(0, 57);\n\n      return `${indexName}_unique`;\n   }\n};\n","/**\n * ABMLClassCore\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This core ABMLClass will internally track the multilingual fields\n * (this.mlFields) and auto\n */\nvar ABEmitter = require(\"../platform/ABEmitter\");\nmodule.exports = class ABMLClassCore extends ABEmitter {\n   constructor(fieldList, AB) {\n      super();\n      this.mlFields = fieldList || [\"label\"];\n      // {array}\n      // field names of values that are multilingual\n\n      this.AB = AB;\n      // {ABFactory}\n      // our common source of references for other AB objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * @method fromValues\n    * called during the .fromValues() work chain.  Should be called\n    * AFTER all the current data is already populated.\n    */\n   fromValues(attributes) {\n      this.translations = attributes.translations;\n\n      // if translations were provided\n      if (this.translations) {\n         // multilingual fields: label, description\n         this.translate();\n      } else {\n         // maybe this came from a form that has ML values in the attributes, but\n         // no .translations[] yet:\n         // check for mlFields in attributes and record them here:\n         (this.mlFields || []).forEach((field) => {\n            if (attributes[field]) {\n               this[field] = attributes[field];\n            }\n         });\n      }\n   }\n\n   /**\n    * @function defaultTranslations()\n    * return an initial .translations entry to initialize the\n    * translations values of a given translateable object.\n    * @param {array} fields  the multilingual fields this obj manages.\n    * @param {json}  values  a default set of values for this object.\n    * @return {array}  of translation entries.\n    */\n   defaultTranslations(fields, values) {\n      values = values || {};\n\n      var entry = {\n         // Question: should this be this.AB.Multilingual.currentLanguage() || \"en\"\n         // currently since the defaults are sent in programattically, we are\n         // expecting the labels to be in \"en\"\n         language_code: \"en\",\n      };\n\n      fields.forEach((f) => {\n         entry[f] = values[f] || f;\n      });\n\n      return [entry];\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return \"en\";\n   }\n\n   /**\n    * @method toObj()\n    * called during the .toObj() work chain.  Should be called\n    * BEFORE the current data is populated.\n    */\n   toObj() {\n      this.unTranslate();\n\n      return {\n         translations: this.translations,\n      };\n   }\n\n   /**\n    * @method toDefinition()\n    * convert this instance into an ABDefinition object.\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      return this.AB.definitionNew({\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.toObj(),\n      });\n   }\n\n   /**\n    * @method translate\n    * Given a set of json data, pull out any multilingual translations\n    * and flatten those values to the base object.\n    * @param {obj} obj  The instance of the object being translated\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull to\n    *                       the obj[field] value.\n    */\n   translate(obj, json, fields, languageCode = null) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      if (typeof json.translations == \"string\") {\n         json.translations = JSON.parse(json.translations);\n      }\n\n      var currLanguage = languageCode || this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         // [fix] if no matching translation is in our json.translations\n         //       object, then just use the 1st one.\n         var first = null; // the first translation entry encountered\n         var found = false; // did we find a matching translation?\n\n         json.translations.forEach(function (t) {\n            if (!first) first = t;\n\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               found = true;\n\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  if (t[f] != null) obj[f] = t[f];\n\n                  obj[f] = t[f] || \"\"; // default to '' if not found.\n               });\n            }\n         });\n\n         // if !found, then use the 1st entry we did find.  prepend desired\n         // [language_code] to each of the fields.\n         if (!found && first) {\n            // copy each field to the root object\n            fields.forEach(function (f) {\n               if (first[f] != null && first[f] != \"\")\n                  obj[f] = `[${currLanguage}]${first[f]}`;\n               else obj[f] = \"\"; // default to '' if not found.\n            });\n         }\n      }\n   }\n\n   /**\n    * @method unTranslate\n    * Take the multilingual information in the base obj, and push that\n    * down into the json.translations data.\n    * @param {obj} obj  The instance of the object with the translation\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull from\n    *                       the obj[field] value.\n    */\n   unTranslate(obj, json, fields) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      var currLanguage = this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         var foundOne = false;\n\n         json.translations.forEach(function (t) {\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  // verify obj[f] is defined\n                  // --> DONT erase the existing translation\n                  if (obj[f] != null) {\n                     t[f] = obj[f];\n                  }\n               });\n\n               foundOne = true;\n            }\n         });\n\n         // if we didn't update an existing translation\n         if (!foundOne) {\n            // create a translation entry:\n            var trans = {};\n\n            // assume current languageCode:\n            trans.language_code = currLanguage;\n\n            fields.forEach(function (field) {\n               if (obj[field] != null) {\n                  trans[field] = obj[field];\n               }\n            });\n\n            json.translations.push(trans);\n         }\n      }\n   }\n};\n","//\n// ABModelCore\n//\n// Represents the Data interface for an ABObject data.\n//\n// to use an ABModel to load a DataTable:\n// Method 1:\n//  gather all the data externally and send to the DataTable\n//    Model.findAll()\n//    .then((data)=>{\n//      DataTable.parse(data);\n//    })\n//\n\nmodule.exports = class ABModelCore {\n   constructor(object) {\n      // link me to my ABObject\n      this.object = object;\n      this.AB = object.AB;\n\n      this._where = null;\n      this._sort = null;\n      this._skip = null;\n      this._limit = null;\n\n      this.staleRefreshInProcess = false;\n      this.staleRefreshMap = {\n         /* id : Promise */\n      };\n      this.staleRefreshPending = [];\n      this.staleRefreshTimerID = null;\n\n      // include this\n      this.responseContext = { key: \"--\", context: {} };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   contextKey(key) {\n      this.responseContext.key = key || \"--\";\n   }\n\n   contextValues(values) {\n      this.responseContext.context = values || {};\n   }\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      console.error(\n         \"!!! ABModelCore.request() should be overridden by platform.\"\n      );\n      return Promise.resolve();\n   }\n\n   // /**\n   //  * @method create\n   //  * update model values on the server.\n   //  */\n   // create(values) {\n\n   //   this.prepareMultilingualData(values);\n\n   //   var params = {\n   //     url: this.object.urlRest(),\n   //     params: values\n   //   }\n   //   return this.request('post', params)\n   //     .then((data) => {\n\n   //       this.normalizeData(data);\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a create event\n   //       // triggerEvent('create', this.object, data);\n\n   //     })\n   //     .catch(reject);\n\n   // }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   // delete(id) {\n\n   //   var params = {\n   //     url: this.object.urlRestItem(id)\n   //   }\n   //   return this.request('delete', params)\n   //     .then((data) => {\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a delete event\n   //       // triggerEvent('delete', this.object, id);\n\n   //     })\n   // }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   //   findAll(cond) {\n\n   //     cond = cond || {};\n\n   //     var params = {\n   //       url: this.object.urlRest(),\n   //       params: cond\n   //     }\n   //     return this.request('get', params)\n   //       .then((data) => {\n\n   //         this.normalizeData(data.data);\n\n   //         resolve(data);\n   //       })\n   //       .catch((err) => {\n   // /// TODO: this should be done in platform/ABModel:\n   //         // if (err && err.code) {\n   //         //  switch(err.code) {\n   //         //    case \"ER_PARSE_ERROR\":\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Parse Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n\n   //         //    default:\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Unknown Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n   //         //  }\n\n   //         // }\n   // console.error(err);\n   //       })\n\n   //   }\n\n   urlParamsCreate(values) {\n      return {\n         url: this.object.urlRest(),\n         params: values,\n      };\n   }\n\n   urlParamsDelete(id) {\n      return {\n         url: this.object.urlRestItem(id),\n      };\n   }\n\n   urlParamsFind(cond) {\n      return {\n         url: this.object.urlRest(),\n         params: cond || {},\n      };\n   }\n\n   urlParamsUpdate(id, values) {\n      return {\n         url: this.object.urlRestItem(id),\n         params: values,\n      };\n   }\n\n   /**\n    * @method count\n    * count a data find with the provided condition.\n    */\n   count(cond) {\n      cond = cond || {};\n\n      var params = {\n         url: this.object.urlRestCount(),\n         params: cond,\n      };\n      return this.request(\"get\", params)\n         .then((numberOfRows) => {\n            resolve(numberOfRows);\n         })\n         .catch((err) => {\n            // TODO: this should be done in platform/ABModel\n\n            // OP.Error.log('AppBuilder:ABModel:count(): Parse Error with provided condition', { error: err, condition:cond })\n\n            // reject(err);\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method staleRefresh\n    * Process a request to refresh the data for a given entry.\n    * This method is called from a ABDataview when it receives\n    * a 'ab.datacollection.stale' message.\n    * This method will try to queue similar reqeusts and then issue 1 large\n    * request, rather than numerous individual ones.\n    * @param {obj} cond  the condition of the entry we are requesting.\n    * @return {Promise}\n    */\n   staleRefresh(cond) {\n      // cond should be { where:{ id: X } } format.\n      var PK = this.object.PK();\n\n      var currID = cond[PK]; // just in case we get a { id: X }\n      if (cond.where) {\n         currID = cond.where[PK];\n      }\n\n      return new Promise((resolve, reject) => {\n         if (!currID) {\n            var Err = new Error(\n               \"Model.staleRefresh(): could not resolve .\" + PK\n            );\n            Err.cond = cond;\n            reject(Err);\n            return;\n         }\n\n         // convert to PK : Promise object:\n         var entry = {\n            resolve: resolve,\n            reject: reject,\n         };\n         entry[PK] = currID;\n\n         // queue up refresh condition\n         this.staleRefreshPending.push(entry);\n\n         // if ! staleRefreshInProcess\n         if (!this.staleRefreshInProcess) {\n            // set timeout to another 200ms wait after LAST staleRefresh()\n            if (this.staleRefreshTimerID) {\n               clearTimeout(this.staleRefreshTimerID);\n            }\n            this.staleRefreshTimerID = setTimeout(() => {\n               this.staleRefreshProcess();\n            }, 200);\n         }\n      });\n   }\n\n   /**\n    * @method staleRefreshProcess\n    * Actually process the current pending requests.\n    */\n   staleRefreshProcess() {\n      this.staleRefreshInProcess = true;\n      var currentEntries = this.staleRefreshPending;\n      this.staleRefreshPending = [];\n      var PK = this.object.PK();\n\n      var responseHash = {\n         /* id : [{entry}] */\n      };\n      var cond = { where: {} };\n      cond.where[PK] = [];\n\n      console.log(\n         \"Model.staleRefreshProcess(): buffered \" +\n            currentEntries.length +\n            \" requests\"\n      );\n      currentEntries.forEach((e) => {\n         responseHash[e[PK]] = responseHash[e[PK]] || [];\n         responseHash[e[PK]].push(e);\n      });\n\n      cond.where[PK] = Object.keys(responseHash);\n\n      this.findAll(cond).then((res) => {\n         // for each entry we got back\n         if (Array.isArray(res.data) && res.data.length) {\n            res.data.forEach((data) => {\n               // find it's matching request:\n               if (responseHash[data[PK]]) {\n                  // respond to the pending promise\n                  // and remove these entries from responseHash\n                  var entries = responseHash[data[PK]];\n                  entries.forEach((entry) => {\n                     var resolve = entry.resolve;\n                     resolve({ data: [data] });\n                  });\n\n                  delete responseHash[data[PK]];\n               } else {\n                  console.error(\n                     \"Model.staleRefreshProcess(): returned entry was not in our responseHash:\",\n                     data,\n                     responseHash\n                  );\n               }\n            });\n         }\n\n         // now if there are any entries left in responseHash,\n         // respond with an empty entry:\n         var allKeys = Object.keys(responseHash);\n         if (allKeys.length > 0) {\n            console.warn(\n               \"Model.staleRefreshProcess(): \" +\n                  allKeys.length +\n                  \" entries with no responses. \"\n            );\n         }\n         allKeys.forEach((key) => {\n            var resolve = responseHash[key].resolve;\n            resolve({ data: [] });\n            delete responseHash[key];\n         });\n\n         // now check to see if there are any more pending requests:\n         if (this.staleRefreshPending.length > 0) {\n            // process them:\n            this.staleRefreshProcess();\n         } else {\n            // mark we are no longer processing stale requests.\n            this.staleRefreshInProcess = false;\n         }\n      });\n   }\n\n   /**\n     * @method findConnected\n     * return the connected data associated with an instance of this model.\n     *\n     * to limit the result to only a single connected column:\n     *    model.findConnected( 'col1', {data})\n     *    then ((data) => {\n     *      // data = [{obj1}, {obj2}, ... {objN}]\n     *    })\n     *\n     * To find >1 connected field data:\n     *    model.findConnected( ['col1', 'col2'], {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     col1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     col2 : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n     *\n     * To find all connected field data:\n     *    model.findConnected( {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     connectedColName1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     connectedColName2 : [{obj1}, {obj2}, ... {objN}],\n     *      //    ...\n     *      //     connectedColNameN : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n\n     * @param {string/array} fields  [optional] an array of connected fields you want to return.\n     * @param {obj} data  the current object instance (data) to lookup\n     * @return {Promise}\n     */\n   findConnected(fields, data) {\n      if (typeof data == \"undefined\") {\n         if (!Array.isArray(fields) && typeof fields == \"object\") {\n            data = fields;\n            fields = []; // return all fields\n         }\n      }\n\n      if (typeof fields == \"string\") {\n         fields = [fields]; // convert to an array of values\n      }\n\n      return new Promise((resolve, reject) => {\n         // sanity checking:\n         if (!data.id) {\n            // I can't find any connected items, if I can't find this one:\n            resolve(null);\n            return;\n         }\n\n         let cond = {};\n         cond[this.object.PK()] = data.id;\n         this.findAll({ where: cond, populate: true })\n            .then((results) => {\n               if (\n                  !results.data ||\n                  !Array.isArray(results.data) ||\n                  results.data.length == 0\n               ) {\n                  resolve([]); // no data to return.\n                  return;\n               }\n\n               // work with the first object.\n               var myObj = results.data[0];\n\n               // if only 1 field requested, then return that\n               if (fields.length == 1) {\n                  let data =\n                     myObj[\n                        fields[0].replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"\n                     ];\n                  if (!data) return resolve([]);\n\n                  if (!Array.isArray(data)) data = [data];\n\n                  resolve(data);\n                  return;\n               }\n\n               // if no fields requested, return them all:\n               if (fields.length == 0) {\n                  var allFields = this.object.fields((f) => {\n                     return f.settings.linkType;\n                  });\n                  allFields.forEach((f) => {\n                     fields.push(f.columnName);\n                  });\n               }\n\n               var returnData = {};\n               fields.forEach((colName) => {\n                  returnData[colName] =\n                     myObj[colName.replace(/[^a-z0-9\\.]/gi, \"\") + \"__relation\"];\n               });\n\n               resolve(returnData);\n            })\n            .catch((err) => {\n               console.error(\"!!! error with findConnected() attempt:\", err);\n               reject(err);\n            });\n      });\n   }\n\n   // /**\n   //  * @method loadInto\n   //  * loads the current values into the provided Webix DataTable\n   //  * @param {DataTable} DT  A Webix component that can dynamically load data.\n   //  */\n   // loadInto(DT) {\n\n   //   // if a limit was applied, then this component should be loading dynamically\n   //   if (this._limit) {\n\n   //     DT.define('datafetch', this._limit);\n   //     DT.define('datathrottle', 250);  // 250ms???\n\n   //     // catch the event where data is requested:\n   //     // here we will do our own findAll() so we can persist\n   //     // the provided .where condition.\n\n   //     // oh yeah, and make sure to remove any existing event handler when we\n   //     // perform a new .loadInto()\n   //     DT.___AD = DT.___AD || {};\n   //     if (DT.___AD.onDataRequestEvent) {\n   //       DT.detachEvent(DT.___AD.onDataRequestEvent);\n   //     }\n   //     DT.___AD.onDataRequestEvent = DT.attachEvent(\"onDataRequest\", (start, count) => {\n\n   //       var cond = {\n   //         where: this._where,\n   //         sort: this._sort,\n   //         limit: count,\n   //         skip: start\n   //       }\n\n   //       if (DT.showProgress)\n   //         DT.showProgress({ type: \"icon\" });\n\n   //       this.findAll(cond)\n   //         .then((data) => {\n   //           data.data.forEach((item) => {\n   //             if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //               item.$height = parseInt(item.properties.height);\n   //             } else if (parseInt(this._where.height) > 0) {\n   //               item.$height = parseInt(this._where.height)\n   //             }\n   //           });\n   //           DT.parse(data);\n\n   //           if (DT.hideProgress)\n   //             DT.hideProgress();\n\n   //         })\n\n   //       return false; // <-- prevent the default \"onDataRequest\"\n   //     });\n\n   //     DT.refresh();\n   //   }\n\n   //   // else just load it all at once:\n   //   var cond = {};\n   //   if (this._where) cond.where = this._where;\n   //   if (this._sort) cond.sort = this._sort;\n   //   if (this._limit != null) cond.limit = this._limit;\n   //   if (this._skip != null) cond.skip = this._skip;\n\n   //   if (DT.showProgress)\n   //     DT.showProgress({ type: \"icon\" });\n\n   //   this.findAll(cond)\n   //     .then((data) => {\n   //       data.data.forEach((item) => {\n   //         if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //           item.$height = parseInt(item.properties.height);\n   //         } else if (parseInt(this._where.height) > 0) {\n   //           item.$height = parseInt(this._where.height)\n   //         }\n   //       });\n   //       DT.parse(data);\n\n   //       if (DT.hideProgress)\n   //         DT.hideProgress();\n\n   //     })\n   //     .catch((err) => {\n   //       console.error('!!!!!', err);\n   //     })\n\n   // }\n\n   // /**\n   //  * @method limit\n   //  * set the limit value for this set of data\n   //  * @param {integer} limit  the number or elements to return in this call\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // limit(limit) {\n   //   this._limit = limit;\n   //   return this;\n   // }\n\n   // /**\n   //  * @method skip\n   //  * set the skip value for this set of data\n   //  * @param {integer} skip  the number or elements to skip\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // skip(skip) {\n   //   this._skip = skip;\n   //   return this;\n   // }\n\n   //   /**\n   //    * @method update\n   //    * update model values on the server.\n   //    */\n   //   update(id, values) {\n\n   //     this.prepareMultilingualData(values);\n\n   //     // remove empty properties\n   //     for (var key in values) {\n   //       if (values[key] == null)\n   //         delete values[key];\n   //     }\n\n   //     var params = {\n   //       url: this.object.urlRestItem(id),\n   //       params: values\n   //     }\n   //     return this.request('put', params)\n   //       .then((data) => {\n\n   //         // .data is an empty object ??\n\n   //         this.normalizeData(data);\n\n   //         return data;\n\n   //         // FIX: now with sockets, the triggers are fired from socket updates.\n   //         // trigger a update event\n   //         // triggerEvent('update', this.object, data);\n\n   //       })\n   //       .catch((err)=>{\n   // console.error(err);\n   //       });\n\n   //   }\n\n   /**\n    * @method upsert\n    * upsert model values on the server.\n    */\n   upsert(values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      var params = {\n         url: this.object.urlRest(),\n         params: values,\n      };\n      return this.request(\"put\", params)\n         .then((data) => {\n            // .data is an empty object ??\n\n            this.normalizeData(data);\n\n            return data;\n\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a update event\n            // triggerEvent('update', this.object, data);\n         })\n         .catch((err) => {\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method where\n    * set the where condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   where(cond) {\n      this._where = cond;\n      return this;\n   }\n\n   /**\n    * @method where\n    * set the sort condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   sort(cond) {\n      this._sort = cond;\n      return this;\n   }\n\n   /**\n    * @method refresh\n    * refresh model definition on the server.\n    */\n   refresh() {\n      console.error(\"!!! Depreciated: where is this being called from?\");\n      return Promise.resolve();\n\n      // var params = {\n      //    url: this.object.urlRestRefresh(),\n      // };\n      // return this.request(\"put\", params);\n   }\n\n   normalizeData(data) {\n      // convert to array\n      if (!(data instanceof Array)) data = [data];\n\n      // find all connected fields\n      var connectedFields = this.object.connectFields();\n\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n\n      // if this object has some date fields, convert the data to date object:\n      var dateFields =\n         this.object.fields(function (f) {\n            return f.key == \"date\" || f.key == \"datetime\";\n         }) || [];\n\n      // calculate fields\n      var calculatedFields = this.object.fields((f) => f.key == \"calculate\");\n\n      data.forEach((d) => {\n         if (d == null) return;\n\n         // various PK name\n         if (!d.id && this.object.PK() != \"id\") d.id = d[this.object.PK()];\n\n         // loop through data's connected fields\n         connectedFields.forEach((c) => {\n            // get the relation name so we can change the original object\n            var relationName = c.relationName();\n\n            // if (d[c.columnName] == null)\n            //  d[c.columnName] = '';\n\n            // if there is no data we can exit now\n            if (d[relationName] == null) return;\n\n            // if relation data is still a string and isn't empty\n            if (\n               typeof d[relationName] == \"string\" &&\n               d[relationName].length > 0\n            ) {\n               // parse the string into an object\n               d[relationName] = JSON.parse(d[relationName]);\n            }\n\n            // if the data is an array we need to loop through it\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((r) => {\n                  // if translations are present and they are still a string\n                  if (r.translations && typeof r.translations == \"string\") {\n                     // parse the string into an object\n                     r.translations = JSON.parse(r.translations);\n                  }\n               });\n               // if the data is not an array it is a single item...check that has translations and it is a string\n            } else if (\n               d[relationName].translations &&\n               typeof d[relationName].translations == \"string\"\n            ) {\n               // if so parse the string into an object\n               d[relationName].translations = JSON.parse(\n                  d[relationName].translations\n               );\n            }\n\n            // set .id to relation columns\n            let objectLink = c.datasourceLink;\n\n            // if we didn't get the linked object, just return.\n            if (!objectLink) return;\n\n            let olPK = objectLink.PK();\n            var relatedMlFields = objectLink.multilingualFields();\n\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((subData) => {\n                  // update .id values\n                  // if (olPK != \"id\" && subData[olPK]) subData.id = subData[olPK];\n                  const relationValue = c.getRelationValue(subData);\n                  if (olPK != \"id\") subData.id = relationValue;\n\n                  // perform Translation\n                  if (relatedMlFields.length) {\n                     objectLink.translate(subData, subData, relatedMlFields);\n                  }\n               });\n            } else {\n               // update .id value\n               // if (d[relationName][olPK]) {\n               //    d[relationName].id = d[relationName][olPK];\n               // }\n               const relationValue = c.getRelationValue(d[relationName]);\n               if (relationValue) {\n                  d[relationName].id = relationValue;\n               }\n\n               // perform Translation\n               if (relatedMlFields.length) {\n                  objectLink.translate(\n                     d[relationName],\n                     d[relationName],\n                     relatedMlFields\n                  );\n               }\n            }\n\n            // if (\n            //    objectLink &&\n            //    olPK != \"id\" &&\n            //    d[relationName] &&\n            //    !d[relationName].id\n            // ) {\n            //    // is array\n            //    if (d[relationName].forEach) {\n            //       d[relationName].forEach((subData) => {\n            //          if (subData[olPK]) subData.id = subData[olPK];\n            //       });\n            //    } else if (d[relationName][olPK]) {\n            //       d[relationName].id = d[relationName][olPK];\n            //    }\n            // }\n\n            // if (relatedMlFields.length) {\n            //    d[relationName];\n            //    objectLink.translate(\n            //       d[relationName],\n            //       d[relationName],\n            //       relatedMlFields\n            //    );\n            // }\n\n            // Change property name of connected field\n            if (!d[c.columnName]) {\n               if (c.linkType() == \"one\") {\n                  if (d[relationName]) {\n                     // d[c.columnName] = d[relationName][olPK];\n                     d[c.columnName] = c.getRelationValue(d[relationName]);\n                  } else {\n                     d[c.columnName] = null;\n                  }\n               } else {\n                  if (d[relationName]) {\n                     if (Array.isArray(d[relationName])) {\n                        try {\n                           d[c.columnName] = (d[relationName] || []).map(\n                              // (i) => i[olPK]\n                              (i) => c.getRelationValue(i)\n                           );\n                        } catch (e) {\n                           console.log(\"+++++++++++++++\");\n                           console.log(`ID:[${c.id}]`);\n                           console.log(`ColumnName:[${c.label}]`);\n                           console.log(`relationName:[${relationName}]`);\n                           console.log(`linkType:[${c.linkType()}]`);\n                           console.log(\"data:\");\n                           console.log(JSON.stringify(d[relationName]));\n                           console.log(\"+++++++++++++++\");\n                        }\n                     } else {\n                        // this is strange: supposed to be \"many\" but coming in\n                        // as \"one\"\n                        console.log(\"+++++++++++++++\");\n                        console.log(`ID:[${c.id}]`);\n                        console.log(`ColumnName:[${c.label}]`);\n                        console.log(`relationName:[${relationName}]`);\n                        console.log(`linkType:[${c.linkType()}]`);\n                        console.log(\"data:\");\n                        console.log(JSON.stringify(d[relationName]));\n                        console.log(\"+++++++++++++++\");\n                        // d[c.columnName] = [d[relationName][olPK]];\n                        d[c.columnName] = [c.getRelationValue(d[relationName])];\n                     }\n                  } else {\n                     d[c.columnName] = [];\n                  }\n               }\n            }\n         });\n\n         if (mlFields.length) {\n            this.object.translate(d, d, mlFields);\n         }\n\n         // convert the data to date object\n         dateFields.forEach((date) => {\n            if (d && d[date.columnName] != null) {\n               // check to see if data has already been converted to a date object\n               if (typeof d[date.columnName] == \"string\") {\n                  if (date.key == \"date\") {\n                     // if we are ignoring the time it means we ignore timezone as well\n                     // so lets trim that off when creating the date so it can be a simple date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName],\n                        {\n                           format: \"MM/DD/YYYY\",\n                           ignoreTime: true,\n                        }\n                     );\n                  } else {\n                     // Convert UTC to Date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName]\n                     );\n                     // d[date.columnName] = new Date(moment(d[date.columnName]));\n                  }\n               }\n            }\n         });\n\n         calculatedFields.forEach((calField) => {\n            d[calField.columnName] = calField.format(d);\n         });\n      });\n   }\n};\n","const ABObject = require(\"../platform/ABObject\");\nconst ABModelApi = require(\"../platform/ABModelApi\");\n\nmodule.exports = class ABObjectApiCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.isAPI = true;\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.readonly = parseInt(attributes.readonly) || 0;\n      this.apiType = attributes.apiType || \"Read\";\n      this.request = attributes.request ?? {};\n      this.request.headers = attributes.request?.headers ?? [];\n      this.response = attributes.response ?? {};\n      this.response.fields = attributes.response?.fields ?? [];\n      this.isFetched = attributes.isFetched ?? false;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const result = super.toObj();\n\n      result.isAPI = this.isAPI;\n      result.readonly = this.readonly;\n      result.apiType = this.apiType;\n      result.request = this.request ?? {};\n      result.request.headers = this.request?.headers ?? [];\n      result.response = this.response ?? {};\n      result.response.fields = this.response?.fields ?? [];\n      result.isFetched = this.isFetched;\n\n      return result;\n   }\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelApi(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @function getPagingValues()\n    *\n    * @return {Object} - {\n    *                       start: \"Property name of the API for start index\",\n    *                       limit: \"Property name of the API for limit return the item number\"\n    *                     }\n    */\n   getPagingValues({ skip, limit }) {\n      const result = {};\n      const pagingSettings = this.request?.paging ?? {};\n\n      if (pagingSettings.start && skip != null) {\n         result[pagingSettings.start] = skip;\n      }\n      if (pagingSettings.limit && limit != null) {\n         result[pagingSettings.limit] = limit;\n      }\n\n      return result;\n   }\n\n   dataFromKey(data) {\n      let result = [];\n\n      if (!Array.isArray(data)) data = [data];\n\n      data.forEach((item) => {\n         // Clone item\n         let itemResult = { ...item };\n\n         // Pull data from `Data key` of the API object\n         // FORMAT: \"Property.Name.Value\"\n         (this.response.dataKey ?? \"\").split(\".\").forEach((key) => {\n            if (key == \"\" || key == null) return;\n            itemResult = itemResult?.[key];\n         });\n\n         if (Array.isArray(itemResult)) {\n            result = result.concat(itemResult);\n         } else if (itemResult) {\n            result.push(itemResult);\n         }\n      });\n\n      return result;\n   }\n\n   get headers() {\n      const headers = {};\n\n      (this.request.headers ?? []).forEach((header) => {\n         if (header?.value == null) return;\n\n         headers[header.key] = header.value;\n      });\n\n      return headers;\n   }\n};\n","/**\n * ABObjectCore\n *\n * Manage the loading of specific ABObject data into useable objects\n * that can instantiate themselves and provide field and model resources.\n */\n\nvar ABModel = require(\"../platform/ABModel\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      /*\n{\n\tid: uuid(),\n\tconnName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tlabelSettings: Object,\n\tisImported: 1/0,\n\tisExternal: 1/0,\n\ttableName:'string',  // NOTE: store table name of import object to ignore async\n\tprimaryColumnName: 'string', // NOTE: store column name of PK\n\ttransColumnName: 'string', // NOTE: store column name of translations table\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:\t ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n   ],\n   indexes: [\n      {ABIndex}\n   ]\n}\n*/\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object. These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static contextKey() {\n      return \"object\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            connName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n            name: 'name',\n            labelFormat: 'xxxxx',\n            labelSettings: Object,\n            isImported: 1/0,\n            isExternal: 1/0,\n            tableName:'string',  // NOTE: store table name of import object to ignore async\n            primaryColumnName: 'string', // NOTE: store column name of PK\n            transColumnName: 'string', // NOTE: store column name of translations table\n            urlPath:'string',\n            importFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n                                        // to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n            translations:[\n                {}\n            ],\n            fields:[\n                {ABDataField}\n            ],\n            indexes: [\n               {ABIndex}\n            ]\n        }\n        */\n\n      this.id = attributes.id;\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = attributes.type || \"object\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.connName = attributes.connName || undefined; // undefined == 'appBuilder'\n      // {string} .connName\n      // the sails.config.connections[connName] configuration reference.\n      // if not set ({undefined}), then our default \"appBuilder\" config is used\n\n      this.name = attributes.name || \"\";\n      // {string} .name\n      // A name reference for this ABObject. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      this.labelFormat = attributes.labelFormat || \"\";\n      // {string} .labelFormat\n      // A string template for how to display an entry for this ABObject in\n      // common UI elements like grids, lists, etc...\n\n      this.labelSettings = attributes.labelSettings || {};\n      // {Object} .labelSettings\n\n      this.labelSettings.isNoLabelDisplay = parseInt(\n         this.labelSettings.isNoLabelDisplay || 0\n      );\n      // {bool} .isNoLabelDisplay\n\n      this.isImported = parseInt(attributes.isImported || 0);\n      // {depreciated}\n      // {bool} .isImported\n      // previously used to mark ABObjects that were created in other\n      // ABApplicaitons.  No longer relevant with Global ABObjects\n\n      this.isExternal = parseInt(attributes.isExternal || 0);\n      // {bool} .isExternal\n      // Marks this ABObject as referencing a pre-existing table in the DB that\n      // we are treating as an ABObject.\n      // These objects are not allowed to create/update/destroy the db table\n      // nor can we add/remove fields.\n      // However we are able to customize the Field definitions to change the\n      // column names, hidden attributes, Object label, etc...\n      // We can update our Defintion attributes, but not any actual DB changes.\n\n      this.tableName = attributes.tableName || \"\"; // NOTE: store table name of import object to ignore async\n      // {string} .tableName\n      // the `{database}.{tableName}` of the db table that this ABObject's data\n      // is stored in.\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.tableName = this.tableName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n\n      this.primaryColumnName = attributes.primaryColumnName || \"\"; // NOTE: store column name of PK\n      // {string} .primaryColumnName\n      // is the col_name of which key is the primary key.  By default it is\n      // \"uuid\", but in some external objects this might be something else\n      // (\"id\", \"ren_id\", etc...).\n\n      this.transColumnName = attributes.transColumnName || \"\"; // NOTE: store column name of translations table\n      // {string} .transColumnName\n      // this is a workaround to include hris_ren_data and hris_ren_trans data\n\n      this.urlPath = attributes.urlPath || \"\";\n\n      // this.importFromObject = attributes.importFromObject || \"\";\n\n      this.isSystemObject = attributes.isSystemObject;\n      // {bool} .isSystemObject\n      // We are now storing some of our System Required Data as ABObjects as well.\n      // These Objects should not be allowed to be modified by typical AppBuilder\n      // designer.  However we can enable a mode for AB Designer to then expand these\n      // ABObjects, and eventually we can use the AppBuilder to Create the AppBuilder.\n      if (\n         typeof this.isSystemObject == \"undefined\" ||\n         this.isSystemObject == \"false\"\n      ) {\n         this.isSystemObject = false;\n      }\n\n      this.createdInAppID = attributes.createdInAppID;\n      // {string} .createdInAppID\n      // the .id of the ABApplication that originally created this ABObject.\n\n      // if attributes.objectWorkspace DOES exist, make sure it is fully\n      // populated.\n      if (typeof attributes.objectWorkspace != \"undefined\") {\n         if (typeof attributes.objectWorkspace.sortFields == \"undefined\")\n            attributes.objectWorkspace.sortFields = [];\n         if (typeof attributes.objectWorkspace.filterConditions == \"undefined\")\n            attributes.objectWorkspace.filterConditions = [];\n         if (typeof attributes.objectWorkspace.frozenColumnID == \"undefined\")\n            attributes.objectWorkspace.frozenColumnID = \"\";\n         if (typeof attributes.objectWorkspace.hiddenFields == \"undefined\")\n            attributes.objectWorkspace.hiddenFields = [];\n      }\n      this.objectWorkspace = attributes.objectWorkspace || {\n         sortFields: [], // array of columns with their sort configurations\n         filterConditions: [], // array of filters to apply to the data table\n         frozenColumnID: \"\", // id of column you want to stop freezing\n         hiddenFields: [], // array of [ids] to add hidden:true to\n      };\n      // {obj} .objectWorkspace\n      // When in the ABObject editor in the AppBuilder Designer, different\n      // views of the information can be created.  These views are stored here\n      // and are avaiable to other users in the Designer.\n\n      // pull in field definitions:\n      var fields = [];\n      this.fieldIDs = attributes.fieldIDs || [];\n      // {array}  [ ABField.id, ... ]\n      // this is a collection of ALL the ABFields this object references.\n      // This will include ABFields that were directly created for this object\n      // and will include ABFields that were imported.\n\n      this.importedFieldIDs = attributes.importedFieldIDs || [];\n      // {array} [ ABField.id, ... ]\n      // this is a collection of the ABFields in our .fieldIDs that were\n      // IMPORTED.\n\n      this._unknownFieldIDs = [];\n      this.fieldIDs.forEach((id) => {\n         if (!id) return;\n\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._fields = fields;\n\n      // pull in index definitions:\n      this.importIndexes(attributes.indexIDs);\n\n      // let the MLClass now process the translations:\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method importIndexes\n    * instantiate a set of indexes from the given ids.\n    * @param {array} indexIDs The different ABDefinition IDs for each index\n    *        [ \"uuid11\", \"uuid2\", ... \"uuidN\" ]\n    */\n   importIndexes(indexIDs) {\n      this._unknownIndex = [];\n      var indexes = [];\n      (indexIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            indexes.push(this.AB.indexNew(def, this));\n         } else {\n            this._unknownIndex.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown index id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._indexes = indexes;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   // exportFields() {\n   //     var currFields = [];\n   //     this._fields.forEach((obj) => {\n   //         currFields.push(obj.toObj());\n   //     });\n   //     return currFields;\n   // }\n\n   // /**\n   //  * @method exportFields\n   //  * convert our array of fields into a settings object for saving to disk.\n   //  * @return {array}\n   //  */\n   // exportIndexes() {\n   //    var currIndexes = [];\n   //    this._indexes.forEach((idx) => {\n   //       currIndexes.push(idx.toObj());\n   //    });\n   //    return currIndexes;\n   // }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      // track the field .ids of our fields\n      var fieldIDs = this.fields().map((f) => f.id);\n      (this._unknownFieldIDs || []).forEach((id) => {\n         fieldIDs.push(id);\n      });\n      // NOTE: we keep the ._unknownFieldIDs so a developer/builder\n      // can come back and track down what happened to the missing\n      // ids.\n\n      // track the index .ids of our indexes\n      var indexIDs = this.indexes().map((f) => f.id);\n      (this._unknownIndex || []).forEach((id) => {\n         indexIDs.push(id);\n      });\n\n      return {\n         id: this.id,\n         type: this.type || \"object\",\n         connName: this.connName,\n         name: this.name,\n         labelFormat: this.labelFormat,\n         labelSettings: this.labelSettings || {},\n         isImported: this.isImported,\n         isExternal: this.isExternal,\n         tableName: this.tableName,\n         // NOTE: store table name of import object to ignore async\n         primaryColumnName: this.primaryColumnName,\n         // NOTE: store column name of PK\n         transColumnName: this.transColumnName,\n         // NOTE: store column name of translations table\n         urlPath: this.urlPath,\n         // importFromObject: this.importFromObject,\n         objectWorkspace: this.objectWorkspace,\n         isSystemObject: this.isSystemObject,\n\n         translations: obj.translations,\n         fieldIDs: fieldIDs,\n         importedFieldIDs: this.importedFieldIDs,\n         indexIDs: indexIDs,\n         createdInAppID: this.createdInAppID,\n      };\n   }\n\n   ///\n   /// Objects\n   ///\n\n   /**\n    * @method objectLinks()\n    *\n    *  return an array of ABObject that's connected.\n    *\n    * @param {object} filter\n    * @return {array} - An array of ABObject\n    */\n   objectLinks(/* filter */) {\n      var connectFields = this.connectFields();\n\n      return connectFields.map((f) => f.datasourceLink);\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method fields()\n    * return an array of all the ABFields for this ABObject.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array[ABFieldxxx]}\n    */\n   fields(fn = () => true) {\n      return this._fields.filter(fn);\n   }\n\n   /**\n    * @method fieldByID()\n    * return the object's field from the given {ABField.id}\n    * @param {string} id\n    *        the uuid of the field to return.\n    * @return {ABFieldxxx}\n    */\n   fieldByID(id) {\n      return this.fields((f) => f?.id == id)[0];\n   }\n\n   /**\n    * @method connectFields()\n    *\n    * return an array of the ABFieldConnect that is connect object fields.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   connectFields(fn = () => true) {\n      return this.fields((f) => f && f.isConnection).filter(fn);\n   }\n\n   /**\n    * @method fieldImport\n    * register the given ABField.id as an imported field for this ABObject.\n    * The ABField definition should be available before making this call.\n    * After this call, the ABField is included in the ABObject, but the ABObject\n    * has NOT been saved.\n    * @param {ABField} fieldID The ABDefinition.id for a field that is imported\n    *        into this object.\n    */\n   fieldImport(id) {\n      if (!id) return;\n\n      if (this.importedFieldIDs.indexOf(id) == -1) {\n         this.importedFieldIDs.push(id);\n      }\n\n      // just to be safe:\n      var isThere = this._fields.find((f) => f.id == id);\n      if (!isThere) {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            this._fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs = this._unknownFieldIDs || [];\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is importing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      }\n   }\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @return {ABField}\n    */\n   fieldNew(values) {\n      return this.AB.fieldNew(values, this);\n   }\n\n   /**\n    * @method fieldRemove()\n    *\n    * remove the given ABField from our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldRemove(field) {\n      var origLen = this._fields.length;\n      this._fields = this.fields(function (o) {\n         return o.id != field.id;\n      });\n\n      // be sure to remove this from our imported ids if it was\n      // listed there.\n      this.importedFieldIDs = this.importedFieldIDs.filter(\n         (fid) => fid != field.id\n      );\n\n      if (this._fields.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldReorder()\n    *\n    * reorder the fields in our object\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldReorder(sourceId, targetId) {\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == sourceId) {\n            itemMoved = this._fields[i];\n            this._fields.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < this._fields.length; j++) {\n         if (this._fields[j].columnName == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            this._fields.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      return this.save();\n   }\n\n   /**\n    * @method fieldSave()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldSave(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         this._fields.push(field);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldAdd()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values if they changed.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldAdd(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._fields.push(field);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method imageFields()\n    *\n    * return an array of the ABFieldImage fields this object has.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   imageFields(fn = () => true) {\n      return this.fields((f) => f && f.key == \"image\").filter(fn);\n   }\n\n   /**\n    * @method multilingualFields()\n    *\n    * return an array of columnnames that are multilingual.\n    *\n    * @return {array}\n    */\n   multilingualFields() {\n      return this.fields((f) => f && f.isMultilingual).map((f) => f.columnName);\n   }\n\n   /**\n    * @method indexes()\n    *\n    * return an array of all the ABIndex for this ABObject.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   indexes(filter = () => true) {\n      return this._indexes.filter(filter);\n   }\n\n   /**\n    * @method indexByID()\n    * return the object's index from the given {ABIndex.id}\n    * @param {string} id\n    *        the id of the ABIndex to return.\n    * @return {ABIndex}\n    */\n   indexByID(id) {\n      return this.indexes((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method indexRemove()\n    * remove the given ABIndex from our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexRemove(index) {\n      var origLen = this._indexes.length;\n      this._indexes = this.indexes(function (idx) {\n         return idx.id != index.id;\n      });\n\n      // persist our changes if something changed.\n      if (origLen != this._indexes.length) {\n         return this.save();\n      }\n\n      // nothing was removed, so continue on.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method indexSave()\n    * save the given ABIndex in our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexSave(index) {\n      var isIncluded = this.indexByID(index.id);\n      if (!isIncluded) {\n         this._indexes.push(index);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   ///\n   /// Working with data from server\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObject.\n    */\n   model() {\n      var model = new ABModel(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(ABObjectCore.contextKey());\n      model.contextValues({ id: this.id });\n\n      return model;\n   }\n\n   ///\n   /// URL\n   ///\n\n   /**\n    * @method urlRest\n    * return the url to access the data for this object.\n    * @return {string}\n    */\n   urlRest() {\n      return `/app_builder/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestBatch\n    * return the url to use for batch creates for this object\n    * @return {string}\n    */\n   urlRestBatch() {\n      return `/app_builder/batch/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestItem\n    * return the url to access the data for an instance of this object.\n    * @return {string}\n    */\n   urlRestItem(id) {\n      return `/app_builder/model/${this.id}/${id}`;\n   }\n\n   /**\n    * @method urlRestLog\n    * return the url to access the logs for this ABObject.\n    * @return {string}\n    */\n   urlRestLog() {\n      return `/app_builder/object/${this.id}/track`;\n   }\n\n   /**\n    * @method urlRestRefresh\n    * return the url to signal a refresh for this object.\n    * @return {string}\n    */\n   urlRestRefresh() {\n      return `/app_builder/model/refreshobject/${this.id}`;\n   }\n\n   /**\n    * @method urlCount\n    * return the url to count of data for this object.\n    * @return {string}\n    */\n   urlRestCount() {\n      return `/app_builder/model/count/${this.id}`;\n   }\n\n   ///\n   ///\tObject Workspace Settings\n   ///\n   get workspaceSortFields() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.sortFields;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.sortFields;\n      }\n   }\n\n   set workspaceSortFields(fields) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.sortFields = fields;\n      }\n      // old version\n      else {\n         this.objectWorkspace.sortFields = fields;\n      }\n   }\n\n   get workspaceFilterConditions() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.filterConditions;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.filterConditions;\n      }\n   }\n\n   set workspaceFilterConditions(filterConditions) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.filterConditions = filterConditions;\n      }\n      // old version\n      else {\n         this.objectWorkspace.filterConditions = filterConditions;\n      }\n   }\n\n   get workspaceFrozenColumnID() {\n      return this.objectWorkspace.frozenColumnID;\n   }\n\n   set workspaceFrozenColumnID(id) {\n      this.objectWorkspace.frozenColumnID = id;\n   }\n\n   get workspaceHiddenFields() {\n      return this.objectWorkspace.hiddenFields || [];\n   }\n\n   set workspaceHiddenFields(fields) {\n      this.objectWorkspace.hiddenFields = fields;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return this.isImported || this.isExternal || this.readonly;\n   }\n\n   /**\n    * @method defaultValues\n    * Collect a hash of key=>value pairs that represent the default values\n    * from each of our fields.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   defaultValues() {\n      var values = {};\n      this.fields().forEach((f) => {\n         f.defaultValue(values);\n      });\n\n      return values;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(/* data */) {\n      // NOTE: the platform needs to define a way to verify the data\n      console.warn(\"Platform.ABObject.isValidData() missing\");\n      return true;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      if (this.application == null) return null;\n\n      return this.application.urlObject(acrossApp) + this.id;\n   }\n\n   /**\n    * @method urlField\n    * return a string pointer to this object's fields\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlField(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      return this.urlPointer(acrossApp) + \"/_fields/\";\n   }\n\n   /**\n    * @method PK\n    * return a string of the primary column name\n    *\n    * @return {string}\n    */\n   PK() {\n      return this.primaryColumnName || \"uuid\";\n   }\n\n   remoteCreate(data) {\n      console.log(\n         \"object[\" + this.name + \"] received a remoteCreate() with data:\",\n         data\n      );\n   }\n\n   /**\n    * @method clone\n    * return a clone of ABObject\n    *\n    * @return {ABObjectBase}\n    */\n   clone() {\n      // ignore properties who're spend much performance\n      // NOTE: do not clone them. Just copy reference\n      let ignoreProps = [\"application\", \"_fields\"];\n\n      let cloneOne = JSON.parse(JSON.stringify(this));\n\n      ignoreProps.forEach((prop) => {\n         cloneOne[prop] = this[prop];\n      });\n\n      return cloneOne;\n   }\n\n   /**\n    * @method minRelationData()\n    * return an array of ABField.columnNames that make up\n    * the minimum fields required to display this objects __RELATION\n    * data in our UI widgets.\n    */\n   minRelationData() {\n      var fields = [this.PK()];\n\n      if (this.multilingualFields().length > 0) {\n         fields.push(\"translations\");\n      }\n\n      var labelData = this.labelFormat || \"\";\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            fields.push(field.columnName);\n         });\n      }\n\n      // System requires to include number field values\n      // because they are used on Formula/Calculate fields on client side\n      fields = fields.concat(\n         this.fields((f) => f.key == \"number\").map((f) => f.columnName)\n      );\n\n      return fields;\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = \"{\" + defaultField.id + \"}\";\n         else {\n            // if label is empty, then show .id\n            if (!labelData.trim()) {\n               let labelSettings = this.labelSettings || {};\n               if (labelSettings && labelSettings.isNoLabelDisplay) {\n                  labelData = L(labelSettings.noLabelText || \"[No Label]\");\n               } else {\n                  // show id of row\n                  labelData = `${\n                     this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"\n                  }${rowData.id}`;\n               }\n            }\n         }\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n};\n\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nvar ABObject = require(\"../platform/ABObject\");\nvar ABModelQuery = require(\"../platform/ABModelQuery\");\n\nmodule.exports = class ABObjectQueryCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      /*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\n\n\n\t// ABOBjectQuery Specific Changes\n\t// we store a list of fields by their urls:\n\tfields:[\n\t\t{\n\t\t\talias: \"\",\n\t\t\tfieldURL:'#/url/to/field',\n\t\t}\n\t],\n\n\n\t// we store a list of joins:\n\tjoins:{\n\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\tobjectURL:\"#/...\",\t\t\t\t\t// the base object of the join\n\t\tlinks: [\n\t\t\t{\n\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// the connection field of the object we are joining with.\n\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n\t\t\t\tlinks: [\n\t\t\t\t\t...\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\n\t},\n\n\n\twhere: { QBWhere }\n}\n*/\n      this.isQuery = true;\n      // {bool}\n      // a property to mark the difference between an ABObject and ABObjectQuery.\n\n      this.__missingObject = this.__missingObject ?? [];\n      // {array} fieldInfo\n      // the field info that defined an object we can't find.\n\n      this.__missingFields = this.__missingFields ?? [];\n      // {array} [ { objID, fieldID }, ... ]\n      // a list of field definitions that we are unable to resolve.\n\n      this.__cantFilter = [];\n      // {array} [ {field, fieldInfo}, ... ]\n      // a list of field that were assigned but can't be used for filtering.\n\n      this.__duplicateFields = [];\n      // {array} [ {fieldInfo}, ... ]\n      // a list of duplicate field definitions.\n\n      this.__linkProblems = [];\n      // {array} [ { message, data }, ...]\n      // a list of warning messages related to link objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * contextKey()\n    * returns a unique key that represents a query in\n    * our networking job resolutions.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"query\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.type = \"query\";\n\n      // populate connection objects\n      // this._objects = {};\n      // this.obj2Alias = attributes.obj2Alias || {};\n\n      this.alias2Obj = {}; // this gets built in the .importJoins()\n      // { \"alias\" : object.id }\n      // this is a lookup hash of a referenced alias to the Object it\n      // references.\n\n      this.objectIDs = [];\n      // {array}  of ABObject.id s that are referenced by this query.\n      // this is how we limit our searches on objects.\n      // this gets built in the .importJoins();\n\n      this.viewName = attributes.viewName || \"\";\n      // {string}\n      // this is the SQL tablename of where our Query will store it's\n      // view data.\n\n      // import all our ABObjects\n      this.importJoins(attributes.joins || {});\n\n      // import fields after joins are imported\n      this._fields = null;\n      this.importFields(attributes.fields || []);\n      // {array} [ { alias, field}, {},... ]\n      // an array of field definition structures that mark what fields this\n      // query is interested in pulling data from.\n      //    .alias : {string} matches the alias of the ABObject that the field\n      //             is from\n      //    .field : {ABFieldXXX} the link to the actual ABField instance\n\n      // Import our Where condition\n      this.where = attributes.where || {}; // .workspaceFilterConditions\n      // Fix default where.glue value\n      if (\n         this.where &&\n         !this.where.glue &&\n         this.where.rules &&\n         this.where.rules.length > 0\n      )\n         this.where.glue = \"and\";\n\n      this._objectWorkspaceViews = attributes.objectWorkspaceViews || {};\n\n      this.settings = this.settings || {};\n\n      if (attributes && attributes.settings) {\n         // convert from \"0\" => true/false\n         this.settings.grouping = JSON.parse(\n            attributes.settings.grouping || false\n         );\n         this.settings.hidePrefix = JSON.parse(\n            attributes.settings.hidePrefix || false\n         );\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.viewName = this.viewName;\n\n      result.joins = this.exportJoins();\n      result.fields = this.exportFields();\n      result.where = this.where; // .workspaceFilterConditions\n\n      result.settings = this.settings;\n\n      return result;\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    */\n   importFields(fieldSettings) {\n      var newFields = [];\n      (fieldSettings || []).forEach((fieldInfo) => {\n         if (fieldInfo == null) return;\n\n         // pull object by alias name\n         let object = this.objectByAlias(fieldInfo.alias);\n\n         // Pull object from .AB\n         if (!object && this.AB) {\n            object = this.AB.objectByID(fieldInfo.objectID);\n\n            // keep\n            if (object) {\n               this._objects = this._objects || {};\n               this._objects[fieldInfo.alias] = object;\n            }\n         }\n\n         if (!object) {\n            this.__missingObject = this.__missingObject ?? [];\n            this.__missingObject.push(fieldInfo);\n            return;\n         }\n\n         let field = object.fieldByID(fieldInfo.fieldID);\n         if (!field) {\n            this.__missingFields = this.__missingFields ?? [];\n            this.__missingFields.push({\n               objID: object.id,\n               fieldID: fieldInfo.fieldID,\n               fieldInfo,\n            });\n            return;\n         }\n\n         if (!this.canFilterField(field)) {\n            this.__cantFilter = this.__cantFilter ?? [];\n            this.__cantFilter.push({ field, fieldInfo });\n         }\n\n         // check duplicate\n         let isNew =\n            newFields.filter(\n               (f) =>\n                  f.alias == fieldInfo.alias && f.field.id == fieldInfo.fieldID\n            ).length < 1;\n\n         if (!isNew) {\n            this.__duplicateFields = this.__duplicateFields ?? [];\n            this.__duplicateFields.push({ fieldInfo });\n         }\n\n         // should be a field of base/join objects\n         if (field && this.canFilterField(field) && isNew) {\n            // add alias to field\n            // create new instance of this field:\n            var def = field.toObj();\n            let clonedField = new field.constructor(def, field.object);\n\n            clonedField.alias = fieldInfo.alias;\n\n            let alias = fieldInfo.alias;\n            if (Array.isArray(this.joins())) {\n               // NOTE: query v1\n               alias = field.object.name;\n            }\n\n            newFields.push({\n               alias: alias,\n               field: clonedField,\n            });\n         }\n      });\n      this._fields = newFields;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   exportFields() {\n      var currFields = [];\n      this._fields.forEach((fieldInfo) => {\n         currFields.push({\n            alias: fieldInfo.alias,\n            objectID: fieldInfo.field.object.id,\n            fieldID: fieldInfo.field.id,\n         });\n      });\n\n      // let's persist the faulty settings so a developer or builder can\n      // review and fix it by hand.\n      (this.__missingObject || []).forEach((f) => {\n         currFields.push(f);\n      });\n\n      (this.__cantFilter || []).forEach((f) => {\n         currFields.push(f.fieldInfo);\n      });\n\n      return currFields;\n   }\n\n   /**\n    * @method fields()\n    *\n    * Support the ABObject api by returning a list of fields relevant\n    * to this ABObjectQuery.\n    *\n    * @return {array}\n    */\n   fields(fn = () => true) {\n      if (!fn) fn = () => true;\n      return this._fields.map((f) => f.field).filter(fn);\n   }\n\n   ///\n   /// Joins & Objects\n   ///\n\n   /**\n    * @method joins()\n    *\n    * return an object of joins for this Query.\n    *\n    * @return {Object}\n    */\n   joins() {\n      return this._joins || {};\n   }\n\n   /**\n    * @method objects()\n    *\n    * return an array of all the relevant ABObjects for this Query.\n    *\n    * @return {array}\n    */\n   objects(fn = () => true) {\n      // FOR proper expected operation, this fn must only return object\n      // matches for which this ABQuery is managing objects:\n\n      return this.AB.objects((o) => this.objectIDs.indexOf(o.id) > -1).filter(\n         fn\n      );\n   }\n\n   /**\n    * @method objectAlias()\n    *\n    * return alias of of ABObjects.\n    *\n    * @return {string}\n    */\n   objectAlias(objectId) {\n      let result = null;\n\n      Object.keys(this.alias2Obj || {}).forEach((alias) => {\n         if (!result && this.alias2Obj[alias] == objectId) {\n            result = alias;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method objectBase\n    * return the origin object\n    *\n    * @return {ABObject}\n    */\n   objectBase() {\n      if (!this._joins.objectID) return null;\n\n      return this.AB.objectByID(this._joins.objectID) || null;\n   }\n\n   /**\n    * @method objectByAlias()\n    * return ABObject search by alias name\n    *\n    * @param {string} - alias name\n    * @return {ABClassObject}\n    */\n   objectByAlias(alias) {\n      var objID = this.alias2Obj[alias];\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method objectByID()\n    * return ABObject search by ID\n    * @param {string} objID\n    *        The requested {ABObject}.id of the object to return.\n    * @return {ABObject} | null\n    */\n   objectByID(objID) {\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method links()\n    *\n    * return an array of links for this Query.\n    *\n    * @return {array}\n    */\n   links(filter = () => true) {\n      return (this._links || []).filter(filter);\n   }\n\n   /**\n    * @method importJoins\n    * instantiate a set of joins from the given attributes.\n    * Our joins contain a set of ABObject URLs that should already be created in our Application.\n    * @param {Object} settings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importJoins(settings) {\n      // copy join settings\n      this._joins = this.AB.cloneDeep(settings);\n\n      var uniqueObjectIDs = {};\n      // { obj.id : obj.id }\n      // a hash of object.ids for all the relevant ABObjects necessary for this\n      // ABObjectQuery\n\n      var newLinks = [];\n      // {array} of link definitions\n      // build the operating values for this._links\n\n      let storeObject = (object, alias) => {\n         if (!object) return;\n\n         // var inThere = newObjects.filter(obj => obj.id == object.id && obj.alias == alias ).length > 0;\n         // if (!inThere) {\n         // newObjects[alias] = object;\n         // this.obj2Alias[object.id] = alias;\n         this.alias2Obj[alias] = object.id;\n         uniqueObjectIDs[object.id] = object.id;\n         // newObjects.push({\n         // \talias: alias,\n         // \tobject: object\n         // });\n         // }\n      };\n\n      let storeLinks = (links) => {\n         (links || []).forEach((link) => {\n            // var inThere = newLinks.filter(l => l.fieldID == link.fieldID).length > 0;\n            // if (!inThere) {\n            newLinks.push(link);\n            // }\n         });\n      };\n\n      this.__linkProblems = this.__linkProblems ?? [];\n\n      let processJoin = (baseObject, joins) => {\n         if (!baseObject) return;\n\n         (joins || []).forEach((link) => {\n            // Convert our saved settings:\n            //\t{\n            //\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\tobjectID: \"uuid\",\t\t\t\t\t// id of the connection object\n            //\t\tlinks: [\n            //\t\t\t{\n            //\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// uhe connection field of the object we are joining with.\n            //\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n            //\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n            //\t\t\t\tlinks: [\n            //\t\t\t\t\t...\n            //\t\t\t\t]\n            //\t\t\t}\n            //\t\t]\n            //\t},\n\n            var linkField = baseObject.fieldByID(link.fieldID);\n            if (!linkField) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linkField[${link.fieldID}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            // track our linked object\n            var linkObject = this.AB.objectByID(linkField.settings.linkObject);\n            if (!linkObject) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linked field -> linkObject[${linkField.settings.linkObject}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            storeObject(linkObject, link.alias);\n\n            storeLinks(link.links);\n\n            processJoin(linkObject, link.links);\n         });\n      };\n\n      // if (!this._joins.objectURL)\n      // \t// TODO: this is old query version\n      // \treturn;\n\n      // store the root object\n      var rootObject = this.objectBase();\n      if (!rootObject) {\n         // this._objects = newObjects;\n         this.__linkProblems.push({\n            message: \"could not resolve our base object\",\n            data: {\n               objectID: this._joins?.objectID,\n            },\n         });\n         return;\n      }\n\n      storeObject(rootObject, \"BASE_OBJECT\");\n\n      storeLinks(settings.links);\n\n      processJoin(rootObject, settings.links);\n\n      // this._objects = newObjects;\n      this._links = newLinks;\n      this.objectIDs = Object.keys(uniqueObjectIDs);\n   }\n\n   /**\n    * @method exportJoins\n    * save our list of objects into our format for persisting on the server\n    * @param {array} settings\n    */\n   exportJoins() {\n      return this.AB.cloneDeep(this._joins || {});\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelQuery(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @method canFilterObject\n    * evaluate the provided object to see if it can directly be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterObject(object) {\n      if (!object) return false;\n\n      // I can filter this object if it is one of the objects in my joins\n      return (\n         this.objects((obj) => {\n            return obj.id == object.id;\n         }).length > 0\n      );\n   }\n\n   /**\n    * @method canFilterField\n    * evaluate the provided field to see if it can be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterField(field) {\n      if (!field) return false;\n\n      // I can filter a field if it's object OR the object it links to can be filtered:\n      let object = field.object;\n      // Transition:\n      // let linkedObject = this.objects(\n      //    (obj) => obj.id == field.settings.linkObject\n      // )[0];\n      var linkedObject = field.datasourceLink;\n\n      return this.canFilterObject(object) || this.canFilterObject(linkedObject);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.AB.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\n         \"ABQueryCore.urlPointer(): Depreciated: Where is this being called?\"\n      );\n      return this.application.urlQuery(acrossApp) + this.id;\n   }\n\n   /**\n    * @method isGroup\n    *\n    * @return {boolean}\n    */\n   get isGroup() {\n      return this.settings.grouping || false;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return true;\n   }\n\n   /**\n    * @method isDisabled()\n    * check this contains removed objects or fields\n    *\n    * @return {boolean}\n    */\n   isDisabled() {\n      return this.disabled || false;\n   }\n\n   get workspaceFilterConditions() {\n      let filterConditions = super.workspaceFilterConditions;\n      if (\n         filterConditions == null ||\n         filterConditions.rules == null ||\n         !filterConditions.rules.length\n      ) {\n         filterConditions = this.where;\n      }\n\n      return filterConditions;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nconst ABProcessTaskSubProcess = require(\"../platform/process/tasks/ABProcessTaskSubProcess\");\n\nmodule.exports = class ABProcessCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      this.elements().forEach((e) => {\n         e.onProcessReady();\n      });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process\";\n      this.xmlDefinition = attributes.xmlDefinition || null;\n\n      // this.json = attributes.json || null;\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         var ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connections || {};\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"xmlDefinition\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      data.elementIDs = [];\n      for (var e in this._elements) {\n         // NOTE: when a task is initially created, it doesn't have an .id\n         // so we need to reference it by it's .diagramID\n         data.elementIDs.push(\n            this._elements[e].id ?? this._elements[e].diagramID\n         );\n      }\n\n      data.connections = this._connections;\n\n      // data.participantIDs = [];\n      // for (var p in this._participants) {\n      //     data.participantIDs.push(this._participants[p].id);\n      // }\n\n      return data;\n   }\n\n   //\n   // XML Model\n   //\n\n   /**\n    * modelDefinition()\n    * return the current xml definition for this process\n    * @return {string}\n    */\n   modelDefinition() {\n      return this.xmlDefinition;\n   }\n\n   /**\n    * modelNew()\n    * initialze our xml definition to a new state.\n    * @return {string}\n    */\n   modelNew() {\n      this.xmlDefinition = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\" id=\"process-def-${this.id}\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\n  </bpmn2:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn2:definitions>`;\n\n      //// TODO: create a default Start Task here??\n   }\n\n   /**\n    * modelUpdate()\n    * update our xml definition from the provided description.\n    * @param {string} xml  bpmn2 xml definition from our modeler.\n    * @return {string}\n    */\n   modelUpdate(xml) {\n      this.xmlDefinition = xml;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn = () => true) {\n      var allConnections = Object.keys(this._connections).map((e) => {\n         return this._connections[e];\n      });\n\n      // If parent, merge connections\n      if (this.process && this.key === \"SubProcess\") {\n         allConnections = allConnections.concat(this.process.connections());\n      }\n\n      return allConnections.filter(fn);\n   }\n\n   /**\n    * connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      return this.connections((t) => {\n         return t.id == dID;\n      })[0];\n   }\n\n   /**\n    * connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      return this.connections((c) => {\n         return c.to == dID;\n      });\n   }\n\n   /**\n    * connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      return this.connections((c) => {\n         return c.from == dID;\n      });\n   }\n\n   /**\n    * connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      delete this._connections[element.id];\n   }\n\n   /**\n    * connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      var bo = element.businessObject;\n      var from = null;\n      if (bo.sourceRef) {\n         from = bo.sourceRef.id;\n      }\n\n      var to = null;\n      if (bo.targetRef) {\n         to = bo.targetRef.id;\n      }\n\n      var connection = {\n         id: element.id,\n         type: element.type,\n         from: from,\n         to: to,\n      };\n      return connection;\n   }\n\n   /**\n    * connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      var simpleConn = this.connectionSimplyElement(element);\n      if (simpleConn.from && simpleConn.to && element.parent) {\n         this._connections[simpleConn.id] = simpleConn;\n      } else {\n         // this connection is no longer connecting anything thing.\n         // it is being removed.\n         this.connectionRemove(element);\n      }\n   }\n\n   /**\n    * elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      var allElements = Object.keys(this._elements).map((e) => {\n         return this._elements[e];\n      });\n      return allElements.filter(fn);\n   }\n\n   /**\n    * elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      this._elements[element.id || element.diagramID] = element;\n   }\n\n   /**\n    * elementByID()\n    * return the {ABProcessElement} that has the given .id\n    * @param {string} id\n    * @return {ABProcess[OBJ]}\n    */\n   elementByID(id) {\n      return this._elements[id] ?? null;\n   }\n\n   /**\n    * elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      return this.elements((t) => {\n         return t.diagramID == dID;\n      })[0];\n   }\n\n   /**\n    * elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      delete this._elements[def.id || def.diagramID];\n   }\n\n   /**\n    * isTriggeredBy()\n    * scan our tasks and see if we have a \"trigger\" task that responds to\n    * the provided key.\n    * @param {string} key the trigger key\n    * @return {bool}\n    */\n   isTriggeredBy(key) {\n      return this.taskForTriggerKey(key) != null;\n   }\n\n   /**\n    * connectionNextTask()\n    * return the ABProcessElement(s) that are after the given Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionNextTask(currElement) {\n      var elements = [];\n      var nextConnections = this.connections((c) => {\n         return c.from == currElement.diagramID;\n      });\n      nextConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.to;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      var elements = [];\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      prevConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.from;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      // var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      // return values.length > 0\n      //    ? values.length > 1\n      //       ? values\n      //       : values[0]\n      //    : null;\n\n      var tasksToAsk = this.allPreviousTasks(currElement)\n      var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      return values.length > 0\n         ? values.length > 1\n            ? values\n            : values[0]\n         : null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataFields\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * allPreviousConnections()\n    * walk through the current graph and return all the previous connections\n    * leading up to the given {ProcessElement}\n    * @param {Connection} conn\n    * @param {hash} hashConn\n    *        { connection.id : connection }\n    * @return {array}\n    */\n   allPreviousConnectionsForConnection(conn, hashConn) {\n      var prevConnections = this.connections((c) => {\n         return c.to == conn.from;\n      });\n\n      prevConnections.forEach((c) => {\n         if (!hashConn[c.id]) {\n            hashConn[c.id] = c;\n            this.allPreviousConnectionsForConnection(c, hashConn);\n         }\n      });\n   }\n   allPreviousConnectionsForElement(currElement) {\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      var hashConn = {\n         /* connection.id : connection */\n      };\n      // hashConn will contains the final collection of connections.\n\n      prevConnections.forEach((c) => {\n         hashConn[c.id] = c;\n         this.allPreviousConnectionsForConnection(c, hashConn);\n      });\n\n      // TODO: detect circle backs and remove connections that\n      // resolve back to currElement\n\n      // convert our hash into an array\n      return Object.keys(hashConn).map((k) => hashConn[k]);\n   }\n\n   allPreviousTasks(currElement) {\n      var prevTasks = {}; /* task.id : task */\n      var allPreviousConnections =\n         this.allPreviousConnectionsForElement(currElement);\n      var task;\n      allPreviousConnections.forEach((conn) => {\n         // each conn has a .to and a .from => grab both tasks\n         task = this.elementForDiagramID(conn.to);\n         if (task) prevTasks[task.id] = task;\n\n         task = this.elementForDiagramID(conn.from);\n         if (task) prevTasks[task.id] = task;\n      });\n\n      var tasksToAsk = Object.keys(prevTasks)\n         .map((k) => prevTasks[k])\n         .filter((t) => t.id != currElement.id);\n\n      return tasksToAsk;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataObjects(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataObjects\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * taskForTriggerKey()\n    * return one or more tasks that respond to the given trigger key\n    * @param {string} key a trigger key\n    * @return {[ABProcessTask,...]}\n    */\n   taskForTriggerKey(key) {\n      var trigger = this.elements((t) => {\n         return t.triggerKey == key;\n      })[0];\n      if (trigger) {\n         return trigger;\n      } else {\n         return null;\n      }\n   }\n\n   //\n   // Participants\n   //\n\n   // /**\n   //  * participants()\n   //  * return an array of participants that match the given filter (or all tasks\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided participants\n   //  *                should be returned.\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participants(fn) {\n   //     if (!fn)\n   //         fn = () => {\n   //             return true;\n   //         };\n   //     var all = Object.keys(this._participants).map((p) => {\n   //         return this._participants[p];\n   //     });\n   //     return all.filter(fn);\n   // }\n\n   // /**\n   //  * participantsForDiagramID()\n   //  * return the participant(s) that are tied to the given xml diagram ID.\n   //  * @param {string} dID the diagram ID\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participantsForDiagramID(dID) {\n   //     return this.participants((p) => {\n   //         return p.diagramID == dID;\n   //     });\n   // }\n};\n\nvar queryPreviousTasks = (\n   list,\n   method,\n   param,\n   process,\n   responses,\n   processedIDs\n) => {\n   // recursive fn() to step through our graph and compile\n   // results.\n   if (typeof responses == \"undefined\") {\n      responses = [];\n   }\n   if (typeof processedIDs == \"undefined\") {\n      processedIDs = [];\n   }\n   if (list.length == 0) {\n      return responses;\n   } else {\n      // get next task\n      const task = list.shift();\n\n      // if we haven't already done task:\n      if (processedIDs.indexOf(task.diagramID) == -1) {\n         // mark this task as having been processed\n         processedIDs.push(task.diagramID);\n\n         let value = null;\n\n         // get any field's it provides\n         if (!(task instanceof ABProcessTaskSubProcess))\n            value = task[method].apply(task, param);\n\n         // value = task[method].apply(task, param);\n\n         if (value === null) value = [];\n         responses = _concat(responses, value);\n\n         // add any previous tasks to our list\n         list = _concat(list, process.connectionPreviousTask(task));\n      }\n\n      // process next Task\n      return queryPreviousTasks(\n         list,\n         method,\n         param,\n         process,\n         responses,\n         processedIDs\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABStepCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"text\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"New Step\";\n      this.type = attributes.type || \"step\";\n      this.text = attributes.text || \"\";\n      this.settings = attributes.settings || {};\n      this.settings.event = attributes?.settings?.event || \"click\";\n      this.settings.el = attributes?.settings?.el || \"\";\n      // this.xmlDefinition = attributes.xmlDefinition || null;\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // debugger;\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"settings\", \"type\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   // /**\n   //  * steps()\n   //  * return an array of steps that match the given filter (or all steps\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided element\n   //  *                should be returned.\n   //  * @return {[ABStep]}\n   //  */\n   // steps(fn = () => true) {\n   //    var allSteps = Object.keys(this._steps).map((e) => {\n   //       return this._steps[e];\n   //    });\n   //    return allSteps.filter(fn);\n   // }\n\n   // /**\n   //  * stepAdd()\n   //  * insert a step to be added to this hint.\n   //  * @param {ABStep} element\n   //  *        the full instance of an ABStep to track.\n   //  */\n   // stepAdd(step) {\n   //    this._steps[step.id] = step;\n   // }\n\n   // /**\n   //  * stepByID()\n   //  * return the {ABStep} that has the given .id\n   //  * @param {string} id\n   //  * @return {ABStep[OBJ]}\n   //  */\n   // stepByID(id) {\n   //    return this._step[id] ?? null;\n   // }\n\n   // /**\n   //  * stepRemove()\n   //  * remove a step from being displayed by this hint.\n   //  * @param {obj|ABStep} def\n   //  *        a definition of, or full Object instance of the ABStep\n   //  *        to remove.\n   //  */\n   // stepRemove(def) {\n   //    delete this._steps[def.id];\n   // }\n};\n","/*\n * ABViewManager\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\nvar AllViews = [\n   require(\"../platform/views/ABView\"),\n   require(\"../platform/views/ABViewCarousel\"),\n   require(\"../platform/views/ABViewChart\"),\n   require(\"../platform/views/ABViewChartArea\"),\n   require(\"../platform/views/ABViewChartBar\"),\n   require(\"../platform/views/ABViewChartLine\"),\n   require(\"../platform/views/ABViewChartPie\"),\n   require(\"../platform/views/ABViewComment\"),\n   require(\"../platform/views/ABViewConditionalContainer\"),\n   require(\"../platform/views/ABViewConnectDataFilter\"),\n   require(\"../platform/views/ABViewContainer\"),\n   require(\"../platform/views/ABViewCSVExporter\"),\n   require(\"../platform/views/ABViewCSVImporter\"),\n   require(\"../platform/views/ABViewDataFilter\"),\n   require(\"../platform/views/ABViewDataview\"),\n   require(\"../platform/views/ABViewDocxBuilder\"),\n   require(\"../platform/views/ABViewGrid\"),\n   require(\"../platform/views/ABViewImage\"),\n   require(\"../platform/views/ABViewLabel\"),\n   require(\"../platform/views/ABViewLayout\"),\n   require(\"../platform/views/ABViewList\"),\n   require(\"../platform/views/ABViewMenu\"),\n   require(\"../platform/views/ABViewPage\"),\n   require(\"../platform/views/ABViewPDFImporter\"),\n   require(\"../platform/views/ABViewPivot\"),\n   require(\"../platform/views/ABViewTab\"),\n   require(\"../platform/views/ABViewText\"),\n\n   //\n   // Special Editors\n   //\n   require(\"../platform/views/ABViewGantt\"),\n   require(\"../platform/views/ABViewKanban\"),\n   require(\"../platform/views/ABViewReportsManager\"),\n   require(\"../platform/views/ABViewScheduler\"),\n\n   //\n   // Detail Components\n   //\n   require(\"../platform/views/ABViewDetail\"),\n   require(\"../platform/views/ABViewDetailCheckbox\"),\n   require(\"../platform/views/ABViewDetailConnect\"),\n   require(\"../platform/views/ABViewDetailCustom\"),\n   require(\"../platform/views/ABViewDetailImage\"),\n   // require(\"../platform/views/ABViewDetailSelectivity\"),\n   require(\"../platform/views/ABViewDetailText\"),\n   require(\"../platform/views/ABViewDetailTree\"),\n\n   //\n   // Form Components\n   //\n   require(\"../platform/views/ABViewForm\"),\n   require(\"../platform/views/ABViewFormButton\"),\n   require(\"../platform/views/ABViewFormCheckbox\"),\n   require(\"../platform/views/ABViewFormConnect\"),\n   require(\"../platform/views/ABViewFormCustom\"),\n   require(\"../platform/views/ABViewFormDatepicker\"),\n   require(\"../platform/views/ABViewFormJson\"),\n   require(\"../platform/views/ABViewFormNumber\"),\n   require(\"../platform/views/ABViewFormReadonly\"),\n   require(\"../platform/views/ABViewFormSelectMultiple\"),\n   require(\"../platform/views/ABViewFormSelectSingle\"),\n   require(\"../platform/views/ABViewFormTextbox\"),\n   require(\"../platform/views/ABViewFormTree\"),\n];\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\nAllViews.forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","/*\n * ABViewManagerMobile\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\n[\n   require(\"../platform/mobile/ABMobilePage\"),\n   require(\"../platform/mobile/ABMobileView\"),\n   require(\"../platform/mobile/ABMobileViewForm\"),\n   require(\"../platform/mobile/ABMobileViewFormButton\"),\n   require(\"../platform/mobile/ABMobileViewFormCheckbox\"),\n   require(\"../platform/mobile/ABMobileViewFormConnect\"),\n   require(\"../platform/mobile/ABMobileViewFormDate\"),\n   require(\"../platform/mobile/ABMobileViewFormDatetime\"),\n   require(\"../platform/mobile/ABMobileViewFormEmail\"),\n   require(\"../platform/mobile/ABMobileViewFormFile\"),\n   require(\"../platform/mobile/ABMobileViewFormFormula\"),\n   require(\"../platform/mobile/ABMobileViewFormImage\"),\n   require(\"../platform/mobile/ABMobileViewFormNumber\"),\n   require(\"../platform/mobile/ABMobileViewFormReadonly\"),\n   require(\"../platform/mobile/ABMobileViewFormSelectMultiple\"),\n   require(\"../platform/mobile/ABMobileViewFormSelectSingle\"),\n   require(\"../platform/mobile/ABMobileViewFormTextbox\"),\n   require(\"../platform/mobile/ABMobileViewLabel\"),\n   require(\"../platform/mobile/ABMobileViewList\"),\n].forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"mobile-view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   const columnName = field.columnName;\n\n   let value = null;\n\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName];\n   } else {\n      value = rowData[columnName];\n   }\n\n   // pull relation data\n   if (value == null && field.relationName) {\n      const relationName = field.relationName();\n      const pureRelationName = relationName.split(\".\")[1]; // support [BASE_OBJECT.columnName] field name of ABQuery\n      value = rowData[relationName] || rowData[pureRelationName];\n   }\n\n   if (value != null && !isNaN(value)) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (const k in rowData) {\n      const key = k.split(\".\")[1];\n      if (key && key == field.id) {\n         value = rowData[k];\n      }\n   }\n\n   if (\n      (value == null || (typeof value == \"number\" && isNaN(value))) &&\n      field.format\n   )\n      value = field.format(rowData);\n\n   return value;\n}\n\nfunction getConnectFieldValue(rowData, field) {\n   let connectedVal = \"\";\n\n   if (rowData) {\n      let relationName = field.relationName();\n      if (rowData[relationName]) {\n         connectedVal =\n            (field.indexField\n               ? rowData[relationName][field.indexField.columnName]\n               : null) ?? // custom index\n            (field.indexField2\n               ? rowData[relationName][field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData[relationName].id ??\n            rowData[relationName];\n      } else {\n         let fieldVal = getFieldVal(rowData, field);\n         if (fieldVal != null) {\n            connectedVal = fieldVal;\n         }\n      }\n   }\n   return connectedVal;\n}\n\nmodule.exports = class FilterComplexCore extends ABComponent {\n   constructor(idBase, AB) {\n      idBase = idBase || \"ab_filter_complex\";\n\n      if (typeof AB === \"undefined\") {\n         console.error(\"FilterComplexCore(): being called without an AB!\");\n      }\n\n      super(null, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.condition = {};\n      // const batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      const _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options = {}) {\n      this._settings = options;\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      // If conditions but no data return false\n      if (condition?.rules?.length && rowData == null) return false;\n\n      // If no conditions, then return true\n      if (!condition?.rules?.length || rowData == null) return true;\n\n      let result = condition.glue === \"and\" ? true : false;\n\n      condition.rules.forEach((filter) => {\n         // Nested filters\n         if (filter?.rules?.length) {\n            if (condition.glue === \"or\")\n               result = result || this.isValid(rowData, filter);\n            else result = result && this.isValid(rowData, filter);\n            return;\n         }\n         // Skip incomplete filter condition\n         else if (!filter.key || !filter.rule) return;\n\n         const fieldInfo = (this._Fields || []).filter(\n            (f) => f.id == filter.key || f.columnName == filter.key\n         )[0];\n\n         if (!fieldInfo) return;\n\n         let condResult = null;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         let ruleFieldType = fieldInfo.key;\n\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         let value = null;\n\n         if (fieldInfo.relationName) {\n            value = getConnectFieldValue(rowData, fieldInfo);\n         } else {\n            value = getFieldVal(rowData, fieldInfo);\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               if (value == null) value = \"\";\n\n               condResult = this.textValid(value, filter.rule, filter.value);\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = this.dateValid(value, filter.rule, filter.value);\n               break;\n            case \"number\":\n            case \"calculate\":\n            case \"formula\":\n               condResult = this.numberValid(value, filter.rule, filter.value);\n               break;\n            case \"list\":\n               condResult = this.listValid(value, filter.rule, filter.value);\n               break;\n            case \"boolean\":\n               condResult = this.booleanValid(value, filter.rule, filter.value);\n               break;\n            case \"user\":\n               condResult = this.userValid(value, filter.rule, filter.value);\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = this.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = this.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (condition.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   textValid(value, rule, compareValue) {\n      let result = false;\n\n      value = value.trim().toLowerCase();\n      value = this._logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n      compareValue = compareValue.trim().toLowerCase().replace(/  +/g, \" \");\n\n      // support \"john smith\" => \"john\" OR/AND \"smith\"\n      const compareArray = compareValue.split(\" \");\n\n      switch (rule) {\n         case \"contains\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value.indexOf(val) > -1;\n            });\n            break;\n         case \"not_contains\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value.indexOf(val) < 0;\n            });\n            break;\n         case \"equals\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value == val;\n            });\n            break;\n         case \"not_equal\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value != val;\n            });\n            break;\n         case \"is_empty\":\n            result = value == \"\" || value == null;\n            break;\n         case \"is_not_empty\":\n            result = value != \"\" && value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   dateValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!(value instanceof Date)) value = new Date(value);\n\n      if (!(compareValue instanceof Date))\n         compareValue = new Date(compareValue);\n\n      switch (rule) {\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   numberValid(value, rule, compareValue) {\n      let result = false;\n\n      value = Number(value);\n      compareValue = Number(compareValue);\n\n      switch (rule) {\n         case \"equal\":\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         case \"not_equal\":\n            result = value != compareValue;\n            break;\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   listValid(value, rule, compareValue) {\n      let result = false;\n\n      // compareValue = compareValue.toLowerCase();\n\n      if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n      switch (rule) {\n         case \"equals\":\n            if (value) result = compareValue.indexOf(value) > -1;\n            break;\n         case \"not_equal\":\n            if (value) result = compareValue.indexOf(value) < 0;\n            else result = true;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   booleanValid(value, rule, compareValue) {\n      let result = false;\n\n      switch (rule) {\n         case \"checked\":\n            result = value == true || value > 0 || value == \"true\";\n            break;\n         case \"unchecked\":\n            result = value == false || value <= 0 || value == \"false\" || value == null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   userValid(value, rule, compareValue) {\n      if (!value) return false;\n      let result = false;\n\n      // if (Array.isArray(value)) value = [value];\n\n      switch (rule) {\n         case \"is_current_user\":\n            result = value == this.Account.username;\n            break;\n         case \"is_not_current_user\":\n            result = value != this.Account.username;\n            break;\n         case \"contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length > 0;\n            break;\n         case \"not_contain_current_user\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == this.Account.username)\n                  .length < 1;\n            break;\n         case \"equals\":\n            result = (value ?? []).indexOf(compareValue) > -1;\n            break;\n         case \"not_equal\":\n            result = (value ?? []).indexOf(compareValue) < 0;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   queryFieldValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      // queryId:fieldId\n      const queryId = compareValue.split(\":\")[0],\n         fieldId = compareValue.split(\":\")[1];\n\n      // if no query\n      const query = this.AB.queries((q) => q.id == queryId)[0];\n      if (!query) return result;\n\n      // if no field\n      const field = query.fields((f) => f.id == fieldId)[0];\n      if (!field) return result;\n\n      let qIdBase = \"{idBase}-query-field-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFieldFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFieldFilter.Account = this.Account;\n      inQueryFieldFilter.fieldsLoad(query.fields());\n      inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query_field\":\n            result = inQueryFieldFilter.isValid(rowData);\n            break;\n         case \"not_in_query_field\":\n            result = !inQueryFieldFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   inQueryValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue || !this.AB) return result;\n\n      // if no query\n      let query = this.AB.queries((q) => q.id == compareValue)[0];\n      if (!query) return result;\n\n      let qIdBase = \"{idBase}-query-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFilter.Account = this.Account;\n      inQueryFilter.fieldsLoad(query.fields());\n      inQueryFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query\":\n            result = inQueryFilter.isValid(rowData);\n            break;\n         case \"not_in_query\":\n            result = !inQueryFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   dataCollectionValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      let dc = this.AB.datacollections((d) => d.id == compareValue)[0];\n\n      switch (rule) {\n         case \"in_data_collection\":\n            if (!dc) return false;\n\n            result = dc.getData((d) => d.id == value.id).length > 0;\n            break;\n         case \"not_in_data_collection\":\n            if (!dc) return true;\n\n            result = dc.getData((d) => d.id == value.id).length < 1;\n            break;\n      }\n\n      return result;\n   }\n\n   connectFieldValid(rowData, field, rule, compareValue) {\n      let relationName = field.relationName();\n\n      let connectedVal = \"\";\n\n      if (rowData) {\n         if (rowData[relationName]) {\n            connectedVal = (\n               (field.indexField\n                  ? rowData[relationName][field.indexField.columnName]\n                  : null) ?? // custom index\n               (field.indexField2\n                  ? rowData[relationName][field.indexField2.columnName]\n                  : null) ?? // custom index 2\n               rowData[relationName].id ??\n               rowData[relationName]\n            )\n               .toString()\n               .toLowerCase();\n         } else {\n            let fieldVal = getFieldVal(rowData, field);\n            if (fieldVal != null) {\n               connectedVal = fieldVal;\n            }\n         }\n      }\n\n      // If value will be the connected object, then pull value (string)\n      if (typeof connectedVal == \"object\") {\n         connectedVal =\n            connectedVal[field.indexField.columnName] ??\n            connectedVal[field.indexField2.columnName] ??\n            connectedVal[field.columnName] ??\n            connectedVal;\n      }\n\n      let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n      switch (rule) {\n         case \"contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) > -1;\n         case \"not_contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) == -1;\n         case \"equals\":\n            return connectedVal == compareValueLowercase;\n         case \"not_equal\":\n            return connectedVal != compareValueLowercase;\n         case \"in_query\":\n         case \"not_in_query\":\n            return this.inQueryValid(rowData[relationName], rule, compareValue);\n         case \"is_current_user\":\n         case \"is_not_current_user\":\n         case \"contain_current_user\":\n         case \"not_contain_current_user\":\n            return this.userValid(connectedVal, rule, compareValue);\n         case \"is_empty\":\n            return (\n               rowData[relationName] == null ||\n               rowData[relationName].length < 1 ||\n               rowData[relationName] == \"\"\n            );\n         case \"is_not_empty\":\n            return (\n               rowData[relationName] != null &&\n               ((Array.isArray(rowData[relationName]) &&\n                  rowData[relationName].length > 0) ||\n                  rowData[relationName] != \"\")\n            );\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            return this.dataCollectionValid(connectedVal, rule, compareValue);\n      }\n   }\n\n   thisObjectValid(rowData, rule, compareValue) {\n      let result = false;\n      let query = null;\n      let listThisObjects = null;\n      let alias = null;\n      let newRowData = null;\n\n      switch (rule) {\n         // if in_query condition\n         case \"in_query\":\n         case \"not_in_query\":\n            if (!this._Object) return result;\n\n            // if > 1 copy of this object in query ==> Error!\n            query = this.AB.queries((q) => q.id == compareValue)[0];\n\n            if (!query) return result;\n\n            listThisObjects = query.objects((o) => {\n               return o.id == this._Object.id;\n            });\n\n            if (listThisObjects.length > 1) {\n               // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n               // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n               // this object as part of the query.\n\n               console.error(\n                  \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n               );\n\n               return true;\n            }\n\n            // get this object's alias from the query\n            alias = query.objectAlias(this._Object.id);\n\n            // make sure all my columns in rowData are prefixed by \"alias\".columnName\n            newRowData = {};\n\n            Object.keys(rowData).forEach((key) => {\n               newRowData[`${alias}.${key}`] = rowData[key];\n            });\n\n            // then pass this on to the _logic.queryValid();\n            return this.inQueryValid(newRowData, rule, compareValue);\n\n         // if in_datacollection condition\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            // send rowData, null to datacollectionValid()\n            return this.dataCollectionValid(rowData, rule, compareValue);\n      }\n   }\n\n   processFieldsLoad(processFields = []) {\n      if (processFields && !Array.isArray(processFields)) {\n         processFields = [processFields];\n      }\n      this._ProcessFields = processFields;\n\n      this.uiInit();\n   }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param array {ABField}\n    * @param object {ABObject} [optional]\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter(\n         (f) => f && f.fieldIsFilterable && f.fieldIsFilterable()\n      );\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         // insert our uuid in addition to the rest of our fields\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n            key: \"uuid\",\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         // NOTE: Could not reference ABObjectQuery because recursive looping reference\n         // if (object instanceof ABObjectQuery) {\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   fieldsToQB() {\n      /*\n      let mapTypes = {\n         LongText: \"string\",\n         email: \"string\",\n         datetime: \"date\",\n         connectField: \"connectObject\"\n      };\n\n      const fields = this._Fields.map((f) => {\n         // Label\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         // Type\n         let type = f.key || f.type;\n         if (mapTypes[type]) type = mapTypes[type];\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return { id: f.columnName, value: label, type: type };\n      });\n      return fields;\n      */\n\n      let fields = (this._Fields || []).map((f) => {\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         let type = \"text\"; // \"text\", \"number\", \"date\"\n         let conditions = [];\n         let processFieldKeys = [];\n         let hasQueryField = true;\n\n         if (!this._settings.isProcessParticipant)\n            switch (f.key) {\n               case \"boolean\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersBoolean(f)\n                  );\n                  processFieldKeys = [\"boolean\"];\n\n                  break;\n\n               case \"connectObject\":\n                  conditions = this.fieldsAddFiltersConnectObject(f);\n\n                  // Add filter options to Custom index\n                  if (\n                     // 1:M\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"many\") ||\n                     // 1:1 isSource = true\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"one\" &&\n                        f.settings.isSource)\n                  ) {\n                     const stringResults = this.fieldsAddFiltersString(\n                        f\n                     ).filter(\n                        (opt) =>\n                           f.settings.isCustomFK ||\n                           // If this connect field does not use custom FK, then allow just `is empty` and `is not empty` filter options\n                           opt.id == \"is_empty\" ||\n                           opt.id == \"is_not_empty\"\n                     );\n                     conditions = stringResults.concat(conditions);\n                  }\n\n                  hasQueryField = false;\n                  processFieldKeys = [\"connectObject\"];\n\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  type = \"date\";\n                  conditions = conditions.concat(this.fieldsAddFiltersDate(f));\n                  processFieldKeys = [\"date\", \"datetime\"];\n\n                  break;\n\n               case \"calculate\":\n               case \"formula\":\n               case \"number\":\n                  type = \"number\";\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersNumber(f)\n                  );\n                  processFieldKeys = [\"calculate\", \"formula\", \"number\"];\n\n                  break;\n\n               case \"string\":\n               case \"LongText\":\n               case \"email\":\n               case \"AutoIndex\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersString(f)\n                  );\n                  processFieldKeys = [\n                     \"string\",\n                     \"LongText\",\n                     \"email\",\n                     \"AutoIndex\",\n                  ];\n\n                  break;\n\n               case \"list\":\n                  conditions = conditions.concat(this.fieldsAddFiltersList(f));\n\n                  break;\n\n               case \"user\":\n                  conditions = conditions.concat(this.fieldsAddFiltersUser(f));\n                  processFieldKeys = [\"user\"];\n\n                  break;\n\n               case \"uuid\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersThisObject(f)\n                  );\n                  hasQueryField = false;\n\n                  break;\n               default:\n                  break;\n            }\n         else\n            switch (f.key) {\n               case \"connectObject\":\n               case \"uuid\":\n                  hasQueryField = false;\n\n                  break;\n            }\n\n         conditions = conditions.concat(\n            this.fieldsAddFiltersQuery(f, hasQueryField)\n         );\n\n         if (this._settings.isRecordRule) {\n            conditions = conditions.concat(this.fieldsAddFiltersRecordRule(f));\n         }\n\n         let isProcessField =\n            (this._ProcessFields || []).filter((processField) => {\n               if (!processField) return false;\n\n               if (processField.field) {\n                  return processFieldKeys.includes(processField.field.key);\n               } else if (processField.key) {\n                  // uuid\n                  let processFieldId = processField.key.split(\".\").pop();\n                  return processFieldId == f.id || processFieldId == f.key;\n               }\n            }).length > 0;\n\n         if (isProcessField) {\n            conditions = conditions.concat(this.fieldsAddFiltersContext(f));\n         }\n\n         conditions = conditions.concat(this.fieldsAddFiltersCustom(f));\n\n         // let type = f.id; // the default unique identifier for our filter types\n         // if (f.id == \"this_object\") {\n         //    // if this happens to be our special \"this_object\" field, then our\n         //    // type needs to be the \"uuid\" type in the definition:\n         //    type = f.type;\n         // }\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return {\n            id: f.id,\n            value: label,\n            type: type,\n            conditions: conditions,\n            // format: () => {},\n         };\n      });\n\n      // !!! Process Fields of ABProcess\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L636\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L564\n      // (this._ProcessFields || [])\n      //    // if there is no .field, it is probably an embedded special field\n      //    .filter((pField) => pField.field == null)\n      //    .forEach((pField) => {\n      //       // like: .uuid\n      //       let key = pField.key.split(\".\").pop();\n      //       if (key == \"uuid\" && this._Object) {\n      //          fields.unshift({\n      //             id: pField.key,\n      //             value: this._Object.label,\n      //             type: \"text\",\n      //             conditions: this.fieldsAddFiltersContext(),\n      //          });\n      //       }\n      //    });\n\n      return fields;\n   }\n\n   fieldsAddFiltersDate(field) {\n      let dateConditions = {\n         less: this.labels.component.beforeCondition,\n         greater: this.labels.component.afterCondition,\n         less_or_equal: this.labels.component.onOrBeforeCondition,\n         greater_or_equal: this.labels.component.onOrAfterCondition,\n         less_current: this.labels.component.beforeCurrentCondition,\n         greater_current: this.labels.component.afterCurrentCondition,\n         less_or_equal_current:\n            this.labels.component.onOrBeforeCurrentCondition,\n         greater_or_equal_current:\n            this.labels.component.onOrAfterCurrentCondition,\n         last_days: this.labels.component.onLastDaysCondition,\n         next_days: this.labels.component.onNextDaysCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in dateConditions) {\n         result.push({\n            id: condKey,\n            value: dateConditions[condKey],\n            batch: \"datepicker\",\n            handler: (a, b) => this.dateValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersString(field) {\n      let stringConditions = {\n         contains: {\n            batch: \"text\",\n            label: this.labels.component.containsCondition,\n         },\n         not_contains: {\n            batch: \"text\",\n            label: this.labels.component.notContainsCondition,\n         },\n         equals: {\n            batch: \"text\",\n            label: this.labels.component.isCondition,\n         },\n         not_equal: {\n            batch: \"text\",\n            label: this.labels.component.isNotCondition,\n         },\n         is_empty: {\n            batch: \"none\",\n            label: this.labels.component.isEmpty,\n         },\n         is_not_empty: {\n            batch: \"none\",\n            label: this.labels.component.isNotEmpty,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in stringConditions) {\n         result.push({\n            id: condKey,\n            value: stringConditions[condKey].label,\n            batch: stringConditions[condKey].batch,\n            handler: (a, b) => this.textValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersNumber(field) {\n      let numberConditions = {\n         equals: this.labels.component.equalCondition,\n         not_equal: this.labels.component.notEqualCondition,\n         less: this.labels.component.lessThanCondition,\n         greater: this.labels.component.moreThanCondition,\n         less_or_equal: this.labels.component.lessThanOrEqualCondition,\n         greater_or_equal: this.labels.component.moreThanOrEqualCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in numberConditions) {\n         result.push({\n            id: condKey,\n            value: numberConditions[condKey],\n            batch: \"text\",\n            handler: (a, b) => this.numberValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersList(field) {\n      let listConditions = {\n         equals: this.labels.component.equalListCondition,\n         not_equal: this.labels.component.notEqualListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in listConditions) {\n         result.push({\n            id: condKey,\n            value: listConditions[condKey],\n            batch: \"list\",\n            handler: (a, b) => this.listValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersBoolean(field) {\n      let booleanConditions = {\n         checked: this.labels.component.checkedCondition,\n         unchecked: this.labels.component.notCheckedCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in booleanConditions) {\n         result.push({\n            id: condKey,\n            value: booleanConditions[condKey],\n            batch: \"none\",\n            handler: (a, b) => this.booleanValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersUser(field) {\n      let userConditions = {\n         is_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isCurrentUserCondition,\n         },\n         is_not_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isNotCurrentUserCondition,\n         },\n         contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.containsCurrentUserCondition,\n         },\n         not_contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.notContainsCurrentUserCondition,\n         },\n         equals: {\n            batch: \"user\",\n            label: this.labels.component.equalListCondition,\n         },\n         not_equal: {\n            batch: \"user\",\n            label: this.labels.component.notEqualListCondition,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in userConditions) {\n         result.push({\n            id: condKey,\n            value: userConditions[condKey].label,\n            batch: userConditions[condKey].batch,\n            handler: (a, b) => this.userValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersConnectObject(field) {\n      const connectConditions = {\n         same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.sameAsUser,\n            handler: (a, b) => this.userValid(a, \"same_as_user\", b),\n         },\n         not_same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.notSameAsUser,\n            handler: (a, b) => this.userValid(a, \"not_same_as_user\", b),\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"in_data_collection\", b),\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"not_in_data_collection\", b),\n         },\n         // TODO\n         // contains: this.labels.component.containsCondition,\n         // not_contains: this.labels.component.notContainCondition,\n         // equals: this.labels.component.isCondition,\n         // not_equal: this.labels.component.isNotCondition\n      };\n\n      const result = [];\n\n      for (let condKey in connectConditions) {\n         result.push({\n            id: condKey,\n            value: connectConditions[condKey].label,\n            batch: connectConditions[condKey].batch,\n            handler: connectConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQuery(field, hasQueryField = false) {\n      const queryConditions = hasQueryField\n         ? {\n              in_query_field: {\n                 label: this.labels.component.inQueryField,\n                 batch: \"queryField\",\n              },\n              not_in_query_field: {\n                 label: this.labels.component.notInQueryField,\n                 batch: \"queryField\",\n              },\n           }\n         : {\n              in_query: {\n                 label: this.labels.component.inQuery,\n                 batch: \"query\",\n              },\n              not_in_query: {\n                 label: this.labels.component.notInQuery,\n                 batch: \"query\",\n              },\n           };\n\n      const result = [];\n\n      for (const condKey in queryConditions) {\n         result.push({\n            id: condKey,\n            value: queryConditions[condKey].label,\n            batch: queryConditions[condKey].batch,\n            handler: (a, b) => this.queryFieldValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersThisObject(field) {\n      let thisObjectConditions = {\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in thisObjectConditions) {\n         result.push({\n            id: condKey,\n            value: thisObjectConditions[condKey].label,\n            batch: thisObjectConditions[condKey].batch,\n            handler: (a, b) => this.thisObjectValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersRecordRule(field) {\n      let recordRuleConditions = {\n         same_as_field: this.labels.component.sameAsField,\n         not_same_as_field: this.labels.component.notSameAsField,\n      };\n\n      let result = [];\n\n      for (let condKey in recordRuleConditions) {\n         result.push({\n            id: condKey,\n            value: recordRuleConditions[condKey],\n            batch: \"recordRule\",\n            handler: (a, b) => true, // TODO: record rule validation\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersContext(field) {\n      let contextConditions = {\n         context_equals: {\n            batch: \"context\",\n            label: this.labels.component.equalsProcessValue,\n            handler: (a, b) => a == b,\n         },\n         context_not_equal: {\n            batch: \"context\",\n            label: this.labels.component.notEqualsProcessValueCondition,\n            handler: (a, b) => a != b,\n         },\n         context_in: {\n            batch: \"context\",\n            label: this.labels.component.inProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) > -1,\n         },\n         context_not_in: {\n            batch: \"context\",\n            label: this.labels.component.notInProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) == -1,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in contextConditions) {\n         result.push({\n            id: condKey,\n            value: contextConditions[condKey].label,\n            batch: contextConditions[condKey].batch,\n            handler: contextConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersCustom(field) {\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id || field] ?? {};\n      return options.conditions ?? [];\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    *\n    * return an array of all the ABObjectQuery.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      const queryList = this._Queries ?? this.AB?.queries?.() ?? [];\n\n      return queryList.filter((q) => filter(q));\n   }\n\n   setValue(settings) {\n      this.condition = settings || {};\n\n      this.condition.rules = this.condition.rules || [];\n   }\n\n   /**\n    * @method getValue\n    * return the current condition of the filter.\n    * @return {JSON} -\n    * {\n    * \tglue: '', // 'and', 'or'\n    *\t\trules: [\n    *\t\t\t{\n    *\t\t\t\tkey:\t'uuid',\n    *\t\t\t\trule:\t'rule',\n    *\t\t\t\tvalue:\t'value'\n    *\t\t\t}\n    *\t\t]\n    * }\n    */\n   getValue() {\n      // When asked for a value before a condition is set, default the\n      // unset glue to \"and\";\n      if (typeof this.condition.glue == \"undefined\") {\n         this.condition.glue = \"and\";\n      }\n      return this.condition;\n   }\n\n   isComplete() {\n      let result = true;\n\n      const noValueRules = [\n         \"is_current_user\",\n         \"is_not_current_user\",\n         \"contain_current_user\",\n         \"not_contain_current_user\",\n         \"same_as_user\",\n         \"not_same_as_user\",\n         \"is_empty\",\n         \"is_not_empty\",\n         \"checked\",\n         \"unchecked\",\n      ];\n\n      const isCompleteRules = (rules = []) => {\n         if (result == false) return;\n\n         rules.forEach((r) => {\n            if (r?.rules && Array.isArray(r?.rules)) {\n               isCompleteRules(r?.rules);\n            } else {\n               result =\n                  result &&\n                  r?.key != null &&\n                  r?.key != \"\" &&\n                  r?.rule != null &&\n                  r?.rule != \"\" &&\n                  ((r?.value != null && r?.value != \"\") ||\n                     noValueRules.indexOf(r?.rule) > -1);\n            }\n         });\n      };\n\n      isCompleteRules(this.condition?.rules);\n\n      return result;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field, returnSingular = true) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   // if rowData is an array, then pull the first element to get value\n   if (rowData && rowData[0]) rowData = rowData[0];\n\n   let columnId = field.id;\n   let columnName = field.columnName;\n\n   let value = null;\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName] || rowData[columnId];\n   } else {\n      value = rowData[columnName] || rowData[columnId];\n   }\n\n   if (value) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (var k in rowData) {\n      var key = k.split(\".\")[1];\n      if (key && (key == columnId || key == columnName)) {\n         value = rowData[k];\n      }\n   }\n\n   // if value is an array, filter empty item\n   if (value && Array.isArray(value)) {\n      value = value.filter((v) => v != null);\n      if (returnSingular) value = value[0];\n   }\n\n   return value;\n}\n\nmodule.exports = class RowFilterCore extends ABComponent {\n   constructor(App, idBase, AB) {\n      idBase = idBase || \"ab_row_filter\";\n\n      super(App, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.config_settings = {};\n      // var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         /**\n          * @method getValue\n          *\n          * @return {JSON} -\n          * {\n          * \t\tglue: '', // 'and', 'or'\n          *\t\trules: [\n          *\t\t\t{\n          *\t\t\t\tkey:\t'column name',\n          *\t\t\t\trule:\t'rule',\n          *\t\t\t\tvalue:\t'value'\n          *\t\t\t}\n          *\t\t]\n          * }\n          */\n         getValue: () => {\n            return this.config_settings;\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n\n         textValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value == null) value = \"\";\n\n            value = value.toString().trim().toLowerCase();\n            value = _logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n            compareValue = compareValue\n               .toString()\n               .trim()\n               .toLowerCase()\n               .replace(/  +/g, \" \");\n\n            // support \"john smith\" => \"john\" OR/AND \"smith\"\n            var compareArray = compareValue.split(\" \");\n\n            switch (rule) {\n               case \"contains\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value.indexOf(val) > -1;\n                  });\n                  break;\n               case \"not_contains\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value.indexOf(val) < 0;\n                  });\n                  break;\n               case \"equals\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value == val;\n                  });\n                  break;\n               case \"not_equal\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value != val;\n                  });\n                  break;\n               case \"is_empty\":\n                  result = value == null || value == \"\";\n                  break;\n               case \"is_not_empty\":\n                  result = value != null && value != \"\";\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         dateValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (!(value instanceof Date)) value = new Date(value);\n\n            if (!(compareValue instanceof Date))\n               compareValue = new Date(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         numberValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            value = Number(value);\n            compareValue = Number(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         listValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value && value.toLowerCase) value = value.toLowerCase();\n\n            compareValue = compareValue.toLowerCase();\n\n            if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n            switch (rule) {\n               case \"equals\":\n                  if (value) result = compareValue.indexOf(value) > -1;\n                  break;\n               case \"not_equal\":\n                  if (value) result = compareValue.indexOf(value) < 0;\n                  else result = true;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         booleanValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // default value should be false\n            if (value == null) value = false;\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         userValid: (rowData, field, rule, compareValue) => {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // if (Array.isArray(value)) value = [value];\n\n            switch (rule) {\n               case \"is_current_user\":\n                  result = value == this.Account.username;\n                  break;\n               case \"is_not_current_user\":\n                  result = value != this.Account.username;\n                  break;\n               case \"contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length > 0;\n                  break;\n               case \"not_contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length == 0;\n                  break;\n               case \"equals\":\n                  result = value.indexOf(compareValue) > -1;\n                  break;\n               case \"not_equal\":\n                  result = value.indexOf(compareValue) < 0;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         queryValid: (rowData, rule, compareValue) => {\n            var result = false;\n\n            if (!this.AB || !compareValue) return result;\n\n            // queryId:fieldId\n            var queryId = compareValue.split(\":\")[0],\n               fieldId = compareValue.split(\":\")[1];\n\n            // if no query\n            var query = this.queries((q) => q.id == queryId)[0];\n            if (!query) return result;\n\n            // if no field\n            var field = query.fields((f) => f.id == fieldId)[0];\n            if (!field) return result;\n\n            let qIdBase = \"{idBase}-query-field-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFieldFilter = new this.constructor(this.App, qIdBase);\n            inQueryFieldFilter.Account = this.Account;\n            // inQueryFieldFilter.applicationLoad(this._Application);\n            inQueryFieldFilter.fieldsLoad(query.fields());\n            inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query_field\":\n                  result = inQueryFieldFilter.isValid(rowData);\n                  break;\n               case \"not_in_query_field\":\n                  result = !inQueryFieldFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         inQueryValid: (rowData, columnName, rule, compareValue) => {\n            let result = false;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            if (!compareValue || !this.AB) return result;\n\n            // if no query\n            let query = this.queries((q) => q.id == compareValue)[0];\n            if (!query) return result;\n\n            let qIdBase = \"{idBase}-query-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFilter = new this.constructor(this.App, qIdBase);\n            inQueryFilter.Account = this.Account;\n            // inQueryFilter.applicationLoad(this._Application);\n            inQueryFilter.fieldsLoad(query.fields());\n            inQueryFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query\":\n                  result = inQueryFilter.isValid(rowData);\n                  break;\n               case \"not_in_query\":\n                  result = !inQueryFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         dataCollectionValid: (rowData, columnName, rule, compareValue) => {\n            var result = false;\n\n            if (!compareValue || !this.AB) return result;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            let dc = this.AB.datacollectionByID(compareValue);\n\n            switch (rule) {\n               case \"in_data_collection\":\n                  if (!dc) return false;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length > 0;\n                  break;\n               case \"not_in_data_collection\":\n                  if (!dc) return true;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length < 1;\n                  break;\n            }\n\n            return result;\n         },\n\n         connectFieldValid: function (rowData, field, rule, compareValue) {\n            let relationName = field.relationName();\n\n            let connectedVal = \"\";\n\n            if (rowData) {\n               if (rowData[relationName]) {\n                  connectedVal = (\n                     (field.indexField\n                        ? rowData[relationName][field.indexField.columnName]\n                        : false) || // custom index\n                     (field.indexField2\n                        ? rowData[relationName][field.indexField2.columnName]\n                        : false) || // custom index 2\n                     rowData[relationName].id ||\n                     rowData[relationName]\n                  )\n                     .toString()\n                     .toLowerCase();\n               } else {\n                  let fieldVal = getFieldVal(rowData, field);\n                  if (fieldVal != null) {\n                     connectedVal = fieldVal;\n\n                     // an Object to a String\n                     if (typeof connectedVal == \"object\") {\n                        connectedVal =\n                           field.datasourceLink.displayData(connectedVal);\n                     }\n                  }\n               }\n            }\n\n            let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n            switch (rule) {\n               case \"contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) > -1\n                  );\n               case \"not_contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) ==\n                     -1\n                  );\n               case \"equals\":\n                  return connectedVal == compareValueLowercase;\n               case \"not_equal\":\n                  return connectedVal != compareValueLowercase;\n               case \"in_query\":\n               case \"not_in_query\":\n                  return _logic.inQueryValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n                  return _logic.userValid(rowData, field, rule, compareValue);\n               case \"is_empty\":\n                  return (\n                     rowData[relationName] == null ||\n                     rowData[relationName].length < 1 ||\n                     rowData[relationName] == \"\"\n                  );\n               case \"is_not_empty\":\n                  return (\n                     rowData[relationName] != null &&\n                     ((Array.isArray(rowData[relationName]) &&\n                        rowData[relationName].length > 0) ||\n                        rowData[relationName] != \"\")\n                  );\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n            }\n         },\n\n         thisObjectValid: (rowData, rule, compareValue) => {\n            let result = false;\n\n            switch (rule) {\n               // if in_query condition\n               case \"in_query\":\n               case \"not_in_query\":\n                  if (!this.AB || !this._Object) return result;\n\n                  // if > 1 copy of this object in query ==> Error!\n                  var query = this.queries((q) => q.id == compareValue)[0];\n                  if (!query) return result;\n\n                  var listThisObjects = query.objects((o) => {\n                     return o.id == this._Object.id;\n                  });\n                  if (listThisObjects.length > 1) {\n                     // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n                     // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n                     // this object as part of the query.\n\n                     console.error(\n                        \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n                     );\n                     return true;\n                  }\n\n                  // get this object's alias from the query\n                  var alias = query.objectAlias(this._Object.id);\n\n                  // make sure all my columns in rowData are prefixed by \"alias\".columnName\n                  var newRowData = {};\n                  Object.keys(rowData).forEach((key) => {\n                     newRowData[`${alias}.${key}`] = rowData[key];\n                  });\n\n                  // then pass this on to the _logic.queryValid();\n                  return _logic.inQueryValid(\n                     newRowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n\n               // if in_datacollection condition\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // send rowData, null to datacollectionValid()\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n            }\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      this.getValue = _logic.getValue;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      var config_settings = this.config_settings;\n      var _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         config_settings == null ||\n         config_settings.rules == null ||\n         config_settings.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      var result = config_settings.glue === \"and\" ? true : false;\n\n      config_settings.rules.forEach((filter) => {\n         if (!filter?.key || !filter?.rule) return;\n\n         var fieldInfo = this._Fields.filter((f) => f.id == filter.key)[0];\n         if (!fieldInfo) return;\n\n         var condResult;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         var ruleFieldType = fieldInfo.key;\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               condResult = _logic.textValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = _logic.dateValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"number\":\n            case \"formula\":\n               condResult = _logic.numberValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"list\":\n               condResult = _logic.listValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"boolean\":\n               condResult = _logic.booleanValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"user\":\n               condResult = _logic.userValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = _logic.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (config_settings.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method applicationLoad\n    * set application\n    *\n    * @param application {ABApplication}\n    */\n   // applicationLoad(application) {\n   //    this._Application = application;\n   // }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param {array} fields\n    *        an array of fields used in this Query\n    * @param {ABObject} object [optional]\n    *        (optional) ABObject reference if this Filter should support\n    *        the \"this object\" conditions.\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter((f) => f?.fieldIsFilterable?.());\n      // NOTE: User fields are now Connections, but we want to treat them\n      // differently.\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery.\n    * @param {fn} filter\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      let result = [];\n\n      if (this.AB) {\n         result = result.concat(this.AB.queries(filter));\n      }\n\n      if (this._Queries) {\n         result = result.concat(\n            (this._Queries || []).filter(\n               (q) => filter(q) && result.filter((r) => r.id == q.id).length < 1\n            )\n         );\n      }\n\n      return result;\n   }\n\n   setValue(settings) {\n      this.config_settings = settings || {};\n      this.config_settings.rules = this.config_settings.rules || [];\n   }\n};\n","/*\n * ABFieldAutoIndex\n *\n * An ABFieldAutoIndex defines a AutoIndex field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldAutoIndexDefaults = {\n   key: \"AutoIndex\",\n   // unique key to reference this specific DataField\n\n   description: \"Auto Increment Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Auto Index\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"tinyint\", \"smallint\", \"mediumint\", \"int\", \"integer\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   prefix: \"\",\n   delimiter: \"none\",\n   displayLength: 4,\n   previewText: \"0000\",\n};\n\nmodule.exports = class ABFieldAutoIndexCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldAutoIndexDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldAutoIndexDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getDelimiterSign(text) {\n      const delimiterItem = this.delimiterList().filter((item) => {\n         return item.id == text;\n      })[0];\n\n      return delimiterItem ? delimiterItem.sign : \"\";\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\"), sign: \"\" },\n         { id: \"comma\", value: L(\"Comma\"), sign: \", \" },\n         { id: \"slash\", value: L(\"Slash\"), sign: \"/\" },\n         { id: \"space\", value: L(\"Space\"), sign: \" \" },\n         { id: \"dash\", value: L(\"Dash\"), sign: \"-\" },\n         { id: \"colon\", value: L(\"Colon\"), sign: \":\" },\n      ];\n   }\n\n   static setValueToIndex(prefix, delimiter, displayLength, displayNumber) {\n      const resultIndex =\n         prefix +\n         this.getDelimiterSign(delimiter) +\n         (\"0000000000\" + displayNumber).slice(-parseInt(displayLength));\n\n      return resultIndex;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.displayLength = parseInt(this.settings.displayLength);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      if (!rowData?.[this.columnName]) return \"\";\n\n      try {\n         const resultAutoIndex = this.constructor.setValueToIndex(\n            this.settings.prefix,\n            this.settings.delimiter,\n            this.settings.displayLength,\n            rowData[this.columnName]\n         );\n\n         return resultAutoIndex;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n","/*\n * ABFieldBoolean\n *\n * An ABFieldBoolean defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldBooleanDefaults = {\n   key: \"boolean\",\n   // unique key to reference this specific DataField\n\n   description: \"A single checkbox that can be checked or unchecked.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"check-square-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'check-square-o'  to\n   // reference 'fa-check-square-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Checkbox\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"boolean\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"bool\", \"boolean\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: 0,\n};\n\nmodule.exports = class ABFieldBooleanCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldBooleanDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldBooleanDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      if (this.settings.default != null)\n         this.settings.default = parseInt(this.settings.default);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null && this.settings.default != null) {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n};\n","/*\n * ABFieldCalculate\n *\n * An ABFieldCalculate defines a calculate field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\n/** Private methods */\nfunction AGE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   const today = new Date();\n   const oneYear = 31536000000; // (24 * 60 * 60 * 1000) * 365;\n   const diffYears = (today - dataDate) / oneYear;\n\n   if (diffYears < 1) return Math.round(diffYears * 10) / 10;\n   // float 2 digits\n   else return Math.floor(diffYears); // no float digit\n\n   // const today = new Date();\n   // const age = today.getFullYear() - dataDate.getFullYear();\n   // if (age < 1) {\n   // \tconst m = today.getMonth() - dataDate.getMonth();\n\n   // \tage = parseFloat(\"0.\" + m);\n\n   // \t// if (m < 0 || (m === 0 && today.getDate() < dataDate.getDate())) {\n   // \t// \tage--;\n   // \t// }\n   // }\n   // return age;\n}\n\nfunction YEAR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getFullYear();\n}\n\nfunction MONTH(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // Start at 0\n   return dataDate.getMonth();\n}\n\nfunction DAY(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getDate();\n}\n\nfunction DATE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one day\n   const oneDay = 86400000; // 1000 * 60 * 60 * 24\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneDay);\n}\n\nfunction HOUR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneHour = 3600000; // 1000 * 60 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneHour);\n}\n\nfunction MINUTE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneMinute = 60000; // 1000 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneMinute);\n}\n\nfunction MINUTE_TO_HOUR(mins) {\n   const hours = mins / 60;\n   const rhours = Math.floor(hours);\n   const minutes = (hours - rhours) * 60;\n   const rminutes = Math.round(minutes);\n\n   return parseFloat(`${rhours}.${rminutes}`);\n}\n\nconst ABFieldCalculateDefaults = {\n   key: \"calculate\",\n   // unique key to reference this specific DataField\n\n   description: \"Perform a calculation based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calculator\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calculator'  to\n   // reference 'fa-calculator'\n\n   isFilterable: (field) => {\n      const unsupportedInFilter = [\"MINUTE_TO_HOUR\", \"DATE\", \"HOUR\", \"MINUTE\"];\n      const unsupported = unsupportedInFilter.filter((item) =>\n         field.settings.formula.includes(item)\n      );\n      return unsupported.length == 0;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Calculate\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   formula: \"\",\n   decimalSign: \"none\", // \"none\", \"comma\", \"period\", \"space\"\n   decimalPlaces: 0, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n};\n\nmodule.exports = class ABFieldCalculateCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCalculateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCalculateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method convertToJs\n    *\n    * @param {ABOBject} object\n    * @param {string} formula\n    * @param {object} rowData\n    * @param {integer} place\n    * @param {string} alias [Optional]\n    */\n   static convertToJs(object, formula, rowData, place, alias = null) {\n      if (!formula) return \"\";\n\n      // replace with current date\n      formula = formula.replace(/\\(CURRENT\\)/g, \"(new Date())\");\n\n      object.fields().forEach((f) => {\n         let colName = f.columnName;\n         if (colName.indexOf(\".\") > -1)\n            // QUERY: get only column name\n            colName = colName.split(\".\")[1];\n\n         // if template does not contain, then should skip\n         if (formula.indexOf(\"{\" + colName + \"}\") < 0) return;\n\n         const data =\n            rowData[`${object.alias ?? alias}.${f.columnName}`] ??\n            rowData[f.columnName];\n\n         // number fields\n         if (f.key == \"number\") {\n            const numberVal = `(${data || 0})`; // (number) - NOTE : (-5) to support negative number\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               numberVal\n            );\n         }\n         // calculate and formula fields\n         else if (f.key == \"calculate\" || f.key == \"formula\") {\n            let calVal = f.format(rowData) || 0;\n\n            // pull number only\n            if (typeof calVal == \"string\")\n               calVal = calVal.replace(/[^-0-9.]/g, \"\");\n\n            calVal = `(${calVal})`;\n\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               calVal\n            );\n         }\n         // date fields\n         else if (f.key == \"date\" || f.key == \"datetime\") {\n            const dateVal = `\"${data || \"\"}\"`; // \"date\"\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               dateVal\n            );\n         }\n         // boolean fields\n         else if (f.key == \"boolean\") {\n            const booleanVal = `(${data || 0})`; // show 1 or 0 for boolean\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               booleanVal\n            );\n         }\n      });\n\n      // decimal places - toFixed()\n      // FIX: floating number calculation\n      // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\n      return eval(formula).toFixed(place || 0);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      let place = 0;\n      if (this.settings.decimalSign != \"none\") {\n         place = this.settings.decimalPlaces;\n      }\n\n      try {\n         let result = this.constructor.convertToJs(\n            this.object,\n            this.settings.formula,\n            rowData,\n            place,\n            this.alias\n         );\n\n         if (typeof result == \"string\")\n            result = result.replace(/[^-0-9.]/g, \"\");\n\n         switch (this.settings.decimalSign) {\n            case \"comma\":\n               result = result.replace(\".\", \",\");\n               break;\n            case \"space\":\n               result = result.replace(\".\", \" \");\n               break;\n         }\n\n         return result;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldCombine\n *\n * An ABFieldCombine defines a combined field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldCombinedDefaults = {\n   key: \"combined\",\n   // unique key to reference this specific DataField\n\n   description: \"Combined Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Combined Field\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   combinedFields: \"\",\n   // {string} \"field's uuid1, field's uuid2, field's uuid3, ...\"\n   // This tells us what fields will be combined.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   delimiter: \"plus\", // plus, space, dash, period\n};\n\nmodule.exports = class ABFieldCombineCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCombinedDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCombinedDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.delimiter =\n         values.settings.delimiter || defaultValues.delimiter;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n};\n","/*\n * ABFieldConnect\n *\n * An ABFieldConnect defines a connect to other object field type.\n *\n */\n\nvar ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldConnectDefaults = {\n   key: \"connectObject\",\n   // unique key to reference this specific DataField\n\n   description: \"Connect two data objects together\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"external-link\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'external-link'  to\n   // reference 'fa-external-link'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      const linkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      return [\"one:many\", \"one:one\"].indexOf(linkType) > -1;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Connect to another record\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   linkObject: \"\", // ABObject.id\n   // the .id of the ABObject we are connected to\n\n   linkType: \"one\", // [one, many]\n   // 'one' : this object can have only 1 of our linkObject\n   // 'many': this object can have MANY of our linkObject\n\n   linkViaType: \"many\", // [one, many]\n   // 'one' : the linkedObject can only have 1 of me\n   // 'many' : the linkedObject can have many of me\n\n   linkColumn: \"\", // ABField.id\n   // the .id of the field in the linkedObject that is our\n   // connected field.\n\n   isSource: null, // bit : 1,0\n   // isSource indicates that this object is the source of the connection:\n   // if linkType==one, and isSource=1, then the value in this object's field\n   // \t\tis the connected object's id\n   // if linkType == one, and isSource = 0, then the linkObject has this obj.id\n   //  \tin it's connected field (linkColumn)\n\n   // the next 3 Fields are concerning how we connect to other ABObjects when\n   // we are NOT using the .uuid as the connecting Value. Instead, there is an\n   // ABIndex setting we are connecting with.\n   isCustomFK: 0,\n   // {bool} truthy [0,1, etc...]\n   // indicates that this connection is using 1 or more custom foreign keys\n   // for the data it is storing in it's relationship.\n\n   indexField: \"\", // ABField.id\n   // {string} {ABField.id}\n   // In a Connection defined between A --> B, this field represents the ABField\n   // that is used for the data being stored.\n   // In 1:1,  1:M  or M:1  relationships, .indexField always refers to the\n   //       field we are pulling the Data FROM.\n   // In M:N relationships:  this will refer to the A.Field.id that is a custom\n   //       key (if any).\n\n   indexField2: \"\", // ABField.id\n   // {string}  {ABField.id}\n   // In the M:N relationship: this field refers to the B.Field.id that is a\n   //       custom Key for the data we are storing.\n};\n\nmodule.exports = class ABFieldConnectCore extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldConnectDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.isConnection = true;\n      // {bool}\n      // is this an ABFieldConnect type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of connect field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n\n      // // text to Int:\n      // this.settings.isSource = parseInt(this.settings.isSource || 0);\n      // this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldConnectDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.isSource = parseInt(this.settings.isSource || 0);\n      this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(/* values */) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   relationName() {\n      // there is object name - {objectName}.{columnName}\n      if (this.columnName.indexOf(\".\") > -1) {\n         const names = this.columnName.split(\".\");\n         return `${names[0]}.${this.AB.rules.toFieldRelationFormat(names[1])}`;\n      } else {\n         return this.AB.rules.toFieldRelationFormat(this.columnName);\n      }\n   }\n\n   /**\n    * @method datasourceLink\n    * return the ABObject that this field connection links to\n    * @return {ABObject}\n    */\n   get datasourceLink() {\n      const linkObj = this.AB.objectByID(this.settings.linkObject);\n      if (!linkObj) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkObject[${this.settings.linkObject}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkObject: this.settings.linkObject,\n         });\n      }\n      return linkObj;\n   }\n\n   /**\n    * @method fieldLink\n    * return the ABField that we are linked to.\n    * @return {ABDataField}  or undefined if not found.\n    */\n   get fieldLink() {\n      const objectLink = this.datasourceLink;\n      if (!objectLink) return null; // note: already Notified\n\n      const linkColumn = objectLink.fieldByID(this.settings.linkColumn);\n      if (!linkColumn) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkColumn[${this.settings.linkColumn}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkColumn: this.settings.linkColumn,\n         });\n      }\n      return linkColumn;\n   }\n\n   /**\n    * @method pullRelationValues\n    * Return the data values for this field entry in the provided data row.\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData;\n\n      // Get linked object\n      const linkedObject = this.datasourceLink;\n\n      let data = this.dataValue(row);\n      if (data && linkedObject) {\n         // convert to JSON\n         if (typeof data == \"string\") {\n            try {\n               data = JSON.parse(data);\n            } catch (e) {\n               // must be a UUID\n               // so just set that to selectedData:\n               selectedData = data;\n            }\n         }\n\n         selectedData = data;\n      }\n\n      return selectedData;\n   }\n\n   dataValue(rowData) {\n      if (rowData == null) return \"\";\n\n      const propName = `${this.object.name}.${this.relationName()}`;\n\n      return (\n         rowData[this.relationName()] ||\n         rowData[propName] ||\n         rowData[this.columnName] ||\n         \"\"\n      );\n   }\n\n   format(rowData) {\n      const val = this.pullRelationValues(rowData);\n      const linkedObject = this.datasourceLink;\n\n      // array\n      if (Array.isArray(val))\n         return val\n            .map((v) => {\n               if (v.text == null) return linkedObject.displayData(v) || \"\";\n               else return v.text || \"\";\n            })\n            .join(\", \");\n      // string\n      else if (val) {\n         if (val.text == null) return linkedObject.displayData(rowData) || \"\";\n         else if (val.text) return val.text || \"\";\n      }\n      // empty string\n      else return \"\";\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkType() {\n      return this.settings.linkType;\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkViaType() {\n      return this.settings.linkViaType;\n   }\n\n   /**\n    * @method isSource\n    * does this object contain the .id of the remote object (in case of linkType : one )\n    * @return {bool}\n    */\n   isSource() {\n      return this.settings.isSource;\n   }\n\n   /**\n    * @property indexField\n    * @return {ABField}\n    */\n   get indexField() {\n      if (!this.settings.isCustomFK || !this.settings.indexField) {\n         return null;\n      }\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n      // 1:M\n      if (linkType === \"one:many\") {\n         return this.datasourceLink.fieldByID(this.settings.indexField);\n      }\n      // 1:1\n      else if (linkType === \"one:one\") {\n         if (this.settings.isSource) {\n            return this.datasourceLink.fieldByID(this.settings.indexField);\n         } else {\n            return this.object.fieldByID(this.settings.indexField);\n         }\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         return this.object.fieldByID(this.settings.indexField);\n      }\n      // M:N\n      else if (linkType === \"many:many\") {\n         let indexField = this.object.fieldByID(this.settings.indexField);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField\n            );\n\n         return indexField;\n      }\n\n      return null;\n   }\n\n   /**\n    * @property indexField2\n    * @return {ABField}\n    */\n   get indexField2() {\n      if (!this.settings.isCustomFK || !this.settings.indexField2) {\n         return null;\n      }\n\n      let indexField;\n\n      // M:N only\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         indexField = this.object.fieldByID(this.settings.indexField2);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField2\n            );\n      }\n\n      return indexField;\n   }\n\n   /**\n    * @method getRelationValue\n    * pull values for update connect data\n    * @param {Object} rowData\n    * @param {Object} options - {\n    *                               forUpdate: boolean\n    *                           }\n    * @return {Object}\n    */\n   getRelationValue(rowData, options = {}) {\n      if (rowData == null) return;\n      let colName;\n      const indexField = this.indexField;\n      const datasourceLink = this.datasourceLink;\n\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n\n      // custom index\n      // M:N\n      if (linkType === \"many:many\") {\n         const indexField2 = this.indexField2;\n\n         if (indexField && indexField.object.id == datasourceLink.id) {\n            colName = indexField.columnName;\n         } else if (indexField2 && indexField2.object.id == datasourceLink.id) {\n            colName = indexField2.columnName;\n         }\n      }\n      // 1:M, 1:1 isSource = true\n      else if (\n         indexField &&\n         (linkType === \"one:many\" ||\n            (linkType === \"one:one\" && this.settings.isSource))\n      ) {\n         colName = indexField.columnName;\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         // NOTE: M:1 has special case\n         // it uses different value for search and update.\n         // UPDATE uses row id\n         // SEARCH uses custom index value\n         if (options.forUpdate) {\n            colName = datasourceLink.PK();\n         } else {\n            colName = indexField\n               ? indexField.columnName\n               : this.fieldLink.columnName;\n         }\n      }\n      // NO CUSTOM INDEX\n      else if (datasourceLink) {\n         colName = datasourceLink.PK();\n      }\n\n      let result =\n         rowData[colName] ||\n         rowData[this.object?.PK()] ||\n         rowData.id ||\n         rowData;\n\n      if (colName == \"id\") {\n         result = parseInt(result);\n      }\n\n      return result;\n   }\n};\n","/*\n * ABFieldCore\n *\n * ABFieldBase defines the common ABField structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABObject classes.\n *\n */\n// const ABEmitter = require(\"../../platform/ABEmitter\");\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nmodule.exports = class ABFieldCore extends ABMLClass {\n   constructor(values, object, fieldDefaults) {\n      super([\"label\"], object.AB);\n\n      // NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      this.defaults = fieldDefaults || {};\n\n      /*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name\n\t\t\tisImported: 1/0,\t\t\t// flag to mark is import from other object\n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\t\t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n\t\t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n\t\t\t\twidth: {int}\t\t\t// width of display column\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n\n      this.object = object;\n\n      this.fromValues(values);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n   static get reservedNames() {\n      return [\n         \"id\",\n         \"created_at\",\n         \"updated_at\",\n         \"properties\",\n         \"createdAt\",\n         \"updatedAt\",\n      ];\n   }\n\n   static defaultValues() {\n      return {};\n   }\n\n   // unique key to reference this specific DataField\n   fieldKey() {\n      return this.defaults.key;\n   }\n\n   /**\n    * Sails ORM data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldOrmTypes() {\n      if (this.defaults.compatibleOrmTypes) {\n         if (Array.isArray(this.defaults.compatibleOrmTypes)) {\n            return this.defaults.compatibleOrmTypes;\n         } else {\n            return [this.defaults.compatibleOrmTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * Mysql data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldMysqlTypes() {\n      if (this.defaults.compatibleMysqlTypes) {\n         if (Array.isArray(this.defaults.compatibleMysqlTypes)) {\n            return this.defaults.compatibleMysqlTypes;\n         } else {\n            return [this.defaults.compatibleMysqlTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   fieldIcon() {\n      return this.defaults.icon;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldMenuName() {\n      return this.defaults.menuName;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldDescription() {\n      return this.defaults.description;\n   }\n\n   // the flag to set when checking if field should be filterable\n   fieldIsFilterable() {\n      if (this.defaults.isFilterable != null) {\n         if (typeof this.defaults.isFilterable === \"function\") {\n            return this.defaults.isFilterable(this);\n         } else {\n            return this.defaults.isFilterable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if field should be sortable\n   fieldIsSortable() {\n      if (this.defaults.isSortable != null) {\n         if (typeof this.defaults.isSortable === \"function\") {\n            return this.defaults.isSortable(this);\n         } else {\n            return this.defaults.isSortable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if the field should be used as a label\n   fieldUseAsLabel() {\n      if (this.defaults.useAsLabel != null) {\n         if (typeof this.defaults.useAsLabel === \"function\") {\n            return this.defaults.useAsLabel(this);\n         } else {\n            return this.defaults.useAsLabel;\n         }\n      }\n\n      return 1;\n   }\n\n   fieldSupportRequire() {\n      if (this.defaults.supportRequire) return this.defaults.supportRequire;\n      // default\n      else return true;\n   }\n\n   fieldSupportQuery() {\n      if (this.defaults.supportQuery != null) {\n         if (typeof this.defaults.supportQuery === \"function\") {\n            return this.defaults.supportQuery(this);\n         } else {\n            return this.defaults.supportQuery;\n         }\n      }\n\n      return true;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABField instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      return {\n         id: this.id,\n         type: this.type || \"field\",\n         key: this.key,\n         icon: this.icon,\n         isImported: this.isImported,\n         columnName: this.columnName,\n         settings: this.settings,\n         translations: obj.translations,\n      };\n   }\n\n   defaultCheck(val, defaultVal) {\n      let returnVal = defaultVal;\n      if (typeof val != \"undefined\") {\n         returnVal = val;\n      }\n      return returnVal;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      if (!this.id) this.id = values.id; // NOTE: only exists after .save()\n      this.type == values.type || \"field\";\n      this.key = values.key || this.fieldKey();\n      this.icon = values.icon || this.fieldIcon();\n\n      values.settings = values.settings || {};\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.columnName = values.columnName || \"\";\n\n      this.isImported = values.isImported || 0;\n\n      this.settings = values.settings;\n      this.settings.showIcon = this.defaultCheck(values.settings.showIcon, \"1\");\n      this.settings.required = this.defaultCheck(values.settings.required, \"0\");\n      this.settings.width = this.defaultCheck(values.settings.width, \"0\");\n\n      // convert from \"0\" => 0\n      this.isImported = parseInt(this.isImported);\n      this.settings.showIcon = parseInt(this.settings.showIcon);\n      this.settings.required = parseInt(this.settings.required);\n      this.settings.unique = parseInt(this.settings.unique || 0);\n      this.settings.width = parseInt(this.settings.width);\n\n      // we're responsible for setting up our specific settings:\n      const defaultValues = this.constructor.defaultValues() || {};\n      for (const dv in defaultValues) {\n         this.settings[dv] = this.defaultCheck(\n            values.settings[dv],\n            defaultValues[dv]\n         );\n      }\n\n      // const the MLClass now process the Translations\n      super.fromValues(values);\n\n      // final validity check: columnName really should have a value:\n      this.columnName = this.columnName || this.label;\n\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.columnName = this.columnName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n   }\n\n   /**\n    * @method urlPointer()\n    * return a string pointer to decode this object from the root application\n    * object.\n    * @return {string} pointer reference\n    */\n   urlPointer() {\n      return this.object.urlField() + this.id;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"\";\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    */\n   isValidData(data, validator) {\n      // console.error('!!! Field ['+this.fieldKey()+'] has not implemented .isValidData()!!!');\n      if (\n         this.settings.required &&\n         (data[this.columnName] == null || data[this.columnName] == \"\") &&\n         data[this.columnName] != 0\n      ) {\n         validator.addError(this.columnName, \"This is a required field.\");\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return false;\n   }\n\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = \"\";\n      if (rowData?.[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData?.[propName] != null) {\n         result = rowData[propName];\n      }\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * return display text to detail comonent and define label of object\n    *\n    * @param {Object} rowData - data\n    */\n   format(rowData) {\n      if (rowData) {\n         return this.dataValue(rowData);\n      } else return \"\";\n   }\n\n   /**\n    * @method toDefinition()\n    *\n    * convert this instance into an ABDefinition object.\n    *\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      const myDef = super.toDefinition();\n\n      // attempt to provide a more descriptive name:\n      // [obj]->[fieldName]\n      if (myDef.name == \"\") {\n         myDef.name =\n            myDef.json.name || myDef.json.label || myDef.json.columnName;\n      }\n      if (this.object && this.object.name) {\n         myDef.name = `${this.object.name}->${myDef.name}`;\n      }\n      return myDef;\n   }\n};\n","/*\n * ABFieldDate\n *\n * An ABFieldDate defines a date field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"date\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from a calendar.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calendar\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calendar'  to\n   // reference 'fa-calendar'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"date\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"date\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   dateFormat: 2, // 1 (Ignore date), 2, 3, 4, 5\n   defaultDate: 1, // 1 (None), 2 (Current Date), 3 (Specific Date)\n   defaultDateValue: null, // {Date}\n   validateCondition: \"none\",\n   validateRangeUnit: \"days\",\n   validateRangeBefore: 0,\n   validateRangeAfter: 0,\n   validateStartDate: null,\n   validateEndDate: null,\n};\n\nmodule.exports = class ABFieldDateCore extends ABField {\n   constructor(values, object, defaultValues = ABFieldDateDefaults) {\n      super(values, object, defaultValues);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.dateFormat = parseInt(this.settings.dateFormat);\n      this.settings.defaultDate = parseInt(this.settings.defaultDate);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      let dateResult;\n\n      // Set current date as default\n      if (this.settings.defaultDate == 2) {\n         dateResult = new Date();\n      }\n      // Set specific date as default\n      else if (\n         this.settings.defaultDate == 3 &&\n         this.settings.defaultDateValue\n      ) {\n         dateResult = new Date(this.settings.defaultDateValue);\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null) {\n         values[this.columnName] = this.AB.rules.toDateFormat(dateResult, {\n            format: \"YYYY-MM-DD\",\n         });\n         // values[this.columnName] = moment(dateResult).format(\"YYYY-MM-DD\");\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data[this.columnName]) {\n         let value = data[this.columnName];\n\n         if (!(value instanceof Date)) {\n            value = this.AB.rules.toDate(value);\n            // value = new Date(this.convertToMoment(value));\n         }\n\n         // verify we didn't end up with an InValid Date result.\n         if (\n            Object.prototype.toString.call(value) === \"[object Date]\" &&\n            isFinite(value)\n         ) {\n            let isValid = true;\n\n            // Custom vaildate is here\n            if (this.settings && this.settings.validateCondition) {\n               const startDate = this.settings.validateStartDate\n                     ? new Date(this.settings.validateStartDate)\n                     : null,\n                  endDate = this.settings.validateEndDate\n                     ? new Date(this.settings.validateEndDate)\n                     : null,\n                  startDateDisplay = this.getDateDisplay(startDate),\n                  endDateDisplay = this.getDateDisplay(endDate);\n               const minDate = this.AB.rules.subtractDate(\n                  new Date(),\n                  this.settings.validateRangeBefore,\n                  this.settings.validateRangeUnit\n               );\n               const maxDate = this.AB.rules.addDate(\n                  new Date(),\n                  this.settings.validateRangeAfter,\n                  this.settings.validateRangeUnit\n               );\n               switch (this.settings.validateCondition) {\n                  case \"dateRange\":\n                     if (minDate < value && value < maxDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              this.getDateDisplay(minDate),\n                              this.getDateDisplay(maxDate),\n                           ])\n                        );\n                     }\n\n                     break;\n                  case \"between\":\n                     if (startDate < value && value < endDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"notBetween\":\n                     if (value < startDate && endDate < value) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() == startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<>\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() != startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() > startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() < startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() >= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() <= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n               }\n            }\n\n            if (isValid) {\n               // Reformat value to DB\n               // NOTE: should we update here?\n               data[this.columnName] = this.exportValue(value);\n            }\n         } else {\n            // return a validation error\n            validator.addError(this.columnName, \"Should be a Date!\");\n         }\n      }\n   }\n\n   format(rowData) {\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      // pull format from settings.\n      const dateObj = this.AB.rules.toDate(d);\n      return this.getDateDisplay(dateObj);\n\n      // const momentObj = this.convertToMoment(d);\n      // return this.getDateDisplay(new Date(momentObj));\n   }\n\n   getFormat() {\n      let dateFormatString = \"\";\n\n      const dateFormat =\n         this.settings && this.settings.dateFormat\n            ? this.settings.dateFormat\n            : \"\";\n\n      switch (dateFormat) {\n         //Ignore Date\n         case (1, 2):\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n         //mm/dd/yyyy\n         case 3:\n            {\n               dateFormatString = \"%m/%d/%Y\";\n            }\n            break;\n         //M D, yyyy\n         case 4:\n            {\n               dateFormatString = \"%M %d, %Y\";\n            }\n            break;\n         //D M, yyyy\n         case 5:\n            {\n               dateFormatString = \"%d %M, %Y\";\n            }\n            break;\n         default:\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n      }\n\n      return dateFormatString;\n   }\n\n   getDateDisplay(dateData) {\n      const dateFormat = this.getFormat();\n\n      return this.dateToString(dateFormat, dateData);\n   }\n\n   // convertToMoment(string) {\n   //    const result = moment(string);\n\n   //    const supportFormats = [\n   //       \"DD/MM/YYYY\",\n   //       \"MM/DD/YYYY\",\n   //       \"DD-MM-YYYY\",\n   //       \"MM-DD-YYYY\"\n   //    ];\n\n   //    supportFormats.forEach((format) => {\n   //       if (!result || !result.isValid()) result = moment(string, format);\n   //    });\n\n   //    return result;\n   // }\n\n   exportValue(value) {\n      return value ? this.AB.rules.toDateFormat(value, {\n         format: \"YYYY-MM-DD\",\n      }) : \"\";\n      // return this.convertToMoment(value).format(\"YYYY-MM-DD\");\n   }\n\n   dateToString(dateFormat, dateData) {\n      if (dateData && dateData.toString) return dateData.toString();\n      else return \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n","/*\n * ABFieldDateTime\n *\n * An ABFieldDateTime defines a datetime field type.\n *\n */\n\nconst ABFieldDateCore = require(\"./ABFieldDateCore\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"datetime\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from date & time.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"clock-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'clock-o'  to\n   // reference 'clock-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date & Time\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"datetime\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"datetime\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   timeFormat: 2, // 1 (Ignore time), 2, 3\n   defaultTime: 1, // 1 (None), 2 (Current Time), 3 (Specific Time)\n   defaultTimeValue: null, // {Date}\n};\n\nmodule.exports = class ABFieldDateTimeCore extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object, ABFieldDateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      const baseDefault = super.defaultValues();\n      return Object.assign(baseDefault, defaultValues);\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.timeFormat = parseInt(this.settings.timeFormat);\n      this.settings.defaultTime = parseInt(this.settings.defaultTime);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      super.defaultValue(values);\n\n      let dateResult;\n\n      // From default value of ABFieldDateCore\n      if (values[this.columnName]) {\n         dateResult = this.AB.rules.toDate(values[this.columnName]);\n         // const momentVal = this.convertToMoment(values[this.columnName]);\n         // if (momentVal.isValid()) {\n         //    dateResult = new Date(momentVal);\n         // }\n      }\n\n      // Set current time as default\n      if (this.settings.defaultTime == 2) {\n         const currDate = new Date();\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(currDate.getHours());\n         dateResult.setMinutes(currDate.getMinutes());\n         dateResult.setSeconds(currDate.getSeconds());\n         dateResult.setMilliseconds(currDate.getMilliseconds());\n      }\n      // Set specific time as default\n      else if (\n         this.settings.defaultTime == 3 &&\n         this.settings.defaultTimeValue\n      ) {\n         const defaultTime = new Date(this.settings.defaultTimeValue);\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(defaultTime.getHours());\n         dateResult.setMinutes(defaultTime.getMinutes());\n         dateResult.setSeconds(defaultTime.getSeconds());\n         dateResult.setMilliseconds(defaultTime.getMilliseconds());\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null)\n         values[this.columnName] = dateResult.toISOString();\n   }\n\n   getFormat() {\n      const timeFormat = this.getTimeFormat();\n\n      this.settings = this.settings || {};\n\n      if (this.settings.dateFormat == 1) {\n         return timeFormat;\n      }\n\n      const dateFormat = super.getFormat();\n\n      return `${dateFormat} ${timeFormat}`;\n   }\n\n   format(rowData) {\n      const datetimeFormat = this.getFormat();\n      const d = this.dataValue(rowData);\n      const dateObj = this.AB.rules.toDate(d);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      return webix.Date.dateToStr(datetimeFormat)(dateObj);\n   }\n\n   getTimeFormat() {\n      this.settings = this.settings || {};\n      switch (this.settings.timeFormat) {\n         case 2:\n            return \" %h:%i %A\";\n         case 3:\n            return \" %H:%i\";\n         default:\n            return \"\";\n      }\n   }\n\n   /**\n    * @method exportValue\n    * @param {Date} date\n    * @return {string}\n    */\n   exportValue(date) {\n      return date?.toISOString?.() ?? \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx =\n   \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n","/*\n * ABFieldEmail\n *\n * An ABFieldEmail defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldEmailDefaults = {\n   key: \"email\",\n   // unique key to reference this specific DataField\n\n   description: \"Email fields are used to store email addresses.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"envelope\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'envelope'  to\n   // reference 'fa-envelope'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Email\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: \"\",\n   defaultCheckbox: 0,\n};\n\nmodule.exports = class ABFieldEmailCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldEmailDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldEmailDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            values[this.columnName] = this.settings.default;\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      if (data[this.columnName]) {\n         const Reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n         let value = data[this.columnName];\n         value = String(value).toLowerCase();\n         if (!Reg.test(value)) {\n            validator.addError(this.columnName, \"Invalid email\");\n         }\n      }\n   }\n};\n","/*\n * ABFieldFile\n *\n * An ABFieldFile defines a File field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFileDefaults = {\n   key: \"file\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach a File to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file'  to\n   // reference 'fa-file'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"File Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   removeExistingData: 0,\n   fileSize: 0,\n   fileType: \"\",\n};\n\nmodule.exports = class ABFieldFileCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFileDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFileDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.fileSize = parseInt(this.settings.fileSize);\n      this.settings.limitFileSize = parseInt(this.settings.limitFileSize);\n      this.settings.limitFileType = parseInt(this.settings.limitFileType);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method dataValue\n    * return the file data stored as part of this field.\n    *\n    * An ABFieldFile column contains a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * This will return the json object.\n    * @param {obj} values a key=>value hash of the current values.\n    * @return {obj} { uuid, filename }, or {} if empty.\n    */\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = rowData[this.columnName] || rowData[propName] || {};\n      if (typeof result == \"string\") {\n         try {\n            result = JSON.parse(result);\n         } catch (err) {\n            // ignore error\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    *\n    * An ABFieldFile expects a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * For a default value, we return an empty json object: \"{}\"\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"{}\";\n   }\n\n   format(rowData) {\n      let result = this.dataValue(rowData);\n      if (result) {\n         if (typeof result == \"string\") {\n            try {\n               result = JSON.parse(result);\n            } catch (err) {\n               // ignore error.\n            }\n         }\n\n         // return file name\n         return result ? result.filename || \"\" : \"\";\n      } else {\n         return \"\";\n      }\n   }\n\n   /**\n    * @method requestParam\n    * return the entry in the given input that relates to this field.\n    * @param {obj} allParameters  a key=>value hash of the inputs to parse.\n    * @return {obj} or undefined\n    */\n   requestParam(allParameters) {\n      const myParameter = super.requestParam(allParameters);\n\n      // if we have our default empty object, then remove the entry\n      // and let the DB insert a null value.\n      let val = myParameter?.[this.columnName];\n      if (val == \"{}\" || val == \"\") {\n         delete myParameter[this.columnName];\n      }\n      if (\"string\" === typeof val) {\n         try {\n            myParameter[this.columnName] = JSON.parse(val);\n         } catch (e) {}\n      }\n\n      return myParameter;\n   }\n};\n","/*\n * ABFieldFormula\n *\n * An ABFieldFormula are used to run calculations on connected (child) records\n * and store the total of that calculation in the parent.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldFormulaDefaults = {\n   key: \"formula\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Perform a calculation by a formula type based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"circle-o-notch\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'circle-o-notch'  to\n   // reference 'fa-circle-o-notch'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportQuery: (field) => {\n      const fieldLink = field.fieldLink;\n      if (fieldLink == null) return false;\n\n      // Not support calculate field in query\n      return fieldLink.key !== \"calculate\";\n   },\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   field: \"\", // id of ABField : NOTE - store our connect field to support when there are multi - linked columns\n   objectLink: \"\", // id of ABObject\n   fieldLink: \"\", // id of ABField\n   type: \"sum\", // \"sum\", \"average\", \"max\", \"min\", \"count\"\n   where: \"\",\n};\n\nmodule.exports = class ABFieldFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFormulaDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method format\n    * both calculate and format the data input based of user settings\n    * for this field.\n    * @param {obj} rowData\n    *        a key=>value hash of the current values.\n    * @param {boolean} reCalculate\n    *        a boolean that signals if we should force recalculation of values\n    */\n   format(rowData, reCalculate = false, isGrouped = false) {\n      const fieldLink = this.fieldLink;\n\n      const reformat = (numData) => {\n         // ABFieldCalculate does not need to .format again\n         if (!fieldLink || fieldLink.key == \"calculate\") {\n            return numData;\n         } else {\n            const rowDataFormat = {};\n            rowDataFormat[fieldLink.columnName] = numData;\n            return fieldLink.format(rowDataFormat);\n         }\n      };\n\n      // if data exists, then will not calculate on client side\n      // unless we pass reCalculate=true to force the recalculation\n      if (rowData[this.columnName] != null && !reCalculate && !isGrouped) {\n         // reformat data\n         return reformat(rowData[this.columnName]);\n      } else if (\n         rowData[this.columnName] != null &&\n         !reCalculate &&\n         isGrouped\n      ) {\n         return rowData[this.columnName];\n      }\n\n      if (!fieldLink) return 0;\n\n      const fieldBase = this.fieldBase();\n      if (!fieldBase) return 0;\n\n      let data =\n         rowData[fieldBase.relationName()] ||\n         rowData[fieldBase.columnName] ||\n         [];\n      if (!Array.isArray(data)) data = [data];\n\n      // Filter\n      if (\n         data &&\n         data.length &&\n         this.settings &&\n         this.settings.where &&\n         this.settings.where.rules &&\n         this.settings.where.rules.length\n      ) {\n         this.filterHelper.setValue(this.settings.where);\n         data = data.filter((item) => this.filterHelper.isValid(item));\n      }\n\n      let numberList = [];\n\n      // pull number from data\n      switch (fieldLink.key) {\n         case \"calculate\":\n            data.forEach((d) => {\n               numberList.push(parseFloat(fieldLink.format(d) || 0));\n            });\n            break;\n         case \"number\":\n            numberList = data.map((d) => d[fieldLink.columnName] || 0);\n            break;\n      }\n\n      let result = 0;\n\n      // get the decimal size of the numbers being calculated\n      const decimalSize = fieldLink.getDecimalSize();\n\n      // calculate\n      switch (this.settings.type) {\n         case \"sum\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               result = sum / multiplier;\n            }\n            break;\n\n         case \"average\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               // and divide by length to get the average\n               result = sum / multiplier / numberList.length;\n            }\n            break;\n\n         case \"max\":\n            result = Math.max(...numberList) || 0;\n            break;\n         case \"min\":\n            result = Math.min(...numberList) || 0;\n            break;\n         case \"count\":\n            result = numberList.length;\n            break;\n      }\n\n      rowData[this.columnName] = result;\n\n      // ABFieldCalculate does not need to .format again\n      if (fieldLink.key == \"calculate\") {\n         return result;\n      } else {\n         return reformat(result);\n      }\n   }\n\n   fieldBase() {\n      return this.object.fieldByID(this.settings.field);\n   }\n\n   get fieldLink() {\n      const obj = this.AB.objectByID(this.settings.object);\n      if (!obj) return null;\n\n      const field = obj.fieldByID(this.settings.fieldLink);\n      if (!field) return null;\n\n      return field;\n   }\n\n   get filterHelper() {\n      if (this._rowFilter == null) {\n         this._rowFilter = this.AB.filterComplexNew(`${this.id}_filterComplex`);\n\n         if (this.fieldLink && this.fieldLink.object) {\n            this._rowFilter.fieldsLoad(this.fieldLink.object.fields());\n            this._rowFilter.setValue(this.settings.where);\n         }\n      }\n\n      return this._rowFilter;\n   }\n};\n","/*\n * ABFieldImageCore\n *\n * An ABFieldImage defines a Image field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldImageDefaults = {\n   key: \"image\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach an image to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file-image-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file-image-o'  to\n   // reference 'fa-file-image-o'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Image Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   useWidth: 0,\n   imageWidth: \"\",\n   useHeight: 0,\n   imageHeight: \"\",\n   removeExistingData: 0,\n   useDefaultImage: false,\n   defaultImageUrl: \"\",\n};\n\nmodule.exports = class ABFieldImageCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldImageDefaults);\n\n      // NOTE: our Labels are ready here:\n      // if (\n      //    ABFieldImageDefaults.menuName == \"*Image Attachment\" &&\n      //    this.AB.Label\n      // ) {\n      //    const L = this.AB.Label();\n      //    ABFieldImageDefaults.menuName = L(\"Image Attachment\");\n      //    ABFieldImageDefaults.description = L(\"Attach an image to this object.\");\n      // }\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'useWidth':0,\n\t\t\t\t'imageWidth':'',\n\t\t\t\t'useHeight': 0,\n\t\t\t\t'imageHeight': '',\n\t\t\t\t'removeExistingData': 0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldImageDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.useWidth = parseInt(this.settings.useWidth);\n      this.settings.useHeight = parseInt(this.settings.useHeight);\n      this.settings.imageWidth = parseInt(this.settings.imageWidth);\n      this.settings.imageHeight = parseInt(this.settings.imageHeight);\n      this.settings.useDefaultImage = parseInt(this.settings.useDefaultImage);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldJson\n *\n * An ABFieldJson defines a JSON field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldJsonDefaults = {\n   key: \"json\",\n   // unique key to reference this specific DataField\n\n   description: \"JSON value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"JSON\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"json\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"json\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {};\n\nmodule.exports = class ABFieldJsonCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldJsonDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldJsonDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // in the case of a JSON data type, we should NOT insert a \"\"\n      //\n      // values[this.columnName] = \"\";\n   }\n};\n","/*\n * ABFieldListCore\n *\n * An ABFieldList defines a select list field type.\n *\n */\n\n// const ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldListDefaults = {\n   key: \"list\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Select list allows you to select predefined options below from a dropdown.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"th-list\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'th-list'  to\n   // reference 'fa-th-list'\n\n   isFilterable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Select list\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"char\",\n      \"varchar\",\n      \"tinytext\" /* \"text\", \"mediumtext\" */,\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   hasColors: (field) => {\n      if (field.settings.hasColors) {\n         return true;\n      } else {\n         return false;\n      }\n   },\n};\n\nconst defaultValues = {\n   isMultiple: 0,\n   // {bool}\n   // can multiple values be selected?\n\n   hasColors: 0,\n   // {bool}\n   // are we to display our values in colors?\n\n   options: [],\n   // {array}\n   // The options defined for this list:\n   // [ { id, text, hex, translations },...]\n   //    .id {string} a unique id for this value\n   //    .text {string} the displayed text of this value\n   //    .hex {string} a color hex definition for this value\n   //    .translations {obj} the multilingual definitions for this value.\n\n   default: \"none\",\n   multipleDefault: [],\n};\n\nmodule.exports = class ABFieldListCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldListDefaults);\n\n      this.pendingDeletions = [];\n      // {array}\n      // a list of pending option deletions that need to be processed\n      // when this is saved.\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldListDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.hasColors = parseInt(this.settings.hasColors);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      obj.settings.options.forEach((opt) => {\n         this.unTranslate(opt, opt, [\"text\"]);\n      });\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Multiple select list\n      if (this.settings.isMultiple == true) {\n         let defaultVals = [];\n         this.settings.multipleDefault.forEach((def) => {\n            this.settings.options.forEach((opt) => {\n               if (opt.id == def.text) {\n                  defaultVals.push(opt);\n               }\n            });\n         });\n         values[this.columnName] = defaultVals || [];\n      }\n      // Single select list\n      else if (this.settings.default && this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   /**\n    * @method options\n    * Return an array of [{ id, text }] options defined by this field.\n    * @return {array}\n    */\n   options() {\n      return this.settings.options.map((opt) => {\n         return {\n            id: opt.id,\n            text: opt.text,\n            hex: opt.hex ? opt.hex : \"\",\n            translations: opt.translations ? opt.translations : \"\",\n         };\n      });\n   }\n\n   format(rowData, options = {}) {\n      let val = this.dataValue(rowData) || [];\n\n      if (typeof val == \"string\") {\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // continue regardless of error\n         }\n      }\n\n      // Convert to array\n      if (!Array.isArray(val)) val = [val];\n\n      const displayOpts = this.settings.options\n         .filter((opt) => val.filter((v) => (v.id || v) == opt.id).length > 0)\n         .map((opt) => {\n            let text = opt.text;\n            const languageCode = options.languageCode || \"en\";\n\n            // Pull text of option with specify language code\n            const optTran = (opt.translations || []).filter(\n               (o) => o.language_code == languageCode\n            )[0];\n            if (optTran) text = optTran.text;\n\n            return text;\n         });\n\n      return displayOpts.join(\", \");\n   }\n};\n","/*\n * ABFieldLongText\n *\n * An ABFieldLongText defines a LongText field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 5000;\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldLongTextDefaults = {\n   key: \"LongText\", // unique key to reference this specific DataField\n\n   description: \"Multiple lines of text\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"align-right\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'align-right'  to\n   // reference 'fa-align-right'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Long text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"longtext\", \"mediumtext\", \"text\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldLongText can be.\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldLongText extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldLongTextDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldLongTextDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n\n      // we're responsible for setting up our specific settings:\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         if (this.object)\n            this.object.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual)\n         if (this.object)\n            this.object.unTranslate(obj.settings, obj.settings, [\"default\"]);\n         else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null) {\n         if (typeof this.settings.default == \"string\") {\n            values[this.columnName] = this.settings.default;\n         } else {\n            values[this.columnName] = \"\";\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            `should NOT be longer than ${MAX_CHAR_LENGTH} characters`\n         );\n      }\n   }\n};\n","/*\n * ABFieldNumber\n *\n * An ABFieldNumber defines a Number field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldNumberDefaults = {\n   key: \"number\",\n   // unique key to reference this specific DataField\n\n   description: \"A Float or Integer Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"hashtag\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'hashtag'  to\n   // reference 'fa-hashtag'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Number\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   // 'allowRequired': 0,\n   default: \"\",\n   typeFormat: \"none\",\n   typeDecimals: \"none\",\n   typeDecimalPlaces: 0,\n   typeRounding: \"none\",\n   typeThousands: \"none\",\n   validation: 0,\n   validateMinimum: \"\",\n   validateMaximum: \"\",\n};\n\nlet L = null; //AB.Label();\n\nmodule.exports = class ABFieldNumberCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldNumberDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'allowRequired':0,\n\t\t\t\t'default':null,\n\t\t\t\t'typeFormat': 'none',\n\t\t\t\t'typeDecimals': 'none',\n\t\t\t\t'typeDecimalPlaces': 'none',\n\t\t\t\t'typeRounding' : 'none',\n\t\t\t\t'typeThousands': 'none',\n\t\t\t\t'validation':0,\n\t\t\t\t'validateMinimum':null,\n\t\t\t\t'validateMaximum':null\n\t\t\t}\n    \t}\n    \t*/\n      if (!L) {\n         L = this.AB.Label();\n      }\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldNumberDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static formatList(iL) {\n      if (iL && !L) L = iL;\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"dollar\",\n            value: L(\"$\"),\n            sign: \"$\",\n            position: \"prefix\",\n         },\n         {\n            id: \"yen\",\n            value: L(\"¥\"),\n            sign: \"¥\",\n            position: \"prefix\",\n         },\n         {\n            id: \"pound\",\n            value: L(\"£\"),\n            sign: \"£\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroBefore\",\n            value: L(\"€ (before)\"),\n            sign: \"€\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroAfter\",\n            value: L(\"€ (after)\"),\n            sign: \"€\",\n            position: \"postfix\",\n         },\n         {\n            id: \"percent\",\n            value: L(\"%\"),\n            sign: \"%\",\n            position: \"postfix\",\n         },\n      ];\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"comma\",\n            value: L(\"Comma\"),\n            sign: \",\",\n         },\n         {\n            id: \"period\",\n            value: L(\"Period\"),\n            sign: \".\",\n         },\n         {\n            id: \"space\",\n            value: L(\"Space\"),\n            sign: \" \",\n         },\n      ];\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      // this.settings.allowRequired = parseInt(this.settings.allowRequired);\n      this.settings.validation = parseInt(this.settings.validation);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      // const L = this.AB.Label();\n\n      if (data[this.columnName] != null && data[this.columnName] != \"\") {\n         let value = data[this.columnName];\n\n         // if this is an integer:\n         if (this.settings.typeDecimals == \"none\") {\n            value = parseInt(value);\n         } else {\n            const places = parseInt(this.settings.typeDecimalPlaces) || 2;\n            value = parseFloat(parseFloat(value).toFixed(places));\n         }\n\n         const isNumeric = (n) => {\n            return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n         };\n         if (!isNumeric(value)) {\n            validator.addError(this.columnName, L(\"invalid number\"));\n         }\n\n         // validate Minimum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMinimum != null &&\n            this.settings.validateMinimum > value\n         ) {\n            const errMessage = L(\"should be greater than {0}\", [\n               this.settings.validateMinimum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n\n         // validate Maximum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMaximum != null &&\n            this.settings.validateMaximum < value\n         ) {\n            const errMessage = L(\"should be less than {0}\", [\n               this.settings.validateMaximum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n      }\n   }\n\n   format(rowData) {\n      if (\n\t rowData?.[this.columnName] == null ||\n         (rowData[this.columnName] != 0 && rowData[this.columnName] == \"\")\n      )\n         return \"\";\n\n      let data = rowData[this.columnName] || 0;\n\n      if (typeof data == \"string\") {\n         data = data.replace(/,/g, \"\");\n      }\n\n      // Validate number\n      if (isNaN(parseFloat(data))) data = 0;\n\n      const formatSign = this.constructor\n         .formatList()\n         .filter((item) => item.id == this.settings.typeFormat)[0];\n      const decimalPlaces =\n         this.settings.typeDecimalPlaces != \"none\"\n            ? parseInt(this.settings.typeDecimalPlaces)\n            : 0;\n\n      let thousandsSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeThousands)[0];\n      let decimalSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeDecimals)[0];\n      let prefix = \"\";\n      let postfix = \"\";\n\n      if (formatSign && formatSign.sign) {\n         switch (formatSign.position) {\n            case \"prefix\":\n               prefix = formatSign.sign;\n               break;\n            case \"postfix\":\n               postfix = formatSign.sign;\n               break;\n         }\n      }\n\n      decimalSign = decimalSign.sign || \"\";\n      thousandsSign = thousandsSign.sign || \"\";\n\n      // round number\n      if (this.settings.typeRounding == \"roundDown\") {\n         const digit = Math.pow(10, decimalPlaces);\n         data = Math.floor(data * digit) / digit;\n      }\n\n      const number = this.formatNumber(data, {\n         groupDelimiter: thousandsSign,\n         groupSize: 3,\n         decimalDelimiter: decimalSign,\n         decimalSize: decimalPlaces,\n      });\n\n      return `${prefix} ${number} ${postfix}`;\n   }\n\n   formatNumber(data, options = {}) {\n      if (data === \"\" || data == null) return data;\n\n      data = parseFloat(data);\n      const negativeSign = data < 0 ? \"-\" : \"\";\n      data = Math.abs(data);\n\n      const dataStr = data.toString();\n      const integerStr = dataStr.split(\".\")[0];\n      const decimalStr = dataStr.split(\".\")[1];\n\n      let integerValue = \"\";\n\n      // Thousands digit sign\n      if (options.groupDelimiter) {\n         const step = 3;\n         let i = integerStr.length;\n\n         do {\n            i -= step;\n            const chunk =\n               i > 0\n                  ? integerStr.substr(i, step)\n                  : integerStr.substr(0, step + i);\n            integerValue = `${chunk}${\n               integerValue ? options.groupDelimiter + integerValue : \"\"\n            }`;\n         } while (i > 0);\n      } else {\n         integerValue = integerStr;\n      }\n\n      // Integer\n      let result = `${negativeSign}${integerValue}`;\n\n      // Decimal\n      if (decimalStr && options.decimalDelimiter && options.decimalSize) {\n         const decimalVal = data.toFixed(options.decimalSize).split(\".\")[1];\n         result += `${options.decimalDelimiter}${decimalVal}`;\n      }\n\n      return result;\n   }\n\n   getDecimalSize() {\n      if (this.settings.typeDecimalPlaces != \"none\") {\n         return parseInt(this.settings.typeDecimalPlaces);\n      } else {\n         return 0;\n      }\n   }\n};\n","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 255;\n\nconst ABFieldStringDefaults = {\n   key: \"string\",\n   // unique key to reference this specific DataField\n\n   description: \"short string value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Single line text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldString can be.\n};\n\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldStringCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldStringDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n        */\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldStringDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // we're responsible for setting up our specific settings:\n      this.settings.default = values.settings.default || defaultValues.default;\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         this.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual) {\n         this.unTranslate(obj.settings, obj.settings, [\"default\"]);\n      } else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data?.[this.columnName]?.length > MAX_CHAR_LENGTH) {\n         const L = this.AB.Label();\n         validator.addError(\n            this.columnName,\n            L(\"should NOT be longer than {0} characters\", [MAX_CHAR_LENGTH])\n         );\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n};\n","/*\n * ABFieldTextFormula\n *\n * An ABFieldTextFormula defines a TextFormula field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTextFormulaDefaults = {\n   key: \"TextFormula\",\n   // unique key to reference this specific DataField\n\n   description: \"Text Formula\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"question\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'question'  to\n   // reference 'fa-question'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Text Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   textFormula: \"\",\n   // {string} \"some text or text with formula ...\"\n   // This tells us what the formula we need to do with text included text string.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   // 'imageWidth':'',\n   // 'useHeight': 0,\n   // 'imageHeight': ''\n};\n\n/** Private methods */\n\n/**\n * @method setValueToFormula\n *\n * @param {ABOBject} object\n * @param {string} formulaString\n * @param {object} rowData\n */\n\nfunction setValueToFormula(object, formulaString, rowData) {\n   if (!formulaString) return;\n\n   const fieldRegExp = /{[^{}]+}/gm;\n   const matches_field_array = formulaString.match(fieldRegExp);\n   matches_field_array.forEach((element) => {\n      const columnName = element.replace(/{|}|\"/g, \"\");\n      object.fields().forEach((field) => {\n         if (field.columnName == columnName) {\n            if (field.key == \"AutoIndex\") {\n               //Check AutoIndex Field\n               const autoIndexVal = field.format(rowData) || 0;\n               formulaString = formulaString.replace(element, autoIndexVal);\n            } else if (field.key == \"calculate\") {\n               //Calculate Field\n               const calVal = `(${field.format(rowData) || 0})`;\n               formulaString = formulaString.replace(element, eval(calVal));\n            } else if (field.key == \"date\") {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName]\n                     ? field.exportValue(rowData[columnName])\n                     : \"\"\n               );\n            } else {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName] ? field.format(rowData) : \"\"\n               );\n            }\n         }\n      });\n   });\n\n   return formulaString;\n}\n\n/**\n * @method setBuildinValueToFormula\n *\n * @param {ABFactory} AB\n * @param {string} formulaString\n */\n\nfunction setBuildinValueToFormula(AB, formulaString) {\n   const buildInRegExp = /\\w+\\(.*?\\)/gm;\n   const matches_buildin_array = formulaString.match(buildInRegExp);\n   if (matches_buildin_array) {\n      const buildinList = getBuildInFunction();\n      matches_buildin_array.forEach((element) => {\n         const formula_array = element.split(/\\(|\\)/);\n         const isBracketInBracket =\n            formula_array.length > 2 && formula_array[2] != \"\";\n         const functionName = formula_array[0];\n         const parameters_array = formula_array[1].split(\",\");\n         let isMatch = false;\n         for (let i = 0; i < buildinList.length; i++) {\n            let resultParameters = element;\n            if (functionName == buildinList[i].id) {\n               if (parameters_array.length == buildinList[i].parameter_size) {\n                  switch (functionName) {\n                     case \"left\":\n                        resultParameters = getLeft(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"right\":\n                        resultParameters = getRight(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"mid\":\n                        resultParameters = getMid(\n                           parameters_array[0],\n                           parameters_array[1],\n                           parameters_array[2]\n                        );\n                        break;\n                     case \"trim\":\n                        resultParameters = getTrim(parameters_array[0]);\n                        break;\n                     case \"trimLeft\":\n                        resultParameters = getTrimLeft(parameters_array[0]);\n                        break;\n                     case \"trimRight\":\n                        resultParameters = getTrimRight(parameters_array[0]);\n                        break;\n                     case \"length\":\n                        resultParameters = getLength(parameters_array[0]);\n                        break;\n                     case \"regexReplace\":\n                        resultParameters = getRegExpReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"extractRegex\":\n                        resultParameters = getExtractRegex(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     case \"replace\":\n                        resultParameters = getReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"lower\":\n                        resultParameters = getLower(parameters_array[0]);\n                        break;\n                     case \"upper\":\n                        resultParameters = getUpper(parameters_array[0]);\n                        break;\n                     case \"capitalize\":\n                        resultParameters = getCapitalize(parameters_array[0]);\n                        break;\n                     case \"random\":\n                        resultParameters = getRandom(parameters_array[0]);\n                        break;\n                     case \"numberToWords\":\n                        resultParameters = getNumberToWords(\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateDayOfWeekName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateDayOfWeekName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateMonthOfYearName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateMonthOfYearName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"formatDate\":\n                        resultParameters = getFormatDate(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     default:\n                        break;\n                  }\n                  isMatch = true;\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n                  return;\n               } else {\n                  resultParameters = functionName + \"(Bad Parameter)\";\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n               }\n            }\n         }\n      });\n   }\n   return formulaString;\n}\n\nfunction getBuildInFunction() {\n   const functionList = [\n      {\n         id: \"left\",\n         value: \"left({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"right\",\n         value: \"right({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"mid\",\n         value: \"mid({COLUMN_NAME}, 1, 1)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"trim\",\n         value: \"trim({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimLeft\",\n         value: \"trimLeft({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimRight\",\n         value: \"trimRight({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"length\",\n         value: \"length({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"regexReplace\",\n         value: \"regexReplace({COLUMN_NAME}, [*], REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"extractRegex\",\n         value: \"extractRegex({COLUMN_NAME}, [*])\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"replace\",\n         value: \"replace({COLUMN_NAME}, SEARCH_VALUE, REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"lower\",\n         value: \"lower({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"upper\",\n         value: \"upper({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"capitalize\",\n         value: \"capitalize({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      { id: \"random\", value: \"random(1)\", type: \"build-in\", parameter_size: 1 },\n      {\n         id: \"numberToWords\",\n         value: \"numberToWords({NUMBER_COLUMN} or 012...)\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateDayOfWeekName\",\n         value: \"getDateDayOfWeekName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateMonthOfYearName\",\n         value: \"getDateMonthOfYearName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"formatDate\",\n         value: \"formatDate({DATE_COLUMN}, OUTPUT_FORMAT)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n   ];\n   return functionList;\n}\n\nfunction getLeft(string, endPosition) {\n   return string.substring(0, parseInt(endPosition));\n}\n\nfunction getRight(string, endposition) {\n   const reverseStr = reverseString(string).substring(0, parseInt(endposition));\n   return reverseString(reverseStr);\n}\n\nfunction reverseString(string) {\n   return string.split(\" \").reverse().join(\" \");\n}\n\nfunction getMid(string, startPosition, length) {\n   if (string.length < startPosition) return \"mid(Bad Parameter)\";\n   return string.substring(\n      parseInt(startPosition),\n      parseInt(startPosition) + parseInt(length)\n   );\n}\n\nfunction getTrim(string) {\n   return string.trim();\n}\n\nfunction getTrimLeft(string) {\n   return string.trimLeft();\n}\n\nfunction getTrimRight(string) {\n   return string.trimRight();\n}\n\nfunction getLength(string) {\n   return string.length;\n}\n\nfunction getRegExpReplace(string, regexp, replaceString) {\n   return string.replace(regexp, replaceString);\n}\n\nfunction getExtractRegex(string, regexp) {\n   const extractResult = string.match(regexp);\n   if (Array.isArray(extractResult)) {\n      return extractResult[0];\n   }\n   return extractResult;\n}\n\nfunction getReplace(string, searchValue, replaceValue) {\n   return string.replace(searchValue, replaceValue);\n}\n\nfunction getLower(string) {\n   return string.toLowerCase();\n}\n\nfunction getUpper(string) {\n   return string.toUpperCase();\n}\n\nfunction getCapitalize(string) {\n   return string\n      .toLowerCase()\n      .split(\" \")\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(\" \");\n}\n\nfunction getRandom(max) {\n   return Math.floor(Math.random() * (max + 1));\n}\n\nfunction getNumberToWords(number) {\n   const string = number.trim(\",\").toString();\n\n   let units,\n      tens,\n      scales,\n      start,\n      end,\n      chunks,\n      chunksLen,\n      chunk,\n      ints,\n      i,\n      word,\n      words;\n\n   const and = \"\";\n\n   /* Is number zero? */\n   if (parseInt(string) === 0) {\n      return \"zero\";\n   }\n\n   /* Array of units as words */\n   units = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n      \"ten\",\n      \"eleven\",\n      \"twelve\",\n      \"thirteen\",\n      \"fourteen\",\n      \"fifteen\",\n      \"sixteen\",\n      \"seventeen\",\n      \"eighteen\",\n      \"nineteen\",\n   ];\n\n   /* Array of tens as words */\n   tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n   ];\n\n   /* Array of scales as words */\n   scales = [\n      \"\",\n      \"thousand\",\n      \"million\",\n      \"billion\",\n      \"trillion\",\n      \"quadrillion\",\n      \"quintillion\",\n      \"sextillion\",\n      \"septillion\",\n      \"octillion\",\n      \"nonillion\",\n      \"decillion\",\n      \"undecillion\",\n      \"duodecillion\",\n      \"tredecillion\",\n      \"quatttuor-decillion\",\n      \"quindecillion\",\n      \"sexdecillion\",\n      \"septen-decillion\",\n      \"octodecillion\",\n      \"novemdecillion\",\n      \"vigintillion\",\n      \"centillion\",\n   ];\n\n   /* Split user arguemnt into 3 digit chunks from right to left */\n   start = string.length;\n   chunks = [];\n   while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n   }\n\n   /* Check if function has enough scale words to be able to stringify the user argument */\n   chunksLen = chunks.length;\n   if (chunksLen > scales.length) {\n      return \"\";\n   }\n\n   /* Stringify each integer in each chunk */\n   words = [];\n   for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n\n      if (chunk) {\n         /* Split chunk into array of individual integers */\n         ints = chunks[i].split(\"\").reverse().map(parseFloat);\n\n         /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n         if (ints[1] === 1) {\n            ints[0] += 10;\n         }\n\n         /* Add scale word if chunk is not zero and array item exists */\n         if ((word = scales[i])) {\n            words.push(word);\n         }\n\n         /* Add unit word if array item exists */\n         if ((word = units[ints[0]])) {\n            words.push(word);\n         }\n\n         /* Add tens word if array item exists */\n         if ((word = tens[ints[1]])) {\n            words.push(word);\n         }\n\n         /* Add 'and' string after units or tens integer if: */\n         if (ints[0] || ints[1]) {\n            /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n            if (ints[2] || (!i && chunksLen)) {\n               words.push(and);\n            }\n         }\n\n         /* Add hundreds word if array item exists */\n         if ((word = units[ints[2]])) {\n            words.push(word + \" hundred\");\n         }\n      }\n   }\n\n   return words.reverse().join(\" \");\n}\n\nfunction getDateDayOfWeekName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"dddd\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"dddd\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getDateMonthOfYearName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"MMMM\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"MMMM\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getFormatDate(date, format) {\n   const dt = new Date(date);\n   return dt.toString(format);\n}\n\nmodule.exports = class ABFieldTextFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldTextFormulaDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n      // // text to Int:\n      // this.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTextFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getBuildInFunction() {\n      return getBuildInFunction();\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default value\n         // values[this.columnName] = this.settings.DEFAULT_VALUE;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      validator = super.isValid();\n\n      // validator.addError(this.columnName, L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      // return this.settings.supportMultilingual == 1;\n      return false;\n   }\n\n   format(rowData) {\n      try {\n         if (!this.settings.textFormula) return \"\";\n\n         let resultFormula = this.settings.textFormula;\n\n         //Set Field value first\n         resultFormula = setValueToFormula(this.object, resultFormula, rowData);\n\n         //then Check Build-in Function\n         resultFormula = setBuildinValueToFormula(this.AB, resultFormula);\n\n         return resultFormula;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n//// NOTE: if you need a unique [edit_type] by your returned config.editor above:\n// webix.editors = {\n//   \"[edit_type]\": {\n//     focus: function () {...}\n//     getValue: function () {...},\n//     setValue: function (value) {...},\n//     render: function () {...}\n//   }\n// };\n\n//// NOTE: if you need a unique [sort_type] by your returned config.sort above:\n// webix.DataStore.prototype.sorting.as.[sort_type] = function(a,b){\n//     return a > b ? 1 : -1;\n// }\n","/*\n * ABFieldTreeCore\n *\n * An ABFieldTree defines a select list field type.\n *\n */\n\nconst ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTreeDefaults = {\n   key: \"tree\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Data tree allows you to build a hierarchical set of selectable data. (ex: Categories and sub-categories)\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"sitemap\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'sitemap'  to\n   // reference 'fa-sitemap'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Data Tree\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   options: [],\n};\n\nmodule.exports = class ABFieldTreeCore extends ABFieldSelectivity {\n   constructor(values, object) {\n      super(values, object, ABFieldTreeDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTreeDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      if (obj.settings.options && obj.settings.options.length > 0) {\n         obj.settings.options.forEach((opt) => {\n            this.unTranslate(opt, opt, [\"text\"]);\n         });\n      }\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldUser\n *\n * An ABFieldUser defines a user field type.\n *\n */\n\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldUserDefaults = {\n   key: \"user\",\n   // unique key to reference this specific DataField\n\n   description: \"Add users to a record.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"user-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'user-o'  to\n   // reference 'fa-user-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"User\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   USERNAME_FIELD_ID: \"5760560b-c078-47ca-98bf-e18ac492a561\",\n   // {string} .uuid\n   // the ABField.id of the SiteUser.username field.  This is what other\n   // objects will link to in their ABFieldUser connections.\n};\n\nconst defaultValues = {\n   editable: 1,\n   isMultiple: 0,\n   isCurrentUser: 0,\n   isShowProfileImage: 0,\n   isShowUsername: 1,\n};\n\nmodule.exports = class ABFieldUserCore extends ABFieldConnect {\n   constructor(values, object) {\n      super(values, object, ABFieldUserDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldUserDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.editable = parseInt(this.settings.editable);\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.isCurrentUser = parseInt(this.settings.isCurrentUser);\n      this.settings.isShowProfileImage = parseInt(\n         this.settings.isShowProfileImage\n      );\n      this.settings.isShowUsername = parseInt(this.settings.isShowUsername);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   format(rowData) {\n      let val = this.dataValue(rowData) || [];\n\n      if (val && !Array.isArray(val)) val = [val];\n      if (!val) val = [];\n\n      return val.map((v) => v.username || v).join(\", \");\n   }\n};\n","/*\n * ABMobilePageCore\n *\n * An view that represents a \"Page\" on the Mobile Device.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABMobilePageDefaults = {\n   key: \"mobile-page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-'  )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\",\n   // {string}\n   // What type of \"Page\" this is: ['page', 'popup', 'reportPage']\n\n   defaultPage: 0,\n   // {bool} 1|0\n   // is this the default page for the Mobile App? If so, this is the initial\n   // Page that is displayed when the App is loaded.\n   // NOTE: there can be only 1 page defined in the app as .defaultPage\n\n   hideTitle: 0,\n   // {bool} 1|0\n   // By default we will display this.label as our Title. Set this to 1 to not\n   // show the tile on the page.\n\n   hideTabs: 0,\n   // {bool} 1|0\n   // By default, pages will show any Tab options on their display.  Set this\n   // to 1 to not show the tab options for this Page. (good for pages that\n   // are linkedPages with forms )\n};\n\nmodule.exports = class ABMobilePageCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMobilePageDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABMobilePage, but has\n      // different implications ... so we default an ABMobilePage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABMobilePageDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABMobilePage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n      obj.route = this.route;\n\n      obj.myAppID = this.myAppID;\n\n      obj.menuType = this.menuType;\n\n      obj.defaultPage = this.defaultPage;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const DV = ABPropertyComponentDefaults;\n\n      this.route =\n         values.route || (this.name || this.label).replaceAll(\" \", \"_\");\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      this.menuType = values.menuType || \"menu\";\n      // {string}  [\"menu\", \"tab\"]\n      // indicates if this Page was added as a Mobile App's \"menu\" or \"Tab\"\n\n      this.defaultPage = values.defaultPage || 0;\n      // {bool}  1|0\n      // indicates if this is the default page that is loaded when the mobile app\n      // is started.\n      // NOTE: only 1 Page in a Mobile App can have this setting = 1.\n\n      this.settings.hideTitle = parseInt(\n         values.settings.hideTitle ?? DV.hideTitle\n      );\n      // {bool} 1|0\n      // By default an ABMobilePage will display it's this.label for a title\n      // on the page.  Setting this to TRUE (1) will hide the title.\n\n      this.settings.hideTabs = parseInt(\n         values.settings.hideTabs ?? DV.hideTabs\n      );\n      // {bool} 1|0\n      // By default, pages will show any Tab options on their display.  Set this\n      // to 1 to not show the tab options for this Page. (good for pages that\n      // are linkedPages with forms )\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`,\n               {\n                  appID: this.application.id,\n                  pageID: this.id,\n                  missingPageID: id,\n               }\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      // this.settings.columns = this.settings.columns || 1;\n      // this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABMobilePage\n            // be sure to remove any of it's ABMobilePage as well\n            // This cleans out any dangling ABDefinitions\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABMobilePage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            // make sure .defaultPage is properly set\n            if (this.defaultPage) {\n               return this.application.setPageDefault(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABMobilePage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance() {\n      console.warn(\n         \"This version of ABMobilePage hasn't updated it's refreshInstance()\",\n         this\n      );\n      return this;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABMobilePages for this ABMobilePage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABMobilePages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABMobilePages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         // if (this._pages && this._pages.length > 0) {\n         //    result = this._pages.filter(filter);\n\n         //    if (result.length < 1) {\n         //       this._pages.forEach((p) => {\n         //          var subPages = p.pages(filter, deep);\n         //          if (subPages && subPages.length > 0) {\n         //             result = subPages;\n         //          }\n         //       });\n         //    }\n         // }\n         result = this.application._searchDeep(this, \"_pages\", filter);\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABMobilePage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABMobilePage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABMobilePage that is tied to this\n    * ABMobilePage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABMobilePage}\n    */\n   pageNew(values) {\n      // make sure this is an ABMobilePage description\n      values.key = ABMobilePageDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABMobilePage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABMobilePage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages((p) => p.id != page.id);\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABMobilePageDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABMobilePage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABMobilePage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABMobileViewDefaults = {\n   key: \"mobile-view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABMobileViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABMobileViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABMobileViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || this.viewKey(),\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         // accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || this.viewKey();\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      // this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label =\n               this.parent.label +\n               \".\" +\n               (this.field?.()?.columnName ?? this.defaults.key);\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   // isAccessibleForRoles(roles) {\n   //    var foundRole = false;\n\n   //    var accessibleRoles = Object.keys(this.accessLevels) || [];\n   //    (roles || []).forEach((r) => {\n   //       if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n   //          foundRole = true;\n   //       }\n   //    });\n\n   //    return foundRole;\n   // }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   // getUserAccess() {\n   //    // by default everyone has no access\n   //    var accessLevel = 0;\n\n   //    if (this.application.isAccessManaged) {\n   //       // check to see if the current users is the access manager\n   //       var isAccessManager = false;\n   //       // first check if manager is defined by their role\n   //       if (parseInt(this.application.accessManagers.useRole) == 1) {\n   //          // if so check if any of the user's role match the managers\n   //          this.AB.Account.roles().forEach((role) => {\n   //             if (\n   //                this.application.accessManagers.role.indexOf(\n   //                   role.id || role.uuid\n   //                ) > -1\n   //             ) {\n   //                // if so set the access level to full access\n   //                isAccessManager = true;\n   //                accessLevel = 2;\n   //             }\n   //          });\n   //       }\n   //       // if the user isn't already set as the manager and the manager is defined by their account\n   //       if (\n   //          !isAccessManager &&\n   //          parseInt(this.application.accessManagers.useAccount) == 1\n   //       ) {\n   //          // check if the user's account matches the managers\n   //          if (\n   //             this.application.accessManagers.account.indexOf(\n   //                this.AB.Account.uuid() + \"\"\n   //             ) > -1\n   //          ) {\n   //             // if so set the access level to full access\n   //             isAccessManager = true;\n   //             accessLevel = 2;\n   //          }\n   //       }\n\n   //       // if the user is not the manager check if the page has access levels defined for roles\n   //       if (\n   //          this.accessLevels &&\n   //          Object.keys(this.accessLevels).length > 0 &&\n   //          !isAccessManager\n   //       ) {\n   //          // check to see if the user's roles matches one of the roles defined\n   //          this.AB.Account.roles().forEach((role) => {\n   //             var currentRole = this.accessLevels[role.id || role.uuid];\n   //             if (currentRole && parseInt(currentRole) > accessLevel)\n   //                // if the access level is higher than a previous role set to the new level\n   //                accessLevel = parseInt(currentRole);\n   //          });\n   //       }\n   //    } else {\n   //       accessLevel = 2;\n   //    }\n\n   //    return accessLevel;\n   // }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"mobile-form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"mobile-form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"mobile-detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"mobile-detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"mobile-page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\n               \"mobile-form\",\n               \"grid\",\n               \"line\",\n               \"area\",\n               \"bar\",\n               \"gantt\",\n               \"kanban\",\n            ].indexOf(this.key) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"mobile-form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\n                  \"button\",\n                  \"label\",\n                  \"mobile-page\",\n                  \"tab\",\n                  \"viewcontainer\",\n               ].indexOf(this.key) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `MobileView[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   // updateAccessLevels(roleId, accessLevel) {\n   //    if (parseInt(accessLevel) == 0) {\n   //       if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n   //    } else {\n   //       this.accessLevels[roleId] = accessLevel;\n   //    }\n\n   //    return this.save(false, false);\n   // }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         // result = result.concat(this._views.filter(filter));\n\n         // this._views.forEach((v) => {\n         //    var subViews = v.views(filter, deep);\n         //    if (subViews && subViews.length > 0) {\n         //       result = result.concat(subViews);\n         //    }\n         // });\n         result = this.application._searchDeep(this, \"_views\", filter);\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewByID()\n    *\n    * return the specific View referenced by the given ID.\n    *\n    * @param {uuid} ID\n    *        the {ABMobileView}.id of the child view we are requesting\n    *\n    * @return {ABMobileView || undefined}\n    */\n   viewByID(ID) {\n      return this.views((v) => v.id == ID, true)[0];\n   }\n\n   /**\n    * @method viewNew()\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   // viewDestroy(view) {\n   //    console.error(\"DEPRECIATED: where is this called?\");\n   //    return this.viewRemove(view);\n   // }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // the default widget doesn't.\n      // only those that actually do, should override this.\n      return false;\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"mobile-page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"mobile-button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormButtonCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      Object.keys(ABViewFormButtonPropertyComponentDefaults).forEach((k) => {\n         let val =\n            this.settings[k] ?? ABViewFormButtonPropertyComponentDefaults[k];\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // just ignore the error and save val\n         }\n         this.settings[k] = val;\n      });\n\n      // this.settings.includeSave = JSON.parse(\n      //    this.settings.includeSave ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeSave\n      // );\n      // this.settings.includeCancel = JSON.parse(\n      //    this.settings.includeCancel ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeCancel\n      // );\n      // this.settings.includeReset = JSON.parse(\n      //    this.settings.includeReset ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeReset\n      // );\n\n      // this.settings.isDefault = JSON.parse(\n      //    this.settings.isDefault ||\n      //       ABViewFormButtonPropertyComponentDefaults.isDefault\n      // );\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABMobileViewFormCheckboxDefaults = {\n   key: \"mobile-checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormCheckboxCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormCheckboxPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABMobileViewFormConnectDefaults = {\n   key: \"mobile-connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormConnectCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABMobileViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"mobile-form\", // unique key identifier for this ABMobileViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABMobileViewFormCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"mobile-label\", \"mobile-button\", \"mobile-text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    * return an array of all the ABViewFormField children\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewFormField that this fn\n    *\t       returns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) =>\n               comp instanceof this.AB.Class.ABMobileViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * @method addFieldToForm()\n    * Create a New Form Item on this Form from a given ABFieldXXX object.\n    * @param {ABFieldXXX} field\n    * @param {int} yPosition\n    * @return {ABMobileViewFormXXX}\n    */\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      // TODO: figure out how to decode the Data Field and return a form\n      // element.\n\n      var fieldComponent = field.formComponentMobile();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"mobile-fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormCustomCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormDatepickerDefaults = {\n   key: \"mobile-date\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormDatepickerCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormDatetimePropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormDatetimeDefaults = {\n   key: \"mobile-datetime\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"Date and Time\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormDatetimeCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormDatetimeDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormDatetimeDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormDatetimePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormEmailPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormEmailDefaults = {\n   key: \"mobile-email\", // {string} unique key for this view\n   icon: \"envelope\", // {string} fa-[icon] reference for this view\n   labelKey: \"Email\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormEmailCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormEmailDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormEmailDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormEmailPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormFilePropertyComponentDefaults = {};\n\nconst ABViewFormFileDefaults = {\n   key: \"mobile-file\",\n   // {string} unique key for this view\n   icon: \"file\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"file\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormFileCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormFileDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormFileDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormFilePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormFormulaPropertyComponentDefaults = {};\n\nconst ABViewFormFormulaDefaults = {\n   key: \"mobile-formula\",\n   // {string} unique key for this view\n   icon: \"circle-o-notch\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"Formula\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormFormulaCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormFormulaDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormFormulaPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormFile = require(\"../../platform/mobile/ABMobileViewFormFile\");\n\nconst ABViewFormImagePropertyComponentDefaults = {};\n\nconst ABViewImageFileDefaults = {\n   key: \"mobile-image\",\n   // {string} unique key for this view\n   icon: \"file-image-o\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"Image\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormImageCore extends ABMobileViewFormFile {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewImageFileDefaults\n      );\n   }\n\n   static common() {\n      return ABViewImageFileDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormImagePropertyComponentDefaults;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABMobileViewFormItemCore extends ABMobileView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABMobileViewFormNumberDefaults = {\n   key: \"mobile-numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormNumberCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABMobileViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n};\n","const ABMobileViewFormCustom = require(\"../../platform/mobile/ABMobileViewFormCustom\");\n\nconst ABMobileViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABMobileViewFormReadonlyDefaults = {\n   key: \"mobile-fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormReadonly extends ABMobileViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormReadonlyPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormSelectSingle = require(\"../../platform/mobile/ABMobileViewFormSelectSingle\");\n\nconst ABMobileViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABMobileViewFormSelectMultipleDefaults = {\n   key: \"mobile-selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormSelectMultipleCore extends (\n   ABMobileViewFormSelectSingle\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormSelectMultiplePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABMobileViewFormSelectSingleDefaults = {\n   key: \"mobile-selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormSelectSingleCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormSelectSinglePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n   placeholder: \"\", // default placeholder text\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"mobile-textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormTextboxCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   toObj() {\n      // placeholder is a multilingual value:\n      this.unTranslate(this.settings, this.settings, [\"placeholder\"]);\n\n      return super.toObj();\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // placeholder is a multilingual value:\n      this.unTranslate(this.settings, this.settings, [\"placeholder\"]);\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewLabelCore extends ABMobileView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n   hideTitle: 0,\n   hideTabs: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // we do if we have a setting for linkPageAdd\n      return this.settings.linkPageAdd != \"\";\n   }\n};\n","/**\n * ABProcessLane\n * manages the lanes in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABProcessParticipant = require(\"../../platform/process/ABProcessParticipant\");\n\nconst ABProcessLaneDefaults = {\n   type: \"process.lane\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\"\n   // {string} .icon\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessLaneCore extends ABProcessParticipant {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessLaneDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.type = attributes.type || ABProcessLaneDefaults.type;\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   // toObj() {\n   //     // default label value\n   //     if (!this.label && this.name && this.name != \"\") {\n   //         this.label = this.name;\n   //     }\n\n   //     // untranslate this object:\n   //     var data = super.toObj();\n\n   //     var fieldsToSave = [\n   //         \"id\",\n   //         \"name\",\n   //         \"type\",\n   //         \"processID\",\n   //         \"diagramID\",\n   //         \"where\"\n   //     ];\n   //     fieldsToSave.forEach((f) => {\n   //         data[f] = this[f];\n   //     });\n\n   //     return data;\n   // }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABProcessParticipantDefaults = {\n   type: \"process.participant\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\" // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessParticipantCore extends ABMLClass {\n   constructor(attributes, process, AB) {\n      super([\"label\"], AB);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n\n      this.fromValues(attributes);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessParticipantDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // These Values are needed By ABDefinition:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || ABProcessParticipantDefaults.type;\n      this.key = attributes.key || ABProcessParticipantDefaults.type;\n\n      // Process Values:\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneIDs = attributes.laneIDs || [];\n      this.stashed = false;\n      if (attributes.stashed && attributes.stashed != \"\") {\n         this.stashed = attributes.stashed;\n      }\n\n      function validChecker(attribute) {\n         return typeof attribute != \"undefined\" && attribute != null;\n      }\n\n      this.useRole = 0;\n      if (validChecker(attributes.useRole)) {\n         this.useRole = parseInt(attributes.useRole);\n      }\n\n      this.role = 0;\n      if (validChecker(attributes.role)) {\n         this.role = attributes.role;\n      }\n\n      this.useAccount = 0;\n      if (validChecker(attributes.useAccount)) {\n         this.useAccount = parseInt(attributes.useAccount);\n      }\n\n      this.account = 0;\n      if (validChecker(attributes.account)) {\n         this.account = attributes.account;\n      }\n\n      this.useField = 0;\n      if (validChecker(attributes.useField)) {\n         this.useField = parseInt(attributes.useField);\n      }\n\n      this.userField = [];\n      if (validChecker(attributes.userField)) {\n         this.userField = attributes.userField;\n      }\n\n      // depreciated\n      this.fields = [];\n      if (validChecker(attributes.fields)) {\n         this.fields = attributes.fields;\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneIDs\",\n         \"where\",\n         \"useRole\",\n         \"role\",\n         \"useAccount\",\n         \"account\",\n         \"useField\",\n         \"userField\",\n         \"fields\",\n         \"stashed\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * @method onProcessReady()\n    * perform any tasks/checks necessary after the parent Process is\n    * setup and ready.\n    */\n   onProcessReady() {}\n};\n","/*\n * ABProcessTaskManager\n *\n * An interface for managing the different ABProcessTasks in AppBuilder.\n *\n */\n\n/*\n * Tasks\n * A name => ABProcessElement hash of the different ABProcessElements available.\n */\nvar Tasks = {};\n\n/*\n * DEFINITIONTYPES\n * a hash of BPMN:Element.type to Default values\n * for each of our Process Objects.\n *\n * NOTE: For Tasks, the key should be target.type,\n * for Triggers or End elements, the key should be\n * the target.eventDefinitionType\n */\nvar DEFINITIONTYPES = {};\n\nvar AllProcessElements = [\n   require(\"../../platform/process/tasks/ABProcessEnd\"),\n   require(\"../../platform/process/tasks/ABProcessGatewayExclusive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskEmail\"),\n   require(\"../../platform/process/tasks/ABProcessTaskService\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingJEArchive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceCalculate\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceInsertRecord\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceQuery\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl\"),\n   require(\"../../platform/process/tasks/ABProcessTaskSubProcess\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUser\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserApproval\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserExternal\"),\n   require(\"../../platform/process/tasks/ABProcessTrigger\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerLifecycle\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerTimer\"),\n];\n\nAllProcessElements.forEach((ELEMENT) => {\n   Tasks[ELEMENT.defaults().key] = ELEMENT;\n\n   switch (ELEMENT.defaults().category) {\n      case \"start\":\n      case \"end\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.eventDefinitionType\n         ] = ELEMENT.defaults();\n         break;\n\n      case \"gateway\":\n      case \"task\":\n         DEFINITIONTYPES[\n            ELEMENT.DiagramReplace().target.type\n         ] = ELEMENT.defaults();\n         break;\n   }\n});\n\nmodule.exports = {\n   /*\n    * @function allTasks\n    * return all the currently defined ABProcessTasks in an array.\n    * @return [{ABProcessTask},...]\n    */\n   allTasks: function () {\n      var tasks = [];\n      for (var t in Tasks) {\n         tasks.push(Tasks[t]);\n      }\n      return tasks;\n   },\n\n   /*\n    * @function newTask\n    * return an instance of an ABProcessTask based upon the values.type value.\n    * @return {ABProcessTask}\n    */\n   newTask: function (values, process, AB) {\n      if (values.key) {\n         return new Tasks[values.key](values, process, AB);\n      } else {\n         //// TODO: what to do here?\n      }\n   },\n\n   DiagramReplaceDefinitionsForType: function (type) {\n      var definitions = AllProcessElements.filter((e) => {\n         return e.defaults().category == type;\n      }).map((e) => {\n         return e.DiagramReplace();\n      });\n      return definitions;\n   },\n\n   StartEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"start\");\n   },\n\n   Gateways: function () {\n      return this.DiagramReplaceDefinitionsForType(\"gateway\");\n   },\n\n   Tasks: function () {\n      return this.DiagramReplaceDefinitionsForType(\"task\");\n   },\n\n   EndEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"end\");\n   },\n\n   definitionForElement: function (element) {\n      // pull the key from the embedded .eventDefinition\n      // if there is one\n      var key = null;\n      if (element.businessObject.eventDefinitions) {\n         var def = element.businessObject.eventDefinitions[0];\n         if (def) {\n            key = def.$type;\n         }\n      }\n\n      // if not, then just use the base .type\n      if (!key) {\n         key = element.type;\n      }\n\n      return DEFINITIONTYPES[key];\n   },\n};\n\n","var ABMLClass = require(\"../../../platform/ABMLClass\");\n\nmodule.exports = class ABProcessTaskCore extends ABMLClass {\n   constructor(attributes, process, AB, defaultValues) {\n      super([\"label\"], AB);\n\n      this.defaults = defaultValues || { key: \"core\", icon: \"core\" };\n      // {obj} .defaults\n      // a value hash of default values for an ABProcessTask\n      // NOTE: needs to be set before .fromValues()\n\n      this.fromValues(attributes);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n      // {ABProcess} .process\n      // The parent ABProcess this process element is a part of.\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n      this.state = null;\n   }\n\n   ///\n   /// Static Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // ABDefinition Related fields:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process.task.unknown\";\n\n      // ABProcess related fields:\n      this.key = attributes.key || this.defaults.key || \"?key?\";\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneDiagramID = attributes.laneDiagramID || \"?laneID?\";\n      // laneDiagramID : connects to the parent object that defines any\n      //      default User information for the Task.  In our case, it\n      //      might be a {ABProcessParticipant} object, or a {ABProcessLane}\n      //      object.  by default, a diagram's Participant obj doesn't define\n      //      any lanes, and therefore can provide that info.  Once a lane\n      //      is added, however, an object is assigned to it, and the\n      //      Lane will provide that info.\n\n      // initialize any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            if (typeof attributes[s] == \"undefined\") this[s] = null;\n            else this[s] = attributes[s];\n         });\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneDiagramID\",\n         \"key\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      // save any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            data[s] = this[s];\n         });\n      }\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * errorConfig()\n    * Respond with an error when expected configuration parameters do not\n    * pull data.\n    * @param {obj} instance\n    *        the instance data of this task\n    * @param {string} msg\n    *        the display message for this error.\n    * @param {array[string]} fields\n    *        an array of parameter keys that should be included in the error\n    *        for additional information.\n    * @return {Promise.reject(error)}\n    */\n   errorConfig(instance, msg, fields = []) {\n      this.log(instance, msg);\n      var error = new Error(`${this.type}: ${msg}`);\n      var info = { task: this };\n      if (!Array.isArray(fields)) fields = [fields];\n      fields.forEach((field) => {\n         info[field] = this[field];\n      });\n      this.AB.notify.builder(error, info);\n      return Promise.reject(error);\n   }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context\n    *        the context data of the process instance\n    * @param {obj} defaults\n    *        any values to include from our child classes\n    * @param {obj} val\n    *        any values to override the default state\n    */\n   initState(context, defaults, val) {\n      defaults = defaults || {};\n      if (!val) {\n         val = defaults;\n         defaults = {};\n\n         // in this case, then auto initi blank instanceValues:\n         if (this.defaults && this.defaults.instanceValues) {\n            this.defaults.instanceValues.forEach((v) => {\n               defaults[v] = null;\n            });\n         }\n      }\n\n      context.taskState = context.taskState || {};\n\n      // don't overwrite your settings if they already exist:\n      if (!context.taskState[this.diagramID]) {\n         context.taskState[this.diagramID] = {\n            initialized: true,\n            status: \"initialized\",\n         };\n         for (var d in defaults) {\n            context.taskState[this.diagramID][d] = defaults[d];\n         }\n         for (var v in val) {\n            context.taskState[this.diagramID][v] = val[v];\n         }\n      }\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return false;\n   }\n\n   /**\n    * log()\n    * enter a log in the current process instance\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {...} ...allArgs the remaining parameters sent to the log\n    */\n   log(instance, ...allArgs) {\n      var text = `${this.diagramID} : ${\n         this.name ? this.name : this.key\n      } : ${allArgs.join(\" \")}`;\n      instance.log.push(text);\n   }\n\n   /**\n    * myLane()\n    * return the ABProcessParticipant | ABProcessLane element we are\n    * in.\n    * @return {ABProcessParticipant|ABProcessLane}\n    */\n   myLane() {\n      return this.process.elementForDiagramID(this.laneDiagramID);\n   }\n\n   /**\n    * myState()\n    * return the current state values for this ABProcessTask\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {obj}\n    */\n   myState(instance) {\n      return instance.context.taskState[this.diagramID];\n   }\n\n   /**\n    * nextTasks()\n    * follow the current instance diagram and return the next task(s)\n    * after this task.\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {array}  [ABProcessTask, ...] or {null} if an error\n    */\n   nextTasks(instance) {\n      var nextTasks = [];\n\n      var myDiagramObj = instance.hashDiagramObjects[this.diagramID];\n      if (!myDiagramObj) {\n         var error = new Error(\n            `Configuration Error: Did not find my definition for dID[${this.diagramID}]`\n         );\n         this.onError(instance, error);\n         return null;\n      }\n\n      // myDiagramObj :\n      // {\n      //     \"bpmn2:outgoing\": [{\"_text\": \"SequenceFlow_00fbxm3\"} ...],\n      //     \"_attributes\": {id: \"StartEvent_1\"},\n      //     \"_type\": \"start\"\n      // }\n\n      // find my possible exits:\n      var exitFlows = myDiagramObj[\"bpmn2:outgoing\"];\n      if (!exitFlows) {\n         var error = new Error(\n            `Configuration Error: Did not find any outgoing flows for dID[${this.diagramID}]`\n         );\n         this.AB.notify.builder(error, { task: this });\n         this.onError(instance, error);\n         return null;\n      }\n\n      if (!Array.isArray(exitFlows)) {\n         exitFlows = [exitFlows];\n      }\n\n      var tasksFromFlow = (flow) => {\n         // follow a flow and grab each of it's exit tasks\n         // place them into nextTasks[];\n\n         var flowObj = instance.hashDiagramObjects[flow[\"_text\"]];\n         if (!flowObj) return;\n\n         var targetIDs = flowObj[\"_attributes\"][\"targetRef\"];\n         if (!targetIDs) return;\n\n         if (!Array.isArray(targetIDs)) {\n            targetIDs = [targetIDs];\n         }\n\n         targetIDs.forEach((tid) => {\n            var targetTask = this.process.elementForDiagramID(tid);\n            if (targetTask) {\n               if (nextTasks) {\n                  nextTasks.push(targetTask);\n               }\n            } else {\n               var error = new Error(\n                  `Configuration Error: No ProcessTask instance for diagramID[${tid}]`\n               );\n               this.AB.notify.builder(error, { task: this });\n               this.onError(instance, error);\n               nextTasks = null;\n            }\n         });\n      };\n\n      exitFlows.forEach((f) => {\n         tasksFromFlow(f);\n      });\n\n      return nextTasks;\n   }\n\n   /**\n    * onError()\n    * perform the following actions (log it) on an error.\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {Error} error\n    */\n   onError(instance, error) {\n      if (error) {\n         var text = `${error.toString()}`;\n         this.log(instance, text);\n      }\n      var myState = this.myState(instance);\n      myState.status = \"error\";\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return null;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      return null;\n   }\n\n   /**\n    * hashProcessDataValues()\n    * return a hash of live Process Data Values\n    * @param {obj} instance\n    * @return {array} | null\n    */\n   hashProcessDataValues(instance) {\n      var listDataFields = this.process.processDataFields(this);\n      var currentProcessValues = {};\n      listDataFields.forEach((f) => {\n         currentProcessValues[f.key] = this.process.processData(this, [\n            instance,\n            f.key,\n         ]);\n      });\n      return currentProcessValues;\n   }\n\n   /**\n    * reset()\n    * prepare this task to run again if it was already completed.\n    *\n    * This might happen in a process where a loop is formed and tasks\n    * are repeated until a certain outcome.\n    *\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   reset(instance) {\n      // a task wants to run me.  Possibly again.\n      var myState = this.myState(instance);\n\n      // if I haven't setup my state (why?) then just\n      // do that again:\n      if (!myState) {\n         this.initState(instance.context);\n      } else {\n         // if I have already \"completed\" and we are being\n         // asked to run again (it's possible)\n         if (myState.status == \"completed\" || myState.status == \"error\") {\n            // remove my current state\n            delete instance.context.taskState[this.diagramID];\n\n            // store a new state in the context\n            this.initState(instance.context);\n\n            // remember our previous state\n            var newState = this.myState(instance);\n            newState._prevState = myState;\n            this.log(instance, \" Reset() called. Running again. \");\n         }\n      }\n   }\n\n   /**\n    * stateCompleted()\n    * mark this task has having completed.\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   stateCompleted(instance) {\n      var myState = this.myState(instance);\n      myState.status = \"completed\";\n   }\n\n   /**\n    * stateUpdate()\n    * update my state values with the given values data\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {obj} values    the new state values\n    */\n   stateUpdate(instance, values) {\n      values = values || {};\n      var myState = this.myState(instance);\n      for (var v in values) {\n         myState[v] = values[v];\n      }\n   }\n\n   /**\n    * wantToDoSomething()\n    * determine if this task still has something to do.\n    * @param {obj} instance  the instance data of the process we are working on\n    * @return {bool} true if there is still pending actions\n    */\n   wantToDoSomething(instance) {\n      var state = this.myState(instance);\n      if (state) {\n         return state.status != \"completed\" && state.status != \"error\";\n      } else {\n         // my state wasn't defined?\n         console.warn(\n            \"ABProcessTaskCore:wantToDoSomething(): called without having initialized our state first.\",\n            instance\n         );\n         // initialize our state and try again\n         this.initState(instance.context);\n         return this.wantToDoSomething(instance);\n      }\n   }\n\n   /**\n    * @method onProcessReady()\n    * Perform any setup actions after the parent process has indicated it is \"ready\"\n    */\n   onProcessReady() {}\n\n   get startElements() {\n      let startElems =\n         this.process.elements(\n            (elem) =>\n               elem && elem.defaults && elem.defaults.category === \"start\"\n         ) || [];\n      return startElems;\n   }\n\n   get previousElements() {\n      return this.process.connectionPreviousTask(this);\n   }\n\n   get objectOfStartElement() {\n      const startElem = this.startElements[0];\n      if (!startElem) return null;\n\n      return this.AB.objectByID(startElem.objectID);\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElements[0];\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEndDefaults = {\n   category: \"end\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"stop\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   key: \"End\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEndCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.end\";\n      super(attributes, process, AB, ABProcessTaskEndDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEndDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Terminate End Event\",\n         actionName: \"replace-with-terminate-end\",\n         className: \"bpmn-icon-end-event-terminate\",\n         target: {\n            type: \"bpmn:EndEvent\",\n            eventDefinitionType: \"bpmn:TerminateEventDefinition\",\n         },\n      };\n   }\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         triggered: false,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return true;\n   }\n\n   /**\n    * nextTasks()\n    * return the next tasks to be run after this task is complete.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve([])\n    */\n   nextTasks(instance) {\n      // I'm an End Event.  There are no nextTasks()\n      return [];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessGatewayExclusiveDefaults = {\n   category: \"gateway\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GatewayExclusive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"conditions\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessGatewayExclusiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.gateway.exclusive\";\n      super(attributes, process, AB, ABProcessGatewayExclusiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessGatewayExclusiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Exclusive Gateway\",\n         actionName: \"replace-with-exclusive-gateway\",\n         className: \"bpmn-icon-gateway-xor\",\n         target: {\n            type: \"bpmn:ExclusiveGateway\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.conditions = this.conditions || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEmailDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"to\",\n      \"from\",\n      \"subject\",\n      \"message\",\n      \"toCustom\",\n      \"fromCustom\",\n      \"toUsers\",\n      \"fromUsers\",\n      \"toCustomFields\",\n      \"fromCustomFields\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"email\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Email\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEmailCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.email\";\n      super(attributes, process, AB, ABProcessTaskEmailDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEmailDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Send Task\",\n         actionName: \"replace-with-send-task\",\n         className: \"bpmn-icon-send\",\n         target: {\n            type: \"bpmn:SendTask\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         this[f] = attributes[f];\n      });\n   }\n\n   /**\n    * onProcessReady()\n    * Perform our warnings checks once the parent Process is ready\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         to: [],\n         from: [],\n         subject: this.subject,\n         message: this.message,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingBatchProcessingDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingBatchProcessing\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectBatch\",\n      \"processBatchValue\",\n      \"fieldBatchEntries\",\n      \"fieldBatchFinancialPeriod\",\n      \"objectJE\",\n      \"fieldJEAccount\",\n      \"fieldJERC\",\n      \"fieldJEStatus\",\n      \"fieldJEStatusComplete\",\n      \"objectBR\",\n      \"fieldBRFinancialPeriod\",\n      \"fieldBRAccount\",\n      \"fieldBRRC\",\n      \"fieldBREntries\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingBatchProcessingCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.batchProcessing\";\n      super(attributes, process, AB, AccountingBatchProcessingDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingBatchProcessingDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPValue\",\n      \"objectFP\",\n      \"objectGL\",\n      \"objectAcc\",\n      \"fieldFPStart\",\n      \"fieldFPOpen\",\n      \"fieldFPStatus\",\n      \"fieldFPActive\",\n      \"fieldGLStarting\",\n      \"fieldGLRunning\",\n      \"fieldGLAccount\",\n      \"fieldGLRc\",\n      \"fieldGLDebit\",\n      \"fieldGLCredit\",\n      \"fieldAccType\",\n      \"fieldAccAsset\",\n      \"fieldAccExpense\",\n      \"fieldAccLiabilities\",\n      \"fieldAccEquity\",\n      \"fieldAccIncome\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpClose\";\n      super(attributes, process, AB, AccountingFPCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPYearCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPYearClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPYearValue\",\n      \"objectFPYear\",\n      \"objectFPMonth\",\n      \"objectGL\",\n      \"objectAccount\",\n      \"valueFundBalances\",\n      \"valueNetIncome\",\n      \"fieldFPYearStart\",\n      \"fieldFPYearEnd\",\n      \"fieldFPYearStatus\",\n      \"fieldFPYearActive\",\n      \"fieldFPMonthStart\",\n      \"fieldFPMonthEnd\",\n      \"fieldGLStartBalance\",\n      \"fieldGLRunningBalance\",\n      \"fieldGLrc\",\n      \"fieldAccNumber\",\n      \"fieldAccType\",\n      \"fieldAccTypeIncome\",\n      \"fieldAccTypeExpense\",\n      \"fieldAccTypeEquity\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPYearCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpYearClose\";\n      super(attributes, process, AB, AccountingFPYearCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPYearCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet AccountingJEArchiveDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"archive\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingJEArchive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processBatchValue\",\n      \"objectBatch\",\n      \"objectBalance\",\n      \"objectJE\",\n      \"objectJEArchive\",\n\n      \"fieldBatchFiscalMonth\",\n      \"fieldJeAccount\",\n      \"fieldJeRC\",\n      \"fieldJeArchiveBalance\",\n      \"fieldBrFiscalMonth\",\n      \"fieldBrAccount\",\n      \"fieldBrRC\",\n      \"fieldsMatch\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingJEArchiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.jeArchive\";\n      super(attributes, process, AB, AccountingJEArchiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingJEArchiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet CalculateDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"calculator\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Calculate\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formulaText\"],\n};\n\nmodule.exports = class CalculateTaskCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.calculate\";\n      super(attributes, process, AB, CalculateDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return CalculateDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      const label = `${this.label}->Value`;\n      // this is a calculate task, so let's include a fake ABFieldNumber\n      // for the .field value, so other tasks that limit their operations\n      // to fields can use this as a number\n      if (!this._fakeNum) {\n         this._fakeObj = this.AB.objectNew({});\n         this._fakeNum = this.AB.fieldNew(\n            { key: \"number\", name: label, label },\n            this._fakeObj\n         );\n      }\n      return {\n         key: `${this.id}.value`,\n         label,\n         field: this._fakeNum,\n      };\n   }\n};\n","/**\n * ABProcessTaskServiceCore\n *\n * This defines the base Service Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a ServiceTask performs a dedicated operation on the server.\n *  - performing a query, looking up data, etc...\n *\n */\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskServiceDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskService\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service\";\n      super(attributes, process, AB, ABProcessTaskServiceDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Service Task\",\n         actionName: \"replace-with-service-task\",\n         className: \"bpmn-icon-service\",\n         target: {\n            type: \"bpmn:ServiceTask\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskGetResetPasswordUrlDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GetResetPasswordUrl\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"email\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskGetResetPasswordUrlCore extends (\n   ABProcessElement\n) {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.getResetPasswordUrl\";\n      super(attributes, process, AB, ABProcessTaskGetResetPasswordUrlDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskGetResetPasswordUrlDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.url`,\n         label: `${this.label}->URL`,\n      };\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet InsertRecordDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"InsertRecord\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectID\",\n      \"fieldValues\",\n      \"isRepeat\",\n      \"repeatMode\",\n      \"repeatColumn\",\n   ],\n};\n\nmodule.exports = class InsertRecordCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.insertRecord\";\n      super(attributes, process, AB, InsertRecordDefaults);\n\n      this.results = [];\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return InsertRecordDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.isRepeat = JSON.parse(attributes.isRepeat || false);\n   }\n\n   get startElement() {\n      let startElem = null;\n      let currProcess = this.process;\n\n      // Find the start (trigger) task\n      while (!startElem && currProcess) {\n         startElem = currProcess.elements(\n            (elem) => elem?.defaults?.category == \"start\"\n         )[0];\n\n         // If .currProcess is a sub task, then go to the parent process for get the start task\n         currProcess = currProcess.process;\n      }\n\n      return startElem;\n   }\n\n   get previousElement() {\n      return this.process.connectionPreviousTask(this)[0];\n   }\n\n   get objectOfStartElement() {\n      let startElem = this.startElement;\n      if (!startElem) return null;\n\n      let startElemObj = this.AB.objectByID(startElem.objectID);\n      return startElemObj;\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElement;\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n\n   get fieldRepeat() {\n      let obj = this.objectOfStartElement;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.repeatColumn)[0];\n   }\n\n   /**\n    * processDataFields()\n    * return a single available data field from this element\n    * this will be the record inserted by this task\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.[PK]`,\n            label: `${this.label}-> Inserted record [PK]`,\n            field: {\n               id: this.id,\n               object: { id: this.objectID },\n               key: \"InsertedRecord\",\n               columnName: \"uuid\",\n            },\n            object: this.objectID,\n            set: true,\n         },\n      ];\n   }\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n     toObj() {\n         var data = super.toObj();\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             data[f] = this[f];\n         });\n \n         return data;\n     }\n     */\n\n   ////\n   //// Process Instance Methods\n   ////\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABQLManager = require(\"../../../platform/ql/ABQLManager.js\");\n\nconst ABProcessTaskServiceQueryDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskServiceQuery\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"qlObj\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceQueryCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.query\";\n      super(attributes, process, AB, ABProcessTaskServiceQueryDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceQueryDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Before we make instances of qlObj:\n      this._datasources = [];\n\n      // comvert our qlObj into an ABQLxxx instance.\n      if (this.qlObj) {\n         this.qlObj = ABQLManager.fromAttributes(this.qlObj, this, this.AB);\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const data = super.toObj();\n\n      // convert qlObj into obj format:\n      if (this.qlObj) data.qlObj = this.qlObj.toObj();\n\n      return data;\n   }\n\n   registerDatasource(obj) {\n      this._datasources.push(obj);\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        const myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // in this Task, we can return the Response to the UserForm\n      let fields = null;\n\n      if (this._datasources.length > 0) {\n         fields = [];\n\n         this._datasources.forEach((s) => {\n            const param = s.processDataField(this.id, this.label);\n\n            if (param) {\n               fields.push(param);\n            }\n         });\n      }\n\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      const parts = key.split(\".\");\n\n      if (parts[0] === this.id) {\n         const myState = this.myState(instance);\n\n         return myState[parts[1]];\n      }\n\n      return null;\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet SubProcessDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"object-group\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"SubProcess\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"isEnable\",\n      \"parameterId\",\n      \"connectionAttrs\",\n      \"elementIDs\",\n      \"loopType\",\n   ],\n};\n\nconst NOSPAM = {\n   /*message : bool */\n};\n// prevent sending the same message over and over.\n\nmodule.exports = class SubProcessCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.subProcess\";\n      super(attributes, process, AB, SubProcessDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return SubProcessDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"Sub Process\",\n         actionName: \"replace-with-subprocess\",\n         className: \"bpmn-icon-subprocess-expanded\",\n         target: {\n            type: \"bpmn:SubProcess\",\n            isExpanded: true,\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Convert string to boolean\n      this.isEnable = this.isEnable == null ? true : JSON.parse(this.isEnable);\n\n      let currElements = this._elements || {};\n      this._unknownElementIDs = [];\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         let ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this._unknownElementIDs.push(eID);\n            }\n         }\n      });\n\n      this._unknownElementIDs.forEach((eID) => {\n         let key = `Process[${this.processID}] Task[${this.label}] is referencing an unknown element id:[${eID}]`;\n         if (!NOSPAM[key]) {\n            let err = new Error(key);\n            this.AB.notify.builder(err, { processTask: this.id, eID });\n            NOSPAM[key] = true;\n         }\n      });\n\n      this._connections = attributes.connectionAttrs || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let data = super.toObj();\n\n      data.elementIDs = [];\n      for (let e in this._elements) {\n         data.elementIDs.push(this._elements[e].id);\n      }\n\n      data.connectionAttrs = this._connections;\n\n      return data;\n   }\n\n   /**\n    * @method processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      if (this.parameterId == null) return [];\n\n      // only call processDataFields once, filter it to get the different queries\n      let dataFieldsAll = this.process.processDataFields(this) || [];\n\n      // get the subtask data\n      let dataFieldOpt = dataFieldsAll.filter(\n         (opt) => opt.key === this.parameterId\n      )[0];\n\n      // get data from insert tasks\n      let dataFieldsAllInserted = dataFieldsAll.filter(\n         (opt) => (opt?.field?.key ?? opt?.field) === \"InsertedRecord\"\n      );\n\n      if (dataFieldOpt == null) return [];\n\n      let result = [];\n\n      // Connect field type\n      if (\n         dataFieldOpt.field &&\n         dataFieldOpt.field.key == \"connectObject\" &&\n         dataFieldOpt.field.datasourceLink &&\n         dataFieldOpt.field.datasourceLink.fields\n      ) {\n         result.push({\n            key: `${this.id}.uuid`,\n            label: `${this.label}->Repeat Data.ID`,\n            object: dataFieldOpt.field.datasourceLink,\n         });\n\n         dataFieldOpt.field.datasourceLink.fields().forEach((f) => {\n            result.push({\n               key: `${this.id}.${f.id}`,\n               label: `${this.label}->Repeat Data.${f.label}`,\n               field: f,\n               object: f.object,\n            });\n         });\n      }\n      // Other field types\n      else {\n         result.push({\n            key: dataFieldOpt.field\n               ? `${this.id}.${dataFieldOpt.field.id}`\n               : `${this.id}.subProcess`,\n            label: `${this.label}->Repeat Data`,\n            field: dataFieldOpt.field,\n            object: dataFieldOpt.object,\n         });\n      }\n\n      dataFieldsAllInserted.forEach((opt) => {\n         result.push({\n            key: `${opt.key || opt.id}`,\n            label: `Parent Process Data->${opt.label}`,\n            field: opt.field,\n            object: opt.object,\n         });\n      });\n\n      // Get any tasks that exist inside the subprocess\n      let previousFields = this.process.processDataFields.call(\n         this,\n         currElement\n      );\n      if (previousFields && previousFields.length > 0) {\n         result = result.concat(previousFields);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      let instance = params[0];\n      let key = params[1];\n      let data;\n\n      if (instance && key?.startsWith?.(this.id)) {\n         let fieldId = key.split(\".\")[1];\n         let myState = this.myState(instance);\n         let stateData = myState ? myState.data : null;\n         data = stateData;\n\n         if (stateData && fieldId) {\n            let dataFieldOpt = (\n               this.process.processDataFields(this) || []\n            ).filter((opt) => opt.key == this.parameterId)[0];\n\n            if (dataFieldOpt?.field?.key == \"connectObject\") {\n               if (!Array.isArray(stateData)) stateData = [stateData];\n\n               // Extract data\n               data = stateData.map((item) => {\n                  if (fieldId == \"uuid\" || fieldId == \"id\") {\n                     return item.uuid || item.id || item;\n                  } else if (dataFieldOpt.field.datasourceLink) {\n                     let returnField = dataFieldOpt.field.datasourceLink.fields(\n                        (f) => f.id == fieldId\n                     )[0];\n                     if (returnField) return item[returnField.columnName];\n                     else return item;\n                  }\n               });\n            }\n         }\n      }\n\n      // Filter none data items\n      if (Array.isArray(data)) data = data.filter((d) => d != null);\n\n      if (data == null || !data.length)\n         data = this.process.processData.call(this, currElement, params);\n\n      if (data == null || !data.length)\n         data = this.process.processData(this, params);\n\n      return data;\n   }\n\n   allPreviousTasks(...params) {\n      return this.process.allPreviousTasks.call(this, ...params);\n   }\n\n   allPreviousConnectionsForElement(...params) {\n      return this.process.allPreviousConnectionsForElement.call(\n         this,\n         ...params\n      );\n   }\n\n   allPreviousConnectionsForConnection(...params) {\n      return this.process.allPreviousConnectionsForConnection.call(\n         this,\n         ...params\n      );\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * @method connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      return this.process.connections.call(this, fn);\n   }\n\n   /**\n    * @method connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      if (!dID) return;\n\n      return this.process.connectionForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsIncoming.call(this, dID);\n   }\n\n   /**\n    * @method connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsOutgoing.call(this, dID);\n   }\n\n   /**\n    * @method connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      if (!element) return;\n\n      this.process.connectionRemove.call(this, element);\n   }\n\n   /**\n    * @method connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      if (!element) return;\n\n      return this.process.connectionSimplyElement.call(this, element);\n   }\n\n   /**\n    * @method connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      if (!element) return;\n\n      this.process.connectionUpsert.call(this, element);\n   }\n\n   /**\n    * @method connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      if (!currElement) return;\n\n      return this.process.connectionPreviousTask.call(this, currElement);\n   }\n\n   /**\n    * @method elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      return this.process.elements.call(this, fn);\n   }\n\n   /**\n    * @method elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      if (!element) return;\n\n      this.process.elementAdd.call(this, element);\n   }\n\n   /**\n    * @method elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      if (!dID) return null;\n\n      return this.process.elementForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      if (!def) return;\n\n      this.process.elementRemove.call(this, def);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABFieldList = require(\"../../../platform/dataFields/ABFieldList.js\");\n\nvar ABProcessTaskApprovalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Approval\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserApprovalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user.approval\";\n      super(attributes, process, AB, ABProcessTaskApprovalDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskApprovalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      function fixBoolean(obj) {\n         if (obj) {\n            Object.keys(obj).forEach((k) => {\n               if (obj[k] == \"false\") {\n                  obj[k] = false;\n               } else if (obj[k] == \"true\") {\n                  obj[k] = true;\n               } else if (typeof obj[k] == \"object\") {\n                  fixBoolean(obj[k]);\n               }\n            });\n         }\n      }\n      fixBoolean(this.formBuilder);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   /*     \n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskApprovalDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n*/\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {};\n        ABProcessTaskApprovalDefaults.instanceValues.forEach((v) => {\n            myDefaults[v] = null;\n        });\n\n        super.initState(context, myDefaults, val);\n    }\n*/\n\n   /*\n    * preProcessFormIOComponents()\n    * we need to parse the form.io components to ensure the proper columnName\n    * and labels are being used. We also will translate the columnNames at this\n    * point in the code\n    */\n   preProcessFormIOComponents() {\n      var fields = this.process.processDataFields(this);\n      if (fields && this.formBuilder && this.formBuilder.components) {\n         this.formBuilder.components.forEach((c) => {\n            if (c.abFieldID) {\n               fields.filter((entry) => {\n                  if (entry.field?.id == c.abFieldID) {\n                     c.label = entry.field.label;\n                     c.key = entry.key;\n                     if (c.data?.values && entry.field.settings.options) {\n                        var vals = [];\n                        entry.field.settings.options.forEach((opt) => {\n                           vals.push({\n                              label: opt.text,\n                              value: opt.id,\n                           });\n                        });\n                        c.data.values = vals;\n                     }\n                  }\n               });\n            } else if (c.components && c.components.length) {\n               c.key = c.path;\n               c.components.forEach((o) => {\n                  if (o.abFieldID) {\n                     // these are plucked conneted values\n                     // gather up all their fields to be used\n                     var pluck = fields.filter((f) => {\n                        return f.key == c.path;\n                     })[0];\n                     if (!pluck) return;\n                     pluck.object.fields().filter((entry) => {\n                        if (entry?.id == o.abFieldID) {\n                           o.label = entry.label;\n                           o.key = entry.columnName;\n                           if (o.data?.values && entry.settings.options) {\n                              var vals = [];\n                              entry.settings.options.forEach((opt) => {\n                                 vals.push({\n                                    label: opt.text,\n                                    value: opt.id,\n                                 });\n                              });\n                              o.data.values = vals;\n                           }\n                        }\n                     });\n                  }\n               });\n            }\n         });\n      }\n      return this.formBuilder;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // we need to get the button events defined by the form.io formBuilder\n      var options = [];\n      this.formBuilder.components.forEach((comp) => {\n         if (comp.type == \"button\" && comp.action == \"event\" && comp.event) {\n            options.push({\n               id: comp.event,\n               text: comp.label,\n            });\n         }\n      });\n      // in this Task, we can return the Response to the UserForm\n      // The Response can be in the form of a List Field, with one or more\n      // return options.\n\n      var myID = this.diagramID;\n\n      // create an ABFieldList object:\n      // make sure the options follow what is currently defined for our\n      // responses:\n      var myObj = this.AB.objectNew({});\n      var listField = new ABFieldList(\n         {\n            id: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            columnName: `${myID}.userFormResponse`,\n            settings: {\n               options: options,\n            },\n         },\n         myObj\n      );\n\n      return [\n         {\n            key: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            field: listField,\n            object: null,\n         },\n      ];\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.diagramID) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n         }\n      }\n      return null;\n   }\n};\n","/**\n * ABProcessTaskUserCore\n *\n * This defines the base User Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a UserTask expects a human user to perform an action.  These\n * actions are in the possible forms:\n *  - confirm offline action\n *  - approve data\n *  - fill out a form\n *\n */\n\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskUserDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"user\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskUser\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user\";\n      super(attributes, process, AB, ABProcessTaskUserDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"User Task\",\n         actionName: \"replace-with-user-task\",\n         className: \"bpmn-icon-user\",\n         target: {\n            type: \"bpmn:UserTask\",\n         },\n      };\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         roles: [],\n         ui: null,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserExternalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"External\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"url\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {\n   who: 0,\n   toUsers: null,\n   url: \"\",\n};\n\nmodule.exports = class ABProcessTaskUserExternalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.external\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserExternalDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserExternalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.userFormResponse`,\n            label: `${this.label}->Response`,\n         },\n      ];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTriggerDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Trigger\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTriggerDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTriggerDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Signal Start Event\",\n         actionName: \"replace-with-signal-start\",\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"bpmn:SignalEventDefinition\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.triggerKey = attributes.triggerKey || \"triggerKey.??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.triggerKey = this.triggerKey;\n\n      return data;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"objectID\",\n      \"lifecycleKey\" /* , \"triggerKey\" is tracked in ABProcessTrigger */,\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TriggerLifecycle\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerLifecycle extends ABProcessTrigger {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTaskTriggerLifecycleDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Object Lifecycle Trigger\",\n         actionName: \"replace-with-signal-lifecycle-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalLifecycle\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.objectID = attributes.objectID || \"objID.??\";\n      this.lifecycleKey = attributes.lifecycleKey || \"lifecycle.key??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.objectID = this.objectID;\n      data.lifecycleKey = this.lifecycleKey;\n      return data;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      var fields = null;\n      if (this.objectID) {\n         fields = [];\n         var object = this.AB.objectByID(this.objectID);\n         if (object) {\n            var myID = this.diagramID;\n            object.fields().forEach((field) => {\n               fields.push({\n                  key: `${myID}.${field.id}`,\n                  label: `${this.label}->${object.label}->${field.label}`,\n                  field,\n                  object,\n               });\n            });\n            fields.push({\n               key: `${myID}.uuid`,\n               label: `${this.label}->${object.label}`,\n               field: null,\n               object,\n            });\n         } else {\n            // OK, so we have an this.objectID defined, but we can't find it.\n            // that's something we need to alert:\n            var error = new Error(\n               `ABProcessTriggerLifecycleCore.processDataFields():TaskID[${this.id}]: could not find referenced object by ID [${this.objectID}]`\n            );\n            this.AB.notify.builder(error, {\n               task: this.id,\n               objID: this.objectID,\n            });\n         }\n      }\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      var parts = key.split(\".\");\n      if (parts[0] == this.diagramID) {\n         var myState = this.myState(instance);\n         if (myState[\"data\"]) {\n            var object = this.AB.objectByID(this.objectID);\n            var field = object.fields((f) => {\n               return f.id == parts[1];\n            })[0];\n            if (field) {\n               if (parts[2]) {\n                  return field[parts[2]].call(field, myState[\"data\"]);\n               } else {\n                  // instance.context.data[field.column_name];\n                  // if field is \"calculate\" or \"TextFormula\" data is not stored\n                  // in data base and we need to run format method\n                  if ([\"calculate\", \"TextFormula\"].indexOf(field.key) != -1) {\n                     return field.format(myState[\"data\"]);\n                  } else if (\n                     field.key == \"connectObject\" ||\n                     field.key == \"user\"\n                  ) {\n                     return (\n                        myState[\"data\"][field.relationName()] ||\n                        myState[\"data\"][field.columnName]\n                     );\n                  } else {\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            } else if (parts[1] == \"uuid\") {\n               return myState[\"data\"][\"uuid\"];\n            } else {\n               // parts[1] should be a field.id\n               var object = this.AB.objectByID(this.objectID);\n               var field = object.fields((f) => {\n                  return f.id == parts[1];\n               })[0];\n               if (field) {\n                  if (parts[2]) {\n                     return field[parts[2]].call(field, myState[\"data\"]);\n                  } else {\n                     // instance.context.data[field.column_name];\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            }\n         }\n      }\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      var objects = null;\n      if (this.objectID) {\n         objects = [this.AB.objectByID(this.objectID)];\n      }\n      return objects;\n   }\n};\n","const ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"repeatEvery\",\n      \"repeatTime\",\n      \"repeatDaily\",\n      \"repeatWeekly\",\n      \"repeatMonthly\",\n      \"isEnabled\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"clock-o\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TimerStartEvent\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   repeatEvery: \"daily\",\n   repeatTime: \"01:00\",\n   repeatDaily: \"day\",\n   repeatWeekly: \"FRI\",\n   repeatMonthly: \"last\",\n   isEnabled: true,\n};\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTrigger {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"trigger\";\n      super(\n         attributes,\n         process,\n         application,\n         ABProcessTaskTriggerLifecycleDefaults\n      );\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Timer Start Event\",\n         actionName: \"replace-with-signal-timer-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-timer\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalTriggerTimer\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.repeatEvery =\n         attributes.repeatEvery ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatEvery;\n\n      this.repeatDaily =\n         attributes.repeatDaily ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatDaily;\n\n      this.repeatWeekly =\n         attributes.repeatWeekly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatWeekly;\n\n      this.repeatMonthly =\n         attributes.repeatMonthly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatMonthly;\n\n      // Convert UTC to local time\n      if (attributes.repeatTime) {\n         let timeVals = attributes.repeatTime.split(\":\");\n         let currDate = new Date();\n         currDate.setUTCHours(timeVals[0]);\n         currDate.setUTCMinutes(timeVals[1]);\n         this.repeatTime = `${currDate.getHours()}:${currDate.getMinutes()}`;\n      } else {\n         this.repeatTime = ABProcessTaskTriggerLifecycleDefaults.repeatTime;\n      }\n\n      if (typeof attributes.isEnabled != \"undefined\") {\n         this.isEnabled = JSON.parse(attributes.isEnabled);\n      } else {\n         this.isEnabled = ABProcessTaskTriggerLifecycleDefaults.isEnabled;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.repeatEvery = this.repeatEvery;\n      data.repeatDaily = this.repeatDaily;\n      data.repeatWeekly = this.repeatWeekly;\n      data.repeatMonthly = this.repeatMonthly;\n\n      // Convert local time to UTC\n      data.repeatTime = this.repeatTime;\n      if (data.repeatTime && data.repeatTime instanceof Date) {\n         data.repeatTime = `${data.repeatTime.getUTCHours()}:${data.repeatTime.getMinutes()}`;\n      }\n\n      data.isEnabled = this.isEnabled;\n\n      return data;\n   }\n\n   getCronExpression() {\n      let timeVals = this.repeatTime.split(\":\");\n      let second = \"*\";\n      let minute = timeVals[1];\n      let hour = timeVals[0];\n      let day;\n      let month;\n      let dayWeek;\n      let year = \"*\";\n\n      switch (this.repeatEvery) {\n         case \"daily\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatDaily == \"weekday\" ? \"1-5\" : \"*\";\n            break;\n         case \"weekly\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatWeekly;\n            break;\n         case \"monthly\":\n            day = this.repeatMonthly;\n            month = \"*\";\n            dayWeek = \"*\";\n            break;\n      }\n\n      return `${second} ${minute} ${hour} ${day} ${month} ${dayWeek} ${year}`;\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nvar ABEmitter = require(\"../../platform/ABEmitter\");\nclass ABQLCore extends ABEmitter {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super();\n\n      // manage the incoming Parameter Definitions\n      if (!Array.isArray(parameterDefinitions)) {\n         parameterDefinitions = [parameterDefinitions];\n      }\n\n      this.parameterDefinitions = parameterDefinitions;\n\n      this.object = prevOP ? prevOP.object : null;\n      // {ABObject}\n      // The current {ABObject} the current Query Language Operation is associated\n      // with.\n\n      // if the previous Operation defined an .objectOut then our .object is THAT\n      // one.\n      if (prevOP && prevOP.objectOut) this.object = prevOP.objectOut;\n\n      this.prevOP = prevOP;\n      this.task = task;\n      // {ABProcessTaskxxx}\n      // This is running under a specific ABProcessTaskServiceQuery.  When\n      // searching for data from the Process, we must go through this.task\n      // to do so.\n\n      this.AB = AB;\n      this.next = null;\n\n      this.fromAttributes(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {}\n\n   fromAttributes(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n\n      // super.fromValues(attributes);\n      this.key = this.constructor.key ?? null;\n\n      // this.entryComplete = attributes.entryComplete || false;\n      this.params = attributes.params ?? {};\n      // {hash}\n      // The configuration values entered by the AppBuilder UI for this\n      // operation.\n\n      this.objectID = attributes.objectID || null;\n\n      // be sure to do a hard lookup if an objectID was saved:\n      if (this.objectID) this.object = this.objectLookup(this.objectID);\n\n      this.initObject(attributes);\n\n      // at least dump a warning here:\n      if (this.objectID && !this.object)\n         this.AB.notify.developer(\n            new Error(\n               `ABQLCore.fromAttributes(): unable to initialize ABObject [${this.objectID}]`\n            ),\n            {\n               attributes,\n               objectID: this.objectID,\n            }\n         );\n\n      if (attributes.next) {\n         let nextOP = null;\n\n         (this.NextQLOps ?? this.constructor.NextQLOps).forEach((OP) => {\n            if (OP.key === attributes.next.key) nextOP = OP;\n         });\n\n         if (nextOP) {\n            // exact match, so add next:\n            const qlOP = new nextOP(attributes.next, this, this.task, this.AB);\n\n            this.next = qlOP;\n         }\n      }\n   }\n\n   /**\n    * @method objectLookup()\n    * return a matching {ABObject} that is represented by the given id.\n    * NOTE: we will try to match on: our initial .objectID first, then\n    * the given objID.\n    * NOTE: this will match an object.id as well as object.label\n    * @param {string} objID\n    */\n   objectLookup(objID) {\n      return this.AB.objects((o) => {\n         const quotedLabel = `\"${o.label}\"`;\n\n         return (\n            // o.id === this.objectID ||\n            o.id === objID || quotedLabel.indexOf(objID) === 0\n         );\n      })[0];\n   }\n\n   /**\n    * @method availableProcessDataFieldsHash()\n    * return a { \"field.key\" => {processFieldDef} } hash of the currently\n    * available fields in the process.\n    * @return {obj}\n    */\n   availableProcessDataFieldsHash() {\n      const availableProcessDataFields =\n         this.task.process.processDataFields(this.task) ?? [];\n      const hashFieldIDs = {};\n\n      availableProcessDataFields.forEach((f) => {\n         if (f.field) {\n            hashFieldIDs[f.field.id] = f;\n         } else {\n            hashFieldIDs[f.key] = f;\n         }\n      });\n\n      return hashFieldIDs;\n   }\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {}\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABQL instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const obj = {\n         key: this.constructor.key,\n         // entryComplete: this.entryComplete,\n         params: this.params,\n         // currQuery: this.currQuery,\n         // queryValid: this.queryValid,\n         objectID: this.object?.id ?? null,\n      };\n\n      if (this.next) {\n         obj.next = this.next.toObj();\n      }\n\n      return obj;\n   }\n}\n\nmodule.exports = ABQLCore;\n","/*\n * ABQLFindCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst NextQLOps = require(\"./ABQLSet.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLFind task is complete.  In this case the {ABQLSet} operations come\n// next.  {ABQLSet} operations work on a Set|{Array} or data results.\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectConditions\",\n      name: \"cond\",\n   },\n];\n\nclass ABQLFindCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLFindCore.key = \"find\";\nABQLFindCore.label = \"find\";\nABQLFindCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLFindCore;\n","/*\n * ABQLManagerCore\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst QLObject = require(\"../../platform/ql/ABQLRootObject.js\");\nconst QLOps = [QLObject];\n\nconst ABQLManagerCore = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current ABFactory we are operating under.\n    * @return {ABQL} | null\n    */\n   fromAttributes: function (attributes, task, AB) {\n      if (!attributes) return null;\n\n      const matchingOPs = [];\n\n      ABQLManagerCore.QLOps.forEach((Op) => {\n         if (Op.key === attributes.key) matchingOPs.push(Op);\n      });\n\n      if (matchingOPs.length === 1) {\n         // let this Operation initialize and return the last OP\n         // in the chain\n         const qlOP = new matchingOPs[0](attributes, task, AB);\n\n         return qlOP;\n      } else return null;\n   },\n\n   /**\n    * @array QLOps\n    * An array of the root QL Operations.\n    */\n   QLOps: QLOps,\n};\nmodule.exports = ABQLManagerCore;\n","/*\n * ABQLRootObjectCore\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\n// Define the Operations that can be performed off of a RootObject.\n// Each Root Object might have a different set of Operations, so we\n// define them here.\nconst QLFind = require(\"../../platform/ql/ABQLFind.js\");\nconst NextQLOps = [QLFind];\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectName\",\n      name: \"name\",\n   },\n];\n\nclass ABQLObjectCore extends ABQL {\n   constructor(attributes, task, AB) {\n      // NOTE: keep this so we can insert the prevOp == null\n      super(attributes, ParameterDefinitions, null, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {\n      if (!this.object && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) {\n            this.objectID = this.params[objNameDef.name];\n            this.object = this.objectLookup(this.objectID);\n         }\n\n         if (!this.object) {\n            this.warningMessage(\"has no object set.\", {\n               objectID: this.objectID,\n            });\n         }\n      }\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      // if we don't have an objectID, but we have an objectName parameter\n      // definition then save that as our objectID\n      if (!obj.objectID && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) obj.objectID = this.params[objNameDef.name];\n      }\n\n      return obj;\n   }\n}\n\nABQLObjectCore.key = \"object\";\nABQLObjectCore.label = \"object\";\nABQLObjectCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLObjectCore;\n","/*\n * ABQLRow\n *\n * Defines all the QL operations that can be performed on a Row of data. This is a\n * Single row/instance of an object.\n *\n */\n\nconst QLUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst QLSave = require(\"../../platform/ql/ABQLRowSave\");\nconst QLPluck = require(\"../../platform/ql/ABQLRowPluck\");\n\nmodule.exports = [QLUpdate, QLSave, QLPluck];\n","/*\n/*\n * ABQLRowPluckCore\n *\n * An ABQLRowPluckCore can process a value of data and puck out a specified\n * field to then make an object of values that only contain that field.\n *\n */\n\n// const ABQLValue = require(\"./ABQLValue.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\nconst ABQLSetPluck = require(\"../../platform/ql/ABQLSetPluck.js\");\nconst ABQLRowUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst ABQLRowSave = require(\"../../platform/ql/ABQLRowSave.js\");\n\nclass ABQLRowPluckCore extends ABQLSetPluck {\n   // Dynamic NextQLOps\n   get NextQLOps() {\n      let nextQLOps = [];\n\n      const field = this.field ?? this.object.fieldByID(this.fieldID) ?? null;\n\n      // Update .NextQLOps WARN: update to static it affects to every ABQLRowPluck instances.\n      switch (field?.key) {\n         // M:1 M:N connect field, then set ABQLSet to next steps\n         case \"connectObject\":\n            if (field.settings.linkType === \"many\") {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // return ABQLRow.js\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         case \"user\":\n            // TODO set this up corectlys\n            if (\n               field.settings.linkType === \"many\" ||\n               field.settings.isMultiple // may be unnessicary\n            ) {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // default\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key ||\n                  NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n\n         default:\n            // Normal field and _PK\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) => NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n      }\n\n      return nextQLOps;\n   }\n}\n\nABQLRowPluckCore.key = \"row_pluck\";\nABQLRowPluckCore.label = \"Read the value from the field\";\nABQLRowPluckCore.NextQLOps = []; // Static NextQLOps\n\nmodule.exports = ABQLRowPluckCore;\n","/*\n/*\n * ABQLRowSaveCore\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSave = require(\"../../platform/ql/ABQLSetSave.js\");\n\nclass ABQLRowSaveCore extends ABQLSetSave {}\n\nABQLRowSaveCore.key = \"row_save\";\nABQLRowSaveCore.label = \"Save the value as\";\nABQLRowSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLRowSaveCore;\n","/*\n * ABQLRowUpdateCore\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLRow = require(\"./ABQLRow.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectValues\",\n      name: \"values\",\n   },\n];\n\nclass ABQLRowUpdateCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLRowUpdateCore.key = \"update\";\nABQLRowUpdateCore.label = \"Update this record\";\nABQLRowUpdateCore.NextQLOps = [];\n// NOTE: .NextQLOps => see the #Hack in the constructor\n\nmodule.exports = ABQLRowUpdateCore;\n","/*\n * ABQLSet\n *\n * Here we define the group of operations that can be performed on a SET of data.\n * A SET is an array of objects/row data.\n *\n */\n\nmodule.exports = [\n   require(\"../../platform/ql/ABQLSetFirst.js\"),\n   require(\"../../platform/ql/ABQLSetPluck.js\"),\n   require(\"../../platform/ql/ABQLSetSave.js\"),\n];\n","/*\n/*\n * ABQLSetFirstCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst ABQLRow = require(\"./ABQLRow.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLSetFirst task is complete.  In this case the {ABQLRow} operations come\n// next.  {ABQLRow} operations work on a single row of data.\n\nclass ABQLSetFirstCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, [], prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLSetFirstCore.key = \"first\";\nABQLSetFirstCore.label = \"Select the first record\";\nABQLSetFirstCore.NextQLOps = ABQLRow;\n\nmodule.exports = ABQLSetFirstCore;\n","/*\n/*\n * ABQLSetPluckCore\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field to then make an array of values that only contain that field.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectFields\",\n      name: \"fieldID\",\n   },\n];\n\nclass ABQLSetPluckCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      // we need to gather our .field and .objectOut before we\n      // allow our base class to continue forward:\n\n      this.fieldID = attributes.fieldID;\n      this.field = this.object?.fieldByID(this.fieldID);\n\n      //// TODO: figure out how to dynamically update the next row of options\n      //// based upon the current choice of field.\n      // // based upon the type of field, we now configure what next steps\n      // // are available.\n      // if (this.field) {\n      //    // if connected, then we can stay with same .NextQLOps\n      //    // so we can just leave what we did above.\n\n      //    // if a discreet value, then we need to remove SetPluck\n      //    if (!this.field.isConnection) {\n      //       this.constructor.NextQLOps = [\n      //          ...this.prevOP.constructor.NextQLOps,\n      //       ].filter((o) => o.key != this.constructor.key);\n      //    }\n      // }\n\n      if (attributes.objectOutID)\n         this.objectOut = this.objectLookup(attributes.objectOutID);\n\n      super.fromAttributes(attributes);\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.fieldID) {\n         obj.fieldID = this.fieldID;\n\n         if (this.objectOut) obj.objectOutID = this.objectOut.id;\n      } else {\n         obj.fieldID = this.params.field || null;\n\n         const field = this.object.fieldByID(obj.fieldID);\n\n         if (field?.isConnection) obj.objectOutID = field.datasourceLink.id;\n      }\n\n      return obj;\n   }\n}\n\nABQLSetPluckCore.key = \"set_pluck\";\nABQLSetPluckCore.label = \"Read the value from the field\";\nABQLSetPluckCore.NextQLOps = [];\n\nmodule.exports = ABQLSetPluckCore;\n","/*\n/*\n * ABQLSetSaveCore\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"taskParam\",\n      name: \"task_param\",\n   },\n];\n\nclass ABQLSetSaveCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // TODO: register with the task that we can provide data.\n      if (this.taskParam) {\n         task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      super.fromAttributes(attributes);\n\n      this.taskParam = attributes.taskParam || this.params.task_param;\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      obj.taskParam = this.taskParam || this.params.task_param;\n\n      return obj;\n   }\n\n   processDataField(id, label) {\n      // we have to report back on:\n      // key:  id.taskParam\n      // label: label->taskParam\n      // object: ABObject\n      // field: ABField\n      // set : {bool}\n\n      let field = null;\n      // {ABField}\n      // if the value being stored is NOT a connectObject, then it is\n      // a particular field in the previous object.\n\n      // if we are saving a specific field of an Object, pass that\n      // ABField along:\n      if (this.prevOP?.field?.key !== \"connectObject\")\n         field = this?.prevOP?.field;\n\n      return {\n         key: `${id}.${this.taskParam || this.params.task_param}`,\n         label: `${label}->${this.taskParam || this.params.task_param}`,\n         field: field,\n         object: this.object,\n         set: true,\n      };\n   }\n}\n\nABQLSetSaveCore.key = \"set_save\";\nABQLSetSaveCore.label = \"Save the value as\";\nABQLSetSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLSetSaveCore;\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCSVExporterDefaults = {\n   key: \"csvExporter\", // unique key identifier for this ABViewForm\n   icon: \"download\", // icon reference: (without 'fa-' )\n   labelKey: \"CSV Exporter\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewCSVExporterPropertyComponentDefaults = {\n   dataviewID: null,\n   where: null,\n   buttonLabel: \"Export CSV\",\n   filename: \"exportCSV\",\n   hasHeader: true,\n   width: 150,\n};\n\nmodule.exports = class ABViewCSVExporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVExporterDefaults\n      );\n   }\n\n   static common() {\n      return ABViewCSVExporterDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCSVExporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert to boolean\n      if (typeof values.settings.hasHeader == \"string\")\n         this.settings.hasHeader = JSON.parse(values.settings.hasHeader);\n\n      if (this.settings.hasHeader == null)\n         this.settings.hasHeader =\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader;\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         values.settings.width ||\n            ABViewCSVExporterPropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n\nconst ABViewCSVImporterDefaults = {\n   key: \"csvImporter\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"upload\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"CSV Importer\",\n   // {string}\n   // the multilingual label key for the class label\n   // NOTE: will be used as L(labelKey)\n};\n\nconst ABViewCSVImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   availableFieldIds: [],\n   //{array}\n   // A list of ABField.ids that are allowed to be imported using this widget.\n\n   buttonLabel: \"Upload CSV\",\n   // {string}\n   // The Label(key) to display on the initial button\n\n   width: 0,\n   // {integer}\n   // Width of the Popup.\n\n   recordRules: [],\n   // {array}  [ {RecordRule}, ... ]\n   // A list of ABViewRuleListFormRecordRules that should be performed upon\n   // each row of data imported.\n   // The Array should look like:\n   // [{\n   //    action: {string},\n   //    when: [\n   //       {\n   //          fieldId: {UUID},\n   //          comparer: {string},\n   //          value: {string}\n   //       }\n   //    ],\n   //    values: [\n   //       {\n   //          fieldId: {UUID},\n   //          value: {object}\n   //       }\n   //    ]\n   // }]\n};\n\nmodule.exports = class ABViewCSVImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVImporterDefaults\n      );\n   }\n\n   /**\n    * @method common()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * @return {json}\n    */\n   static common() {\n      return ABViewCSVImporterDefaults;\n   }\n\n   /**\n    * @method defaultValues()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * Component that is displayed on the UI.\n    * @return {json}\n    */\n   static defaultValues() {\n      return ABViewCSVImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewCSVImporterPropertyComponentDefaults.width\n      );\n   }\n\n   get RecordRule() {\n      let object = this.datacollection?.datasource;\n      if (!object) return;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      rowDatas.forEach((row) => {\n         this.RecordRule?.processPre({ data: row.data || row, form: this });\n      });\n   }\n\n   doRecordRules(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      if (!this.RecordRule) return Promise.resolve();\n\n      let tasks = [];\n\n      rowDatas.forEach((row) => {\n         tasks.push(\n            this.RecordRule.process({ data: row.data || row, form: this })\n         );\n      });\n\n      return Promise.all(tasks);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCarouselPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n\n   width: 460,\n   height: 275,\n   showLabel: true,\n   hideItem: false,\n   hideButton: false,\n   navigationType: \"corner\", // \"corner\" || \"side\"\n   filterByCursor: false,\n\n   detailsPage: null, // uuid\n   detailsTab: null, // uuid\n   editPage: null, // uuid\n   editTab: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"carousel\", // {string} unique key for this view\n   icon: \"clone\", // {string} fa-[icon] reference for this view\n   labelKey: \"Carousel\", // {string} the multilingual label key for the class label\n};\n\nfunction parseIntOrDefault(_this, key) {\n   if (typeof _this.settings[key] != \"undefined\") {\n      _this.settings[key] = parseInt(_this.settings[key]);\n   } else {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nfunction parseOrDefault(_this, key) {\n   try {\n      _this.settings[key] = JSON.parse(_this.settings[key]);\n   } catch (e) {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nmodule.exports = class ABViewCarouselCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCarouselPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      parseIntOrDefault(this, \"width\");\n      parseIntOrDefault(this, \"height\");\n\n      // json\n      parseOrDefault(this, \"showLabel\");\n      parseOrDefault(this, \"hideItem\");\n      parseOrDefault(this, \"hideButton\");\n\n      this.settings.navigationType =\n         this.settings.navigationType ||\n         ABViewCarouselPropertyComponentDefaults.navigationType;\n\n      parseOrDefault(this, \"filterByCursor\");\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   get imageField() {\n      let dc = this.datacollection;\n      if (!dc) return null;\n\n      let obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.field);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartAreaPropertyComponentDefaults = {\n   areaType: \"area\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"area\", // {string} unique key for this view\n   icon: \"area-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Area\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartAreaCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartAreaPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.areaType =\n         this.settings.areaType ||\n         ABViewChartAreaPropertyComponentDefaults.areaType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartAreaPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartAreaPropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartAreaPropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartAreaPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartAreaPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartAreaPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"areaLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartBarPropertyComponentDefaults = {\n   barType: \"bar\",\n   barPreset: \"column\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"bar\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Bar\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartBarCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartBarPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.barType =\n         this.settings.barType ||\n         ABViewChartBarPropertyComponentDefaults.barType;\n\n      this.settings.barPreset =\n         this.settings.barPreset ||\n         ABViewChartBarPropertyComponentDefaults.barPreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartBarPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartBarPropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartBarPropertyComponentDefaults.height\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartBarPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartBarPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartBarPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"barLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewChartPropertyComponentDefaults = {\n   dataviewID: \"\",\n   columnValue: \"\",\n   columnLabel: \"\",\n   columnValue2: \"\",\n   isPercentage: 1,\n   showLabel: 1,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   multipleSeries: 0,\n};\n\nconst ABViewChartDefaults = {\n   key: \"chart\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Chart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewChartDefaults);\n   }\n\n   static common() {\n      return ABViewChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewChartPropertyComponentDefaults.dataviewID;\n\n      this.settings.columnValue =\n         this.settings.columnValue ??\n         ABViewChartPropertyComponentDefaults.columnValue;\n\n      this.settings.columnLabel =\n         this.settings.columnLabel ??\n         ABViewChartPropertyComponentDefaults.columnLabel;\n\n      this.settings.columnValue2 =\n         this.settings.columnValue2 ??\n         ABViewChartPropertyComponentDefaults.columnValue2;\n\n      this.settings.isPercentage = parseInt(\n         this.settings.isPercentage ??\n            ABViewChartPropertyComponentDefaults.isPercentage\n      );\n\n      this.settings.showLabel = parseInt(\n         this.settings.showLabel ??\n            ABViewChartPropertyComponentDefaults.showLabel\n      );\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewChartPropertyComponentDefaults.labelPosition;\n\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ??\n            ABViewChartPropertyComponentDefaults.labelWidth\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPropertyComponentDefaults.height\n      );\n\n      this.settings.multipleSeries = parseInt(\n         this.settings.multipleSeries ??\n            ABViewChartPropertyComponentDefaults.multipleSeries\n      );\n\n      this.translate(this, this, [\"chartLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      const viewsToAllow = [\"label\", \"pie\", \"bar\", \"line\", \"area\"];\n      return this.application.viewAll((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   labelField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnLabel);\n   }\n\n   valueField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue);\n   }\n\n   valueField2() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue2);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartLinePropertyComponentDefaults = {\n   lineType: \"line\",\n   linePreset: \"plot\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"line\", // {string} unique key for this view\n   icon: \"line-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Line\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartLineCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartLinePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.lineType =\n         this.settings.lineType ||\n         ABViewChartLinePropertyComponentDefaults.lineType;\n\n      this.settings.linePreset =\n         this.settings.linePreset ||\n         ABViewChartLinePropertyComponentDefaults.linePreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartLinePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartLinePropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartLinePropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartLinePropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartLinePropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartLinePropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"lineLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartPiePropertyComponentDefaults = {\n   pieType: \"pie\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   innerFontSize: 12,\n   labelFontSize: 12,\n};\n\nconst ABViewDefaults = {\n   key: \"pie\", // {string} unique key for this view\n   icon: \"pie-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pie\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartPieCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPiePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.pieType =\n         this.settings.pieType ||\n         ABViewChartPiePropertyComponentDefaults.pieType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartPiePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartPiePropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPiePropertyComponentDefaults.height\n      );\n\n      this.settings.innerFontSize = parseInt(\n         this.settings.innerFontSize ??\n            ABViewChartPiePropertyComponentDefaults.innerFontSize\n      );\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartPiePropertyComponentDefaults.labelFontSize\n      );\n\n      this.translate(this, this, [\"pieLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCommentPropertyComponentDefaults = {\n   dataviewID: null,\n   columnUser: null,\n   columnComment: null,\n   columnDate: null,\n   height: 300,\n   label: \"\", // label is required and you can add more if the component needs them\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n};\n\nconst ABViewDefaults = {\n   key: \"comment\", // {string} unique key for this view\n   icon: \"comments\", // {string} fa-[icon] reference for this view\n   labelKey: \"Comment\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCommentCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCommentPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      // this.settings.format = parseInt(this.settings.format);\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.height = parseInt(this.settings.height || 0);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   getCurrentUserId() {\n      const userObject = this.getUsers();\n      const currentUser = this.AB.Account.username();\n      //Anonymous User = 0\n\n      if (!userObject) return;\n\n      return userObject.findIndex((e) => e.value === currentUser) + 1;\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((e) => {\n         return {\n            id: e.username,\n            value: e.username,\n            image: e.image_id,\n         };\n      });\n   }\n\n   getUserField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnUser);\n   }\n\n   getCommentField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnComment);\n   }\n\n   getDateField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnDate);\n   }\n\n   getUserData() {\n      let UserImageField = this.AB.objectUser().fieldByID(\n         \"6383ce19-b344-44ee-87e6-decced7361f8\"\n      );\n\n      var userObject = this.getUsers();\n      var userList = [];\n\n      if (!userObject) return;\n\n      userObject.forEach((item, index) => {\n         var imageURL = \"\";\n         if (item.image) {\n            imageURL = UserImageField.urlImage(item.image);\n         }\n         var user = { id: index + 1, value: item.value, image: imageURL };\n         userList.push(user);\n      });\n      return userList;\n   }\n\n   model() {\n      let dv = this.datacollection;\n      if (!dv) return null; // TODO: refactor in v2\n\n      // get ABModel\n      let model = dv.model; // already notified\n      if (!model) return null;\n\n      return model;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewPropertyDefaults = {\n   dataviewID: null,\n   filterConditions: {},\n};\n\nconst ABViewDefaults = {\n   key: \"conditionalcontainer\", // unique key identifier for this ABView\n   icon: \"shield\", // icon reference: (without 'fa-' )\n   labelKey: \"Conditional Container\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConditionalContainerCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      const L = (...params) => this.AB.Multilingual.label(...params);\n\n      // the conditional container always has 'If' and 'Else' panels\n      if (this.views((v) => v instanceof ABViewContainer).length < 2) {\n         this._views = [];\n\n         // 'If' panel\n         const ifPanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"If\"),\n               name: \"If\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(ifPanel);\n\n         // 'Else' panel\n         const elsePanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"Else\"),\n               name: \"Else\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(elsePanel);\n      }\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * For a Conditional Container, we don't allow any other items to be placed on it.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewConnectDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"connect-data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connected Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConnectDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewConnectDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","/*\n * ABViewContainerCore\n *\n * An ABViewContainerCore defines a UI display component.\n *\n * A container might have multiple columns of display info.\n *\n */\n\nconst ABView = require(\"../../platform/views/ABView\");\n\n// function L(key, altText) {\n// \treturn AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"viewcontainer\", // {string} unique key for this view\n   icon: \"braille\", // {string} fa-[icon] reference for this view\n   labelKey: \"Container\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columns: 1,\n   gravity: 1,\n   movable: true,\n   removable: true,\n};\n\nmodule.exports = class ABViewContainerCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columns = parseInt(\n         this.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      if (typeof this.settings.gravity != \"undefined\") {\n         this.settings.gravity.map(function (gravity) {\n            return parseInt(gravity);\n         });\n      }\n\n      if (this.settings.removable != null) {\n         this.settings.removable = JSON.parse(this.settings.removable); // convert to boolean\n      } else {\n         this.settings.removable = ABPropertyComponentDefaults.removable;\n      }\n\n      if (this.settings.movable != null) {\n         this.settings.movable = JSON.parse(this.settings.movable); // convert to boolean\n      } else {\n         this.settings.movable = ABPropertyComponentDefaults.movable;\n      }\n   }\n\n   viewsSortByPosition() {\n      // Sort views from y, x positions\n      return this.views().sort((a, b) => {\n         if (a.position.y == b.position.y) return a.position.x - b.position.x;\n         else return a.position.y - b.position.y;\n      });\n   }\n\n   // saveReorder() {\n   //    return this.application.viewReorder(this);\n   // }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABViewDefaults = {\n   key: \"view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // // NOTE: ensure we have a uuid() set:\n      // if (!this.id) {\n      //    this.id = this.application.uuid();\n      // }\n\n      // this.application.unTranslate(this, this, [\"label\"]);\n\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || \"view\",\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || \"view\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label = this.parent.label + \".\" + this.defaults.key;\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      // convert from \"0\" => 0\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      var accessibleRoles = Object.keys(this.accessLevels) || [];\n      (roles || []).forEach((r) => {\n         if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n            foundRole = true;\n         }\n      });\n\n      return foundRole;\n   }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   getUserAccess() {\n      // by default everyone has no access\n      var accessLevel = 0;\n\n      if (this.application.isAccessManaged) {\n         // check to see if the current users is the access manager\n         var isAccessManager = false;\n         // first check if manager is defined by their role\n         if (parseInt(this.application.accessManagers.useRole) == 1) {\n            // if so check if any of the user's role match the managers\n            this.AB.Account.roles().forEach((role) => {\n               if (\n                  this.application.accessManagers.role.indexOf(\n                     role.id || role.uuid\n                  ) > -1\n               ) {\n                  // if so set the access level to full access\n                  isAccessManager = true;\n                  accessLevel = 2;\n               }\n            });\n         }\n         // if the user isn't already set as the manager and the manager is defined by their account\n         if (\n            !isAccessManager &&\n            parseInt(this.application.accessManagers.useAccount) == 1\n         ) {\n            // check if the user's account matches the managers\n            if (\n               this.application.accessManagers.account.indexOf(\n                  this.AB.Account.uuid() + \"\"\n               ) > -1\n            ) {\n               // if so set the access level to full access\n               isAccessManager = true;\n               accessLevel = 2;\n            }\n         }\n\n         // if the user is not the manager check if the page has access levels defined for roles\n         if (\n            this.accessLevels &&\n            Object.keys(this.accessLevels).length > 0 &&\n            !isAccessManager\n         ) {\n            // check to see if the user's roles matches one of the roles defined\n            this.AB.Account.roles().forEach((role) => {\n               var currentRole = this.accessLevels[role.id || role.uuid];\n               if (currentRole && parseInt(currentRole) > accessLevel)\n                  // if the access level is higher than a previous role set to the new level\n                  accessLevel = parseInt(currentRole);\n            });\n         }\n      } else {\n         accessLevel = 2;\n      }\n\n      return accessLevel;\n   }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlView() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   /**\n    * @method urlView\n    * return a string pointer to this object's views.\n    * @return {string}\n    */\n   urlView() {\n      return this.urlPointer() + \"/_views/\";\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\"form\", \"grid\", \"line\", \"area\", \"bar\", \"gantt\", \"kanban\"].indexOf(\n               this.key\n            ) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\"button\", \"label\", \"page\", \"tab\", \"viewcontainer\"].indexOf(\n                  this.key\n               ) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `View[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   updateAccessLevels(roleId, accessLevel) {\n      if (parseInt(accessLevel) == 0) {\n         if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n      } else {\n         this.accessLevels[roleId] = accessLevel;\n      }\n\n      return this.save(false, false);\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         result = result.concat(this._views.filter(filter));\n\n         this._views.forEach((v) => {\n            var subViews = v.views(filter, deep);\n            if (subViews && subViews.length > 0) {\n               result = result.concat(subViews);\n            }\n         });\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewNew()\n    *\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewDestroy(view) {\n      console.error(\"DEPRECIATED: where is this called?\");\n      return this.viewRemove(view);\n   }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid,\n   viewType: \"advanced\",\n   showFilter: 1,\n   showSort: 1,\n};\n\nconst ABViewDefaults = {\n   key: \"data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetail = require(\"../../platform/views/ABViewDetail\");\n\nconst ABViewDataviewPropertyComponentDefaults = {\n   xCount: 1, // {int} the number of columns per row (need at least one)\n   detailsPage: \"\",\n   detailsTab: \"\",\n   editPage: \"\",\n   editTab: \"\",\n};\n\nconst ABViewDataviewDefaults = {\n   key: \"dataview\", // {string} unique key for this view\n   icon: \"th\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data view\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataviewCore extends ABViewDetail {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewDataviewDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDataviewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataviewPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.xCount = parseInt(\n         this.settings.xCount || ABViewDataviewPropertyComponentDefaults.xCount\n      );\n      this.settings.detailsPage =\n         this.settings.detailsPage ||\n         ABViewDataviewPropertyComponentDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ||\n         ABViewDataviewPropertyComponentDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ||\n         ABViewDataviewPropertyComponentDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ||\n         ABViewDataviewPropertyComponentDefaults.editTab;\n   }\n\n   parentDetailComponent() {\n      let dataview = null;\n\n      let curr = this;\n      while (curr.key != \"dataview\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"dataview\") {\n         dataview = curr;\n      }\n\n      return dataview;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCheckboxPropertyComponentDefaults = {};\n\nconst ABViewDetailCheckboxDefaults = {\n   key: \"detailcheckbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCheckboxCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCheckboxPropertyComponentDefaults;\n   }\n};\n","// const ABViewDetailSelectivity = require(\"../../platform/views/ABViewDetailSelectivity\");\nconst ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n};\n\nconst ABViewDefaults = {\n   key: \"detailconnect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailConnectCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewDetailDefaults = {\n   key: \"detail\", // {string} unique key for this view\n   icon: \"file-text-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Detail\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewDetailPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 0,\n};\n\nmodule.exports = class ABViewDetailCore extends ABViewContainer {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDetailDefaults);\n   }\n\n   static common() {\n      return ABViewDetailDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewDetailPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewDetailPropertyComponentDefaults.showLabel\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ||\n            ABViewDetailPropertyComponentDefaults.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewDetailPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      let viewsToAllow = [\"label\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   addFieldToDetail(field, yPosition) {\n      if (field == null) return;\n\n      let newView = field.detailComponent().newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings ?? {};\n      newView.settings.fieldId = field.id;\n      newView.settings.labelWidth =\n         this.settings.labelWidth ||\n         ABViewDetailPropertyComponentDefaults.labelWidth;\n\n      // keep alias to support Query that contains alias name\n      // [alias].[columnName]\n      newView.settings.alias = field.alias;\n\n      // TODO : Default settings\n\n      newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCustomPropertyComponentDefaults = {};\n\nconst ABViewDetailCustomDefaults = {\n   key: \"detailcustom\", // {string} unique key for this view\n   icon: \"dot-circle-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCustomCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCustomPropertyComponentDefaults;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailImagePropertyComponentDefaults = {\n   height: 80,\n   width: 120,\n};\n\nconst ABViewDetailImageDefaults = {\n   key: \"detailimage\", // {string} unique key for this view\n   icon: \"image\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailImageCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailImageDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailImageDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailImagePropertyComponentDefaults.height\n      );\n      this.settings.width = parseInt(\n         this.settings.width ?? ABViewDetailImagePropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nmodule.exports = class ABViewDetailItemCore extends ABViewWidget {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   detailComponent() {\n      let detailView = null;\n\n      let curr = this;\n      while (\n         !curr.isRoot() &&\n         curr.parent &&\n         curr.key != \"detail\" &&\n         curr.key != \"dataview\"\n      ) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\" || curr.key == \"dataview\") {\n         detailView = curr;\n      }\n\n      return detailView;\n   }\n\n   field() {\n      let detailComponent = this.detailComponent();\n      if (detailComponent == null) return null;\n\n      let datacollection = detailComponent.datacollection;\n      if (datacollection == null) return null;\n\n      let object = datacollection.datasource;\n      if (object == null) return null;\n\n      let field = object.fields((v) => v.id == this.settings.fieldId)[0];\n\n      // set .alias to support queries that contains alias name\n      // [aliasName].[columnName]\n      if (field && this.settings.alias) {\n         field.alias = this.settings.alias;\n      }\n\n      return field;\n   }\n\n   getCurrentData() {\n      let detailCom = this.detailComponent();\n      if (!detailCom) return null;\n\n      let dv = detailCom.datacollection;\n      if (!dv) return null;\n\n      let field = this.field();\n      if (!field) return null;\n\n      let currData = dv.getCursor();\n      if (currData) return currData[field.columnName];\n      else return null;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailTextPropertyComponentDefaults = {\n   height: 0,\n};\n\nconst ABViewDetailTextDefaults = {\n   key: \"detailtext\", // {string} unique key for this view\n   icon: \"etsy\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.text\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTextDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTextDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailTextPropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {};\n\nconst ABViewDetailTreeDefaults = {\n   key: \"detailtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTreeDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = {\n   buttonlabel: \"Download DOCX\",\n   dataviewID: null,\n   width: 0,\n   filename: \"\", // uuid\n   filelabel: \"output.docx\",\n   language: \"en\", // en\n   toolbarBackground: \"ab-background-default\",\n   buttonPosition: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"docxBuilder\", // {string} unique key for this view\n   icon: \"file-word-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"DOCX Builder\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDocxBuilderCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDocxBuilderPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"filelabel\", \"buttonlabel\"]);\n\n      let obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewDocxBuilderPropertyComponentDefaults.width\n      );\n\n      this.translate(this, this, [\"filelabel\", \"buttonlabel\"]);\n   }\n\n   uploadUrl() {\n      // TODO: Convert this to use ABFactory.urlFileUpload() or a ABFieldFile\n      // to get the URL:\n\n      const object = this.datacollection.datasource;\n\n      // NOTE: file-upload API needs to have the id of ANY field.\n      const field = object ? object.fields()[0] : null;\n\n      return `/file/upload/${object?.id}/${field?.id}/1`;\n   }\n\n   downloadUrl() {\n      return `/file/${this.settings.filename}`;\n   }\n\n   get languageCode() {\n      return (\n         this.settings.language ||\n         ABViewDocxBuilderPropertyComponentDefaults.language\n      );\n   }\n\n   get datacollections() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) return [];\n\n      let dvList = dataviewID.split(\",\") || [];\n\n      return this.AB.datacollections((dv) => dvList.indexOf(dv.id) > -1) || [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"ab.components.button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormButtonCore extends ABView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      this.settings.includeSave = JSON.parse(\n         this.settings.includeSave ||\n            ABViewFormButtonPropertyComponentDefaults.includeSave\n      );\n      this.settings.includeCancel = JSON.parse(\n         this.settings.includeCancel ||\n            ABViewFormButtonPropertyComponentDefaults.includeCancel\n      );\n      this.settings.includeReset = JSON.parse(\n         this.settings.includeReset ||\n            ABViewFormButtonPropertyComponentDefaults.includeReset\n      );\n\n      this.settings.isDefault = JSON.parse(\n         this.settings.isDefault ||\n            ABViewFormButtonPropertyComponentDefaults.isDefault\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABViewFormCheckboxDefaults = {\n   key: \"checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCheckboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCheckboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   // objectWorkspace: {\n   //    filterConditions: {\n   //       // array of filters to apply to the data table\n   //       glue: \"and\",\n   //       rules: [],\n   //    },\n   // },\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABViewFormConnectDefaults = {\n   key: \"connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormConnectCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"form\", // unique key identifier for this ABViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABViewFormCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"label\", \"layout\", \"button\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    *\n    * return an array of all the ABViewFormField children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViewFormField that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) => comp instanceof ABViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      var fieldComponent = field.formComponent();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCustom extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABViewFormDatepickerDefaults = {\n   key: \"datepicker\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormDatepickerCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABViewFormComponentCore extends ABView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormJsonPropertyComponentDefaults = {\n   type: \"string\", // 'string', 'systemObject' or 'filter'\n};\n\nconst ABViewFormJsonDefaults = {\n   key: \"json\", // {string} unique key for this view\n   icon: \"brackets-curly\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.json\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormJsonCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormJsonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormJsonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormJsonPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABViewFormNumberDefaults = {\n   key: \"numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormNumberCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABViewFormReadonlyDefaults = {\n   key: \"fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormReadonlyPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"multicombo\", // 'richselect' or 'radio'\n};\n\nconst ABSelectMultipleDefaults = {\n   key: \"selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectMultipleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectMultiplePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABSelectSingleDefaults = {\n   key: \"selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectSingleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectSinglePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTextboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormTreePropertyComponentDefaults = {};\n\nconst ABTreeDefaults = {\n   key: \"formtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTreeCore extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABTreeDefaults);\n   }\n\n   static common() {\n      return ABTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTreePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGanttPropertyComponentDefaults = {\n   dataviewID: \"\",\n   // {string}\n   // {ABDatacollection.id} of the datacollection that contains the data for\n   // the Gantt chart.\n\n   titleFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n\n   startDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the start date\n\n   endDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the end date\n\n   durationFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that contains the duration\n\n   progressFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that marks the progress\n\n   notesFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n};\n\nconst ABViewDefaults = {\n   key: \"gantt\", // {string} unique key for this view\n   icon: \"tasks\", // {string} fa-[icon] reference for this view\n   labelKey: \"Gantt\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewGanttCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGanttPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      Object.keys(ABViewGanttPropertyComponentDefaults).forEach((k) => {\n         this.settings[k] =\n            this.settings[k] || ABViewGanttPropertyComponentDefaults[k];\n      });\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGridPropertyComponentDefaults = {\n   label: \"\",\n   // {string}\n   // label is required and you can add more if the component needs them\n\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n   dataviewID: \"\",\n   // {uuid}\n   // uuid of ABDataCollection that drives the data for our Grid\n\n   padding: 17,\n   // {int}\n   // the default padding surrounding the component\n\n   showToolbar: 1,\n   // {bool}\n   // do we show our toolbar?\n\n   isEditable: 0,\n   // {bool}\n   // do we allow editing in the grid?\n\n   massUpdate: 0,\n   // {bool}\n   // do we allow the Mass Update capability? (row checkboxes and the\n   // MassUpdate popup)\n\n   allowDelete: 0,\n   // {bool}\n   // do we allow deleting multiple rows at a time? Mass Delete.\n\n   // isFilterable:0,\n\n   isSortable: 1,\n   // {bool}\n   // do we allow the sort options.\n\n   isExportable: 0,\n   // {bool}\n   // do we enable the webix export from grid capabilities?\n\n   // linkedObject:'',\n   // linkedField:'',\n   // linkedPage:'',\n   // linkedPageView:'',\n   // linkedEditPage:'',\n   // linkedEditPageForm:'',\n\n   detailsPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the details component.\n\n   detailsTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the details component.\n   // NOTE: if your details is embedded on a TAB, we need both the\n   // .detailsPage & .detailsTab to successfully show the item.\n\n   editPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the edit component.\n\n   editTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the edit component.\n   // NOTE: if your editor is embedded on a TAB, we need both the\n   // .editPage & .editTab to successfully show the form.\n\n   trackView: 0,\n   // {bool}\n   // Do we offer the ability to track changes to this object/row?\n\n   frozenColumnID: \"\",\n   // {ABField.id}\n   // id of column you want to stop freezing the left hand side at.\n\n   hiddenFields: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add hidden:true to\n\n   summaryColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the SUM footer to\n\n   countColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the Count footer to\n\n   // TODO: get rid of objectWorkspace!\n   objectWorkspace: {\n      // sortFields:[], // array of columns with their sort configurations\n      // filterConditions:[], // array of filters to apply to the data table\n      frozenColumnID: \"\", // id of column you want to stop freezing\n      hiddenFields: [], // array of [ids] to add hidden:true to\n      summaryColumns: [],\n      countColumns: [],\n   },\n   gridFilter: {\n      filterOption: 1,\n      userFilterPosition: \"toolbar\",\n      isGlobalToolbar: 1,\n   },\n   // summaryFields: [], // array of [field ids] to add the summary column in footer\n   // countFields: [], // array of [field ids] to add the summary column in footer\n\n   height: 0,\n   // {int}\n   // The Height of our Grid.\n   // See ../views/ABViewDataview.js\n\n   hideHeader: 0,\n   labelAsField: 0,\n   hideButtons: 0,\n   groupBy: \"\", // id of field\n\n   // TODO: add to ABDesigner.interface design:\n   columnConfig: [],\n   // {array} [ {columnHeader}, {columnHeader} ... ]\n   // An array of column headers for the grid to display. These should\n   // be generated at Design time, and can allow the designer to ORDER the\n   // columns, assign column widths, fillspace, etc...\n   //    {columnHeader}\n   //    The minimum amount of information a Grid needs for it's customization\n   //    .id {string} ABField.columnName\n   //    .fieldId {string} ABField.id\n   //    .width {int}\n   //    .fillspace {bool}\n   //    .minwidth\n   //\n   //    When displaying column headers, we will ask the\n   //    CurrentObject.columnHeaders(), and then modify them with our settings\n   //    here.\n\n   saveLocal: 1,\n   // {bool}\n   // Allow saving of local changes to our grid display. This will enable\n   // a user to modify the Grid display locally.\n};\n\nconst ABViewDefaults = {\n   key: \"grid\", // {string} unique key for this view\n   icon: \"table\", // {string} fa-[icon] reference for this view\n   labelKey: \"Grid\", // {string} the multilingual label key for the class label\n};\n\n/**\n * @function settingsDefault()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that are NOT TRUTHY ... so not for numeric\n * 1 or 0.\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefault(base, field) {\n   if (typeof base[field] == \"undefined\") {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n      return;\n   }\n   base[field] = base[field] || ABViewGridPropertyComponentDefaults[field];\n}\n\n/**\n * @function settingsDefaultJSON()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that ARE TRUTHY ... so for numeric 1 or 0\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefaultJSON(base, field) {\n   try {\n      base[field] = JSON.parse(base[field]);\n   } catch (e) {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n   }\n}\n\nmodule.exports = class ABViewGridCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGridPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      settingsDefault(this.settings, \"dataviewID\");\n\n      // Convert to boolean\n      // these values are sometimes 0 (number) at this point so the JSON.parse\n      // with the || (or) statement was always falling to the default so I am\n      // trying to parse the value...if it fails we use the default value\n      settingsDefaultJSON(this.settings, \"padding\");\n      settingsDefaultJSON(this.settings, \"showToolbar\");\n      settingsDefaultJSON(this.settings, \"isEditable\");\n      settingsDefaultJSON(this.settings, \"massUpdate\");\n      settingsDefaultJSON(this.settings, \"allowDelete\");\n      // this.settings.isFilterable = JSON.parse(this.settings.isFilterable || ABViewGridPropertyComponentDefaults.isFilterable);\n      settingsDefaultJSON(this.settings, \"isSortable\");\n      settingsDefaultJSON(this.settings, \"isExportable\");\n      settingsDefaultJSON(this.settings, \"hideHeader\");\n      settingsDefaultJSON(this.settings, \"labelAsField\");\n      settingsDefaultJSON(this.settings, \"hideButtons\");\n      settingsDefaultJSON(this.settings, \"columnConfig\");\n      settingsDefaultJSON(this.settings, \"saveLocal\");\n\n      this.settings.gridFilter =\n         this.settings.gridFilter ||\n         ABViewGridPropertyComponentDefaults.gridFilter;\n\n      try {\n         this.settings.gridFilter.filterOption = JSON.parse(\n            this.settings.gridFilter.filterOption\n         );\n      } catch (e) {\n         this.settings.gridFilter.filterOption =\n            ABViewGridPropertyComponentDefaults.gridFilter.filterOption;\n      }\n\n      try {\n         this.settings.gridFilter.isGlobalToolbar = JSON.parse(\n            this.settings.gridFilter.isGlobalToolbar\n         );\n      } catch (e) {\n         this.settings.gridFilter.isGlobalToolbar =\n            ABViewGridPropertyComponentDefaults.gridFilter.isGlobalToolbar;\n      }\n\n      // this.settings.linkedObject = this.settings.linkedObject || ABViewGridPropertyComponentDefaults.linkedObject;\n      // this.settings.linkedField = this.settings.linkedField || ABViewGridPropertyComponentDefaults.linkedField;\n      // this.settings.linkedPage = this.settings.linkedPage || ABViewGridPropertyComponentDefaults.linkedPage;\n      // this.settings.linkedPageView = this.settings.linkedPageView || ABViewGridPropertyComponentDefaults.linkedPageView;\n      // this.settings.linkedEditPage = this.settings.linkedEditPage || ABViewGridPropertyComponentDefaults.linkedEditPage;\n      // this.settings.linkedEditPageForm = this.settings.linkedEditPageForm || ABViewGridPropertyComponentDefaults.linkedEditPageForm;\n\n      settingsDefault(this.settings, \"detailsPage\");\n      settingsDefault(this.settings, \"editPage\");\n      settingsDefault(this.settings, \"detailsTab\");\n      settingsDefault(this.settings, \"editTab\");\n      settingsDefaultJSON(this.settings, \"trackView\");\n\n      // TODO: remove objectworkspace!\n      // this.settings.objectWorkspace =\n      //    this.settings.objectWorkspace ||\n      //    ABViewGridPropertyComponentDefaults.objectWorkspace;\n\n      // if (typeof this.settings.objectWorkspace != \"undefined\") {\n      //    if (typeof this.settings.objectWorkspace.sortFields == \"undefined\")\n      //       this.settings.objectWorkspace.sortFields = [];\n      //    if (\n      //       typeof this.settings.objectWorkspace.filterConditions == \"undefined\"\n      //    )\n      //       this.settings.objectWorkspace.filterConditions = [];\n      //    if (typeof this.settings.objectWorkspace.frozenColumnID == \"undefined\")\n      //       this.settings.objectWorkspace.frozenColumnID = \"\";\n      //    if (typeof this.settings.objectWorkspace.hiddenFields == \"undefined\")\n      //       this.settings.objectWorkspace.hiddenFields = [];\n      //    if (typeof this.settings.objectWorkspace.summaryColumns == \"undefined\")\n      //       this.settings.objectWorkspace.summaryColumns = [];\n      //    if (typeof this.settings.objectWorkspace.countColumns == \"undefined\")\n      //       this.settings.objectWorkspace.countColumns = [];\n      // }\n\n      var owFields = [\n         \"sortFields\",\n         \"filterConditions\",\n         \"frozenColumnID\",\n         \"hiddenFields\",\n         \"summaryColumns\",\n         \"countColumns\",\n      ];\n      // Transition: if we have an .objectWorkspace, copy those values in here:\n      if (this.settings.objectWorkspace) {\n         owFields.forEach((f) => {\n            if (!this.settings[f])\n               this.settings[f] = this.settings.objectWorkspace[f];\n         });\n      }\n\n      // make sure they have actual default values now.\n      owFields.forEach((f) => {\n         settingsDefault(this.settings, f);\n      });\n\n      // we are not allowed to have sub views:\n      this._views = [];\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   removeField(field, cb) {\n      let shouldSave = false;\n\n      // check to see if there is a frozenColumnID and if it matches the\n      // deleted field\n      if (this.settings?.frozenColumnID == field.columnName) {\n         // remove the column name from the frozen column id\n         this.settings.frozenColumnID = \"\";\n         // flag the object to be saved later\n         shouldSave = true;\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.hiddenFields?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.hiddenFields.indexOf(field.columnName);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.hiddenFields.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are Summary fields\n      if (this.settings.summaryColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.summaryColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.summaryColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.countColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.countColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.countColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n      // if settings were changed call the callback\n\n      cb(null, shouldSave);\n   }\n\n   copyUpdateProperyList() {\n      return [\"detailsPage\", \"detailsTab\", \"editPage\", \"editTab\"];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewImagePropertyComponentDefaults = {\n   filename: \"\",\n   width: 200,\n   height: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"image\", // {string} unique key for this view\n   icon: \"picture-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewImageCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewImagePropertyComponentDefaults.width\n      );\n      this.settings.height = parseInt(\n         this.settings.height || ABViewImagePropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewKanbanPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   editFields: [],\n   // {array}\n   // An array of {ABField.id} that determines which fields should show up\n   // in the editor.\n\n   verticalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the Vertical Grouping\n   // of the Kanban.\n\n   horizontalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the horizontal Grouping\n   // of the Kanban.\n\n   ownerField: \"\",\n   // {ABFieldUser.id}\n   // the .id of the ABFieldUser instance that determines the owner of the\n   // entries.\n\n   template: \"\",\n   // {json}\n   // The {ABViewText} definition used to display the template for this KanBan.\n   //\n   // A display template used for displaying the information in each Card. The\n   // template is a basic string with special placeholders:  {field.id}\n   // Given a row of data, the current object will scan the template for any\n   // placeholders matching one of it's fields, and then update it with the\n   // current value.\n};\n\nconst ABViewDefaults = {\n   key: \"kanban\",\n   // {string}\n   // unique key identifier for this ABView object\n\n   icon: \"columns\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"Kanban\",\n   // {string}\n   // the multilingual label key\n   // NOTE: will be used as L(labelKey)\n};\n\nmodule.exports = class ABViewKanbanCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // set a default .template value\n      if (!this.settings.template) {\n         this.settings.template = { id: `${this.id}_template`, key: \"text\" };\n         this.settings.template.text = this.settings.textTemplate;\n      }\n\n      this.TextTemplate = this.AB.viewNewDetatched(this.settings.template);\n   }\n\n   toObj() {\n      var obj = super.toObj();\n      obj.settings.template = this.TextTemplate.toObj();\n      // NOTE: this corrects the initial save where this.id == undefined\n      // all the rest will set the .id correctly.\n      obj.settings.template.id = `${this.id}_template`;\n      return obj;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewKanbanPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst PropertyComponentDefaults = {\n   label: \"\",\n   numColumns: 1, // The number of columns for this layout\n};\n\nconst ABViewDefaults = {\n   key: \"layout\", // {string} unique key for this view\n   icon: \"columns\", // {string} fa-[icon] reference for this view\n   labelKey: \"Layout\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLayoutCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return PropertyComponentDefaults;\n   }\n\n   /**\n    * @method addColumn\n    * method to actually add a new ABView as one of our columns.\n    * This is called by the static .addView() method.\n    */\n   addColumn() {\n      this._views.push(\n         this.application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n            },\n            this.application,\n            this\n         )\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      if (isEdited) {\n         // if the layout component is being edited in the editor (isEdited == true)\n         // then we return [];\n         return [];\n      } else {\n         // the layout view doesn't care what components are offered, it get's\n         // the list from it's parent view.\n         // ## NOTE: layout views should not be root views.\n         if (this.parent) {\n            return this.parent.componentList(false);\n         } else {\n            return [];\n         }\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewMenuPropertyComponentDefaults = {\n   orientation: \"x\",\n   buttonStyle: \"ab-menu-default\",\n   menuAlignment: \"ab-menu-left\",\n   menuInToolbar: 1,\n   menuPadding: 10,\n   menuTheme: \"bg_gray\",\n   menuPosition: \"left\",\n   menuTextLeft: \"\",\n   menuTextRight: \"\",\n   menuTextCenter: \"\",\n   // [\n   // \t\t{\n   //\t\t\tpageId: uuid,\n   //\t\t\ttabId: uuid,\n   //\t\t\ttype: string, // \"page\", \"tab\"\n   //\t\t\tisChecked: bool,\n   //\t\t\taliasname: string,\n   //\t\t\ttranslations: []\n   //\t\t}\n   // ]\n   pages: [],\n   order: [],\n};\n\nconst ABMenuDefaults = {\n   key: \"menu\", // {string} unique key for this view\n   icon: \"th-large\", // {string} fa-[icon] reference for this view\n   labelKey: \"Menu\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewMenuCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMenuDefaults);\n   }\n\n   static common() {\n      return ABMenuDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewMenuPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewMenu instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n      if (this.settings.pages) {\n         this.settings.pages.forEach((page) => {\n            this.unTranslate(page, page, [\"aliasname\"]);\n         });\n      }\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.translate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n\n      this.settings.pages =\n         this.settings.pages || ABViewMenuPropertyComponentDefaults.pages;\n\n      for (var i = 0; i < this.settings.pages.length; i++) {\n         var page = this.settings.pages[i];\n         if (page instanceof Object) {\n            page.isChecked = JSON.parse(page.isChecked || false);\n\n            this.translate(page, page, [\"aliasname\"]);\n         }\n         // Compatible with old data\n         else if (typeof page == \"string\") {\n            this.settings.pages[i] = {\n               pageId: page,\n               isChecked: true,\n            };\n         }\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   ClearPagesInView(view) {\n      // clear menu items\n      if (view && view.count() > 1) {\n         view.find({}).forEach((item) => {\n            view.remove(item.id);\n         });\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   AddPagesToView(view, pages) {\n      if (!view || !pages) return;\n\n      (pages || []).forEach((displayPage) => {\n         if (displayPage.isChecked) {\n            let existsPage = this.application.pages(\n               (p) => p.id == displayPage.pageId,\n               true\n            )[0];\n            if (!existsPage) return;\n\n            var pageAccessLevel = existsPage.getUserAccess();\n            if (pageAccessLevel == 0) return;\n\n            if (displayPage.tabId) {\n               let existsTab = this.application.views(\n                  (v) => v.id == displayPage.tabId,\n                  true\n               )[0];\n               if (!existsTab) return;\n\n               var tabAccessLevel = existsTab.getUserAccess();\n               if (tabAccessLevel == 0) return;\n            }\n\n            let label = this.getAliasname(displayPage);\n            // create a temporaty store for the menu item\n            var menuItem;\n            // check if page has a parent or not\n            if (displayPage.parent && displayPage.parent != \"0\") {\n               // if page has a parent attempt to grab its submenu\n               menuItem = view.getSubMenu(displayPage.parent);\n            } else {\n               // if the page doesn't have parent use the current menu\n               menuItem = view;\n            }\n            // if the menu item doesn't have a menu selected find it\n            if (menuItem == null) {\n               // get the menu item\n               var curMenu = view.getMenuItem(displayPage.parent);\n               // create a submenu placeholder\n               curMenu.submenu = [];\n               // update the menu with the new submenu included\n               view.refresh(displayPage.parent);\n               // get the submenu we just created\n               menuItem = view.getSubMenu(displayPage.parent);\n            }\n            if (menuItem.exists(displayPage.tabId || displayPage.pageId))\n               return;\n            // add a new item to the menu/submenu\n            menuItem.add(\n               {\n                  id: displayPage.tabId || displayPage.pageId,\n                  value: label,\n                  type: displayPage.type,\n                  pageId: displayPage.pageId,\n                  icon: displayPage.icon\n                     ? \"fa fa-fw fa-\" + displayPage.icon\n                     : \"\",\n               },\n               displayPage.position ? parseInt(displayPage.position) : 0\n            );\n         }\n      });\n   }\n\n   /**\n    * @method getAliasname\n    * @param pageInfo - an object in settings\n    * {\n    * \tpageId: uuid,\n    * \ttabId: uuid,\n    * \ttype: string, - \"page\" or \"tab\"\n    * \tisChecked: bool,\n    * \taliasname: string,\n    *\ttranslations: []\n    *}\n    *\n    * @return {string}\n    */\n   getAliasname(pageInfo) {\n      var lang = this.AB.Multilingual.currentLanguage();\n      var translation = pageInfo.translations.filter((t) => {\n         return t.language_code == lang;\n      });\n\n      var label = \"\";\n\n      if (translation.length) {\n         if (translation[0].aliasname) {\n            label = translation[0].aliasname;\n         } else if (translation[0].label) {\n            label = translation[0].label;\n         }\n      }\n\n      // Just in case there isn't one stored in the translations yet\n      if (!label && pageInfo.aliasname) {\n         label = pageInfo.aliasname;\n      }\n\n      // if alias is empty, then find label of page or tab\n      if (\n         !label ||\n         // remove [en] or [th] etc.\n         !label.replace(/\\[.{2,}\\]/g, \"\")\n      ) {\n         // first check to see if we are actually on a page\n         // if not recursivly look up for the nearest parent page\n         var pageId;\n         if (pageInfo.pageId) {\n            pageId = pageInfo.pageId;\n         } else {\n            pageId = this.getParentPageId(pageInfo);\n         }\n         // find label of the actual page\n         var page = this.application.pages((p) => p.id == pageId, true)[0];\n         if (page) {\n            // find label of the tab view\n            if (pageInfo.type == \"tab\" || pageInfo.key == \"viewcontainer\") {\n               var tabView = page.views(\n                  (v) => v.id == pageInfo.tabId || v.id == pageInfo.id,\n                  true\n               )[0];\n               if (tabView) {\n                  label = tabView.label;\n               }\n            } else {\n               label = page.label;\n            }\n         }\n      }\n\n      return label;\n   }\n\n   getParentPageId(currentView) {\n      if (currentView.key != \"page\") {\n         return this.getParentPageId(currentView.parent);\n      } else {\n         return currentView.id;\n      }\n   }\n\n   copy(lookUpIds, parent) {\n      return super.copy(lookUpIds, parent).then((result) => {\n         // update ids of page's settings\n         (result.settings.pages || []).forEach((p, i) => {\n            let page = result.settings.pages[i];\n\n            // Compatible with old data\n            if (typeof page == \"string\") {\n               result.settings.pages[i] = lookUpIds[page];\n            } else {\n               page.pageId = lookUpIds[page.pageId];\n               page.tabId = lookUpIds[page.tabId];\n            }\n         });\n\n         return result.save().then(() => {\n            return result;\n         });\n      });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewPDFImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   fieldID: null,\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nconst ABViewDefaults = {\n   key: \"pdfImporter\", // {string} unique key for this view\n   icon: \"file-pdf-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"PDF Importer\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPDFImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPDFImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewPDFImporterPropertyComponentDefaults.dataviewID;\n\n      this.settings.fieldID =\n         this.settings.fieldID ??\n         ABViewPDFImporterPropertyComponentDefaults.fieldID;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings ?? {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   doSubmitRules(rowDatas) {\n      const object = this.datacollection.datasource;\n\n      const SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      if (rowDatas && !Array.isArray(rowDatas)) rowDatas = [rowDatas];\n\n      rowDatas?.forEach((rowData) => {\n         SubmitRules.process({ data: rowData, form: this });\n      });\n   }\n};\n","/*\n * ABViewPage\n *\n * An ABView that represents a \"Page\" in the system.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-' )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\", // 'page', 'popup' or 'reportPage'\n   popupWidth: 700,\n   popupHeight: 450,\n   pageWidth: null,\n   fixedPageWidth: 0,\n   pageBackground: \"ab-background-default\",\n};\n\nmodule.exports = class ABViewPageCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABViewPage, but has\n      // different implications ... so we default an ABViewPage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   static getPageActionKey(view) {\n      return [\n         \"opstools\",\n         \"AB_\" + String(view.application.name).replace(/[^a-z0-9]/gi, \"\"),\n         String(view.name)\n            .replace(/[^a-z0-9]/gi, \"\")\n            .toLowerCase(),\n         \"view\",\n      ].join(\".\");\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewPage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n\n      obj.myAppID = this.myAppID;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.AB.error(\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      this.settings.columns = this.settings.columns || 1;\n      this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABViewPage\n            // be sure to remove any of it's ABViewPages as well\n            // This cleans out any dangling ABDefinitions and cleans up the\n            // OpsPortal Permissions:\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n\n      // return new Promise((resolve, reject) => {\n      //    // verify we have been .save() before:\n      //    if (this.id) {\n      //       this.application\n      //          .viewDestroy(this)\n      //          .then(() => {\n      //             // remove the page in list\n      //             var parent = this.parent || this.application;\n      //             var remainingPages = parent.pages((p) => {\n      //                return p.id != this.id;\n      //             });\n      //             parent._pages = remainingPages;\n\n      //             resolve();\n      //          })\n      //          .catch(reject);\n      //    } else {\n      //       resolve(); // nothing to do really\n      //    }\n      // });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABViewPage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABViewPage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance() {\n      console.warn(\n         \"This version of ABViewPage hasn't updated it's refreshInstance()\",\n         this\n      );\n      return this;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABViewPages for this ABViewPage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABViewPages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         if (this._pages && this._pages.length > 0) {\n            result = this._pages.filter(filter);\n\n            if (result.length < 1) {\n               this._pages.forEach((p) => {\n                  var subPages = p.pages(filter, deep);\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n               });\n            }\n         }\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABViewPage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABViewPage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABViewPage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      values.key = ABViewDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABViewPage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABViewPage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for views in this application.\n    * @return {string}\n    */\n   urlPage() {\n      return this.urlPointer() + \"/_pages/\";\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlPage() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABViewDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABViewPage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABViewPage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewPivotPropertyComponentDefaults = {\n   dataviewID: null,\n   removeMissed: 0,\n   totalColumn: 0,\n   separateLabel: 0,\n   min: 0,\n   max: 0,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"pivot\", // {string} unique key for this view\n   icon: \"cube\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pivot\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPivotCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPivotPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Convert to boolean\n      this.settings.removeMissed = JSON.parse(\n         this.settings.removeMissed ||\n            ABViewPivotPropertyComponentDefaults.removeMissed\n      );\n      this.settings.totalColumn = JSON.parse(\n         this.settings.totalColumn ||\n            ABViewPivotPropertyComponentDefaults.totalColumn\n      );\n      this.settings.separateLabel = JSON.parse(\n         this.settings.separateLabel ||\n            ABViewPivotPropertyComponentDefaults.separateLabel\n      );\n      this.settings.min = JSON.parse(\n         this.settings.min || ABViewPivotPropertyComponentDefaults.min\n      );\n      this.settings.max = JSON.parse(\n         this.settings.max || ABViewPivotPropertyComponentDefaults.max\n      );\n\n      if (this.settings.structure && typeof this.settings.structure == \"string\")\n         this.settings.structure = JSON.parse(this.settings.structure);\n\n      // \"0\" -> 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewPivotPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.views = [];\n      obj.settings = obj.settings || {};\n\n      if (this.settings.structure)\n         obj.settings.structure = JSON.stringify(this.settings.structure);\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewReportManagerPropertyComponentDefaults = {\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      text: \"\", // id of a LongText field\n      queries: \"\", // id of a json field\n   },\n   datacollectionIDs: [],\n   editMode: 0,\n   hideCommonTab: 0,\n   hideDataTab: 0,\n   hideViewTab: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"reportsManager\", // {string} unique key for this view\n   icon: \"wpforms\", // {string} fa-[icon] reference for this view\n   labelKey: \"Reports Manager\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewReportsManagerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewReportManagerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewReportManagerPropertyComponentDefaults).forEach(\n         (key1) => {\n            if (\n               typeof ABViewReportManagerPropertyComponentDefaults[key1] ===\n                  \"object\" &&\n               !Array.isArray(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               )\n            ) {\n               parsedSettings[key1] = {};\n\n               Object.keys(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               ).forEach((key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1]?.[key2] ??\n                     ABViewReportManagerPropertyComponentDefaults[key1][key2];\n               });\n\n               return;\n            }\n\n            parsedSettings[key1] =\n               this.settings[key1] ??\n               ABViewReportManagerPropertyComponentDefaults[key1];\n         }\n      );\n\n      this.settings = parsedSettings;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings || {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewSchedulerPropertyComponentDefaults = {\n   readonly: 0,\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      start: \"\", // id of a DateTime field\n      end: \"\", // id of a DateTime field\n      allDay: \"\", // id of a Checkbox field\n      repeat: \"\", // id of a String field\n      calendar: \"\", // id of a String field\n      color: \"\", // id of a String field\n      sectionID: \"\", // id of a String field\n      unitID: \"\", // id of a String field\n      notes: \"\", // id of a LongText field\n      originID: \"\", // id of a LongText field\n   },\n   calendarDataviewID: \"\",\n   calendarDataviewFields: {\n      title: \"\", // id of a String field\n      color: \"\", // id of a String field\n      active: \"\", // id of a Checkbox field\n   },\n   timeline: {\n      day: 1,\n      week: 1,\n      month: 1,\n      year: 1,\n      agenda: 1,\n      timeline: 1,\n      units: 1,\n   },\n   timelineSectionList: \"\",\n   unitList: \"\",\n   export: {\n      excel: 0,\n      csv: 0,\n      pdf: 0,\n   },\n};\n\nconst ABViewDefaults = {\n   key: \"scheduler\",\n   // {string}\n   // unique key for this view\n\n   icon: \"calendar\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Scheduler\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewSchedulerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewSchedulerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"scheduler\"]);\n\n      const obj = super.toObj();\n\n      obj.views = [];\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n      this.settings.dataviewFields = this.settings.dataviewFields || {};\n      this.settings.calendarDataviewFields =\n         this.settings.calendarDataviewFields || {};\n      this.settings.timeline = this.settings.timeline || {};\n      this.settings.export = this.settings.export || {};\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewSchedulerPropertyComponentDefaults).forEach((key1) => {\n         if (\n            typeof ABViewSchedulerPropertyComponentDefaults[key1] === \"object\"\n         ) {\n            parsedSettings[key1] = {};\n\n            Object.keys(ABViewSchedulerPropertyComponentDefaults[key1]).forEach(\n               (key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1][key2] ??\n                     ABViewSchedulerPropertyComponentDefaults[key1][key2];\n               }\n            );\n\n            return;\n         }\n\n         parsedSettings[key1] =\n            this.settings[key1] ??\n            ABViewSchedulerPropertyComponentDefaults[key1];\n      });\n\n      this.settings = parsedSettings;\n\n      // if this is being instantiated on a read from the Property UI,\n      this.scheduler =\n         values.scheduler || ABViewSchedulerPropertyComponentDefaults.scheduler;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"scheduler\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewTabPropertyComponentDefaults = {\n   height: 0,\n   minWidth: 0,\n   stackTabs: 0, // use sidebar view instead of tabview\n   darkTheme: 0, // set dark theme css or not\n   sidebarWidth: 200, // width of sidebar menu when stacking tabs\n   sidebarPos: \"left\", // the default position of sidebar\n   iconOnTop: 0, // do you want to put the icon above the text label?\n   hintID: null, // store the ID of a webix hint tutorial for this view\n};\n\nconst ABViewTabDefaults = {\n   key: \"tab\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"Tab\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTabCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewTabDefaults);\n   }\n\n   static common() {\n      return ABViewTabDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTabPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(this.settings.height);\n      this.settings.minWidth = parseInt(this.settings.minWidth || 0);\n      this.settings.stackTabs = parseInt(this.settings.stackTabs);\n      this.settings.darkTheme = parseInt(this.settings.darkTheme);\n      this.settings.sidebarWidth = parseInt(this.settings.sidebarWidth);\n      this.settings.sidebarPos = this.settings.sidebarPos;\n      this.settings.iconOnTop = parseInt(this.settings.iconOnTop);\n   }\n\n   addTab(tabName, tabIcon) {\n      return this.application\n         .viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: tabName,\n               tabicon: tabIcon,\n            },\n            this.application,\n            this\n         )\n         .save();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewTextPropertyComponentDefaults = {\n   text: \"\",\n   // {string}\n   // A multilingual text template that is used to display a given set of\n   // values.\n\n   height: 0,\n   // {integer}\n   // The default height of this widget.\n\n   dataviewID: null,\n   // {uuid}\n   // The {ABDataCollection.id} of the datacollection this ABViewText is\n   // pulling data from.\n   // In most usage situations this ABView is tied to the data in an\n   // ABDataCollection.  However, it is possible for an ABObject to be\n   // directly assigned to the ABView, and that will be used instead.\n};\n\nconst ABViewDefaults = {\n   key: \"text\",\n   // {string}\n   // unique key for this view\n\n   icon: \"font\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Text\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTextCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"text\"]);\n\n      var obj = super.toObj();\n      obj.views = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewTextPropertyComponentDefaults.height\n      );\n\n      // if this is being instantiated on a read from the Property UI,\n      this.text = values.text || ABViewTextPropertyComponentDefaults.text;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return ABDatacollection of this form\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollection() {\n      if (this.parent?.key == \"dataview\") {\n         return this.AB.datacollectionByID(this.parent.settings.dataviewID);\n      } else {\n         return this.AB.datacollectionByID(this.settings.dataviewID);\n      }\n   }\n\n   fieldKey(field) {\n      let label = field.label || \"\";\n      label = label.replace(/\\(/g, \"\\\\(\");\n      label = label.replace(/\\)/g, \"\\\\)\");\n      return label;\n   }\n\n   displayText(val, componentID) {\n      var result = this.text;\n\n      let clearTemplateValue = (result) => {\n         return result.replace(/{(.*?)}/g, \"\");\n      };\n\n      var dv = this.datacollection;\n      // if (!dv) return clearTemplateValue(result);\n\n      var object = dv?.datasource ?? this._object;\n      if (!object) return clearTemplateValue(result);\n\n      const rowData = val || dv.getCursor() || {};\n\n      object.fields().forEach((f) => {\n         // add \\\\ in front of the regular expression special charactors\n         // let label = f.label || \"\";\n         // label = label.replace(/\\(/g, \"\\\\(\");\n         // label = label.replace(/\\)/g, \"\\\\)\");\n         let label = this.fieldKey(f);\n\n         var template = new RegExp(\"{\" + label + \"}\", \"g\");\n\n         // IDEA: I'd like to keep all the image url logic INSIDE the ABFieldImage\n         // object.  Is there some way we can simply call: f.imageTemplate(rowData)\n         // and parse the results for the url to display here?\n\n         var data = f.format(rowData);\n         if (f.key == \"image\") {\n            var fData = data;\n            data = f.urlImage(fData);\n\n            // Question: should we change f.urlImage() to return the defaultImageUrl\n            // if fData is \"\" and .useDefaultImage = true?\n\n            if (\n               !fData &&\n               f.settings.defaultImageUrl &&\n               f.settings.useDefaultImage\n            ) {\n               data = f.urlImage(f.settings.defaultImageUrl);\n\n               ////\n               //// James:  Revisit this and make sure we are handling things ok now.\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n               // } else if (\n               //    fData != \"\" &&\n               //    result.indexOf(\"onload\") == -1 &&\n               //    componentID\n               // ) {\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n            } else {\n               ////\n               //// James: It looks like this routine assumes the this.text template will\n               //// only have 1 <img> tag in it.  Is that necessarilly true?\n               ////\n               //// If NOT, then we need to rethink this next line:\n\n               result = result.replace(\n                  \"img\",\n                  \"img onerror='this.parentNode.removeChild(this);' \"\n               );\n            }\n         }\n\n         result = result.replace(template, data);\n      });\n\n      // Support {uuid} tag in tempalte\n      result = result.replace(/{PK}/g, rowData[object.PK()]);\n\n      return result;\n   }\n\n   objectLoad(object) {\n      this._object = object;\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewDefaults = {\n   key: \"viewwidget\", // {string} unique key for this view\n   icon: \"circle-o-notch \", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.widget\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columnSpan: 1,\n   rowSpan: 1,\n};\n\nmodule.exports = class ABViewWidgetCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columnSpan = parseInt(\n         this.settings.columnSpan || ABPropertyComponentDefaults.columnSpan\n      );\n      this.settings.rowSpan = parseInt(\n         this.settings.rowSpan || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationCore = require(\"../core/ABApplicationCore.js\");\n\nconst ABViewPage = require(\"./views/ABViewPage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplication extends ABApplicationCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // now listen for any updates to our managed objects\n      this._handler_page_updated = (definition) => {\n         // we want to keep the same pageID order:\n         var newPages = [];\n         this.pages().forEach((pg) => {\n            if (pg.id === definition.id) {\n               newPages.push(pg.refreshInstance(this));\n               return;\n            }\n            newPages.push(pg);\n         });\n\n         this._pages = newPages;\n\n         // var currPage = this._pages.find((p) => p.id === definition.id);\n         // if (currPage) {\n         //    this._pages = this._pages.filter((p) => p.id != currPage.id);\n         //    this._pages.push(currPage.refreshInstance());\n         // }\n      };\n      this._pages.forEach((p) => {\n         p.on(\"definition.updated\", this._handler_page_updated);\n      });\n   }\n\n   static applications(/*fn = () => true*/) {\n      console.error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      return null;\n   }\n   static applicationForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   static definitionForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.definitionForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   areaKey() {\n      return this.AB.kebabCase(`ab-${this.name}`);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABApplication.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.applicationByID(this.id);\n\n      // remove my listeners\n      this._pages.forEach((p) => {\n         p.removeListener(\"definition.updated\", this._handler_page_updated);\n      });\n\n      return newObj;\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method _listInsert()\n    * save the given entity into our desired list:\n    * @param {varid} entity\n    * @param {string} key\n    *        the key of the list we are managing\n    * @return {Promise}\n    */\n   async _listInsert(entity, key) {\n      var isIncluded = this[key].indexOf(entity.id) != -1;\n      if (!isIncluded) {\n         this[key].push(entity.id);\n         await this.save();\n      }\n   }\n\n   async _listRemove(entity, key) {\n      var begLen = this[key].length;\n      this[key] = this[key].filter((id) => {\n         return id != entity.id;\n      });\n      // if there was a change then save this.\n      if (begLen != this[key].length) {\n         await this.save();\n      }\n   }\n\n   /**\n    * @method datacollectionInsert()\n    * persist the current ABDataCollection in our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionInsert(dc) {\n      return this._listInsert(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method datacollectionRemove()\n    * remove the given ABDataCollection from our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionRemove(dc) {\n      return this._listRemove(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method objectInsert()\n    * persist the current ABObject in our list of .objectIDs.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectInsert(object) {\n      return this._listInsert(object, \"objectIDs\");\n   }\n\n   /**\n    * @method objectRemove()\n    * remove the current ABObject from our list of .objectIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectRemove(object) {\n      return this._listRemove(object, \"objectIDs\");\n   }\n\n   /**\n    * @method processInsert()\n    * persist the current ABProcess in our list of .processIDs.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processInsert(process) {\n      return this._listInsert(process, \"processIDs\");\n   }\n\n   /**\n    * @method processRemove()\n    * remove the current ABProcess from our list of .processIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processRemove(process) {\n      return this._listRemove(process, \"processIDs\");\n   }\n\n   /**\n    * @method queryInsert()\n    * persist the current ABObjectQuery in our list of .queryIDs.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryInsert(query) {\n      return this._listInsert(query, \"queryIDs\");\n   }\n\n   /**\n    * @method queryRemove()\n    * remove the current ABObjectQuery from our list of .queryIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryRemove(query) {\n      return this._listRemove(query, \"queryIDs\");\n   }\n\n   /**\n    * @method exportIDs()\n    * export any relevant .ids for the necessary operation of this application.\n    * @param {array} ids\n    *         the array of ids to insert any relevant .ids into\n    */\n   exportIDs(ids) {\n      // make sure we don't get into an infinite loop:\n      if (ids.indexOf(this.id) > -1) return;\n\n      ids.push(this.id);\n\n      // start with Objects:\n      this.objectsIncluded().forEach((o) => {\n         o.exportIDs(ids);\n      });\n\n      // get all Hints\n      this.hintsIncluded().forEach((h) => {\n         h.exportIDs(ids);\n      });\n\n      // Queries\n      this.queriesIncluded().forEach((q) => {\n         q.exportIDs(ids);\n      });\n\n      // Datacollections\n      // NOTE: currently the server doesn't make instances of DataCollections\n      // so we manually parse the related info here:\n      this.datacollectionIDs.forEach((dID) => {\n         if (ids.indexOf(dID) > -1) return;\n\n         var def = this.AB.definitionByID(dID);\n         if (def) {\n            ids.push(dID);\n            if (def.settings.datasourceID) {\n               var object = this.AB.objectByID(def.settings.datasourceID);\n               if (object) {\n                  object.exportIDs(ids);\n               }\n            }\n         }\n      });\n\n      // Processes\n      this.processes().forEach((p) => {\n         p.exportIDs(ids);\n      });\n\n      // Pages\n      // NOTE: currently the server doesn't make instances of ABViews\n      // so we manually parse the object data here:\n      var parseView = (view) => {\n         if (ids.indexOf(view.id) > -1) return;\n         ids.push(view.id);\n         (view.pageIDs || []).forEach((pid) => {\n            var pdef = this.AB.definitionByID(pid);\n            if (pdef) {\n               parseView(pdef);\n            }\n         });\n\n         (view.viewIDs || []).forEach((vid) => {\n            var vdef = this.AB.definitionByID(vid);\n            if (vdef) {\n               parseView(vdef);\n            }\n         });\n      };\n\n      var pageIDs = this._pages.map((p) => p.id);\n      (pageIDs || []).forEach((pid) => {\n         var pdef = this.AB.definitionByID(pid);\n         if (pdef) {\n            parseView(pdef);\n         }\n      });\n\n      // return only unique entries:\n      ids = this.AB.uniq(ids);\n   }\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPage\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      return new ABViewPage(values, this);\n   }\n\n   /**\n    * @method pageInsert()\n    * Insert a new ABViewPage into this Application.\n    * @param {ABViewPage} page\n    *        The instance of the page to save.\n    * @return {Promise}\n    */\n   async pageInsert(page) {\n      // var isIncluded = this.pageByID(page.id);\n      var isIncluded = this._pages.filter((p) => p.id == page.id)[0];\n      if (!isIncluded) {\n         this._pages.push(page);\n         // Save our own Info:\n         return this.save();\n      }\n   }\n\n   /**\n    * @method pageRemove()\n    * remove the current ABViewPage from our list of pages.\n    * @param {ABViewPage} page\n    * @return {Promise}\n    */\n   async pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n   }\n\n   save() {\n      // if someone just changed the name of our ABApplication, reflect that\n      // in our Def.Name\n      if (this.name != this.label) {\n         this.name = this.label;\n      }\n      return super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      //\n      // check for valid object references:\n      //\n      var checks = {\n         objectIDs: \"object\",\n         queryIDs: \"query\",\n         datacollectionIDs: \"datacollection\",\n      };\n\n      Object.keys(checks).forEach((k) => {\n         this[k].forEach((id) => {\n            var def = this.AB.definitionByID(id);\n            if (!def) {\n               this.warningsMessage(` is referencing a missing ${checks[k]}`, {\n                  appID: this.id,\n                  id,\n               });\n            }\n         });\n      });\n\n      //\n      // Make sure there is some way to access this Application:\n      //\n      if (this.roleAccess.length == 0 && !this.isAccessManaged) {\n         this.warningsMessage(\" has no Role assigned, and is unaccessible.\");\n      }\n\n      // do our Role references exist?\n      var allRoles = this.AB.Account.rolesAll().map((r) => r.id);\n      this.roleAccess.forEach((r) => {\n         if (allRoles.indexOf(r) == -1) {\n            this.warningsMessage(\n               `Specified Role Access [${r}] does not exist in this system`,\n               { role: r }\n            );\n         }\n      });\n\n      // Make sure all our Pages perform a new warningsEval();\n      this.pages().forEach((p) => {\n         p.warningsEval();\n      });\n   }\n\n   warningsAll() {\n      var warnings = [].concat(this._warnings);\n      [\n         \"objectsIncluded\",\n         \"queriesIncluded\",\n         \"datacollectionsIncluded\",\n         \"processes\",\n         \"pages\",\n         // \"views\", // <-- these are gathered in \"pages\"\n      ].forEach((k) => {\n         this[k]().forEach((o) => {\n            warnings = warnings.concat(o.warningsAll());\n         });\n      });\n\n      return warnings;\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Application[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   /**\n    * @method mobileAppNew()\n    *\n    * return an instance of a new (unsaved) ABMobileApp that is tied to this\n    * ABApplication.\n    *\n    * @return {ABMobileApp}\n    */\n   // mobileAppNew(values) {\n   //    return new ABMobileApp(values, this);\n   // }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationMobileCore = require(\"../core/ABApplicationMobileCore.js\");\n\nconst ABViewPageMobile = require(\"./mobile/ABMobilePage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplicationMobile extends (\n   ABApplicationMobileCore\n) {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPageMobile\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPageMobile}\n    */\n   pageNew(values) {\n      const newPage = new ABViewPageMobile(values, this);\n      newPage.parent = this;\n      return newPage;\n   }\n\n   async setPageDefault(page) {\n      if (this.pageDefault != page.id) {\n         let oldPage = this.pageByID(this.pageDefault, true);\n         if (oldPage) {\n            oldPage.defaultPage = 0;\n            await oldPage.save();\n         }\n\n         this.pageDefault = page.id;\n         await this.save();\n      }\n   }\n};\n","const ABEmitter = require(\"./ABEmitter\");\n\nconst CustomComponentManager = require(\"../../webix_custom_components/customComponentManager\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABComponent extends ABEmitter {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, AB) {\n      super();\n\n      // Transition Code:\n      // make sure we have an this.AB\n      if (App && App.AB) {\n         this.AB = App.AB;\n      }\n\n      // passed in AB will override\n      if (AB) {\n         this.AB = AB;\n         // {ABFactory} AB\n      }\n\n      if (!App) {\n         if (AB._App) {\n            App = AB._App;\n         } else {\n            App = {\n               uuid: AB.Webix.uid(),\n\n               /*\n                * AB\n                * the {ABFactory} for our interface.\n                */\n               AB: AB,\n\n               /*\n                * actions:\n                * a hash of exposed application methods that are shared among our\n                * components, so one component can invoke an action that updates\n                * another component.\n                */\n               actions: {},\n\n               /*\n                * config\n                * webix configuration settings for our current browser\n                */\n               config: AB.UISettings.config(),\n\n               /*\n                * custom\n                * a collection of custom components for this App Instance.\n                */\n               custom: null,\n\n               /*\n                * Icons\n                * this will provide you with the list of avaialbe font awesome 4.7.0 icons to use in interface building\n                */\n               icons: AB.UISettings.icons,\n\n               Label: L,\n\n               /*\n                * labels\n                * a collection of labels that are common for the Application.\n                */\n               labels: {\n                  add: L(\"Add\"),\n                  create: L(\"Create\"),\n                  delete: L(\"Delete\"),\n                  edit: L(\"Edit\"),\n                  export: L(\"Export\"),\n                  formName: L(\"Name\"),\n                  import: L(\"Import\"),\n                  rename: L(\"Rename\"),\n                  ok: L(\"Ok\"),\n\n                  cancel: L(\"Cancel\"),\n                  save: L(\"Save\"),\n\n                  yes: L(\"Yes\"),\n                  no: L(\"No\"),\n\n                  none: L(\"None\"),\n                  close: L(\"Close\"),\n\n                  default: L(\"Default\"),\n                  defaultPlaceholder: L(\"Enter default value\"),\n\n                  disable: L(\"Disable\"),\n\n                  required: L(\"Required\"),\n                  unique: L(\"Unique\"),\n\n                  invalidMessage: {\n                     required: L(\"This field is required\"),\n                  },\n\n                  createErrorMessage: L(\"System could not create <b>{0}</b>.\"),\n                  createSuccessMessage: L(\"<b>{0}</b> is created.\"),\n\n                  updateErrorMessage: L(\"System could not update <b>{0}</b>.\"),\n                  updateSucessMessage: L(\"<b>{0}</b> is updated.\"),\n\n                  deleteErrorMessage: L(\"System could not delete <b>{0}</b>.\"),\n                  deleteSuccessMessage: L(\"<b>{0}</b> is deleted.\"),\n\n                  renameErrorMessage: L(\"System could not rename <b>{0}</b>.\"),\n                  renameSuccessMessage: L(\"<b>{0}</b> is renamed.\"),\n\n                  // Data Field  common Property labels:\n                  dataFieldHeaderLabel: L(\"Section Title\"),\n                  dataFieldHeaderLabelPlaceholder: L(\"Section Name\"),\n\n                  dataFieldLabel: L(\"Label\"),\n                  dataFieldLabelPlaceholder: L(\"Label\"),\n\n                  dataFieldColumnName: L(\"Field Name\"),\n                  dataFieldColumnNamePlaceholder: L(\"Database field name\"),\n\n                  dataFieldShowIcon: L(\"show icon?\"),\n\n                  componentDropZone: L(\"add widgets here\"),\n               },\n\n               /*\n                * unique()\n                * A function that returns a globally unique Key.\n                * @param {string} key   The key to modify and return.\n                * @return {string}\n                */\n               unique: function (key) {\n                  return `${key}${this.uuid}`;\n               },\n            };\n            AB._App = App;\n         }\n      }\n\n      if (!App.custom) {\n         if (!AB.custom) {\n            var componentManager = new CustomComponentManager();\n            componentManager.initComponents(App);\n         } else {\n            App.custom = AB.custom;\n         }\n      }\n\n      this.App = App;\n\n      this.idBase = idBase || \"?idbase?\";\n   }\n\n   actions(_actions) {\n      console.error(\"!!! REFACTOR out .actions()\");\n      if (_actions) {\n         for (var a in _actions) {\n            this.App.actions[a] = _actions[a];\n         }\n      }\n   }\n\n   Label() {\n      return (...params) => {\n         // console.error(\"!! App.label() depreciated.\");\n         return this.AB.Multilingual.label(...params);\n      };\n   }\n\n   unique(key) {\n      return this.App.unique(`${this.idBase}_${key}`);\n   }\n};\n","const ABObjectQuery = require(\"./ABObjectQuery\");\nconst ABDataCollectionCore = require(\"../core/ABDataCollectionCore\");\n\nmodule.exports = class ABDataCollection extends ABDataCollectionCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.setMaxListeners(0);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDataCollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *       .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      this.AB.emit(\"ab.datacollection.update\", {\n         datacollectionId: this.id,\n      });\n      return this;\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n      var L = this.AB.Label();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.datacollections((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   /**\n    * currentUserUsername\n    * must return the proper value for the current user that would match a \"user\" field\n    * in an object.\n    * This is platform dependent, so must be implemented by a child object.\n    * @return {string}\n    */\n   currentUserUsername() {\n      return this.AB.Account.username();\n   }\n\n   ///\n   /// Data\n   ///\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      // this.initialized = true;  // <<---- DO NOT SET THIS HERE\n\n      super.init();\n\n      //// Now connect our platform hub to our Object Triggers:\n\n      // events\n      this.AB.on(\"ab.datacollection.create\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.create\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.update\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.update\", data);\n      });\n\n      // We are subscribing to notifications from the server that an item may\n      // be stale and needs updating\n      // We will improve this later and verify that it needs updating before\n      // attempting the update on the client side\n      this.AB.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.stale\", data);\n      });\n\n      this.AB.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         this.emit(\"ab.datacollection.delete\", data);\n      });\n\n      this.bindParentDc();\n   }\n\n   bindParentDc() {\n      // if we pass the master datacollection and the field it is linked to\n      // we want to bind it with that field as second param so dataFeed is\n      // used on the slave datacollection\n      let dataCollectionLink = this.datacollectionLink;\n      let fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         let dc = this.__dataCollection;\n         // the second param is the field id we bind the data to the master with\n         dc.bind(dataCollectionLink.__dataCollection, fieldLink.id);\n         // defining dataFeed allows us to query the database when the table is scrolled\n         dc.define(\"dataFeed\", (value, params) => {\n            let cursorUpdated = false;\n            // check if the current cursor was updated\n            if (dc.__prevLinkDcCursor != value) {\n               cursorUpdated = true;\n            }\n\n            dc.__prevLinkDcCursor = this?.datacollectionLink?.getCursor()?.id;\n\n            // NOTE: If no cursor of the parent DC, then show empty list\n            if (\n               this.datacollectionLink &&\n               value == null &&\n               dc.__prevLinkDcCursor == null\n            ) {\n               this.clearAll();\n            }\n            // this is the same item that was already bound...don't reload data\n            else if (cursorUpdated) {\n               // now that we have the modified wheres the dataCollections wheres\n               // need to be modified for subsequent loads on scroll so lets set them\n               // this.reloadWheres(wheres);\n\n               // reload data\n               this.reloadData(0, 20);\n            }\n         });\n      }\n   }\n\n   loadData(start, limit = 20) {\n      return super.loadData(start, limit).catch((err) => {\n         // hideProgressOfComponents() is a platform specific action.\n         this.hideProgressOfComponents();\n         this.emit(\"loadData\", {});\n\n         // propagate the error here:\n         if (err) {\n            throw err;\n         }\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      // Web Platform:\n\n      // data check:\n      if (data.data && !Array.isArray(data.data)) {\n         data.data = [data.data];\n      }\n\n      // standardize the heights\n\n      /*\n       // In v2: we move the row height calculation into the Interface designer.\n       //\n\n      // calculate default value of $height of rows\n      let obj = this.datasource;\n      let defaultHeight = 0;\n      let minHeight = 0;\n      let imageFields = obj.fields((f) => f.key == \"image\");\n      let hiddenFields = obj.objectWorkspace.hiddenFields;\n      imageFields.forEach(function (f) {\n         if (hiddenFields.indexOf(f.columnName) == -1) {\n            if (\n               parseInt(f.settings.useHeight) == 1 &&\n               parseInt(f.settings.imageHeight) > minHeight\n            ) {\n               minHeight = parseInt(f.settings.imageHeight) + 20;\n            } else {\n               minHeight = 100;\n            }\n         }\n      });\n      if (minHeight > 0) {\n         defaultHeight = minHeight;\n      }\n\n      (data.data || []).forEach((d) => {\n         // define $height of rows to render in webix elements\n         if (\n            d.properties != null &&\n            d.properties.height != \"undefined\" &&\n            parseInt(d.properties.height) > 0\n         ) {\n            d.$height = parseInt(d.properties.height);\n         } else if (defaultHeight > 0) {\n            d.$height = defaultHeight;\n         }\n      });\n      */\n\n      return super.processIncomingData(data).then(() => {\n         // Web Platform:\n         // when that is done:\n         this.hideProgressOfComponents();\n      });\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method attachFlexlayout\n    *\n    *\n    * @param {Object} component - a webix flexlayout element instance\n    */\n   attachFlexlayout(component) {\n      var dc = this.__dataCollection;\n\n      // prevent attach many times\n      if (this.__flexComponentIds.indexOf(component.config.id) > -1) {\n         return;\n      } else {\n         // keep component id to an array\n         this.__flexComponentIds.push(component.config.id);\n      }\n   }\n\n   /**\n    * @method bind\n    *\n    *\n    * @param {Object} component - a webix element instance\n    */\n   bind(component) {\n      var dc = this.__dataCollection;\n\n      // prevent bind many times\n      // keep component id to an array\n      if (this.__bindComponentIds.indexOf(component.config.id) === -1)\n         this.__bindComponentIds.push(component.config.id);\n\n      if ($$(component.config.id).data?.find?.({}).length > 0) return;\n\n      if (\n         component.config.view == \"datatable\" ||\n         component.config.view == \"dataview\" ||\n         component.config.view == \"treetable\" ||\n         component.config.view == \"kanban\"\n      ) {\n         if (dc) {\n            var items = dc.count();\n            if (\n               items == 0 &&\n               (this._dataStatus == this.dataStatusFlag.notInitial ||\n                  this._dataStatus == this.dataStatusFlag.initializing) &&\n               component.showProgress\n            ) {\n               component.showProgress({ type: \"icon\" });\n            }\n\n            component.define(\"datafetch\", 20);\n            component.define(\"datathrottle\", 500);\n\n            // initial data of treetable\n            if (component.config.view == \"treetable\") {\n               if (\n                  this.datasource &&\n                  this.datasource.isGroup &&\n                  this.__treeCollection\n               ) {\n                  component.define(\"data\", this.__treeCollection);\n                  component.refresh();\n               } else {\n                  // NOTE: tree data does not support dynamic loading when scrolling\n                  // https://forum.webix.com/discussion/3078/dynamic-loading-in-treetable\n                  component.define(\"data\", []);\n                  component.parse(dc.find({}));\n               }\n            } else {\n               component.data.sync(dc);\n            }\n\n            // Implement .onDataRequest for paging loading\n            if (!this.settings.loadAll) {\n               component.___AD = component.___AD || {};\n               // if (component.___AD.onDataRequestEvent) component.detachEvent(component.___AD.onDataRequestEvent);\n               if (!component.___AD.onDataRequestEvent) {\n                  component.___AD.onDataRequestEvent = component.attachEvent(\n                     \"onDataRequest\",\n                     (start, count) => {\n                        if (component.showProgress)\n                           component.showProgress({ type: \"icon\" });\n\n                        // load more data to the data collection\n                        dc.loadNext(count, start);\n\n                        return false; // <-- prevent the default \"onDataRequest\"\n                     }\n                  );\n               }\n\n               // // NOTE : treetable should use .parse or TreeCollection\n               // // https://forum.webix.com/discussion/1694/tree-and-treetable-using-data-from-datacollection\n               // if (\n               //    component.config.view == \"treetable\" &&\n               //    !this.datasource.isGroup\n               // ) {\n               //    component.___AD = component.___AD || {};\n               //    if (!component.___AD.onDcLoadData) {\n               //       component.___AD.onDcLoadData = () => {\n               //          component.parse(dc.find({}));\n               //       };\n\n               //       this.on(\"loadData\", component.___AD.onDcLoadData);\n               //    }\n               // }\n            }\n         } else {\n            component.data.unsync();\n         }\n      } else if (component.bind) {\n         if (dc) {\n            // Do I need to check if there is any data in the collection before binding?\n            component.bind(dc);\n         } else {\n            component.unbind();\n         }\n\n         if (component.refresh) component.refresh();\n      }\n   }\n\n   unbind(component) {\n      if (!component) return;\n\n      component.detachEvent(\"onDataRequest\");\n      if (component.___AD) {\n         if (component.___AD.onDataRequestEvent)\n            delete component.___AD.onDataRequestEvent;\n\n         if (component.___AD.onDcLoadData) {\n            if (this.off) this.off(\"loadData\", component.___AD.onDcLoadData);\n            delete component.___AD.onDcLoadData;\n         }\n      }\n\n      if (component.data && component.data.unsync) {\n         component.data.unsync();\n         component.define(\"data\", []);\n      }\n\n      if (component.unbind) component.unbind();\n\n      if (component.refresh) component.refresh();\n\n      // remove from array\n      this.__bindComponentIds = (this.__bindComponentIds || []).filter(\n         (id) => id != component.config.id\n      );\n   }\n\n   hideProgressOfComponents() {\n      this.__bindComponentIds.forEach((comId) => {\n         if ($$(comId) && $$(comId).hideProgress) $$(comId).hideProgress();\n      });\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(data) {\n      // get a webix data collection\n      let dc = new webix.DataCollection({\n         data: data || [],\n      });\n\n      this._extendCollection(dc);\n\n      return dc;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      // get a webix data collection\n      let treeStore = new webix.TreeCollection();\n\n      this._extendCollection(treeStore);\n\n      return treeStore;\n   }\n\n   _extendCollection(dataStore) {\n      // Apply this data collection to support multi-selection\n      // https://docs.webix.com/api__refs__selectionmodel.html\n      webix.extend(dataStore, webix.SelectionModel);\n\n      dataStore.___AD = dataStore.___AD || {};\n\n      // Implement .onDataRequest for paging loading\n      if (!this.settings.loadAll) {\n         if (!dataStore.___AD.onDataRequestEvent) {\n            dataStore.___AD.onDataRequestEvent = dataStore.attachEvent(\n               \"onDataRequest\",\n               (start, count) => {\n                  if (start < 0) start = 0;\n\n                  // load more data to the data collection\n                  this.loadData(start, count);\n\n                  return false; // <-- prevent the default \"onDataRequest\"\n               }\n            );\n         }\n\n         if (!dataStore.___AD.onAfterLoadEvent) {\n            dataStore.___AD.onAfterLoadEvent = dataStore.attachEvent(\n               \"onAfterLoad\",\n               () => {\n                  this.emit(\"loadData\", {});\n               }\n            );\n         }\n      }\n\n      // override unused functions of selection model\n      dataStore.addCss = function () {};\n      dataStore.removeCss = function () {};\n      dataStore.render = function () {};\n\n      if (!dataStore.___AD.onAfterLoad) {\n         dataStore.___AD.onAfterLoad = dataStore.attachEvent(\n            \"onAfterLoad\",\n            () => {\n               this.hideProgressOfComponents();\n            }\n         );\n      }\n   }\n\n   parseTreeCollection(data = {}) {\n      if (\n         !(this.__datasource instanceof ABObjectQuery) ||\n         !this.__datasource.isGroup ||\n         !this.__treeCollection\n      )\n         return;\n\n      let addRowToTree = (join = {}, parentAlias = null) => {\n         let alias = join.alias;\n\n         (data.data || []).forEach((row) => {\n            let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n            if (!dataId) return;\n\n            // find parent nodes\n            let parentItemIds = [];\n            let parentId =\n               row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n            if (parentId) {\n               parentItemIds = this.__treeCollection\n                  .find(\n                     (item) =>\n                        item._alias == parentAlias && item._dataId == parentId\n                  )\n                  .map((item) => item.id);\n            }\n\n            // check exists\n            let exists = this.__treeCollection.find((item) => {\n               return (\n                  item._alias == alias &&\n                  item._dataId == dataId &&\n                  (parentItemIds.length == 0 ||\n                     parentItemIds.indexOf(item.$parent) > -1)\n               );\n            }, true);\n            if (exists) return;\n\n            let treeNode = {};\n            treeNode._alias = alias;\n            treeNode._dataId = dataId;\n            treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n            Object.keys(row).forEach((propName) => {\n               // Pull value from alias\n               if (propName.indexOf(`${alias}.`) == 0) {\n                  treeNode[propName] = row[propName];\n               }\n            });\n\n            if (row.translations) treeNode.translations = row.translations;\n\n            // child nodes\n            if (parentItemIds.length > 0)\n               parentItemIds.forEach((parentItemId) => {\n                  this.__treeCollection.add(treeNode, null, parentItemId);\n               });\n            // root node\n            else this.__treeCollection.add(treeNode, null);\n         });\n\n         // Sub-joins\n         (join.links || []).forEach((link) => {\n            addRowToTree(link, alias);\n         });\n      };\n\n      // Show loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         //// Webix Command here:\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.showProgress)\n            boundComp.showProgress({ type: \"icon\" });\n\n         if (boundComp.data && boundComp.data.unsync) boundComp.data.unsync();\n      });\n\n      addRowToTree(this.__datasource.joins());\n\n      // Hide loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.hideProgress) boundComp.hideProgress();\n         boundComp.define(\"data\", this.__treeCollection);\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.datasource) {\n         this.warningsMessage(`doesn't have a datasource.`);\n      } else if (this.linkDatacollectionID) {\n         const linkDC = this.AB.datacollectionById(this.linkDatacollectionID);\n\n         if (!linkDC)\n            this.warningsMessage(\n               `can't resolve linkDatacollectionID[${this.linkDatacollectionID}]`\n            );\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Datacollection[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   get userScopes() {\n      return this.AB.Account.scopes();\n   }\n};\n","var ABDefinitionCore = require(\"../core/ABDefinitionCore\");\n\nmodule.exports = class ABDefinition extends ABDefinitionCore {\n   // constructor(attributes, AB) {\n   //    super(attributes, AB);\n   // }\n};\n","/**\n * ABEmitter\n *\n * This is the platform dependent implementation of an Emitter object.\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = class ABEmitter extends EventEmitter {\n   constructor() {\n      super(/*{ maxListeners: 0 }*/);\n   }\n};\n","const ABHintCore = require(\"../core/ABHintCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABHint extends ABHintCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy(App) {\n      // debugger;\n      // remove all my Elements\n      var allSteps = this.steps();\n      var allDestroy = [];\n      allSteps.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n      // remove reference on App and View\n      let hintIndex = App.hintIDs.indexOf(this.id);\n      if (hintIndex > -1) {\n         App.hintIDs.splice(hintIndex, 1);\n         App.save();\n      }\n\n      let view = App.views((v) => {\n         return v.id == this.settings.view;\n      })[0];\n\n      if (view) {\n         delete view.settings.hintID;\n         view.save();\n      }\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  webix.message({\n                     text: L(\"Tutorial Deleted\"),\n                     type: \"success\",\n                     expire: 3000,\n                  });\n                  resolve();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n\n   createHintUI() {\n      // if already loaded skip\n      if ($$(this.id)) return;\n\n      let steps = [];\n      let next = 0;\n      let display = webix.storage.cookie.get(this.id);\n      if (display?.hide) return;\n      let dontShow = `<label class=\"dontShow\">\n                        <input onclick=\"webix.storage.cookie.put(this.dataset.hintId, {'hide': this.checked});\" data-hint-id=\"${\n                           this.id\n                        }\" type=\"checkbox\">\n                        ${L(\"Don't show this again.\")}\n                     </label>`;\n      this.stepIDs.forEach((step) => {\n         next++;\n         let newStep = {};\n         newStep.id = this._steps[step].id;\n         newStep.el = this._steps[step].settings.el;\n         newStep.event = this._steps[step].settings.event;\n         newStep.title = this._steps[step].name;\n         newStep.text = this._steps[step].text + dontShow;\n         if (this.stepIDs[next]) {\n            newStep.nextEl = this._steps[this.stepIDs[next]].settings.el;\n            if (newStep.nextEl) {\n               newStep.hintId = this.id;\n               newStep.eventEl = \"button\"; // added this so we do not trigger a second advance on the hint when triggering the click below\n               newStep.next = function (event) {\n                  let nextEl = this.nextEl;\n                  let theNextEl = document.querySelector(nextEl);\n                  if (theNextEl && theNextEl.checkVisibility()) {\n                     return false;\n                  } else {\n                     document.querySelector(this.el).click();\n                     return false;\n                  }\n               };\n            }\n         }\n         if (newStep.el) steps.push(newStep);\n      });\n\n      let ui = {\n         view: \"hint\",\n         id: this.id,\n         steps: steps,\n         on: {\n            onNext: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n            onPrevious: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n         },\n      };\n\n      webix.delay(\n         () => {\n            try {\n               webix.ui(ui).start();\n            } catch (err) {\n               this.AB.notify.developer(err, {\n                  context:\n                     \"ABHint.createUIHint() error calling webix.ui(ui).start()\",\n                  ui,\n               });\n            }\n         },\n         null,\n         null,\n         2000\n      );\n\n      // $$(this.id);\n   }\n};\n","const ABIndexCore = require(\"../core/ABIndexCore\");\n\nmodule.exports = class ABIndex extends ABIndexCore {\n   // constructor(attributes, object) {\n   //    super(attributes, object);\n   // }\n\n   /**\n    * @method save()\n    * persist this instance of ABIndex with it's parent ABObject\n    * @return {Promise}\n    */\n   save() {\n      return super\n         .save()\n         .then(() => this.object.indexSave(this))\n         .then(() => this.migrateCreate());\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABIndex\n    * also remove it from our parent ABObject\n    * @return {Promise}\n    */\n   destroy() {\n      return new Promise((resolve, reject) => {\n         if (this.id) {\n            this.migrateDrop()\n               .then(() => {\n                  return super.destroy();\n               })\n               .then(() => this.object.indexRemove(this))\n               .then(resolve)\n               .catch(reject);\n         } else {\n            resolve();\n         }\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      if (this.fields.length == 0) {\n         this.warningsMessage(`is not referencing any fields`);\n      }\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `Index[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n         // data: this.toObj(),\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n      });\n   }\n};\n","/**\n * ABMLClass\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This platform ABMLClass will define 2 methods that allow for the translation\n * untranslation of this data.\n */\nvar ABMLClassCore = require(\"../core/ABMLClassCore\");\n\nmodule.exports = class ABMLClass extends ABMLClassCore {\n   constructor(fieldList, AB) {\n      super(fieldList, AB);\n\n      this._warnings = [];\n      // {array}\n      // an array of warning messages for this object.\n      // each warning entry should be in the format:\n      // WarningMessage: {\n      //    message: {string} \"message to display\"\n      //    data: {json} additional debugging information\n      // }\n   }\n\n   // fromValues(attributes) {\n   //    super.fromValues(attributes);\n   // }\n\n   /**\n    * @method warnings()\n    * returns the stored warnings for this ONE object.\n    * @return {array} WarningMessage\n    */\n   warnings() {\n      return this._warnings;\n   }\n\n   /**\n    * @method warningsEval()\n    * This method causes an object to re-evaluate it's settings to see if there\n    * are any potential errors.\n    */\n   warningsEval() {\n      this._warnings = [];\n   }\n\n   /**\n    * @method warningsAll()\n    * returns all relevant warnings for the current Object. This includes any\n    * sub fields, links, views, etc...\n    * @return {array} warning structures\n    *          [ {WarningMessage}, ... ]\n    */\n   warningsAll() {\n      return this.warnings();\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return this.AB.Account.language() || \"en\";\n   }\n\n   /**\n    * @method destroy()\n    * remove this definition.\n    * @return {Promise}\n    */\n   async destroy() {\n      var def = this.toDefinition();\n      if (def.id) {\n         return def.destroy().catch((err) => {\n            if (err.toString().indexOf(\"No record found\") > -1) {\n               // this is weird, but not breaking:\n               console.log(\n                  `ABMLClass.destroy(): could not find record for id[${def.id}]`\n               );\n               console.log(def);\n               return;\n            }\n            throw err;\n         });\n      }\n      return Promise.resolve();\n   }\n\n   /**\n    * @method save()\n    * persist this definition of our {ABxxx} Object\n    * @return {Promise}\n    */\n   async save() {\n      var def = this.toDefinition();\n      // if not name, try to use our label as the name\n      def.name = def.name || this.name || this.label || \"name\";\n      var data = await def.save();\n      if (!this.id) {\n         this.id = data.id;\n      }\n   }\n};\n","const ABModelCore = require(\"../core/ABModelCore\");\n\n//\n// ABModel\n//\n// Represents the Data interface for an ABObject data.\n//\n// 2 ways to use an ABModel to load a DataTable:\n// \tMethod 1:\n// \tgather all the data externally and send to the DataTable\n//\t\tModel.findAll()\n//\t\t.then((data)=>{\n//\t\t\tDataTable.parse(data);\n//\t\t})\n//\n// \tMethod 2:\n// \tSet the Model object with a condition / skip / limit, then\n// \tuse it to load the DataTable:\n//\t\tModel.where({})\n//\t\t.skip(XX)\n//\t\t.limit(XX)\n//\t\t.loadInto(DataTable);\n\nfunction errorPopup(error) {\n   // Show the pop up\n   if (error && error.data && error.data.error == \"READONLY\") {\n      webix.alert({\n         title: \"Your action is blocked\",\n         ok: \"Ok\",\n         text: error.data.message || \"\",\n         type: \"alert-warning\",\n      });\n   }\n}\n\n/*\n * @function no_socket_trigger()\n * a common routine to trigger an update.\n * In the case where our AB.Network.type() isn't a socket implementation\n * we need to manually trigger the expected socket events ourselves.\n * This fn() attempts to simulate the socket responses in such a case.\n * @param {ABModel} model\n *        The ABModel currently processing the network transaction.\n * @param {string} key\n *        The socket update trigger we are simulating.\n * @param {json} data\n *        The relevant response from our network transaction.\n */\nfunction no_socket_trigger(model, key, data) {\n   // If we do not have socket updates available, then trigger an\n   // update event with this data.\n   if (model.AB.Network.type() != \"socket\") {\n      model.AB.emit(key, {\n         objectId: model.object.id,\n         data,\n      });\n   }\n}\n\nmodule.exports = class ABModel extends ABModelCore {\n   constructor(object) {\n      super(object);\n\n      this.handler_create = (...params) => {\n         this.handler_common(\"ab.datacollection.create\", ...params);\n      };\n\n      this.handler_delete = (...params) => {\n         this.handler_common(\"ab.datacollection.delete\", ...params);\n      };\n\n      this.handler_findAll = (...params) => {\n         this.handler_common(null, ...params);\n      };\n\n      this.handler_logs = (context, err, data) => {\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         context.resolve?.(data);\n      };\n\n      this.handler_update = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_common = (key, context, err, data) => {\n         // key: {string} the relevant socket event key\n         //      can be null if not relevant.\n         // context : {obj} any provided context data provided on the\n         //           this.AB.Network.get() call.\n         // err: {Error} any returned error message from api\n         // data: {obj} returned data from the model-get api in format:\n         //       {data: [], total_count: 1, pos: 0, offset: 0, limit: 0}\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n\n         // let jobID = this.AB.jobID();\n         // console.log(`${jobID} : normalization begin`);\n         // let timeFrom = performance.now();\n         if (key) {\n            // on \"update\" & \"create\" we want to normalizeData()\n            if (key.indexOf(\"delete\") == -1) {\n               this.normalizeData(data);\n            }\n         } else {\n            // on a findAll we normalize data.data\n            this.normalizeData(data.data);\n         }\n         // let timeTo = performance.now();\n         // console.log(`${jobID} : normalization end:  ${timeTo - timeFrom}ms`);\n\n         context.resolve?.(data);\n\n         if (key) {\n            no_socket_trigger(this, key, data);\n         }\n      };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      return this.AB.Network[method](params);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      values.batch.map((vals) => {\n         return this.prepareMultilingualData(vals.data);\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err, data) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            this.normalizeData(data);\n            resolve(data);\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a create event\n            // triggerEvent('create', this.object, data);\n         });\n\n         this.AB.Network.post(\n            {\n               url: this.object.urlRestBatch(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: {},\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // FIX: now with sockets, the triggers are fired from socket updates.\n            //    // trigger a create event\n            //    // triggerEvent('create', this.object, data);\n            // })\n            .catch(reject);\n      });\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      this.prepareMultilingualData(values);\n\n      // add default values record if no value is passed for column\n      this.object.fields().forEach((f) => {\n         if (values[f.columnName] === undefined) {\n            f.defaultValue(values);\n         }\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_create);\n         this.AB.Network.post(\n            {\n               url: this.object.urlRest(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_delete);\n         this.AB.Network[\"delete\"](\n            {\n               url: this.object.urlRestItem(id),\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      cond = cond || {};\n\n      // \t\t// prepare our condition:\n      // \t\tvar newCond = {};\n\n      // \t\t// if the provided cond looks like our { where:{}, skip:xx, limit:xx } format,\n      // \t\t// just use this one.\n      // \t\tif (cond.where) {\n      // \t\t\tnewCond = cond;\n      // \t\t} else {\n\n      // \t\t\t// else, assume the provided condition is the .where clause.\n      // \t\t\tnewCond.where = cond;\n      // \t\t}\n\n      // /// if this is our depreciated format:\n      // if (newCond.where.where) {\n      // \tOP.Error.log('Depreciated Embedded .where condition.');\n      // }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_findAll);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRest(),\n               params: cond,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data.data);\n\n            //    resolve(data);\n            // })\n            .catch((err) => {\n               if (err && err.code) {\n                  switch (err.code) {\n                     case \"ER_PARSE_ERROR\":\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Parse Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n\n                     default:\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Unknown Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n                  }\n               }\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method loadInto\n    * loads the current values into the provided Webix DataTable\n    * @param {DataTable} DT  A Webix component that can dynamically load data.\n    */\n   loadInto(DT) {\n      // if a limit was applied, then this component should be loading dynamically\n      if (this._limit) {\n         DT.define(\"datafetch\", this._limit);\n         DT.define(\"datathrottle\", 250); // 250ms???\n\n         // catch the event where data is requested:\n         // here we will do our own findAll() so we can persist\n         // the provided .where condition.\n\n         // oh yeah, and make sure to remove any existing event handler when we\n         // perform a new .loadInto()\n         DT.___AD = DT.___AD || {};\n         if (DT.___AD.onDataRequestEvent) {\n            DT.detachEvent(DT.___AD.onDataRequestEvent);\n         }\n         DT.___AD.onDataRequestEvent = DT.attachEvent(\n            \"onDataRequest\",\n            (start, count) => {\n               var cond = {\n                  where: this._where,\n                  sort: this._sort,\n                  limit: count,\n                  skip: start,\n               };\n\n               if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n               this.findAll(cond).then((data) => {\n                  /*\n                   // In V2: we move the row height processing into \n                   // the interface designer \n\n                  data.data.forEach((item) => {\n                     if (\n                        item.properties != null &&\n                        item.properties.height != \"undefined\" &&\n                        parseInt(item.properties.height) > 0\n                     ) {\n                        item.$height = parseInt(item.properties.height);\n                     } else if (parseInt(this._where.height) > 0) {\n                        item.$height = parseInt(this._where.height);\n                     }\n                  });\n                  */\n                  DT.parse(data);\n\n                  if (DT.hideProgress) DT.hideProgress();\n               });\n\n               return false; // <-- prevent the default \"onDataRequest\"\n            }\n         );\n\n         DT.refresh();\n      }\n\n      // else just load it all at once:\n      var cond = {};\n      if (this._where) cond.where = this._where;\n      if (this._sort) cond.sort = this._sort;\n      if (this._limit != null) cond.limit = this._limit;\n      if (this._skip != null) cond.skip = this._skip;\n\n      if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n      this.findAll(cond)\n         .then((data) => {\n            // v2: we no longer process item $height\n            /*\n            data.data.forEach((item) => {\n               if (\n                  item.properties != null &&\n                  item.properties.height != \"undefined\" &&\n                  parseInt(item.properties.height) > 0\n               ) {\n                  item.$height = parseInt(item.properties.height);\n               } else if (parseInt(this._where.height) > 0) {\n                  item.$height = parseInt(this._where.height);\n               }\n            });\n            */\n\n            DT.parse(data);\n\n            if (DT.hideProgress) DT.hideProgress();\n         })\n         .catch((err) => {\n            console.error(\"!!!!!\", err);\n         });\n   }\n\n   /**\n    * @method logs()\n    * return the log history related to this model's ABObject.\n    * @param {hash} options\n    *        a key=>value hash of optional search criteria\n    *        .rowId {string} the uuid of the individual entry we are querying\n    *        .levelName {string} the type of entry [\"insert\", \"update\", \"delete\"]\n    *        .username {string} the entries associated with the given user\n    *        .startDate {date} entries that happened ON or AFTER this date\n    *        .endDate {date} entries that happened ON or BEFORE this date\n    *        .start {integer} paging control: how many entries to skip\n    *        .limit {integer} paging control: only return this # entries\n    * @return {Promise}\n    */\n   logs(options) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_logs);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRestLog(),\n               params: options,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            if (err && err.code) {\n               this.AB.notify.developer(err, {\n                  context: \"AppBuilder:ABModel:logs(): Error\",\n                  options,\n               });\n            }\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method limit\n    * set the limit value for this set of data\n    * @param {integer} limit  the number or elements to return in this call\n    * @return {ABModel} this object that is chainable.\n    */\n   limit(limit) {\n      this._limit = limit;\n      return this;\n   }\n\n   /**\n    * @method skip\n    * set the skip value for this set of data\n    * @param {integer} skip  the number or elements to skip\n    * @return {ABModel} this object that is chainable.\n    */\n   skip(skip) {\n      this._skip = skip;\n      return this;\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_update);\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestItem(id),\n               params: values,\n            },\n            { key: jobID, context: { resolve, reject } }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // If we do not have socket updates available, then trigger an\n            //    // update event with this data.\n            //    if (this.AB.Network.type() != \"socket\") {\n            //       this.AB.emit(\"ab.datacollection.update\", {\n            //          objectId: this.object.id,\n            //          data,\n            //       });\n            //    }\n            // })\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err /*, data */) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            // this.normalizeData(data);\n            resolve(true);\n            // what about checking for socket updates?\n         });\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestBatch(),\n               params: {\n                  rowIds,\n                  values,\n               },\n            },\n            { key: jobID, context: {} }\n         )\n            // .then(() => {\n            //    resolve(true);\n            // })\n            .catch(reject);\n      });\n   }\n};\n","//\n// ABModelAPI\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelAPI extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond = {}) {\n      cond.isAPI = true;\n      cond.url = this.object?.request?.url;\n\n      return super.findAll(cond);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchCreate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   async create(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.create() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.delete() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.update() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchUpdate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","//\n// ABModelQuery\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelQuery extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchCreate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.create() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.delete() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.update() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchUpdate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","const ABObjectCore = require(\"../core/ABObjectCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n// NOTE: this has been moved to NetworkRestSocket:\n//\n// // Start listening for server events for object updates and call triggerEvent as the callback\n// if (typeof io != \"undefined\") {\n//    io.socket.on(\"ab.object.update\", function (msg) {\n//       AB.emit(\"ab.object.update\", {\n//          objectId: msg.objectId,\n//          data: msg.data,\n//       });\n//    });\n// } else {\n//    console.error(\"TODO: ABObject: configure Socket.io\");\n// }\n\n// io.socket.on(\"ab.object.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObject extends ABObjectCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen for our ABFields.\"definition.updated\"\n      this.fields().forEach((f) => {\n         f.on(\"definition.updated\", (field) => {\n            // create a new Field with the updated def\n            var def = this.AB.definitionByID(field.id);\n            if (!def) return;\n\n            var newField = this.AB.fieldNew(def, this);\n\n            // we want to keep the same fieldID order:\n            var newFields = [];\n            this.fields().forEach((f) => {\n               if (f.id === field.id) {\n                  newFields.push(newField);\n                  return;\n               }\n               newFields.push(f);\n            });\n\n            this._fields = newFields;\n         });\n      });\n\n      // listen\n      // this.AB.on(\"ab.object.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our migrateXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this._handler_object_migrate = (context, err, response) => {\n         // NOTE:\n         var pending = this._pendingNetworkRequests?.[context.uuid];\n         if (err) {\n            pending?.reject(err);\n            return;\n         }\n         pending?.resolve(response);\n      };\n      this.AB.Network.on(\"object.migrate\", this._handler_object_migrate);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABObject.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.objectByID(this.id);\n\n      // prevent doing this multiple times:\n      if (this._pendingNetworkRequests) {\n         // remove object.migrate listener\n         this.AB.Network.removeListener(\n            \"object.migrate\",\n            this._handler_object_migrate\n         );\n\n         // transfer the pending network requests\n         newObj._pendingNetworkRequests = this._pendingNetworkRequests;\n         this._pendingNetworkRequests = null;\n      }\n\n      return newObj;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\tlabelFormat: 'xxxxx',\n\t\t\tisImported: 1/0,\n\t\t\tisExternal: 1/0,\n\t\t\turlPath:'string',\n\t\t\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\t\t\ttranslations:[\n\t\t\t\t{}\n\t\t\t],\n\t\t\tfields:[\n\t\t\t\t{ABDataField}\n\t\t\t]\n\t\t}\n\t\t*/\n\n      super.fromValues(attributes);\n\n      if (this.workspaceViews) this.workspaceViews.fromObj(attributes);\n   }\n\n   //// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.objects((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Object name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      // Check the common validations:\n      // TODO:\n      // if (!inputValidator.validate(values.label)) {\n      // \t_logic.buttonSaveEnable();\n      // \treturn false;\n      // }\n\n      return validator;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(data) {\n      var validator = this.AB.Validation.validator();\n      this.fields().forEach((f) => {\n         // check if value was passed, if so validate it\n         if (data.hasOwnProperty(f.columnName)) f.isValidData(data, validator);\n      });\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @param {obj} values  the initial values for this field.\n    *\t\t\t\t\t\t{ key:'{string}'} is required\n    * @return {ABField}\n    */\n   // fieldNew ( values ) {\n   // \t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n   // \treturn ABFieldManager.newField( values, this );\n   // }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      /*\n        return new Promise((resolve, reject) => {\n            // Remove the import object, then its model will not be destroyed\n            if (this.isImported) {\n                this.application\n                    .objectDestroy(this)\n                    .catch(reject)\n                    .then(() => {\n                        resolve();\n                    });\n\n                return;\n            }\n\n            // OK, some of our Fields have special follow up actions that need to be\n            // considered when they no longer exist, so before we simply drop this\n            // object/table, drop each of our fields and give them a chance to clean up\n            // what needs cleaning up.\n\n            // ==> More work, but safer.\n            var fieldDrops = [];\n            this.fields().forEach((f) => {\n                fieldDrops.push(f.destroy());\n            });\n\n            Promise.all(fieldDrops)\n                .then(() => {\n                    return new Promise((next, err) => {\n                        // now drop our table\n                        // NOTE: our .migrateXXX() routines expect the object to currently exist\n                        // in the DB before we perform the DB operations.  So we need to\n                        // .migrateDrop()  before we actually .objectDestroy() this.\n                        this.migrateDrop()\n                            .then(() => {\n                                // finally remove us from the application storage\n                                return this.application.objectDestroy(this);\n                            })\n                            .then(next)\n                            .catch(err);\n                    });\n                })\n\n                // flag .disable to queries who contains this removed object\n                .then(() => {\n                    return new Promise((next, err) => {\n                        this.application\n                            .queries(\n                                (q) =>\n                                    q.objects((o) => o.id == this.id).length > 0\n                            )\n                            .forEach((q) => {\n                                q._objects = q.objects((o) => o.id != this.id);\n\n                                q.disabled = true;\n                            });\n\n                        next();\n                    });\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n */\n\n      var removeFromApplications = () => {\n         var allRemoves = [];\n         this.AB.applications().forEach((app) => {\n            allRemoves.push(app.objectRemove(this));\n         });\n         return Promise.all(allRemoves);\n      };\n\n      var disableRelatedQueries = () => {\n         return new Promise((next /*, err */) => {\n            this.AB.queries(\n               (q) => q.objects((o) => o.id == this.id).length > 0\n            ).forEach((q) => {\n               // q._objects = q.objects((o) => o.id != this.id);\n\n               q.disabled = true;\n            });\n\n            next();\n         });\n      };\n\n      try {\n         // 1) remove us from all Application:\n         await removeFromApplications();\n\n         // 2) disable any connected Queries\n         await disableRelatedQueries();\n\n         // if an imported Object (FederatedTable, Existing Table, etc...)\n         // then skip this step\n         if (this.isImported) {\n            return Promise.resolve();\n         }\n\n         // time to remove my table:\n         // NOTE: our .migrateXXX() routines expect the object to currently exist\n         // in the DB before we perform the DB operations.  So we need to\n         // .migrateDrop()  before we actually .destroy() this.\n         await this.migrateDrop();\n\n         // now remove my definition\n\n         // start with my fields:\n         var fieldDrops = [];\n\n         // Only ABObjects should attempt any fieldDrops.\n         // ABObjectQueries can safely skip this step:\n         if (this.type == \"object\") {\n            var allFields = this.fields();\n            this._fields = []; // clear our field counter so we don't retrigger\n            // this.save() on each field.destroy();\n\n            allFields.forEach((f) => {\n               fieldDrops.push(f.destroy());\n            });\n         }\n         await Promise.all(fieldDrops);\n\n         await super.destroy();\n         this.emit(\"destroyed\");\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.destroy(): error destroying object.\",\n         });\n      }\n\n      // return Promise.resolve()\n      //    .then(() => {\n      //       // 1) remove us from all Application:\n      //       return removeFromApplications();\n      //    })\n      //    .then(() => {\n      //       // 2) disable any connected Queries\n      //       return disableRelatedQueries();\n      //    })\n      //    .then(() => {\n      //       // if an imported Object (FederatedTable, Existing Table, etc...)\n      //       // then skip this step\n      //       if (this.isImported) {\n      //          return Promise.resolve();\n      //       }\n\n      //       // time to remove my table:\n      //       // NOTE: our .migrateXXX() routines expect the object to currently exist\n      //       // in the DB before we perform the DB operations.  So we need to\n      //       // .migrateDrop()  before we actually .destroy() this.\n      //       return this.migrateDrop();\n      //    })\n      //    .then(() => {\n      //       // now remove my definition\n\n      //       // start with my fields:\n      //       var fieldDrops = [];\n\n      //       // Only ABObjects should attempt any fieldDrops.\n      //       // ABObjectQueries can safely skip this step:\n      //       if (this.type == \"object\") {\n      //          var allFields = this.fields();\n      //          this._fields = []; // clear our field counter so we don't retrigger\n      //          // this.save() on each field.destroy();\n\n      //          allFields.forEach((f) => {\n      //             fieldDrops.push(f.destroy());\n      //          });\n      //       }\n\n      //       return Promise.all(fieldDrops)\n      //          .then(() => {\n      //             // now me.\n      //             return super.destroy();\n      //          })\n      //          .then(() => {\n      //             this.emit(\"destroyed\");\n      //          });\n      //    });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      var isAdd = false;\n\n      // if this is our initial save()\n      if (!this.id) {\n         this.label = this.label || this.name;\n         isAdd = true;\n      }\n\n      try {\n         await super.save();\n         if (isAdd && !skipMigrate) {\n            await this.migrateCreate();\n         }\n         return this;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.save()\",\n            obj: this.toObj(),\n         });\n         throw err;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.objectWorkspaceViews = this.workspaceViews?.toObj();\n\n      return result;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network.post(\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   migrateDrop() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network[\"delete\"](\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth /*, oldWidth */) {\n      var fieldID = null;\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == columnName) {\n            fieldID = this._fields[i].id;\n            break;\n            // this._fields[i].settings.width = newWidth;\n         }\n      }\n\n      // Johnny: This is better but still not right.  the ABObject should not be\n      // storing sizes for field widths.  That is a function of the UI and which\n      // Grid is being displayed.  THAT GRID should be storing a column width\n      // locally.\n      // TODO: once we have v2 in place.\n\n      var fieldSettings = this.AB.localSettings(fieldID);\n      fieldSettings = fieldSettings || {};\n      fieldSettings.width = newWidth;\n\n      return this.AB.localSettings(fieldID, fieldSettings);\n      // return this.save();\n   }\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      summaryColumns = summaryColumns || [];\n      countColumns = countColumns || [];\n\n      var headers = [];\n      // var columnNameLookup = {};\n\n      // get the header for each of our fields:\n      this.fields().forEach((f) => {\n         var header = f.columnHeader({\n            isObjectWorkspace: isObjectWorkspace,\n            editable: isEditable,\n         });\n\n         if (isEditable) {\n            header.validationRules = f.settings.validationRules;\n         }\n\n         header.alias = f.alias || undefined; // query type\n         header.fieldID = f.id;\n         // header.fieldURL = f.urlPointer();\n\n         // if the field specifies a width\n         if (f.settings.width != 0) {\n            header.width = f.settings.width;\n         }\n\n         // if the User has already updated a local width for this\n         var fieldSettings = this.AB.localSettings(f.id);\n         if (fieldSettings && fieldSettings.width) {\n            if (!header.width || fieldSettings.width > header.width) {\n               // set column width to the customized width\n               header.width = fieldSettings.width;\n            }\n         }\n\n         if (!header.width) {\n            // set column width to adjust:true by default;\n            header.adjust = true;\n         }\n\n         // add the summary footer\n         if (summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               header.footer = { content: \"totalColumn\", field: f };\n            } else {\n               header.footer = { content: \"summColumn\" };\n            }\n         }\n         // add the count footer\n         else if (countColumns.indexOf(f.id) > -1)\n            header.footer = { content: \"countColumn\" };\n\n         headers.push(header);\n         // columnNameLookup[header.id] = f.columnName; // name => id\n      });\n\n      // update our headers with any settings applied in the Object Workspace\n      /*\n      // In v2: this is handled by the ABDesigner\n      //\n      if (isObjectWorkspace) {\n         let hiddenFieldList = [];\n\n         if (hiddenFieldNames && hiddenFieldNames.length > 0)\n            hiddenFieldList = hiddenFieldNames;\n         // else if (this.workspaceHiddenFields)\n         //    hiddenFieldList = this.workspaceHiddenFields;\n\n         if (hiddenFieldList.length > 0) {\n            hiddenFieldList.forEach((hfID) => {\n               headers.forEach((h) => {\n                  if (columnNameLookup[h.id] == hfID) {\n                     h.hidden = true;\n                  }\n               });\n            });\n         }\n      }\n      */\n\n      return headers;\n   }\n\n   // after a component has rendered, tell each of our fields to perform\n   // any custom display operations\n   // @param {Webix.DataStore} data a webix datastore of all the rows effected\n   //        by the render.\n   customDisplays(data, App, DataTable, rowIds, isEditable) {\n      if (!data || !data.getFirstId) return;\n\n      // var fields = this.fields(f => this.workspaceHiddenFields.indexOf(f.columnName) < 0);\n      let fields = [];\n      DataTable.eachColumn((columnName) => {\n         let field = this.fields((f) => f.columnName == columnName)[0];\n         if (field) fields.push(field);\n      });\n\n      if (rowIds != null) {\n         rowIds.forEach((id) => {\n            let row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  let node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n         });\n      } else {\n         let id = data.getFirstId();\n         while (id) {\n            var row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  var node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n            id = data.getNextId(id);\n         }\n      }\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = `{${defaultField.id}}`;\n         else\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`; // show id of row\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   currentView() {\n      return this.workspaceViews.getCurrentView();\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.fields().forEach((f) => {\n         allWarnings = allWarnings.concat(f.warnings());\n      });\n\n      this.indexes().forEach((i) => {\n         allWarnings = allWarnings.concat(i.warnings());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allFields = this.fields();\n\n      if (allFields.length == 0) {\n         this.warningsMessage(\"has no fields\");\n      }\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      (this._unknownIndex || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown index id[${id}]`);\n      });\n\n      allFields.forEach((f) => {\n         f.warningsEval();\n      });\n\n      this.indexes().forEach((i) => {\n         i.warningsEval();\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Object[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n      // this.emit(\"warning\", warnMsg, data);\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const atomicjs = require(\"atomicjs\");\nconst ABObjectApiCore = require(\"../core/ABObjectApiCore\");\n\nmodule.exports = class ABObjectApi extends ABObjectApiCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   async fetchData(insertDataMax = 20) {\n      if (this.isFetched) return;\n\n      const headers = this.headers;\n\n      const response = await atomicjs(this.request.url, {\n         method: this.request.verb,\n         headers,\n         data: {},\n         timeout: null,\n         withCredentials: false,\n      });\n\n      let parsedResponse = this.dataFromKey(response);\n\n      const model = this.model();\n\n      if (parsedResponse.length == null || parsedResponse.length === 0) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[f.columnName];\n         });\n\n         await model.create(data);\n\n         return;\n      }\n\n      let pendingModelCreate = [];\n\n      for (let i = 0; i < parsedResponse.length; i++) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[i][f.columnName];\n         });\n\n         pendingModelCreate.push(model.create(data));\n\n         if (pendingModelCreate % insertDataMax === 0)\n            await Promise.all(pendingModelCreate);\n      }\n\n      if (pendingModelCreate.length > 0) await Promise.all(pendingModelCreate);\n\n      this.isFetched = true;\n\n      await this.save();\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      return await super.save(true);\n   }\n};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectExternal\n * These are ABObjects that ... (might need to be refactored out?)\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectExternal extends ABObject {};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectImport\n * These are ABObjects that were Imported from existing Tables in the\n * system.\n *\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectImport extends ABObject {};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nconst ABObjectQueryCore = require(\"../core/ABObjectQueryCore\");\n\nvar ABFactory = null;\nif (typeof io != \"undefined\") {\n   io.socket.on(\"ab.query.update\", function (msg) {\n      if (ABFactory) {\n         ABFactory.emit(\"ab.query.update\", {\n            queryId: msg.queryId,\n            data: msg.data,\n         });\n      } else {\n         console.error(\n            \"ABObjectQuery:: received io.socket msg before ABFactory is defined\"\n         );\n         console.error(\"TODO: move this to ABFactory!\");\n      }\n   });\n} else {\n   console.error(\"TODO: install socket.io client for sails updates.\");\n}\n\n// io.socket.on(\"ab.query.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObjectQuery extends ABObjectQueryCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      if (!ABFactory) {\n         ABFactory = AB;\n      }\n      // listen\n      this.AB.on(\"ab.query.update\", (data) => {\n         if (this.id == data.queryId) this.fromValues(data.data);\n      });\n\n      // .fromValues() should already have been called in super()\n      // so now add in our conditionScan()\n      // NOTE: this can be folded into the Core once filterComplex\n      // is fully implemented and not on Platform only.\n\n      // now scan our conditions to make sure they are\n      // 1) reference fields that exist in our Query\n      // 2) completely filled out conditions.\n      this.conditionScan(this.where);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObjectQuery\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   // destroy() {\n   //    return super.destroy().then(() => {\n   //       console.error(\"Move .queryRemove() to Appbuilder Designer.\");\n   //       // return this.AB.queryRemove(this);\n   //    });\n   // }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObjectQuery with it's parent ABApplication\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   // async save() {\n   //    try {\n   //       await super.save();\n   //       return this;\n   //    } catch (err) {\n   //       this.AB.notify.developer(err, {\n   //          context: \"ABObjectQuery.save()\",\n   //          query: this.toObj(),\n   //       });\n   //       throw err;\n   //    }\n   // }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *             { }\n    * @param {bool} shouldAliasColumn\n    *        should we add the object alias to the columnNames?\n    *        this is primarily used on the web client\n    */\n   importFields(fieldSettings) {\n      super.importFields(fieldSettings);\n\n      this._fields.forEach((fieldEntry) => {\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         fieldEntry.field.columnName = `${fieldEntry.alias}.${fieldEntry.field.columnName}`;\n      });\n   }\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth, oldWidth) {\n      let field = this.fields((f) => f.columnName == columnName)[0];\n      if (field) {\n         field.settings.width = newWidth;\n\n         return this.save();\n      } else {\n         return Promise.resolve();\n      }\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      var headers = super.columnHeaders(\n         isObjectWorkspace,\n         isEditable,\n         summaryColumns,\n         countColumns,\n         hiddenFieldNames\n      );\n\n      headers.forEach((h) => {\n         // pull object by alias\n         let object = this.objectByAlias(h.alias);\n         if (!object) return;\n\n         let field = object.fieldByID(h.fieldID);\n         if (!field) return;\n\n         // NOTE: query v1\n         let alias = \"\";\n         if (Array.isArray(this.joins())) {\n            alias = field.object.name;\n         } else {\n            alias = h.alias;\n         }\n\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         h.id = `${alias}.${field.columnName}`;\n\n         // label\n         if (this.settings && this.settings.hidePrefix) {\n            h.header = `${field.label || \"\"}`;\n         } else {\n            h.header = `${field.object.label || \"\"}.${field.label || \"\"}`;\n         }\n\n         // icon\n         if (field.settings && field.settings.showIcon) {\n            h.header = `<span class=\"webix_icon fa fa-${field.fieldIcon()}\"></span>${\n               h.header\n            }`;\n         }\n\n         // If this query supports grouping, then add folder icon to display in grid\n         if (this.isGroup) {\n            let originTemplate = h.template;\n\n            h.template = (item, common) => {\n               if (item[h.id])\n                  return (\n                     common.icon(item, common) +\n                     (originTemplate\n                        ? originTemplate(item, common, item[h.id])\n                        : item[h.id])\n                  );\n               else return \"\";\n            };\n         }\n\n         h.adjust = true;\n         h.minWidth = 220;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @method conditionScan()\n    * Scan the provided condition object and determine if there are any\n    * configuration issues.\n    * @param {obj} rule\n    *        the QueryBuilder rule that we are scanning.\n    * @param {array} listWarnings\n    *        An array of warnings that we should add our notices to.\n    */\n   conditionScan(rule) {\n      if (!rule) {\n         return;\n      }\n\n      if (rule.glue) {\n         (rule.rules || []).forEach((r) => {\n            this.conditionScan(r);\n         });\n         return;\n      }\n\n      // 1) we need to have any key as one of our fields.\n      let field = this.fieldByID(rule.key);\n      if (!field && rule.key != \"this_object\") {\n         this.warningsMessage(\n            \"condition does not reference one of our fields\",\n            {\n               rule,\n            }\n         );\n      }\n\n      // 2) completely filled out conditions.\n      if (!this._conditionCheck) {\n         this._conditionCheck = this.AB.filterComplexNew(\n            `${this.id}_conditionCheck`\n         );\n         // {FilterComplex} ._conditionCheck\n         // has our .isConditionComplete() method.\n      }\n      if (!this._conditionCheck.isConditionComplete(rule)) {\n         this.warningsMessage(\"incomplete condition definition\", {\n            rule,\n         });\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      this.conditionScan(this.where);\n\n      /// include importFields() warnings:\n      this.__missingObject.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: could not resolve object[${\n               f.objectID\n            }] for fieldSetting ${JSON.stringify(f)}`,\n            {\n               fieldInfo: f,\n            }\n         );\n      });\n\n      this.__missingFields.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: Object[${f.objID}] could not find field[${\n               f.fieldID\n            }] for fieldSetting ${JSON.stringify(f.fieldInfo)}`,\n            {\n               object: f.objID,\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__cantFilter.forEach((f) => {\n         this.warningsMessage(\n            `Field[${f.field.id}] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] did not pass .canFilterField`,\n            {\n               field: f.field.toObj(),\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__duplicateFields.forEach((f) => {\n         this.warningsMessage(\n            `Field[${\n               f.fieldInfo.fieldID\n            }] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] is a duplicate`,\n            {\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__linkProblems.forEach((f) => {\n         this.warningsMessage(f.message, f.data);\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Query[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABProcessCore = require(\"../core/ABProcessCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcess extends ABProcessCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this._unknownShapes = [];\n      // {array} [ BPMN:Shape, ... ]\n      // Generic Shapes that are added to the Process are registered here.\n      // We will list these as warnings to the ABDesigner.\n\n      // listen\n      this.AB.on(\"ab.abprocess.update\", (data) => {\n         if (this.id == data.objectId) this.fromValues(data.data);\n      });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // remove all my Elements\n      var allElements = this.elements();\n      var allDestroy = [];\n      allElements.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  // allow normal processing to contine now:\n                  resolve();\n               })\n               .then(() => {\n                  // in the background\n                  // remove this reference from ALL Applications that link\n                  // to me:\n                  console.error(\n                     \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n                  );\n                  var appsWithProcess = this.AB.applications().find((a) => {\n                     return a.hasProcess(this);\n                  });\n                  if (appsWithProcess.length > 0) {\n                     appsWithProcess.forEach((a) => {\n                        a.processRemove(this);\n                     });\n                  }\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // if this is an update:\n      // if (this.id) {\n      // \treturn ABDefinition.update(this.id, this.toDefinition());\n      // } else {\n\n      // \treturn ABDefinition.create(this.toDefinition());\n      // }\n\n      // make sure all our tasks have save()ed.\n      var allSaves = [];\n      var allTasks = this.elements();\n      allTasks.forEach((t) => {\n         allSaves.push(t.save());\n      });\n      return Promise.all(allSaves).then(() => {\n         // now we can save our Process definition\n         return this.toDefinition()\n            .save()\n            .then((data) => {\n               // if I didn't have an .id then this was a create()\n               // and I need to update my data with the generated .id\n\n               if (!this.id) {\n                  this.id = data.id;\n               }\n\n               // Also, our embedded elements now all have .ids\n               // where they might not have before.  So now\n               // rebuild our this._elements hash with all id\n               var _new = {};\n               let _old = this._elements;\n               Object.keys(this._elements).forEach((k) => {\n                  _new[this._elements[k].id] = this._elements[k];\n               });\n               this._elements = _new;\n\n               // check to see if an update happened and then make\n               // sure we have that saved.\n               let needSave = false;\n               Object.keys(_new).forEach((k) => {\n                  if (!_old[k]) {\n                     needSave = true;\n                  }\n               });\n\n               if (needSave) {\n                  return this.save();\n               }\n            });\n      });\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.processes((o) => {\n            return o.name.toLowerCase() == this.name.toLowerCase();\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcess[OBJ]}\n    */\n   elementNewForModelDefinition(element) {\n      var task = this.AB.processElementNewForModelDefinition(element, this);\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   /**\n    * @method unknownShape()\n    * store a reference to a BPMN Shape that is in our XML diagram,\n    * but we don't have an element for.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShape(shape) {\n      this.unknownShapeRemove(shape);\n      this._unknownShapes.push(shape);\n   }\n\n   /**\n    * @method unknownShapeRemove()\n    * make sure we no longer track the provided BPMN Shape as an unknown shape.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShapeRemove(shape) {\n      this._unknownShapes = this._unknownShapes.filter((s) => s.id != shape.id);\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.elements().forEach((e) => {\n         e.warningsEval();\n         allWarnings = allWarnings.concat(e.warnings());\n      });\n\n      if (this.elements().length == 0) {\n         allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      }\n\n      // perform a check of our xml document to see if we have any unknown\n      // shapes\n      if (!this._DOMParser) {\n         if (window.DOMParser) {\n            // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n            this._DOMParser = function (xmlStr) {\n               return new window.DOMParser().parseFromString(\n                  xmlStr,\n                  \"text/xml\"\n               );\n            };\n         } else if (\n            typeof window.ActiveXObject != \"undefined\" &&\n            new window.ActiveXObject(\"Microsoft.XMLDOM\")\n         ) {\n            this._DOMParser = function (xmlStr) {\n               var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n               xmlDoc.async = \"false\";\n               xmlDoc.loadXML(xmlStr);\n               return xmlDoc;\n            };\n         } else {\n            throw new Error(\"No XML parser found\");\n         }\n      }\n\n      // find any references to our generic shapes\n      let xml = this._DOMParser(this.xmlDefinition);\n      const genericShapes = [\n         \"bpmn2:startEvent\",\n         \"bpmn2:task\",\n         \"bpmn2:endEvent\",\n      ];\n      genericShapes.forEach((s) => {\n         let allElements = xml.getElementsByTagName(s);\n         for (let x = 0; x < allElements.length; x++) {\n            // if we don't know about this shape\n            let ele = allElements[x];\n            let myEle = this.elementForDiagramID(allElements[x].id);\n            if (!myEle) {\n               this.unknownShape(allElements[x]);\n            }\n         }\n      });\n\n      // if any unknown shapes have been reported:\n      if (this._unknownShapes.length) {\n         allWarnings.push({\n            message: \"Generic Tasks still undefined.\",\n            data: {},\n         });\n      }\n\n      return allWarnings;\n   }\n};\n","const ABStepCore = require(\"../core/ABStepCore\");\n\n// let L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABStep extends ABStepCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // debugger;\n\n      return new Promise((resolve, reject) => {\n         this.toDefinition()\n            .destroy()\n            .then(() => {\n               resolve();\n            })\n            .catch((err) => {\n               reject(err);\n            });\n      });\n\n      // remove all my Elements\n      // var allElements = this.elements();\n      // var allDestroy = [];\n      // allElements.forEach((e) => {\n      //    allDestroy.push(e.destroy());\n      // });\n\n      // return Promise.all(allDestroy).then(() => {\n      //    // now remove myself\n      //    return new Promise((resolve, reject) => {\n      //       this.toDefinition()\n      //          .destroy()\n      //          .then(() => {\n      //             // allow normal processing to contine now:\n      //             resolve();\n      //          })\n      //          .then(() => {\n      //             // in the background\n      //             // remove this reference from ALL Applications that link\n      //             // to me:\n      //             console.error(\n      //                \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n      //             );\n      //             var appsWithProcess = this.AB.applications().find((a) => {\n      //                return a.hasProcess(this);\n      //             });\n      //             if (appsWithProcess.length > 0) {\n      //                appsWithProcess.forEach((a) => {\n      //                   a.processRemove(this);\n      //                });\n      //             }\n      //          })\n      //          .catch((err) => {\n      //             reject(err);\n      //          });\n      //    });\n      // });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      // debugger;\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n};\n","const ABViewManagerCore = require(\"../core/ABViewManagerCore\");\n\nmodule.exports = class ABViewManager extends ABViewManagerCore {};\n","const ABViewManagerMobileCore = require(\"../core/ABViewManagerMobileCore\");\n\nmodule.exports = class ABViewManagerMobile extends ABViewManagerMobileCore {};\n","var L = null;\n// multilingual Label fn()\n\nmodule.exports = class CSVImporter {\n   constructor(Label) {\n      // {ABMultilingual.label()} function.\n      //\n      if (!L) {\n         L = Label;\n\n         // if this was a v1: App param:\n         if (Label.Label) {\n            L = Label.Label;\n         }\n      }\n   }\n\n   /**\n    * @method getSeparateItems()\n    * Return the options of how the CSV values are separated.\n    * @return {array}  [ {id, value} ... ]\n    */\n   getSeparateItems() {\n      return [\n         { id: \",\", value: L(\"Comma (,)\") },\n         { id: \"\\t\", value: L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\") },\n         { id: \";\", value: L(\"Semicolon (;)\") },\n         { id: \"s\", value: L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    * @param {*} fileInfo\n    *        https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo)) return Promise.reject();\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new window.FileReader();\n         reader.onload = (e) => {\n            let result = [];\n\n            // split lines\n            let dataRows = reader.result\n               .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n               .filter((row) => row && row.length > 0);\n\n            // split columns\n            (dataRows || []).forEach((row) => {\n               let dataCols = [];\n               if (separatedBy == \",\") {\n                  // NOTE: if the file contains ,, .match() can not reconize this empty string\n                  row = row.replace(/,,/g, \", ,\");\n\n                  // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n                  dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n               } else {\n                  dataCols = row.split(separatedBy);\n               }\n\n               result.push(dataCols.map((dCol) => this.reformat(dCol)));\n            });\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method getGuessDataType\n    * return our best guess of what type of data for the requested column.\n    * @param {array} dataRows\n    *        The data we are evaluating:\n    *        [\n    *           [\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    *           [\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t ]\n    * @param colIndex {Number}\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         // {various} the data pulled from the requested row/column\n         repeatNum = 10;\n      // {integer} how many rows do we want to scan trying to find a value\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data == null || data == \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         // determine which type of string this might be:\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","const FilterComplexCore = require(\"../core/FilterComplexCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n/**\n * @function _toInternal()\n * translate our external QB conditions into our internal format that\n * makes the cond.rule unique by adding the field.id to the rule.\n * @param {obj} cond - {\n *                         rules: [\n *                            {\n *                               alias: string || undefined,\n *                               key: uuid,\n *                               rule: string,\n *                               value: object,\n *                            }\n *                         ]\n *                      }\n *        the QB condition format we use exernally in our AB system.\n */\nfunction _toInternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.key) {\n      // Convert to format\n      // {\n      //    glue: \"and\",\n      //    rules: [\n      //       {\n      //          field: \"test_col\",\n      //          condition: { type: \"greater\", filter: 100 },\n      //       },\n      //    ],\n      // }\n      const field = fields.filter((f) => f.id == cond.key)[0];\n      cond.field = field?.id;\n\n      cond.condition = {\n         type: cond.rule,\n         filter: cond.value,\n      };\n\n      if (Array.isArray(cond.value)) cond.includes = cond.value;\n      else cond.includes = cond.value?.split?.(\",\") ?? [];\n\n      if (field?.key == \"date\" || field?.key == \"datetime\") {\n         cond.condition.filter = cond.condition.filter\n            ? AB.rules.toDate(cond.condition.filter)\n            : null;\n\n         cond.includes = cond.includes.map((v) => AB.rules.toDate(v));\n      }\n\n      delete cond.key;\n      delete cond.rule;\n      delete cond.value;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toInternal(r, fields);\n      });\n   }\n}\n\n/**\n * @function _toExternal()\n * translate our internal QB conditions into our external format that\n * where the cond.rule no longer has the field.id.\n * @param {obj} cond - {\n *                         glue: \"and\",\n *                         rules: [\n *                            {\n *                               field: \"test_col\",\n *                               condition: { type: \"greater\", filter: 100 },\n *                            },\n *                         ],\n *                      }\n *        the QB condition format we use internally\n */\nfunction _toExternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.field) {\n      let field = fields.filter((f) => f.id == cond.field)[0];\n      // cond.alias = alias || undefined;\n      cond.key = field?.id ?? cond.field;\n      cond.condition = cond.condition ?? {};\n      cond.rule = cond.condition.type;\n\n      let values =\n         cond.includes.map((v) => (v instanceof Date ? v.toISOString() : v)) ??\n         [];\n\n      // Convert multi-values to a string\n      if (cond.condition.filter) {\n         if (cond.condition.filter instanceof Date) {\n            if (values.indexOf(cond.condition.filter.toISOString()) < 0) {\n               values.push(cond.condition.filter);\n            }\n         } else if (values.indexOf(cond.condition.filter) < 0)\n            values.push(cond.condition.filter);\n      }\n\n      cond.value = values\n         .map((v) => {\n            // Convert date format\n            if (field && (field.key == \"date\" || field.key == \"datetime\"))\n               return field.exportValue(new Date(v));\n\n            return v;\n         })\n         .join(\",\");\n\n      delete cond.field;\n      delete cond.type;\n      delete cond.includes;\n      delete cond.condition;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toExternal(r, fields);\n      });\n   }\n}\n\nmodule.exports = class FilterComplex extends FilterComplexCore {\n   constructor(idBase, AB, options = {}) {\n      idBase = idBase ?? \"ab_filterComplex\";\n\n      super(idBase, AB);\n\n      this._options = options ?? {};\n\n      this._initComplete = false;\n      // {bool}\n      // trying to prevent multiple .init() from being called due to\n      // various ways of initializing the component.\n\n      this.observing = false;\n      // {bool}\n      // try to prevent multiple observers generating >1 \"changed\"\n      // event.\n\n      let labels = (this.labels = {\n         common: (AB._App ?? {}).labels,\n         component: {\n            and: L(\"And\"),\n            or: L(\"Or\"),\n\n            thisObject: L(\"This Object\"),\n            inQuery: L(\"In Query\"),\n            notInQuery: L(\"Not In Query\"),\n            inQueryField: L(\"By Query Field\"),\n            notInQueryField: L(\"Not By Query Field\"),\n\n            inQueryFieldQueryPlaceholder: L(\"Choose a Query\"),\n            inQueryFieldFieldPlaceholder: L(\"Choose a Field\"),\n\n            sameAsUser: L(\"Same As User\"),\n            notSameAsUser: L(\"Not Same As User\"),\n\n            sameAsField: L(\"Same As Field\"),\n            notSameAsField: L(\"Not Field\"),\n\n            inDataCollection: L(\"In Data Collection\"),\n            notInDataCollection: L(\"Not In Data Collection\"),\n\n            containsCondition: L(\"contains\"),\n            notContainsCondition: L(\"doesn't contain\"),\n            isCondition: L(\"is\"),\n            isNotCondition: L(\"is not\"),\n            isEmpty: L(\"is empty\"),\n            isNotEmpty: L(\"is not empty\"),\n\n            beforeCondition: L(\"is before\"),\n            afterCondition: L(\"is after\"),\n            onOrBeforeCondition: L(\"is on or before\"),\n            onOrAfterCondition: L(\"is on or after\"),\n            beforeCurrentCondition: L(\"is before current date\"),\n            afterCurrentCondition: L(\"is after current date\"),\n            onOrBeforeCurrentCondition: L(\"is on or before current date\"),\n            onOrAfterCurrentCondition: L(\"is on or after current date\"),\n            onLastDaysCondition: L(\"last ... days\"),\n            onNextDaysCondition: L(\"next ... days\"),\n\n            equalCondition: L(\":\"),\n            notEqualCondition: L(\"≠\"),\n            lessThanCondition: L(\"<\"),\n            moreThanCondition: L(\">\"),\n            lessThanOrEqualCondition: L(\"≤\"),\n            moreThanOrEqualCondition: L(\"≥\"),\n\n            equalListCondition: L(\"equals\"),\n            notEqualListCondition: L(\"does not equal\"),\n\n            checkedCondition: L(\"is checked\"),\n            notCheckedCondition: L(\"is unchecked\"),\n\n            isCurrentUserCondition: L(\"is current user\"),\n            isNotCurrentUserCondition: L(\"is not current user\"),\n            containsCurrentUserCondition: L(\"contains current user\"),\n            notContainsCurrentUserCondition: L(\"does not contain current user\"),\n\n            contextDefaultOption: L(\"choose option\"),\n            equalsProcessValue: L(\"equals process value\"),\n            notEqualsProcessValueCondition: L(\"not equals process value\"),\n            inProcessValueCondition: L(\"in process value\"),\n            notInProcessValueCondition: L(\"not in process value\"),\n         },\n      });\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         popup: this.unique(`${idBase}_popup`),\n         querybuilder: this.unique(`${idBase}_querybuilder`),\n         save: this.unique(`${idBase}_save`),\n      });\n\n      // Set current username\n      this.Account.username = this.AB.Account.username();\n\n      this._settings.recordRuleFieldOptions = [];\n\n      // webix UI definition:\n      this.ui = {\n         rows: [\n            {\n               view: \"layout\",\n               type: \"clean\",\n               borderless: this._options.borderless ?? true,\n               rows: [\n                  {\n                     id: ids.querybuilder,\n                     view: \"query\",\n                     data: () => [],\n                     // data: async (field) => await this.pullOptions(field),\n                     fields: [],\n                     disabled: true,\n                     height: this._options.height,\n                  },\n               ],\n            },\n            {\n               id: ids.save,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Save\"),\n               hidden: this._options.isSaveHidden ?? false,\n               click: () => {\n                  if (this.myPopup) this.myPopup.hide();\n                  this.emit(\"save\", this.getValue());\n               },\n            },\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options) {\n      if (this._initComplete) return;\n\n      super.init(options);\n\n      const el = $$(this.ids.querybuilder);\n\n      if (el) {\n         if (!this.observing) {\n            this.__blockOnChange = true;\n            el.getState().$observe(\"value\", (v) => {\n               if (this.__blockOnChange) return false;\n\n               this.emit(\"changed\", this.getValue());\n            });\n            this.__blockOnChange = false;\n\n            // HACK!! The process of setting the $observe() is actually\n            // calling the cb() when set.  This is clearing our .condition\n            // if we call init() after we have setValues(). which can happen\n            // when using the popUp() method.\n            let _cond = this.condition;\n            this.condition = _cond;\n            this.observing = true;\n         }\n         this._initComplete = true;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      let helper = () => true;\n\n      let $query = $$(this.ids.querybuilder);\n      if ($query) {\n         helper = $query.getFilterFunction();\n         return helper(rowData);\n      } else {\n         return super.isValid(rowData, condition);\n      }\n   }\n\n   /**\n    * @method isConditionComplete()\n    * Check a given condition entry and indicate if it is fully\n    * filled out.\n    * @param {obj} cond\n    *        The Condition object we are checking.  If a Macro\n    *        condition if provided: { glue:\"and\", rules:[] } then\n    *        this method will return True/False if All rules are\n    *        complete.\n    *        If an individual rule is provided, then it evaluates\n    *        the completness of that rule. { key, rule, value }\n    * @return {bool}\n    */\n   isConditionComplete(cond) {\n      if (!cond) return false;\n\n      let isComplete = true;\n      // start optimistically.\n\n      if (cond.glue) {\n         (cond.rules ?? []).forEach((r) => {\n            isComplete = isComplete && this.isConditionComplete(r);\n         });\n      } else {\n         // every condition needs a .key & .rule\n         if (!cond.key || cond.key == \"\") {\n            isComplete = false;\n         }\n\n         if (!cond.rule || cond.rule == \"\") {\n            isComplete = false;\n         }\n\n         if (isComplete) {\n            switch (cond.rule) {\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n               case \"same_as_user\":\n               case \"not_same_as_user\":\n               case \"less_current\":\n               case \"greater_current\":\n               case \"less_or_equal_current\":\n               case \"greater_or_equal_current\":\n               case \"is_empty\":\n               case \"is_not_empty\":\n               case \"checked\":\n               case \"unchecked\":\n                  // There are only a few rules that don't need a\n                  // value\n                  break;\n\n               default:\n                  // The rest do need a .value\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  break;\n            }\n         }\n      }\n\n      return isComplete;\n   }\n\n   setValue(settings) {\n      super.setValue(settings);\n      this.condition = settings;\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!settings) {\n            // Clear settings value of webix.query\n            el.define(\"value\", {\n               glue: \"and\",\n               rules: [],\n            });\n            return;\n         }\n\n         let qbSettings = this.AB.cloneDeep(settings);\n\n         // Settings should match a condition built upon our QB format:\n         // {\n         //    glue:\"and\",\n         //    rules:[\n         //       {\n         //          key:\"uuid\",\n         //          rule:\"\",\n         //          value:\"\"\n         //       }\n         //    ]\n         // }\n         // externally our key should be the field.id and the rules should be\n         // the \"contains\", \"not_contains\", \"equal\" ... keywords.\n         // However, internally, we convert these rules into .ids that are\n         // unique for each field (see uiInit()).  So when we bring in settings\n         // we need to translate them into our internal format:\n\n         _toInternal(qbSettings, this._Fields);\n\n         this.__blockOnChange = true;\n         el.define(\"value\", qbSettings);\n         this.__blockOnChange = false;\n      }\n   }\n\n   getValue() {\n      if ($$(this.ids.querybuilder)) {\n         let settings = this.AB.cloneDeep(\n            $$(this.ids.querybuilder).getState().value ?? {}\n         );\n\n         // what we pull out of the QB will have .rules in our internal format:\n         // {field.id}_{rule}  (see uiInit() )\n         // But we need to store them in our generic QB format for use outside\n         // our FilterComplex widget.\n         _toExternal(settings, this._Fields);\n         this.condition = settings;\n      }\n\n      return super.getValue();\n   }\n\n   fieldsLoad(fields = [], object = null) {\n      super.fieldsLoad(fields, object);\n      this.uiInit();\n   }\n\n   toShortHand() {\n      return \"Add Filters\";\n   }\n\n   uiInit() {\n      this.uiQueryCustomValue();\n\n      let el = $$(this.ids.querybuilder);\n      if (el) {\n         // Clear fields\n         while (el.config.fields.length > 0) {\n            el.config.fields.pop();\n         }\n         // Set fields\n         (this.fieldsToQB() ?? []).forEach((f) => {\n            el.config.fields.push(f);\n         });\n         if (el.config.fields.length) {\n            el.enable();\n         } else {\n            this.setValue(\"\");\n            el.disable();\n         }\n      }\n   }\n\n   // HACK: have to overwrite Webix Query's function to support our custom input requirement.\n   // HooWoo\n   uiQueryCustomValue() {\n      const $el = $$(this.ids.querybuilder);\n      if (!$el) return;\n\n      // window.query.views.filter.prototype.CreateFilter = (\n      $el.$app.require(\"jet-views\", \"filter\").prototype.CreateFilter = (\n         field,\n         type,\n         format,\n         conditions,\n         place\n      ) => {\n         let inputs = this.uiValue(field);\n\n         let ui = {\n            id: place.config.id,\n            view: \"filter\",\n            localId: \"filter\",\n            conditions: conditions,\n            field: field,\n            mode: type,\n            template: function (o) {\n               let str = o[field];\n               let parser =\n                  format ?? (type == \"date\" ? webix.i18n.dateFormatStr : null);\n               if (parser) str = parser(str);\n               return str;\n            },\n            inputs: inputs,\n            margin: 6,\n         };\n\n         let filter = webix.ui(ui, place);\n\n         // let data = [];\n         // const $query = $$(this.ids.querybuilder);\n         // if ($query) {\n         //    data = $query.app.getService(\"backend\").data(field);\n         // }\n         // filter.parse(data);\n\n         return filter;\n      };\n   }\n\n   uiValue(fieldColumnName) {\n      let result;\n\n      // Special case: this_object\n      if (fieldColumnName == \"this_object\") {\n         return []\n            .concat(this.uiQueryValue(\"this_object\"))\n            .concat(this.uiDataCollectionValue(\"this_object\"))\n            .concat(this.uiCustomValue(\"this_object\"))\n            .concat(this.uiContextValue(\"this_object\", \"uuid\"));\n      }\n\n      let field = (this._Fields ?? []).filter(\n         (f) => f.id == fieldColumnName\n      )[0];\n\n      switch (field?.key) {\n         case \"boolean\":\n            result = this.uiNoneValue(field);\n            break;\n         case \"connectObject\":\n            result = []\n               .concat(this.uiQueryValue(field))\n               .concat(this.uiUserValue(field))\n               .concat(this.uiDataCollectionValue(field))\n               .concat(this.uiContextValue(field))\n               .concat(this.uiNoneValue());\n            break;\n         case \"date\":\n         case \"datetime\":\n            result = [\"datepicker\", \"daterangepicker\"];\n            break;\n         case \"list\":\n            result = this.uiListValue(field);\n            break;\n         case \"user\":\n            result = []\n               .concat(this.uiNoneValue())\n               .concat(this.uiUserValue(field));\n            break;\n         // case \"number\":\n         //    result = [\"text\"];\n         //    break;\n         case \"string\":\n         case \"LongText\":\n         case \"email\":\n            result = this.uiNoneValue();\n            break;\n      }\n\n      // Add filter options to Custom index\n      const LinkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      if (\n         field?.settings?.isCustomFK &&\n         // 1:M\n         (LinkType == \"one:many\" ||\n            // 1:1 isSource = true\n            (LinkType == \"one:one\" && field?.settings?.isSource))\n      ) {\n         result = (result ?? []).concat(this.uiTextValue(field));\n      } else if (field?.key != \"connectObject\") {\n         result = (result ?? [])\n            .concat(this.uiTextValue(field))\n            .concat(this.uiQueryFieldValue(field))\n            .concat(this.uiContextValue(field));\n      }\n      // Special case: from Process builder\n      // .processFieldsLoad()\n      else if (fieldColumnName.indexOf(\"uuid\") > -1) {\n         result = this.uiContextValue(null, fieldColumnName);\n      }\n\n      if (this._settings.isRecordRule) {\n         result = (result ?? []).concat(this.uiRecordRuleValue(field));\n      }\n\n      result = (result ?? []).concat(this.uiCustomValue(field));\n\n      return result;\n   }\n\n   uiNoneValue() {\n      return [\n         {\n            batch: \"none\",\n            borderless: true,\n            view: \"template\",\n            template: \"\",\n         },\n      ];\n   }\n\n   uiBooleanValue(field) {\n      return [\n         {\n            batch: \"boolean\",\n            view: \"checkbox\",\n         },\n      ];\n   }\n\n   uiTextValue(field) {\n      return [\n         {\n            batch: \"text\",\n            view: \"text\",\n            on: {\n               onAfterRender: function () {\n                  // HACK: focus on webix.text and webix.textarea\n                  // Why!! If the parent layout has zIndex lower than 101,\n                  // then is not able to focus to webix.text and webix.textarea\n                  let $layout =\n                     this.queryView(function (a) {\n                        return !a.getParentView();\n                     }, \"parent\") ?? this;\n                  $layout.$view.style.zIndex = 202;\n               },\n            },\n         },\n      ];\n   }\n\n   uiQueryValue(field) {\n      let options = [];\n\n      let isQueryField =\n         this._QueryFields?.filter((f) => f.id == field.id).length > 0;\n\n      // populate the list of Queries for this_object:\n      if (field == \"this_object\" && this._Object) {\n         options = this.queries((q) => q.canFilterObject(this._Object));\n      }\n      // populate the list of Queries for a query field\n      else if (isQueryField) {\n         options = this.queries(\n            (q) =>\n               (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n               q.canFilterObject(field.datasourceLink)\n         );\n      }\n\n      options?.forEach((q) => {\n         options.push({\n            id: q.id,\n            value: q.label,\n         });\n      });\n\n      return [\n         {\n            batch: \"query\",\n            view: \"combo\",\n            options: options ?? [],\n         },\n      ];\n   }\n\n   uiListValue(field) {\n      return [\n         {\n            batch: \"list\",\n            view: \"combo\",\n            options: field?.settings?.options?.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiUserValue(field) {\n      return [\n         {\n            batch: \"user\",\n            view: \"combo\",\n            options: this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiDataCollectionValue(field) {\n      let linkObjectId;\n      if (field == \"this_object\" && this._Object) {\n         linkObjectId = this._Object.id;\n      } else {\n         linkObjectId = field?.settings?.linkObject;\n      }\n\n      return [\n         {\n            batch: \"datacollection\",\n            view: \"combo\",\n            options: linkObjectId\n               ? this.AB.datacollections(\n                    (dc) => dc?.datasource?.id == linkObjectId\n                 ).map((dc) => {\n                    return {\n                       id: dc.id,\n                       value: dc.label,\n                    };\n                 })\n               : [],\n         },\n      ];\n   }\n\n   uiQueryFieldValue(field) {\n      return [\n         {\n            batch: \"queryField\",\n            view: \"combo\",\n            placeholder: this.labels.component.inQueryFieldQueryPlaceholder,\n            options: this.queries(\n               (q) => this._Object == null || q.id != this._Object.id\n            ).map((q) => {\n               return {\n                  id: q.id,\n                  value: q.label,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiRecordRuleValue(field) {\n      return [\n         {\n            batch: \"recordRule\",\n            view: \"select\",\n            options: this._settings.recordRuleFieldOptions ?? [],\n         },\n      ];\n   }\n\n   uiContextValue(field, processFieldKey = null) {\n      const processFields = (this._ProcessFields ?? [])\n         .filter((pField) => {\n            if (!pField) return false;\n\n            let result = false;\n            switch (field) {\n               case \"this_object\":\n                  result =\n                     this._Object.id === pField.object?.id && !pField.field;\n\n                  break;\n\n               default:\n                  switch (field.key) {\n                     case \"boolean\":\n                        result = [\"boolean\"].includes(pField.field?.key);\n\n                        break;\n\n                     case \"connectObject\":\n                        result =\n                           field.settings.linkObject ===\n                           (pField.field?.object.id ?? pField.object.id);\n\n                        if (!field.settings.isCustomFK) {\n                           result = result && !pField.field;\n\n                           break;\n                        }\n\n                        result =\n                           result &&\n                           (field.settings.indexField ||\n                              field.settings.indexField2) === pField.field?.id;\n\n                        break;\n\n                     case \"date\":\n                     case \"datetime\":\n                        result = [\"date\", \"datetime\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"calculate\":\n                     case \"formula\":\n                     case \"number\":\n                        result = [\"calculate\", \"formula\", \"number\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"string\":\n                     case \"LongText\":\n                     case \"email\":\n                     case \"AutoIndex\":\n                     case \"list\":\n                        result = [\n                           \"string\",\n                           \"LongText\",\n                           \"email\",\n                           \"AutoIndex\",\n                           \"list\",\n                        ].includes(pField.field?.key);\n\n                        break;\n\n                     case \"user\":\n                        result = [\"user\"].includes(pField.field?.key);\n\n                        break;\n\n                     default:\n                        if (pField.key) {\n                           // uuid\n                           const processFieldId = pField.key.split(\".\").pop();\n\n                           result =\n                              processFieldId === field.id ||\n                              processFieldId === field.key ||\n                              processFieldId === processFieldKey ||\n                              pField.key === processFieldKey;\n                        }\n\n                        break;\n                  }\n\n                  break;\n            }\n\n            return result;\n         })\n         .map((e) => {\n            return {\n               id: e.key,\n               value: L(\"context({0})\", [e.label]),\n            };\n         });\n\n      if (!processFields) return [];\n\n      return [\n         {\n            batch: \"context\",\n            view: \"select\",\n            options: [\n               {\n                  id: \"empty\",\n                  value: this.labels.component.contextDefaultOption,\n               },\n               ...processFields,\n            ],\n         },\n      ];\n   }\n\n   uiCustomValue(field) {\n      if (!field) return [];\n\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id ?? field] ?? {};\n      return options.values ?? [];\n   }\n\n   popUp(...options) {\n      const condition = Object.assign({}, this.condition);\n\n      if (!this.myPopup) {\n         let ui = {\n            id: this.ids.popup,\n            view: \"popup\",\n            height: 400,\n            width: 800,\n            body: this.ui,\n         };\n\n         if (!$$(this.ids.popup)) {\n            this.myPopup = webix.ui(ui);\n            this.init(this._settings);\n            if (this._Fields) {\n               this.fieldsLoad(this._Fields, this._Object);\n            }\n\n            // NOTE: do this, before the .setValue() operation, as we need to have\n            // our fields and filters defined BEFORE a setValue() is performed.\n            // this.uiInit();\n\n            if (condition) {\n               this.setValue(condition);\n            }\n\n            this.myPopup.show(...options);\n         } else {\n            $$(this.ids.popup).show(...options);\n         }\n      } else {\n         this.myPopup.show(...options);\n      }\n   }\n\n   /**\n    * @method addCustomOption\n    *\n    * @param {string|uuid} fieldId\n    * @param {Object} options - {\n    *                               conditions: [],\n    *                               values: []\n    *                           }\n    */\n   addCustomOption(fieldId, options = {}) {\n      this._customOptions = this._customOptions ?? {};\n      this._customOptions[fieldId] = options;\n   }\n};\n","const RowFilterCore = require(\"../core/RowFilterCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class RowFilter extends RowFilterCore {\n   constructor(App, idBase, AB) {\n      super(App, idBase, AB);\n\n      console.error(\"TODO: Switch RowFilter => FilterComplex\");\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         component: this.unique(`${idBase}_rowFilter`),\n         filterForm: this.unique(`${idBase}_rowFilter_form`),\n         addNewFilter: this.unique(`${idBase}_rowFilter_addNewFilter`),\n\n         glue: this.unique(`${idBase}_rowFilter_glue`),\n         field: this.unique(`${idBase}_rowFilter_field`),\n         rule: this.unique(`${idBase}_rowFilter_rule`),\n         inputValue: this.unique(`${idBase}_rowFilter_inputValue`),\n\n         queryCombo: this.unique(`${idBase}_rowFilter_queryCombo`),\n         queryFieldCombo: this.unique(`${idBase}_rowFilter_queryFieldCombo`),\n         queryFieldComboQuery: this.unique(\n            `${idBase}_rowFilter_queryFieldComboQuery`\n         ),\n         queryFieldComboField: this.unique(\n            `${idBase}_rowFilter_queryFieldComboField`\n         ),\n         fieldMatch: this.unique(`${idBase}_rowFilter_fieldMatchCombo`),\n\n         dataCollection: this.unique(`${idBase}_rowFilter_dataCollection`),\n\n         listOptions: this.unique(`${idBase}_rowFilter_listOptions`),\n\n         datePicker: this.unique(`${idBase}_rowFilter_datePicker`),\n      });\n\n      // Set current username\n      // this.Account.username = this.AB.Account.username();\n\n      var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      // Default options list to push to all fields\n      this.queryFieldOptions = [\n         {\n            value: L(\"By Query Field\"),\n            id: \"in_query_field\",\n         },\n         {\n            value: L(\"Not In Query\"),\n            id: \"not_in_query_field\",\n         },\n      ];\n\n      this.recordRuleOptions = [];\n      this.recordRuleFieldOptions = [];\n\n      let _logic = this._logic || {};\n\n      /**\n       * @method getFieldList\n       * return field list to render options\n       */\n      _logic.getFieldList = () => {\n         return (this._Fields || []).map((f) => {\n            let label = f.label;\n\n            // include object's name to options\n            if (this._settings.showObjectName && f.object) {\n               label = f.object.label + \".\" + f.label;\n            }\n\n            return {\n               id: f.id,\n               value: label,\n               alias: f.alias || undefined, // ABObjectQuery\n            };\n         });\n      };\n\n      _logic.getFilterUI = () => {\n         let instance = this;\n         let config_settings = this.config_settings || {};\n\n         return {\n            id: \"f\" + webix.uid(),\n            isolate: true,\n            cols: [\n               {\n                  // Add / Or\n                  view: \"combo\",\n                  id: ids.glue,\n                  width: 80,\n                  value: config_settings.glue || \"and\",\n                  options: [\n                     {\n                        value: L(\"And\"),\n                        id: \"and\",\n                     },\n                     {\n                        value: L(\"Or\"),\n                        id: \"or\",\n                     },\n                  ],\n                  on: {\n                     onChange: function (newVal, oldVal) {\n                        _logic.selectCombineCondition(newVal);\n                     },\n                  },\n               },\n               {\n                  // Field list\n                  view: \"combo\",\n                  id: ids.field,\n                  suggest: {\n                     on: {\n                        onBeforeShow: function () {\n                           this.define(\"width\", 400);\n                           this.resize();\n                        },\n                     },\n                     data: _logic.getFieldList(),\n                  },\n                  on: {\n                     onChange: function (columnId) {\n                        var $viewCond = this.getParentView();\n                        _logic.selectField(columnId, $viewCond);\n                     },\n                  },\n               },\n               // Comparer\n               {\n                  id: ids.rule,\n                  width: 220,\n                  cells: [\n                     {},\n                     // Query\n                     {\n                        batch: \"query\",\n                        view: \"combo\",\n                        value: \"in_query\",\n                        options: [\n                           {\n                              value: L(\"In Query\"),\n                              id: \"in_query\",\n                           },\n                           {\n                              value: L(\"Not In Query\"),\n                              id: \"not_in_query\",\n                           },\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is empty\"),\n                              id: \"is_empty\",\n                           },\n                           {\n                              value: L(\"is not empty\"),\n                              id: \"is_not_empty\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                           {\n                              value: L(\"In Data Collection\"),\n                              id: \"in_data_collection\",\n                           },\n                           {\n                              value: L(\"Not In Data Collection\"),\n                              id: \"not_in_data_collection\",\n                           },\n                        ].concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n\n                     // Date\n                     {\n                        batch: \"date\",\n                        view: \"combo\",\n                        value: \"less\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is before\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\"is after\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"is on or before\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"is on or after\"),\n                              id: \"greater_or_equal\",\n                           },\n                           {\n                              value: L(\"is before current date\"),\n                              id: \"less_current\",\n                           },\n                           {\n                              value: L(\"is after current date\"),\n                              id: \"greater_current\",\n                           },\n                           {\n                              value: L(\"is on or before current date\"),\n                              id: \"less_or_equal_current\",\n                           },\n                           {\n                              value: L(\"is on or after current date\"),\n                              id: \"greater_or_equal_current\",\n                           },\n                           {\n                              value: L(\"last ... days\"),\n                              id: \"last_days\",\n                           },\n                           {\n                              value: L(\"next ... days\"),\n                              id: \"next_days\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\":\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"≠\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"<\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\">\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"≤\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"≥\"),\n                              id: \"greater_or_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        value: \"is_current_user\",\n                        options: [\n                           {\n                              value: L(\"is current user\"),\n                              id: \"is_current_user\",\n                           },\n                           {\n                              value: L(\"is not current user\"),\n                              id: \"is_not_current_user\",\n                           },\n                           {\n                              value: L(\"contains current user\"),\n                              id: \"contain_current_user\",\n                           },\n                           {\n                              value: L(\"does not contain current user\"),\n                              id: \"not_contain_current_user\",\n                           },\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               // Value\n               {\n                  id: ids.inputValue,\n                  isolate: true,\n                  cells: [\n                     {\n                        batch: \"empty\",\n                     },\n\n                     // Query\n                     {\n                        id: ids.queryCombo,\n\n                        batch: \"query\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Query Field\n                     {\n                        id: ids.queryFieldCombo,\n                        batch: \"queryField\",\n                        rows: [\n                           {\n                              id: ids.queryFieldComboQuery,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Query\"),\n                              on: {\n                                 onChange: function (value) {\n                                    var $viewComparer = this.getParentView();\n                                    var $viewCond = $viewComparer\n                                       .getParentView()\n                                       .getParentView();\n                                    _logic.onChangeQueryFieldCombo(\n                                       value,\n                                       $viewCond\n                                    );\n\n                                    _logic.onChange();\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.queryFieldComboField,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Field\"),\n                              on: {\n                                 onChange: _logic.onChange,\n                              },\n                           },\n                        ],\n                     },\n\n                     // Field match\n                     {\n                        id: ids.fieldMatch,\n                        batch: \"fieldMatch\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Data collection\n                     {\n                        id: ids.dataCollection,\n                        batch: \"dataCollection\",\n                        view: \"richselect\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Date\n                     {\n                        // inputView.format = field.getDateFormat();\n                        batch: \"date\",\n                        id: ids.datePicker,\n                        view: \"datepicker\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"text\",\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onTimedKeyPress: function () {\n                              if (this.validate()) _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        id: ids.listOptions,\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"checkbox\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        options: this.AB.Account.userList().map((u) => {\n                           return {\n                              id: u.username,\n                              value: u.username,\n                           };\n                        }),\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewForm = this.getFormView();\n\n                     var indexView = $viewForm.index(this.getParentView());\n\n                     _logic.addNewFilter(indexView + 1);\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewCond = this.getParentView();\n\n                     _logic.removeNewFilter($viewCond);\n                  },\n               },\n            ],\n         };\n      };\n\n      _logic.getAddButtonUI = () => {\n         return {\n            view: \"button\",\n            id: ids.addNewFilter,\n            css: \"webix_primary\",\n            type: \"form\",\n            label: L(\"Add a filter\"),\n            click: () => {\n               _logic.addNewFilter();\n            },\n         };\n      };\n\n      _logic.addNewFilter = (index, fieldId) => {\n         var viewId;\n         var ui = _logic.getFilterUI();\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            viewId = $viewForm.addView(ui, index);\n\n            _logic.toggleAddNewButton();\n\n            // select a option of field\n            if (fieldId) _logic.selectField(fieldId, $$(viewId), true);\n         }\n\n         return viewId;\n      };\n\n      _logic.removeNewFilter = function ($viewCond) {\n         var $viewForm = $$(ids.filterForm);\n\n         $viewForm.removeView($viewCond);\n\n         _logic.toggleAddNewButton();\n\n         _logic.onChange();\n      };\n\n      _logic.toggleAddNewButton = function () {\n         if (!$$(ids.filterForm)) return;\n\n         // Show \"Add new filter\" button\n         if ($$(ids.filterForm).getChildViews().length < 1) {\n            $$(ids.filterForm).hide();\n            $$(ids.addNewFilter).show();\n         }\n         // Hide \"Add new filter\" button\n         else {\n            $$(ids.filterForm).show();\n            $$(ids.addNewFilter).hide();\n         }\n      };\n\n      _logic.selectCombineCondition = (val, ignoreNotify) => {\n         // define combine value to configuration\n         this.config_settings.glue = val;\n\n         // update value of every combine conditions\n         var $viewConds = $$(ids.filterForm).getChildViews();\n         $viewConds.forEach((v) => {\n            if (v.$$ && v.$$(ids.glue)) v.$$(ids.glue).setValue(val);\n         });\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.selectField = (columnId, $viewCond, ignoreNotify) => {\n         if (!this._Fields) return;\n\n         var field = this._Fields.filter((f) => f.id == columnId)[0];\n         if (!field) return;\n\n         // switch view\n         batchName = field.key;\n         if (field.id == \"this_object\") batchName = \"query\";\n         // Special this object query\n         else if (batchName == \"LongText\" || batchName == \"combined\")\n            batchName = \"string\";\n         else if (field.key == \"formula\") batchName = \"number\";\n         var isQueryField =\n            this._QueryFields.filter((f) => {\n               return f.id == field.id;\n            }).length > 0;\n         if (isQueryField) {\n            // we chose a connectField which is now a Query type\n            batchName = \"query\";\n         }\n         $viewCond.$$(ids.rule).showBatch(batchName);\n         $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n         let options = [];\n         let Queries = [];\n\n         // populate the list of Queries for this_object:\n         if (field.id == \"this_object\" && this._Object) {\n            Queries = this.queries((q) => q.canFilterObject(this._Object));\n         }\n         // populate the list of Queries for a query field\n         else if (isQueryField) {\n            Queries = this.queries((q) => {\n               return (\n                  (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n                  q.canFilterObject(field.datasourceLink)\n               );\n            });\n         }\n\n         Queries.forEach((q) => {\n            options.push({\n               id: q.id,\n               value: q.label,\n            });\n         });\n         $viewCond\n            .$$(ids.inputValue)\n            .$$(ids.queryCombo)\n            .define(\"options\", options);\n         $viewCond.$$(ids.inputValue).$$(ids.queryCombo).refresh();\n\n         // populate options of list\n         if (field.key == \"list\") {\n            let listOptions = field.settings.options.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.listOptions)\n               .define(\"options\", listOptions);\n            $viewCond.$$(ids.inputValue).$$(ids.listOptions).refresh();\n         }\n         // set format of datepicker\n         else if (field.key == \"date\") {\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.datePicker)\n               .define(\"format\", field.getFormat());\n            $viewCond.$$(ids.inputValue).$$(ids.datePicker).refresh();\n         }\n\n         var rule = null,\n            ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.getList) {\n            let defaultOpt = ($viewComparer.getList().config.data || [])[0];\n            if (defaultOpt) {\n               $viewComparer.setValue(defaultOpt.id);\n            }\n\n            // rule = $viewComparer.getValue();\n            // if (rule == \"in_query_field\" || rule == \"not_in_query_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n            // } else if (rule == \"same_as_field\" || rule == \"not_same_as_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n            // }\n         }\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.onChangeRule = (rule, $viewCond, notify = false) => {\n         switch (rule) {\n            case \"contains\":\n            case \"not_contains\":\n            case \"equals\":\n            case \"not_equal\":\n               // For \"connect_fields\" search by CUSTOM index value\n               if (batchName == \"query\") {\n                  $viewCond.$$(ids.inputValue).showBatch(\"string\");\n               }\n               // If want to call notify or call .onChange(), then pass notify is true.\n               // _logic.onChange();\n               break;\n\n            case \"is_current_user\":\n            case \"is_not_current_user\":\n            case \"contain_current_user\":\n            case \"not_contain_current_user\":\n            case \"same_as_user\":\n            case \"not_same_as_user\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n               // clear and disable the value field\n               $viewCond.$$(ids.inputValue).showBatch(\"empty\");\n               _logic.onChange();\n               break;\n\n            case \"last_days\":\n            case \"next_days\":\n               // Show the number input\n               $viewCond.$$(ids.inputValue).showBatch(\"number\");\n               break;\n\n            case \"in_query_field\":\n            case \"not_in_query_field\":\n               // populate the list of Queries for this_object:\n               var options = [];\n\n               // Get all application's queries\n               this.queries(\n                  (q) => this._Object == null || q.id != this._Object.id\n               ).forEach((q) => {\n                  options.push({\n                     id: q.id,\n                     value: q.label,\n                  });\n               });\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .define(\"options\", options);\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n               break;\n\n            case \"same_as_field\":\n            case \"not_same_as_field\":\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.fieldMatch)\n                  .define(\"options\", this.recordRuleFieldOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.fieldMatch).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n               break;\n\n            case \"in_data_collection\":\n            case \"not_in_data_collection\": {\n               let dcOptions = [];\n\n               // pull data collection list\n\n               // get id of the link object\n               let linkObjectId,\n                  columnId = $viewCond.$$(ids.field).getValue();\n               if (columnId == \"this_object\" && this._Object) {\n                  linkObjectId = this._Object.id;\n               } else {\n                  let field = this._Fields.filter((f) => f.id == columnId)[0];\n                  if (field) linkObjectId = field.settings.linkObject;\n               }\n\n               if (this._Application && linkObjectId) {\n                  this._Application\n                     .datacollections(\n                        (dc) =>\n                           dc.datasource && dc.datasource.id == linkObjectId\n                     )\n                     .forEach((dc) => {\n                        dcOptions.push({\n                           id: dc.id,\n                           value: dc.label,\n                        });\n                     });\n               }\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.dataCollection)\n                  .define(\"options\", dcOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.dataCollection).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"dataCollection\");\n               break;\n            }\n\n            default:\n               // Show the default value inputs\n               $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n               if (notify) _logic.onChange();\n\n               break;\n         }\n      };\n\n      _logic.onChangeQueryFieldCombo = (value, $viewCond) => {\n         // populate the list of Queries for this_object:\n         let options = [];\n         // Get all queries fields\n         let Query = this.queries((q) => {\n            return q.id == value;\n         })[0];\n         if (Query) {\n            Query.fields((f) => {\n               return !f.isConnection;\n            }).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: q.object.label + \".\" + q.label,\n               });\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.queryFieldComboField)\n               .define(\"options\", options);\n            $viewCond.$$(ids.inputValue).$$(ids.queryFieldComboField).refresh();\n         }\n\n         // _logic.onChange();\n      };\n\n      _logic.onChange = () => {\n         if (!this.__blockOnChange) {\n            // refresh config settings before notify\n            _logic.getValue();\n\n            console.warn(\"convert RowFilter.callback.onChange() to .emit()\");\n            _logic.callbacks.onChange();\n            this.emit(\"change\");\n         }\n\n         return false;\n      };\n\n      _logic.blockOnChange = () => {\n         this.__blockOnChange = true;\n      };\n\n      _logic.unblockOnChange = () => {\n         this.__blockOnChange = false;\n      };\n\n      /**\n       * @method getValue\n       *\n       * @return {JSON} -\n       * {\n       * \t\tglue: '', // 'and', 'or'\n       *\t\trules: [\n       *\t\t\t{\n       *\t\t\t\tkey:\t'column name',\n       *\t\t\t\trule:\t'rule',\n       *\t\t\t\tvalue:\t'value'\n       *\t\t\t}\n       *\t\t]\n       * }\n       */\n      _logic.getValue = () => {\n         let config_settings = {\n            glue: \"and\",\n            rules: [],\n         };\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            $viewForm.getChildViews().forEach(($viewCond, index) => {\n               if (index == 0) {\n                  config_settings.glue = $viewCond.$$(ids.glue).getValue();\n               }\n\n               var $fieldElem = $viewCond.$$(ids.field);\n               if (!$fieldElem) return;\n\n               /* field id */\n               var fieldId = $fieldElem.getValue();\n               if (!fieldId) return;\n\n               /* alias */\n               var alias;\n               var selectedOpt = $viewCond\n                  .$$(ids.field)\n                  .getPopup()\n                  .config.body.data.filter((opt) => opt.id == fieldId)[0];\n               if (selectedOpt) alias = selectedOpt.alias || undefined;\n\n               /* rule */\n               var rule = null,\n                  ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n                  $viewComparer = $viewCond\n                     .$$(ids.rule)\n                     .queryView({ id: ruleViewId });\n               if ($viewComparer && $viewComparer.getValue)\n                  rule = $viewComparer.getValue();\n\n               /* value */\n               var value = null,\n                  valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n                  $viewConditionValue = $viewCond\n                     .$$(ids.inputValue)\n                     .queryView({ id: valueViewId });\n               if ($viewConditionValue && $viewConditionValue.getValue) {\n                  value = $viewConditionValue.getValue();\n               } else if (\n                  $viewConditionValue &&\n                  $viewConditionValue.getChildViews()\n               ) {\n                  var vals = [];\n                  $viewConditionValue.getChildViews().forEach((element) => {\n                     vals.push($$(element).getValue());\n                  });\n                  value = vals.join(\":\");\n               }\n\n               // Convert date format\n               if (value instanceof Date) {\n                  let dateField = this._Fields.filter(\n                     (f) => f.id == fieldId\n                  )[0];\n                  if (dateField) {\n                     value = dateField.exportValue(value);\n                  } else {\n                     value = value.toISOString();\n                  }\n               }\n\n               config_settings.rules.push({\n                  alias: alias || undefined,\n                  key: fieldId,\n                  rule: rule,\n                  value: value,\n               });\n            });\n         }\n\n         this.config_settings = config_settings;\n\n         return this.config_settings;\n      };\n\n      // webix UI definition:\n      this.ui = {\n         id: ids.component,\n         rows: [\n            {\n               view: \"form\",\n               id: ids.filterForm,\n               hidden: true,\n               elements: [],\n            },\n            _logic.getAddButtonUI(),\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options = {}) {\n      super.init(options);\n\n      // register our callbacks:\n      for (var c in this._logic.callbacks) {\n         this._logic.callbacks[c] = options[c] || this._logic.callbacks[c];\n      }\n\n      if (options.showObjectName)\n         this._settings.showObjectName = options.showObjectName;\n\n      if (options.isRecordRule) {\n         this.recordRuleOptions = [\n            {\n               value: L(\"Same As Field\"),\n               id: \"same_as_field\",\n            },\n            {\n               value: L(\"Not Field\"),\n               id: \"not_same_as_field\",\n            },\n         ];\n         this.recordRuleFieldOptions = options.fieldOptions;\n      }\n   }\n\n   setValue(settings) {\n      settings = settings || {};\n\n      super.setValue(settings);\n\n      let ids = this.ids;\n      let logic = this._logic;\n\n      // block .onChange event\n      logic.blockOnChange();\n\n      let config_settings = this.AB.cloneDeep(settings);\n      config_settings.rules = config_settings.rules || [];\n\n      // Redraw form with no elements\n      var $viewForm = $$(ids.filterForm);\n      if ($viewForm) webix.ui([], $viewForm);\n\n      // Add \"new filter\" button\n      if (config_settings.rules.length == 0) {\n         logic.toggleAddNewButton();\n      }\n\n      config_settings.rules.forEach((f) => {\n         var viewId = logic.addNewFilter(),\n            $viewCond = $$(viewId);\n\n         if ($viewCond == null) return;\n\n         var field = this._Fields.filter((col) => col.id == f.key)[0];\n\n         // \"and\" \"or\"\n         $viewCond.$$(ids.glue).define(\"value\", config_settings.glue);\n         $viewCond.$$(ids.glue).refresh();\n\n         // Select Field\n         $viewCond.$$(ids.field).define(\"value\", f.key);\n         $viewCond.$$(ids.field).refresh();\n         logic.selectField(f.key, $viewCond, true);\n\n         // Comparer\n         var ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.setValue) {\n            $viewComparer.define(\"value\", f.rule);\n            $viewComparer.refresh();\n         }\n\n         // if (f.rule == \"in_query_field\" || f.rule == \"not_in_query_field\" || f.rule == \"same_as_field\" || f.rule == \"not_same_as_field\") {\n         $viewCond.blockEvent();\n         logic.onChangeRule(f.rule, $viewCond);\n         $viewCond.unblockEvent();\n         // }\n\n         // Input\n         var valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n            $viewConditionValue = $viewCond\n               .$$(ids.inputValue)\n               .queryView({ id: valueViewId });\n         if ($viewConditionValue && $viewConditionValue.setValue) {\n            // convert to Date object\n            if (\n               field &&\n               field.key == \"date\" &&\n               f.value &&\n               (f.rule == \"less\" ||\n                  f.rule == \"greater\" ||\n                  f.rule == \"less_or_equal\" ||\n                  f.rule == \"greater_or_equal\")\n            ) {\n               $viewConditionValue.define(\"value\", new Date(f.value));\n            } else {\n               $viewConditionValue.define(\"value\", f.value);\n            }\n\n            $viewConditionValue.refresh();\n         } else if (\n            $viewConditionValue &&\n            $viewConditionValue.getChildViews()\n         ) {\n            let vals = (f.value || \"\").split(\":\");\n            let index = 0;\n            $viewConditionValue.getChildViews().forEach((element) => {\n               $$(element).blockEvent();\n               $$(element).setValue(vals[index]);\n               if (index == 0) {\n                  logic.onChangeQueryFieldCombo(vals[index], $viewCond);\n               }\n               $$(element).unblockEvent();\n               // $$(element).refresh();\n               index++;\n            });\n         }\n\n         if (field && field.key == \"user\") {\n            $viewCond.blockEvent();\n            logic.onChangeRule(f.rule, $viewCond);\n            $viewCond.blockEvent();\n         }\n      });\n\n      // unblock .onChange event\n      logic.unblockOnChange();\n   }\n\n   /**\n    * @method isComplete()\n    * returns a truthy value representing whether or not our current condition\n    * expression is fully completed.  Then externally checks can be made to\n    * verify if the data is complete.\n    * @return {bool}\n    */\n   isComplete() {\n      if (!this._completeConditions) {\n         this._completeConditions = this.AB.filterComplexNew(\n            `${this.ids.component}_iscomplete`\n         );\n      }\n\n      return this._completeConditions.isConditionComplete(this.getValue());\n   }\n};\n","// const ABComponent = require(\"./ABComponent\");\nimport ClassUI from \"../../ui/ClassUI\";\nconst ABViewForm = require(\"../platform/views/ABViewForm\");\n\nlet L = null;\n\nclass RowUpdater extends ClassUI {\n   constructor(idBase, AB) {\n      super(idBase, {\n         form: `${idBase}_rowUpdaterForm`,\n         addNew: `${idBase}_rowUpdaterAddNew`,\n         field: `${idBase}_rowUpdaterField`,\n      });\n\n      this.idBase = idBase;\n\n      this._Object = null;\n      // {ABObject}\n      // The ABObject we are building a form for.\n\n      this._mockFormWidget = null;\n      // {ABViewForm}\n      // When building our form components to display, they need a\n      // ABViewForm to be associated with.\n\n      this.AB = AB;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   /**\n    * @method uiItem()\n    * Return the webix description of a new field/value row.\n    * @return {json}\n    */\n   uiItem() {\n      const self = this;\n\n      return {\n         rows: [\n            {\n               view: \"layout\",\n               isolate: true,\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     id: this.ids.field,\n                     options: this.getFieldList(true),\n                     on: {\n                        onChange: async function (columnId) {\n                           const $viewItem = this.getParentView();\n\n                           await self.selectField(columnId, $viewItem);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"To\"),\n                  },\n                  {\n                     view: \"segmented\",\n                     value: \"custom\",\n                     height: 40,\n                     maxWidth: 160,\n                     options: [\n                        { id: \"custom\", value: L(\"Custom\") },\n                        { id: \"process\", value: L(\"Process\") },\n                     ],\n                     hidden:\n                        this._extendedOptions == null ||\n                        !this._extendedOptions.length,\n                     on: {\n                        onChange: function (val) {\n                           const $viewItem = this.getParentView();\n\n                           self.toggleCustomProcessOption(\n                              $viewItem,\n                              val == \"process\"\n                           );\n                        },\n                     },\n                  },\n                  // Field value\n                  {},\n                  // Extended value\n                  {\n                     hidden: true,\n                  },\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n\n                     click: function () {\n                        const $viewCond = this.getParentView().getParentView();\n\n                        self.removeItem($viewCond);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   /**\n    * @method ui()\n    * return the webix description of our Entry form.\n    * @return {json}\n    */\n   ui() {\n      // webix UI definition:\n      return {\n         rows: [\n            {\n               view: \"form\",\n               id: this.ids.form,\n               hidden: true,\n               borderless: true,\n               elements: [],\n            },\n            {\n               view: \"button\",\n               id: this.ids.addNew,\n               icon: \"fa fa-plus\",\n               type: \"iconButton\",\n               label: L(\"Add field to edit\"),\n               click: () => {\n                  this.addItem();\n               },\n            },\n         ],\n      };\n   }\n\n   init(AB) {\n      const $form = $$(this.ids.form);\n      if ($form) AB.Webix.extend($form, AB.Webix.ProgressBar);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method addItem()\n    * Add another field/value entry item to our form.\n    * @param {integer} index\n    *        which position in the list of form elements do we want to\n    *        insert the new row.\n    * @return {string} the webix .id of the new row we just added.\n    */\n   addItem(index) {\n      const $form = $$(this.ids.form);\n      const remainFields = this.getFieldList(true);\n\n      if (remainFields.length < 1) return;\n\n      const ui = this.uiItem();\n      const viewId = $form.addView(ui, index);\n\n      this.toggleForm();\n\n      return viewId;\n   }\n\n   /**\n    * @method getFieldList()\n    * Return an array of options in a webix.list format that represents the\n    * possible fields that can be selected on the current ABObject.\n    * @param {bool} excludeSelected\n    *        should we exclude from the list the fields that are ALREADY\n    *        displayed on the form?\n    * @return {array} [ { id, value }, ... ]\n    *         id: ABField.id\n    *         value: ABField.label\n    */\n   getFieldList(excludeSelected) {\n      let options = (this._Object.fields() || []).map((f) => {\n         return {\n            id: f.id,\n            value: f.label,\n         };\n      });\n\n      if (excludeSelected) {\n         const $form = $$(this.ids.form);\n\n         $form.getChildViews().forEach(($viewCond) => {\n            // Ignore \"Add new\" button\n            if (!$viewCond || !$viewCond.$$) return;\n\n            const $fieldElem = $viewCond.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            options = options.filter((opt) => opt.id != fieldId);\n         });\n      }\n      return options;\n   }\n\n   /**\n    * @method getValue\n    * Return an array of field:value results that have been entered on this\n    * form.\n    * @return {Array}\n    *         [\n    *            {\n    *               fieldId: {UUID}\n    *               isProcessValue: {Boolean} - If it is true, then value is from Process parameter\n    *               value: {Object}\n    *            },\n    *            ...\n    *         ]\n    */\n   getValue() {\n      const result = [];\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         $form.getChildViews().forEach(($viewContainer) => {\n            const $viewItem = $viewContainer.getChildViews()[0];\n\n            // Ignore \"Add new\" button\n            if (!$viewItem || !$viewItem.$$) return;\n\n            const $fieldElem = $viewItem.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            let $customValueElem = $viewItem.getChildViews()[4];\n            $customValueElem = this._pullInputElement($customValueElem);\n\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            if (!$customValueElem && !$processValueElem) return;\n\n            const fieldInfo = this._Object.fieldByID(fieldId);\n            const val = {\n               fieldId: fieldId,\n            };\n\n            // Custom value\n            if ($customValueElem && $customValueElem.isVisible()) {\n               if (\n                  fieldInfo.key === \"connectObject\" ||\n                  fieldInfo.key === \"user\"\n               )\n                  val.value = fieldInfo.getValue($customValueElem);\n               else if (\n                  fieldInfo.key === \"date\" ||\n                  fieldInfo.key === \"datetime\"\n               ) {\n                  const currDateCheckbox =\n                     $customValueElem.getChildViews()[0] ?? $customValueElem;\n\n                  if (currDateCheckbox.getValue() == true)\n                     val.value = \"ab-current-date\";\n                  else {\n                     const datePicker =\n                        $customValueElem.getChildViews()[1] ?? $customValueElem;\n\n                     val.value = fieldInfo.getValue(datePicker);\n                  }\n               }\n               // Get value from data field manager\n               else val.value = fieldInfo.getValue($customValueElem);\n            }\n            // Process value\n            else if ($processValueElem && $processValueElem.isVisible()) {\n               val.isProcessValue = true;\n               val.value = $processValueElem.getValue();\n            }\n\n            // Add to output\n            result.push(val);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method objectLoad\n    * Load the Object we are currently working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._Object = object;\n\n      this._mockApp = this.AB.applicationNew({});\n      this._mockFormWidget = new ABViewForm(\n         {\n            settings: {\n               showLabel: false,\n               labelWidth: 0,\n            },\n         },\n         this._mockApp // just need any ABApplication here\n      );\n      this._mockFormWidget.objectLoad(object);\n\n      this.setValue(null); // clear\n   }\n\n   /**\n    * @method removeItem\n    * Remove the current form row.\n    * @param {webix.view} $viewCond\n    *        This is the webix.view that contains the whole value row\n    *        we are removing.\n    */\n   removeItem($viewCond) {\n      const $form = $$(this.ids.form);\n\n      $form.removeView($viewCond);\n      this.toggleForm();\n   }\n\n   /**\n    * @method selectField\n    * Update the value display when a field is selected. Changing to a\n    * different field will change the types of values that can be entered.\n    * @param {string} columnId\n    *        The field.uuid of the object that was selected.\n    * @param {webix.view} $viewItem\n    *        The webix.view that contains the value expression of the field\n    *        that was selected.\n    */\n   async selectField(columnId, $viewItem) {\n      const field = this._Object.fieldByID(columnId);\n\n      if (!field) {\n         this.AB.notify.builder(\n            new Error(`could not find field for id[${columnId}]`),\n            {\n               context: \"RowUpdater.selectField() could not find a field\",\n               fieldID: columnId,\n            }\n         );\n\n         return;\n      }\n\n      const fieldComponent = field.formComponent(),\n         formFieldWidget = fieldComponent.newInstance(\n            this._mockApp,\n            this._mockFormWidget\n         ),\n         formFieldComponent = formFieldWidget.component(\n            this.AB._App,\n            this.idBase\n         );\n      const childViews = $viewItem.getChildViews();\n\n      let inputView =\n         typeof formFieldComponent.ui == \"function\"\n            ? formFieldComponent.ui()\n            : formFieldComponent.ui;\n\n      // Add extended value options\n      $viewItem.removeView(childViews[5]);\n\n      if (this._extendedOptions?.length)\n         $viewItem.addView(\n            {\n               view: \"richselect\",\n               options: this._extendedOptions,\n               hidden: true,\n            },\n            5\n         );\n      else\n         $viewItem.addView(\n            {\n               hidden: true,\n            },\n            5\n         );\n\n      await this.busy();\n\n      // WORKAROUND: add '[Current User]' option to the user data field\n      switch (field.key) {\n         case \"connectObject\":\n         case \"user\":\n            inputView = inputView.rows[0].rows[0];\n            inputView.suggest.body.data =\n               (await field.getOptions()).map((e) => {\n                  return {\n                     id: field.getRelationValue(e),\n                     value: e.text,\n                  };\n               }) ?? [];\n\n            if (field.key === \"user\")\n               inputView.suggest.body.data.unshift({\n                  id: \"ab-current-user\",\n                  value: \"ab-current-user\",\n                  // This one is saved with the \"value\" not \"id\".\n                  // value: L(\"Current User\"),\n               });\n\n            break;\n\n         case \"date\":\n         case \"datetime\":\n            inputView = {\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     labelWidth: 0,\n                     labelRight: L(\"Current Date/Time\"),\n                     on: {\n                        onChange: function (newVal) {\n                           const layout = this.getParentView();\n\n                           if (!layout) return;\n\n                           const datePicker = layout.getChildViews()[1];\n\n                           if (!datePicker) return;\n\n                           newVal ? datePicker.hide() : datePicker.show();\n                        },\n                     },\n                  },\n                  inputView,\n               ],\n            };\n\n            break;\n      }\n\n      // Change component to display value\n      $viewItem.removeView(childViews[4]);\n      $viewItem.addView(inputView, 4);\n\n      formFieldComponent.init();\n\n      // Show custom display of data field\n      if (field.customDisplay)\n         field.customDisplay({}, this.AB._App, childViews[4].$view);\n\n      this.toggleCustomProcessOption(\n         $viewItem,\n         childViews[3].getValue() === \"process\"\n      );\n      $$($viewItem).adjust();\n      $viewItem.getFormView().adjust();\n\n      this.ready();\n   }\n\n   /**\n    * @method setValue\n    * Given the previous settings, redraw the form with the field/value\n    * entries.\n    * @param {array} settings\n    *        [\n    *           {\n    *              fieldId: {UUID}\n    *              value: {Object|String}\n    *           }, ...\n    *        ]\n    */\n   setValue(settings) {\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      // Redraw form with no elements\n      webix.ui([], $form);\n\n      settings = settings || [];\n      if (settings.length < 1) return;\n\n      settings.forEach(async (item) => {\n         const $viewContainer = $$(this.addItem());\n         const $viewItem = $viewContainer.getChildViews()[0];\n         const $valueTypeButton = $viewItem.queryView(\n            { view: \"segmented\" },\n            \"self\"\n         );\n\n         $valueTypeButton.setValue(item.isProcessValue ? \"process\" : \"custom\");\n\n         const $field = $viewItem.$$(this.ids.field);\n\n         $field.define(\"value\", item.fieldId);\n         $field.refresh();\n\n         await this.selectField(item.fieldId, $viewItem);\n\n         const fieldInfo = this._Object.fieldByID(item.fieldId);\n\n         if (!fieldInfo) return;\n\n         // Set process value\n         if (item.isProcessValue) {\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            $processValueElem.setValue?.(item.value);\n\n            return;\n         }\n\n         // Set custom value\n         let $customValueElem = $viewItem.getChildViews()[4];\n         $customValueElem = this._pullInputElement($customValueElem);\n         const rowData = {};\n\n         rowData[fieldInfo.columnName] = item.value?.value ?? item.value;\n         fieldInfo.setValue($customValueElem, rowData);\n\n         // Set \"Current Date/Time\" check box\n         if (\n            (fieldInfo.key == \"date\" || fieldInfo.key == \"datetime\") &&\n            rowData[fieldInfo.columnName] == \"ab-current-date\" &&\n            $customValueElem.config.view == \"checkbox\"\n         ) {\n            $customValueElem.setValue(true);\n         }\n      });\n\n      this.toggleForm();\n   }\n\n   /**\n    * @method toggleForm\n    * decide if the form with the field/value elements should be displayed.\n    */\n   toggleForm() {\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         const childViews = $form.getChildViews();\n\n         if (childViews && childViews.length) $form.show();\n         else $form.hide();\n         $form.adjust();\n      }\n   }\n\n   setExtendedOptions(options) {\n      this._extendedOptions = options;\n   }\n\n   toggleCustomProcessOption($viewItem, showProcessOption) {\n      const $customOption = $viewItem.getChildViews()[4];\n      const $processOption = $viewItem.getChildViews()[5];\n\n      if (showProcessOption) {\n         $customOption.hide();\n         $processOption.show();\n      } else {\n         $customOption.show();\n         $processOption.hide();\n      }\n   }\n\n   async busy() {\n      $$(this.ids.addNew).disable();\n\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      if (!$form.showProgress) await this.init(this.AB);\n\n      $form.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      $$(this.ids.addNew).enable();\n      $$(this.ids.form).hideProgress();\n   }\n\n   _pullInputElement($elem) {\n      if (!$elem?.getValue && $elem?.getChildViews) {\n         return (\n            $elem\n               .getChildViews()\n               .filter((childView) => childView.getValue)[0] ?? $elem\n         );\n      } else {\n         return $elem;\n      }\n   }\n}\n\nexport default RowUpdater;\n","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABFieldCore = require(\"../../core/dataFields/ABFieldCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABField extends ABFieldCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.AB.on(\"ab.abdefinition.update\", (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n         }\n      });\n\n      //  \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      //  \tthis.defaults = fieldDefaults;\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n      // \t\tcolumnName:'column_name',\t// a valid mysql table.column name\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      // \t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n      // \t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n      // \t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n      // \t\t\twidth: {int}\t\t\t// width of display column\n\n      // \t\t// specific for dataField\n      // \t\t},\n      // \t\ttranslations:[]\n      // \t}\n\n      // \tthis.fromValues(values);\n\n      // this.object = object;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static editorValues(settings) {\n      const obj = {\n         label: settings.label,\n         columnName: settings.columnName,\n         settings: settings,\n      };\n\n      delete settings.label;\n      delete settings.columnName;\n\n      return obj;\n   }\n\n   addValidation(ids, settings) {\n      const App = this.object.application.App;\n      const Filter = this.AB.filterComplexNew(\n         `${this.id}_field_validation_rules`\n      );\n      $$(ids.filterComplex).addView({\n         view: \"form\",\n         css: \"abValidationForm\",\n         cols: [\n            {\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"invalidMessage\",\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     value:\n                        settings && settings.invalidMessage\n                           ? settings.invalidMessage\n                           : \"\",\n                     label: L(\"Invalid Message\"),\n                  },\n                  Filter.ui,\n               ],\n            },\n            {\n               view: \"button\",\n               css: \"webix_danger\",\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  const $viewCond = this.getParentView();\n                  $$(ids.filterComplex).removeView($viewCond);\n               },\n            },\n         ],\n      });\n      $$(Filter.ids.save).hide();\n      // Filter.applicationLoad(this.object.application);\n      Filter.fieldsLoad(this.object.fields());\n      if (settings && settings.rules) Filter.setValue(settings.rules);\n   }\n\n   /*\n    * @method isValid\n    * check the current values to make sure they are valid.\n    * Here we check the default values provided by ABField.\n    *\n    * @return null or [{OP.Validation.validator()}] objects.\n    */\n   isValid() {\n      const validator = this.AB.Validation.validator();\n\n      // .columnName must be unique among fileds on the same object\n      const isNameUnique =\n         this.object.fields((f) => {\n            return (\n               f.id != this.id &&\n               f.columnName.toLowerCase() == this.columnName.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"columnName\",\n            L(\n               \"Field columnName must be unique ({0} already used in this Object)\",\n               [this.columnName]\n            )\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save() before:\n      if (!this.id) return;\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      await this.migrateDrop();\n\n      // the server still references an ABField in relationship to it's\n      // ABObject, so we need to destroy the Field 1st, then remove it\n      // from it's object.\n      await super.destroy();\n\n      await this.object.fieldRemove(this);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABField with it's parent ABObject\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      let isAdd = false;\n      // if this is our initial save()\n      if (!this.id) {\n         isAdd = true;\n      }\n\n      // Whenever we update our settings, make sure any\n      // existing rows that have NULL values for this field\n      // are updated to have our current .default value.\n      if (!isAdd && this.settings.required && this.settings.default) {\n         const model = this.object.model();\n\n         // pull rows that has null value\n         const result = await model.findAll({\n            where: {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.id,\n                     rule: \"is_null\",\n                  },\n               ],\n            },\n         });\n\n         const tasks = [];\n\n         // updating ...\n         result.data.forEach((d) => {\n            if (!d[this.columnName]) d[this.columnName] = this.settings.default;\n\n            tasks.push(model.update(d.id, d));\n         });\n\n         await Promise.all(tasks);\n      }\n\n      // New ABDefinition method of saving:\n      // when this is done, we now have an .id\n      await super.save();\n\n      // incase this was an ADD operation, make sure the\n      // parent Obj now includes this object:\n      // NOTE: must be done after the .save() so we have an .id\n      await this.object.fieldAdd(this);\n\n      // perform any server side migrations for this Field:\n\n      // but not connectObject fields:\n      // ABFieldConnect.migrateXXX() gets called from the UI popupNewDataField\n      // in order to handle the timings of the 2 fields that need to be created\n      if (!this.isConnection && !skipMigrate) {\n         const fnMigrate = isAdd ? this.migrateCreate() : this.migrateUpdate();\n         await fnMigrate;\n      }\n\n      return this;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateUpdate() {\n      return this.AB.Network.put({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @function columnHeader\n    * Return the column header for a webix grid component for this specific\n    * data field.\n    * @param {Object} options\n    * {\n    *    isObjectWorkspace: {bool},  is this being used in the Object workspace.\n    *    width: {int},\n    *    height: {int},\n    *    editable: {bool}\n    * }\n    * @return {obj}  configuration obj\n    */\n   columnHeader(options) {\n      options = options || {};\n\n      const config = {\n         id: this.columnName, // this.id,\n         header: this.label,\n      };\n\n      if (options.isObjectWorkspace && this.settings.showIcon) {\n         config.header = `<span class=\"webix_icon fa fa-${this.fieldIcon()}\"></span>${\n            config.header\n         }`;\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.  If this isn't\n    * a standard value display (think image, Map, graph, etc...) then use this\n    * method to create the display in the table/grid cell.\n    * @param {object} row\n    *        is the {name=>value} hash of the current row of data.\n    * @param {App} App\n    *        the shared ui App object useful more making globally\n    *\t\t\t unique id references.\n    * @param {HtmlDOM} node\n    *        the HTML Dom object for this field's display.\n    * @param {object} options\n    *        option of additional settings\n    */\n   customDisplay(row, App, node, options) {}\n\n   /*\n    * @function customEdit\n    *\n    *\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      return true;\n   }\n\n   /**\n    * @method getValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   getValue(item, rowData) {\n      return item.getValue();\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    */\n   setValue(item, rowData, defaultValue) {\n      if (!item) return;\n\n      let val;\n\n      if (\n         (rowData == null || rowData[this.columnName] == null) &&\n         defaultValue != null\n      ) {\n         val = defaultValue;\n      } else if (rowData && rowData[this.columnName] != null) {\n         val = rowData[this.columnName];\n      } else {\n         val = rowData;\n      }\n\n      item.setValue(val);\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent(formKey) {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n\n      let FC = {\n         // .common() is used to create the display in the list\n         common: () => {\n            return {\n               key: formKey,\n\n               // // but since this is a common place holder: use the\n               // // multilingual label here:\n               // labelKey: 'ab.abfield.labelPlaceholder',\n               // icon:  'square'\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // NOTE: in case you were wondering, the base ABField\n            // \t\t will just return a label with 'ABFieldPlaceholder'\n            // \t\t as the text.  Any sub class of ABField should overwrite\n            // \t\t this and return an actual Form Component.\n\n            // store object id and field id to field component\n            const values = FC.common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n            // ABFieldPlaceholder.formatTitle();\n            // ABFieldPlaceholder.text = \"ABFieldPlaceholder\";\n\n            return ABFieldPlaceholder;\n         },\n      };\n      return FC;\n   }\n\n   /**\n    * @method detailComponent\n    */\n   detailComponent() {\n      return {\n         common: () => {\n            return {\n               icon: \"square\",\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // store object id and field id to field component\n            const values = this.detailComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method getSettings()\n    * return a copy of this.settings.\n    * @return {object}\n    */\n   getSettings() {\n      return Object.assign({}, this.settings);\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `${this.fieldKey()}[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABFieldAutoIndexCore = require(\"../../core/dataFields/ABFieldAutoIndexCore\");\n\nmodule.exports = class ABFieldAutoIndex extends ABFieldAutoIndexCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldAutoIndex\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldBooleanCore = require(\"../../core/dataFields/ABFieldBooleanCore\");\n\nmodule.exports = class ABFieldBoolean extends ABFieldBooleanCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = \"template\";\n      config.css = \"center\";\n      config.template = (row, common, value, config) => {\n         // Group header\n         if (row.$group) return row[this.columnName];\n\n         // editable\n         if (options.editable) {\n            return (\n               '<div class=\"ab-boolean-display\">' +\n               common.checkbox(row, common, value, config) +\n               \"</div>\"\n            );\n         }\n\n         // readonly\n         else {\n            if (value)\n               return \"<div class='webix_icon fa fa-check-square-o'></div>\";\n            else return \"<div class='webix_icon fa fa-square-o'></div>\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"checkbox\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-checkbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcheckbox\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCalculateCore = require(\"../../core/dataFields/ABFieldCalculateCore\");\n\nmodule.exports = class ABFieldCalculate extends ABFieldCalculateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCalculate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCombineCore = require(\"../../core/dataFields/ABFieldCombineCore\");\n\nmodule.exports = class ABFieldCombine extends ABFieldCombineCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCombine\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this.settings.combinedFields.split(\",\") || []).forEach((id) => {\n         var field = this.object.fieldByID(id);\n         if (!field) {\n            this.warningsMessage(`dependent field[${id}] not found.`, {\n               fieldID: id,\n               combinedFields: this.settings.combinedFields,\n            });\n         }\n      });\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldConnect extends ABFieldConnectCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save()d before:\n      if (!this.id) return Promise.resolve();\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      // this.migrateDrop()\n      //    // .then(() => {\n      //    //    // NOTE : prevent recursive remove connected fields\n      //    //    // - remove this field from JSON\n      //    //    this.object._fields = this.object.fields((f) => {\n      //    //       return f.id != this.id;\n      //    //    });\n      //    // })\n      //    .then(() => {\n      //       // Save JSON of the object\n      //       return this.object.fieldRemove(this);\n      //    })\n      await super.destroy();\n\n      // Now we need to remove our linked Object->field\n\n      const linkObject = this.datasourceLink;\n      if (!linkObject) return Promise.resolve(); // already notified\n\n      const linkField = this.fieldLink;\n      if (!linkField) return Promise.resolve(); // already notified\n\n      // destroy linked field\n      return linkField.destroy();\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method pullRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData = [];\n\n      const data = super.pullRelationValues(row);\n      const linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         } else if (typeof data == \"string\") {\n            selectedData = { text: data };\n         }\n      }\n\n      return selectedData;\n   }\n\n   columnHeader(options) {\n      options = options || {};\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      if (options.filters == null) {\n         options.filters = {};\n      }\n\n      var multiselect = this.settings.linkType == \"many\";\n\n      config.editor = multiselect ? \"multiselect\" : \"combo\";\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n      config.template = (row) => {\n         var selectedData = field.pullRelationValues(row);\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               values.push(\n                  `<div class='webix_multicombo_value'><span>${val.value}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n               );\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData.value) {\n            let clear = \"\";\n            if (options.editable) {\n               clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n            }\n            values.push(\n               `<div class='webix_multicombo_value'>${clear}<span class=\"ellip\">${selectedData.value}</span></div>`\n            );\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n\n      config.suggest = {\n         on: {\n            onBeforeShow: function () {\n               field.openOptions(this);\n            },\n         },\n\n         // Support partial matches\n         filter: ({ value }, search) =>\n            (value ?? \"\").toLowerCase().includes((search ?? \"\").toLowerCase()),\n      };\n\n      if (multiselect) {\n         config.suggest.view = \"checksuggest\";\n         config.suggest.button = true;\n      }\n\n      return config;\n   }\n\n   openOptions($suggest) {\n      // PREVENT repeatedly pull data:\n      // If not a x->1 relation and the options list was populated, then skip\n      const $list = $suggest.getList();\n      if (this.settings.linkViaType != \"one\") {\n         if (($list?.find({}) ?? []).length) return;\n      }\n\n      // Listen create/update events of the linked object, then clear data list to re-populate\n      [\"create\", \"update\"].forEach((key) => {\n         if (this[`_dc_${key}_event`]) return;\n\n         this[`_dc_${key}_event`] = this.AB.on(\n            `ab.datacollection.${key}`,\n            (res) => {\n               if (this.datasourceLink.id == res.objectId) $list.clearAll();\n            }\n         );\n      });\n\n      this.getAndPopulateOptions($suggest, null, this);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n\n   //// NOTE: why do we pass in row, App, and node?  is this something we do in our external components?\n   ////       are these values present when this Object is instanciated? Can't we just pass these into the\n   ////       object constructor and have it internally track these things?\n   customEdit(row, /*App,*/ node) {\n      // var selectedData = this.pullRelationValues(row);\n      // this._selectedData = selectedData;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"connect\");\n   }\n\n   formComponentMobile() {\n      if (this.settings.linkType == \"many\") {\n         return super.formComponent(\"mobile-selectmultiple\");\n      }\n      return super.formComponent(\"mobile-selectsingle\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailconnect\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method getOptions\n    * show options list in selectivity\n    *\n    * @return {Promise}\n    */\n   async getOptions(whereClause, term, sort, editor) {\n      const theEditor = editor;\n\n      if (theEditor) {\n         // PREVENT: repeatly refresh data too often\n         if (theEditor._getOptionsThrottle) {\n            clearTimeout(theEditor._getOptionsThrottle);\n            // NOTE: remove variables that reference the Promise and Resolve to let GC cleans up.\n            // https://dev.to/xnimorz/js-promises-3-garbage-collection-and-memory-leaks-2oi7?fbclid=IwAR1wqgNz2KqchaM7eRkclR6YWHT01eva4y5IWpnaY0in6BrxmTAtpNCnEXM\n            delete theEditor._timeToPullData;\n            delete theEditor._getOptionsResolve;\n         }\n         theEditor._timeToPullData = await new Promise((resolve) => {\n            theEditor._getOptionsResolve = resolve;\n            theEditor._getOptionsThrottle = setTimeout(() => {\n               resolve(true);\n            }, 100);\n         });\n         if (!theEditor._timeToPullData) return;\n      }\n\n      return new Promise((resolve, reject) => {\n         let haveResolved = false;\n         // {bool}\n         // have we already passed back a result?\n\n         const respond = (options) => {\n            // filter the raw lookup with the provided search term\n            options = options.filter((item) => {\n               if (item.text.toLowerCase().includes(term.toLowerCase())) {\n                  return true;\n               }\n            });\n\n            if (!haveResolved) {\n               haveResolved = true;\n               resolve(options);\n            } else {\n               // if we have already resolved() then .emit() that we have\n               // updated \"option.data\".\n               this.emit(\"option.data\", options);\n            }\n         };\n\n         // Prepare Where clause\n\n         const where = this.AB.cloneDeep(whereClause || {});\n         sort = sort || [];\n\n         if (!where.glue) where.glue = \"and\";\n\n         if (!where.rules) where.rules = [];\n\n         term = term || \"\";\n\n         // check if linked object value is not define, should return a empty array\n         if (!this.settings.linkObject) return [];\n\n         // if options was cached\n         // if (this._options != null) return resolve(this._options);\n\n         const linkedObj = this.datasourceLink;\n\n         // System could not found the linked object - It may be deleted ?\n         if (linkedObj == null) throw new Error(\"No linked object\");\n\n         const linkedCol = this.fieldLink;\n\n         // System could not found the linked field - It may be deleted ?\n         if (linkedCol == null) throw new Error(\"No linked column\");\n\n         // Get linked object model\n         const linkedModel = linkedObj.model();\n\n         // M:1 - get data that's only empty relation value\n         if (\n            this.settings.linkType == \"many\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            where.rules.push({\n               key: linkedCol.id,\n               rule: \"is_null\",\n            });\n            // where[linkedCol.columnName] = null;\n         }\n         // 1:1\n         else if (\n            this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            // 1:1 - get data is not match link id that we have\n            if (this.settings.isSource == true) {\n               // NOTE: make sure \"haveNoRelation\" shows up as an operator\n               // the value \":0\" doesn't matter, we just need 'haveNoRelation' as an operator.\n               // newRule[linkedCol.id] = { 'haveNoRelation': 0 };\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"have_no_relation\",\n               });\n            }\n            // 1:1 - get data that's only empty relation value by query null value from link table\n            else {\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"is_null\",\n               });\n               // newRule[linkedCol.id] = 'null';\n               // where[linkedCol.id] = null;\n            }\n         }\n\n         const storageID = this.getStorageID(where);\n\n         Promise.resolve()\n            .then(async () => {\n               // Mar 23, 2023 disabling local storage of options because users\n               // were reporting not seeing the correct options list with either\n               // new, updated or deleted records that should or should not appear\n               return false;\n               // Get Local Storage unless xxx->one connected field\n               if (this?.settings?.linkViaType != \"one\") {\n                  // We store the .findAll() results locally and return that for a\n                  // quick response:\n                  return await this.AB.Storage.get(storageID);\n               }\n            })\n            .then(async (storedOptions) => {\n               if (storedOptions) {\n                  // immediately respond with our stored options.\n                  this._options = storedOptions;\n                  return respond(this._options);\n               }\n               // Pull linked object data\n               let options = function () {\n                  return linkedModel.findAll({\n                     where: where,\n                     sort: sort,\n                     populate: false,\n                  });\n               };\n\n               // placeholder for selected options\n               let selected = function () {\n                  return new Promise((resolve, reject) => {\n                     // empty data array to pass to all()\n                     resolve({ data: [] });\n                  });\n               };\n\n               // we also need to get selected values of xxx->one connections\n               // if we are looking at a field in a form we look at linkViaOneValues\n               // if we are looking at a grid we are editing we look at theEditor?.config?.value\n               if (\n                  this?.settings?.linkViaType == \"one\" &&\n                  (this?.linkViaOneValues || theEditor?.config?.value)\n               ) {\n                  let values = \"\";\n                  // determine if we are looking in a grid or at a form field\n                  if (\n                     (theEditor?.config?.view == \"multicombo\" ||\n                        theEditor?.config?.view == \"combo\") &&\n                     this?.linkViaOneValues\n                  ) {\n                     values = this?.linkViaOneValues;\n                  } else if (theEditor?.config?.value) {\n                     if (Array.isArray(theEditor.config.value)) {\n                        values = theEditor?.config?.value.join();\n                     } else {\n                        values = theEditor?.config?.value;\n                     }\n                  }\n                  let whereRels = {};\n                  let sortRels = [];\n\n                  whereRels.glue = \"or\";\n                  whereRels.rules = [];\n\n                  values.split(\",\").forEach((v) => {\n                     whereRels.rules.push({\n                        key: \"uuid\",\n                        rule: \"equals\",\n                        value: v,\n                     });\n                  });\n                  selected = function () {\n                     return linkedModel.findAll({\n                        where: whereRels,\n                        sort: sortRels,\n                        populate: false,\n                     });\n                  };\n               }\n               try {\n                  const results = await Promise.all([options(), selected()]);\n\n                  // combine options and selected items and\n                  // put the selected options at the top of the list\n                  const result = results[1].data.concat(results[0].data);\n\n                  // store results in _options\n                  this._options = result.data || result || [];\n\n                  // populate display text\n                  (this._options || []).forEach((opt) => {\n                     opt.text = linkedObj.displayData(opt);\n                     opt.value = opt.text;\n                  });\n\n                  // 8/10/2023 - We are not actually using this (see line 338) - If we need to store\n                  // user data in local storage we should encrypt it.\n                  // cache options if not a xxx->one connection\n                  // if (this?.settings?.linkViaType != \"one\") {\n                  //    this.AB.Storage.set(storageID, this._options);\n                  // }\n                  return respond(this._options);\n               } catch (err) {\n                  this.AB.notify.developer(err, {\n                     context:\n                        \"ABFieldConnect:getOptions(): unable to retrieve options from server\",\n                     field: this.toObj(),\n                     where,\n                  });\n\n                  haveResolved = true;\n                  throw err;\n               }\n            });\n      });\n   }\n\n   getStorageID(where) {\n      return `${this.id}-${JSON.stringify(where)}`;\n   }\n\n   async clearStorage(where) {\n      const storageID = this.getStorageID(where);\n      await this.AB.Storage.set(storageID, null);\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               if (itemObj && itemObj.id) {\n                  vals.push(itemObj.id);\n               } else {\n                  vals.push(val);\n               }\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            } else {\n               vals.push(value);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         if (!value) {\n            return [];\n         } else {\n            let returnVals = [];\n            let vals = value.split(\",\");\n            vals.forEach((val) => {\n               returnVals.push(this.getItemFromVal(val));\n            });\n            return returnVals;\n         }\n      } else {\n         let item = this.getItemFromVal(value);\n         return item;\n      }\n   }\n\n   getAndPopulateOptions(editor, options, field, form) {\n      if (!editor) return Promise.resolve([]);\n\n      const theEditor = editor;\n      // if editor has options and is xxx->one store the options on the field\n      if (\n         this?.settings?.linkViaType == \"one\" &&\n         theEditor.getValue() &&\n         !field.linkViaOneValues\n      ) {\n         field.linkViaOneValues = theEditor.getValue();\n      }\n\n      // if we are filtering based off another selectivity's value we\n      // need to do it on fetch each time because the value can change\n      // copy the filters so we don't add to them every time there is a change\n      const combineFilters = options?.filters\n         ? Object.assign({}, options.filters)\n         : { glue: \"and\", rules: [] };\n\n      if (options?.filterByConnectValues) {\n         const parseFilterByConnectValues = (conditions, values, depth = 0) => {\n            const valuesByDepth = values.filter((e) => e?.depth === depth);\n\n            return [\n               ...conditions.rules.map((e) => {\n                  if (e.glue)\n                     return {\n                        glue: e.glue,\n                        rules: parseFilterByConnectValues(e, values, depth + 1),\n                     };\n\n                  const value = valuesByDepth.filter(\n                     (ef) => ef.key === e.key && ef.value === e.value\n                  )[0];\n\n                  if (!value) return e;\n\n                  const $parentField = value?.filterValue?.config.id\n                     ? $$(value.filterValue.config.id)\n                     : null;\n\n                  if (!$parentField)\n                     throw Error(\n                        \"Some parent field's view components don't exist\"\n                     );\n\n                  const parentValue = value?.filterValue\n                     ? $parentField.getValue() ?? \"\"\n                     : \"\";\n\n                  let newVal = \"\";\n\n                  if (parentValue) {\n                     if (value.filterColumn) {\n                        const filterField = field.object.fieldByID(\n                           value.filterValue.config.dataFieldId\n                        );\n                        let valItem;\n\n                        // When options does not load yet, then pull select value from DC\n                        if (!filterField._options?.length) {\n                           const linkedField =\n                              (form.datacollection.datasource?.fields(\n                                 (f) =>\n                                    f.id == value.value ||\n                                    f.columnName == value.value\n                              ) ?? [])[0];\n\n                           if (linkedField) {\n                              // Get values from DC\n                              const formVals = form.datacollection?.getCursor();\n\n                              valItem =\n                                 formVals[linkedField.relationName()] ??\n                                 formVals[value.value];\n                           }\n                        } else {\n                           valItem = filterField.getItemFromVal(parentValue);\n                        }\n\n                        if (valItem) {\n                           newVal = valItem[value.filterColumn];\n                        } else {\n                           newVal = parentValue;\n                        }\n                     } else {\n                        newVal = parentValue;\n                     }\n                  }\n\n                  return {\n                     key: e.key,\n                     rule: \"equals\",\n                     value: newVal,\n                  };\n               }),\n            ];\n         };\n\n         combineFilters.rules = parseFilterByConnectValues(\n            combineFilters,\n            options.filterByConnectValues\n         );\n      }\n\n      if (!this.handlerOptionData) {\n         this.handlerOptionData = (data) => {\n            if (theEditor.$destructed) {\n               this.removeListener(\"option.data\", this.handlerOptionData);\n               return;\n            }\n            this.populateOptions(theEditor, data, field, form, true);\n         };\n      }\n\n      // try to make sure we don't continually add up listeners.\n      this.removeListener(\"option.data\", this.handlerOptionData).once(\n         \"option.data\",\n         this.handlerOptionData\n      );\n\n      return new Promise((resolve, reject) => {\n         this.getOptions(\n            combineFilters,\n            \"\",\n            options?.sort ?? \"\",\n            theEditor\n         ).then((data) => {\n            this.populateOptions(theEditor, data, field, form, true);\n            resolve(data);\n         });\n      });\n   }\n\n   populateOptions(theEditor, data, field, form, addCy) {\n      if (theEditor == null || theEditor.$destructed) return;\n\n      theEditor.blockEvent();\n      theEditor.getList().clearAll();\n      theEditor.getList().define(\"data\", data);\n      if (addCy) {\n         this.populateOptionsDataCy(theEditor, field, form);\n      }\n      if (theEditor.getValue?.() && data?.length) {\n         let selectedVal = theEditor.getValue();\n\n         // Check exists item\n         const isExists = data.some((d) => d.id == selectedVal);\n\n         // Select option item from custom index value\n         if (\n            !isExists &&\n            field.isConnection &&\n            (field.indexField || field.indexField2)\n         ) {\n            const selectedItem = data.filter(\n               (d) =>\n                  d[field.indexField?.columnName ?? \"\"] == selectedVal ||\n                  d[field.indexField2?.columnName ?? \"\"] == selectedVal\n            )[0];\n\n            if (selectedItem) selectedVal = selectedItem.id;\n         }\n\n         theEditor.setValue(selectedVal);\n      }\n      theEditor.unblockEvent();\n   }\n\n   populateOptionsDataCy(theEditor, field, form) {\n      if (theEditor?.$destructed) return;\n\n      // Add data-cy attributes\n      if (theEditor?.getList) {\n         if (!theEditor.getPopup) return;\n         var popup = theEditor.getPopup();\n         if (!popup) return;\n         theEditor.getList().data.each((option) => {\n            if (!option) return;\n            var node = popup.$view.querySelector(\n               \"[webix_l_id='\" + option.id + \"']\"\n            );\n            if (!node) return;\n            node.setAttribute(\n               \"data-cy\",\n               `${field.key} options ${option.id} ${field.id} ${form?.id}`\n            );\n         });\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this._options || [];\n      if (options.length > 0) {\n         for (let i = 0; i < options.length; i++) {\n            if (\n               this.indexField &&\n               options[i][this.indexField.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else if (\n               this.indexField2 &&\n               options[i][this.indexField2.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else {\n               if (\n                  options[i].id == val ||\n                  options[i].value == val ||\n                  options[i][this.indexField?.columnName ?? \"\"] == val ||\n                  options[i][this.indexField2?.columnName ?? \"\"] == val\n               ) {\n                  item = options[i];\n                  break;\n               }\n            }\n         }\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         let vals = [];\n         if (item.getValue()) {\n            let val = item.getValue().split(\",\");\n            val.forEach((record) => {\n               vals.push(item.getList().getItem(record));\n            });\n         }\n         return vals;\n      } else {\n         if (item.getValue()) {\n            return item.getList().getItem(item.getValue());\n         } else {\n            return \"\";\n         }\n      }\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n      // if (AB.isEmpty(rowData)) return; removed because sometimes we will\n      // want to set this to empty\n      let val = this.pullRelationValues(rowData);\n      // put in current values as options so we can display them before\n      // the rest of the options are fetched when field is clicked\n      if (item.getList && item.getList().count() == 0) {\n         if (this.settings.linkType !== \"one\" && !Array.isArray(val)) {\n            val = [val];\n         }\n\n         const $list = item.getList();\n\n         $list.define(\"data\", val);\n         $list.refresh();\n      }\n\n      item.setValue(\n         Array.isArray(val)\n            ? val.map((e) => e.id ?? e.uuid ?? e).join(\",\")\n            : val.id ?? val.uuid ?? val\n      );\n   }\n\n   /**\n    * @method pullRecordRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRecordRelationValues(record) {\n      var selectedData = [];\n\n      var data = record;\n      var linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         }\n      }\n\n      return selectedData;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      var linkField = this.fieldLink;\n      if (!linkField) {\n         this.warningsMessage(\n            `is unable to find linked field[${this.settings.linkColumn}]`,\n            {\n               linkColumn: this.settings.linkColumn,\n            }\n         );\n      }\n\n      let linkObj = this.datasourceLink;\n      if (!linkObj) {\n         this.warningsMessage(\n            `is unable to find linked object[${this.settings.linkObject}]`,\n            {\n               linkObject: this.settings.linkObject,\n            }\n         );\n      }\n   }\n};\n","const ABFieldDateCore = require(\"../../core/dataFields/ABFieldDateCore\");\n\nmodule.exports = class ABFieldDate extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // if (this.settings.includeTime)\n      // config.editor = \"datetime\";\n      // else\n      config.editor = this.AB.Account?.language() == \"th\" ? \"thaidate\" : \"date\";\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"mobile-date\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-date\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   dateToString(dateFormat, dateData) {\n      return webix.Date.dateToStr(dateFormat)(dateData);\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n\n      // Return longdate if option 4 or 5\n      if (dateFormat >= 4) {\n         return webix.i18n.longDateFormatStr(dateObj);\n      } else {\n         return webix.i18n.dateFormatStr(dateObj);\n      }\n   }\n};\n","const ABFieldDateTimeCore = require(\"../../core/dataFields/ABFieldDateTimeCore\");\n\nmodule.exports = class ABFieldDateTime extends ABFieldDateTimeCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // Ignore date\n      if (this.settings.dateFormat == 1) {\n         config.editor = \"time\";\n      } else {\n         config.editor =\n            this.AB.Account?._config?.languageCode == \"th\"\n               ? \"thaidatetime\"\n               : \"datetime\";\n      }\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"mobile-datetime\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-datetime\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n      const timeToStr = webix.Date.dateToStr(this.getTimeFormat());\n\n      if (dateFormat >= 4) {\n         return `${webix.i18n.longDateFormatStr(dateObj)} ${timeToStr(\n            dateObj\n         )}`;\n      } else {\n         return `${webix.i18n.dateFormatStr(dateObj)} ${timeToStr(dateObj)}`;\n      }\n   }\n};\n","const ABFieldEmailCore = require(\"../../core/dataFields/ABFieldEmailCore\");\n\nmodule.exports = class ABFieldEmail extends ABFieldEmailCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-email\",\n            settings: {},\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldFileCore = require(\"../../core/dataFields/ABFieldFileCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldFile extends ABFieldFileCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related file.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (!this.id) {\n            resolve();\n            return;\n         }\n\n         // Ask the user what to do about the existing file:\n         webix.confirm({\n            title: L(\"Keep Files?\"),\n            message: L(\"Do you want to keep the files referenced by {0}?\", [\n               this.label,\n            ]),\n            callback: async (result) => {\n               // update this setting so the server can respond correctly in\n               // ABFieldFile.migrateDrop()\n               this.settings.removeExistingData = result ? 0 : 1;\n\n               try {\n                  await this.save();\n\n                  // TODO: a reminder that you still got alot on the server to do!\n                  webix.alert({\n                     title: \"!! TODO !!\",\n                     text: \"Tell a Developer to actually pay attention to this!\",\n                  });\n\n                  // now the default .destroy()\n                  await super.destroy();\n\n                  resolve();\n               } catch (err) {\n                  reject(err);\n               }\n            },\n         });\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFile\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = false;\n\n      const editable = options.editable;\n\n      // populate our default template:\n      config.template = (obj) => {\n         if (obj.$group) return this.dataValue(obj);\n\n         const fileDiv = [\n            '<div class=\"ab-file-data-field\" style=\"float: left;\">',\n            '<div class=\"webix_view ab-file-holder\">',\n            '<div class=\"webix_template\">',\n            this.fileTemplate(obj, editable),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return fileDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      options = options || {};\n\n      let typesList = [];\n      let maximumSize = 0;\n\n      if (this.settings.limitFileType && this.settings.fileType) {\n         typesList = this.settings.fileType.split(\",\");\n      }\n\n      if (this.settings.limitFileSize && this.settings.fileSize) {\n         maximumSize = this.settings.fileSize;\n      }\n\n      // \t\t// safety check:\n      // \t\t// webix seems to crash if you specify a .container that doesn't exists:\n      // \t\t// Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-file-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         // \t\t\t// use a webix component for displaying the content.\n         // \t\t\t// do this so I can use the progress spinner\n\n         const webixContainer = webix.ui({\n            view: \"template\",\n            container: parentContainer,\n\n            template: this.fileTemplate(row, options.editable),\n\n            borderless: true,\n            width: 160,\n            height: 60,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         // \t\t\t////\n         // \t\t\t//// Prepare the Uploader\n         // \t\t\t////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload(true);\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = typesList;\n                  if (acceptableTypes && acceptableTypes != \"\") {\n                     const type = item.type.toLowerCase();\n                     if (acceptableTypes.indexOf(type) == -1) {\n                        webix.message(\n                           L(\"Only [{0}] files are supported\", [\n                              acceptableTypes.join(\", \"),\n                           ])\n                        );\n                        return false;\n                     }\n                  }\n\n                  //verify file size\n                  //Convert to MegaBytes\n                  if (maximumSize > 0) {\n                     const acceptableSizes = maximumSize * 1000000;\n                     if (item.size > acceptableSizes) {\n                        webix.message(\n                           L(\"Maximum file size is {0}MB\", [maximumSize])\n                        );\n                        return false;\n                     }\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  // this.showFile(idBase, response.data.uuid);\n\n                  const values = {};\n                  values[this.columnName] = {};\n                  values[this.columnName].uuid = response.data.uuid;\n                  values[this.columnName].filename = item.name;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldFile.onFileUpload(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error loading file\"), {\n                     message:\n                        \"ABFieldFile:onFileUploadError(): Error loading file\",\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // open file upload dialog when's click\n         node.addEventListener(\"click\", (e) => {\n            if (e.target.className.indexOf(\"delete-image\") > -1) {\n               this.deleteFile = true;\n            }\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      if (this.deleteFile == true) {\n         // remove the property because it is only needed to prevent the file dialog from showing\n         delete this.deleteFile;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: \"\",\n            text: L(\"Are you sure you want to remove this file?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n\n                  values[this.columnName] = {};\n\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"ABFieldFile:customEdit(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n                  // update value in the form component\n                  else {\n                     this.setValue($$(node), values);\n                  }\n               }\n            },\n         });\n      } else {\n         const rowData = this.dataValue(row);\n         if (!rowData || !rowData.uuid) {\n            const uploaderId = node.dataset[\"uploaderId\"],\n               uploader = $$(uploaderId);\n\n            if (uploader && uploader.fileDialog)\n               uploader.fileDialog({ rowid: row.id });\n         }\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-file\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcustom\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   //File Template\n\n   fileTemplate(obj, editable) {\n      let iconDisplay = \"\";\n      let fileDisplay = \"display:none;\";\n      let fileURL = \"\";\n\n      let value = \"\";\n      let name = \"\";\n\n      const rowData = this.dataValue(obj);\n      if (rowData) {\n         value = rowData.uuid;\n         name = rowData.filename;\n      }\n\n      if (value && name) {\n         iconDisplay = \"display:none;\";\n         fileDisplay = \"\";\n         fileURL = \"/file/\" + value;\n      }\n\n      const html = [\n         `<div class=\"file-data-field-icon\" style=\"text-align: center; height: inherit; display: table-cell; vertical-align: middle; border: 2px dotted #CCC; background: #FFF; border-radius: 10px; font-size: 11px; line-height: 13px; padding: 0 10px; ${iconDisplay}\"><i class=\"fa fa-file fa-2x\" style=\"opacity: 0.6; font-size: 32px; margin-top: 3px; margin-bottom: 5px;\"></i>${\n            editable ? `<br/>${L(\"Drag and drop or click here\")}` : \"\"\n         }</div>`,\n         `<div class=\"file-data-field-name\" style=\" width:100%; height:100%; position:relative; \"><a target=\"_blank\" href=\"${fileURL}\">${\n            name || \"\"\n         }</a>${\n            editable\n               ? `<a style=\"${fileDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n               : \"\"\n         }</div>`,\n      ].join(\"\");\n\n      return html;\n   }\n\n   getValue(item, rowData) {\n      const file = item.$view.querySelector(\".file-data-field-name\");\n      const fileLink = file.querySelector(\"a\");\n\n      return {\n         uuid: file.getAttribute(\"file-uuid\"),\n         filename: fileLink.innerHTML,\n      };\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const fileicon = domNode.querySelector(\".file-data-field-icon\");\n      if (fileicon) fileicon.style.display = val && val.uuid ? \"none\" : \"block\";\n\n      const file = domNode.querySelector(\".file-data-field-name\");\n      if (file) {\n         const fileDeleteIcon = file.querySelector(\".ab-delete-photo\");\n         if (fileDeleteIcon)\n            fileDeleteIcon.style.display = val && val.uuid ? \"block\" : \"none\";\n\n         file.style.display = val && val.uuid ? \"block\" : \"none\";\n         if (val && val.uuid) file.setAttribute(\"file-uuid\", val.uuid);\n         else file.removeAttribute(\"file-uuid\");\n\n         const fileLink = file.querySelector(\"a\");\n         const fileURL = \"/file/\" + (val ? val.uuid : \"\");\n         fileLink.href = fileURL;\n         fileLink.innerHTML = val ? val.filename : \"\";\n      }\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method urlFile\n    * return the url to use to reference the file by it's id.\n    * @param {string} id uuid reference of this file.\n    * @return {string}\n    */\n   urlFile(id) {\n      return `/file/${id}`;\n   }\n};\n","const ABFieldFormulaCore = require(\"../../core/dataFields/ABFieldFormulaCore\");\n\nmodule.exports = class ABFieldFormula extends ABFieldFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldImageCore = require(\"../../core/dataFields/ABFieldImageCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldImage extends ABFieldImageCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related images.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (this.id) {\n            // Ask the user what to do about the existing images:\n            webix.confirm({\n               title: L(\"Keep Images?\"),\n               message: L(\"Do you want to keep the images referenced by {0}?\", [\n                  this.label,\n               ]),\n               callback: async (result) => {\n                  // update this setting so the server can respond correctly in\n                  // ABFieldImage.migrateDrop()\n                  this.settings.removeExistingData = result ? 0 : 1;\n\n                  try {\n                     await this.save();\n\n                     // TODO: a reminder that you still got alot on the server to do!\n                     webix.alert({\n                        title: \"!! TODO !!\",\n                        text: \"ABFieldImage.destroy(): Tell a Developer to actually pay attention to this!\",\n                     });\n\n                     await super.destroy();\n\n                     resolve();\n                  } catch (err) {\n                     reject(err);\n                  }\n               },\n            });\n         } else {\n            resolve(); // nothing to do really\n         }\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj, formId) {\n      // if formId is passed the field is in a form view not a grid and\n      // we won't have the obj and each time this\n      // field is in a form it will conflict with the last one rendered\n      if (formId) {\n         return `${this.columnName.replace(/ /g, \"_\")}-${formId}-image`;\n      } else {\n         return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-image`;\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldImage\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      config.editor = false; // 'text';  // '[edit_type]'   for your unique situation\n      // config.sort   = 'string' // '[sort_type]'   for your unique situation\n\n      let containerHeight = \"100%\";\n      let imageHeight = \"100%\";\n      let width = \"100%\";\n      let imageSrcHeight = \"100%\";\n      if (field.settings.useWidth) {\n         config.width = field.settings.imageWidth || 100;\n         const heightVal =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight + 20\n               : 80;\n         containerHeight = `${heightVal}px`;\n         width = `${field.settings.imageWidth || 100}px`;\n         imageHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 80;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 60;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      } else if (options.width) {\n         config.width = options.width || 100;\n         width = `${options.width || 100}px`;\n         imageHeight = options.width;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = options.width;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n      if (\n         field.settings.useHeight &&\n         field.settings.imageHeight &&\n         field.settings.imageHeight != \"NaN\"\n      ) {\n         config.height = field.settings.imageHeight || 0;\n         containerHeight = parseInt(config.height) + 20;\n         containerHeight = `${containerHeight}px`;\n         imageHeight = parseInt(config.height);\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = parseInt(config.height);\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n\n      const editable = options.editable;\n\n      // populate our default template:\n      // debugger;\n      config.template = (obj) => {\n         if (obj.$group) return obj[this.columnName];\n\n         const widthStyle = `width: ${width}; height: ${containerHeight}`;\n\n         const imageStyle = `width: ${width}; height: ${imageHeight}`;\n\n         const imgDiv = [\n            `<div class=\"ab-image-data-field\" style=\"float: left; ${widthStyle}\">`,\n            `<div class=\"webix_view ab-image-holder\" style=\"${imageStyle}\">`,\n            '<div class=\"webix_template\">',\n            this.imageTemplate(obj, {\n               editable: editable,\n               height: imageSrcHeight,\n               width: width,\n            }),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return imgDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    * @param {object} options - {\n    * \t\teditable {Bool}   where or not this field is currently editable\n    * \t\tformId {string}   the id of the presenting form if any\n    * }\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      // safety check:\n      // webix seems to crash if you specify a .container that doesn't exists:\n      // Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         let imgHeight = 0;\n         if (this.settings.useHeight) {\n            imgHeight = parseInt(this.settings.imageHeight) || imgHeight;\n         }\n\n         let imgWidth = 0;\n         if (this.settings.useWidth) {\n            imgWidth = parseInt(this.settings.imageWidth) || imgWidth;\n         }\n\n         if (options.height) imgHeight = options.height;\n\n         if (options.width) imgWidth = options.width;\n         //// TODO: actually pay attention to the height and width when\n         //// displaying the images.\n\n         // use a webix component for displaying the content.\n         // do this so I can use the progress spinner\n         const webixContainer = webix.ui({\n            view: \"template\",\n            css: \"ab-image-holder\",\n            // id: ids.container,\n            container: parentContainer,\n\n            template: this.imageTemplate(row, {\n               editable: options.editable,\n               height: imgHeight ? imgHeight + \"px\" : 0,\n               width: imgWidth ? imgWidth + \"px\" : 0,\n            }),\n\n            borderless: true,\n            height: imgHeight,\n            width: imgWidth,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         ////\n         //// Prepare the Uploader\n         ////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n            return;\n         }\n\n         const url = this.urlUpload();\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            // id:ids.uploader,\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            status: (f) => {\n               if (f.percent) {\n                  webixContainer.hideProgress();\n                  webixContainer.showProgress({\n                     type: \"top\",\n                     position: f.percent / 100,\n                  });\n               }\n            },\n            // formData:{\n            // \tappKey:application.name,\n            // \tpermission:actionKey,\n            // \tisWebix:true,\n            // \timageParam:'upload'\n            // },\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: (item) => {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = [\n                     \"jpg\",\n                     \"jpeg\",\n                     \"bmp\",\n                     \"png\",\n                     \"gif\",\n                     \"webp\",\n                  ];\n                  const type = item.type.toLowerCase();\n                  if (acceptableTypes.indexOf(type) == -1) {\n                     webix.message(\n                        L(\"Only [{0}] images are supported\", [\n                           acceptableTypes.join(\", \"),\n                        ])\n                     );\n                     return false;\n                  }\n                  this.uploadInProgress = true;\n                  // Display the image from local file\n                  var reader = new FileReader();\n                  reader.onload = (e) => {\n                     this.showImage(null, node, e.target.result);\n                     webixContainer.showProgress({\n                        type: \"top\",\n                        delay: 2000,\n                     });\n                  };\n                  reader.readAsDataURL(item.file);\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  this.showImage(response.data.uuid, node);\n                  this.uploadInProgress = false;\n\n                  const values = {};\n                  values[this.columnName] = response.data.uuid;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if (\n                           $$(node) &&\n                           $$(node).getItem &&\n                           $$(node).getItem(row.id)\n                        ) {\n                           $$(node).updateItem(row.id, values);\n                        } else {\n                           // if you scroll the table the connection to the datatable is lost so we need to find it again\n                           const dataTable =\n                              document.querySelector(\".webix_dtable\");\n                           if ($$(dataTable) && $$(dataTable).getItem(row.id))\n                              $$(dataTable).updateItem(row.id, values);\n                        }\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldImage.onFileUpload(): model.update(): error updating our entry\",\n                           field: this.toObj(),\n                           row,\n                           values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error uploading image\"), {\n                     context: \"ABFieldImage. uploader. onFileUploadError():\",\n                     field: this.toObj(),\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // if we are working in a datagrid we need to add a click event to\n         // check if the user is clicking on the delete button\n         if (node.className == \"webix_cell\") {\n            node.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  this.deleteImage = true;\n               }\n            });\n         }\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, id, evt) {\n      if (\n         (evt && evt.target.className.indexOf(\"delete-image\") > -1) ||\n         this.deleteImage\n      ) {\n         delete this.deleteImage;\n         if (!row.removeDefaultImage) {\n            row.removeDefaultImage = [];\n         }\n         row.removeDefaultImage[this.columnName] = true;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: L(\"Are you sure you want to remove this image?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\"; // removing the reference to the image here\n\n                  try {\n                     await this.object.model().update(row.id, values);\n\n                     // update the client side data object as well so other data changes won't cause this save to be reverted\n                     if ($$(node) && $$(node).updateItem)\n                        $$(node).updateItem(row.id, values);\n\n                     // update value in the form component\n                     this.setValue($$(node), values);\n                  } catch (err) {\n                     node.classList.add(\"webix_invalid\");\n                     node.classList.add(\"webix_invalid_cell\");\n\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ABFieldImage: customEdit(): Error updating our entry\",\n                        field: this.toObj(),\n                        row: row,\n                        values: values,\n                     });\n                  }\n               }\n            },\n         });\n      } else {\n         const uploaderId = node.dataset[\"uploaderId\"],\n            uploader = $$(uploaderId);\n\n         if (uploader && uploader.fileDialog)\n            uploader.fileDialog({ rowid: row.id });\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-image\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailimage\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   imageTemplate(obj, options) {\n      options = options || {};\n      options.height = options.height || \"100%\";\n      options.width = options.width || \"100%\";\n\n      // deault view is icon:\n      let iconDisplay = \"\";\n      let imageDisplay = \"display:none;\";\n      let imageURL = \"\";\n\n      let value = \"\";\n      let isRemoveDefaultImage = false;\n      if (obj[this.columnName]) {\n         value = obj[this.columnName];\n      }\n      if (obj.removeDefaultImage) {\n         if (obj.removeDefaultImage[this.columnName]) {\n            isRemoveDefaultImage = obj.removeDefaultImage[this.columnName];\n         }\n      }\n\n      if (value) {\n         iconDisplay = \"display:none;\";\n         imageDisplay = \"\";\n         imageURL = `background-image:url('${this.urlImage(value)}');`;\n      } else {\n         if (this.settings.useDefaultImage && !isRemoveDefaultImage) {\n            iconDisplay = \"display:none;\";\n            imageDisplay = \"\";\n            imageURL = `background-image:url('${this.urlImage(\n               this.settings.defaultImageUrl\n            )}');`;\n         }\n      }\n\n      let html = [\n         `<div class=\"image-data-field-icon\" style=\"${iconDisplay}\">#drag#</div>` +\n            `<div class=\"image-data-field-image\" style=\"${imageDisplay} height:${options.height}; ${imageURL}\">#remove#</div>`,\n      ].join(\"\");\n\n      html = html.replace(\n         \"#drag#\",\n         options.editable\n            ? `<div>${L(\"Drag and drop or click here\")}</div>`\n            : \"\"\n      );\n      html = html.replace(\n         \"#remove#\",\n         options.editable\n            ? `<a style=\"${imageDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n            : \"\"\n      );\n\n      return html;\n   }\n\n   showImage(uuid, node, url) {\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.querySelector(\".image-data-field-icon\").style.display =\n            \"none\";\n         const image = parentContainer.querySelector(\".image-data-field-image\");\n         image.style.display = \"\";\n         image.style.backgroundImage = `url('${url ?? this.urlImage(uuid)}')`;\n         image.setAttribute(\"image-uuid\", uuid);\n      }\n   }\n\n   getValue(item, rowData) {\n      const image = item.$view.querySelector(\".image-data-field-image\");\n      return image.getAttribute(\"image-uuid\");\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const imageIcon = domNode.querySelector(\".image-data-field-icon\");\n      if (imageIcon) imageIcon.style.display = val ? \"none\" : \"\";\n\n      const image = domNode.querySelector(\".image-data-field-image\");\n      if (image) {\n         const imageDeleteIcon = image.querySelector(\".ab-delete-photo\");\n         if (imageDeleteIcon)\n            imageDeleteIcon.style.display = val ? \"block\" : \"none\";\n\n         image.style.display = val ? \"block\" : \"none\";\n\n         if (val) {\n            image.style.backgroundImage = `url('${this.urlImage(val)}')`;\n            image.setAttribute(\"image-uuid\", val);\n         } else {\n            image.removeAttribute(\"image-uuid\");\n         }\n      }\n   }\n\n   /**\n    * @method toBase64\n    *\n    * @param {Object} rowData\n    *\n    * @return {Promise} - {\n    * \t\tdata: string,\n    * \t\twidth: number,\n    * \t\theight: number\n    * }\n    */\n   toBase64(rowData) {\n      return new Promise((resolve, reject) => {\n         if (!rowData[this.columnName]) return resolve(null);\n\n         const img = new Image();\n         img.crossOrigin = \"Anonymous\";\n         img.onerror = function (err) {\n            reject(err);\n         };\n         img.onload = function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL();\n            const imageData = {\n               data: dataURL,\n               width: img.width,\n               height: img.height,\n            };\n            resolve(imageData);\n         };\n\n         img.src = this.urlImage(rowData[this.columnName]);\n      });\n   }\n\n   /**\n    * @method urlImage()\n    * return the url to use to reference the image by it's id.\n    * @param {string} id\n    *        the file.uuid reference of this image.\n    * @return {string}\n    */\n   urlImage(id) {\n      return `/file/${id}`;\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n      if (this.uploadInProgress)\n         validator.addError(this.columnName, L(\"Image still uploading\"));\n   }\n};\n","const ABFieldJsonCore = require(\"../../core/dataFields/ABFieldJsonCore\");\n\nmodule.exports = class ABFieldJson extends ABFieldJsonCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldJson\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // config.editor = null; // read only for now\n      config.editor = \"text\";\n      config.css = \"textCell\";\n\n      // when called by ABViewFormCustom, will need a .template() fn.\n      // currently we don't need to return anything so ...\n      config.template = () => \"\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // read-only for now\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"json\",\n            settings: {\n               type: \"string\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n      item.config.value = rowData[this.columnName];\n   }\n};\n","const ABFieldListCore = require(\"../../core/dataFields/ABFieldListCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldList extends ABFieldListCore {\n   constructor(values, object) {\n      super(values, object);\n\n      // this._Selectivity = new ABFieldSelectivity(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   save() {\n      return super.save().then(() => {\n         // Now we want to clear out any entries that had values == to item removed from our list:\n         if (this.pendingDeletions.length) {\n            const model = this.object.model();\n\n            if (this.settings.isMultiple == true) {\n               // find all the entries that have one of the deleted values:\n               // use Promise to prevent issues with data being loaded before it is deleted on client side\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n                  let numToDo = 0;\n\n                  model\n                     .findAll({})\n                     .then((list) => {\n                        list = list.data || list;\n\n                        // for each list item\n                        list.forEach((item) => {\n                           if (Array.isArray(item[this.columnName])) {\n                              // get fields not in pendingDeletions\n                              let remainingFields = item[\n                                 this.columnName\n                              ].filter((i) => {\n                                 return (\n                                    this.pendingDeletions.indexOf(i.id) == -1\n                                 );\n                              });\n\n                              if (\n                                 remainingFields.length !=\n                                 item[this.columnName].length\n                              ) {\n                                 numToDo++;\n\n                                 // update value to new field list\n                                 if (remainingFields.length == 0) {\n                                    remainingFields = \"\";\n                                 }\n                                 const value = {};\n                                 value[this.columnName] = remainingFields;\n                                 model.update(item.id, value).then(() => {\n                                    // if ($$(node) && $$(node).updateItem)\n                                    //    $$(node).updateItem(value.id, value);\n                                    numDone++;\n                                    if (numDone >= numToDo) {\n                                       resolve();\n                                    }\n                                 });\n                              }\n                           }\n                        });\n                        if (numToDo == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            } else {\n               // find all the entries that have one of the deleted values:\n               const where = {};\n               where[this.columnName] = this.pendingDeletions;\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n\n                  model\n                     .findAll(where)\n                     .then((list) => {\n                        // make sure we just work with the { data:[] } that was returned\n                        list = list.data || list;\n\n                        // for each one, set the value to ''\n                        // NOTE: jQuery ajax routines filter out null values, so we can't\n                        // set them to null. :(\n                        // const numDone = 0;\n                        const value = {};\n                        value[this.columnName] = \"\";\n\n                        list.forEach((item) => {\n                           model.update(item.id, value).then(() => {\n                              numDone++;\n                              if (numDone >= list.length) {\n                                 resolve();\n                              }\n                           });\n                        });\n                        if (list.length == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            }\n         }\n      });\n   }\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldList\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      var formClass = \"\";\n      var placeHolder = \"\";\n      if (options.editable) {\n         formClass = \" form-entry\";\n         placeHolder = `<span style='color: #CCC; padding: 0 5px;'>${L(\n            \"Select item\"\n         )}</span>`;\n      }\n      var isRemovable = options.editable && !this.settings.required;\n\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n\n      config.template = (rowData) => {\n         let selectedData = rowData[this.columnName];\n         if (selectedData == null) return \"\";\n         if (this.settings.isMultiple) {\n            selectedData = _getSelectedOptions(this, rowData);\n         }\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         let hasCustomColor = \"\";\n         let optionHex = \"\";\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               if (this.settings.hasColors && val.hex) {\n                  hasCustomColor = \"hascustomcolor\";\n                  optionHex = `background: ${val.hex};`;\n               }\n               if (val.text) {\n                  values.push(\n                     `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'><span>${val.text}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n                  );\n               }\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData) {\n            let selectedObj = selectedData;\n            if (typeof selectedData == \"string\") {\n               selectedObj = this.getItemFromVal(selectedData);\n            }\n            if (!selectedObj) return \"\";\n            if (this.settings.hasColors && selectedObj.hex) {\n               hasCustomColor = \"hascustomcolor\";\n               optionHex = `background: ${selectedObj.hex};`;\n            }\n            if (selectedObj.text) {\n               let clear = \"\";\n               if (options.editable && !this.settings.required) {\n                  clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n               }\n               values.push(\n                  `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'>${clear}<span class=\"ellip\">${selectedObj.text}</span></div>`\n               );\n            }\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n      config.editor = this.settings.isMultiple ? \"multiselect\" : \"combo\";\n      config.suggest = {\n         button: true,\n         data: this.settings.options.map(function (opt) {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n      if (this.settings.isMultiple) {\n         config.suggest.view = \"checksuggest\";\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      if (!node.querySelector) return;\n\n      var clearButton = node.querySelector(\n         \".selectivity-single-selected-item-remove\"\n      );\n      if (clearButton) {\n         clearButton.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            var values = {};\n            values[this.columnName] = \"\";\n            this.object\n               .model()\n               .update(row.id, values)\n               .then(() => {\n                  // update the client side data object as well so other data changes won't cause this save to be reverted\n                  $$(node)?.updateItem?.(row.id, values);\n               })\n               .catch((err) => {\n                  node.classList.add(\"webix_invalid\");\n                  node.classList.add(\"webix_invalid_cell\");\n\n                  this.AB.notify.developer(err, {\n                     message:\n                        \"ABFieldList:customDisplay(): Error updating our entry.\",\n                     row: row,\n                     values: \"\",\n                     field: this.toObj(),\n                  });\n               });\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customEdit(row, App, node) {\n   //    return super.customEdit(row, App, node);\n   // }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"selectmultiple\" : \"selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple\n               ? \"mobile-selectmultiple\"\n               : \"mobile-selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"detailtext\" : \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      if (this.settings.isMultiple) {\n         let returnVals = [];\n         let vals = value.split(\",\");\n         vals.forEach((val) => {\n            returnVals.push(this.getItemFromVal(val));\n         });\n         return returnVals;\n      } else {\n         return value;\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this.options();\n      if (options.length > 1) {\n         options.forEach((option) => {\n            if (option.id == val) {\n               item = option;\n               return false;\n            }\n         });\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item, rowData) {\n      return this.editParse(item.getValue());\n   }\n\n   getSelectedOptions(field, rowData = {}) {\n      let result = [];\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData) {\n         if (Array.isArray(rowData)) {\n            result = rowData;\n         } else {\n            result.push(rowData);\n         }\n      }\n      if (result.length) {\n         if (typeof result == \"string\") result = JSON.parse(result);\n\n         // Pull text with current language\n         if (this.settings) {\n            result = (this.settings.options || []).filter((opt) => {\n               return (\n                  (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                     .length > 0\n               );\n            });\n         }\n      }\n\n      return result;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      if (this.settings.isMultiple) {\n         // do we need anything here?\n      } else {\n         super.setValue(item, rowData);\n      }\n   }\n};\n\n// == Private methods ==\nfunction _getSelectedOptions(field, rowData = {}) {\n   let result = [];\n   if (rowData[field.columnName] != null) {\n      result = rowData[field.columnName];\n\n      if (typeof result == \"string\") result = JSON.parse(result);\n\n      // Pull text with current language\n      if (field.settings) {\n         result = (field.settings.options || []).filter((opt) => {\n            return (\n               (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                  .length > 0\n            );\n         });\n      }\n   }\n\n   return result;\n}\n","const ABFieldLongTextCore = require(\"../../core/dataFields/ABFieldLongTextCore\");\n\nmodule.exports = class ABFieldLongText extends ABFieldLongTextCore {\n   constructor(values, object) {\n      super(values, object);\n\n      /*\n\t\t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n\t\t}\n\t\t*/\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldLongText\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\"; // '[edit_type]'   for your unique situation\n      // config.sort = 'string' // '[sort_type]'   for your unique situation\n      config.template = (obj, common, value, col, ind) => {\n         return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldNumberCore = require(\"../../core/dataFields/ABFieldNumberCore\");\n\nlet INIT_EDITOR = false;\n// {bool} INIT_EDITOR\n// Transition code between previous Framework and current.\n// we now need to wait until webix is declared or accessible globally.\n\nmodule.exports = class ABFieldNumber extends ABFieldNumberCore {\n   constructor(values, object) {\n      if (!INIT_EDITOR) {\n         // NOTE: if you need a unique [edit_type] by your returned config.editor above:\n         webix.editors.number = webix.extend(\n            {\n               // TODO : Validate number only\n            },\n            webix.editors.text\n         );\n         INIT_EDITOR = true;\n      }\n      super(values, object);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   // return the grid column header definition for this instance of ABFieldNumber\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"number\"; // [edit_type] simple inline editing.\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"numberbox\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-numberbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","/*\n * ABFieldSelectivity\n *\n * An ABFieldSelectivity defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABField = require(\"./ABField\");\n\nconst defaultSettings = {\n   allowClear: true,\n   removeOnly: false,\n   readOnly: false,\n   showDropdown: true,\n   placeholder: \"\",\n   multiple: false,\n};\n\nconst ABFieldSelectivityDefaults = {\n   key: \"selectivity\",\n};\n\nmodule.exports = class ABFieldSelectivity extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldSelectivityDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return {\n         key: \"selectivity\",\n         icon: \"bars\",\n         menuName: \"\",\n         description: \"\",\n      };\n   }\n\n   selectivityRender(domNode, settings, App, row) {\n      if (domNode == null) return;\n\n      const cypress = settings.dataCy || \"\";\n      domNode.setAttribute(\"data-cy\", cypress);\n\n      // setting up our specific settings:\n      settings = settings || {};\n      for (const dv in defaultSettings) {\n         if (settings[dv] === null) {\n            settings[dv] = null;\n         } else {\n            settings[dv] = settings[dv] || defaultSettings[dv];\n         }\n      }\n\n      if (\n         settings.multiple &&\n         settings.items &&\n         settings.data &&\n         settings.data.length\n      ) {\n         settings.data.forEach(function (d) {\n            settings.items.map(function (i) {\n               if (i.id == d.id) d.hex = i.hex;\n            });\n         });\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      } else if (settings[\"data\"] == null || settings[\"data\"] == \"\") {\n         settings[\"data\"] = this.prepareData([], settings.multiple);\n      } else {\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      }\n\n      // store the field id so we can look it up on click events later\n      settings[\"field\"] = this.id;\n\n      // Prevent render selectivity duplicate\n      if (domNode.selectivity != null) {\n         // Refresh selectivity settings\n         domNode.selectivity.setOptions(settings);\n\n         return;\n      }\n\n      settings.element = domNode;\n\n      // Render selectivity\n      let selectivityInput;\n      if (settings.multiple) {\n         if (settings.isUsers) {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: #eee !important; color: #666 !important; box-shadow: inset 0px 1px 1px #333;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-user\" style=\"color: #666; opacity: 0.6;\"></i> \n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t\t${!settings.isLabelHidden ? options.text : \"\"}\n\t\t\t\t\t\t\t\t${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\" style=\"color: #333;\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         } else {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: ${options.hex} !important;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n                        ${\n                           settings.editPage\n                              ? ` <a class=\"selectivity-multiple-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>`\n                              : \"\"\n                        }\n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n                        ${!settings.isLabelHidden ? options.text : \"\"}\n                        ${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         }\n         selectivityInput = new Selectivity.Inputs.Multiple(settings);\n\n         domNode.selectivity = selectivityInput;\n         this.selectivitySetBadge(domNode, App, row);\n      } else {\n         settings.templates = {\n            singleSelectedItem: function (options) {\n               return `<span class=\"selectivity-single-selected-item\" data-item-id=\"${\n                  options.uuid\n               }\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t${\n                        settings.editPage\n                           ? '<a class=\"selectivity-single-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>'\n                           : \"\"\n                     }\n                     ${\n                        settings.additionalText\n                           ? settings.additionalText(options)\n                           : \"\"\n                     }\n                     ${!settings.isLabelHidden ? options.text : \"\"}\n                     ${\n                        options.removable\n                           ? '<a class=\"selectivity-single-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>'\n                           : \"\"\n                     }\n\t\t\t\t\t\t</span>`;\n            },\n         };\n\n         selectivityInput = new Selectivity.Inputs.Single(settings);\n         domNode.selectivity = selectivityInput;\n      }\n\n      if (settings.editPage) {\n         const trigerEditPageEvent = () => {\n            const instance = this;\n            const editMenus = document.querySelectorAll(\n               \".selectivity-single-selected-item-edit, .selectivity-multiple-selected-item-edit\"\n            );\n            for (let i = 0; i < editMenus.length; i++) {\n               const eMenu = editMenus[i];\n               if (eMenu && !eMenu.__hasClickEvent) {\n                  eMenu.addEventListener(\n                     \"click\",\n                     function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        const parentElm = this.parentElement;\n                        if (!parentElm) return;\n\n                        const rowId = parentElm.getAttribute(\"data-item-id\");\n                        if (!rowId) return;\n\n                        const fieldId = parentElm.getAttribute(\"data-field-id\");\n                        if (!fieldId) return;\n\n                        const thisField = instance.object.fieldByID(fieldId);\n                        if (!thisField) return;\n\n                        thisField.emit(\"editPage\", rowId);\n                     },\n                     true\n                  );\n                  eMenu.__hasClickEvent = true;\n               }\n            }\n         };\n\n         setTimeout(() => {\n            trigerEditPageEvent();\n\n            domNode.addEventListener(\"change\", () => {\n               trigerEditPageEvent();\n            });\n         }, 500);\n      }\n\n      // WORKAROUND : remove caret icon of selectivity\n      if (settings.readOnly) {\n         const caretElems = domNode.getElementsByClassName(\"selectivity-caret\");\n         for (let i = 0; i < caretElems.length; i++) {\n            const caretElm = caretElems[i];\n            if (caretElm) {\n               caretElm.parentNode.removeChild(caretElm);\n            }\n         }\n      }\n\n      // remember our settings values\n      this.selectivitySettings = settings;\n   }\n\n   selectivityGet(domNode) {\n      if (domNode && domNode.selectivity) {\n         if (this.selectivitySettings && this.selectivitySettings.multiple) {\n            // on a multiple select, return an array of results, or empty array\n            return domNode.selectivity.getData() || [];\n         } else {\n            // if a single select, return the object or null\n            return domNode.selectivity.getData() || null;\n         }\n      } else {\n         if (this.selectivitySettings && this.selectivitySettings.multiple)\n            return [];\n         else return null;\n      }\n   }\n\n   selectivitySet(domNode, data) {\n      if (!domNode || !domNode.selectivity) return;\n\n      data = this.prepareData(data, domNode.selectivity.options.multiple);\n\n      if (\n         (Array.isArray(data) && data[0]) || // Check Array\n         (data && data.id)\n      )\n         // Check a object\n         domNode.selectivity.setData(data);\n      else domNode.selectivity.clear();\n   }\n\n   selectivityDestroy(domNode) {\n      if (domNode && domNode.selectivity) {\n         domNode.selectivity.destroy();\n\n         delete domNode.selectivity;\n      }\n   }\n\n   prepareData(data, multiple = true) {\n      if (!data && multiple) {\n         return [];\n      } else if (multiple && data && Array.isArray(data) && data.length == 0) {\n         return [];\n      } else if (!multiple && data && Array.isArray(data) && data.length == 0) {\n         return null;\n      } else if (!data && !multiple) {\n         return null;\n      }\n\n      if (typeof data == \"string\" && data.length > 0) {\n         try {\n            data = JSON.parse(data);\n         } catch (e) {\n            // not JSON parsable, so convert to\n            data = { id: data, text: data };\n         }\n      }\n\n      // if single select, then it should be object\n      if (!multiple && Array.isArray(data)) {\n         data = data[0];\n      } else if (multiple && !Array.isArray(data)) {\n         data = [data];\n      }\n\n      // check to see if id is present on each item\n      if (multiple) {\n         data.forEach((d) => {\n            if (!d.id && d.uuid) {\n               d.id = d.uuid;\n            }\n         });\n      } else {\n         if (!data.id && data.uuid) data.id = data.uuid;\n      }\n\n      if (data == null && multiple) {\n         data = [];\n      }\n\n      return data;\n   }\n\n   selectivitySetBadge(domNode) {\n      if (!domNode.clientHeight) return;\n      const innerHeight = domNode.clientHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         let values = [];\n         if (domNode && domNode.selectivity)\n            values = domNode.selectivity.getValue() || [];\n\n         count = values.length;\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               // v2: this just updated the $height property for this row\n               // we don't do that anymore:\n               // anchor.addEventListener(\"click\", function () {\n               //    App.actions.onRowResizeAuto(row.id, innerHeight);\n               // });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n};\n","const ABFieldStringCore = require(\"../../core/dataFields/ABFieldStringCore\");\n\nmodule.exports = class ABFieldString extends ABFieldStringCore {\n   // constructor(values, object) {\n   //    super(values, object);\n\n   // {\n   //   settings: {\n   // \t  default: 'string',\n   // \t  supportMultilingual: 1/0\n   //   }\n   // }\n\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldString\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n      config.css = \"textCell\";\n      // config.sort   = 'string'\n      config.template = (obj, common, value /* , col, ind */) => {\n         // if this isn't part of a group header display the default format\n         if (!obj.$group) {\n            return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   /**\n    * @method formComponentMobile\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldTextFormulaCore = require(\"../../core/dataFields/ABFieldTextFormulaCore\");\n\nmodule.exports = class ABFieldTextFormula extends ABFieldTextFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldTextFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(/* row, App, node, options */) {}\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return null;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldTreeCore = require(\"../../core/dataFields/ABFieldTreeCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldTree extends ABFieldTreeCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj) {\n      return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-tree`;\n   }\n\n   // return the grid column header definition for this instance of ABFieldTree\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      let formClass = \"\";\n      let placeHolder = \"\";\n      if (options.isForm) {\n         formClass = \" form-entry\";\n         placeHolder =\n            \"<span style='color: #CCC; padding: 0 5px;'>\" +\n            L(\"Select items\") +\n            \"</span>\";\n      }\n\n      const width = options.width;\n\n      config.template = (obj) => {\n         if (obj.$group) return obj[field.columnName];\n\n         const branches = [];\n         let selectOptions = this.AB.cloneDeep(field.settings.options);\n         selectOptions = new webix.TreeCollection({\n            data: selectOptions,\n         });\n\n         let values = obj;\n         if (obj[field.columnName] != null) {\n            values = obj[field.columnName];\n         }\n\n         selectOptions.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  selectOptions.data.each(function (par) {\n                     if (selectOptions.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values'>\";\n         if (branches.length == 0) {\n            nodeHTML += placeHolder;\n         } else {\n            branches.forEach(function (item) {\n               nodeHTML +=\n                  '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                  myHex +\n                  ' !important;\">' +\n                  item +\n                  \"</span>\";\n            });\n         }\n         nodeHTML += \"</div>\";\n\n         // field.setBadge(node, App, row);\n\n         if (width) {\n            return (\n               '<div style=\"margin-left: ' +\n               width +\n               'px;\" class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         } else {\n            return (\n               '<div class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      const field = this;\n\n      if (options.isForm) {\n         if (!row || row.length == 0) {\n            node.innerHTML =\n               \"<div class='list-data-values form-entry'><span style='color: #CCC; padding: 0 5px;'>\" +\n               L(\"Select items\") +\n               \"</span></div>\";\n            return;\n         }\n\n         const branches = [];\n         options = this.AB.cloneDeep(field.settings.options);\n         options = new webix.TreeCollection({\n            data: options,\n         });\n\n         let values = row;\n         if (row[field.columnName] != null) {\n            values = row[field.columnName];\n         }\n\n         options.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  options.data.each(function (par) {\n                     if (options.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values form-entry'>\";\n         branches.forEach(function (item) {\n            nodeHTML +=\n               '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n               myHex +\n               ' !important;\">' +\n               item +\n               \"</span>\";\n         });\n         nodeHTML += \"</div>\";\n\n         node.innerHTML = nodeHTML;\n      }\n\n      field.setBadge(node, App, row);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, component) {\n      const idBase = App.unique(this.idCustomContainer(row));\n      const idPopup = `${idBase}-popup`;\n      const idTree = `${idBase}-tree`;\n      const view = $$(node);\n      const field = this;\n      const parentComponent = component;\n      let values = {};\n      let firstRender = true;\n\n      function getValues(field, row) {\n         let values = {};\n         if (\n            typeof field != \"undefined\" &&\n            typeof field.columnName != \"undefined\" &&\n            typeof row[field.columnName] != \"undefined\"\n         ) {\n            values = row[field.columnName];\n         }\n         return values;\n      }\n\n      function populateTree(field, vals) {\n         values = getValues(field, vals);\n\n         const $Tree = $$(idTree);\n         $Tree.blockEvent(); // prevents endless loop\n\n         const options = field.AB.cloneDeep(field.settings.options);\n         $Tree.clearAll();\n         $Tree.parse(options);\n         $Tree.refresh();\n         $Tree.uncheckAll();\n         $Tree.openAll();\n\n         if (values != null && values.length) {\n            values.forEach(function (id) {\n               if ($Tree.exists(id)) {\n                  $Tree.checkItem(id);\n                  const dom = $Tree.getItemNode(id);\n                  dom.classList.add(\"selected\");\n               }\n            });\n         }\n         $Tree.unblockEvent();\n      }\n\n      if ($$(idPopup)) {\n         $$(idPopup).show();\n         populateTree(this, row);\n      } else {\n         webix\n            .ui({\n               id: idPopup,\n               view: \"popup\",\n               width: 500,\n               height: 400,\n               on: {\n                  onShow: () => {\n                     if (firstRender == true) populateTree(this, row);\n\n                     firstRender = false;\n                  },\n               },\n               body: {\n                  id: idTree,\n                  view: \"tree\",\n                  css: \"ab-data-tree\",\n                  template: function (obj, common) {\n                     return (\n                        \"<label>\" +\n                        common.checkbox(obj, common) +\n                        \"&nbsp;\" +\n                        obj.text +\n                        \"</label>\"\n                     );\n                  },\n                  on: {\n                     onItemCheck: async function (id, value, event) {\n                        const dom = this.getItemNode(id);\n                        const tree = this;\n                        if (value == true) {\n                           dom.classList.add(\"selected\");\n                        } else {\n                           dom.classList.remove(\"selected\");\n                        }\n                        // works for the same-level children only\n                        // except root items\n                        if (this.getParentId(id)) {\n                           tree.blockEvent(); // prevents endless loop\n\n                           let rootid = id;\n                           while (this.getParentId(rootid)) {\n                              rootid = this.getParentId(rootid);\n                              if (rootid != id) tree.uncheckItem(rootid);\n                           }\n\n                           this.data.eachSubItem(rootid, function (item) {\n                              if (item.id != id) tree.uncheckItem(item.id);\n                           });\n\n                           tree.unblockEvent();\n                        } else {\n                           tree.blockEvent(); // prevents endless loop\n                           this.data.eachSubItem(id, function (obj) {\n                              if (obj.id != id) tree.uncheckItem(obj.id);\n                           });\n                           tree.unblockEvent();\n                        }\n                        const values = {};\n                        values[field.columnName] = $$(idTree).getChecked();\n\n                        if (row.id) {\n                           // pass null because it could not put empty array in REST api\n                           if (values[field.columnName].length == 0)\n                              values[field.columnName] = \"\";\n\n                           try {\n                              await field.object.model().update(row.id, values);\n\n                              // update the client side data object as well so other data changes won't cause this save to be reverted\n                              if (view && view.updateItem) {\n                                 view.updateItem(row.id, values);\n                              }\n                           } catch (err) {\n                              node.classList.add(\"webix_invalid\");\n                              node.classList.add(\"webix_invalid_cell\");\n\n                              this.AB.notify.developer(err, {\n                                 message:\n                                    \"ABFieldTree:onItemClick(): Error updating our entry.\",\n                                 row: row,\n                                 values: values,\n                              });\n                           }\n                        } else {\n                           const rowData = {};\n                           rowData[field.columnName] = $$(idTree).getChecked();\n\n                           field.setValue($$(parentComponent.ui.id), rowData);\n                        }\n                     },\n                  },\n               },\n            })\n            .show(node, {\n               x: -7,\n            });\n      }\n      return false;\n   }\n\n   setBadge(domNode, row) {\n      const field = this;\n      domNode = domNode.querySelector(\".list-data-values\");\n      const innerHeight = domNode.scrollHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         if (row[field.columnName] && row[field.columnName].length)\n            count = row[field.columnName].length;\n         else count = 0;\n\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               anchor.addEventListener(\"click\", function (event) {\n                  // v2: this was just saving the new height to the\n                  // field properties. We don't do that anymore:\n                  // App.actions.onRowResizeAuto(row.id, innerHeight);\n                  event.stopPropagation();\n               });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"formtree\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtree\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   getValue(item, rowData) {\n      let values = {};\n      values = item.getValues();\n      return values;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return false;\n\n      const val = rowData[this.columnName] || [];\n\n      item.setValues(val);\n      // get dom\n      const dom = item.$view.querySelector(\".list-data-values\");\n\n      if (!dom) return false;\n\n      // set value to selectivity\n      this.customDisplay(val, this.App, dom, {\n         editable: true,\n         isForm: true,\n      });\n\n      setTimeout(function () {\n         let height = 33;\n         if (dom.scrollHeight > 33) {\n            height = dom.scrollHeight;\n         }\n         item.config.height = height + 5;\n         item.resize();\n      }, 200);\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\nconst ABFieldUserCore = require(\"../../core/dataFields/ABFieldUserCore\");\n\nmodule.exports = class ABFieldUser extends ABFieldUserCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   async save() {\n      // Add new\n      if (this.id == null) {\n         const SiteUser = this.AB.objectUser();\n         const Defaults = ABFieldUserCore.defaults();\n\n         this.settings.linkObject = SiteUser.id;\n         this.settings.isCustomFK = 1;\n\n         if (this.settings.isMultiple) {\n            this.settings.indexField2 = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"many\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         } else {\n            this.settings.indexField = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"one\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         }\n\n         // TODO: .fieldCustomNew() for saving \"local\" changes.\n         // NOTE: The Object adding this Field sees it's data as a ABFieldUser\n         //       connection.\n         //       However, the SiteUser will see the data as a ABFieldConnect\n         //       connection\n         const linkCol = SiteUser.fieldNew({\n            key: ABFieldConnectCore.defaults().key,\n            columnName: `${this.object.name}_${this.label}`,\n            label: this.object.label,\n            settings: {\n               showIcon: this.settings.showIcon,\n               linkObject: this.object.id,\n               linkType: this.settings.linkViaType,\n               linkViaType: this.settings.linkType,\n               isCustomFK: this.settings.isCustomFK,\n               indexField: this.settings.indexField,\n               indexField2: this.settings.indexField2,\n               isSource: 0,\n            },\n         });\n\n         // // Create definitions of the connected fields\n         // // NOTE: skip directly to the ABMLClass.save() to avoid the\n         // // migrations caused during the ABField.save() operations.\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         // linkCol.settings.linkColumn = this.id;\n         // await ABFieldUserCore.prototype.save.call(linkCol);\n\n         // // Update the id value of linked field to connect together\n         // this.settings.linkColumn = linkCol.id;\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         let newDef = await this.toDefinition().save();\n         this.id = newDef.id;\n\n         linkCol.settings.linkColumn = this.id;\n         let newLinkDef = await linkCol.toDefinition().save();\n         linkCol.id = newLinkDef.id;\n\n         this.settings.linkColumn = linkCol.id;\n         await this.toDefinition().save();\n\n         // Add fields to Objects\n         await this.object.fieldAdd(this);\n\n         await SiteUser.fieldAdd(linkCol);\n\n         // Create column to DB\n         await this.migrateCreate();\n\n         await linkCol.migrateCreate();\n\n         return this;\n      } else {\n         return super.save();\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldUser\n\n   columnHeader(options) {\n      // debugger;\n      options = this.setDisplayOptions(options);\n      return super.columnHeader(options);\n   }\n\n   /**\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customDisplay(row, App, node, options = {}) {\n   //    debugger;\n   //    options = this.setDisplayOptions(options);\n   //\n   //    return super.customDisplay(row, App, node, options);\n   // }\n\n   setDisplayOptions(options) {\n      options = options || {};\n      options.editable =\n         this.settings.editable != null ? this.settings.editable : true;\n\n      options.isLabelHidden =\n         this.settings.isShowUsername != null\n            ? !this.settings.isShowUsername\n            : false;\n\n      options.additionalText = (opt) => {\n         if (!this.settings.isShowProfileImage) return \"\";\n\n         if (opt.image_id)\n            return `<img src='/file/${opt.image_id}' style='border-radius:100%; object-fit: cover; margin: 0 5px 0 -10px;' width='28' height='28' />`;\n         else return '<i style=\"opacity: 0.6;\" class=\"fa fa-user\"></i> ';\n      };\n\n      return options;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (this.settings.isCurrentUser) {\n         if (this.settings.isMultiple) {\n            values[this.columnName] = [\n               {\n                  id: this.AB.Account.username(),\n                  text: this.AB.Account.username(),\n               },\n            ];\n         } else {\n            values[this.columnName] = this.AB.Account.username();\n         }\n      }\n   }\n\n   getValue(item) {\n      let val = super.getValue(item);\n\n      if (val) {\n         if (typeof val == \"string\")\n            val = val.replace(/ab-current-user/g, this.AB.Account.username());\n         else if (Array.isArray(val))\n            val = val.map((v) =>\n               (v.username ?? v.uuid ?? v.id ?? v)?.replace(\n                  /ab-current-user/g,\n                  this.AB.Account.username()\n               )\n            );\n      }\n\n      return val;\n   }\n\n   setValue(item, rowData) {\n      let val = rowData[this.columnName];\n      // Select \"[Current user]\" to update\n      if (val == \"ab-current-user\") val = this.AB.Account.username();\n\n      rowData[this.columnName] = val;\n\n      super.setValue(item, rowData);\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((u) => {\n         const result = {\n            id: u.username,\n            image: u.image_id,\n         };\n\n         if (this.settings.isMultiple) {\n            result.text = u.username;\n         } else {\n            result.value = u.username;\n         }\n\n         return result;\n      });\n   }\n};\n","const ABMobilePageCore = require(\"../../core/mobile/ABMobilePageCore\");\n\nmodule.exports = class ABMobilePage extends ABMobilePageCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // check to see if I've been updated, if so, alert my parent:\n      this.__Handler_ABDEF_UPDATED = (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n            this.AB.off(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n         }\n      };\n      this.AB.on(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n\n      // check to see if any of my child pages have been updated and\n      // update my defintion of them:\n      this.__Handler_DEF_UPDATED = (page) => {\n         // create a new Field with the updated def\n         var def = this.AB.definitionByID(page.id);\n         if (!def) return;\n\n         var newPage = this.pageNew(def);\n\n         // we want to keep the same pageID order:\n         var newPages = [];\n         this.pages().forEach((pg) => {\n            if (pg.id === page.id) {\n               newPages.push(newPage);\n               return;\n            }\n            newPages.push(pg);\n         });\n\n         this._pages = newPages;\n\n         page.off(\"definition.updated\", this.__Handler_DEF_UPDATED);\n      };\n      this.pages().forEach((p) => {\n         p.on(\"definition.updated\", this.__Handler_DEF_UPDATED);\n      });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABMobilePage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance(parent) {\n      // create a new Field with the updated def\n      var def = this.AB.definitionByID(this.id);\n      if (!def) return;\n\n      var newPage = (parent ?? this.parent)?.pageNew(def);\n\n      try {\n         // detatch ourself from other emitters:\n         this.AB.off(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n         this.pages().forEach((pg) => {\n            pg.removeAllListeners(\"definition.updated\");\n         });\n      } catch (e) {\n         debugger;\n         console.error(e);\n      }\n\n      return newPage;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let allViews = this.views();\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no widgets\");\n      }\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABMobileViewCore = require(\"../../core/mobile/ABMobileViewCore.js\");\n\nmodule.exports = class ABMobileView extends ABMobileViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"mobile-view\",\n         \"mobile-page\",\n         // \"formpanel\",\n         // \"viewcontainer\",\n         // // not allowed Detail's widgets\n         // \"detailcheckbox\",\n         // \"detailcustom\",\n         // \"detailconnect\",\n         // \"detailimage\",\n         // \"detailselectivity\",\n         // \"detailtext\",\n         // \"detailtree\",\n         // // not allowed Form's widgets\n         // \"button\",\n         // \"checkbox\",\n         // \"connect\",\n         // \"datepicker\",\n         // \"fieldcustom\",\n         // \"textbox\",\n         // \"numberbox\",\n         // \"selectsingle\",\n         // \"selectmultiple\",\n         // \"formtree\",\n         // \"fieldreadonly\",\n         // // not allowed Chart's Widgets\n         // \"pie\",\n         // \"bar\",\n         // \"line\",\n         // \"area\",\n         // // not allowed Report page\n         // \"report\",\n         // \"reportPage\",\n         // \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our sub views\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABMobileViewFormCore = require(\"../../core/mobile/ABMobileViewFormCore\");\n\nconst ABMobileViewFormButton = require(\"./ABMobileViewFormButton\");\n\nmodule.exports = class ABMobileViewForm extends ABMobileViewFormCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method refreshDefaultButton()\n    * On the ABDesigner once a Form Field is added/removed from a form, we want\n    * to make sure the default Form Button is pushed down to the bottom of the\n    * list of form Items.\n    * @param {obj} ids\n    *        The id hash of the webix widgets that show the fields.\n    * @return {ABMobileViewFormButton}\n    */\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABMobileViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABMobileViewFormButton.newInstance(\n            this.application,\n            this\n         );\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views((v) => v.id != defaultButton.id);\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.dataviewID) {\n         this.warningsMessage(`does not have a DataCollection assigned.`);\n      } else {\n         let DC = this.datacollection;\n         if (!DC) {\n            this.warningsMessage(\n               `references an unknown DataCollection [${this.settings.dataviewID}].`\n            );\n         }\n      }\n   }\n};\n","const ABMobileViewFormButtonCore = require(\"../../core/mobile/ABMobileViewFormButtonCore\");\n\nmodule.exports = class ABMobileViewFormButton extends (\n   ABMobileViewFormButtonCore\n) {};\n","const ABMobileViewFormCheckboxCore = require(\"../../core/mobile/ABMobileViewFormCheckboxCore\");\n\nmodule.exports = class ABMobileViewFormCheckbox extends (\n   ABMobileViewFormCheckboxCore\n) {};\n","const ABMobileViewFormConnectCore = require(\"../../core/mobile/ABMobileViewFormConnectCore\");\n\n// const ABViewPropertyAddPage =\n//    require(\"./viewProperties/ABViewPropertyAddPage\").default;\n// const ABViewPropertyEditPage =\n//    require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\n// const ABViewFormConnectPropertyComponentDefaults =\n//    ABMobileViewFormConnectCore.defaultValues();\n\n// const ABPopupSort = require(\"../../../ABDesigner/ab_work_object_workspace_popupSortFields\");\n\n// let FilterComponent = null;\n// let SortComponent = null;\n\nmodule.exports = class ABMobileViewFormConnect extends (\n   ABMobileViewFormConnectCore\n) {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Does this do anything here?\n      // this.addPageTool.fromSettings(this.settings);\n      // this.editPageTool.fromSettings(this.settings);\n   }\n\n   // static get addPageProperty() {\n   //    return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   // }\n\n   // static get editPageProperty() {\n   //    return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   // component() {\n   //    return new ABViewFormConnectComponent(this);\n   // }\n\n   // get addPageTool() {\n   //    if (this.__addPageTool == null)\n   //       this.__addPageTool = new ABViewPropertyAddPage();\n\n   //    return this.__addPageTool;\n   // }\n\n   // get editPageTool() {\n   //    if (this.__editPageTool == null)\n   //       this.__editPageTool = new ABViewPropertyEditPage();\n\n   //    return this.__editPageTool;\n   // }\n};\n","const ABMobileViewFormCustomCore = require(\"../../core/mobile/ABMobileViewFormCustomCore\");\n\nmodule.exports = class ABMobileViewFormCustom extends (\n   ABMobileViewFormCustomCore\n) {};\n","const ABMobileViewFormDateCore = require(\"../../core/mobile/ABMobileViewFormDateCore\");\n\nmodule.exports = class ABMobileViewFormDate extends ABMobileViewFormDateCore {};\n","const ABMobileViewFormDatetimeCore = require(\"../../core/mobile/ABMobileViewFormDatetimeCore\");\n\nmodule.exports = class ABMobileViewFormDatetime extends (\n   ABMobileViewFormDatetimeCore\n) {};\n","const ABMobileViewFormEmailCore = require(\"../../core/mobile/ABMobileViewFormEmailCore\");\n\nmodule.exports = class ABMobileViewFormEmail extends (\n   ABMobileViewFormEmailCore\n) {};\n","const ABMobileViewFormFileCore = require(\"../../core/mobile/ABMobileViewFormFileCore\");\n\nmodule.exports = class ABMobileViewFormFile extends ABMobileViewFormFileCore {};\n","const ABMobileViewFormFormulaCore = require(\"../../core/mobile/ABMobileViewFormFormulaCore\");\n\nmodule.exports = class ABMobileViewFormFormula extends (\n   ABMobileViewFormFormulaCore\n) {};\n","const ABMobileViewFormImageCore = require(\"../../core/mobile/ABMobileViewFormImageCore\");\n\nmodule.exports = class ABMobileViewFormImage extends (\n   ABMobileViewFormImageCore\n) {};\n","const ABMobileViewFormItemCore = require(\"../../core/mobile/ABMobileViewFormItemCore\");\n\nmodule.exports = class ABMobileViewFormItem extends ABMobileViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   // warningsEval() {\n   //    super.warningsEval();\n   //    this.warningsMessage(`FormItem Test Warning.`);\n   // }\n};\n","const ABMobileViewFormNumberCore = require(\"../../core/mobile/ABMobileViewFormNumberCore\");\n\nmodule.exports = class ABMobileViewFormNumber extends (\n   ABMobileViewFormNumberCore\n) {};\n","const ABMobileViewFormReadonlyCore = require(\"../../core/mobile/ABMobileViewFormReadonlyCore\");\n\nmodule.exports = class ABMobileViewFormReadonly extends (\n   ABMobileViewFormReadonlyCore\n) {};\n","const ABMobileViewFormSelectMultipleCore = require(\"../../core/mobile/ABMobileViewFormSelectMultipleCore\");\n\nmodule.exports = class ABMobileViewFormSelectMultiple extends (\n   ABMobileViewFormSelectMultipleCore\n) {};\n","const ABMobileViewFormSelectSingleCore = require(\"../../core/mobile/ABMobileViewFormSelectSingleCore\");\n\nmodule.exports = class ABMobileViewFormSelectSingle extends (\n   ABMobileViewFormSelectSingleCore\n) {};\n","const ABMobileViewFormTextboxCore = require(\"../../core/mobile/ABMobileViewFormTextboxCore\");\n\nmodule.exports = class ABMobileViewFormTextbox extends (\n   ABMobileViewFormTextboxCore\n) {\n   // warningsEval() {\n   //    super.warningsEval();\n   //    this.warningsMessage(`${k} references an unknown Page.`);\n   // }\n};\n","const ABMobileViewLabelCore = require(\"../../core/mobile/ABMobileViewLabelCore\");\n// const ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABMobileViewLabel extends ABMobileViewLabelCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   // component() {\n\n   //    // return new ABViewLabelComponent(this);\n   // }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABMobileViewListCore = require(\"../../core/mobile/ABMobileViewListCore\");\n\nmodule.exports = class ABMobileViewList extends ABMobileViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   warningsEval() {\n      super.warningsEval();\n\n      [\"linkPageAdd\", \"linkPageDetail\"].forEach((k) => {\n         if (this.settings[k]) {\n            let page = this.application.pageByID(this.settings[k], true);\n            if (!page) {\n               this.warningsMessage(`${k} references an unknown Page.`);\n            }\n         }\n      });\n   }\n};\n","/**\n * ABProcessLane\n * manages a lane in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nvar ABProcessLaneCore = require(\"../../core/process/ABProcessLaneCore\");\n\nmodule.exports = class ABProcessLane extends ABProcessLaneCore {\n   // constructor(attributes, process, application) {\n   //    super(attributes, process, application);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   transferParticipantWhereToMe(id) {\n      var myParticipant = this.process.elementForDiagramID(id);\n      if (myParticipant) {\n         // if I haven't already set my where clause, and my Participant\n         // has one, then take it:\n         if (!this.stashed && myParticipant.stashed) {\n            var copyParams = [\n               \"stashed\",\n               \"useRole\",\n               \"role\",\n               \"useAccount\",\n               \"account\",\n            ];\n            copyParams.forEach((p) => {\n               var swap = this[p];\n               this[p] = myParticipant[p];\n               myParticipant[p] = swap; // ?? do this ??\n            });\n         }\n      }\n   }\n\n   /**\n    * fromElement()\n    * initialize this Lane's values from the given BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n\n      // on creation, if I have child objects, then move the .where definition\n      // from my parent Participant to ME\n      if (element.children && element.children.length > 0) {\n         if (element.parent && element.parent.type == \"bpmn:Participant\") {\n            this.transferParticipantWhereToMe(element.parent.id);\n         }\n      } else {\n         // this info might just reside in the .parent.children[]\n         if (\n            element.parent &&\n            element.parent.children &&\n            element.parent.children.length > 0\n         ) {\n            element.parent.children.forEach((child) => {\n               if (child.type != \"bpmn:Lane\") {\n                  // if child has lanes\n                  if (\n                     child.businessObject.lanes &&\n                     child.businessObject.lanes.length > 0\n                  ) {\n                     // if lane is me\n                     var myLane = child.businessObject.lanes.find((l) => {\n                        return l.id == this.diagramID;\n                     });\n                     if (myLane) {\n                        this.transferParticipantWhereToMe(element.parent.id);\n\n                        // tell child I'm it's lane:\n                        var objChild = this.process.elementForDiagramID(\n                           child.id\n                        );\n                        if (objChild) {\n                           objChild.setLane(this);\n                        }\n                     }\n                  }\n               }\n            });\n         }\n      }\n\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Lane with information that was relevant\n    * from the provided BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // if I picked up a new task, inform it I am it's lane:\n   }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system (when there are no lanes defined)\n * and provide a way to lookup a SiteUser.\n */\nvar ABProcessParticipantCore = require(\"../../core/process/ABProcessParticipantCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessParticipant extends ABProcessParticipantCore {\n   // constructor(attributes, process, AB) {\n   //    super(attributes, process, AB);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   /**\n    * fromElement()\n    * initialize this Participant's values from the given BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Participant with information that was relevant\n    * from the provided BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      if (defElement.children) {\n         var laneIDs = [];\n         defElement.children.forEach((c) => {\n            if (c.type == \"bpmn:Lane\") {\n               laneIDs.push(c.id);\n            }\n         });\n         this.laneIDs = laneIDs;\n      }\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this objec.\n    * @return {json}\n    */\n   diagramProperties() {\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n   }\n};\n","const ABProcessElementCore = require(\"../../../core/process/tasks/ABProcessElementCore.js\");\n\nmodule.exports = class ABProcessElement extends ABProcessElementCore {\n   // constructor(attributes, process, AB, defaultValues) {\n   //    super(attributes, process, AB, defaultValues);\n\n   //    // listen\n   // }\n\n   /**\n    * @method destroy()\n    * remove this task definition.\n    * @return {Promise}\n    */\n   destroy() {\n      ////\n      //// TODO: once our core conversion is complete, this .save() can be\n      //// moved to ABProcessTaskCore, and our ABDefinition.save() can take\n      //// care of the proper method to save depending on the current Platform.\n      ////\n      // return this.toDefinition()\n      //     .destroy()\n\n      return super.destroy().then(() => {\n         return this.process.elementRemove(this);\n      });\n   }\n\n   isValid() {\n      /*\n        var validator = OP.Validation.validator();\n\n        // label/name must be unique:\n        var isNameUnique =\n            this.AB.processes((o) => {\n                return o.name.toLowerCase() == this.name.toLowerCase();\n            }).length == 0;\n        if (!isNameUnique) {\n            validator.addError(\n                \"name\",\n                L(\n                    \"ab.validation.object.name.unique\",\n                    `Process name must be unique (\"${this.name}\"\" already used in this Application)`\n                )\n            );\n        }\n\n        return validator;\n        */\n\n      // var isValid =\n      //     this.AB.processes((o) => {\n      //         return o.name.toLowerCase() == this.name.toLowerCase();\n      //     }).length == 0;\n      // return isValid;\n\n      return true;\n   }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   findLane(curr, cb) {\n      if (!curr) {\n         cb(null, null);\n         return;\n      }\n\n      // if current object has a LANE definition, use that one:\n      if (curr.lanes && curr.lanes.length > 0) {\n         cb(null, curr.lanes[0]);\n      } else if (curr.$type == \"bpmn:Participant\") {\n         // if the current is a Participant, take that one\n         cb(null, curr);\n      } else {\n         // else move upwards and check again:\n         curr = curr.$parent;\n         this.findLane(curr, cb);\n      }\n   }\n\n   setLane(Lane) {\n      this.laneDiagramID = Lane.diagramID;\n   }\n\n   /**\n    * fromElement()\n    * initialize this Task's values from the given BPMN:Element\n    * @param {BPMNElement}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Task_08j07ni\",\n                \"width\": 100,\n                \"height\": 80,\n                \"type\": \"bpmn:SendTask\",\n                \"x\": 20,\n                \"y\": -2130,\n                \"order\": {\n                    \"level\": 5\n                },\n                \"businessObject\": {\n                    \"$type\": \"bpmn:SendTask\",\n                    \"id\": \"Task_08j07ni\",\n                    \"name\": \"ffff\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": 20,\n                            \"y\": -2130,\n                            \"width\": 100,\n                            \"height\": 80\n                        },\n                        \"id\": \"SendTask_0iidv6o_di\"\n                    }\n\n                    // Some elements (like EndEvents) have:\n                    .eventDefinitions: [\n                        {\n                            $type: \"actual bpmn:ElementType\",\n                            ...\n                        }\n                    ]\n                },\n                \"incoming\":[],\n                \"outgoing\":[]\n            }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // our lane may have changed:\n      var currObj = defElement.businessObject;\n      this.findLane(currObj, (err, obj) => {\n         if (obj) {\n            this.laneDiagramID = obj.id;\n         } else {\n            // if my parent shape is a Participant, then use that:\n            if (\n               defElement.parent &&\n               defElement.parent.type == \"bpmn:Participant\"\n            ) {\n               this.laneDiagramID = defElement.parent.id;\n            } else {\n               this.laneDiagramID = null;\n            }\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      const warnings = this.warnings();\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n            warn: warnings.length ? warnings : null,\n         },\n      ];\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ui = {\n         id: id,\n         view: \"label\",\n         label: \"this task has not implement properties yet...\",\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {}\n\n   /**\n    * property()\n    * return the specific property value if it exists.\n    * @return {mixed} | undefined\n    */\n   property(id) {\n      if ($$(id)) {\n         return $$(id).getValue();\n      }\n   }\n\n   /**\n    * switchTo()\n    * replace this object with an instance of one of our child classes:\n    * @param {ABProcessTask*} child\n    *        an instance of the new Process Task we are replaced with.\n    * @param {string} propertiesID\n    *        the webix ui.id container for the properties panel.\n    */\n   switchTo(child, propertiesID) {\n      // remove myself from our containing process's elements\n      this.process.elementRemove(this);\n\n      // add the new Process WITH the same id\n      this.process.elementAdd(child);\n\n      // show the child properties:\n      child.propertiesShow(propertiesID);\n\n      this.emit(\"switchTo\", child);\n   }\n\n   /**\n    * @method warningsEval()\n    * re-evaluate our warnings for this Process Task.\n    * Most of our ProcessTasks need to also verify data related to\n    * other available tasks, so we need to call the onProcessReady()\n    * so we can access those values.\n    */\n   warningsEval() {\n      super.warningsEval();\n      this.onProcessReady();\n\n      // if this isn't an end type of task, then there must be\n      // > 0 next tasks\n      if (!this.isEndTask()) {\n         const myOutgoingConnections = this.process.connectionsOutgoing(\n            this.diagramID\n         );\n         if (myOutgoingConnections.length < 1) {\n            this.warningMessage(\"should have another task after this one\");\n         }\n      }\n   }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(msg, data = {}) {\n      let message = `${this.defaults.key}[${\n         this.label ? this.label : this.name\n      }]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABProcessEndCore = require(\"../../../core/process/tasks/ABProcessEndCore.js\");\n\nmodule.exports = class ABProcessEnd extends ABProcessEndCore {\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n};\n","const ABProcessGatewayExclusiveCore = require(\"../../../core/process/tasks/ABProcessGatewayExclusiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessGatewayExclusive extends (\n   ABProcessGatewayExclusiveCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      // the first entry is for the gateway element itself\n      var properties = super.diagramProperties();\n      /*[\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n      */\n\n      // now add any additional updates for each of our connections:\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         properties.push({\n            id: conn.id,\n            def: {\n               name: this.conditions[conn.id]?.label ?? \"\",\n            },\n         });\n      });\n      return properties;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      // make sure we have > 1 connection.\n      const myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      if (myOutgoingConnections.length < 2) {\n         this.warningMessage(\"should have multiple outgoing connections\");\n      }\n\n      // make sure there is no more then 1 connection that doesn't have\n      // a condition:\n      let numCondWithOne = 0;\n      myOutgoingConnections.forEach((c) => {\n         if ((this.conditions[c.id]?.filterValue.rules?.length ?? 0) == 0) {\n            numCondWithOne++;\n         }\n      });\n\n      if (numCondWithOne > 1) {\n         this.warningMessage(\n            \"should not have more than 1 unfiltered connection.\"\n         );\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskEmailCore = require(\"../../../core/process/tasks/ABProcessTaskEmailCore.js\");\n\nmodule.exports = class ABProcessTaskEmail extends ABProcessTaskEmailCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      // check for warnings:\n\n      if (!this.subject) {\n         this.warningMessage(\"is missing a subject\");\n      }\n\n      if (!this.message) {\n         this.warningMessage(\"is missing a message\");\n      }\n\n      this.verifySetting(\"to\");\n      this.verifySetting(\"from\");\n      this.verifyNextLane(\"to\");\n      if (this.from == \"0\") {\n         let thisLane = this.myLane();\n         if (!thisLane) {\n            this.warningMessage(\n               \"can not resolve the lane participant for [.from] field.\"\n            );\n         }\n      }\n      this.verifyRoleAccount(\"to\", \"toUsers\");\n      this.verifyRoleAccount(\"from\", \"fromUsers\");\n   }\n\n   /**\n    * @method verifySetting()\n    * make sure the given field key has a value assigned.\n    * @param {string} key\n    *        the property of this object to check. (to, from)\n    */\n   verifySetting(key) {\n      if (this[key] == \"\") {\n         this.warningMessage(`does not have a [${key}] setting.`);\n      }\n   }\n\n   /**\n    * @method verifyNextLane()\n    * make sure we can access a Lane for the given property key.\n    * The \"to\" field can reference the \"Next Participant\". This checks to\n    * see if we can reference a lane for the next task.\n    * @param {string} key\n    *        the property that has the value for Next Participant. [to]\n    */\n   verifyNextLane(key) {\n      if (this[key] === \"0\") {\n         // Next Participant\n         // we need to resolve our next task and see if we can pull the participant info from it.\n\n         let nextTasks = this.process.connectionNextTask(this);\n         let nextLanesResolved = true;\n         nextTasks.forEach((t) => {\n            let lane = t.myLane();\n            if (!lane) {\n               nextLanesResolved = false;\n            }\n         });\n         if (!nextLanesResolved || nextTasks.length == 0) {\n            this.warningMessage(\n               `can not resolve next lane participant for [${key}] field.`\n            );\n         }\n      }\n   }\n\n   /**\n    * @method verifyRoleAccount()\n    * Check to see if the provided property is set to use a Role/Account for\n    * the email, and make sure there are values set for what is chosen.\n    * @param {string} key\n    *        the property we are currently validating.\n    * @param {string} valKey\n    *        the property that contains the specific value object.\n    */\n   verifyRoleAccount(key, valKey) {\n      if (this[key] == \"1\") {\n         if (this[valKey]) {\n            if (this[valKey].useRole) {\n               if (this[valKey].role.length == 0) {\n                  this.warningMessage(`can not resolve [${key}] Role setting.`);\n               }\n            }\n            if (this[valKey].useAccount) {\n               if (this[valKey].account.length == 0) {\n                  this.warningMessage(\n                     `can not resolve [${key}] Account setting.`\n                  );\n               }\n            }\n            // TODO:\n            // if (this[valKey].userFields.length > 0) {\n            //    // how to know if this is a problem?\n            // }\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCore.js\");\n\nmodule.exports = class ABProcessTaskService extends ABProcessTaskServiceCore {};\n","const AccountingBatchProcessingCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingBatchProcessing extends (\n   AccountingBatchProcessingCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         fieldBatchEntries: `${id}_fieldBatchEntries`,\n         fieldBatchFinancialPeriod: `${id}_fieldBatchFinancialPeriod`,\n         objectJE: `${id}_objectJE`,\n         fieldJEAccount: `${id}_fieldJEAccount`,\n         fieldJERC: `${id}_fieldJERC`,\n         fieldJEStatus: `${id}_fieldJEStatus`,\n         fieldJEStatusComplete: `${id}_fieldJEStatusComplete`,\n         objectBR: `${id}_objectBR`,\n         fieldBRFinancialPeriod: `${id}_fieldBRFinancialPeriod`,\n         fieldBRAccount: `${id}_fieldBRAccount`,\n         fieldBRRC: `${id}_fieldBRRC`,\n         fieldBREntries: `${id}_fieldBREntries`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      //\n      // set up field settings:\n      //\n\n      var blankField = {\n         id: 0,\n         value: L(\"Select a Field\"),\n      };\n      // blankField : generic Select a field entry\n\n      function defaultFields(objID) {\n         // create a new options array of Field Choices for the given obj.id\n\n         var fields = [blankField];\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      }\n\n      function updateFields(fieldPickers, fieldValues, defaultValue) {\n         // update the list of field select choices with the new field choices\n\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               // if (defaultValue) {\n               //    picker.define(\"value\", defaultValue);\n               // } else {\n               //    picker.define(\"value\", fieldValues[0].value);\n               // }\n               picker.refresh();\n               picker.show();\n            }\n         });\n      }\n\n      var batchFields = defaultFields(this.objectBatch);\n      // batchFields : the default list of fields for the Batch Object\n\n      var fieldPickersBatch = [\n         ids.fieldBatchEntries,\n         ids.fieldBatchFinancialPeriod,\n      ];\n      // fieldPickersBatch : the list of field selects to update for the Batch\n      //      object.\n\n      var jeFields = defaultFields(this.objectJE);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersJE = [\n         ids.fieldJEAccount,\n         ids.fieldJERC,\n         ids.fieldJEStatus,\n      ];\n      // fieldPickersJE : the list of field selects to update for the Journal Entry\n      //      object.\n\n      function compileStatusValues(statusField) {\n         var values = [{ id: 0, value: L(\"Select the Complete Value\") }];\n         if (statusField && statusField.options) {\n            statusField.options().forEach((o) => {\n               values.push({ id: o.id, value: o.text });\n            });\n         }\n         return values;\n      }\n\n      function updatePickerStatusComplete(values) {\n         var wbxComplete = $$(ids.fieldJEStatusComplete);\n         if (wbxComplete) {\n            // update fieldJEStatusComplete options\n            wbxComplete.define(\"options\", values);\n            wbxComplete.refresh();\n            // show fieldJEStatusComplete\n            wbxComplete.show();\n         }\n      }\n\n      function onStatusComplete(newVal) {\n         // pull the ABField object from newValue\n         var jeEntryID = $$(ids.objectJE).getValue();\n         var jeEntry = objectList.find((o) => o.id == jeEntryID);\n         if (jeEntry && jeEntry.object) {\n            var statusField = jeEntry.object.fieldByID(newVal);\n            if (statusField && statusField.options) {\n               // get the options as an []\n               jeFieldStatusValues = compileStatusValues(statusField);\n\n               updatePickerStatusComplete(jeFieldStatusValues);\n            }\n         }\n      }\n\n      var jeFieldStatusValues = compileStatusValues();\n      // jeFieldStatusValues : the list of status options from the fieldJEStatus\n      //      selected entry.\n\n      var brFields = defaultFields(this.objectBR);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersBR = [\n         ids.fieldBRFinancialPeriod,\n         ids.fieldBRAccount,\n         ids.fieldBRRC,\n         ids.fieldBREntries,\n      ];\n      // fieldPickersBR : the list of field selects to update for the Balance Record\n      //      object.\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        batchFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBatch, batchFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchEntries,\n               view: \"select\",\n               label: L(\"Batch->JE[]\"),\n               value: this.fieldBatchEntries,\n               name: \"fieldBatchEntries\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBatchFinancialPeriod,\n               view: \"select\",\n               label: L(\"Batch->FinancialPeriod\"),\n               value: this.fieldBatchFinancialPeriod,\n               name: \"fieldBatchFinancialPeriod\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"Journal Entry Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        jeFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersJE, jeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEAccount,\n               view: \"select\",\n               label: L(\"JE->Account\"),\n               value: this.fieldJEAccount,\n               name: \"fieldJEAccount\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJERC,\n               view: \"select\",\n               label: L(\"JE->RC\"),\n               value: this.fieldJERC,\n               name: \"fieldJERC\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJEStatus,\n               view: \"select\",\n               label: L(\"JE->Status\"),\n               value: this.fieldJEStatus,\n               name: \"fieldJEStatus\",\n               options: jeFields,\n               hidden: true,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        onStatusComplete(newVal);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEStatusComplete,\n               view: \"select\",\n               label: L(\"JE->Status->Complete\"),\n               value: this.fieldJEStatusComplete,\n               name: \"fieldJEStatusComplete\",\n               options: jeFieldStatusValues,\n               hidden: true,\n            },\n            {\n               id: ids.objectBR,\n               view: \"select\",\n               label: L(\"Balance Record\"),\n               value: this.objectBR,\n               name: \"objectBR\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        brFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBR, brFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBRFinancialPeriod,\n               view: \"select\",\n               label: L(\"BR->FP\"),\n               value: this.fieldBRFinancialPeriod,\n               name: \"fieldBRFinancialPeriod\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRAccount,\n               view: \"select\",\n               label: L(\"BR->Account\"),\n               value: this.fieldBRAccount,\n               name: \"fieldBRAccount\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRRC,\n               view: \"select\",\n               label: L(\"BR->RC\"),\n               value: this.fieldBRRC,\n               name: \"fieldBRRC\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBREntries,\n               view: \"select\",\n               label: L(\"BR->Entries\"),\n               value: this.fieldBREntries,\n               name: \"fieldBREntries\",\n               options: brFields,\n               hidden: true,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      // if there are already default values for our Objects,\n      // unhide the field selectors:\n      if (this.objectBatch && this.objectBatch != 0) {\n         updateFields(fieldPickersBatch, batchFields);\n      }\n\n      if (this.objectJE && this.objectJE != 0) {\n         updateFields(fieldPickersJE, jeFields);\n      }\n\n      if (this.fieldJEStatus) {\n         onStatusComplete(this.fieldJEStatus);\n      }\n\n      if (this.objectBR && this.objectBR != 0) {\n         updateFields(fieldPickersBR, brFields);\n      }\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPClose extends AccountingFPCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPValue: `${id}_processFPValue`,\n         objectFP: `${id}_objectFP`,\n         objectGL: `${id}_objectGL`,\n         objectAcc: `${id}_objectAcc`,\n         fieldFPStart: `${id}_fieldFPStart`,\n         fieldFPOpen: `${id}_fieldFPOpen`,\n         fieldFPStatus: `${id}_fieldFPStatus`,\n         fieldFPActive: `${id}_fieldFPActive`,\n         fieldGLStarting: `${id}_fieldGLStarting`,\n         fieldGLRunning: `${id}_fieldGLRunning`,\n         fieldGLAccount: `${id}_fieldGLAccount`,\n         fieldGLRc: `${id}_fieldGLRc`,\n         fieldGLDebit: `${id}fieldGLDebit`,\n         fieldGLCredit: `${id}_fieldGLCredit`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccAsset: `${id}_fieldAccAsset`,\n         fieldAccExpense: `${id}_fieldAccExpense`,\n         fieldAccLiabilities: `${id}_fieldAccLiabilities`,\n         fieldAccEquity: `${id}_fieldAccEquity`,\n         fieldAccIncome: `${id}_fieldAccIncome`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      };\n\n      let getStatusFieldOptions = (statusFieldId) => {\n         let result = [];\n         let fpObject = this.AB.objectByID(this.objectFP);\n         if (!fpObject) return result;\n\n         let fpStatusField = fpObject.fieldByID(statusFieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateFPFields = (fpFields) => {\n         [ids.fieldFPStart, ids.fieldFPOpen, ids.fieldFPStatus].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", fpFields);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateFPStatusFields = (fpStatusOptions) => {\n         $$(ids.fieldFPActive).define(\"options\", fpStatusOptions);\n         $$(ids.fieldFPActive).refresh();\n      };\n\n      let updateGLFields = (glFields) => {\n         [\n            ids.fieldGLRunning,\n            ids.fieldGLAccount,\n            ids.fieldGLRc,\n            ids.fieldGLDebit,\n            ids.fieldGLCredit,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", glFields);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccAsset,\n            ids.fieldAccExpense,\n            ids.fieldAccLiabilities,\n            ids.fieldAccEquity,\n            ids.fieldAccIncome,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let fpFields = getFieldOptions(this.objectFP);\n      let glFields = getFieldOptions(this.objectGL);\n      let accFields = getFieldOptions(this.objectAcc);\n      let fpStatusFields = getStatusFieldOptions(this.fieldFPStatus);\n      let accTypeOptions = getListOptions(this.objectAcc, this.fieldAccType);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Value\"),\n               value: this.processFPValue,\n               name: \"processFPValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFP,\n               view: \"select\",\n               label: L(\"FP Object\"),\n               value: this.objectFP,\n               name: \"objectFP\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        fpFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFPFields(fpFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"GL Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        glFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateGLFields(glFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAcc,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAcc,\n               name: \"objectAcc\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        accFields = getFieldOptions(newVal);\n                        updateAccFields(accFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPStart,\n               view: \"select\",\n               label: L(\"FP -> Start\"),\n               value: this.fieldFPStart,\n               name: \"fieldFPStart\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPOpen,\n               view: \"select\",\n               label: L(\"FP -> Open\"),\n               value: this.fieldFPOpen,\n               name: \"fieldFPOpen\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPStatus,\n               view: \"select\",\n               label: L(\"FP -> Status\"),\n               value: this.fieldFPStatus,\n               name: \"fieldFPStatus\",\n               options: fpFields,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        fpStatusFields = getStatusFieldOptions(newVal);\n                        updateFPStatusFields(fpStatusFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPActive,\n               view: \"select\",\n               label: L(\"FP -> Active\"),\n               value: this.fieldFPActive,\n               name: \"fieldFPActive\",\n               options: fpStatusFields,\n            },\n            {\n               id: ids.fieldGLStarting,\n               view: \"select\",\n               label: L(\"GL -> Starting BL\"),\n               value: this.fieldGLStarting,\n               name: \"fieldGLStarting\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRunning,\n               view: \"select\",\n               label: L(\"GL -> Running BL\"),\n               value: this.fieldGLRunning,\n               name: \"fieldGLRunning\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLAccount,\n               view: \"select\",\n               label: L(\"GL -> Account\"),\n               value: this.fieldGLAccount,\n               name: \"fieldGLAccount\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLRc,\n               name: \"fieldGLRc\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLDebit,\n               view: \"select\",\n               label: L(\"GL -> Debit\"),\n               value: this.fieldGLDebit,\n               name: \"fieldGLDebit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLCredit,\n               view: \"select\",\n               label: L(\"GL -> Credit\"),\n               value: this.fieldGLCredit,\n               name: \"fieldGLCredit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAcc || $$(ids.objectAcc).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccAsset,\n               view: \"select\",\n               label: L(\"Acc -> Asset\"),\n               value: this.fieldAccAsset,\n               name: \"fieldAccAsset\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccExpense,\n               name: \"fieldAccExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccLiabilities,\n               view: \"select\",\n               label: L(\"Acc -> Liabilities\"),\n               value: this.fieldAccLiabilities,\n               name: \"fieldAccLiabilities\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccEquity,\n               name: \"fieldAccEquity\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccIncome,\n               name: \"fieldAccIncome\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPYearCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPYearClose extends AccountingFPYearCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPYearValue: `${id}_processFPYearValue`,\n         objectFPYear: `${id}_objectFPYear`,\n         objectFPMonth: `${id}_objectFPMonth`,\n         objectGL: `${id}_objectGL`,\n         objectAccount: `${id}_objectAccount`,\n         valueFundBalances: `${id}_valueFundBalances`,\n         valueNetIncome: `${id}_valueNetIncome`,\n         fieldFPYearStart: `${id}_fieldFPYearStart`,\n         fieldFPYearEnd: `${id}_fieldFPYearEnd`,\n         fieldFPYearStatus: `${id}_fieldFPYearStatus`,\n         fieldFPYearActive: `${id}_fieldFPYearActive`,\n         fieldFPMonthStart: `${id}_fieldFPMonthStart`,\n         fieldFPMonthEnd: `${id}_fieldFPMonthEnd`,\n         fieldGLStartBalance: `${id}_fieldGLStartBalance`,\n         fieldGLRunningBalance: `${id}_fieldGLRunningBalance`,\n         fieldGLrc: `${id}_fieldGLrc`,\n         fieldAccNumber: `${id}_fieldAccNumber`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccTypeIncome: `${id}_fieldAccTypeIncome`,\n         fieldAccTypeExpense: `${id}_fieldAccTypeExpense`,\n         fieldAccTypeEquity: `${id}_fieldAccTypeEquity`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID, fieldKey) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object\n                  .fields((f) => f.key == fieldKey)\n                  .forEach((f) => {\n                     fields.push({ id: f.id, value: f.label, field: f });\n                  });\n            }\n         }\n         return fields;\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateAccNumberFields = (accNumberFields) => {\n         $$(ids.fieldAccNumber).define(\"options\", accNumberFields);\n         $$(ids.fieldAccNumber).refresh();\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccTypeIncome,\n            ids.fieldAccTypeExpense,\n            ids.fieldAccTypeEquity,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearDateOptions = (fpYearDateOptions) => {\n         [ids.fieldFPYearStart, ids.fieldFPYearEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpYearDateOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearStatusOptions = (fpYearStatusFields) => {\n         $$(ids.fieldFPYearStatus).define(\"options\", fpYearStatusFields);\n         $$(ids.fieldFPYearStatus).refresh();\n      };\n\n      let updateFPYearActiveOptions = (fpYearStatusOptions) => {\n         $$(ids.fieldFPYearActive).define(\"options\", fpYearStatusOptions);\n         $$(ids.fieldFPYearActive).refresh();\n      };\n\n      let updateFPMonthDateFields = (fpMonthDateOpts) => {\n         [ids.fieldFPMonthStart, ids.fieldFPMonthEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpMonthDateOpts);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateGlNumberFields = (glNumberOptions) => {\n         [ids.fieldGLStartBalance, ids.fieldGLRunningBalance].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", glNumberOptions);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateGlConnectFields = (glRcOptions) => {\n         $$(ids.fieldGLrc).define(\"options\", glRcOptions);\n         $$(ids.fieldGLrc).refresh();\n      };\n\n      let fpYearDateFields = getFieldOptions(this.objectFPYear, \"date\");\n      let fpYearStatusFields = getFieldOptions(this.objectFPYear, \"list\");\n      let fpYearStatusOptions = getListOptions(\n         this.objectFPYear,\n         this.fieldFPYearStatus\n      );\n      let fpMonthDateFields = getFieldOptions(this.objectFPMonth, \"date\");\n      let glNumberFields = getFieldOptions(this.objectGL, \"number\");\n      let glRcFields = getFieldOptions(this.objectGL, \"connectObject\");\n      let accNumberFields = getFieldOptions(this.objectAccount, \"number\");\n      let accTypeFields = getFieldOptions(this.objectAccount, \"list\");\n      let accTypeOptions = getListOptions(\n         this.objectAccount,\n         this.fieldAccType\n      );\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPYearValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Year Value\"),\n               value: this.processFPYearValue,\n               name: \"processFPYearValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFPYear,\n               view: \"select\",\n               label: L(\"FP Year Object\"),\n               value: this.objectFPYear,\n               name: \"objectFPYear\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPYearDateOptions(fpYearDateFields);\n\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateFPYearStatusOptions(accTypeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectFPMonth,\n               view: \"select\",\n               label: L(\"FP Month Object\"),\n               value: this.objectFPMonth,\n               name: \"objectFPMonth\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpMonthDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPMonthDateFields(fpMonthDateFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"Balance Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        glNumberFields = getFieldOptions(newVal, \"number\");\n                        updateGlNumberFields(glNumberFields);\n\n                        glRcFields = getFieldOptions(newVal, \"connectObject\");\n                        updateGlConnectFields(glRcFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAccount,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAccount,\n               name: \"objectAccount\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateAccFields(accTypeFields);\n\n                        accNumberFields = getFieldOptions(newVal, \"number\");\n                        updateAccNumberFields(accNumberFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.valueFundBalances,\n               view: \"text\",\n               label: L(\"Fund Balances Code\"),\n               value: this.valueFundBalances,\n               name: \"valueFundBalances\",\n            },\n            {\n               id: ids.valueNetIncome,\n               view: \"text\",\n               label: L(\"Net Income Code\"),\n               value: this.valueNetIncome,\n               name: \"valueNetIncome\",\n            },\n            {\n               id: ids.fieldFPYearStart,\n               view: \"select\",\n               label: L(\"FP Year -> Start\"),\n               value: this.fieldFPYearStart,\n               name: \"fieldFPYearStart\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearEnd,\n               view: \"select\",\n               label: L(\"FP Year -> End\"),\n               value: this.fieldFPYearEnd,\n               name: \"fieldFPYearEnd\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearStatus,\n               view: \"select\",\n               label: L(\"FP Year -> Status\"),\n               value: this.fieldFPYearStatus,\n               name: \"fieldFPYearStatus\",\n               options: fpYearStatusFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearStatusOptions = getListOptions(\n                           this.objectFPYear || $$(ids.objectFPYear).getValue(),\n                           newVal\n                        );\n                        updateFPYearActiveOptions(fpYearStatusOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPYearActive,\n               view: \"select\",\n               label: L(\"FP Year -> Active\"),\n               value: this.fieldFPYearActive,\n               name: \"fieldFPYearActive\",\n               options: fpYearStatusOptions,\n            },\n            {\n               id: ids.fieldFPMonthStart,\n               view: \"select\",\n               label: L(\"FP Month -> Start\"),\n               value: this.fieldFPMonthStart,\n               name: \"fieldFPMonthStart\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldFPMonthEnd,\n               view: \"select\",\n               label: L(\"FP Month -> End\"),\n               value: this.fieldFPMonthEnd,\n               name: \"fieldFPMonthEnd\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldGLStartBalance,\n               view: \"select\",\n               label: L(\"GL -> Start Balance\"),\n               value: this.fieldGLStartBalance,\n               name: \"fieldGLStartBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLRunningBalance,\n               view: \"select\",\n               label: L(\"GL -> Running Balance\"),\n               value: this.fieldGLRunningBalance,\n               name: \"fieldGLRunningBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLrc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLrc,\n               name: \"fieldGLrc\",\n               options: glRcFields,\n            },\n            {\n               id: ids.fieldAccNumber,\n               view: \"select\",\n               label: L(\"Acc -> Account Number\"),\n               value: this.fieldAccNumber,\n               name: \"fieldAccNumber\",\n               options: accNumberFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accTypeFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAccount ||\n                              $$(ids.objectAccount).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccTypeIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccTypeIncome,\n               name: \"fieldAccTypeIncome\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccTypeExpense,\n               name: \"fieldAccTypeExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccTypeEquity,\n               name: \"fieldAccTypeEquity\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingJEArchiveCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingJEArchive extends AccountingJEArchiveCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         objectBalance: `${id}_objectBalance`,\n         objectJE: `${id}_objectJE`,\n         objectJEArchive: `${id}_objectJEArchive`,\n\n         fieldBatchFiscalMonth: `${id}_fieldBatchFiscalMonth`,\n         fieldJeAccount: `${id}_fieldJeAccount`,\n         fieldJeRC: `${id}_fieldJeRC`,\n         fieldJeArchiveBalance: `${id}_fieldJeArchiveBalance`,\n         fieldBrFiscalMonth: `${id}_fieldBrFiscalMonth`,\n         fieldBrAccount: `${id}_fieldBrAccount`,\n         fieldBrRC: `${id}_fieldBrRC`,\n\n         fieldsMatch: `${id}_fieldsMatch`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      let processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      let objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getConnectFieldOptions = (objectId) => {\n         let object = this.AB.objectByID(objectId);\n         if (!object) return [];\n\n         let options = object\n            .fields((f) => f.isConnection)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         options.unshift({\n            id: 0,\n            value: L(\"Select a Field\"),\n         });\n\n         return options;\n      };\n\n      let updateFields = (fieldPickers, fieldValues) => {\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               picker.refresh();\n               picker.show();\n            }\n         });\n      };\n\n      let refreshBatchFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldBatchFiscalMonth], options);\n      };\n\n      let refreshBRFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields(\n            [ids.fieldBrAccount, ids.fieldBrFiscalMonth, ids.fieldBrRC],\n            options\n         );\n      };\n\n      let refreshJeFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeAccount, ids.fieldJeRC], options);\n      };\n\n      let refreshJeArchiveFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeArchiveBalance], options);\n      };\n\n      let refreshFieldsMatch = () => {\n         let $fieldsMatch = $$(ids.fieldsMatch);\n         if (!$fieldsMatch) return;\n\n         // clear form\n         webix.ui([], $fieldsMatch);\n\n         let JEObj = this.AB.objectByID(this.objectJE);\n         if (!JEObj) return;\n\n         let JEArchiveObj = this.AB.objectByID(this.objectJEArchive);\n         if (!JEArchiveObj) return;\n\n         // create JE acrhive field options to the form\n         JEArchiveObj.fields().forEach((f) => {\n            let jeFields = [];\n\n            if (f.isConnection) {\n               jeFields = JEObj.fields((fJe) => {\n                  return (\n                     fJe.isConnection &&\n                     fJe.settings &&\n                     f.settings &&\n                     fJe.settings.linkObject == f.settings.linkObject &&\n                     fJe.settings.linkType == f.settings.linkType &&\n                     fJe.settings.linkViaType == f.settings.linkViaType &&\n                     fJe.settings.isCustomFK == f.settings.isCustomFK\n                  );\n               });\n            } else {\n               jeFields = JEObj.fields((fJe) => fJe.key == f.key);\n            }\n\n            jeFields = jeFields.map((fJe) => {\n               return {\n                  id: fJe.id,\n                  value: fJe.label,\n               };\n            });\n\n            $fieldsMatch.addView({\n               view: \"select\",\n               name: f.id,\n               label: f.label,\n               options: jeFields,\n            });\n         });\n\n         $fieldsMatch.setValues(this.fieldsMatch || {});\n      };\n\n      let fieldBatchList = getConnectFieldOptions(this.objectBatch);\n      let fieldBalanceList = getConnectFieldOptions(this.objectBalance);\n      let fieldJeList = getConnectFieldOptions(this.objectJE);\n      let fieldJeArchiveList = getConnectFieldOptions(this.objectJEArchive);\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 180,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBatch = newVal;\n                     refreshBatchFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchFiscalMonth,\n               view: \"select\",\n               label: L(\"Batch -> Fiscal Month\"),\n               value: this.fieldBatchFiscalMonth,\n               name: \"fieldBatchFiscalMonth\",\n               options: fieldBatchList,\n            },\n            {\n               id: ids.objectBalance,\n               view: \"select\",\n               label: L(\"BR Object\"),\n               value: this.objectBalance,\n               name: \"objectBalance\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBalance = newVal;\n                     refreshBRFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBrFiscalMonth,\n               view: \"select\",\n               label: L(\"BR -> Fiscal Month\"),\n               value: this.fieldBrFiscalMonth,\n               name: \"fieldBrFiscalMonth\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrAccount,\n               view: \"select\",\n               label: L(\"BR -> Account\"),\n               value: this.fieldBrAccount,\n               name: \"fieldBrAccount\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrRC,\n               view: \"select\",\n               label: L(\"BR -> RC\"),\n               value: this.fieldBrRC,\n               name: \"fieldBrRC\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"JE Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJE = newVal;\n                     refreshJeFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeAccount,\n               view: \"select\",\n               label: L(\"JE -> Account\"),\n               value: this.fieldJeAccount,\n               name: \"fieldJeAccount\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.fieldJeRC,\n               view: \"select\",\n               label: L(\"JE -> RC\"),\n               value: this.fieldJeRC,\n               name: \"fieldJeRC\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.objectJEArchive,\n               view: \"select\",\n               label: L(\"JE Archive Object\"),\n               value: this.objectJEArchive,\n               name: \"objectJEArchive\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJEArchive = newVal;\n                     refreshJeArchiveFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeArchiveBalance,\n               view: \"select\",\n               label: L(\"JE Archive -> BR\"),\n               value: this.fieldJeArchiveBalance,\n               name: \"fieldJeArchiveBalance\",\n               options: fieldJeArchiveList,\n            },\n            {\n               view: \"fieldset\",\n               label: \"Fields Matching\",\n               body: {\n                  id: ids.fieldsMatch,\n                  view: \"form\",\n                  borderless: true,\n                  elements: [],\n               },\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      refreshFieldsMatch();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         if (s === \"fieldsMatch\") {\n            this[s] = $$(ids.fieldsMatch).getValues();\n         } else {\n            this[s] = this.property(ids[s]);\n         }\n      });\n   }\n};\n","const CalculateTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCalculateCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class CalculateTask extends CalculateTaskCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.formulaText) {\n         this.warningMessage(\"is missing a formula.\");\n      }\n\n      if (this.formulaText) {\n         const hash = {};\n         (this.process.processDataFields(this) || []).forEach((item) => {\n            hash[`{${item.label}}`] = item;\n         });\n\n         let exp = new RegExp(`{[^}]*}`, \"g\");\n         let entries = this.formulaText.match(exp) || [];\n         entries.forEach((entry) => {\n            if (!hash[entry]) {\n               this.warningMessage(\n                  `could not resolve process value [${entry}]`\n               );\n            }\n         });\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskServiceGetResetPasswordUrlCore = require(\"../../../core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js\");\n\nmodule.exports = class ABProcessTaskServiceGetResetPasswordUrl extends (\n   ABProcessTaskServiceGetResetPasswordUrlCore\n) {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.email) {\n         this.warningMessage(\"is missing the email address.\");\n      }\n\n      const processData = (this.process.processDataFields(this) ?? [])\n         .filter((item) => item.field?.key == \"email\")\n         .map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n      if (processData.length == 0) {\n         this.warningMessage(\"has no previous tasks exporting email fields.\");\n      }\n   }\n};\n","const InsertRecordTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceInsertRecordCore.js\");\n\nmodule.exports = class InsertRecordTask extends InsertRecordTaskCore {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.objectID) {\n         this.warningMessage(\"has no Object set.\");\n      }\n\n      const fv = Object.keys(this.fieldValues || {}) || [];\n      if (fv.length == 0) {\n         this.warningMessage(\"has no fields set\");\n      } else {\n         let isSet = false;\n         fv.forEach((f) => {\n            if (\n               this.fieldValues[f]?.set != \"0\" &&\n               this.fieldValues[f]?.value != null\n            ) {\n               isSet = true;\n            }\n         });\n         if (!isSet) {\n            this.warningMessage(\"has no fields set\");\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceQueryCore = require(\"../../../core/process/tasks/ABProcessTaskServiceQueryCore.js\");\n\nconst ABQLManager = require(\"../../ql/ABQLManager.js\");\n\nmodule.exports = class ABProcessTaskServiceQuery extends (\n   ABProcessTaskServiceQueryCore\n) {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      this.attributes = attributes;\n   }\n\n   ABQLManager() {\n      return ABQLManager;\n   }\n\n   warnings() {\n      // first get all our embedded QL Command warnings\n      let qlWarnings = [];\n      if (this.qlObj) {\n         qlWarnings = qlWarnings.concat(this.qlObj.warnings());\n      }\n      // run the QL Warnings through our .warningMessage() to get a message\n      // that includes this task's name:\n      qlWarnings.forEach((w) => {\n         if (w?.message) this.warningMessage(w.message);\n      });\n      let myWarnings = super.warnings();\n      return myWarnings.filter((w) => w); // filter out any undefined.\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (this.qlObj) {\n         this.qlObj.warningsEval();\n      } else {\n         this.warningMessage(`has no Query defined.`);\n      }\n\n      if (!this.name) {\n         this.warningMessage(\"does not have a name.\", {\n            attributes: this.attributes,\n         });\n      }\n\n      let hasSave = false;\n      let curr = this.qlObj;\n      while (curr) {\n         if (curr.key === \"row_save\" || curr.key === \"set_save\") {\n            hasSave = true;\n            curr = null; // just stop here.\n         } else {\n            curr = curr.next;\n         }\n      }\n\n      if (!hasSave) {\n         this.warningMessage(\"requires at least one Save operation.\");\n      }\n   }\n};\n","const SubProcessCore = require(\"../../../core/process/tasks/ABProcessTaskSubProcessCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class SubProcess extends SubProcessCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /*\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         isEnable: `${id}_isEnable`,\n         parameterId: `${id}_parameterId`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      // Pull query tasks option list\n      let parameterOptions = (this.process.processDataFields(this) || []).map(\n         (item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         }\n      );\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 120,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.isEnable,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               value: this.isEnable,\n            },\n            {\n               id: ids.parameterId,\n               view: \"richselect\",\n               label: L(\"Repeat for\"),\n               options: parameterOptions,\n               value: this.parameterId,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.isEnable = this.property(ids.isEnable);\n      this.parameterId = this.property(ids.parameterId);\n   }\n   */\n\n   /**\n    * @method diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties(bpmnModeler) {\n      let props = super.diagramProperties();\n      props = props || [{}];\n      props[0].def = props[0].def || {};\n\n      if (this.parameterId != null) {\n         props[0].def = props[0].def || {};\n         props[0].def.loopCharacteristics = bpmnModeler\n            .get(\"moddle\")\n            .create(\"bpmn:MultiInstanceLoopCharacteristics\");\n         props[0].def.loopCharacteristics.isSequential = true;\n      }\n\n      return props;\n   }\n\n   /**\n    * @method onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      let loopCharacteristics =\n         defElement.loopCharacteristics ||\n         defElement.businessObject.loopCharacteristics ||\n         {};\n\n      switch (loopCharacteristics.$type) {\n         case \"bpmn:MultiInstanceLoopCharacteristics\":\n            this.loopType = loopCharacteristics.isSequential\n               ? \"sequential\"\n               : \"parallel\";\n            break;\n         case \"bpmn:StandardLoopCharacteristics\":\n            this.loopType = \"looping\";\n            break;\n      }\n   }\n\n   /**\n    * @method destroy()\n    * destroy this sub process and inside tasks\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // reuse .destroy function of ABProcess\n      // to clear tasks within this sub process\n      return this.process.destroy.call(this);\n   }\n\n   /**\n    * @method save()\n    * persist this sub process\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // reuse .save function of ABProcess\n      // to update tasks within this sub process\n      return this.process.save.call(this);\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcessParticipant|ABProcessLane|ABProcessElement}\n    *\n    */\n   elementNewForModelDefinition(element) {\n      let task = this.AB.processElementNewForModelDefinition(element, this);\n\n      // Add a new task to this sub process\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownElementIDs || []).forEach((eID) => {\n         this.warningMessage(\n            `is referencing an unknown process element id[${eID}]`,\n            { process: this.id, eID }\n         );\n      });\n   }\n};\n","const ABProcessTaskUserCore = require(\"../../../core/process/tasks/ABProcessTaskUserCore.js\");\n\nmodule.exports = class ABProcessTaskUser extends ABProcessTaskUserCore {};\n","const ABProcessTaskUserApprovalCore = require(\"../../../core/process/tasks/ABProcessTaskUserApprovalCore.js\");\n\nmodule.exports = class ABProcessTaskUserApproval extends (\n   ABProcessTaskUserApprovalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskUserExternalCore = require(\"../../../core/process/tasks/ABProcessTaskUserExternalCore.js\");\n\nmodule.exports = class ABProcessTaskUserExternal extends (\n   ABProcessTaskUserExternalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTriggerCore = require(\"../../../core/process/tasks/ABProcessTriggerCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTrigger extends ABProcessTriggerCore {};\n","const ABProcessTriggerLifecycleCore = require(\"../../../core/process/tasks/ABProcessTriggerLifecycleCore.js\");\n\nmodule.exports = class ABProcessTriggerLifecycle extends (\n   ABProcessTriggerLifecycleCore\n) {};\n","const ABProcessTriggerTimerCore = require(\"../../../core/process/tasks/ABProcessTriggerTimerCore.js\");\n\nconst START_URL = \"/process/timer/#id#/start\";\nconst STOP_URL = \"/process/timer/#id#/stop\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTriggerTimerCore {\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    */\n   save() {\n      return (\n         Promise.resolve()\n            .then(() => super.save())\n            // Restart the timer\n            .then((result) => {\n               return this.AB.Network.put({\n                  url: (this.isEnabled ? START_URL : STOP_URL).replace(\n                     \"#id#\",\n                     this.id\n                  ),\n               });\n            })\n      );\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nconst ABQLCore = require(\"../../core/ql/ABQLCore.js\");\nconst RowUpdater = require(\"../RowUpdater.js\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABQL extends ABQLCore {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super(attributes, parameterDefinitions, prevOP, task, AB);\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      // const allColumns = row.getChildViews();\n      // allColumns.shift(); // remove selector\n      this.parameterDefinitions.forEach((pDef) => {\n         // const col = allColumns.shift();\n         const myID = this.uiID(id);\n\n         this.ids = this.toIDs(myID);\n         this.params = this.params ?? {};\n\n         let $uiCondition = null;\n\n         switch (pDef.type) {\n            case \"objectFields\":\n               this.params[pDef.name] = $$(this.ids.objectfields).getValue();\n\n               break;\n\n            case \"objectName\":\n               this.params[pDef.name] = $$(this.ids.objectname).getValue();\n\n               break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n               $uiCondition = $$(this.ids.condition);\n\n               if ($uiCondition) {\n                  const condition = $uiCondition.getValue();\n\n                  if (condition && condition !== \"\") {\n                     this.params[pDef.name] = JSON.parse(condition);\n                  }\n               }\n\n               break;\n\n            case \"taskParam\":\n               this.params[pDef.name] = $$(this.ids.taskparam).getValue();\n\n               break;\n         }\n      });\n   }\n\n   /*\n    * @method toIDs()\n    * generate a set of unique webix ids to use for our UI.\n    * @param {string} myID\n    *        the unique id generated by .uiID()\n    */\n   toIDs(myID) {\n      return {\n         condition: `${myID}_condition`,\n         objectfields: `${myID}_objectfields`,\n         objectname: `${myID}_objname`,\n         popup: `${myID}_popup`,\n         select: `${myID}_select`,\n         shorthand: `${myID}_shorthand`,\n         taskparam: `${myID}_taskparam`,\n         spacer: `${myID}_spacer`,\n      };\n   }\n\n   /**\n    * @method uiAddParamForDef()\n    * Add an operation parameter for each parameterDefinition we have defined.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParamForDef(pDef, id, ui) {\n      // params are added to a .col[] definition.\n      // if our ui isn't down to the current .col element, then drill down\n      if (!ui.cols) {\n         if (ui.rows) {\n            for (let i = 0; i < ui.rows.length; i++)\n               if (ui.rows[i].cols) {\n                  this.uiAddParamForDef(pDef, id, ui.rows[i]);\n\n                  break;\n               }\n         } else throw new Error(\"provided ui is not able to add a parameter!\");\n\n         return;\n      }\n\n      const paramUI = this.uiParamUI(pDef, id);\n\n      if (paramUI) {\n         // if we only have 1 param\n         if (this.parameterDefinitions.length === 1) {\n            ui.cols.pop();\n            ui.cols.push(paramUI);\n         }\n         // if we haven't already added a parameter\n         else {\n            // create a row stack of parameters:\n            if (ui.cols.length < 3)\n               ui.cols.push({\n                  rows: [paramUI],\n               });\n            // add to the current stack of parameters\n            else ui.cols[2].rows.push(paramUI);\n         }\n      }\n   }\n\n   /**\n    * @method uiAddNext()\n    * Add the next row selector for this operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddNext(id, ui) {\n      const uiRow = this.uiNextRow(id);\n\n      // if we have a next operation defined, then add on the ui definitions\n      // for that operation:\n      if (this.next) {\n         this.next.uiAddParams(id, uiRow);\n         ui.rows.push(uiRow);\n         this.next.uiAddNext(id, ui);\n      }\n      // otherwise we just leave the selector:\n      else ui.rows.push(uiRow);\n   }\n\n   /**\n    * @method uiAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParams(id, ui) {\n      this.parameterDefinitions.forEach((pDef) => {\n         this.uiAddParamForDef(pDef, id, ui);\n      });\n   }\n\n   /*\n    * @method uiID()\n    * generate a unique webix id for this operation.\n    * @param {string} id\n    *        the webix id of the base property.query holder\n    */\n   uiID(id) {\n      if (this.prevOP) return `${this.prevOP.uiID(id)}_${this.constructor.key}`;\n\n      return `${id}_${this.constructor.key}`;\n   }\n\n   /*\n    * uiXXX Operations:\n    * are UI building operations that are performed BEFORE the webix UI\n    * is generated.  They work by filling out a {ui} object definition\n    * that webix will eventually create into the DOM.\n    *\n    * viewXXX Operations:\n    * are UI building operations that are performed AFTER the webix UI\n    * is generated. They work by adding in child views to an existing\n    * DOM.\n    */\n\n   /**\n    * @method uiNextRow()\n    * return the webix UI definition for the next of UI chaining.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiNextRow(id) {\n      const options = this.constructor.NextQLOps.map((op) => {\n         return { id: op.key, value: op.label };\n      });\n\n      options.unshift({ id: 0, value: L(\"choose next operation\") });\n\n      const myID = this.uiID(id);\n      const ids = this.toIDs(myID);\n\n      const uiRow = {\n         cols: [\n            {\n               id: ids.select,\n               view: \"select\",\n               value: this.next ? this.next.constructor.key : 0,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     const resetValue = () => {\n                        const select = $$(ids.select);\n\n                        select.blockEvent();\n                        select.setValue(oldValue);\n                        select.unblockEvent();\n                     };\n\n                     if (newValue === oldValue) return;\n\n                     const newOP = this.constructor.NextQLOps.find(\n                        (op) => op.key === newValue\n                     );\n\n                     if (!newOP) {\n                        resetValue();\n\n                        return;\n                     }\n\n                     const thisRow = $$(ids.select).getParentView();\n                     const thisQuery = thisRow.getParentView();\n                     const addOP = () => {\n                        if (newOP) {\n                           const nextOP = new newOP(\n                              {},\n                              this,\n                              this.task,\n                              this.AB\n                           );\n\n                           this.next = nextOP;\n\n                           nextOP.viewAddParams(id, thisRow);\n                           nextOP.viewAddNext(id, thisQuery);\n                        }\n                     };\n\n                     // if there are rows after this one, then warn\n                     // about changing\n                     const allRows = thisQuery.getChildViews();\n\n                     if (allRows.length - 1 > allRows.indexOf(thisRow))\n                        webix.confirm({\n                           title: L(\"continue?\"),\n                           text: L(\n                              \"changing this rule will reset any following rules.\"\n                           ),\n                           ok: L(\"Yes\"),\n                           cancel: L(\"No\"),\n                           callback: (result) => {\n                              if (result) {\n                                 // remove the current additional Rows:\n                                 let ir = allRows.length - 1;\n\n                                 while (\n                                    allRows[ir].config.id !== thisRow.config.id\n                                 ) {\n                                    thisQuery.removeView(allRows[ir]);\n                                    ir--;\n                                 }\n\n                                 // now remove the parameters\n                                 const allCols = thisRow.getChildViews();\n\n                                 let ic = allCols.length;\n\n                                 while (ic > 1) {\n                                    thisRow.removeView(allCols[ic - 1]);\n                                    ic--;\n                                 }\n\n                                 addOP();\n                              } else resetValue();\n                           },\n                        });\n                     else addOP();\n                  },\n               },\n            },\n            {\n               id: ids.spacer,\n            },\n         ],\n      };\n\n      return uiRow;\n   }\n\n   uiNextRowSelectorRefresh(id) {\n      const $select = $$(this.ids.select);\n\n      if (!$select) return;\n\n      const uiNextRow = this.uiNextRow(id);\n\n      const uiNextCol =\n         uiNextRow.cols.filter((c) => c.id == $select.config.id)[0] ??\n         uiNextRow.cols[1];\n\n      if (uiNextCol) AB.Webix.ui(uiNextCol, $select);\n   }\n\n   /**\n    * @method uiParamUI()\n    * return the webix UI definition for the parameter entry of this current\n    * operation.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiParamUI(pDef, id) {\n      const uiConfig = AB.Config.uiSettings();\n\n      let myID = this.uiID(id);\n\n      this.ids = this.toIDs(myID);\n\n      let paramUI = null;\n      let options = null;\n      let Filter = null;\n      let hashFieldIDs = null;\n      let initialCond = null;\n      let displayLabel = null;\n      let initialValue = null;\n      let Updater = null;\n      let popUp = null;\n\n      // now add the parameter\n      switch (pDef.type) {\n         case \"objectFields\":\n            // an objectFields parameter returns a select list of fields\n            // available on an Object.\n            if (this.object)\n               options = this.object.fields().map((f) => {\n                  return { id: f.id, value: f.label, icon: `fa fa-${f.icon}` };\n               });\n\n            options.unshift({\n               id: \"_PK\",\n               value: \"[PK]\",\n            });\n\n            // if not set, default .fieldID to the 1st entry in options\n            // so we will have a default.  In use, if a user sees the\n            // 1st item and continues on, then we will have chosen it.\n            if (!this.fieldID && options.length > 0) {\n               // act like it was selected:\n               this.params[pDef.name] = options[0].id;\n               this.paramChanged(pDef, id);\n            }\n\n            paramUI = {\n               id: this.ids.objectfields,\n               view: \"richselect\",\n               label: L(\"Field\"),\n               labelWidth: 70,\n               value: this.fieldID,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectName\":\n            // an objectName parameter returns a select list of available\n            // objects in this ABFactory.\n            options = this.AB.objects().map((o) => {\n               return { id: o.id, value: o.label };\n            });\n\n            if (!this.objectID && options.length > 0) {\n               this.objectID = options[0].id;\n               this.params[pDef.name] = this.objectID;\n               this.paramChanged(pDef);\n            }\n\n            paramUI = {\n               id: this.ids.objectname,\n               view: \"select\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: this.objectID,\n               options: options,\n               on: {\n                  onChange: (newValue /*, oldValue */) => {\n                     this.params = this.params ?? {};\n\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectConditions\":\n            // objectConditions: returns a filter text summary, that when\n            // clicked, pops up a Filter Entry Popup.\n            // the actual value is stored in a hidden field.\n\n            // we will create a new FilterComplex() object to use for our\n            // filtering.\n            // Our goal is to create a special filter entry for each avaiable\n            // process data value that is available.\n            // A filter entry needs to look like:\n            // {\n            //     id: `{string}`,      // A unique id selector for this filter\n            //     name: `{string}`,    // the operation name displayed\n            //     type, {obj}          // an object defining the editor to show\n            //     fn: ()=>{}           // a function used for filtering elements\n            // }\n            //\n            // In our filters, we are assigning filters to EACH field by the\n            // field.id.  So the type definition needs to look like:\n            // {\n            //     \"uniqueID of the field (field.id)\" : {webixUI definition}\n            // }\n\n            Filter = this.AB.filterComplexNew(id);\n            hashFieldIDs = this.availableProcessDataFieldsHash();\n\n            if (this.object) {\n               Filter.fieldsLoad(this.object.fields(), this.object);\n               // NOTE: this will create default filters based upon the\n               // object fields() and their types\n\n               // Now we need to add in the Process Data Fields:\n               // for each Process Data Field that matches our same object\n               const foundFields = Object.keys(hashFieldIDs).map(\n                  (f) => hashFieldIDs[f]\n               );\n\n               Filter.processFieldsLoad(foundFields);\n               /*\n               (foundFields ?? []).forEach((processField) => {\n                  const type = {};\n                  if (processField.field) {\n                     type[processField.field.id] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  } else {\n                     // if there is no .field, it is probably an embedded special field\n                     // like: .uuid\n                     const key = processField.key.split(\".\").pop();\n                     type[key] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  }\n\n                  // add an \"equals\" and \"not equals\" filter for each:\n                  Filter.filterAdd([\n                     {\n                        id: `context_equals`,\n                        name: `equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a === b;\n                        }\n                     },\n                     {\n                        id: `context_not_equal`,\n                        name: `not equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a !== b;\n                        }\n                     }\n                  ]);\n                  \n               }); */\n            }\n\n            // every time the Filter \"saves\" it's data, it emits this event:\n            // take the given condition and store it in our hidden element.\n            Filter.on(\"save\", (condition) => {\n               // @param {obj} condition an object describing the filter\n               // condition.\n\n               this.params = this.params ?? {};\n               this.params[pDef.name] = condition;\n\n               const shortHand = $$(this.ids.shorthand);\n\n               shortHand.define({\n                  label: Filter.toShortHand(),\n               });\n               shortHand.refresh();\n\n               // NOTE: the hidden element is a text field, so convert the\n               // {condition object} => a string\n               const elCondition = $$(this.ids.condition);\n\n               elCondition.define({\n                  value: JSON.stringify(this.params[pDef.name]),\n               });\n               elCondition.refresh();\n            });\n\n            // create the initial condition value from our inputs.\n            initialCond = \"\";\n\n            if (this.params && this.params[pDef.name]) {\n               Filter.setValue(this.params[pDef.name]);\n               initialCond = JSON.stringify(this.params[pDef.name]);\n            } else {\n               Filter.setValue(null);\n            }\n\n            // what we show on the panel, is a text representation\n            // of the current condition.\n            displayLabel = Filter.toShortHand();\n\n            paramUI = {\n               rows: [\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: displayLabel,\n                     on: {\n                        onItemClick: () => {\n                           Filter.popUp($$(this.ids.shorthand), null, {\n                              pos: \"center\",\n                           });\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the condition\n                  // value we will parse out later\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialCond,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"objectValues\":\n            // objectValues : shows a condenced textual representation of the\n            // field => value changes.  Clicking on the text will show a popup\n            // that allows you to add/remove additional field updates for\n            // the current object.\n\n            initialValue = \"\";\n            Updater = new RowUpdater(myID, this.AB);\n\n            if (this.object) Updater.objectLoad(this.object);\n\n            // Set processed data key to value options\n            Updater.setExtendedOptions(\n               (this.task.process.processDataFields(this.task) ?? []).map(\n                  (item) => {\n                     return {\n                        id: item.key,\n                        value: item.label,\n                     };\n                  }\n               )\n            );\n\n            // NOTE: .setValue() must be called once the RowUpdater is already\n            // displayed.  See the end of popUp() below:\n            if (this.params && this.params[pDef.name]) {\n               Updater.setValue(this.params[pDef.name]);\n               initialValue = JSON.stringify(this.params[pDef.name]);\n            }\n\n            popUp = () => {\n               // show the RowUpdater in a popup:\n               const ui = {\n                  id: this.ids.popup,\n                  view: \"popup\",\n                  position: \"center\",\n                  minWidth: 700,\n                  modal: true,\n                  resize: true,\n                  body: {\n                     rows: [\n                        {\n                           height: 30,\n                           borderless: true,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value: \"X\",\n                                 width: 30,\n                                 click: () => {\n                                    $$(this.ids.popup).hide();\n                                 },\n                              },\n                           ],\n                        },\n                        Updater.ui(),\n                        {\n                           view: \"button\",\n                           value: L(\"Save\"),\n                           css: \"webix_primary\",\n                           click: () => {\n                              this.params = this.params ?? {};\n                              this.params[pDef.name] = Updater.getValue();\n                              const sh = $$(this.ids.shorthand);\n\n                              sh.define({\n                                 badge: this.params[pDef.name].length,\n                              });\n                              sh.refresh();\n\n                              const cond = $$(this.ids.condition);\n\n                              cond.define({\n                                 value: JSON.stringify(this.params[pDef.name]),\n                              });\n                              cond.refresh();\n\n                              $$(this.ids.popup).hide();\n                           },\n                        },\n                     ],\n                  },\n               };\n\n               // create and show the popup\n               this._myPopup = webix.ui(ui);\n               this._myPopup.show();\n\n               // NOTE: on a RowUpdater, the values need to be set\n               // AFTER it is displayed:\n               if (this.params && this.params[pDef.name])\n                  Updater.setValue(this.params[pDef.name]);\n            };\n\n            paramUI = {\n               rows: [\n                  // the textual shorthand for these values\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: L(\"Update Popout\"),\n                     badge: this.params[pDef.name]?.length,\n                     on: {\n                        onItemClick: () => {\n                           popUp();\n                        },\n                     },\n                  },\n                  // the hidden field that contains the results\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialValue,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"taskParam\":\n            paramUI = {\n               id: this.ids.taskparam,\n               view: \"text\",\n               label: L(\"Variable\"),\n               labelWidth: 70,\n               value: this.params[pDef.name],\n               placeholder: L(\"Enter parameter name\"),\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n      }\n\n      return paramUI;\n   }\n\n   /**\n    * @method viewAddNext()\n    * Add the next selector row After this Operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} topView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the top container that is adding a new\n    *        row for each operation.\n    */\n   viewAddNext(id, topView) {\n      const uiRow = this.uiNextRow(id);\n\n      topView.addView(uiRow);\n   }\n\n   /**\n    * @method viewAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} rowView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the ROW that the parameters are added to\n    */\n   viewAddParams(id, rowView) {\n      const params = [];\n\n      this.parameterDefinitions.forEach((pDef) => {\n         // get the definition from .uiParamUI()\n         params.push(this.uiParamUI(pDef, id));\n      });\n\n      let toInsert = null;\n\n      // stack parameters in a row if there are more than 1\n      if (params.length > 1)\n         toInsert = {\n            rows: params,\n         };\n      else toInsert = params.pop();\n\n      if (toInsert) {\n         rowView.removeView(rowView.getChildViews()[1]);\n         rowView.addView(toInsert);\n      }\n   }\n\n   warnings() {\n      let myWarnings = this._warnings || [];\n      if (this.next)\n         myWarnings = myWarnings.concat(this.next.warnings()).filter((w) => w);\n      return this.AB.uniq(myWarnings);\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      if (this.next) this.next.warningsEval();\n   }\n\n   // warningsAll() {\n   //    let myWarnings = this.warnings();\n   //    if (this.next) {\n   //       myWarnings = myWarnings.concat(this.next.warningsAll());\n   //    }\n   //    return myWarnings;\n   // }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(message) {\n      // this.emit(\"warning\", `${this.key}: ${message}`);\n      this._warnings = this._warnings || [];\n      this._warnings.push({ message: `${this.key}: ${message}` });\n   }\n\n   ////\n   //// QueryString Parser routines:\n   ////\n}\n\nmodule.exports = ABQL;\n","/*\n * ABQLFind\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\nconst ABQLFindCore = require(\"../../core/ql/ABQLFindCore.js\");\n\nclass ABQLFind extends ABQLFindCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLFind;\n","/*\n * ABQLManager\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst ABQLManagerCore = require(\"../../core/ql/ABQLManagerCore.js\");\nconst ABQLRootObject = require(\"./ABQLRootObject.js\");\n\nconst ABQLManager = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current {ABFactory} active for this interface.\n    * @return {ABQL} | null\n    */\n   fromAttributes: ABQLManagerCore.fromAttributes,\n\n   /**\n    * @method ids()\n    * return a set of unique webix ids for the ui portions of this object.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @return {object}\n    */\n   ids: (id) => {\n      return {\n         root: `${id}_root`,\n         select: `${id}_root_select`,\n         options: `${id}_root_options`,\n      };\n   },\n\n   /**\n    * @method builder\n    * return a UI component like object that will display the QL builder.\n    * The component will support:\n    *\t\t.ui(id) : returns a webix ui definition for the current builder\n    *\t\t.init(id) : performs any special actions to prepare the webix ui\n    * @param {object} rootOP\n    *\t\t  the root ABQLxxxx operation\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} active for this display.\n    * @return {object}\n    */\n   builder: (rootOP, task, AB) => {\n      // const rootOP = this.fromAttributes(attributes, task, AB);\n      // const L = (...params) => AB.Multilingual.label(...params);\n\n      return {\n         ui: (id) => {\n            rootOP = rootOP ?? new ABQLRootObject({}, task, AB);\n\n            const ids = ABQLManager.ids(id);\n            const ui = {\n               rows: [\n                  {\n                     id: ids.root,\n                     cols: [],\n                  },\n               ],\n            };\n\n            rootOP.uiAddParams(id, ui);\n            rootOP.uiAddNext(id, ui);\n\n            return ui;\n         },\n         init: (id) => {},\n      };\n   },\n\n   /**\n    * @method parse\n    * step through the current properties panel and decode the QL objects\n    * and their parameters.\n    * Return the .toOBJ() attributes definition as a result.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} object that is currently active.\n    * @return {object}\n    */\n   parse: (id, task, AB) => {\n      const ids = ABQLManager.ids(id);\n      const root = $$(ids.root);\n\n      if (!root) {\n         console.warn(\"ABQLManager.parse(): unable to find root element\");\n\n         return;\n      }\n\n      // get all the input rows\n      const rows = root.getParentView().getChildViews();\n\n      const parseCurrent = (rows, options, prevOP) => {\n         if (rows.length === 0) return null;\n\n         const row = rows.shift();\n\n         // get which operation was selected\n         // find the operation selector (skip any indents)\n         const views = row.getChildViews();\n\n         let selector = views.shift();\n\n         while (!selector?.getValue) selector = views.shift();\n\n         const value = selector.getValue();\n\n         // figure out the QLOP object\n         const OP = options.find((o) => {\n            return o.key === value || o.key === ABQLRootObject.key;\n         });\n\n         if (OP) {\n            let currOP = null;\n\n            if (prevOP) currOP = new OP({}, prevOP, task, AB);\n            else currOP = new OP({}, task, AB);\n\n            // now get currOP to initialize from it's parameters:\n            currOP.parseRow(row, id);\n\n            // carry forward any .object info if not already established\n            // by the .parseRow():\n            if (!currOP.object && prevOP) {\n               currOP.object = prevOP.object;\n               currOP.objectID = currOP.object?.id ?? null;\n            }\n\n            const nextRow = parseCurrent(\n               rows,\n               currOP.constructor.NextQLOps,\n               currOP\n            );\n\n            currOP.next = nextRow;\n\n            return currOP;\n         }\n\n         return null;\n      };\n\n      const operation = parseCurrent(rows, ABQLManagerCore.QLOps, null);\n\n      return operation;\n   },\n};\n\nmodule.exports = ABQLManager;\n","/*\n * ABQLRootObject\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQLRootObjectCore = require(\"../../core/ql/ABQLRootObjectCore.js\");\n\nclass ABQLObject extends ABQLRootObjectCore {\n   // constructor(attributes, task, application) {\n   //     // NOTE: keep this so we can insert the prevOp === null\n   //     super(attributes, ParameterDefinitions, null, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"name\") {\n         this.objectID = this.params[pDef.name];\n         this.object = this.objectLookup(this.objectID);\n\n         // ?? is this correct?\n         // if we already have created a .next operation, and we have\n         // just changed our .object, pass that information forward.\n         if (this.next) this.next.object = this.object;\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      // for an Object operation, we need to set our .objectID after\n      // the values are parsed.\n\n      if (this.params.name) {\n         this.objectID = this.params.name;\n         this.object = this.objectLookup(this.params.name);\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.object) {\n         this.warningMessage(\"has no object set.\", {\n            objectID: this.objectID,\n         });\n      }\n   }\n}\n\nmodule.exports = ABQLObject;\n","const ABQLRowPluckCore = require(\"../../core/ql/ABQLRowPluckCore.js\");\n\nclass ABQLRowPluck extends ABQLRowPluckCore {\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n\n      // Re-generate next select options\n      if (pDef.name === \"fieldID\") this.uiNextRowSelectorRefresh(id);\n   }\n}\n\nmodule.exports = ABQLRowPluck;\n","/*\n * ABQLRowSave\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLRowSaveCore = require(\"../../core/ql/ABQLRowSaveCore.js\");\n\nclass ABQLRowSave extends ABQLRowSaveCore {\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n   }\n}\n\nmodule.exports = ABQLRowSave;\n","/*\n * ABQLRowUpdate\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQLRowUpdateCore = require(\"../../core/ql/ABQLRowUpdateCore.js\");\n\nclass ABQLRowUpdate extends ABQLRowUpdateCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   //     // #Hack! : when an Operation provides the same .NextQlOps that it\n   //     // was defined in, we can't require it again ==> circular dependency.\n   //     // so we manually set it here from the operation that created us:\n   //     this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLRowUpdate;\n","/*\n * ABQLSetFirst\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQLSetFirstCore = require(\"../../core/ql/ABQLSetFirstCore.js\");\n\nclass ABQLSetFirst extends ABQLSetFirstCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLSetFirst;\n","/*\n * ABQLSetPluck\n *\n * An ABQLSetPluck can process a set (array) of data and pluck out a specified\n * field from each row to then make an array of values that only contain that \n * field.\n * \n * Example: \narray = [\n {\n\tname: \"Neo\",\n\temail: \"neo@thematrix.com\",\n\trelationships: [ { morpheous}, {trinity} ]\n },\n {\n\tname: \"trinity\",\n\temail: \"trinity@thematrix.com\",\n\trelationships: [ {neo}, {morpheous} ]\n },\n {\n\tname: \"morpheous\",\n\temail: \"morpheous@thematrix.com\",\n\trelationships: [ {neo}, {trinity}]\n }\n\n]\n\npluck(\"email\") :\n\t[\n\t\t\"neo@thematrix.com\",\n\t\t\"trinity@thematrix.com\",\n\t\t\"morpheous@thematrix.com\"\n\t]\n\npluck(\"relationships\"):\n\t[\n\t\t{neo},\n\t\t{trinity},\n\t\t{morpheous}\n\t]\n *\n */\n\nconst ABQLSetPluckCore = require(\"../../core/ql/ABQLSetPluckCore.js\");\n\nclass ABQLSetPluck extends ABQLSetPluckCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"fieldID\") {\n         // debugger;\n         this.fieldID = this.params[pDef.name];\n         // v2 method:\n         // this.field = this.object.fieldByID(this.fieldID);\n         this.field = this.object.fieldByID(this.fieldID);\n\n         // v2 method:\n         // if (this.field && this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n\n            // ?? is this correct?\n            // if we already have created a .next operation, and we have\n            // just changed our .object, pass that information forward.\n            if (this.next) this.next.object = this.objectOut;\n         }\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * NOTE: in this process our .object and .objectOut isn't as simple\n    * as the other QL node types.  We'll have to interpolate our values\n    * from the given fieldID in our property panel.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.fieldID = this.params.fieldID;\n\n      // we now have to build backwards from the current fieldID to set our\n      // relevant .object and .objectOut\n      this.AB.objects((o) => {\n         if (!this.field) {\n            // const field = o.fieldByID(this.fieldID);\n            const field = o.fieldByID(this.fieldID);\n\n            if (field) this.field = field;\n         }\n      });\n\n      if (this.field) {\n         this.object = this.field.object;\n\n         // v2 method:\n         // if (this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n         }\n      }\n   }\n}\n\nmodule.exports = ABQLSetPluck;\n","/*\n * ABQLSetSave\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSaveCore = require(\"../../core/ql/ABQLSetSaveCore.js\");\n\nclass ABQLSetSave extends ABQLSetSaveCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"task_param\") {\n         this.taskParam = this.params[pDef.name];\n      }\n   }\n\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.taskParam = this.params[\"task_param\"];\n\n      if (!this.registered) {\n         this.task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.taskParam || this.taskParam === \"\") {\n         this.warningMessage(\"requires a name to save our data as.\");\n      }\n   }\n}\n\nmodule.exports = ABQLSetSave;\n","const ABViewCore = require(\"../../core/views/ABViewCore.js\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nmodule.exports = class ABView extends ABViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewComponent(this);\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"view\",\n         \"page\",\n         \"formpanel\",\n         \"viewcontainer\",\n         // not allowed Detail's widgets\n         \"detailcheckbox\",\n         \"detailcustom\",\n         \"detailconnect\",\n         \"detailimage\",\n         \"detailselectivity\",\n         \"detailtext\",\n         \"detailtree\",\n         // not allowed Form's widgets\n         \"button\",\n         \"checkbox\",\n         \"connect\",\n         \"datepicker\",\n         \"fieldcustom\",\n         \"textbox\",\n         \"numberbox\",\n         \"selectsingle\",\n         \"selectmultiple\",\n         \"formtree\",\n         \"fieldreadonly\",\n         // not allowed Chart's Widgets\n         \"pie\",\n         \"bar\",\n         \"line\",\n         \"area\",\n         // not allowed Report page\n         \"report\",\n         \"reportPage\",\n         \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll(); // ABViewManager.allViews();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABViewCSVExporterCore = require(\"../../core/views/ABViewCSVExporterCore\");\nconst ABViewCSVExporterComponent = require(\"./viewComponent/ABViewCSVExporterComponent\");\n\nmodule.exports = class ABViewCSVExporter extends ABViewCSVExporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewCSVExporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../core/views/ABViewCSVImporterCore\");\nconst ABViewCSVImporterComponent = require(\"./viewComponent/ABViewCSVImporterComponent\");\n\nmodule.exports = class ABViewCSVImporter extends ABViewCSVImporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(idBase) {\n      return new ABViewCSVImporterComponent(this, idBase);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.availableFieldIds?.length) {\n         this.warningsMessage(\"has no fields set for matching import data\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewCarouselComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewCarousel_${baseView.id}`,\n         Object.assign(\n            {\n               carousel: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_doOnShow = () => {\n         this.onShow();\n      };\n\n      this._handler_doReload = () => {\n         // this.datacollection?.reloadData();\n      };\n\n      this._handler_doFilter = (fnFilter, filterRules) => {\n         // NOTE: fnFilter is depreciated and will be removed.\n\n         // this.onShow(filterRules);\n         const dv = this.datacollection;\n\n         if (!dv) return;\n\n         dv.filterCondition(filterRules);\n         dv.reloadData();\n      };\n\n      this._handler_busy = () => {\n         this.busy();\n      };\n\n      this._handler_ready = () => {\n         this.ready();\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      this.filterUI = baseView.filterHelper; // component(/* App, idBase */);\n      this.linkPage = baseView.linkPageHelper.component(/* App, idBase */);\n\n      const spacer = {};\n      const settings = this.settings;\n\n      if (settings.width === 0)\n         Object.assign(spacer, {\n            width: 1,\n         });\n\n      const _ui = super.ui([\n         {\n            borderless: true,\n            cols: [\n               spacer, // spacer\n               {\n                  borderless: true,\n                  rows: [\n                     this.filterUI.ui(), // filter UI\n                     {\n                        id: ids.carousel,\n                        view: \"carousel\",\n                        cols: [],\n                        width: settings.width,\n                        height: settings.height,\n                        navigation: {\n                           items: !settings.hideItem,\n                           buttons: !settings.hideButton,\n                           type: settings.navigationType,\n                        },\n                        on: {\n                           onShow: () => {\n                              const activeIndex = $$(\n                                 ids.carousel\n                              ).getActiveIndex();\n\n                              this.switchImage(activeIndex);\n                           },\n                        },\n                     },\n                  ],\n               },\n               spacer, // spacer\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) {\n         AB.notify.builder(`Datacollection is ${dv}`, {\n            message: \"This is an invalid datacollection\",\n         });\n\n         return;\n      }\n\n      const object = dv.datasource;\n\n      if (!object) {\n         AB.notify.developer(`Object is ${dv}`, {\n            message: \"This is an invalid object\",\n         });\n\n         return;\n      }\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n      dv.on(\"loadData\", this._handler_doOnShow);\n\n      dv.removeListener(\"update\", this._handler_doReload);\n      dv.on(\"update\", this._handler_doReload);\n\n      dv.removeListener(\"delete\", this._handler_doReload);\n      dv.on(\"delete\", this._handler_doReload);\n\n      dv.removeListener(\"create\", this._handler_doReload);\n      dv.on(\"create\", this._handler_doReload);\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n      dv.on(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n      dv.on(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n         dv.on(\"changeCursor\", this._handler_doOnShow);\n      }\n\n      const baseView = this.view;\n\n      // filter helper\n      baseView.filterHelper.objectLoad(object);\n      baseView.filterHelper.viewLoad(this);\n\n      this.filterUI.init(this.AB);\n      this.filterUI.removeListener(\"filter.data\", this._handler_doFilter);\n      this.filterUI.on(\"filter.data\", this._handler_doFilter);\n\n      // link page helper\n      this.linkPage.init({\n         view: baseView,\n         datacollection: dv,\n      });\n\n      // set data-cy\n      const $carouselView = $$(this.ids.carousel)?.$view;\n\n      if ($carouselView) {\n         $carouselView.setAttribute(\n            \"data-cy\",\n            `${baseView.key} ${baseView.id}`\n         );\n         $carouselView\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button previous ${baseView.id}`\n            );\n         $carouselView\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button next ${baseView.id}`\n            );\n      }\n   }\n\n   /**\n    * @method detatch()\n    * Will make sure all our handlers are removed from any object\n    * we have attached them to.\n    *\n    * You'll want to call this in situations when we are dynamically\n    * creating and recreating instances of the same Widget (like in\n    * the ABDesigner).\n    */\n   detatch() {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n\n      if (this._handler_doReload) {\n         dv.removeListener(\"update\", this._handler_doReload);\n         dv.removeListener(\"delete\", this._handler_doReload);\n         dv.removeListener(\"create\", this._handler_doReload);\n      }\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor)\n         dv.removeListener(\"changeCursor\", this._handler_doOnShow);\n\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n   }\n\n   myTemplate(row) {\n      if (row?.src) {\n         const settings = this.settings;\n\n         return `<div class=\"ab-carousel-image-container\">\n            <link rel=\"preload\" href=\"${\n               row.src\n            }\" as=\"image\" fetchpriotity=\"low\"/>\n            <img src=\"${\n               row.src\n            }\" class=\"content\" ondragstart=\"return false\" loading=\"lazy\" />\n            ${\n               settings.showLabel\n                  ? `<div class=\"ab-carousel-image-title\">${\n                       row.label || \"\"\n                    }</div>`\n                  : \"\"\n            }\n            <div class=\"ab-carousel-image-icon\">\n            ${\n               settings.detailsPage || settings.detailsTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n                  : \"\"\n            }\n            ${\n               settings.editPage || settings.editTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n                  : \"\"\n            }\n               <span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>\n               <span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>\n            </div>\n         </div>`;\n      }\n      // empty image\n      else return \"\";\n   }\n\n   busy() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.disable();\n      $carousel?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.enable();\n      $carousel?.hideProgress?.();\n   }\n\n   async switchImage(currentPosition) {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // Check want to load more images\n      if (\n         currentPosition >= this._imageCount - 1 && // check last image\n         dv.totalCount > this._rowCount\n      ) {\n         // loading cursor\n         this.busy();\n\n         try {\n            await dv.loadData(this._rowCount || 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message:\n                  \"ABViewCarousel:switchImage():Error when load data from a Data collection\",\n            });\n         }\n\n         this.ready();\n      }\n   }\n\n   onShow(fnFilter = this.filterUI.getFilter()) {\n      const ids = this.ids;\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const obj = dv.datasource;\n\n      if (!obj) return;\n\n      const field = this.view.imageField;\n\n      if (!field) return;\n\n      if (dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n\n         // it will call .onShow again after dc loads completely\n         return;\n      }\n\n      const settings = this.settings;\n\n      let rows = dv.getData(fnFilter);\n\n      // Filter images by cursor\n      if (settings.filterByCursor) {\n         const cursor = dv.getCursor();\n\n         if (cursor)\n            rows = rows.filter(\n               (r) =>\n                  (r[obj.PK()] || r.id || r) ===\n                  (cursor[obj.PK()] || cursor.id || cursor)\n            );\n      }\n\n      const images = [];\n\n      rows.forEach((r) => {\n         const imgFile = r[field.columnName];\n\n         if (imgFile) {\n            const imgData = {\n               id: r.id,\n               src: `/file/${imgFile}`,\n            };\n\n            // label of row data\n            if (settings.showLabel) imgData.label = obj.displayData(r);\n\n            images.push({\n               css: \"image\",\n               borderless: true,\n               template: (...params) => {\n                  return this.myTemplate(...params);\n               },\n               data: imgData,\n            });\n         }\n      });\n\n      const ab = this.AB;\n\n      // insert the default image to first item\n      if (field.settings.defaultImageUrl)\n         images.unshift({\n            css: \"image\",\n            template: (...params) => this.myTemplate(...params),\n            data: {\n               id: ab.uuid(),\n               src: `/file/${field.settings.defaultImageUrl}`,\n               label: this.label(\"Default image\"),\n            },\n         });\n\n      // empty image\n      if (images.length < 1)\n         images.push({\n            rows: [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: settings.height,\n                  label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n               },\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  label: this.label(\"No image\"),\n               },\n            ],\n         });\n\n      // store total of rows\n      this._rowCount = rows.length;\n\n      // store total of images\n      this._imageCount = images.length;\n\n      const $carousel = $$(ids.carousel);\n      const abWebix = ab.Webix;\n\n      if ($carousel) {\n         // re-render\n         abWebix.ui(images, $carousel);\n\n         // add loading cursor\n         abWebix.extend($carousel, abWebix.ProgressBar);\n\n         // link pages events\n         const editPage = settings.editPage;\n         const detailsPage = settings.detailsPage;\n\n         // if (detailsPage || editPage) {\n         $carousel.$view.onclick = (e) => {\n            if (e.target.className) {\n               if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(editPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-detail\") > -1\n               ) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(detailsPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n               ) {\n                  $carousel.define(\"css\", \"fullscreen\");\n                  abWebix.fullscreen.set(ids.carousel, {\n                     head: {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        elements: [\n                           {},\n                           {\n                              view: \"icon\",\n                              icon: \"fa fa-times\",\n                              click: function () {\n                                 abWebix.html.removeCss(\n                                    $carousel.getNode(),\n                                    \"fullscreen\"\n                                 );\n                                 abWebix.fullscreen.exit();\n                              },\n                           },\n                        ],\n                     },\n                  });\n               }\n            }\n         };\n      }\n   }\n\n   showFilterPopup($view) {\n      this.filterUI.showPopup($view);\n   }\n}\n","const ABViewCarouselCore = require(\"../../core/views/ABViewCarouselCore\");\nimport ABViewCarouselComponent from \"./viewComponent/ABViewCarouselComponent\";\n\n// const ABViewPropertyFilterData = require(\"./viewProperties/ABViewPropertyFilterData\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\");\n\nimport ABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nlet PopupCarouselFilterMenu = null;\n\nexport default class ABViewCarousel extends ABViewCarouselCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.filter);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      return new ABViewCarouselComponent(this);\n   }\n\n   get idBase() {\n      return `ABViewCarousel_${this.id}`;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null)\n         this.__filterHelper = new ABViewPropertyFilterData(\n            this.AB,\n            this.idBase\n         );\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.imageField;\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve image field[${this.settings.field}]`\n         );\n      }\n   }\n}\n","const ABViewChartCore = require(\"../../core/views/ABViewChartCore\");\nconst ABViewChartComponent = require(\"./viewComponent/ABViewChartComponent\");\n\nmodule.exports = class ABViewChart extends ABViewChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      this.refreshData();\n   }\n\n   getDCChart() {\n      if (!this._dcChart) this._dcChart = new webix.DataCollection();\n\n      return this._dcChart;\n   }\n\n   refreshData() {\n      const dc = this.datacollection;\n      if (dc == null) return this.dcChart;\n\n      const labelCol = this.labelField();\n      const valueCol = this.valueField();\n      const valueCol2 = this.valueField2();\n\n      if (!labelCol || !valueCol) return this.dcChart;\n\n      // const labelColName = labelCol.columnName;\n      const numberColName = valueCol.columnName;\n\n      let numberColName2 = \"\";\n\n      if (this.settings.multipleSeries && valueCol2) {\n         numberColName2 = valueCol2.columnName;\n      }\n\n      const colorList = [\n         \"#ee4339\",\n         \"#ee9336\",\n         \"#eed236\",\n         \"#d3ee36\",\n         \"#a7ee70\",\n         \"#58dccd\",\n         \"#36abee\",\n         \"#476cee\",\n         \"#a244ea\",\n         \"#e33fc7\",\n      ];\n\n      const dInfo = dc.getData();\n\n      let results = [];\n      let sumData = {};\n      let sumNumber = 0;\n      let sumNumber2 = 0;\n      let countNumber = dInfo.length;\n\n      dInfo.forEach((item) => {\n         const labelKey = labelCol.format(item) || item.id;\n\n         let numberVal = parseFloat(item[numberColName] || 0);\n         let numberVal2 = null;\n\n         if (this.settings.multipleSeries)\n            numberVal2 = parseFloat(item[numberColName2]) || 0;\n\n         switch (valueCol.key) {\n            //Formula Datatype\n            case \"formula\":\n               numberVal = valueCol.format(item);\n\n               break;\n\n            //Calcualte Datatype\n            case \"calculate\":\n               numberVal = parseFloat(\n                  valueCol.constructor.convertToJs(\n                     valueCol.object,\n                     valueCol.settings.formula,\n                     item,\n                     valueCol.settings.decimalPlaces\n                  )\n               );\n\n               break;\n\n            default:\n               break;\n         }\n\n         if (sumData[labelKey] == null) {\n            let label = labelKey;\n\n            // Get label of the connect field\n            if (labelCol.isConnection) {\n               let relateValues = labelCol.pullRelationValues(item);\n               if (relateValues != null) {\n                  if (Array.isArray(relateValues))\n                     label = relateValues\n                        .map((val) => val.text || \"\")\n                        .join(\", \");\n                  else label = relateValues.text;\n               }\n            }\n\n            if (this.settings.multipleSeries) {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n                  value2: 0,\n               };\n            } else {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n               };\n            }\n         }\n\n         sumData[labelKey].value += numberVal;\n         sumNumber += numberVal;\n\n         if (this.settings.multipleSeries) {\n            sumData[labelKey].value2 += numberVal2;\n            sumNumber2 += numberVal2;\n         }\n      });\n\n      let index = 0;\n\n      for (const key in sumData) {\n         let val = sumData[key].value;\n\n         if (val <= 0) continue;\n\n         // Display to percent values\n         if (this.settings.isPercentage) {\n            val = (val / sumNumber) * 100;\n            val = Math.round(val * 100) / 100; // round decimal 2 digits\n            val = val + \" %\";\n         }\n\n         if (this.settings.multipleSeries) {\n            let val2 = sumData[key].value2;\n\n            if (val2 <= 0) continue;\n\n            // Display to percent values\n            if (this.settings.isPercentage) {\n               val2 = (val2 / sumNumber2) * 100;\n               val2 = Math.round(val2 * 100) / 100; // round decimal 2 digits\n               val2 = val2 + \" %\";\n            }\n\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               value2: val2,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         } else {\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         }\n\n         index += 1;\n      }\n\n      const dcChart = this.getDCChart();\n\n      dcChart.clearAll();\n      dcChart.parse(results);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let labelField = this.labelField();\n      if (!labelField) {\n         this.warningsMessage(\n            `can't resolve label field[${this.settings.columnLabel}]`\n         );\n      }\n\n      let valueField = this.valueField();\n      if (!valueField) {\n         this.warningsMessage(\n            `can't resolve value field[${this.settings.columnValue}]`\n         );\n      }\n\n   }\n};\n","const ABViewChartAreaCore = require(\"../../core/views/ABViewChartAreaCore\");\nconst ABViewChartAreaComponent = require(\"./viewComponent/ABViewChartAreaComponent\");\n\nmodule.exports = class ABViewChartArea extends ABViewChartAreaCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartAreaComponent(this);\n   }\n};\n","const ABViewChartBarCore = require(\"../../core/views/ABViewChartBarCore\");\nconst ABViewChartBarComponent = require(\"./viewComponent/ABViewChartBarComponent\");\n\nmodule.exports = class ABViewChartBar extends ABViewChartBarCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartBarComponent(this);\n   }\n};\n","const ABViewWidget = require(\"./ABViewWidget\");\nconst ABViewChartContainerComponent = require(\"./viewComponent/ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartContainer extends ABViewWidget {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartContainerComponent(this);\n   }\n\n   get datacollection() {\n      return this.parent.datacollection;\n   }\n};\n","const ABViewChartLineCore = require(\"../../core/views/ABViewChartLineCore\");\nconst ABViewChartLineComponent = require(\"./viewComponent/ABViewChartLineComponent\");\n\nmodule.exports = class ABViewChartLine extends ABViewChartLineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartLineComponent(this);\n   }\n};\n","const ABViewChartPieCore = require(\"../../core/views/ABViewChartPieCore\");\nconst ABViewChartPieComponent = require(\"./viewComponent/ABViewChartPieComponent\");\n\nmodule.exports = class ABViewChartPie extends ABViewChartPieCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartPieComponent(this);\n   }\n};\n","const ABViewCommentCore = require(\"../../core/views/ABViewCommentCore\");\nconst ABViewCommentComponent = require(\"./viewComponent/ABViewCommentComponent\");\n\nmodule.exports = class ABViewComment extends ABViewCommentCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCommentComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.getUserField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve user field[${this.settings.columnUser}]`\n         );\n      }\n\n      field = this.getCommentField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve comment field[${this.settings.columnComment}]`\n         );\n      }\n\n      field = this.getDateField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve date field[${this.settings.columnDate}]`\n         );\n      }\n   }\n};\n","const ABViewConditionalContainerCore = require(\"../../core/views/ABViewConditionalContainerCore\");\nconst ABViewConditionalContainerComponent = require(\"./viewComponent/ABViewConditionalContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainer extends (\n   ABViewConditionalContainerCore\n) {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConditionalContainerComponent(this);\n   }\n\n   async save() {\n      const viewIf = this.views().find((v) => v.name === \"If\");\n      const viewElse = this.views().find((v) => v.name === \"Else\");\n      const pendingSave = [];\n\n      if (viewIf) pendingSave.push(viewIf.save());\n\n      if (viewElse) pendingSave.push(viewElse.save());\n\n      await Promise.all(pendingSave);\n\n      await super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (\n         !this.settings.filterConditions ||\n         this.settings.filterConditions?.rules?.length == 0\n      ) {\n         this.warningsMessage(\"has no filter conditions set\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewConnectDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewConnectDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n            },\n            ids\n         )\n      );\n\n      this.field = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            type: \"space\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"icon\",\n                  icon: \"fa fa-filter\",\n                  align: \"left\",\n                  disabled: true,\n               },\n               {\n                  view: \"combo\",\n                  id: ids.filter,\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  disabled: true,\n                  on: {\n                     onChange: (id) => this.applyConnectFilter(id),\n                  },\n               },\n               {\n                  view: \"icon\",\n                  id: ids.reset,\n                  icon: \"fa fa-times\",\n                  align: \"left\",\n                  disabled: true,\n                  tooltip: this.label(\"Renmove this filter\"),\n                  on: {\n                     onItemClick: () => this.resetConnectFilter(),\n                  },\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      const [field] = object.fields(\n         (f) => f.columnName === this.settings.field\n      );\n\n      if (!field) {\n         this.AB.notify.developer(\n            `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n            {\n               context: \"ABViewConnectDataFilterComponent.init()\",\n               data: { settings: this.settings },\n            }\n         );\n\n         return;\n      }\n\n      this.field = field;\n\n      const ids = this.ids;\n      const suggest = webix.ui({\n         view: \"suggest\",\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.filter), field, {});\n            },\n         },\n      });\n      field.getAndPopulateOptions(suggest, null, field);\n\n      const $filter = $$(ids.filter);\n\n      $filter.define(\"suggest\", suggest);\n      $filter.define(\"label\", `${this.label(\"Filter by\")} ${field.label}`);\n      $filter.enable();\n      $filter.refresh();\n   }\n\n   resetConnectFilter() {\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [] });\n      dc.reloadData();\n      // Block applyConnectFields() from triggering\n\n      const $filter = $$(ids.filter);\n\n      $filter.blockEvent();\n      $filter.setValue();\n      $filter.unblockEvent();\n      $$(ids.reset).disable();\n   }\n\n   applyConnectFilter(connectId) {\n      const filterRule = {\n         key: this.field.id,\n         rule: \"equals\",\n         value: connectId,\n      };\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [filterRule] });\n      dc.reloadData();\n      $$(this.ids.reset).enable();\n   }\n}\n","import ABViewConnectDataFilterCore from \"../../core/views/ABViewConnectDataFilterCore\";\nimport ABViewConnectDataFilterComponent from \"./viewComponent/ABViewConnectDataFilterComponent\";\n\nexport default class ABViewConnectDataFilter extends ABViewConnectDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConnectDataFilterComponent(this);\n   }\n}\n","const ABViewContainerCore = require(\"../../core/views/ABViewContainerCore\");\nconst ABViewContainerComponent = require(\"./viewComponent/ABViewContainerComponent\");\n\nmodule.exports = class ABViewContainer extends ABViewContainerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewContainerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no content\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (allViews || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\nimport ABViewCustomFilter from \"../viewProperties/ABViewPropertyFilterData\";\nimport _ from \"lodash\";\n\nexport default class ABViewDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n               sortButton: \"\",\n               filterButton: \"\",\n               globalSearchToolbar: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.field = null;\n      const ab = this.AB;\n\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n      this.PopupSortComponent = new ABPopupSortField(\n         `ABViewDataFilter_Sort_Popup_${this.settings.dataviewID}`\n      );\n      this.PopupSortComponent.init(ab);\n      this.PopupSortComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n\n      this.filterHelper = new ABViewCustomFilter(\n         this.AB,\n         `ABViewDataFilter_Filter_Popup_${this.settings.dataviewID}`\n      );\n      this.filterHelper.settings = {\n         filterOption: 1,\n         userFilterPosition: \"toolbar\",\n         isGlobalToolbar: 1,\n      };\n      this.filterHelper.init(ab);\n      this.detatch();\n      this.filterHelper.on(\"filter.data\", this._handler_filterData);\n   }\n\n   advancedUI() {\n      const compId = this.ids.component;\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            rows: [\n               {},\n               {\n                  cols: [\n                     {\n                        width: 18,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-filter\",\n                        width: 40,\n                        id: this.ids.filterButton,\n                        css: `webix_primary abFilterButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.toolbarFilter($$(this.ids.filterButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} filter button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-sort\",\n                        width: 40,\n                        id: this.ids.sortButton,\n                        css: `webix_primary abSortButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.openSort($$(this.ids.sortButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} sort button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.globalSearchToolbar,\n                        view: \"search\",\n                        placeholder: this.label(\"Search..\"),\n                        css: `abGlobalSearchField${this.settings.dataviewID}`,\n                        width: 0,\n                        attributes: {\n                           \"data-cy\": `${this.ids.component} global search`,\n                           datacollection: this.settings.dataviewID,\n                        },\n                        on: {\n                           onTimedKeyPress: () => {\n                              const searchText = $$(\n                                 this.ids.globalSearchToolbar\n                              ).getValue();\n                              // store search text in datacollection because\n                              // it is shared amoung the similar filterHelpers\n                              const dc = this.datacollection;\n                              dc.settings.objectWorkspace.searchText =\n                                 searchText;\n\n                              this.filterHelper.externalSearchText(searchText);\n                           },\n                        },\n                     },\n                     {\n                        width: 18,\n                     },\n                  ],\n               },\n               {},\n            ],\n         },\n      ];\n   }\n\n   connectedFieldUI() {\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            cols: [\n               {\n                  width: 18,\n               },\n               {\n                  rows: [\n                     {},\n                     {\n                        view: \"abslayout\",\n                        cells: [\n                           {\n                              css: \"bg_gray\",\n                              view: \"combo\",\n                              id: this.ids.filter,\n                              labelWidth: 0,\n                              relative: true,\n                              disabled: true,\n                              on: {\n                                 onChange: (id) => this.applyConnectFilter(id),\n                              },\n                           },\n                           {\n                              view: \"icon\",\n                              id: this.ids.reset,\n                              icon: \"fa fa-times\",\n                              right: 24,\n                              top: 7,\n                              width: 24,\n                              height: 24,\n                              hidden: true,\n                              tooltip: this.label(\"Remove this filter\"),\n                              on: {\n                                 onItemClick: () =>\n                                    $$(this.ids.filter).setValue(),\n                              },\n                           },\n                        ],\n                     },\n                     {},\n                  ],\n               },\n               {\n                  width: 18,\n               },\n            ],\n         },\n      ];\n   }\n\n   ui() {\n      if (this.settings.viewType == \"advanced\") {\n         if (!this?.settings?.dataviewID) return { height: 1 };\n      } else {\n         if (!this?.settings?.dataviewID || !this?.settings?.field)\n            return { height: 1 };\n      }\n\n      const ui =\n         this.settings.viewType == \"advanced\"\n            ? this.advancedUI()\n            : this.connectedFieldUI();\n      const _ui = super.ui(ui);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      if (this.settings.viewType == \"advanced\") {\n         if (this.settings.showSort) {\n            this.PopupSortComponent.objectLoad(object);\n            // if there are some preset sorts show them to user\n            this.PopupSortComponent.setSettings(\n               dv?.settings?.objectWorkspace?.sortFields\n            );\n         } else {\n            $$(this.ids.sortButton).hide();\n         }\n         if (this.settings.showFilter) {\n            this.filterHelper.objectLoad(object);\n         } else {\n            $$(this.ids.filterButton).hide();\n         }\n      } else if (this.settings.viewType == \"connected\") {\n         const [field] = object.fields(\n            (f) => f.columnName === this.settings.field\n         );\n\n         if (!field) {\n            this.AB.notify.developer(\n               `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n               {\n                  context: \"ABViewDataFilterComponent.init()\",\n                  data: { settings: this.settings },\n               }\n            );\n\n            return;\n         }\n\n         this.field = field;\n\n         const ids = this.ids;\n         const suggest = webix.ui({\n            view: \"suggest\",\n            filter: ({ value }, search) =>\n               value.toLowerCase().includes(search.toLowerCase()),\n            on: {\n               onShow: () => {\n                  field.populateOptionsDataCy($$(ids.filter), field, {});\n               },\n            },\n            showAllOptions: true,\n         });\n         field.getAndPopulateOptions(suggest, null, field);\n\n         const $filter = $$(ids.filter);\n\n         $filter.define(\"suggest\", suggest);\n         $filter.define(\n            \"placeholder\",\n            `${this.label(\"Filter by\")} ${field.label}`\n         );\n         $filter.enable();\n         $filter.refresh();\n      }\n   }\n\n   onShow() {\n      super.onShow();\n      this.updateUI();\n   }\n\n   applyConnectFilter(connectId) {\n      let filterRule = [];\n      if (connectId) {\n         $$(this.ids.reset).show();\n         filterRule = [\n            {\n               key: this.field.id,\n               rule: \"equals\",\n               value: connectId,\n            },\n         ];\n      } else {\n         $$(this.ids.reset).hide();\n      }\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: filterRule });\n      dc.reloadData();\n   }\n\n   openSort($view) {\n      this.PopupSortComponent.show($view);\n   }\n\n   /**\n    * @method callbackSortData()\n    * Process the provided sort options from our sort ui.\n    * @param {array} sortRules\n    *        Any Sort Rules added by the user.\n    */\n   async callbackSortData(sortRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.settings?.objectWorkspace?.sortFields, sortRules)) {\n         dc.settings.objectWorkspace.sortFields = sortRules;\n         await this.datacollection.reloadData();\n      }\n      this.updateUI();\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.__filterCond, filterRules)) {\n         dc.filterCondition(filterRules);\n         dc.reloadData();\n         this.updateUI();\n      }\n   }\n\n   toolbarFilter($view) {\n      this.filterHelper.showPopup($view);\n   }\n\n   updateUI() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      var filterButtons = document.getElementsByClassName(\n         `abFilterButton${this.settings.dataviewID}`\n      );\n\n      const onlyFilterRules = this.filterHelper.filterRules();\n      let filterBadge =\n         onlyFilterRules?.rules?.length > 0\n            ? onlyFilterRules?.rules?.length\n            : null;\n      for (let b of filterButtons) {\n         $$(b).define(\"badge\", filterBadge);\n         $$(b).refresh();\n      }\n\n      var sortButtons = document.getElementsByClassName(\n         `abSortButton${this.settings.dataviewID}`\n      );\n\n      const onlySortRules = dc.settings.objectWorkspace.sortFields;\n      let sortBadge = onlySortRules?.length > 0 ? onlySortRules?.length : null;\n\n      for (let b of sortButtons) {\n         $$(b).define(\"badge\", sortBadge);\n         $$(b).refresh();\n      }\n\n      var searchFields = document.getElementsByClassName(\n         `abGlobalSearchField${this.settings.dataviewID}`\n      );\n\n      const searchText = dc.settings.objectWorkspace.searchText;\n      if (searchText != null) {\n         for (let s of searchFields) {\n            var activeElement = document.activeElement;\n            if (\n               activeElement?.attributes?.datacollection?.value ==\n                  this.settings.dataviewID &&\n               activeElement == s.getElementsByTagName(\"input\")[0]\n            ) {\n               // skip the already selected input\n            } else {\n               $$(s).setValue(searchText);\n            }\n         }\n      }\n   }\n\n   detatch() {\n      this.filterHelper.removeListener(\"filter.data\", this._handler_filterData);\n      // this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n}\n","import ABViewDataFilterCore from \"../../core/views/ABViewDataFilterCore\";\nimport ABViewDataFilterComponent from \"./viewComponent/ABViewDataFilterComponent\";\n\nexport default class ABViewDataFilter extends ABViewDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataFilterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","const ABViewDataviewCore = require(\"../../core/views/ABViewDataviewCore\");\nconst ABViewDataviewComponent = require(\"./viewComponent/ABViewDataviewComponent\");\n\nconst ABViewDataviewDefaults = ABViewDataviewCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDataview extends ABViewDataviewCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.detailsPage =\n         this.settings.detailsPage ?? ABViewDataviewDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ?? ABViewDataviewDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ?? ABViewDataviewDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ?? ABViewDataviewDefaults.editTab;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDataviewComponent(this);\n   }\n};\n","const ABViewDetailCore = require(\"../../core/views/ABViewDetailCore\");\nconst ABViewDetailComponent = require(\"./viewComponent/ABViewDetailComponent\");\n\nmodule.exports = class ABViewDetail extends ABViewDetailCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDetailComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewDetailCheckboxCore = require(\"../../core/views/ABViewDetailCheckboxCore\");\nconst ABViewDetailCheckboxComponent = require(\"./viewComponent/ABViewDetailCheckboxComponent\");\n\nmodule.exports = class ABViewDetailCheckbox extends ABViewDetailCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCheckboxComponent(this);\n   }\n};\n","const ABViewDetailConnectCore = require(\"../../core/views/ABViewDetailConnectCore\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\n\nconst ABViewDetailConnectComponent = require(\"./viewComponent/ABViewDetailConnectComponent\");\n\nmodule.exports = class ABViewDetailConnect extends ABViewDetailConnectCore {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n      this.addPageTool.fromSettings(this.settings);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n};\n","const ABViewDetailCustomCore = require(\"../../core/views/ABViewDetailCustomCore\");\nconst ABViewDetailCustomComponent = require(\"./viewComponent/ABViewDetailCustomComponent\");\n\nmodule.exports = class ABViewDetailCustom extends ABViewDetailCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCustomComponent(this);\n   }\n};\n","const ABViewDetailImageCore = require(\"../../core/views/ABViewDetailImageCore\");\nconst ABViewDetailImageComponent = require(\"./viewComponent/ABViewDetailImageComponent\");\n\nmodule.exports = class ABViewDetailImage extends ABViewDetailImageCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailImageComponent(this);\n   }\n};\n","const ABViewDetailItemCore = require(\"../../core/views/ABViewDetailItemCore\");\nconst ABViewDetailItemComponent = require(\"./viewComponent/ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailItem extends ABViewDetailItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailItemComponent(this);\n   }\n};\n","const ABViewDetailTextCore = require(\"../../core/views/ABViewDetailTextCore\");\nconst ABViewDetailTextComponent = require(\"./viewComponent/ABViewDetailTextComponent\");\n\nmodule.exports = class ABViewDetailText extends ABViewDetailTextCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTextComponent(this);\n   }\n};\n","const ABViewDetailTreeCore = require(\"../../core/views/ABViewDetailTreeCore\");\nconst ABViewDetailTreeComponent = require(\"./viewComponent/ABViewDetailTreeComponent\");\n\nmodule.exports = class ABViewDetailTree extends ABViewDetailTreeCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTreeComponent(this);\n   }\n};\n","const ABViewDocxBuilderCore = require(\"../../core/views/ABViewDocxBuilderCore\");\nconst ABViewDocxBuilderComponent = require(\"./viewComponent/ABViewDocxBuilderComponent\");\n\nmodule.exports = class ABViewDocxBuilder extends ABViewDocxBuilderCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDocxBuilderComponent(this);\n   }\n\n   letUserDownload(blob, filename) {\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click();\n      a.remove(); //afterwards we remove the element again\n\n      window.URL.revokeObjectURL(url);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollections || this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.filename) {\n         this.warningsMessage(\"is missing a DOCX template file\");\n      } else {\n         // TODO: should we check for the existance of the file?\n         // this isn't currently an async friendly fn, so how?\n         // let url = this.downloadUrl();\n      }\n   }\n};\n","const ABViewFormCore = require(\"../../core/views/ABViewFormCore\");\nconst ABViewFormComponent = require(\"./viewComponent/ABViewFormComponent\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\nconst ABViewFormCustom = require(\"./ABViewFormCustom\");\nconst ABViewFormConnect = require(\"./ABViewFormConnect\");\nconst ABViewFormDatepicker = require(\"./ABViewFormDatepicker\");\nconst ABViewFormSelectMultiple = require(\"./ABViewFormSelectMultiple\");\nconst ABViewFormTextbox = require(\"./ABViewFormTextbox\");\nconst ABViewFormJson = require(\"./ABViewFormJson\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\n// const ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n// const ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\n// let PopupRecordRule = null;\n// let PopupSubmitRule = null;\n\n////\n//// LEFT OFF HERE: Review and Refactor\n////\nconst ABViewFormPropertyComponentDefaults = ABViewFormCore.defaultValues();\n\nmodule.exports = class ABViewForm extends ABViewFormCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      this._callbacks = {\n         onBeforeSaveData: () => true,\n      };\n   }\n\n   superComponent() {\n      if (this._superComponent == null)\n         this._superComponent = super.component();\n\n      return this._superComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormComponent(this);\n   }\n\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABViewFormButton.newInstance(this.application, this);\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views((v) => v.id != defaultButton.id);\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   /**\n    * @method getFormValues\n    *\n    * @param {webix form} formView\n    * @param {ABObject} obj\n    * @param {ABDatacollection} dc\n    * @param {ABDatacollection} dcLink [optional]\n    */\n   getFormValues(formView, obj, dc, dcLink) {\n      // get the fields that are on this form\n      const visibleFields = [\"id\"]; // we always want the id so we can udpate records\n      formView.getValues(function (obj) {\n         visibleFields.push(obj.config.name);\n      });\n\n      // only get data passed from form\n      const allVals = formView.getValues();\n      const formVals = {};\n      visibleFields.forEach((val) => {\n         formVals[val] = allVals[val];\n      });\n\n      // get custom values\n      this.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            comp instanceof ABViewFormConnect ||\n            comp instanceof ABViewFormDatepicker ||\n            comp instanceof ABViewFormSelectMultiple ||\n            (comp instanceof ABViewFormJson && comp.settings.type == \"filter\")\n      ).forEach((f) => {\n         const vComponent = this.viewComponents[f.id];\n         if (vComponent == null) return;\n\n         const field = f.field();\n         if (field) {\n            const getValue = vComponent.getValue ?? vComponent.logic.getValue;\n            if (getValue)\n               formVals[field.columnName] = getValue.call(vComponent, formVals);\n         }\n      });\n\n      // remove connected fields if they were not on the form and they are present in the formVals because it is a datacollection\n      obj.connectFields().forEach((f) => {\n         if (\n            visibleFields.indexOf(f.columnName) == -1 &&\n            formVals[f.columnName]\n         ) {\n            delete formVals[f.columnName];\n            delete formVals[f.relationName()];\n         }\n      });\n\n      // clear undefined values or empty arrays\n      for (const prop in formVals) {\n         if (formVals[prop] == null || formVals[prop].length == 0)\n            formVals[prop] = \"\";\n      }\n\n      // Add parent's data collection cursor when a connect field does not show\n      let linkValues;\n\n      if (dcLink) {\n         linkValues = dcLink.getCursor();\n      }\n\n      if (linkValues) {\n         const objectLink = dcLink.datasource;\n\n         const connectFields = obj.connectFields();\n         connectFields.forEach((f) => {\n            const formFieldCom = this.fieldComponents(\n               (fComp) => fComp?.field?.()?.id === f?.id\n            );\n\n            if (\n               objectLink.id == f.settings.linkObject &&\n               formFieldCom.length < 1 && // check field does not show\n               formVals[f.columnName] === undefined\n            ) {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               formVals[f.columnName] = {};\n               formVals[f.columnName][linkColName] =\n                  linkValues[linkColName] ?? linkValues.id;\n            }\n         });\n      }\n\n      // NOTE: need to pull data of current cursor to calculate Calculate & Formula fields\n      // .formVals variable does not include data that does not display in the Form widget\n      const cursorFormVals = Object.assign(dc.getCursor() ?? {}, formVals);\n\n      // Set value of calculate or formula fields to use in record rule\n      obj.fields((f) => f.key == \"calculate\" || f.key == \"formula\").forEach(\n         (f) => {\n            if (formVals[f.columnName] == null) {\n               let reCalculate = true;\n\n               // WORKAROUND: If \"Formula\" field will have Filter conditions,\n               // Then it is not able to re-calculate on client side\n               // because relational data is not full data so FilterComplex will not have data to check\n               if (f.key == \"formula\" && f.settings?.where?.rules?.length > 0) {\n                  reCalculate = false;\n               }\n\n               formVals[f.columnName] = f.format(cursorFormVals, reCalculate);\n            }\n         }\n      );\n\n      if (allVals.translations?.length > 0)\n         formVals.translations = allVals.translations;\n\n      return formVals;\n   }\n\n   /**\n    * @method validateData\n    *\n    * @param {webix form} formView\n    * @param {ABObject} object\n    * @param {object} formVals\n    *\n    * @return {boolean} isValid\n    */\n   validateData($formView, object, formVals) {\n      let list = \"\";\n\n      // validate required fields\n      const requiredFields = this.fieldComponents(\n         (fComp) =>\n            fComp?.field?.().settings?.required == true ||\n            fComp?.settings?.required == true\n      ).map((fComp) => fComp.field());\n\n      // validate data\n      const validator = object.isValidData(formVals);\n      let isValid = validator.pass();\n\n      // $$($formView).validate();\n      $formView.validate();\n      /**\n       * helper function to fix the webix ui after adding an validation error\n       * message.\n       * @param {string} col - field.columnName\n       */\n      const fixInvalidMessageUI = (col) => {\n         const $forminput = $formView.elements[col];\n         if (!$forminput) return;\n         // Y position\n         const height = $forminput.$height;\n         if (height < 56) {\n            $forminput.define(\"height\", 60);\n            $forminput.resize();\n         }\n\n         // X position\n         const domInvalidMessage = $forminput.$view.getElementsByClassName(\n            \"webix_inp_bottom_label\"\n         )[0];\n         if (!domInvalidMessage?.style[\"margin-left\"]) {\n            domInvalidMessage.style.marginLeft = `${\n               this.settings.labelWidth ??\n               ABViewFormPropertyComponentDefaults.labelWidth\n            }px`;\n         }\n      };\n\n      // Display required messages\n      requiredFields.forEach((f) => {\n         if (!f) return;\n\n         const fieldVal = formVals[f.columnName];\n         if (fieldVal == \"\" || fieldVal == null || fieldVal.length < 1) {\n            $formView.markInvalid(f.columnName, L(\"This is a required field.\"));\n            list += `<li>${L(\"Missing Required Field\")} ${f.columnName}</li>`;\n            isValid = false;\n\n            // Fix position of invalid message\n            fixInvalidMessageUI(f.columnName);\n         }\n      });\n\n      // if data is invalid\n      if (!isValid) {\n         const saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // error message\n         if (validator?.errors?.length) {\n            validator.errors.forEach((err) => {\n               $formView.markInvalid(err.name, err.message);\n               list += `<li>${err.name}: ${err.message}</li>`;\n               fixInvalidMessageUI(err.name);\n            });\n\n            saveButton?.disable();\n         } else {\n            saveButton?.enable();\n         }\n      }\n      if (list) {\n         webix.alert({\n            type: \"alert-error\",\n            title: L(\"Problems Saving\"),\n            width: 400,\n            text: `<ul style='text-align:left'>${list}</ul>`,\n         });\n      }\n\n      return isValid;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   /**\n    * @method saveData\n    * save data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async saveData($formView) {\n      // call .onBeforeSaveData event\n      // if this function returns false, then it will not go on.\n      if (!this._callbacks?.onBeforeSaveData?.()) return;\n\n      $formView.clearValidation();\n\n      // get ABDatacollection\n      const dv = this.datacollection;\n      if (dv == null) return;\n\n      // get ABObject\n      const obj = dv.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dv.model;\n      if (model == null) return;\n\n      // get update data\n      const formVals = this.getFormValues(\n         $formView,\n         obj,\n         dv,\n         dv.datacollectionLink\n      );\n\n      // form ready function\n      const formReady = (newFormVals) => {\n         // clear cursor after saving.\n         if (dv) {\n            if (this.settings.clearOnSave) {\n               dv.setCursor(null);\n               $formView.clear();\n            } else {\n               if (newFormVals && newFormVals.id) dv.setCursor(newFormVals.id);\n            }\n         }\n\n         $formView.hideProgress?.();\n\n         // if there was saved data pass it up to the onSaveData callback\n         // if (newFormVals) this._logic.callbacks.onSaveData(newFormVals);\n         if (newFormVals) this.emit(\"saved\", newFormVals); // Q? is this the right upgrade?\n      };\n\n      const formError = (err) => {\n         const $saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // mark error\n         if (err) {\n            if (err.invalidAttributes) {\n               for (const attr in err.invalidAttributes) {\n                  let invalidAttrs = err.invalidAttributes[attr];\n                  if (invalidAttrs && invalidAttrs[0])\n                     invalidAttrs = invalidAttrs[0];\n\n                  $formView.markInvalid(attr, invalidAttrs.message);\n               }\n            } else if (err.sqlMessage) {\n               webix.message({\n                  text: err.sqlMessage,\n                  type: \"error\",\n               });\n            } else {\n               webix.message({\n                  text: L(\"System could not save your data\"),\n                  type: \"error\",\n               });\n               this.AB.notify.developer(err, {\n                  message: \"Could not save your data\",\n                  view: this.toObj(),\n               });\n            }\n         }\n\n         $saveButton?.enable();\n\n         $formView?.hideProgress?.();\n      };\n\n      // wait for our Record Rules to be ready before we continue.\n      await this.recordRulesReady();\n\n      // update value from the record rule (pre-update)\n      this.doRecordRulesPre(formVals);\n\n      // validate data\n      if (!this.validateData($formView, obj, formVals)) {\n         // console.warn(\"Data is invalid.\");\n         return;\n      }\n\n      // show progress icon\n      $formView.showProgress?.({ type: \"icon\" });\n\n      let newFormVals;\n      // {obj}\n      // The fully populated values returned back from service call\n      // We use this in our post processing Rules\n\n      try {\n         // is this an update or create?\n         if (formVals.id) {\n            newFormVals = await model.update(formVals.id, formVals);\n         } else {\n            newFormVals = await model.create(formVals);\n         }\n      } catch (err) {\n         formError(err.data);\n         throw err;\n      }\n\n      /*\n      // OLD CODE:\n      try {\n         await this.doRecordRules(newFormVals);\n         // make sure any updates from RecordRules get passed along here.\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return newFormVals;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n         // Question:  how do we respond to an error?\n         // ?? just keep going ??\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return;\n      }\n      */\n\n      try {\n         await this.doRecordRules(newFormVals);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      // make sure any updates from RecordRules get passed along here.\n      try {\n         this.doSubmitRules(newFormVals);\n      } catch (errs) {\n         this.AB.notify.developer(errs, {\n            message: \"Error processing Submit Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      formReady(newFormVals);\n      return newFormVals;\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               // topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      let childComponent = this.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ui.id)) {\n         $$(childComponent.ui.id).focus();\n      }\n   }\n\n   get viewComponents() {\n      const superComponent = this.superComponent();\n      return superComponent.viewComponents;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (this.settings.recordRules) {\n         // TODO: scan recordRules for warnings\n      }\n\n      if (this.settings.submitRules) {\n         // TODO: scan submitRules for warnings.\n      }\n   }\n};\n","const ABViewFormButtonCore = require(\"../../core/views/ABViewFormButtonCore\");\nconst ABViewFormButtonComponent = require(\"./viewComponent/ABViewFormButtonComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormButtonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormButtonComponent(this);\n   }\n};\n","const ABViewFormCheckboxCore = require(\"../../core/views/ABViewFormCheckboxCore\");\nconst ABViewFormCheckboxComponent = require(\"./viewComponent/ABViewFormCheckboxComponent\");\n\nmodule.exports = class ABViewFormCheckbox extends ABViewFormCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCheckboxComponent(this);\n   }\n};\n","const ABViewFormConnectCore = require(\"../../core/views/ABViewFormConnectCore\");\nconst ABViewFormConnectComponent = require(\"./viewComponent/ABViewFormConnectComponent\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\nconst ABViewPropertyEditPage =\n   require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\nconst ABViewFormConnectPropertyComponentDefaults =\n   ABViewFormConnectCore.defaultValues();\n\nmodule.exports = class ABViewFormConnect extends ABViewFormConnectCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      // NOTE: .objectWorkspace is a v1 setting\n      // if (\n      //    !this.settings.objectWorkspace ||\n      //    !this.settings.objectWorkspace.filterConditions\n      // ) {\n      //    this.AB.error(\"Error: filter conditions do not exist\", {\n      //       error: \"filterConditions do not exist\",\n      //       viewLocation: {\n      //          application: this.application.name,\n      //          id: this.id,\n      //          name: this.label,\n      //       },\n      //       view: this,\n      //    });\n      //    // manually place an empty filter\n      //    this.settings[\"objectWorkspace\"] = {};\n      //    this.settings[\"objectWorkspace\"][\"filterConditions\"] = { glue: \"and\" };\n      // }\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n      this.editPageTool.fromSettings(this.settings);\n   }\n\n   static get addPageProperty() {\n      return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   }\n\n   static get editPageProperty() {\n      return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n\n   get editPageTool() {\n      if (this.__editPageTool == null)\n         this.__editPageTool = new ABViewPropertyEditPage();\n\n      return this.__editPageTool;\n   }\n};\n","const ABViewFormCustomCore = require(\"../../core/views/ABViewFormCustomCore\");\nconst ABViewFormCustomComponent = require(\"./viewComponent/ABViewFormCustomComponent\");\n\nmodule.exports = class ABViewFormCustom extends ABViewFormCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCustomComponent(this);\n   }\n};\n","const ABViewFormDatepickerCore = require(\"../../core/views/ABViewFormDatepickerCore\");\nconst ABViewFormDatepickerComponent = require(\"./viewComponent/ABViewFormDatepickerComponent\");\n\nmodule.exports = class ABViewFormDatepicker extends ABViewFormDatepickerCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormDatepickerComponent(this);\n   }\n};\n","const ABViewFormItemCore = require(\"../../core/views/ABViewFormItemCore\");\nconst ABViewFormItemComponent = require(\"./viewComponent/ABViewFormItemComponent\");\n\nconst ABViewFormFieldPropertyComponentDefaults =\n   ABViewFormItemCore.defaultValues();\n\nmodule.exports = class ABViewFormItem extends ABViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static get componentUI() {\n      return ABViewFormItemComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormItemComponent(this);\n   }\n\n   /**\n    * @method parentFormUniqueID\n    * return a unique ID based upon the closest form object this component is on.\n    * @param {string} key  The basic id string we will try to make unique\n    * @return {string}\n    */\n   parentFormUniqueID(key) {\n      var form = this.parentFormComponent();\n      var uniqueInstanceID;\n      if (form) {\n         uniqueInstanceID = form.uniqueInstanceID;\n      } else {\n         uniqueInstanceID = webix.uid();\n      }\n\n      return key + uniqueInstanceID;\n   }\n};\n","const ABViewFormJsonCore = require(\"../../core/views/ABViewFormJsonCore\");\nconst ABViewFormJsonComponent = require(\"./viewComponent/ABViewFormJsonComponent\");\n\nmodule.exports = class ABViewFormJson extends ABViewFormJsonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormJsonComponent(this);\n   }\n};\n","const ABViewFormNumberCore = require(\"../../core/views/ABViewFormNumberCore\");\nconst ABViewFormNumberComponent = require(\"./viewComponent/ABViewFormNumberComponent\");\n\nmodule.exports = class ABViewFormNumber extends ABViewFormNumberCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormNumberComponent(this);\n   }\n};\n","const ABViewFormReadonlyCore = require(\"../../core/views/ABViewFormReadonlyCore\");\nconst ABViewFormReadonlyComponent = require(\"./viewComponent/ABViewFormReadonlyComponent\");\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormReadonlyCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormReadonlyComponent(this);\n   }\n};\n","const ABViewFormSelectMultipleCore = require(\"../../core/views/ABViewFormSelectMultipleCore\");\nconst ABViewFormSelectMultipleComponent = require(\"./viewComponent/ABViewFormSelectMultipleComponent\");\n\nmodule.exports = class ABViewFormSelectMultiple extends (\n   ABViewFormSelectMultipleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectMultipleComponent(this);\n   }\n};\n","const ABViewFormSelectSingleCore = require(\"../../core/views/ABViewFormSelectSingleCore\");\nconst ABViewFormSelectSingleComponent = require(\"./viewComponent/ABViewFormSelectSingleComponent\");\n\nmodule.exports = class ABViewFormSelectSingle extends (\n   ABViewFormSelectSingleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectSingleComponent(this);\n   }\n};\n","const ABViewFormTextboxCore = require(\"../../core/views/ABViewFormTextboxCore\");\nconst ABViewFormTextboxComponent = require(\"./viewComponent/ABViewFormTextboxComponent\");\n\nmodule.exports = class ABViewFormTextbox extends ABViewFormTextboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTextboxComponent(this);\n   }\n};\n","const ABViewFormTreeCore = require(\"../../core/views/ABViewFormTreeCore\");\nconst ABViewFormTreeComponent = require(\"./viewComponent/ABViewFormTreeComponent\");\n\nmodule.exports = class ABViewFormTree extends ABViewFormTreeCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTreeComponent(this);\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewGanttComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGantt_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n               gantt: \"\",\n            },\n            ids\n         )\n      );\n\n      this._tempDC = null;\n      // {ABDataCollection}\n      // A link to a DC that was passed in.  NOTE: this is only for\n      // the temp DCs created in the AppBuilder Designer and passed\n      // in.  Normal DCs are handled by the default CurrentDatacollection\n      // methods.\n\n      this.TitleField = null;\n      this.StartDateField = null;\n      this.EndDateField = null;\n      this.DurationField = null;\n      this.ProgressField = null;\n      this.NotesField = null;\n\n      this.originalStartDate = null;\n      this.originalEndDate = null;\n\n      this.pendingAdds = {};\n      // {Promise}  /* id : {Promise} */\n      // In order to prevent a race condition where multiple adds can be\n      // generated on the same item, we catch the repeats and just return\n      // the same data for each.\n\n      const idGantt = this.ids.gantt;\n\n      this.ganttElement = {\n         isExistsTask: (taskId) => {\n            const localService = $$(idGantt).getService(\"local\");\n            if (!localService) return false;\n\n            const tasksData = localService.tasks();\n            if (!tasksData || !tasksData.exists) return false;\n\n            return tasksData.exists(taskId);\n         },\n         removeTask: (taskId) => {\n            if (!this.ganttElement.isExistsTask(taskId)) return;\n\n            const opsService = $$(idGantt).getService(\"operations\");\n            if (!opsService) return;\n\n            return opsService.removeTask(taskId);\n         },\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const { YEAR_SCALE, MONTH_SCALE, DAY_SCALE } = this.getConstantScales;\n      const _ui = super.ui([\n         {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"menu\",\n                  id: ids.menu,\n                  layout: \"x\",\n                  width: 300,\n                  data: [\n                     {\n                        id: \"day\",\n                        value: this.label(\"Day\"),\n                     },\n                     {\n                        id: \"week\",\n                        value: this.label(\"Week\"),\n                     },\n                     {\n                        id: \"month\",\n                        value: this.label(\"Month\"),\n                     },\n                     {\n                        id: \"year\",\n                        value: this.label(\"Year\"),\n                     },\n                  ],\n                  on: {\n                     onItemClick: (id /* , e, node */) => {\n                        this.setScale(id);\n                     },\n                  },\n               },\n            ],\n         },\n         {\n            id: ids.gantt,\n            view: \"gantt\",\n            scales: [YEAR_SCALE, MONTH_SCALE, DAY_SCALE],\n            override: new Map([\n               [\n                  gantt.services.Backend,\n                  // global webix gantt object\n                  class MyBackend extends gantt.services.Backend {\n                     async tasks() {\n                        const DC = self.CurrentDatacollection;\n                        if (!DC) return [];\n\n                        // if (DC.dataStatus != DC.dataStatusFlag.initialized) {\n                        //    await DC.loadData().catch((err) => {\n                        //       console.error(err);\n                        //    });\n                        // }\n                        return (DC.getData() || []).map((d, indx) =>\n                           self.convertFormat(d, indx)\n                        );\n                     }\n                     links() {\n                        return Promise.resolve([]);\n                     }\n                     async addTask(obj, index, parent) {\n                        if (!self.pendingAdds[obj.id]) {\n                           self.pendingAdds[obj.id] = self.taskAdd(obj);\n                        }\n                        const newTask = await self.pendingAdds[obj.id];\n                        delete self.pendingAdds[obj.id];\n                        return {\n                           id: (newTask || {}).id,\n                        };\n                     }\n                     async updateTask(id, obj) {\n                        return await self.taskUpdate(obj.id, obj);\n                     }\n                     async removeTask(id) {\n                        return await self.taskRemove(id);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // #HACK!: as of webix v.8.1.1 there is a visual glitch of the Gantt\n      // object if you replace a gantt widget with a new definition (like in\n      // the ABDesigner you can switch from Gantt1 to Gantt2 in the object\n      // workspace).  In that one case, the menu would disappear even though\n      // the data is present.  So this makes sure the menu is shown\n      const $menu = $$(this.ids.menu);\n\n      if ($menu) $menu.showItem(\"day\");\n   }\n\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return super.CurrentDatacollection || this._tempDC;\n   }\n\n   /**\n    * @method convertFormat()\n    * Convert an ABObject's row value into a gantt task data format.\n    * @param {obj} row\n    *        The current row of data returned from an ABObject.\n    * @param {int} index\n    *        The order of this task.\n    * @return {obj}\n    *         A key=>value hash corresponding to the gantt task that\n    *         represents this row of data.\n    */\n   convertFormat(row = {}, index = null) {\n      const data = {};\n      const StartDateField = this.StartDateField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (!StartDateField || (!EndDateField && !DurationField)) return data;\n\n      const currDate = new Date();\n\n      data[\"id\"] = row.id || row.uuid;\n      data[\"type\"] = \"task\";\n      data[\"parent\"] = 0;\n      data[\"open\"] = true;\n\n      // define label\n      const TitleField = this.TitleField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n\n      data[\"text\"] = TitleField\n         ? row[TitleField.columnName] || \"\"\n         : this.CurrentObject.displayData(row);\n      data[\"start_date\"] = row[StartDateField.columnName] || currDate;\n      data[\"progress\"] = ProgressField\n         ? parseFloat(row[ProgressField.columnName] || 0)\n         : 0;\n\n      if (NotesField) data[\"details\"] = row[NotesField.columnName] || \"\";\n\n      if (EndDateField)\n         data[\"end_date\"] = row[EndDateField.columnName] || currDate;\n\n      if (DurationField) data[\"duration\"] = row[DurationField.columnName] || 1;\n\n      // Default values\n      if (!data[\"end_date\"] && !data[\"duration\"]) {\n         data[\"end_date\"] = currDate;\n         data[\"duration\"] = 1;\n      }\n\n      if (index) data[\"order\"] = index;\n\n      return data;\n   }\n\n   /**\n    * @method convertValues()\n    * Convert a Gantt task into a set of values for our ABObject.\n    * @param {obj} task\n    *        The current gantt task data.\n    * @return {obj}\n    *         A key=>value hash corresponding to the ABObject that\n    *         is tied to this gantt.\n    */\n   convertValues(task) {\n      const patch = {};\n      const TitleField = this.TitleField;\n      const StartDateField = this.StartDateField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (TitleField) patch[TitleField.columnName] = task[\"text\"] || \"\";\n\n      if (StartDateField) patch[StartDateField.columnName] = task[\"start_date\"];\n\n      if (ProgressField)\n         patch[ProgressField.columnName] = parseFloat(task[\"progress\"] || 0);\n\n      if (NotesField) patch[NotesField.columnName] = task[\"details\"];\n\n      if (EndDateField) patch[EndDateField.columnName] = task[\"end_date\"];\n\n      if (DurationField) patch[DurationField.columnName] = task[\"duration\"];\n\n      return patch;\n   }\n\n   /**\n    * @method objectLoad\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      // const baseView = this.view;\n      const settings = this.settings;\n\n      if (object) {\n         this.TitleField = object.fieldByID(settings.titleFieldID);\n         this.StartDateField = object.fieldByID(settings.startDateFieldID);\n         this.EndDateField = object.fieldByID(settings.endDateFieldID);\n         this.DurationField = object.fieldByID(settings.durationFieldID);\n         this.ProgressField = object.fieldByID(settings.progressFieldID);\n         this.NotesField = object.fieldByID(settings.notesFieldID);\n      }\n   }\n\n   /**\n    * @method datacollectionLoad\n    * @param {ABDatacollection} datacollection\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const dc = this.CurrentDatacollection || datacollection;\n      if (!dc) return;\n\n      // NOTE: this can happen in the ABDesigner object workspace.\n      // we send in a temp DC with no .id\n      this._tempDC = datacollection;\n\n      // NOTE: keep .objectLoad() before any .initData() is called.\n      this.objectLoad(dc.datasource);\n\n      const eventNames = [\"create\", \"update\", \"delete\", \"initializedData\"];\n\n      eventNames.forEach((e) => {\n         if (\n            e in dc._events &&\n            this.__events.findIndex((eo) => eo.eventName === e) !== -1\n         )\n            return;\n\n         switch (e) {\n            case \"delete\":\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: \"delete\",\n                  listener: (taskId) => {\n                     // remove this task in gantt\n                     if (this.ganttElement.isExistsTask(taskId))\n                        this.ganttElement.removeTask(taskId);\n                  },\n               });\n\n               break;\n\n            default:\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: e,\n                  listener: () => {\n                     this.initData();\n                  },\n               });\n\n               break;\n         }\n      });\n   }\n\n   /**\n    * @function hide()\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   initData() {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const dataService = ganttElem.getService(\"local\");\n      if (!dataService) return;\n\n      const dcTasks = dataService.tasks();\n      if (!dcTasks) return;\n\n      // gantt v 8.1.1\n      // Note: there is a race condition that can happen here.\n      // dataService.tasks() calls the MyBackend.tasks() above which\n      // returns a Promise.\n      // when you call dcTasks.clearAll() before the promise\n      // is resolved, the gantt internally throws an error.\n      //\n      // So give webix some time to internally complete it's process\n      // before we do .clearAll();\n      setTimeout(() => {\n         dcTasks.clearAll();\n\n         const DC = this.CurrentDatacollection;\n         const gantt_data = {\n            data: DC\n               ? (DC.getData() || []).map((d, index) =>\n                    this.convertFormat(d, index)\n                 )\n               : [],\n         };\n\n         // check required fields before parse\n         if (this.StartDateField && (this.EndDateField || this.DurationField)) {\n            dcTasks.parse(gantt_data);\n         }\n\n         // Keep original start and end dates for calculate scale to display\n         const currScale = dataService.getScales();\n\n         this.originalStartDate = currScale.start;\n         this.originalEndDate = currScale.end;\n\n         this.sort();\n      }, 10);\n   }\n\n   get getConstantScales() {\n      const DAY_SCALE = { unit: \"day\", format: \"%d\" },\n         WEEK_SCALE = {\n            unit: \"week\",\n            format: (start) => {\n               const parser = webix.Date.dateToStr(\"%d %M\");\n               const wstart = webix.Date.weekStart(start);\n               const wend = webix.Date.add(\n                  webix.Date.add(wstart, 1, \"week\", true),\n                  -1,\n                  \"day\",\n                  true\n               );\n\n               return parser(wstart) + \" - \" + parser(wend);\n            },\n         },\n         MONTH_SCALE = { unit: \"month\", format: \"%F\" },\n         YEAR_SCALE = { unit: \"year\", format: \"%Y\" };\n\n      return {\n         DAY_SCALE,\n         WEEK_SCALE,\n         MONTH_SCALE,\n         YEAR_SCALE,\n      };\n   }\n\n   setScale(scale) {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const ganttData = ganttElem.getService(\"local\");\n      if (!ganttData) return;\n\n      const newScales = [];\n      const { YEAR_SCALE, MONTH_SCALE, WEEK_SCALE, DAY_SCALE } =\n         this.getConstantScales;\n\n      switch (scale) {\n         case \"day\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, DAY_SCALE);\n            break;\n\n         case \"week\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, WEEK_SCALE);\n            break;\n\n         case \"month\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE);\n            break;\n\n         case \"year\":\n            newScales.push(YEAR_SCALE);\n            break;\n      }\n\n      const abWebix = this.AB.Webix;\n      const currScale = ganttElem.getService(\"local\").getScales(),\n         start = abWebix.Date.add(this.originalStartDate, -1, scale, true),\n         end = abWebix.Date.add(this.originalEndDate, 1, scale, true);\n\n      ganttData.setScales(\n         start,\n         end,\n         currScale.precise,\n         currScale.cellWidth,\n         currScale.cellHeight,\n         newScales\n      );\n      ganttElem.$app.refresh();\n      ganttElem.getState().$batch({ top: 0, left: 0 });\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   onShow() {\n      super.onShow();\n      this.datacollectionLoad(this.datacollection);\n\n      $$(this.ids.component)?.show();\n   }\n\n   sort() {\n      // TODO: sorting;\n      return;\n      // const gantt = $$(ids.gantt).getGantt();\n      // if (!gantt) return;\n\n      // // default sort\n      // const MAX_date = new Date(8640000000000000);\n      // gantt.sort(function(a, b) {\n      //    const aStartDate = a[\"start_date\"],\n      //       aEndDate = a[\"end_date\"],\n      //       aDuration = a[\"duration\"] || 1,\n      //       bStartDate = b[\"start_date\"],\n      //       bEndDate = b[\"end_date\"],\n      //       bDuration = b[\"duration\"] || 1;\n\n      //    // if no start date, then be a last item\n      //    if (\n      //       a[this.StartDateField.columnName] == null ||\n      //       b[this.StartDateField.columnName] == null\n      //    ) {\n      //       return (\n      //          (a[this.StartDateField.columnName] || MAX_date) -\n      //          (b[this.StartDateField.columnName] || MAX_date)\n      //       );\n      //    } else if (aStartDate != bStartDate) {\n      //       return aStartDate - bStartDate;\n      //    } else if (aEndDate != bEndDate) {\n      //       return aEndDate - bEndDate;\n      //    } else if (aDuration != bDuration) {\n      //       return bDuration - aDuration;\n      //    }\n      // }, false);\n   }\n\n   async taskAdd(taskData) {\n      const patch = this.convertValues(taskData);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend addTask() method\n         // On Webix documents, the method addTask() have to return the added object so we have to pass the data we add through this method.\n         return await this.CurrentObject?.model().create(patch);\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Saving Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to save this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskAdd(): Error Saving Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskRemove(rowId) {\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend removeTask() method\n         // On Webix documents, the method removeTask() return {} (an empty object) so we return {} in removeTask() instead.\n         await this.CurrentObject.model().delete(rowId);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Removing Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to remove this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskRemove(): Error Removing Item\",\n            rowId,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskUpdate(rowId, updatedTask) {\n      const patch = this.convertValues(updatedTask);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend updateTask() method\n         // On Webix documents, the method updateTask() return {} (an empty object) so we return {} in updateTask() instead.\n         await this.CurrentObject.model().update(rowId, patch);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Updating Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to update this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskUpdate(): Error Updating Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n}\n","import ABViewGanttComponent from \"./viewComponent/ABViewGanttComponent\";\n\nconst ABViewGanttCore = require(\"../../core/views/ABViewGanttCore\");\n\nexport default class ABViewGantt extends ABViewGanttCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGanttComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (!this.settings.startDateFieldID) {\n            this.warningsMessage(`doesn't have a start date field set.`);\n         } else {\n            let field = DC.datasource?.fieldByID(\n               this.settings.startDateFieldID\n            );\n            if (!field) {\n               this.warningsMessage(\n                  `can't lookup field: startDate[${this.settings.startDateFieldID}]`\n               );\n            }\n         }\n      }\n   }\n}\n","/*\n * ABViewGridPopupExport.js\n * Manage the Popup that allows you to export data into one of our supported\n * formats.\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nexport default class ABWorkObjectPopupExport extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupExport\";\n\n      super({\n         popupExport: `${idBase}_popupExport`,\n         list: `${idBase}_popupExport_list`,\n      });\n\n      this._currentObject = null;\n      // {ABObject}\n      // The ABObject of the data we will export.  We can find out the fields\n      // from the object.\n\n      this._dataCollection = null;\n      // {ABDatacCollection}\n      // The ABDataCollection that contains the data we are going to export.\n\n      this._grid = null;\n      // {webix.grid}\n      // the current webix.grid that contains the data we are going to export.\n\n      this._filename = null;\n      // {string}\n      // the name of the desired output file.\n\n      this._hiddenFields = [];\n      // {array}\n      // An array of ABField.columnName(s) that we are not wanting to export\n   }\n\n   ui() {\n      var self = this;\n\n      // webix UI definition:\n      return {\n         view: \"popup\",\n         id: this.ids.popupExport,\n         width: 160,\n         height: 0, //150,\n         select: false,\n         hidden: true,\n         body: {\n            id: this.ids.list,\n            view: \"list\",\n            autoheight: true,\n            data: [\n               { name: \"CSV\", icon: \"file-excel-o\" },\n               { name: \"Excel\", icon: \"file-excel-o\" },\n               { name: \"PDF\", icon: \"file-pdf-o\" },\n               { name: \"PNG\", icon: \"file-image-o\" },\n            ],\n            template:\n               \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n            on: {\n               onItemClick: function (id /*, e, node */) {\n                  var component = this.getItem(id);\n                  self.export(component.name);\n               },\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n      webix.ui(this.ui());\n      $$(this.ids.popupExport).resize();\n   }\n\n   // internal business logic\n\n   /**\n    * @method dataCollectionLoad()\n    * the current ABDataCollection we are working with.\n    * @param {ABDataCollection} dc\n    */\n   dataCollectionLoad(dc) {\n      this._dataCollection = dc;\n   }\n\n   /**\n    * @method objectLoad()\n    * The current ABObject we are working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method setHiddenFields\n    * Register Fields we don't want exported in our data.\n    * @param {array} fields\n    *        An array of ABField.columnName(s) to exclude from our export.\n    */\n   setHiddenFields(fields = []) {\n      this._hiddenFields = fields ?? [];\n   }\n\n   /**\n    * @method setFilename()\n    * Register the name of the file we want our data to export as.\n    * @param {string} filename\n    */\n   setFilename(filename) {\n      this._filename = filename;\n   }\n\n   /**\n    * @method setGridComponent()\n    * Register the webix.grid that currently stores the data we are\n    * exporting.\n    * @param {webix.grid} $grid\n    */\n   setGridComponent($grid) {\n      this._grid = $grid;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    */\n   show($view) {\n      $$(this.ids.popupExport).show($view);\n   }\n\n   async export(name) {\n      let fnExport;\n\n      let columns = {};\n\n      let dc = this._dataCollection;\n      let _currentObject = this._currentObject;\n      let _grid = this._grid;\n      let _filename = this._filename;\n\n      if (\n         dc &&\n         (!dc.settings.loadAll || dc.dataStatus == dc.dataStatusFlag.notInitial)\n      ) {\n         // Load all data\n         await dc.reloadData(0, null);\n         dc.settings.loadAll = true;\n      }\n\n      // client filter data\n      // template of report\n      if (_currentObject) {\n         _currentObject.fields().forEach((f) => {\n            // hidden fields\n            if (this._hiddenFields.indexOf(f.columnName) > -1) return;\n\n            columns[f.columnName] = {\n               template: (rowData) => {\n                  return f.format(rowData);\n               },\n            };\n         });\n      }\n\n      // If there are checked items, then export them only\n      // Otherwise export all items\n      const noCheckedRow = _grid.data.find({appbuilder_select_item: 1}).length < 1;\n      const filterRow = (row) => noCheckedRow || row?.appbuilder_select_item == 1;\n\n      switch (name) {\n         case \"CSV\":\n            webix.csv.delimiter.cols = \",\";\n\n            fnExport = webix.toCSV(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filter: filterRow\n            });\n            break;\n         case \"Excel\":\n            fnExport = webix.toExcel(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               name:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PDF\":\n            fnExport = webix.toPDF(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               filterHTML: true,\n               filter: filterRow\n            });\n            break;\n         case \"PNG\":\n            fnExport = webix.toPNG(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               // filter: NOT SUPPORT\n            });\n            break;\n      }\n\n      try {\n         await fnExport;\n         $$(this.ids.popupExport).hide();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: `ABViewGridPopupExport:export(): System could not export: ${name}`,\n            exportType: name,\n            columns,\n            fileName: _filename,\n         });\n      }\n   }\n\n   // this.dataCollectionLoad = _logic.dataCollectionLoad;\n   // this.objectLoad = _logic.objectLoad;\n   // this.setGridComponent = _logic.setGridComponent;\n   // this.setFilename = _logic.setFilename;\n   // this.setHiddenFields = _logic.setHiddenFields;\n   // this.show = _logic.show;\n}\n","/*\n * ABViewGridPopupMassUpdate\n *\n * An ABViewGrid can offer a mass update feature.  This is a ui component\n * to help with the processing of the update.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\nimport RowUpdater from \"../RowUpdater\";\n\nvar L = null;\n\nexport default class ABViewGridPopupMassUpdate extends ClassUI {\n   //.extend(idBase, function(App) {\n\n   constructor(ABViewGridComponent, idBase) {\n      idBase = idBase || \"abviewgridpopupMassUpdate\";\n\n      super({\n         component: `${idBase}_popupMassUpdate`,\n         submit: `${idBase}_submitMassUpdate`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // Which ABObject are we currently working with.\n\n      this.GridComponent = ABViewGridComponent;\n      // {ABViewGridComponent}\n      // The current ABViewGridComponent we are working with.\n\n      this.AB = ABViewGridComponent.AB;\n      // {ABFactory}\n\n      this.rowUpdater = new RowUpdater(idBase, this.AB);\n      // {RowUpdater}\n      // An instance of our RowUpdater form builder.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         view: \"popup\",\n         id: ids.component,\n         // modal: true,\n         body: {\n            width: 500,\n            rows: [\n               // Update panel\n               this.rowUpdater.ui(),\n               { height: 15 },\n               {\n                  cols: [\n                     {},\n                     {\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        width: 100,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     {\n                        id: ids.submit,\n                        css: \"webix_primary\",\n                        view: \"button\",\n                        label: L(\"Update\"),\n                        type: \"form\",\n                        width: 120,\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      webix.ui(this.ui());\n      this.rowUpdater.init(AB);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method hide()\n    * Hide the popup.\n    */\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object & datatable\n    * @param {ABObject} object\n    *        the currently selected object.\n    * @param {webix.datatable} dataTable\n    *        the dataTable we need to run the mass update on...trust me this\n    *        will be good\n    */\n   objectLoad(object, dataTable) {\n      this.CurrentObject = object;\n      this.rowUpdater.objectLoad(object);\n      this.DataTable = dataTable;\n   }\n\n   onShow() {}\n\n   /**\n    * @method show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {json} options\n    *        Additional webix options related to the .show() method.\n    */\n   show($view, options = null) {\n      if (options != null) {\n         $$(this.ids.component).show($view, options);\n      } else {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   /**\n    * @method submit()\n    * Process the submit action by getting the values to change and then\n    * running a batchUpdate() on the items in our datatable that were selected.\n    */\n   submit() {\n      // Update values to records\n      let update_button = $$(this.ids.submit),\n         update_items = this.rowUpdater.getValue() || [];\n\n      update_button.disable();\n\n      if (!this.GridComponent) {\n         // TODO : Message\n         // console.log(\"no data collection to update\");\n         update_button.enable();\n         return;\n      } else if (update_items.length < 1) {\n         // TODO : Message\n         update_button.enable();\n         return;\n      }\n\n      let $datatable = this.GridComponent.getDataTable(); // $$(DataTable.ui.id);\n      let updatedRowIds = [];\n      $datatable.data.each(function (row) {\n         if (\n            row &&\n            row.hasOwnProperty(\"appbuilder_select_item\") &&\n            row.appbuilder_select_item == 1\n         ) {\n            updatedRowIds.push(row.id);\n         }\n      });\n\n      let vals = {};\n      update_items.forEach((item) => {\n         let fieldInfo = this.CurrentObject.fieldByID(item.fieldId);\n         if (!fieldInfo) return;\n\n         vals[fieldInfo.columnName] = item.value;\n      });\n\n      if (updatedRowIds.length > 0) {\n         webix.confirm({\n            title: L(\"Updating Multiple Records\"),\n            text: L(\"Are you sure you want to update the selected records?\"),\n            callback: (result) => {\n               if (result) {\n                  if ($datatable && $datatable.showProgress)\n                     $datatable.showProgress({ type: \"icon\" });\n\n                  let objModel = this.CurrentObject.model();\n                  objModel\n                     .batchUpdate({\n                        rowIds: updatedRowIds,\n                        values: vals,\n                     })\n                     .then(() => {\n                        // Anything we need to do after we are done.\n                        update_button.enable();\n                        this.hide();\n\n                        if ($datatable && $datatable.hideProgress)\n                           $datatable.hideProgress();\n                     })\n                     .catch((err) => {\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewGridPopupMassUpdate:submit(): Error during batchUpdate\",\n                           rowIds: updatedRowIds,\n                           values: vals,\n                        });\n                     });\n               } else {\n                  update_button.enable();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n         update_button.enable();\n         this.hide();\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupExport from \"../ABViewGridPopupExport\";\nimport ABPopupMassUpdateClass from \"../ABViewGridPopupMassUpdate\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\n\nexport default class ABViewGridComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGrid_${baseView.id}`,\n         Object.assign(\n            {\n               table: \"\",\n\n               // component: `${base}_component`,\n               toolbar: \"\",\n               buttonDeleteSelected: \"\",\n\n               buttonFilter: \"\",\n               buttonMassUpdate: \"\",\n               buttonSort: \"\",\n               buttonExport: \"\",\n\n               globalSearchToolbar: \"\",\n\n               datatable: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.handler_select = (...params) => {\n         this.selectRow(...params);\n      };\n      // {fn} .handler_select\n      // the callback fn for our selectRow()\n      // We want this called when the .datacollection we are linked to\n      // emits an \"onChange\" event.\n\n      this.detatch();\n      baseView.filterHelper.on(\"filter.data\", this._handler_filterData);\n\n      // derive these from viewGrid\n      this.id = baseView.id;\n\n      /////\n      ///// For TEsting:\n      /////\n      // this.settings.showToolbar = 1;\n      // this.settings.isEditable = 1;\n      // this.settings.isExportable = 1;\n      // this.settings.gridFilter = {\n      //    filterOption: 1,\n      //    userFilterPosition: \"form\",\n      //    isGlobalToolbar: 1,\n      // };\n\n      // this.settings.detailsPage = \"some-uuid\";\n      // this.settings.detailTab = \"some_uuid_2\";\n      // this.settings.trackView = 1;\n      /////\n      ///// end testing\n      /////\n\n      this.columnSplitLeft = 0;\n      // {integer}\n      // Which column to \"split\"/\"freeze\" from the left side of the grid.\n\n      this.columnSplitRight = 0;\n      // {integer}\n      // The # columns to the right to freeze.\n\n      // this.datacollection = null;\n      // // {ABDataCollection}\n      // // The Webix DataCollection that manages the data we are displaying.\n\n      this.validationError = false;\n      // {bool}\n      // Has a Validation Error occured?\n\n      this.linkPage = baseView.linkPageHelper.component();\n      // {ABViewPropertyLinkPage}\n      //\n\n      const idTable = this.ids.table;\n      const ab = this.AB;\n\n      this.PopupExport = new ABPopupExport(idTable);\n      this.PopupExport.init(ab);\n      // {ABViewGridPopupExport}\n      // Popup for managing how to export our data.\n\n      this.PopupMassUpdateComponent = new ABPopupMassUpdateClass(this, idTable);\n      this.PopupMassUpdateComponent.init(ab);\n      // this.PopupMassUpdateComponent.on(\"\")\n      // {}\n      // The popup for performing a Mass Edit operation.\n\n      this.PopupSortDataTableComponent = new ABPopupSortField(idTable);\n      this.PopupSortDataTableComponent.init(ab);\n      this.PopupSortDataTableComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n\n      this.skippableColumns = [\n         \"appbuilder_select_item\",\n         \"appbuilder_view_detail\",\n         \"appbuilder_view_track\",\n         \"appbuilder_view_edit\",\n         \"appbuilder_trash\",\n      ];\n      // {array}\n      // An array of column names that should be skipped from some of our\n      // event handlers.\n\n      // this.EditField = null;\n      // // {ABFieldXXX}\n      // // Which ABField is the focus of our PopupHeader menu?\n\n      // this.EditNode = null;\n      // // {HTML DOM}\n      // // The webix.$node where the ABField Header is that our PopupHeader\n      // // should be displayed at.\n\n      this.ignoreLocalSettings = false;\n      // {bool}\n      // should we ignore our local settings in our current context?\n      // (used in ABDesigner when our settings will change as we need to\n      // use those instead of the saved settings.)\n\n      this._gridSettings = null;\n      // {hash} { grid.id : [ {columnHeader}, {columnHeader} ...]}\n      // Keep a global copy of our local Grid settings, so we can optimize the header\n      // sizes.\n\n      this._isDatacollectionLoaded = false;\n   }\n\n   // {string}\n   // the unique key for ABViewGrids to store/retrieve their local settings\n   get keyStorageSettings() {\n      return \"abviewgrid_settings\";\n   }\n\n   detatch() {\n      this.view.filterHelper.removeAllListeners(\"filter.data\");\n      this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n\n   /**\n    * @method getColumnIndex()\n    * return the Datatable.getColumnIndex() value\n    * @param {string} id\n    *        the uuid of the column we are referencing.\n    * @return {integer}\n    */\n   getColumnIndex(id) {\n      let indx = this.getDataTable().getColumnIndex(id);\n      if (!this.settings.massUpdate) {\n         // the index is 0 based. So if the massUpdate feature isn't\n         // enabled, we need to add 1 to the result so they look like\n         // a 1, 2, ...\n\n         indx++;\n      }\n      return indx;\n   }\n\n   uiDatatable() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const self = this;\n\n      let view = \"datatable\";\n\n      if (settings.isTreeDatable || settings.groupBy)\n         // switch datatable to support tree\n         view = \"treetable\";\n\n      let selectType = \"cell\";\n\n      if (!settings.isEditable && (settings.detailsPage || settings.editPage))\n         selectType = \"row\";\n\n      return {\n         view,\n         id: ids.datatable,\n         resizeColumn: { size: 10 },\n         resizeRow: { size: 10 },\n         prerender: false,\n         editable: settings.isEditable,\n         fixedRowHeight: false,\n         height: settings.height || 0,\n         editaction: \"custom\",\n         select: selectType,\n         footer:\n            // show footer when there are summary columns\n            settings.summaryColumns.length > 0 ||\n            settings.countColumns.length > 0,\n         tooltip: true,\n         // tooltip: {\n         //    // id: ids.tooltip,\n         //    template: (obj, common) => {\n         //       return this.toolTip(obj, common);\n         //    },\n         //    on: {\n         //       // When showing a larger image preview the tooltip sometime displays part of the image off the screen...this attempts to fix that problem\n         //       onBeforeRender: function () {\n         //          self.toolTipOnBeforeRender(this.getNode());\n         //       },\n         //       onAfterRender: function (data) {\n         //          self.toolTipOnAfterRender(this.getNode());\n         //       },\n         //    },\n         // },\n         dragColumn: true,\n         on: {\n            onBeforeSelect: function (data, preserve) {\n               if (self.skippableColumns.indexOf(data.column) != -1) {\n                  return false;\n               } else if (settings.isEditable) {\n                  const currObject = self.datacollection.datasource;\n                  const selectField = currObject.fields(\n                     (f) => f.columnName === data.column\n                  )[0];\n\n                  if (selectField == null) return true;\n\n                  const cellNode = this.getItemNode({\n                        row: data.row,\n                        column: data.column,\n                     }),\n                     rowData = this.getItem(data.row);\n\n                  return selectField.customEdit(rowData, null, cellNode);\n               } else if (!settings.detailsPage && !settings.editPage)\n                  return false;\n            },\n            onAfterSelect: (data, preserve) => {\n               // {ABObject} data\n               //            the selected object\n               // {bool} prevent\n               //        indicates whether the previous selection state should\n               //        be saved. (is multiselect and they are holding SHIFT)\n               if (this.settings.isEditable) {\n                  this.onAfterSelect(data, preserve);\n               }\n            },\n            onBeforeEditStart: function (id) {\n               if (!this.getItem(id) == \"appbuilder_select_item\") return false;\n            },\n            onCheck: function (row, col, val) {\n               // Update checkbox data\n               if (col == \"appbuilder_select_item\") {\n                  // do nothing because we will parse the table once we decide\n                  // if we are deleting or updating rows\n                  self.toggleUpdateDelete();\n               } else {\n                  if (settings.isEditable) {\n                     // if the colum is not the select item column move on to\n                     // the next step to save\n                     const state = {\n                        value: val,\n                     };\n                     const editor = {\n                        row: row,\n                        column: col,\n                        config: null,\n                     };\n\n                     self.onAfterEditStop(state, editor);\n                  } else {\n                     const node = this.getItemNode({\n                        row: row,\n                        column: col,\n                     });\n                     const checkbox = node.querySelector(\n                        'input[type=\"checkbox\"]'\n                     );\n\n                     if (val == 1) {\n                        checkbox.checked = false;\n                     } else {\n                        checkbox.checked = true;\n                     }\n                  }\n               }\n            },\n            onBeforeEditStop: function (state, editor) {\n               // console.warn(\"!! ToDo: onBeforeEditStop()\");\n            },\n            onAfterEditStop: (state, editor, ignoreUpdate) => {\n               if (this.validationError == false)\n                  this.onAfterEditStop(state, editor, ignoreUpdate);\n            },\n            onValidationError: function () {\n               this.validationError = true;\n            },\n            onValidationSuccess: function () {\n               this.validationError = false;\n            },\n\n            // We are sorting with server side requests now so we can remove this\n            // onAfterLoad: function () {\n            //    _logic.onAfterLoad();\n            // },\n            onColumnResize: function (\n               columnName,\n               newWidth,\n               oldWidth,\n               user_action\n            ) {\n               // if we resize the delete column we want to resize the last\n               // column but Webix will not allow since the column is split\n               const rightSplitItems = [\n                  \"appbuilder_view_detail\",\n                  \"appbuilder_view_track\",\n                  \"appbuilder_view_edit\",\n                  \"appbuilder_trash\",\n               ];\n\n               if (rightSplitItems.indexOf(columnName) != -1) {\n                  // Block events so we can leave the delete column alone\n                  this.blockEvent();\n                  // keeps original width\n                  this.setColumnWidth(columnName, oldWidth);\n                  this.unblockEvent();\n                  // Listen to events again\n\n                  // find the last column's config\n                  const column = self.getLastColumn();\n\n                  columnName = column.id;\n\n                  // determine if we are making the column larger or smaller\n                  if (newWidth < oldWidth) {\n                     newWidth = column.width + 40;\n                     // add 40 because there is not any more space to drag so we\n                     // will allow 40px increments\n                  } else {\n                     newWidth = column.width - (newWidth - 40);\n                     // take the column's width and subtrack the difference of\n                     // the expanded delet column drag\n                  }\n                  // we don't want columns to be smaller than 50 ?? do we ??\n                  // I could be wrong maybe a checkbox could be smaller so this\n                  // could change\n                  if (newWidth < 50) {\n                     newWidth = 50;\n                  }\n                  // minWidth is important because we are using fillspace:true\n                  column.minWidth = newWidth;\n                  // Sets the UI\n                  this.setColumnWidth(columnName, newWidth);\n               }\n               // Saves the new width\n               if (user_action) {\n                  self.onColumnResize(\n                     columnName,\n                     newWidth,\n                     oldWidth,\n                     user_action\n                  );\n               }\n            },\n            onRowResize: (rowId) => {\n               // V2: we no longer do anything onRowResize()\n               // before we saved the row height in the record.\n               // this.onRowResize(rowId);\n            },\n            onBeforeColumnDrag: (sourceId, event) =>\n               !(this.skippableColumns.indexOf(sourceId) !== -1),\n            onBeforeColumnDrop: (sourceId, targetId, event) =>\n               // Make sure we are not trying to drop onto one of our special\n               // columns ...\n               !(this.skippableColumns.indexOf(targetId) !== -1),\n            onAfterColumnDrop: (sourceId, targetId, event) =>\n               this.onAfterColumnDrop(sourceId, targetId, event),\n            // onAfterColumnShow: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnShow()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).showField(id);\n            // },\n            // onAfterColumnHide: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnHide()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n            // },\n\n            onHeaderClick: (id, e, node) => {\n               /* if (settings.configureHeaders) */\n               this.onHeaderClick(id, e, node);\n            },\n         },\n      };\n   }\n\n   uiFilter() {\n      return this.view.filterHelper.ui();\n\n      // make sure onFilterData is now .emit()ed instead of passing in a callback.\n   }\n\n   /**\n    * @method uiToolbar()\n    * Return the webix definition for the toolbar row for our Grids.\n    * @return {json}\n    */\n   uiToolbar() {\n      const ids = this.ids;\n      const self = this;\n\n      return {\n         view: \"toolbar\",\n         id: ids.toolbar,\n         hidden: true,\n         css: \"ab-data-toolbar\",\n         cols: [\n            {\n               view: \"button\",\n               id: ids.buttonMassUpdate,\n               css: \"webix_transparent\",\n               label: this.label(\"Edit\"),\n               icon: \"fa fa-pencil-square-o\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarMassUpdate(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonDeleteSelected,\n               css: \"webix_transparent\",\n               label: this.label(\"Delete\"),\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarDeleteSelected(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonFilter,\n               css: \"webix_transparent\",\n               label: this.label(\"Filters\"),\n               icon: \"fa fa-filter\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarFilter(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonSort,\n               css: \"webix_transparent\",\n               label: this.label(\"Sort\"),\n               icon: \"fa fa-sort\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarSort(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonExport,\n               css: \"webix_transparent\",\n               label: this.label(\"Export\"),\n               icon: \"fa fa-print\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarExport(this.$view);\n               },\n            },\n            {},\n            {\n               id: ids.globalSearchToolbar,\n               view: \"search\",\n               placeholder: this.label(\"Search...\"),\n               on: {\n                  onTimedKeyPress: () => {\n                     const searchText = $$(ids.globalSearchToolbar).getValue();\n\n                     this.view.filterHelper.externalSearchText(searchText);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      const _uiGrid = {\n         id: this.ids.table,\n         type: \"space\",\n         borderless: true,\n         rows: [\n            {},\n            {\n               view: \"label\",\n               label: this.label(\"Select an object to load.\"),\n               inputWidth: 200,\n               align: \"center\",\n            },\n            {},\n         ],\n      };\n\n      const settings = this.settings;\n\n      if (this.datacollection || settings.dataviewID !== \"\") {\n         _uiGrid.padding = settings.padding;\n         _uiGrid.rows = [];\n         if (settings.showToolbar) {\n            _uiGrid.rows.push(this.uiToolbar());\n         }\n         if (this.settings.gridFilter.filterOption) {\n            _uiGrid.rows.push(this.uiFilter());\n         }\n\n         _uiGrid.rows.push(this.uiDatatable());\n      }\n\n      const _ui = super.ui([_uiGrid]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel = 2) {\n      if (AB) await super.init(AB);\n\n      const self = this;\n      const ids = this.ids;\n\n      // WORKAROUND : Where should we define this ??\n      // For include PDF.js\n      const abWebix = AB.Webix;\n\n      abWebix.codebase = \"\";\n      abWebix.cdn = \"/js/webix\";\n\n      // this shows the options to Hide, Filter, sort , etc...\n      // only in Designer?\n      // PopupHeaderEditComponent.init({\n      //    onClick: _logic.callbackHeaderEdit, // be notified when there is a change in the hidden fields\n      // });\n\n      // NOTE: register the onAfterRender() here, so it only registers\n      // one.\n      const $DataTable = this.getDataTable();\n\n      let throttleCustomDisplay = null;\n      let scrollStarted = null;\n\n      if (!$DataTable) return;\n\n      abWebix.extend($DataTable, abWebix.ProgressBar);\n\n      $DataTable.config.accessLevel = accessLevel;\n\n      if (accessLevel < 2) $DataTable.define(\"editable\", false);\n\n      const settings = this.settings;\n\n      const customDisplays = (data) => {\n         const CurrentObject = this.datacollection?.datasource;\n\n         if (!CurrentObject || !$DataTable.data) return;\n\n         const displayRecords = [];\n\n         const verticalScrollState = $DataTable.getScrollState().y,\n            rowHeight = $DataTable.config.rowHeight,\n            height =\n               $DataTable.$view.querySelector(\".webix_ss_body\").clientHeight,\n            startRecIndex = Math.floor(verticalScrollState / rowHeight),\n            endRecIndex = startRecIndex + $DataTable.getVisibleCount();\n\n         let index = 0;\n\n         $DataTable.data.order.each((id) => {\n            if (id != null && startRecIndex <= index && index <= endRecIndex)\n               displayRecords.push(id);\n\n            index++;\n         });\n\n         let editable = settings.isEditable;\n\n         if ($DataTable.config.accessLevel < 2) editable = false;\n\n         CurrentObject.customDisplays(\n            data,\n            this.AB._App,\n            $DataTable,\n            displayRecords,\n            editable\n         );\n      };\n\n      $DataTable.attachEvent(\"onAfterRender\", function (data) {\n         $DataTable.resize();\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n\n         AB.ClassUI.CYPRESS_REF($DataTable);\n         Object.keys(ids).forEach((key) => {\n            const $el = $$(ids[key]);\n            if ($el) {\n               AB.ClassUI.CYPRESS_REF($el);\n            }\n         });\n      });\n\n      // we have some data types that have custom displays that don't look\n      // right after scrolling large data sets we need to call customDisplays\n      // again\n      $DataTable.attachEvent(\"onScroll\", function () {\n         if (scrollStarted) clearTimeout(scrollStarted);\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         scrollStarted = setTimeout(() => {\n            customDisplays(this.data);\n         }, 1500);\n      });\n      $DataTable.attachEvent(\"onAfterScroll\", function () {\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n      });\n\n      // Process our onItemClick events.\n      // this is a good place to check if our delete/trash icon was clicked.\n      $DataTable.attachEvent(\"onItemClick\", function (id, e, node) {\n         // make sure we have an object selected before processing this.\n         const dc = self.datacollection;\n         const CurrentObject = dc?.datasource;\n\n         if (!CurrentObject) return;\n\n         if (settings.isEditable === 0) {\n            const items = $DataTable.getItem(id);\n         }\n         // if this was our edit icon:\n         // console.log(e.target.className);\n         if (e === \"auto\" || e.target.className.indexOf(\"eye\") > -1) {\n            // View a Details Page:\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (e.target.className.indexOf(\"pencil\") > -1) {\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         } else if (e.target.className.indexOf(\"track\") > -1)\n            self.emit(\"object.track\", CurrentObject, id.row);\n         // App.actions.openObjectTrack(CurrentObject, id.row);\n         else if (e.target.className.indexOf(\"clear-combo-value\") > -1) {\n            const clearValue = {};\n\n            clearValue[id.column] = \"\";\n\n            const updateRow = async () => {\n               try {\n                  const response = await CurrentObject.model().update(\n                     id.row,\n                     clearValue\n                  );\n\n                  // console.log(response);\n               } catch (err) {\n                  self.AB.notify.developer(err, {\n                     context: \"ABViewGridComponent.onItemClick\",\n                     message: \"Error updating item\",\n                     obj: CurrentObject.toObj(),\n                     id: id.row,\n                  });\n               }\n            };\n\n            updateRow();\n         }\n         // if this was our trash icon:\n         else if (e.target.className.indexOf(\"trash\") > -1) {\n            // If the confirm popup is showing, then skip to show a new one\n            if (!this._deleteConfirmPopup) {\n               this._deleteConfirmPopup = abWebix.confirm({\n                  title: self.label(\"Delete data\"),\n                  text: self.label(\"Do you want to delete this row?\"),\n                  callback: (result) => {\n                     delete this._deleteConfirmPopup;\n                     if (result) {\n                        const deleteRow = async () => {\n                           try {\n                              const response =\n                                 await CurrentObject.model().delete(id.row);\n\n                              if (response.numRows > 0) {\n                                 $DataTable.remove(id);\n                                 $DataTable.clearSelection();\n                              } else\n                                 abWebix.alert({\n                                    text: self.label(\n                                       \"No rows were effected.  This does not seem right.\"\n                                    ),\n                                 });\n                           } catch (err) {\n                              self.AB.notify.developer(err, {\n                                 context: \"ABViewGridComponent.onItemClick\",\n                                 message: \"Error deleting item\",\n                                 obj: CurrentObject.toObj(),\n                                 id: id.row,\n                              });\n\n                              //// TODO: what do we do here?\n                           }\n                        };\n\n                        deleteRow();\n                     }\n\n                     $DataTable.clearSelection();\n\n                     return true;\n                  },\n               });\n            }\n         } else if (settings.detailsPage.length) {\n            // If an icon wasn't selected but a details page is set\n            // view the details page\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (settings.editPage.length) {\n            // If an icon wasn't selected but an edit page is set\n            // view the edit page\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         }\n      });\n\n      // ABViewGrid Original init();\n      if (settings.showToolbar) {\n         if (\n            settings.massUpdate ||\n            settings.isSortable ||\n            settings.isExportable ||\n            (settings.gridFilter &&\n               settings.gridFilter.filterOption &&\n               settings.gridFilter.userFilterPosition === \"toolbar\")\n         )\n            $$(ids.toolbar).show();\n\n         if (!settings.massUpdate) {\n            $$(ids.buttonMassUpdate).hide();\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (!settings.allowDelete) $$(ids.buttonDeleteSelected).hide();\n\n         if (settings.gridFilter) {\n            if (\n               settings.gridFilter.filterOption !== 1 ||\n               settings.gridFilter.userFilterPosition !== \"toolbar\"\n            )\n               $$(ids.buttonFilter).hide();\n\n            if (\n               settings.gridFilter.filterOption === 3 &&\n               settings.gridFilter.globalFilterPosition === \"single\"\n            )\n               $DataTable.hide();\n\n            if (settings.gridFilter.isGlobalToolbar)\n               $$(ids.globalSearchToolbar).show();\n            else $$(ids.globalSearchToolbar).hide();\n\n            if (settings.gridFilter.filterOption)\n               this.view.filterHelper.init(this.AB);\n         }\n\n         if (!settings.isSortable) $$(ids.buttonSort).hide();\n\n         if (!settings.isExportable) $$(ids.buttonExport).hide();\n      }\n\n      if (settings.hideHeader) this.hideHeader();\n\n      const dc =\n         this.datacollection || this.AB.datacollectionByID(settings.dataviewID);\n\n      if (!this._isDatacollectionLoaded) this.datacollectionLoad(dc);\n\n      // Make sure\n      this._gridSettings =\n         this._gridSettings ||\n         (await this.AB.Storage.get(this.keyStorageSettings)) ||\n         {};\n\n      if (dc?.datasource) {\n         // TRANSITION: ABViewGrid_orig line 862 ...\n\n         this.linkPage.init({\n            view: this.view,\n            datacollection: dc,\n         });\n\n         this.refreshHeader();\n      }\n   }\n\n   /**\n    * @method busy()\n    * Indicate that our datatable is currently busy loading/processing\n    * data.\n    */\n   busy() {\n      this.getDataTable()?.showProgress?.({ type: \"icon\" });\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const ids = this.ids;\n      const $ButtonFilter = $$(ids.buttonFilter);\n\n      if ($ButtonFilter) {\n         const onlyFilterRules = this.view.filterHelper.filterRules();\n\n         $ButtonFilter.define(\"badge\", onlyFilterRules?.rules?.length ?? 0);\n         $ButtonFilter.refresh();\n      }\n\n      const dc = this.datacollection;\n\n      dc.filterCondition(filterRules);\n      dc.reloadData();\n   }\n\n   async callbackSortData(sortRules = []) {\n      const $buttonSort = $$(this.ids.buttonSort);\n\n      $buttonSort.define(\"badge\", sortRules.length || null);\n      $buttonSort.refresh();\n\n      const gridElem = this.getDataTable();\n\n      if (gridElem.data.find({}).length < gridElem.data.count()) {\n         try {\n            // NOTE: Webix's client sorting does not support dynamic loading.\n            // If the data does not be loaded, then load all data.\n            await this.datacollection.reloadData(0, 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context:\n                  \"ABViewGrid:callbackSortData(): Error perform datacollection.reloadData()\",\n            });\n         }\n      }\n\n      // wait until the grid component will done to repaint UI\n      setTimeout(() => {\n         gridElem.sort((a, b) => this.PopupSortDataTableComponent.sort(a, b));\n      }, 777);\n   }\n\n   /**\n    * @method changePage()\n    * Helper method to switch to another View.\n    * @param {ABDataCollection} dv\n    *        The DataCollection we are working with.\n    * @param {obj} rowItem\n    *        the { row:#, column:{string} } of the item that was clicked.\n    * @param {ABViewPage.uuid} page\n    *        The .uuid of the ABViewPage/ABViewTab we are to swtich to.\n    *\n    */\n   changePage(dv, rowItem, page) {\n      const rowId = rowItem?.row ?? null;\n\n      // Set cursor to data view\n      if (dv) dv.setCursor(rowId);\n\n      // Pass settings to link page module\n      if (this.linkPage) this.linkPage.changePage(page, rowId);\n      else super.changePage(page);\n   }\n\n   columnConfig(headers = []) {\n      this.settings.columnConfig = headers;\n   }\n   /**\n    * @method datacollectionLoad()\n    * Assign an ABDataCollection to this component to use instead of any\n    * provided .dataviewID in our settings.\n    * NOTE: this primarily happens in the ABDesigner's Object Workspace.\n    * @param {ABDataCollection} dc\n    */\n   datacollectionLoad(dc) {\n      const oldDC = this.datacollection;\n      this.datacollection = dc;\n\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      if ($DataTable) {\n         // preventing too many handlers\n         if (!this.__handler_dc_busy) {\n            this.__handler_dc_busy = () => {\n               this.busy();\n            };\n\n            this.__handler_dc_ready = () => {\n               this.ready();\n               this.populateGroupData();\n            };\n\n            this.__handler_dc_loadData = () => {\n               this.populateGroupData();\n            };\n         }\n\n         if (oldDC) {\n            // remove our listeners from the previous DC\n            oldDC.removeListener(\"initializingData\", this.__handler_dc_busy);\n            oldDC.removeListener(\"initializedData\", this.__handler_dc_ready);\n            oldDC.removeListener(\"loadData\", this.__handler_dc_loadData);\n         }\n\n         if (dc) {\n            if (dc.datacollectionLink && dc.fieldLink)\n               dc.bind($DataTable, dc.datacollectionLink, dc.fieldLink);\n            else dc.bind($DataTable);\n\n            // making sure we only have 1 registered listener on this dc\n            dc.removeListener(\"initializingData\", this.__handler_dc_busy);\n            dc.on(\"initializingData\", this.__handler_dc_busy);\n            dc.removeListener(\"initializedData\", this.__handler_dc_ready);\n            dc.on(\"initializedData\", this.__handler_dc_ready);\n            dc.removeListener(\"loadData\", this.__handler_dc_loadData);\n            dc.on(\"loadData\", this.__handler_dc_loadData);\n            this.grouping();\n\n            this._isDatacollectionLoad = true;\n         } else $DataTable.unbind();\n\n         // Be sure to pass on our CurrentObject to our dependent components.\n         if (CurrentObject) {\n            this.view.filterHelper.objectLoad(CurrentObject);\n            this.PopupMassUpdateComponent.objectLoad(\n               CurrentObject,\n               this.getDataTable()\n            );\n            this.PopupSortDataTableComponent.objectLoad(CurrentObject);\n\n            this.PopupExport.objectLoad(CurrentObject);\n            this.PopupExport.dataCollectionLoad(dc);\n            this.PopupExport.setGridComponent(this.getDataTable());\n            this.PopupExport.setHiddenFields(this.settings.hiddenFields);\n            this.PopupExport.setFilename(this.view.label);\n         }\n      }\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * disable the update or delete buttons in the toolbar if there no items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   disableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.disable();\n      $$(this.ids.buttonDeleteSelected)?.disable();\n      // externally indicate that no rows are selected\n      this.emit(\"selection.cleared\");\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * enable the update or delete buttons in the toolbar if there are any items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   enableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.enable();\n      $$(this.ids.buttonDeleteSelected)?.enable();\n      // externally indicate that a row has been selected\n      this.emit(\"selection\");\n   }\n\n   freezeDeleteColumn() {\n      // we are going to always freeze the delete column if the datatable\n      // is wider than the container so it is easy to get to\n      return this.getDataTable().define(\"rightSplit\", this.columnSplitRight);\n   }\n\n   /**\n    * @method getDataTable()\n    * return the webix grid component.\n    * @return {webix.grid}\n    */\n   getDataTable() {\n      return $$(this.ids.datatable);\n   }\n\n   /**\n    * @method getLastColumn\n    * return the last column of a datagrid that is resizeable\n    */\n   getLastColumn() {\n      const $DataTable = this.getDataTable();\n\n      let lastColumn = {};\n\n      // Loop through each columns config to find out if it is in the split 1 region and set it as the last item...then it will be overwritten by next in line\n      $DataTable.eachColumn((columnId) => {\n         const columnConfig = $DataTable.getColumnConfig(columnId);\n\n         if (columnConfig.split === 1) lastColumn = columnConfig;\n      });\n\n      return lastColumn;\n   }\n\n   /**\n    * @method grouping()\n    * perform any grouping operations\n    */\n   grouping() {\n      if (!this.settings.groupBy) return;\n\n      const $treetable = this.getDataTable();\n\n      // map: {\n      //     votes:[\"votes\", \"sum\"],\n      //     title:[\"year\"]\n      // }\n      const baseGroupMap = {};\n      const CurrentObject = this.datacollection.datasource;\n\n      CurrentObject.fields().forEach((f) => {\n         switch (f.key) {\n            case \"number\":\n               baseGroupMap[f.columnName] = [f.columnName, \"sum\"];\n\n               break;\n\n            case \"calculate\":\n            case \"formula\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData) return 0;\n\n                     let sum = 0;\n\n                     listData.forEach((r) => {\n                        // we only want numbers returned so pass `true` as third param\n                        // to signify that this is part of a grouping row\n                        sum += f.format(r, false, true) * 1;\n                     });\n\n                     // simulate reformat from ABFieldFormulaCore\n                     if (!f.fieldLink || f.fieldLink.key === \"calculate\")\n                        return sum;\n                     else {\n                        const rowDataFormat = {};\n\n                        rowDataFormat[f.fieldLink.columnName] = sum;\n\n                        return f.fieldLink.format(rowDataFormat);\n                     }\n                  },\n               ];\n\n               break;\n\n            case \"connectObject\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const valRelation = r[f.relationName()];\n\n                        // array\n                        if (valRelation?.length) count += valRelation.length;\n                        // object\n                        else if (valRelation) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n\n            default:\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const val = prop(r);\n\n                        // count only exists data\n                        if (val) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n         }\n      });\n\n      // set group definition\n      // $DataTable.define(\"scheme\", {\n      //    $group: {\n      //       by: settings.groupBy,\n      //       map: groupMap\n      //    }\n      // });\n\n      // NOTE: https://snippet.webix.com/e3a2bf60\n      let groupBys = (this.settings.groupBy || \"\")\n         .split(\",\")\n         .map((g) => g.trim());\n      // Reverse the array NOTE: call .group from child to root\n      groupBys = groupBys.reverse();\n\n      groupBys.forEach((colName, gIndex) => {\n         const groupMap = this.AB.cloneDeep(baseGroupMap);\n\n         let by;\n\n         // Root\n         if (gIndex === groupBys.length - 1) by = colName;\n         // Sub groups\n         else {\n            by = (row) => {\n               let byValue = row[colName];\n\n               for (let i = gIndex + 1; i < groupBys.length; i++) {\n                  byValue = `${row[groupBys[i]]} - ${byValue}`;\n               }\n\n               return byValue;\n            };\n\n            // remove parent group data\n            groupBys.forEach((gColName) => {\n               if (gColName !== colName) groupMap[gColName] = [gColName];\n            });\n         }\n\n         $treetable.data.group({\n            by: by,\n            map: groupMap,\n         });\n      });\n   }\n\n   hideHeader() {\n      const $DataTable = this.getDataTable();\n\n      $DataTable.define(\"header\", false);\n      $DataTable.refresh();\n   }\n\n   /**\n    * @function onAfterColumnDrop\n    * When an editor drops a column to save a new column order\n    * @param {string} sourceId\n    *        the columnName of the item dragged\n    * @param {string} targetId\n    *        the columnName of the item dropped on\n    * @param {event} event\n    */\n   async onAfterColumnDrop(sourceId, targetId, event) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const settings = this.settings;\n      const columnConfig = this.localSettings();\n\n      // Reorder our current columnConfig\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n\n      for (let i = 0; i < columnConfig.length; i++)\n         if (columnConfig[i].id == sourceId) {\n            itemMoved = columnConfig[i];\n            columnConfig.splice(i, 1);\n            oPos = i;\n\n            break;\n         }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (let j = 0; j < columnConfig.length; j++)\n         if (columnConfig[j].id == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) j++;\n\n            columnConfig.splice(j, 0, itemMoved);\n\n            break;\n         }\n\n      // special case: dropped on end and need to update .fillspace\n      // if (j == columnConfig.length - 1) {\n      //    if (columnConfig[j - 1].fillspace) {\n      //       columnConfig[j - 1].fillspace = false;\n      //       columnConfig[j].fillspace = true;\n      //    }\n      // }\n\n      // if we allow local changes\n      this.localSettings(columnConfig);\n\n      if (settings.saveLocal) this.localSettingsSave();\n\n      // Now emit this event, in case an external object is wanting to\n      // respond to this: ABDesigner.objectBuilder, Interface  Designer,\n      // we send back an array[ ABField.id, ...] in the order we have\n      // them.\n      this.emit(\n         \"column.order\",\n         columnConfig.map((c) => c.fieldID)\n      );\n\n      this.refreshHeader();\n\n      // CurrentObject.fieldReorder(sourceId, targetId)\n      //    .then(() => {\n      //       // reset each column after a drop so we do not have multiple fillspace and minWidth settings\n      //       var editiable = settings.isEditable;\n      //       if ($DataTable.config.accessLevel < 2) {\n      //          editiable = false;\n      //       }\n      //       var columnHeaders = CurrentObject.columnHeaders(true, editiable);\n      //       columnHeaders.forEach(function (col) {\n      //          if (col.id == sourceId && col.fillspace == true) {\n      //             columnHeader.fillspace = false;\n      //             columnHeader.minWidth = columnHeader.width;\n      //          }\n      //       });\n\n      //       _logic.callbacks.onColumnOrderChange(CurrentObject);\n      //       // freeze columns:\n      //       let frozenColumnID =\n      //          settings.frozenColumnID != null\n      //             ? settings.frozenColumnID\n      //             : CurrentObject.workspaceFrozenColumnID;\n      //       if (frozenColumnID != \"\") {\n      //          $DataTable.define(\n      //             \"leftSplit\",\n      //             $DataTable.getColumnIndex(frozenColumnID) + columnSplitLeft\n      //          );\n      //       } else {\n      //          $DataTable.define(\"leftSplit\", columnSplitLeft);\n      //       }\n      //       _logic.freezeDeleteColumn();\n      //       $DataTable.refreshColumns();\n      //    })\n      //    .catch((err) => {\n      //       OP.Error.log(\"Error saving new column order:\", {\n      //          error: err,\n      //       });\n      //    });\n   }\n\n   /**\n    * @function onAfterEditStop\n    * When an editor is finished.\n    * @param {json} state\n    * @param {} editor\n    * @param {} ignoreUpdate\n    * @return\n    */\n   async onAfterEditStop(state, editor, ignoreUpdate) {\n      // state:   {value: \"new value\", old: \"old value\"}\n      // editor:  { column:\"columnName\", row:ID, value:'value', getInputNode:fn(), config:{}, focus: fn(), getValue: fn(), setValue: function, getInputNode: function, render: function…}\n\n      const $DataTable = this.getDataTable();\n\n      // if you don't edit an empty cell we just need to move on\n      if (\n         (!state.old && state.value === \"\") ||\n         (state.old === \"\" && state.value === \"\")\n      ) {\n         $DataTable.clearSelection();\n\n         return false;\n      }\n\n      if (editor.config)\n         switch (editor.config.editor) {\n            case \"number\":\n               state.value = parseFloat(state.value);\n\n               break;\n\n            case \"datetime\":\n               state.value = state.value.getTime();\n\n               if (state && state.old && state.old.getTime)\n                  state.old = state.old.getTime();\n\n               break;\n\n            default:\n            // code block\n         }\n\n      if (state.value !== state.old) {\n         const item = $DataTable.getItem(editor.row);\n\n         item[editor.column] = state.value;\n\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid\");\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid_cell\");\n\n         const CurrentObject = this.datacollection.datasource;\n         const validator = CurrentObject.isValidData(item);\n\n         if (validator.pass()) {\n            //// Question: do we submit full item updates?  or just patches?\n            // IF Patch:\n            // var patch = {};\n            // patch.id = item.id;\n            // patch[editor.column] = item[editor.column];\n            // await CurrentObject.model().update(item.id, patch)\n\n            const ab = this.AB;\n\n            try {\n               await CurrentObject.model().update(item.id, item);\n\n               if ($DataTable.exists(editor.row)) {\n                  $DataTable.updateItem(editor.row, item);\n                  $DataTable.clearSelection();\n                  $DataTable.refresh(editor.row);\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  context: \"ABViewGrid:onAfterEditStop(): Error saving item\",\n                  item,\n                  editor,\n                  state,\n                  object: CurrentObject.toObj(),\n               });\n\n               $DataTable.clearSelection();\n\n               if (\n                  ab.Validation.isGridValidationError(\n                     err,\n                     editor.row,\n                     $DataTable\n                  )\n               ) {\n                  // Do we reset the value?\n                  // item[editor.column] = state.old;\n                  // $DataTable.updateItem(editor.row, item);\n               } else {\n                  // this was some other Error!\n               }\n            }\n            // CurrentObject.model()\n            //    .update(item.id, item)\n            //    .then(() => {\n            //       if ($DataTable.exists(editor.row)) {\n            //          $DataTable.updateItem(editor.row, item);\n            //          $DataTable.clearSelection();\n            //          $DataTable.refresh(editor.row);\n            //       }\n            //    })\n            //    .catch((err) => {\n            //       OP.Error.log(\"Error saving item:\", {\n            //          error: err\n            //       });\n\n            //       $DataTable.clearSelection();\n            //       if (\n            //          OP.Validation.isGridValidationError(\n            //             err,\n            //             editor.row,\n            //             $DataTable\n            //          )\n            //       ) {\n            //          // Do we reset the value?\n            //          // item[editor.column] = state.old;\n            //          // $DataTable.updateItem(editor.row, item);\n            //       } else {\n            //          // this was some other Error!\n            //       }\n            //    });\n         } else validator.updateGrid(editor.row, $DataTable);\n      } else $DataTable.clearSelection();\n\n      return false;\n\n      // var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n      // self.updateRowData(state, editor, ignoreUpdate)\n      //    .fail(function (err) { // Cached\n      //       item[editor.column] = state.old;\n      //       $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       $$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    })\n      //    .then(function (result) {\n      //       if (item) {\n      //          item[editor.column] = state.value;\n\n      //          if (result && result.constructor.name === 'Cached' && result.isUnsync())\n      //             item.isUnsync = true;\n\n      //          $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       }\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    });\n   }\n\n   /**\n    * @function onAfterSelect\n    * This is when a user clicks on a cell.  We use the onAfterSelect to\n    * trigger a normal .editCell() if there isn't a custom editor for this field.\n    * @param {json} data webix cell data\n    * @return\n    */\n   onAfterSelect(data /*, preserve */) {\n      // data: {row: 1, column: \"name\", id: \"1_name\", toString: function}\n      // data.row: ABObject.id\n      // data.column => columnName of the field\n\n      // Normal update data\n      this.getDataTable()?.editCell(data.row, data.column);\n   }\n\n   /**\n    * @function onColumnResizeResize\n    * This is when a user adjusts the size of a column\n    * @param {} columnName\n    * @param {int} newWidth\n    * @param {int} oldWidth\n    * @param {} user_action\n    * @return\n    */\n   async onColumnResize(columnName, newWidth, oldWidth, user_action) {\n      // update the settings\n\n      let requireRefresh = false;\n\n      const ab = this.AB;\n\n      if (newWidth < 30) {\n         newWidth = 30;\n         requireRefresh = true;\n\n         ab.Webix.message({\n            type: \"info\",\n            text: this.label(\"minimum column width is {0}\", [30]),\n            expire: 1000,\n         });\n      }\n\n      const localSettings = this.localSettings();\n\n      if (localSettings) {\n         const header = localSettings.find((h) => h.id == columnName);\n\n         if (header) {\n            header.width = newWidth;\n\n            delete header.adjust;\n         }\n      }\n\n      this.localSettings(localSettings);\n\n      if (this.settings.saveLocal) {\n         await this.localSettingsSave();\n         // for (const item in GridSettings) {\n         //    GridSettings[item].forEach((item) => {\n         //       // we cannot include field info because of the cicular structure\n         //       if (item?.footer?.field) {\n         //          delete item.footer.field;\n         //       }\n         //    });\n         // }\n         // await this.AB.Storage.set(this.keyStorageSettings, GridSettings);\n      }\n\n      // refresh the display\n      if (requireRefresh) this.refreshHeader();\n\n      this.freezeDeleteColumn();\n\n      // this.getDataTable().refreshColumns();\n\n      // TODO: allow external app to respond in special cases:\n      // eg: ABDesigner object workspace, interface builder, etc...\n      this.emit(\"column.resize\", columnName, newWidth, oldWidth);\n   }\n\n   /**\n    * @method onHeaderClick\n    * process the user clicking on the header for one of our columns.\n    */\n   onHeaderClick(id, e, node) {\n      if (this.skippableColumns.indexOf(id.column) !== -1) return false;\n\n      // save our EditNode & EditField:\n      // this.EditNode = node;\n\n      const EditField = this.datacollection.datasource.fields(\n         (f) => f.columnName === id.column\n      )[0];\n      // if (this.EditField) {\n      //    // show the popup\n      //    PopupHeaderEditComponent.show(node, this.EditField);\n      // }\n\n      this.emit(\"column.header.clicked\", node, EditField);\n\n      return false;\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      super.onShow();\n\n      // make sure our grid is properly .adjust()ed to the screen.\n      this.getDataTable()?.adjust();\n\n      const dv = this.datacollection;\n\n      if (dv)\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: this.handler_select.bind(this),\n         });\n   }\n\n   /**\n    * @method ready()\n    * Indicate that our datatable is currently ready for operation.\n    */\n   ready() {\n      const dc = this.datacollection;\n      if (\n         this.isCustomGroup &&\n         dc?.dataStatus != dc?.dataStatusFlag.initialized\n      )\n         return;\n\n      this.getDataTable()?.hideProgress?.();\n   }\n\n   /**\n    * @function refreshHeader()\n    *\n    * refresh the header for the table apart from the refresh() command\n    * @param {bool} ignoreLocal\n    *        Should we ignore our local settings and build directly from\n    *        our config settings?\n    */\n   refreshHeader(ignoreLocal = this.ignoreLocal) {\n      // columnSplitRight = 0;\n      // wait until we have an Object defined:\n      const CurrentObject = this.datacollection.datasource;\n\n      if (!CurrentObject) return;\n\n      const ids = this.ids;\n      const $DataTable = $$(ids.datatable);\n\n      if (!$DataTable) return;\n\n      const accessLevel = $DataTable.config.accessLevel;\n\n      $DataTable.define(\"leftSplit\", 0);\n      $DataTable.define(\"rightSplit\", 0);\n\n      let rowHeight = 0;\n\n      CurrentObject.imageFields().forEach((image) => {\n         const settings = image.getSettings();\n\n         if (settings.useHeight && settings.imageHeight > rowHeight)\n            rowHeight = settings.imageHeight;\n      });\n\n      if (rowHeight) $DataTable.define(\"rowHeight\", rowHeight);\n\n      // $DataTable.clearAll();\n\n      const settings = this.settings;\n\n      let editable = settings.isEditable;\n\n      if ($DataTable.config.accessLevel < 2) editable = false;\n\n      //// update DataTable structure:\n      // get column list from our local settings\n      const objColumnHeaders = CurrentObject.columnHeaders(\n         true,\n         editable,\n         // TRANSITION: moving these from .columnHeaders() to here:\n         [], //settings.summaryColumns,\n         [], //settings.countColumns,\n         [] //settings.hiddenFields\n      );\n\n      let columnHeaders = this.localSettings();\n\n      const ab = this.AB;\n\n      // if that is empty, pull from our settings.columnConfig\n      if (!columnHeaders || ignoreLocal)\n         columnHeaders = ab.cloneDeep(this.settings.columnConfig);\n\n      // if that is empty for some reason, rebuild from our CurrentObject\n      if (columnHeaders.length === 0) columnHeaders = objColumnHeaders;\n\n      // sanity check:\n      // columnHeaders can't contain a column that doesn't exist in objColumHeaders:\n      // (eg: a field might have been removed but localStorage doesn't know that )\n      const objColumnHeaderIDs = objColumnHeaders.map((h) => h.fieldID);\n\n      columnHeaders = columnHeaders.filter(\n         (c) => objColumnHeaderIDs.indexOf(c.fieldID) > -1\n      );\n\n      // default our columnConfig values to our columnHeaders:\n      columnHeaders.forEach((c) => {\n         // we want to overwrite our default settings with anything stored\n         // in local storage\n         const origCol = objColumnHeaders.find((h) => h.fieldID === c.fieldID);\n\n         // none of our functions can be stored in localStorage, so scan\n         // the original column and attach any template functions to our\n         // stashed copy.\n         // also the suggest for selects and connected fields may contain a\n         // function so go ahead and copy the original suggest to the column\n         Object.keys(origCol).forEach((k) => {\n            if (typeof origCol[k] === \"function\" || k === \"suggest\") {\n               c[k] = origCol[k];\n            }\n         });\n\n         const f = CurrentObject.fieldByID(c.fieldID);\n\n         if (!f) return;\n\n         // if it's a hidden field:\n         if (settings.hiddenFields.indexOf(f.columnName) > -1) {\n            c.hidden = true;\n         }\n\n         // add summary footer:\n         if (settings.summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\")\n               c.footer = { content: \"totalColumn\", field: f };\n            else c.footer = { content: \"summColumn\" };\n         }\n         // or add the count footer\n         else if (settings.countColumns.indexOf(f.id) > -1)\n            c.footer = { content: \"countColumn\" };\n      });\n\n      let localSettings = this.localSettings();\n\n      if (!localSettings || ignoreLocal) {\n         this.localSettings(columnHeaders);\n\n         localSettings = columnHeaders;\n      }\n\n      columnHeaders = ab.cloneDeep(localSettings);\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      columnHeaders.forEach((col) => {\n         col.fillspace = false;\n\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (col.validationRules) {\n            if (typeof col.validationRules === \"string\") {\n               col.validationRules = JSON.parse(col.validationRules);\n            }\n\n            if (col.validationRules.length) {\n               const validationUI = [];\n\n               // there could be more than one so lets loop through and build the UI\n               col.validationRules.forEach((rule) => {\n                  const Filter = ab.filterComplexNew(\n                     col.id /*+ \"_\" + webix.uid()*/\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: col.id,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n\n               // create a unique view id for popup\n               const popUpId =\n                  ids.rules + \"_\" + col.id; /* + \"_\" + webix.uid() */\n\n               // store the popup ids so we can remove the later\n               rulePops.push(popUpId);\n               // add the popup to the UI but don't show it\n               ab.Webix.ui({\n                  view: \"popup\",\n                  css: \"ab-rules-popup\",\n                  id: popUpId,\n                  body: {\n                     rows: validationUI,\n                  },\n               });\n            }\n         }\n\n         // group header\n         if (\n            settings.groupBy &&\n            (settings.groupBy || \"\").indexOf(col.id) > -1\n         ) {\n            const groupField = CurrentObject.fieldByID(col.fieldID);\n\n            if (groupField)\n               col.template = (obj, common) => {\n                  // return common.treetable(obj, common) + obj.value;\n                  if (obj.$group) {\n                     const rowData = ab.cloneDeep(obj);\n\n                     rowData[groupField.columnName] = rowData.value;\n\n                     return (\n                        common.treetable(obj, common) +\n                        groupField.format(rowData)\n                     );\n                  } else return groupField.format(obj);\n               };\n         }\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(CurrentObject.application);\n            f.filter.fieldsLoad(CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $DataTable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $DataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n               let invalidMessage = \"\";\n\n               $DataTable.$view.complexValidations[key].forEach((filter) => {\n                  // convert rowData from { colName : data } to { id : data }\n                  const newData = {};\n\n                  (CurrentObject.fields() || []).forEach((field) => {\n                     newData[field.id] = data[field.columnName];\n                  });\n\n                  // for the case of \"this_object\" conditions:\n                  if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n                  // use helper funtion to check if valid\n                  const ruleValid = filter.filters(newData);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     invalidMessage = filter.invalidMessage;\n                  }\n               });\n\n               // we also need to define an error message\n               if (!isValid)\n                  ab.Webix.message({\n                     type: \"error\",\n                     text: invalidMessage,\n                  });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $DataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $DataTable.config.rulePops = rulePops;\n         $DataTable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($DataTable.config.rulePops)\n            $DataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         // remove any validation rules from the previous table\n         $DataTable.define(\"rules\", {});\n         $DataTable.refresh();\n      }\n\n      const addedColumns = [];\n      // {array} the .id of the columnHeaders we add based upon our settings.\n      // this will help us pick the lastColumn that is part of the\n      // object.\n\n      if (settings.labelAsField) {\n         // console.log(CurrentObject);\n         columnHeaders.unshift({\n            id: \"appbuilder_label_field\",\n            header: \"Label\",\n            fillspace: true,\n            template: (obj) => CurrentObject.displayData(obj),\n            // css: { 'text-align': 'center' }\n         });\n         addedColumns.push(\"appbuilder_label_field\");\n      }\n\n      if (settings.massUpdate && accessLevel === 2) {\n         columnHeaders.unshift({\n            id: \"appbuilder_select_item\",\n            header: { content: \"masterCheckbox\", contentId: \"mch\" },\n            width: 40,\n            template: \"<div class='singleSelect'>{common.checkbox()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         this.columnSplitLeft = 1;\n         addedColumns.push(\"appbuilder_select_item\");\n      } else this.columnSplitLeft = 0;\n\n      if (settings.detailsPage !== \"\" && !settings.hideButtons) {\n         columnHeaders.push({\n            id: \"appbuilder_view_detail\",\n            header: \"\",\n            width: 40,\n            template: (obj, common) =>\n               \"<div class='detailsView'><span class='webix_icon fa fa-eye'></span></div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_detail\");\n      }\n\n      if (settings.trackView !== 0 && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_view_track\",\n            header: \"\",\n            width: 40,\n            template:\n               \"<div class='track'><span class='track fa fa-history'></span></div>\",\n            css: { \"text-align\": \"center\", cursor: \"pointer\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_track\");\n      }\n\n      if (\n         settings.editPage !== \"\" &&\n         !settings.hideButtons &&\n         accessLevel === 2\n      ) {\n         columnHeaders.push({\n            id: \"appbuilder_view_edit\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='edit'>{common.editIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_edit\");\n      }\n\n      if (settings.allowDelete && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_trash\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='trash'>{common.trashIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_trash\");\n      }\n\n      // find our last displayed column (that isn't one we added);\n      let lastCol = null;\n\n      for (let i = columnHeaders.length - 1; i >= 0; i--)\n         if (!lastCol) {\n            const col = columnHeaders[i];\n\n            if (!col.hidden && addedColumns.indexOf(col.id) === -1) {\n               lastCol = col;\n\n               break;\n            }\n         }\n\n      if (lastCol) {\n         lastCol.fillspace = true;\n         lastCol.minWidth = lastCol.width;\n         lastCol.width = 150; // set a width for last column but by default it will fill the available space or use the minWidth to take up more\n      }\n\n      $DataTable.refreshColumns(columnHeaders);\n\n      // the addedColumns represent the additional icons that can be added.\n      this.columnSplitRight = addedColumns.length;\n\n      // the .massUpdate gets added to Left so don't include that in split right:\n      if (addedColumns.indexOf(\"appbuilder_select_item\") > -1)\n         this.columnSplitRight -= 1;\n      // .columnSplitRight can't be < 0\n      if (this.columnSplitRight < 0) this.columnSplitRight = 0;\n\n      // freeze columns:\n      const frozenColumnID = settings.frozenColumnID;\n\n      if (frozenColumnID != \"\")\n         $DataTable.define(\n            \"leftSplit\",\n            $DataTable.getColumnIndex(frozenColumnID) + 1\n         );\n      else $DataTable.define(\"leftSplit\", this.columnSplitLeft);\n\n      this.freezeDeleteColumn();\n      $DataTable.refreshColumns();\n      // }\n   }\n\n   /**\n    * localSettingsSave()\n    * Persist our current working copy of our GridSettings to localStorage.\n    * @return {Promise}\n    */\n   async localSettingsSave() {\n      const ab = this.AB;\n      const savedLocalSettings =\n         (await ab.Storage.get(this.keyStorageSettings)) || {};\n      const _gridSettings = this._gridSettings;\n\n      savedLocalSettings[this.settingsID()] = _gridSettings[this.settingsID()]\n         ? _gridSettings[this.settingsID()]\n         : [];\n\n      for (const item in savedLocalSettings) {\n         savedLocalSettings[item].forEach((item) => {\n            // we cannot include field info because of the cicular structure\n            if (item?.footer?.field) delete item.footer.field;\n         });\n      }\n\n      await ab.Storage.set(this.keyStorageSettings, savedLocalSettings);\n   }\n\n   /**\n    * @method localSettings()\n    * An interface method to handle get/set operations on our local GridSettings\n    * storage.\n    * .localStorage() : a getter to return the current value\n    * .localStorage(value) : a setter to save value as our current value.\n    * @param {various} value\n    *        the value to set to our settings.\n    * @return {various}\n    */\n   localSettings(value = null) {\n      const _gridSettings = this._gridSettings;\n\n      if (value) _gridSettings[this.settingsID()] = value;\n      else return _gridSettings[this.settingsID()];\n   }\n\n   /**\n    * @method selectRow()\n    * Select the grid row that correspondes to the provided rowData.\n    * @param {json} rowData\n    *        A key=>value hash of data that matches an entry in the grid.\n    *        rowData.id should match an existing entry.\n    */\n   selectRow(rowData) {\n      const $DataTable = this.getDataTable();\n\n      if (!$DataTable) return;\n\n      if (!rowData) $DataTable.unselect();\n      else if (rowData?.id && $DataTable.exists(rowData.id))\n         $DataTable.select(rowData.id, false);\n      else $DataTable.select(null, false);\n   }\n\n   /**\n    * @method settingsID()\n    * return the unique key for this Grid + object combo to store data\n    * in our localStorage.\n    * @return {string}\n    */\n   settingsID() {\n      const CurrentObject = this.datacollection.datasource;\n\n      return `${this.id}-${CurrentObject ? CurrentObject.id : \"0\"}`;\n   }\n\n   /**\n    * @method toggleTab()\n    * recursively toggle tabs into view once a user chooses a detail/edit view\n    * to display.\n    * @param {ABView.id} parentTab\n    * @param {webix.view} wb\n    */\n   toggleTab(parentTab, wb) {\n      // find the tab || if we didn't pass and id we may have passed a domNode\n      const tab =\n         wb.getTopParentView().queryView({ id: parentTab }) || $$(parentTab);\n\n      if (!tab) return;\n\n      // set the tabbar to to the tab\n      const tabbar = tab.getParentView().getParentView();\n\n      if (!tabbar) return;\n\n      // if we have reached the top we won't have a tab\n      if (tabbar.setValue) tabbar.setValue(parentTab);\n\n      // find if it is in a multiview of a tab\n      const nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n\n      // if so then do this again\n      if (nextTab) this.toggleTab(nextTab, wb);\n   }\n\n   toggleUpdateDelete() {\n      const $DataTable = this.getDataTable();\n\n      let checkedItems = 0;\n\n      $DataTable.data.each((obj) => {\n         if (\n            typeof obj !== \"undefined\" &&\n            Object.prototype.hasOwnProperty.call(\n               obj,\n               \"appbuilder_select_item\"\n            ) &&\n            obj.appbuilder_select_item === 1\n         )\n            checkedItems++;\n      });\n\n      if (checkedItems > 0) this.enableUpdateDelete();\n      else this.disableUpdateDelete();\n   }\n\n   toolbarDeleteSelected($view) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const deleteTasks = [];\n\n      $DataTable.data.each((row) => {\n         if (\n            typeof row !== \"undefined\" &&\n            // row.hasOwnProperty(\"appbuilder_select_item\") &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item === 1\n         ) {\n            // NOTE: store a fn() to run later.\n            deleteTasks.push(() => CurrentObject.model().delete(row.id));\n         }\n      });\n\n      const abWebix = this.AB.Webix;\n\n      if (deleteTasks.length > 0)\n         abWebix.confirm({\n            title: this.label(\"Delete Multiple Records\"),\n            text: this.label(\n               \"Are you sure you want to delete the selected records?\"\n            ),\n            callback: async (result) => {\n               if (result) {\n                  // Now run those functions\n                  await Promise.all(deleteTasks.map((t) => t()));\n\n                  // Anything we need to do after we are done.\n                  this.disableUpdateDelete();\n               }\n            },\n         });\n      else\n         abWebix.alert({\n            title: this.label(\"No Records Selected\"),\n            text: this.label(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n   }\n\n   toolbarFilter($view) {\n      this.view.filterHelper.showPopup($view);\n   }\n\n   toolbarSort($view) {\n      this.PopupSortDataTableComponent.show($view);\n   }\n\n   toolbarExport($view) {\n      this.PopupExport.show($view);\n   }\n\n   toolbarMassUpdate($view) {\n      this.PopupMassUpdateComponent.show($view);\n   }\n\n   /**\n    * @function toolTip()\n    *\n    * Retrieve the items toolTip\n    */\n   toolTip(obj, common) {\n      const CurrentObject = this.datacollection.datasource;\n      const imageFieldColNames = CurrentObject.imageFields().map(\n         (f) => f.columnName\n      );\n\n      let tip = \"\";\n\n      const columnName = common.column.id.replace(\" \", \"\");\n\n      if (Array.isArray(obj[columnName])) {\n         obj[columnName].forEach(function (o) {\n            if (o.text) tip += o.text + \"<br/>\";\n         });\n      } else if (\n         typeof obj[columnName + \"__relation\"] !== \"undefined\" &&\n         typeof obj[columnName] === \"number\"\n      )\n         tip = obj[columnName + \"__relation\"].text;\n      else if (typeof obj[columnName + \"__relation\"] !== \"undefined\") {\n         let relationData = obj[columnName + \"__relation\"];\n\n         if (!Array.isArray(relationData)) relationData = [relationData];\n\n         (relationData || []).forEach(function (o) {\n            if (o) tip += o.text + \"<br/>\";\n         });\n      } else if (imageFieldColNames.indexOf(columnName) !== -1) {\n         if (!obj[columnName]) {\n            return \"\";\n         } else {\n            // TODO: we need to get this URL from the ABFieldImage object!\n            tip = `<img style='max-width: 500px; max-height: 500px;' src='/file/${obj[columnName]}' />`;\n         }\n      } else if (common.column.editor === \"date\")\n         tip = common.column.format(obj[columnName]);\n      else if (common.column.editor === \"richselect\")\n         CurrentObject.fields().forEach((f) => {\n            if (f.columnName === columnName) {\n               if (f.settings.options) {\n                  f.settings.options.forEach((o) => {\n                     if (o.id === obj[columnName]) {\n                        tip = o.text;\n                     }\n                  });\n               }\n            }\n         });\n      else tip = obj[columnName];\n\n      if (!tip) return \"\";\n      else return tip;\n   }\n\n   /**\n    * @function toolTipOnBeforeRender()\n    *\n    * Add visibility \"hidden\" to all tooltips before render so we can move to a new location without the visual jump\n    */\n   toolTipOnBeforeRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      node.style.visibility = \"hidden\";\n   }\n\n   /**\n    * @function toolTipOnAfterRender()\n    *\n    * If the tooltip is displaying off the screen we want to try to reposition it for a better experience\n    */\n   toolTipOnAfterRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      if (node.firstChild?.nodeName === \"IMG\") {\n         setTimeout(() => {\n            const imgBottom = parseInt(node.style.top.replace(\"px\", \"\")) + 500;\n            const imgRight = parseInt(node.style.left.replace(\"px\", \"\")) + 500;\n\n            if (imgBottom > window.innerHeight) {\n               const imgOffsetY = imgBottom - window.innerHeight;\n               const newTop =\n                  parseInt(node.style.top.replace(\"px\", \"\")) - imgOffsetY;\n               node.style.top = newTop + \"px\";\n            }\n\n            if (imgRight > window.innerWidth) {\n               const imgOffsetX = imgRight - window.innerWidth;\n               const newLeft =\n                  parseInt(node.style.left.replace(\"px\", \"\")) - imgOffsetX;\n               node.style.left = newLeft + \"px\";\n            }\n\n            node.style.visibility = \"visible\";\n         }, 250);\n      } else node.style.visibility = \"visible\";\n   }\n\n   get isCustomGroup() {\n      const dc = this.datacollection;\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      return (\n         $DataTable?.config?.view === \"treetable\" && !CurrentObject?.isGroup\n      );\n   }\n\n   populateGroupData() {\n      if (!this.isCustomGroup) return;\n\n      this.busy();\n\n      const dc = this.datacollection;\n      const $DataTable = this.getDataTable();\n\n      $DataTable.clearAll();\n      $DataTable.parse(dc.getData() || []);\n\n      this.grouping();\n      this.ready();\n   }\n}\n","const ABViewGridCore = require(\"../../core/views/ABViewGridCore\");\nimport ABViewGridComponent from \"./viewComponent/ABViewGridComponent\";\nimport ABViewGridFilter from \"./viewProperties/ABViewPropertyFilterData\";\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewGrid extends ABViewGridCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.gridFilter);\n   }\n\n   propertyGroupByList(ids, groupBy) {\n      let colNames = groupBy || [];\n      if (typeof colNames == \"string\") {\n         colNames = colNames.split(\",\");\n      }\n\n      let options = $$(ids.groupBy).getList().data.find({});\n\n      $$(ids.groupByList).clearAll();\n      colNames.forEach((colName) => {\n         let opt = options.filter((o) => o.id == colName)[0];\n         if (opt) {\n            $$(ids.groupByList).add(opt);\n         }\n      });\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGridComponent(this);\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null) {\n         this.__filterHelper = new ABViewGridFilter(\n            this.AB,\n            `${this.id}_filterHelper`\n         );\n      }\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let origWS = this.warningsSilent;\n      this.warningsSilent = true;\n      let DC = this.datacollection;\n      this.warningsSilent = origWS;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewGridPopupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nvar L = null;\n\nexport default class AB_Work_Object_Workspace_PopupSortFields extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupSortFields\";\n\n      super({\n         component: `${idBase}_popupSort`,\n         list: `${idBase}_popupSort_list`,\n         form: `${idBase}_popupSort_form`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // The current ABObject we are working with.\n\n      this._blockOnChange = false;\n      // {bool}\n      // Should we skip the onChange handler processing at this time?\n\n      this._settings = null;\n      // {json}\n      // default sort settings.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   uiForm() {\n      const compId = this.ids.component;\n      return {\n         view: \"form\",\n         id: this.ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: (/* id, e, node */) => {\n                     this.clickAddNewSort();\n                     this.triggerOnChange();\n                  },\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `${compId} add sort button`\n                     );\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         id: this.ids.component,\n         // autoheight:true,\n         width: 600,\n         body: this.uiForm(),\n      };\n   }\n\n   // Our init() function for setting up our UI\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      // if popup does not already exist add it\n      if (!$$(this.ids.component)) webix.ui(this.ui());\n   }\n\n   /**\n    * @function clickAddNewSort\n    * When the user clicks the \"Add New Sort\" button, this routine will\n    * add another row to the sort form.\n    * @param {string} fieldId\n    *        The ABField.id of the field to auto select in this new row.\n    * @param {string} dir\n    *        The sort order to auto select in this new row.\n    */\n   // clickAddNewSort: function(by, dir, isMulti, id) {\n   clickAddNewSort(fieldId, dir) {\n      var self = this;\n      var sort_form = $$(this.ids.form);\n\n      var viewIndex = sort_form.getChildViews().length - 1;\n      var listFields = this.getFieldList(true);\n      sort_form.addView(\n         {\n            id: \"sort\" + webix.uid(),\n            cols: [\n               {\n                  view: \"combo\",\n                  width: 220,\n                  options: listFields,\n                  on: {\n                     onChange: function (columnId) {\n                        var el = this;\n                        self.onChangeCombo(columnId, el);\n                     },\n                  },\n               },\n               {\n                  view: \"segmented\",\n                  width: 200,\n                  options: [\n                     {\n                        id: \"\",\n                        value: L(\"Please select field\"),\n                     },\n                  ],\n                  on: {\n                     onChange: (/* newv, oldv */) => {\n                        // 'asc' or 'desc' values\n                        this.triggerOnChange();\n                     },\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  width: 30,\n                  on: {\n                     onItemClick: function () {\n                        sort_form.removeView(this.getParentView());\n                        self.refreshFieldList(true);\n                        self.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         },\n         viewIndex\n      );\n\n      // Select field\n      if (fieldId) {\n         var fieldsCombo = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[0];\n         fieldsCombo.setValue(fieldId);\n      }\n      // select direction\n      if (dir) {\n         var segmentButton = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[1];\n         segmentButton.setValue(dir);\n      }\n   }\n\n   /**\n    * @function getFieldList\n    * return field list so we can present a custom UI for view\n    * @param {bool} excludeSelected\n    *        Should we ignore fields that already exist in the form?\n    * @return {array} [ { id, value } ]\n    *         an array that is compatible with the webix.list\n    *         widget.\n    */\n   getFieldList(excludeSelected) {\n      var sort_form = $$(this.ids.form),\n         listFields = [];\n\n      var allFields = this.CurrentObject.fields();\n      if (allFields.length == 0) return listFields;\n\n      // Get all fields include hidden fields\n      allFields.forEach((f) => {\n         if (f.fieldIsSortable()) {\n            listFields.push({\n               id: f.id,\n               value: f.label,\n            });\n         }\n      });\n\n      // Remove selected field\n      if (excludeSelected) {\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var selectedValue = cView.getChildViews()[0].getValue();\n               if (selectedValue) {\n                  listFields = listFields.filter((f) => f.id != selectedValue);\n               }\n            });\n         }\n      }\n      return listFields;\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object\n    * @param {ABObject} object  the currently selected object.\n    */\n   objectLoad(object) {\n      this.CurrentObject = object;\n   }\n\n   /**\n    * @method setSettings\n    * Initialize the form with a set of conditions.\n    * @param {Array} settings\n    *        The default settings for this form.\n    *        [\n    *           {\n    *              key: uuid,     // ABField.id\n    *              dir: string,   // 'asc' or 'desc'\n    *           }\n    *        ]\n    */\n   setSettings(settings) {\n      this._settings = this.AB.cloneDeep(settings);\n   }\n\n   /**\n    * @method getSettings\n    * return the current sort settings stored by this form.\n    * @return {Array} -\n    *         [\n    *            {\n    *               key: uuid,     // ABField.id\n    *               dir: string,   // 'asc' or 'desc'\n    *            }\n    *         ]\n    */\n   getSettings() {\n      var sort_form = $$(this.ids.form),\n         sortFields = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue();\n            var dir = cView.getChildViews()[1].getValue();\n            sortFields.push({\n               key: fieldId,\n               dir: dir,\n            });\n         });\n      }\n      return sortFields;\n   }\n\n   /**\n    * @method onChangeCombo()\n    * Update the display once they have chosen a field to sort by.\n    * We now need to offer the appropriate sort direction chooser.\n    * @param {string} fieldID\n    *        The value of the combo box now.\n    * @param {webix.$view} el\n    *        The current Webix.$view that was the combo box that just\n    *        changed.\n    */\n   onChangeCombo(fieldID, el) {\n      var allFields = this.CurrentObject.fields();\n      var chosenField = null,\n         sortDir = el.getParentView().getChildViews()[1],\n         // isMultiLingual = el.getParentView().getChildViews()[2],\n         // isMulti = 0,\n         options = null;\n\n      chosenField = allFields.find((f) => f.id == fieldID);\n      if (!chosenField) return;\n\n      switch (chosenField.key) {\n         case \"date\":\n            options = [\n               { id: \"asc\", value: L(\"Before -> After\") },\n               { id: \"desc\", value: L(\"After -> Before\") },\n            ];\n            break;\n         case \"number\":\n            options = [\n               { id: \"asc\", value: L(\"1 -> 9\") },\n               { id: \"desc\", value: L(\"9 -> 1\") },\n            ];\n            break;\n         case \"string\":\n         default:\n            options = [\n               { id: \"asc\", value: L(\"A -> Z\") },\n               { id: \"desc\", value: L(\"Z -> A\") },\n            ];\n            break;\n      }\n\n      sortDir.define(\"options\", options);\n      sortDir.refresh();\n\n      // if (columnConfig.settings.supportMultilingual)\n      //    isMulti = columnConfig.settings.supportMultilingual;\n\n      // isMultiLingual.setValue(isMulti);\n\n      this.refreshFieldList();\n      this.triggerOnChange();\n   }\n\n   /**\n    * @function onShow\n    * Rebuild the form when an onShow() is called.\n    */\n   onShow(view, options) {\n      var sort_form = $$(this.ids.form);\n\n      // clear field options in the form\n      webix.ui(this.uiForm(), sort_form);\n\n      var sorts = this._settings;\n      if (sorts && sorts.forEach) {\n         sorts.forEach((s) => {\n            this.clickAddNewSort(s.key, s.dir);\n         });\n      }\n\n      if (sorts == null || sorts.length == 0) {\n         this.clickAddNewSort();\n      }\n      $$(this.ids.component).show(view, options);\n   }\n\n   /**\n    * @method refreshFieldList\n    * return an updated field list so you cannot duplicate a sort\n    * @param {bool} ignoreRemoveViews\n    *\n    */\n   refreshFieldList(ignoreRemoveViews) {\n      var sort_form = $$(this.ids.form),\n         listFields = this.getFieldList(false),\n         selectedFields = [],\n         removeChildViews = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n               fieldObj = listFields.find((f) => f.id == fieldId);\n\n            if (fieldObj) {\n               // Add selected field to list\n               selectedFields.push(fieldObj);\n            } else {\n               // Add condition to remove\n               removeChildViews.push(cView);\n            }\n         });\n      }\n\n      // Remove filter conditions when column is deleted\n      if (!ignoreRemoveViews) {\n         removeChildViews.forEach(function (cView) {\n            sort_form.removeView(cView);\n         });\n      }\n\n      // Field list should not duplicate field items\n      childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n               fieldObj = listFields.filter(function (f) {\n                  return f.id == fieldId;\n               });\n\n            // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n            var selectedFieldsExcludeCurField = selectedFields.filter(function (\n               x\n            ) {\n               if (Array.isArray(fieldObj) && fieldObj.indexOf(x) !== -1) {\n                  return false;\n               }\n               return true;\n            });\n\n            // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n            var enableFields = listFields.filter(function (x) {\n               if (\n                  Array.isArray(selectedFieldsExcludeCurField) &&\n                  selectedFieldsExcludeCurField.indexOf(x) !== -1\n               ) {\n                  return false;\n               }\n               return true;\n            });\n\n            // Update field list\n            cView.getChildViews()[0].define(\"options\", enableFields);\n            cView.getChildViews()[0].refresh();\n         });\n      }\n   }\n\n   /**\n    * @function triggerOnChange\n    * This parses the sort form to build in order the sorts then saves to the application object workspace\n    */\n   triggerOnChange() {\n      // block .onChange callback\n      if (this._blockOnChange) return;\n\n      this._settings = this.getSettings();\n\n      this.emit(\"changed\", this._settings);\n   }\n\n   blockOnChange() {\n      this._blockOnChange = true;\n   }\n\n   unblockOnChange() {\n      this._blockOnChange = false;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {uuid} fieldId\n    *        the ABField.id we want to prefill the sort with\n    * @param {json} options\n    *        Additional webix.show() options parameters.\n    */\n   show($view, fieldId, options) {\n      this.blockOnChange();\n\n      this.onShow($view, options || null);\n\n      if (fieldId) {\n         this.clickAddNewSort(fieldId);\n      }\n\n      this.unblockOnChange();\n   }\n\n   /**\n    * @function sort()\n    * client sort data in list\n    *\n    * @param {Object} a\n    * @param {Object} b\n    */\n   sort(a, b) {\n      let result = 0;\n\n      const childViews = $$(this.ids.form).getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index || result != 0) return;\n\n            const fieldId = cView.getChildViews()[0].getValue();\n            const dir = cView.getChildViews()[1].getValue();\n\n            const field = this.CurrentObject.fieldByID(fieldId);\n            if (!field) return;\n\n            const by = field.columnName; // column name\n\n            let aValue = a[by],\n               bValue = b[by];\n\n            if (Array.isArray(aValue)) {\n               aValue = (aValue || [])\n                  .map(function (item) {\n                     return item.text || item;\n                  })\n                  .join(\" \");\n            }\n\n            if (Array.isArray(bValue)) {\n               bValue = (bValue ?? [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (aValue != bValue) {\n               if (dir == \"asc\") {\n                  result = aValue > bValue ? 1 : -1;\n               } else {\n                  result = aValue < bValue ? 1 : -1;\n               }\n            }\n         });\n      }\n\n      return result;\n   }\n}\n","const ABViewImageCore = require(\"../../core/views/ABViewImageCore\");\nconst ABViewImageComponent = require(\"./viewComponent/ABViewImageComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewImage extends ABViewImageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewImageComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.filename) {\n         this.warningsMessage(`has no image set`);\n      }\n   }\n};\n","const ABViewKanbanCore = require(\"../../core/views/ABViewKanbanCore\");\nconst ABViewKanbanComponent = require(\"./viewComponent/ABViewKanbanComponent\");\n\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewKanban extends ABViewKanbanCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n\n   component() {\n      return new ABViewKanbanComponent(this);\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewKanbanFormSidePanel\n *\n * Provide a form area for editing data in the Kan Ban view.\n *\n */\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\nconst ABViewForm = require(\"./ABViewForm\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\n\nvar L = null;\n// multilingual Label fn()\n\nmodule.exports = class ABWorkObjectKanBan extends ABViewComponent {\n   constructor(comKanBan, idBase, editFields) {\n      idBase = idBase || `${comKanBan.view?.id}_formSidePanel`;\n      super(idBase, {\n         form: \"\",\n      });\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n\n      this.AB = comKanBan.AB;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.editFields = editFields;\n      // {array}\n      // An array of {ABField.id} that determines which fields should show up\n      // in the editor.\n\n      this._mockApp = this.AB.applicationNew({});\n      // {ABApplication}\n      // Any ABViews we create are expected to be in relation to\n      // an ABApplication, so we create a \"mock\" app for our\n      // workspace views to use to display.\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         id: ids.component,\n         width: 300,\n         hidden: true,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Edit Record\"),\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     align: \"right\",\n                     click: (/* id */) => {\n                        this.hide();\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"scrollview\",\n               body: {\n                  rows: [\n                     {\n                        id: ids.form,\n                        view: \"form\",\n                        borderless: true,\n                        rows: [],\n                     },\n                  ],\n               },\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   hide() {\n      $$(this.ids.component)?.hide();\n\n      this.emit(\"close\");\n   }\n\n   show(data) {\n      $$(this.ids.component)?.show();\n\n      this.refreshForm(data);\n   }\n\n   isVisible() {\n      return $$(this.ids.component)?.isVisible() ?? false;\n   }\n\n   refreshForm(data) {\n      var ids = this.ids;\n      let $formView = $$(ids.form);\n      let CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject || !$formView) return;\n\n      data = data || {};\n\n      let formAttrs = {\n         id: `${this.ids.component}_sideform`,\n         key: ABViewForm.common().key,\n         settings: {\n            columns: 1,\n            labelPosition: \"top\",\n            showLabel: 1,\n            clearOnLoad: 0,\n            clearOnSave: 0,\n            labelWidth: 120,\n            height: 0,\n         },\n      };\n\n      // let form = new ABViewForm(formAttrs, this._mockApp);\n      let form = this.AB.viewNewDetatched(formAttrs);\n\n      form.objectLoad(CurrentObject);\n\n      // Populate child elements\n      CurrentObject.fields().forEach((f, index) => {\n         // if this is one of our .editFields\n         if (!this.editFields || this.editFields.indexOf(f.id) > -1) {\n            form.addFieldToForm(f, index);\n         }\n      });\n\n      // add default button (Save button)\n      form._views.push(\n         new ABViewFormButton(\n            {\n               settings: {\n                  includeSave: true,\n                  includeCancel: false,\n                  includeReset: false,\n               },\n               position: {\n                  y: CurrentObject.fields().length, // yPosition\n               },\n            },\n            this._mockApp,\n            form\n         )\n      );\n\n      // add temp id to views\n      form._views.forEach(\n         (v, index) => (v.id = `${form.id}_${v.key}_${index}`)\n      );\n\n      let formCom = form.component(this.AB._App);\n\n      // Rebuild form\n      webix.ui(formCom.ui().rows.concat({}), $formView);\n      webix.extend($formView, webix.ProgressBar);\n\n      formCom.init(\n         this.AB,\n         2,\n         {\n            onBeforeSaveData: () => {\n               // get update data\n               var formVals = form.getFormValues($formView, CurrentObject);\n\n               // validate data\n               if (!form.validateData($formView, CurrentObject, formVals))\n                  return false;\n\n               // show progress icon\n               $formView?.showProgress({ type: \"icon\" });\n\n               if (formVals.id) {\n                  CurrentObject.model()\n                     .update(formVals.id, formVals)\n                     .then((updateVals) => {\n                        this.emit(\"update\", updateVals);\n                        // _logic.callbacks.onUpdateData(updateVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():update(): Error updating value\",\n                           formVals,\n                        });\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n               // else add new row\n               else {\n                  CurrentObject.model()\n                     .create(formVals)\n                     .then((newVals) => {\n                        // _logic.callbacks.onAddData(newVals);\n                        this.emit(\"add\", newVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():.create(): Error creating value\",\n                           formVals,\n                        });\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n\n               return false;\n            },\n         },\n         2 /* NOTE: if you can see this KanBan, you should be able to see the side form? */\n      );\n\n      // display data\n      $formView.clear();\n      $formView.parse(data);\n\n      formCom.onShow(data);\n   }\n};\n","const ABViewLabelCore = require(\"../../core/views/ABViewLabelCore\");\nconst ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABViewLabel extends ABViewLabelCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLabelComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABViewLayoutCore = require(\"../../core/views/ABViewLayoutCore\");\nconst ABViewLayoutComponent = require(\"./viewComponent/ABViewLayoutComponent\");\n\nmodule.exports = class ABViewLayout extends ABViewLayoutCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLayoutComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (this._views.length == 0) {\n         this.warningsMessage(\"has no columns set.\");\n      }\n   }\n};\n","const ABViewListCore = require(\"../../core/views/ABViewListCore\");\nconst ABViewListComponent = require(\"./viewComponent/ABViewListComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewList extends ABViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewListComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewMenuCore = require(\"../../core/views/ABViewMenuCore\");\nconst ABViewMenuComponent = require(\"./viewComponent/ABViewMenuComponent\");\n\nmodule.exports = class ABViewMenu extends ABViewMenuCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewMenuComponent(this);\n   }\n};\n","const ABViewPDFImporterCore = require(\"../../core/views/ABViewPDFImporterCore\");\nconst ABViewPDFImporterComponent = require(\"./viewComponent/ABViewPDFImporterComponent\");\n\nmodule.exports = class ABViewPDFImporter extends ABViewPDFImporterCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPDFImporterComponent(this);\n   }\n};\n","const ABViewPageCore = require(\"../../core/views/ABViewPageCore\");\n\nconst ABPropertyComponentDefaults = ABViewPageCore.defaultValues();\n\nmodule.exports = class ABViewPage extends ABViewPageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var component = super.component();\n\n      component._ui = component.ui();\n\n      // wrap our ABViewContainer in our Page scrollview\n      component.ui = () => {\n         return {\n            view: \"scrollview\",\n            borderless: true,\n            css:\n               this.settings.pageBackground ||\n               ABPropertyComponentDefaults.pageBackground,\n            body: component._ui,\n         };\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               accessLevel = accessLevel ?? this.getUserAccess();\n               return newComponent.init(this.AB, accessLevel, options);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no sub views\");\n      }\n\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABViewPivotCore = require(\"../../core/views/ABViewPivotCore\");\nconst ABViewPivotComponent = require(\"./viewComponent/ABViewPivotComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPivot extends ABViewPivotCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPivotComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewReportsManagerCore = require(\"../../core/views/ABViewReportsManagerCore\");\nconst ABViewReportsManagerComponent = require(\"./viewComponent/ABViewReportsManagerComponent\");\n\nmodule.exports = class ABViewReportsManager extends ABViewReportsManagerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewReportsManagerComponent(this);\n   }\n};\n","const ABViewSchedulerCore = require(\"../../core/views/ABViewSchedulerCore\");\nconst ABViewSchedulerComponent = require(\"./viewComponent/ABViewSchedulerComponent\");\n\nmodule.exports = class ABViewScheduler extends ABViewSchedulerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewSchedulerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n   }\n};\n","const ABViewTabCore = require(\"../../core/views/ABViewTabCore\");\n\nconst ABViewTabComponent = require(\"./viewComponent/ABViewTabComponent\");\n\nmodule.exports = class ABViewTab extends ABViewTabCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTabComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no tabs set\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (this.views() || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","const ABViewTextCore = require(\"../../core/views/ABViewTextCore\");\n\nconst ABViewTextComponent = require(\"./viewComponent/ABViewTextComponent\");\n\nmodule.exports = class ABViewText extends ABViewTextCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(parentId) {\n      return new ABViewTextComponent(this, parentId);\n   }\n};\n","const ABViewWidgetCore = require(\"../../core/views/ABViewWidgetCore\");\n\nconst ABPropertyComponentDefaults = ABViewWidgetCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewWidget extends ABViewWidgetCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let base = super.component(App);\n\n      base.onShow = (viewId) => {\n         let dv = this.datacollection; // get from a function or a (get) property\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n      };\n\n      return base;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCSVExporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVExporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               buttonFilter: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.clientFilter = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            type: \"clean\",\n            borderless: true,\n            cols: [\n               {\n                  id: ids.buttonFilter,\n                  view: \"button\",\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"fa fa-filter\",\n                  borderless: true,\n                  width: 50,\n                  label: \"\",\n                  click: () => {\n                     this.showFilterPopup();\n                  },\n               },\n               {\n                  id: ids.button,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-download\",\n                  borderless: true,\n                  width: settings.width || defaultSettings.width,\n                  label: settings.buttonLabel ?? defaultSettings.buttonLabel,\n                  click: () => {\n                     this.downloadCsvFile();\n                  },\n               },\n               { fillspace: true },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      if (!this.clientFilter) {\n         const clientFilter = AB.filterComplexNew(this.ids.filterComplex);\n\n         const dc = this.datacollection;\n\n         if (dc) {\n            const obj = dc.datasource;\n\n            clientFilter.fieldsLoad(obj?.fields?.() ?? []);\n         }\n\n         clientFilter.init();\n         clientFilter.on(\"change\", (val) => {\n            this.onFilterChange(val);\n         });\n\n         this.clientFilter = clientFilter;\n      }\n   }\n\n   downloadCsvFile() {\n      let url = `/appbuilder/csv-export/${this.view.id}`;\n\n      const where = this.clientFilter.getValue();\n\n      if ((where?.rules || []).length) {\n         let qsWhere = JSON.stringify(where);\n\n         qsWhere = encodeURIComponent(qsWhere);\n         url = `${url}?where=${qsWhere}`;\n      }\n\n      window.open(url);\n   }\n\n   showFilterPopup() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      this.clientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n   }\n\n   onFilterChange() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      if (!$buttonFilter) return;\n\n      const where = this.clientFilter.getValue();\n\n      $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n      $buttonFilter.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst CSVImporter = require(\"../../CSVImporter\");\n\nmodule.exports = class ABViewCSVImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVImporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               popup: \"\",\n\n               form: \"\",\n               uploader: \"\",\n               uploadFileList: \"\",\n               separatedBy: \"\",\n               headerOnFirstLine: \"\",\n               columnList: \"\",\n\n               search: \"\",\n               datatable: \"\",\n\n               statusMessage: \"\",\n               progressBar: \"\",\n\n               linkedDataButton: \"\",\n               importButton: \"\",\n               rules: \"\",\n            },\n            ids\n         )\n      );\n\n      this.csvImporter = new CSVImporter((...args) => this.label(...args));\n      // {CSVImporter}\n      // An instance of the object that imports the CSV data.\n\n      this.validationError = false;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n   }\n\n   ui() {\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-upload\",\n                  label: this.label(\n                     settings.buttonLabel || defaultSettings.buttonLabel\n                  ),\n                  width: settings.width || defaultSettings.width,\n                  click: () => {\n                     this.showPopup();\n                  },\n               },\n               {\n                  fillspace: true,\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiConfig() {\n      const ids = this.ids;\n\n      return {\n         id: ids.form,\n         view: \"form\",\n         type: \"clean\",\n         borderless: true,\n         minWidth: 400,\n         gravity: 1,\n         elements: [\n            {\n               rows: [\n                  {\n                     id: ids.uploader,\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     css: \"webix_primary\",\n                     value: this.label(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           this._csvFileInfo = fileInfo;\n\n                           return this.loadCsvFile();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     padding: 10,\n                     rows: [\n                        {\n                           id: ids.separatedBy,\n                           view: \"richselect\",\n                           name: \"separatedBy\",\n                           label: this.label(\"Separated by\"),\n                           labelWidth: 140,\n                           options: this.csvImporter.getSeparateItems(),\n                           value: \",\",\n                           on: {\n                              onChange: () => {\n                                 this.loadCsvFile();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.headerOnFirstLine,\n                           view: \"checkbox\",\n                           name: \"headerOnFirstLine\",\n                           label: this.label(\"Header on first line\"),\n                           labelWidth: 140,\n                           disabled: true,\n                           value: true,\n                           on: {\n                              onChange: (/*newVal, oldVal*/) => {\n                                 this.populateColumnList();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           minHeight: 300,\n                           body: {\n                              padding: 10,\n                              id: ids.columnList,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiRecordsView() {\n      const ids = this.ids;\n\n      return {\n         gravity: 2,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"bg_gray\",\n               cols: [\n                  { width: 5 },\n                  {\n                     id: ids.search,\n                     view: \"search\",\n                     value: \"\",\n                     label: \"\",\n                     placeholder: this.label(\"Search records...\"),\n                     keyPressTimeout: 200,\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.search($$(ids.search).getValue());\n                        },\n                     },\n                  },\n                  { width: 2 },\n               ],\n            },\n            {\n               id: ids.datatable,\n               view: \"datatable\",\n               resizeColumn: true,\n               editable: true,\n               editaction: \"dblclick\",\n               css: \"ab-csv-importer\",\n               borderless: false,\n               tooltip: (obj) => {\n                  const tooltip = obj._errorMsg\n                     ? obj._errorMsg\n                     : \"No validation errors\";\n                  return tooltip;\n               },\n               minWidth: 650,\n               columns: [],\n               on: {\n                  onValidationError: (id, obj, details) => {\n                     // console.log(`item ${id} invalid`);\n                     let errors = \"\";\n\n                     Object.keys(details).forEach((key) => {\n                        this.$view.complexValidations[key].forEach((err) => {\n                           errors += err.invalidMessage + \"</br>\";\n                        });\n                     });\n\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"invalid\",\n                        _errorMsg: errors,\n                     });\n                     $dt.unblockEvent();\n\n                     this.validationError = true;\n                  },\n                  onValidationSuccess: (id, obj, details) => {\n                     // console.log(`item ${id} valid`);\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"valid\",\n                        _errorMsg: \"\",\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = false;\n                  },\n                  onCheck: () => {\n                     const selected = $$(ids.datatable).find({\n                        _included: true,\n                     });\n                     const $importButton = $$(ids.importButton);\n\n                     $importButton.setValue(this.labelImport(selected));\n\n                     if (this.overLimitAlert(selected)) $importButton.disable();\n                     else $importButton.enable();\n                  },\n               },\n            },\n            {\n               id: ids.progressBar,\n               height: 6,\n            },\n            {\n               cols: [\n                  {\n                     id: ids.linkedDataButton,\n                     view: \"button\",\n                     label: this.label(\"Linked Data\"),\n                     type: \"icon\",\n                     icon: \"fa fa-info\",\n                     maxWidth: 180,\n                     click: () => {\n                        this.showLinkedData();\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     name: \"import\",\n                     id: ids.importButton,\n                     label: this.label(\"Import\"),\n                     css: \"webix_primary\",\n                     disabled: true,\n                     type: \"icon\",\n                     icon: \"fa fa-upload\",\n                     click: () => {\n                        this.import();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n\n      return {\n         id: ids.popup,\n         view: \"window\",\n         hidden: true,\n         position: \"center\",\n         modal: true,\n         resize: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"label\",\n                  label: this.label(\"CSV Importer\"),\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  type: \"line\",\n                  cols: [\n                     this.uiConfig(),\n                     { width: 20 },\n                     this.uiRecordsView(),\n                     { width: 1 },\n                  ],\n               },\n               {\n                  id: ids.statusMessage,\n                  view: \"label\",\n                  align: \"right\",\n                  hidden: true,\n               },\n               {\n                  hidden: true,\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: this.label(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     /*,\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: labels.component.import,\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              _logic.import();\n                           }\n                        }*/\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      // Populate values to rules\n\n      const dc = this.datacollection;\n\n      if (dc) this.objectLoad(dc.datasource);\n\n      const abWebix = AB.Webix;\n\n      abWebix.ui(this.uiPopup());\n\n      const $form = $$(ids.form);\n\n      if ($form) abWebix.extend($form, abWebix.ProgressBar);\n\n      const $progressBar = $$(ids.progressBar);\n\n      if ($progressBar) abWebix.extend($progressBar, abWebix.ProgressBar);\n   }\n\n   showPopup() {\n      const ids = this.ids;\n\n      $$(ids.popup)?.show();\n\n      this.formClear();\n\n      // open file dialog to upload\n      $$(ids.uploader).fileDialog();\n   }\n\n   hide() {\n      $$(this.ids.popup)?.hide();\n   }\n\n   formClear() {\n      const ids = this.ids;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n\n      const $form = $$(ids.form);\n\n      $form.clearValidation();\n      $form.clear();\n\n      $$(ids.separatedBy).setValue(\",\");\n\n      this.AB.Webix.ui([], $$(ids.columnList));\n\n      $$(ids.headerOnFirstLine).disable();\n      $$(ids.importButton).disable();\n\n      $$(ids.search).setValue(\"\");\n      $$(ids.uploadFileList).clearAll();\n      $$(ids.datatable).clearAll();\n\n      const $statusMessage = $$(ids.statusMessage);\n\n      $statusMessage.setValue(\"\");\n      $statusMessage.hide();\n   }\n\n   search(searchText) {\n      const $datatable = $$(this.ids.datatable);\n\n      if (!$datatable) return;\n\n      searchText = (searchText || \"\").toLowerCase();\n\n      const matchFields = this.getMatchFields();\n\n      $datatable.filter((row) => {\n         let exists = false;\n\n         (matchFields || []).forEach((f) => {\n            if (exists) return;\n\n            exists =\n               (row[`${f.columnIndex}`] || \"\")\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(searchText) > -1;\n         });\n\n         return exists;\n      });\n   }\n\n   statusTemplate(item) {\n      let template = \"\";\n\n      if (!item) return template;\n\n      switch (item._status) {\n         case \"in-progress\":\n            template = \"<span class='fa fa-refresh'></span>\";\n            break;\n         case \"invalid\":\n            template = \"<span class='fa fa-exclamation-triangle'></span>\";\n            break;\n         case \"valid\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"done\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"fail\":\n            template = \"<span class='fa fa-remove'></span>\";\n            break;\n      }\n\n      return template;\n   }\n\n   async loadCsvFile() {\n      const _csvFileInfo = this._csvFileInfo;\n\n      if (!_csvFileInfo) return false;\n\n      const csvImporter = this.csvImporter;\n\n      if (!csvImporter.validateFile(_csvFileInfo)) {\n         this.AB.Webix.alert({\n            title: this.label(\"This file extension is not allowed\"),\n            text: this.label(\"Please only upload CSV files\"),\n            ok: this.label(\"Ok\"),\n         });\n\n         return false;\n      }\n\n      const ids = this.ids;\n\n      // show loading cursor\n      const $form = $$(ids.form);\n\n      $form?.showProgress?.({ type: \"icon\" });\n\n      // read CSV file\n      const $headerOnFirstLine = $$(ids.headerOnFirstLine);\n      const $importButton = $$(ids.importButton);\n\n      $headerOnFirstLine.enable();\n      $importButton.enable();\n\n      this._dataRows = await csvImporter.getDataRows(\n         _csvFileInfo,\n         $$(ids.separatedBy).getValue()\n      );\n\n      const _dataRows = this._dataRows;\n\n      let length = _dataRows.length;\n\n      if ($headerOnFirstLine.getValue()) length = _dataRows.length - 1;\n\n      $importButton.setValue(this.labelImport(length));\n      this.populateColumnList();\n      $form?.hideProgress?.();\n\n      return true;\n   }\n\n   removeCsvFile(fileId) {\n      $$(this.ids.uploadFileList).remove(fileId);\n      this.formClear();\n\n      return true;\n   }\n\n   populateColumnList() {\n      const self = this;\n      const ids = this.ids;\n      const abWebix = this.AB.Webix;\n\n      // clear list\n      const $columnList = $$(ids.columnList);\n\n      abWebix.ui([], $columnList);\n\n      const _dataRows = this._dataRows;\n\n      if (!_dataRows) return;\n\n      // check first line of CSV\n      const firstLine = _dataRows[0];\n\n      if (!firstLine) return;\n\n      const csvColumnList = [];\n      const fieldList = [];\n      const currentObject = this.CurrentObject;\n\n      if (currentObject)\n         fieldList.push(\n            ...currentObject.fields((f) => {\n               // available fields\n               if (\n                  this.settings.availableFieldIds?.length &&\n                  this.settings.availableFieldIds.indexOf(f.id) < 0\n               ) {\n                  return false;\n               }\n\n               // filter editable fields\n               const formComp = f.formComponent();\n\n               if (!formComp) return true;\n\n               const formConfig = formComp.common();\n\n               if (!formConfig) return true;\n\n               return formConfig.key != \"fieldreadonly\";\n            })\n         );\n\n      const csvImporter = this.csvImporter;\n\n      // check first line be header columns\n      if ($$(ids.headerOnFirstLine).getValue())\n         csvColumnList.push(\n            ...firstLine.map((colName, index) => {\n               return {\n                  id: index + 1, // webix .options list disallow value 0\n                  value: colName,\n                  key: csvImporter.getGuessDataType(_dataRows, index),\n               };\n            })\n         );\n      else\n         firstLine.forEach((e, i) => {\n            csvColumnList.push({\n               id: i + 1, // webix .options list disallow value 0\n               value: this.label(\"Column {0}\", [i + 1]),\n               key: csvImporter.getGuessDataType(_dataRows, i),\n            });\n         });\n\n      // Add unselect item\n      csvColumnList.unshift({\n         id: \"none\",\n         value: this.label(\"None\"),\n      });\n\n      // populate columns to UI\n      const uiColumns = [];\n      const selectedCsvCols = [];\n\n      fieldList.forEach((f) => {\n         // match up by data type\n         const matchCol = csvColumnList.filter(\n            (c) => c.key == f.key && selectedCsvCols.indexOf(c.id) < 0\n         )[0];\n\n         let selectVal = \"none\";\n\n         if (matchCol) {\n            selectVal = matchCol.id;\n\n            // cache\n            selectedCsvCols.push(selectVal);\n         }\n\n         let columnOptUI = {\n            view: \"richselect\",\n            gravity: 2,\n            options: csvColumnList,\n            fieldId: f.id,\n            abName: \"columnIndex\",\n            value: selectVal,\n            on: {\n               onChange: function () {\n                  self.toggleLinkFields(this);\n                  self.loadDataToGrid();\n               },\n            },\n         };\n\n         // Add date format options\n         if (f.key === \"date\") {\n            const dateSeparatorOptions = [\"/\", \"-\", \".\", \",\", \" \"];\n            const dayFormatOptions = [\n               { value: this.label(\"1 to 31\"), id: \"D\" },\n               { value: this.label(\"01 to 31\"), id: \"DD\" },\n            ];\n            const monthFormatOptions = [\n               { value: this.label(\"1 to 12\"), id: \"M\" },\n               { value: this.label(\"01 to 12\"), id: \"MM\" },\n            ];\n            const yearFormatOptions = [\n               { value: this.label(\"00 to 99\"), id: \"YY\" },\n               { value: this.label(\"2000 to 2099\"), id: \"YYYY\" },\n            ];\n            const dateOrderOptions = [\n               {\n                  value: this.label(\"D-M-Y\"),\n                  id: 1,\n               },\n               {\n                  value: this.label(\"M-D-Y\"),\n                  id: 2,\n               },\n               {\n                  value: this.label(\"Y-M-D\"),\n                  id: 3,\n               },\n               {\n                  value: this.label(\"Y-D-M\"),\n                  id: 4,\n               },\n            ];\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Separator\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"separator\",\n                     abName: \"columnDateFormat\",\n                     options: dateSeparatorOptions,\n                     value: \"/\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Day\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"day\",\n                     abName: \"columnDateFormat\",\n                     options: dayFormatOptions,\n                     value: \"D\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Month\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"month\",\n                     abName: \"columnDateFormat\",\n                     options: monthFormatOptions,\n                     value: \"M\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Year\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"year\",\n                     abName: \"columnDateFormat\",\n                     options: yearFormatOptions,\n                     value: \"YY\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Order\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"order\",\n                     abName: \"columnDateFormat\",\n                     options: dateOrderOptions,\n                     value: 1,\n                  },\n               ],\n            };\n         }\n\n         // Add connected field options\n         if (f.isConnection) {\n            let linkFieldOptions = [];\n\n            if (f.datasourceLink) {\n               linkFieldOptions = f.datasourceLink\n                  .fields((fld) => !fld.isConnection)\n                  .map((fld) => {\n                     return {\n                        id: fld.id,\n                        value: fld.label,\n                     };\n                  });\n            }\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: \"=\",\n                     labelWidth: 20,\n                     abName: \"columnLinkData\",\n                     hidden: true,\n                     options: linkFieldOptions,\n                     value: linkFieldOptions[0] ? linkFieldOptions[0].id : null,\n                  },\n               ],\n            };\n         }\n\n         uiColumns.push({\n            view: \"layout\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"template\",\n                  gravity: 1,\n                  borderless: true,\n                  css: { \"padding-top\": 10 },\n                  template: `<span class=\"fa fa-${f.icon}\"></span> ${f.label}`,\n               },\n               columnOptUI,\n            ],\n         });\n      });\n      abWebix.ui(uiColumns, $columnList);\n\n      this.loadDataToGrid();\n   }\n\n   toggleLinkFields($columnOption) {\n      if (!$columnOption) return;\n\n      const $optionPanel = $columnOption.getParentView();\n      const $linkFieldOption = $optionPanel.queryView(\n         { abName: \"columnLinkData\" },\n         \"all\"\n      )[0];\n\n      if (!$linkFieldOption) return;\n\n      if ($columnOption.getValue() === \"none\") $linkFieldOption.hide();\n      else $linkFieldOption.show();\n   }\n\n   overLimitAlert(data) {\n      const limit = 1000;\n\n      if (data.length > limit) {\n         // we only allow 1000 record imports\n         this.AB.Webix.alert({\n            title: this.label(\"Too many records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"Due to browser limitations we only allow imports of {0} records. Please upload a new CSV or deselect records to import.\",\n               [limit]\n            ),\n         });\n\n         return true;\n      }\n\n      return false;\n   }\n\n   loadDataToGrid() {\n      const ids = this.ids;\n      const $datatable = $$(ids.datatable);\n      const ab = this.AB;\n\n      if (!$datatable) return;\n\n      $datatable.clearAll();\n\n      // show loading cursor\n      $datatable.showProgress?.({ type: \"icon\" });\n\n      /** Prepare Columns */\n      const matchFields = this.getMatchFields();\n      const columns = [];\n\n      // add \"status\" column\n      columns.push({\n         id: \"_status\",\n         header: \"\",\n         template: this.statusTemplate,\n         width: 30,\n      });\n\n      // add \"checkbox\" column\n      columns.push({\n         id: \"_included\",\n         header: { content: \"masterCheckbox\" },\n         template: \"{common.checkbox()}\",\n         width: 30,\n      });\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      // populate columns\n      (matchFields || []).forEach((f) => {\n         let validationRules = f.field.settings.validationRules;\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (validationRules && typeof validationRules === \"string\")\n            validationRules = JSON.parse(validationRules);\n\n         if (validationRules?.length) {\n            const validationUI = [];\n\n            // there could be more than one so lets loop through and build the UI\n            validationRules.forEach((rule) => {\n               const Filter = ab.filterComplexNew(\n                  `${f.field.id}_${ab.Webix.uid()}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               validationUI.push(Filter.ui);\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.field.id,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n                  columnIndex: f.columnIndex,\n               });\n            });\n\n            // create a unique view id for popup\n            const popUpId = `${ids.rules}_${f.field.id}_${ab.Webix.uid()}`;\n\n            // store the popup ids so we can remove the later\n            rulePops.push(popUpId);\n            // add the popup to the UI but don't show it\n            ab.Webix.ui({\n               view: \"popup\",\n               css: \"ab-rules-popup\",\n               id: popUpId,\n               body: {\n                  rows: validationUI,\n               },\n            });\n         }\n\n         const editor = f.field?.key == \"number\" ? \"number\" : \"text\";\n\n         columns.push({\n            id: f.columnIndex,\n            header: f.field.label,\n            editor: editor,\n            template: (obj, common, value /*, col, ind */) =>\n               value.replace(/[<]/g, \"&lt;\"),\n            minWidth: 150,\n            fillspace: true,\n         });\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(App);\n            f.filter.fieldsLoad(this.CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $datatable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n               columnIndex: f.columnIndex,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $datatable.$view.complexValidations = complexValidations;\n\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n\n               $datatable.$view.complexValidations[key].forEach((filter) => {\n                  const rowValue = {};\n                  // use helper funtion to check if valid\n                  // map the column names to the index numbers of data\n                  // reformat data to display\n\n                  (matchFields || []).forEach((f) => {\n                     const record = data[f.columnIndex];\n\n                     if (\n                        f.field.key === \"date\" &&\n                        record.includes(\"Invalid date\")\n                     )\n                        isValid = false;\n\n                     rowValue[f.field.id] = record;\n                  });\n\n                  const ruleValid = filter.filters(rowValue);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     // this.AB.Webix.message({\n                     //    type: \"error\",\n                     //    text: invalidMessage\n                     // });\n                  }\n               });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $datatable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $datatable.config.rulePops = rulePops;\n         $datatable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($datatable.config.rulePops) {\n            $datatable.config.rulePops.forEach((popup) => {\n               const $popup = $$(popup);\n\n               if (!$popup) return;\n\n               $popup.destructor();\n            });\n         }\n\n         // remove any validation rules from the previous table\n         $datatable.define(\"rules\", {});\n         $datatable.refresh();\n      }\n\n      /** Prepare Data */\n      const parsedData = [];\n\n      (this._dataRows || []).forEach((row, index) => {\n         const rowValue = {\n            id: index + 1,\n         };\n\n         // reformat data to display\n         (matchFields || []).forEach((f) => {\n            const data = row[f.columnIndex - 1];\n\n            if (f.field.key === \"date\") {\n               // let dateFormat = moment(data, f.format).format(\n               //    \"YYYY-MM-DD\"\n               // );\n               // debugger;\n               let dateFormat = ab.rules.toDate(data, {\n                  format: f.format,\n               });\n               dateFormat = ab.rules.toDateFormat(dateFormat, {\n                  format: \"YYYY-MM-DD\",\n               });\n\n               if (dateFormat === \"Invalid date\")\n                  dateFormat = dateFormat + \" - \" + data;\n\n               rowValue[f.columnIndex] = dateFormat;\n            } else rowValue[f.columnIndex] = data; // array to object\n         });\n\n         // insert \"true\" value of checkbox\n         rowValue[\"_included\"] = true;\n\n         parsedData.push(rowValue);\n      });\n\n      // skip the first line\n      const isSkipFirstLine = $$(ids.headerOnFirstLine).getValue();\n\n      if (isSkipFirstLine && parsedData.length > 1) parsedData.shift();\n\n      const $importButton = $$(ids.importButton);\n\n      $importButton.setValue(this.labelImport(parsedData));\n      $datatable.refreshColumns(columns);\n      $datatable.parse(parsedData);\n\n      if (this.overLimitAlert(parsedData)) $importButton.disable();\n      else $importButton.enable();\n\n      // hide loading cursor\n      $datatable.hideProgress?.();\n   }\n\n   refreshRemainingTimeText(startUpdateTime, total, index) {\n      const ids = this.ids;\n\n      // Calculate remaining time\n      const spentTime = new Date() - startUpdateTime; // milliseconds that has passed since last completed record since start\n\n      const averageRenderTime = spentTime / index; // average milliseconds per single render at this point\n\n      const remainTime = averageRenderTime * (total - index);\n\n      let result = \"\";\n\n      // Convert milliseconds to a readable string\n      const days = (remainTime / 86400000).toFixed(0);\n      const hours = (remainTime / 3600000).toFixed(0);\n      const minutes = (remainTime / 60000).toFixed(0);\n      const seconds = (remainTime / 1000).toFixed(0);\n\n      if (seconds < 1) result = \"\";\n      else if (seconds < 60)\n         result = this.label(\"Approximately {0} second(s) remaining\", [\n            seconds,\n         ]);\n      // result = `Approximately ${seconds} second${\n      //    seconds > 1 ? \"s\" : \"\"\n      // }`;\n      else if (minutes == 1)\n         result = this.label(\"Approximately 1 minute {0} seconds remaining\", [\n            seconds - 60,\n         ]);\n      // result = `Approximately 1 minute ${seconds - 60} seconds`;\n      else if (minutes < 60)\n         result = this.label(\"Approximately {0} minutes remaining\", [minutes]);\n      else if (hours < 24)\n         result = this.label(\"Approximately {0} hour(s) remaining\", [hours]);\n      else result = this.label(\"Approximately {0} day(s) remaining\", [days]);\n\n      if (result) {\n         $$(ids.importButton)?.setValue(result);\n      } else {\n         const selected = $$(ids.datatable)?.find({ _included: true });\n         $$(ids.importButton)?.setValue(this.labelImport(selected));\n      }\n   }\n\n   /**\n    * @method getMatchFields\n    *\n    * @return {Object} - [\n    *                      {\n    *                         columnIndex: {number},\n    *                         field: {ABField},\n    *                         searchField: {ABField} [optional]\n    *                      },\n    *                      ...\n    *                    ]\n    */\n   getMatchFields() {\n      const result = [];\n      const ids = this.ids;\n\n      // get richselect components\n      const $selectorViews = $$(ids.columnList)\n         .queryView({ abName: \"columnIndex\" }, \"all\")\n         .filter((selector) => selector.getValue() != \"none\");\n\n      ($selectorViews || []).forEach(($selector) => {\n         const currentObject = this.CurrentObject;\n\n         if (!currentObject) return;\n\n         // webix .options list disallow value 0\n         const field = currentObject.fieldByID($selector.config.fieldId);\n\n         if (!field) return;\n\n         const colIndex = $selector.getValue();\n         const fieldData = {\n            columnIndex: colIndex,\n            field: field,\n         };\n\n         if (field.key === \"date\") {\n            const $optionPanel = $selector.getParentView();\n            const $dateFormatSelectors = $optionPanel.queryView(\n               { abName: \"columnDateFormat\" },\n               \"all\"\n            );\n\n            // define the column to compare data to search .id\n            if ($dateFormatSelectors) {\n               $dateFormatSelectors.forEach((selector) => {\n                  fieldData[selector.config.name] = selector.getValue();\n               });\n\n               // convert all dates into mysql date format YYYY-DD-MM\n               let format;\n\n               switch (fieldData.order) {\n                  case \"1\":\n                     format =\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"2\":\n                     format =\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"3\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day;\n                     break;\n                  case \"4\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month;\n               }\n\n               fieldData.format = format;\n            }\n         }\n\n         if (field.isConnection) {\n            const $optionPanel = $selector.getParentView();\n            const $linkDataSelector = $optionPanel.queryView(\n               { abName: \"columnLinkData\" },\n               \"all\"\n            )[0];\n\n            // define the column to compare data to search .id\n            if ($linkDataSelector) {\n               const searchField = field.datasourceLink.fieldByID(\n                  $linkDataSelector.getValue()\n               );\n\n               fieldData.searchField = searchField;\n            }\n         }\n\n         result.push(fieldData);\n      });\n\n      return result;\n   }\n\n   labelImport(selected) {\n      let length = selected;\n\n      if (Array.isArray(selected)) length = selected.length;\n\n      return this.label(\"Import {0} Records\", [length]);\n   }\n\n   /**\n    * @method import\n    *\n    * @return {Promise}\n    */\n   async import() {\n      // if (dv == null) return Promise.resolve();\n\n      // // get ABObject\n      // let obj = dv.datasource;\n\n      // Make sure we are connected to an Object\n      const currentObject = this.CurrentObject;\n\n      if (!currentObject) return;\n\n      // get ABModel\n      // let model = dv.model;\n      // if (model == null) return Promise.resolve();\n\n      const ids = this.ids;\n      const $importButton = $$(ids.importButton);\n\n      $importButton.disable();\n\n      // Show loading cursor\n      const $form = $$(ids.form);\n      const $progressBar = $$(ids.progressBar);\n\n      $form.showProgress({ type: \"icon\" });\n      $progressBar.showProgress({\n         type: \"top\",\n         position: 0.0001,\n      });\n\n      // get richselect components\n      const matchFields = this.getMatchFields();\n\n      // Get object's model\n      const objModel = currentObject.model();\n      const $datatable = $$(ids.datatable);\n      const selectedRows = $datatable.find({ _included: true });\n\n      let _currProgress = 0;\n\n      const increaseProgressing = () => {\n         _currProgress += 1;\n         $progressBar.showProgress({\n            type: \"bottom\",\n            position: _currProgress / selectedRows.length,\n         });\n      };\n      const itemFailed = (itemId, errMessage) => {\n         if ($datatable) {\n            // set \"fail\" status\n            $datatable.addRowCss(itemId, \"row-fail\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"fail\",\n               _errorMsg: errMessage,\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n\n         console.error(errMessage);\n      };\n      const abWebix = this.AB.Webix;\n      const itemInvalid = (itemId, errors = []) => {\n         if ($datatable) {\n            // combine all error messages to display in tooltip\n            const errorMsg = [];\n            // mark which column are invalid\n            errors.forEach((err) => {\n               if (!err?.name) return;\n\n               const fieldInfo = matchFields.filter(\n                  (f) => f.field && f.field.columnName == err.name\n               )[0];\n\n               errorMsg.push(err.name + \": \" + err.message);\n               // we also need to define an error message\n               // abWebix.message({\n               //    type: \"error\",\n               //    text: err.name + \": \" + err.message\n               // });\n            });\n\n            // set \"fail\" status\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"invalid\",\n               _errorMsg: errorMsg.join(\"</br>\"),\n            });\n            $datatable.unblockEvent();\n            $datatable.addRowCss(itemId, \"webix_invalid\");\n         }\n         // increaseProgressing();\n      };\n      const itemPass = (itemId) => {\n         if ($datatable) {\n            // set \"done\" status\n            $datatable.removeRowCss(itemId, \"row-fail\");\n            $datatable.addRowCss(itemId, \"row-pass\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"done\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n      };\n      const itemValid = (itemId) => {\n         if ($datatable) {\n            // mark all columns valid (just in case they were invalid before)\n            // matchFields.forEach((f) => {\n            //    $datatable.removeCellCss(\n            //       itemId,\n            //       f.columnIndex,\n            //       \"webix_invalid_cell\"\n            //    );\n            // });\n            // highlight the row\n            $datatable.removeRowCss(itemId, \"webix_invalid\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n            // $datatable.addRowCss(itemId, \"row-pass\");\n         }\n      };\n      const $statusMessage = $$(ids.statusMessage);\n      const uiCleanUp = () => {\n         // To Do anyUI updates\n         // console.log(\"ui clean up now\");\n         $importButton.enable();\n\n         // Hide loading cursor\n         $form.hideProgress();\n         $progressBar.hideProgress();\n\n         $statusMessage.setValue(\"\");\n         $statusMessage.hide();\n\n         const selected = $datatable.find({ _included: true });\n\n         $importButton.setValue(this.labelImport(selected));\n         this.emit(\"done\");\n      };\n\n      const validRows = [];\n\n      let allValid = true;\n\n      // Pre Check Validations of whole CSV import\n      // update row to green if valid\n      // update row to red if !valid\n      (selectedRows || []).forEach((data, index) => {\n         const newRowData = this.getParentValues();\n\n         matchFields.forEach((f) => {\n            if (!f.field?.key) return;\n\n            switch (f.field.key) {\n               // case \"connectObject\":\n               //    // skip\n               //    break;\n               case \"number\":\n                  if (typeof data[f.columnIndex] !== \"number\") {\n                     newRowData[f.field.columnName] = (\n                        data[f.columnIndex] || \"\"\n                     ).replace(/[^-0-9.]/gi, \"\");\n\n                     break;\n                  }\n\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n\n               default:\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n            }\n         });\n\n         let isValid = false;\n         let errorMsg = \"\";\n\n         // first check legacy and server side validation\n         const validator = currentObject.isValidData(newRowData);\n\n         isValid = validator.pass();\n         errorMsg = validator.errors;\n\n         if (isValid)\n            // now check complex field validation rules\n            isValid = $datatable.validate(data.id);\n         else {\n            allValid = false;\n\n            itemInvalid(data.id, errorMsg);\n         }\n\n         if (isValid) {\n            itemValid(data.id);\n            validRows.push({ id: data.id, data: newRowData });\n         } else allValid = false;\n\n         // $datatable.unblockEvent();\n      });\n\n      if (!allValid) {\n         // To Do anyUI updates\n         // $importButton.enable();\n         //\n         // // Hide loading cursor\n         // $form.hideProgress();\n         // $progressBar.hideProgress();\n         // $statusMessage.setValue(\"\");\n         // $statusMessage.hide();\n         //\n         // // _logic.hide();\n         //\n         // if (_logic.callbacks && _logic.callbacks.onDone)\n         //    _logic.callbacks.onDone();\n         uiCleanUp();\n\n         abWebix.alert({\n            title: this.label(\"Invalid Data\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n            ),\n         });\n\n         return;\n      }\n\n      // if pass, then continue to process each row\n      // ?? : can we process in Parallel?\n      // ?? : implement hash Lookups for connected Fields\n      const hashLookups = {};\n      // {obj}  /*  { connectField.id : { 'searchWord' : \"uuid\"}}\n      // use this hash to reduce the # of lookups needed to fill in our\n      // connected entries\n\n      const connectedFields = matchFields.filter(\n         (f) => f && f.field?.isConnection && f.searchField\n      );\n\n      const throttledSize = 10;\n      let startUpdateTime;\n      let numDone = 0;\n\n      try {\n         // forEach connectedFields in csv\n         const allLookups = [];\n\n         (connectedFields || []).forEach((f) => {\n            const connectField = f.field;\n            // const searchWord = newRowData[f.columnIndex];\n            const connectObject = connectField.datasourceLink;\n\n            if (!connectObject) return;\n\n            const connectModel = connectObject.model();\n\n            if (!connectModel) return;\n\n            const linkIdKey = connectField.indexField\n               ? connectField.indexField.columnName\n               : connectField.object.PK();\n\n            // prepare default hash entry:\n            hashLookups[connectField.id] = {};\n\n            // load all values of connectedField entries\n            const gethashLookup = async () => {\n               try {\n                  const list = await connectModel.findAll({\n                     where: {}, // !!!\n                     populate: false,\n                  });\n                  const data = list.data || list;\n\n                  (data || []).forEach((row) => {\n                     // store in hash[field.id] = { 'searchKey' : \"uuid\" }\n\n                     hashLookups[connectField.id][\n                        row[f.searchField.columnName]\n                     ] = row[linkIdKey];\n                  });\n               } catch (err) {\n                  console.error(err);\n               }\n            };\n\n            allLookups.push(gethashLookup());\n         });\n\n         await Promise.all(allLookups);\n\n         // forEach validRow\n         validRows.forEach((data) => {\n            const newRowData = data.data;\n\n            // update the datagrid row to in-progress\n            $datatable.blockEvent();\n            $datatable.updateItem(data.id, {\n               _status: \"in-progress\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n\n            // forEach ConnectedField\n            (connectedFields || []).forEach((f) => {\n               // find newRowData[field.columnName] = { field.PK : hash[field.id][searchWord] }\n               const connectField = f.field;\n               const linkIdKey = connectField.indexField\n                  ? connectField.indexField.columnName\n                  : connectField.object.PK();\n               const uuid =\n                  hashLookups[connectField.id][\n                  newRowData[connectField.columnName]\n                  ];\n\n               if (!uuid) {\n                  itemInvalid(data.id, [{ name: connectField.columnName }]);\n                  allValid = false;\n               }\n\n               newRowData[connectField.columnName] = {};\n               newRowData[connectField.columnName][linkIdKey] = uuid;\n            });\n         });\n\n         if (!allValid) {\n            abWebix.alert({\n               title: this.label(\"Invalid Data\"),\n               ok: this.label(\"Ok\"),\n               text: this.label(\n                  \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n               ),\n            });\n            uiCleanUp();\n\n            return;\n         }\n\n         // NOTE: Parallel exectuion of all these:\n         const allSaves = [];\n         const createRecord = (objModel, newRowsData, element, total) =>\n            new Promise((resolve, reject) => {\n               element.doRecordRulesPre(newRowsData);\n\n               const processResult = async () => {\n                  try {\n                     const result = await objModel.batchCreate({\n                        batch: newRowsData,\n                     });\n                     const resultErrors = result.errors;\n\n                     // Show errors of each row\n                     Object.keys(resultErrors).forEach((rowIndex) => {\n                        const error = resultErrors[rowIndex];\n\n                        if (error) {\n                           itemFailed(\n                              rowIndex,\n                              error.message || error.sqlMessage || error\n                           );\n                        }\n                     });\n\n                     const resultData = result.data;\n                     const penddingRecordRules = [];\n\n                     Object.keys(resultData).forEach((rowIndex) => {\n                        penddingRecordRules.push(\n                           new Promise((resolve, reject) => {\n                              // Process Record Rule\n                              const processRowData = async () => {\n                                 try {\n                                    await element.doRecordRules(\n                                       resultData[rowIndex]\n                                    );\n\n                                    itemPass(rowIndex);\n                                    resolve();\n                                 } catch (err) {\n                                    itemFailed(rowIndex, err);\n                                    reject(\"that didn't work\");\n                                 }\n                              };\n\n                              processRowData();\n                           })\n                        );\n                     });\n\n                     const waitPenddingRecordRules = async () => {\n                        try {\n                           await Promise.all(penddingRecordRules);\n\n                           newRowsData.forEach((row) => {\n                              // itemPass(row.id);\n                              numDone++;\n                              if (numDone % throttledSize == 0) {\n                                 this.refreshRemainingTimeText(\n                                    startUpdateTime,\n                                    validRows.length,\n                                    numDone\n                                 );\n                              }\n                           });\n\n                           if (numDone === total) {\n                              uiCleanUp();\n                              $importButton.disable();\n                           }\n\n                           resolve();\n                        } catch (err) {\n                           // newRowsData.forEach((row) => {\n                           //    itemFailed(row.id, err);\n                           // });\n                           // throw err;\n                           reject(err);\n                        }\n                     };\n\n                     await waitPenddingRecordRules();\n                  } catch (err) {\n                     console.error(err);\n                     reject(err);\n                  }\n               };\n\n               processResult();\n            });\n\n         validRows.forEach((data) => {\n            allSaves.push({ id: data.id, data: data.data });\n         });\n\n         // we are going to store these promises in an array of\n         // arrays with 50 in each sub array\n         const throttledSaves = [];\n         const total = allSaves.length;\n\n         let index = 0;\n\n         while (allSaves.length) {\n            throttledSaves[index] = allSaves.splice(0, throttledSize);\n\n            index++;\n         }\n\n         // execute the array of array of 100 promises one at at time\n         const performThrottledSaves = (\n            currentRecords,\n            remainingRecords,\n            importer,\n            total\n         ) =>\n            new Promise((resolve, reject) => {\n               // execute the next 100\n               // const requests = currentRecords.map((data) => {\n               //    return createRecord(\n               //       objModel,\n               //       data.record,\n               //       data.data,\n               //       importer\n               //    );\n               // });\n\n               const processRequest = async () => {\n                  try {\n                     await createRecord(\n                        objModel,\n                        currentRecords,\n                        importer,\n                        total\n                     );\n\n                     // when done get the next 10\n                     const nextRecords = remainingRecords.shift();\n\n                     // if there are any remaining in the group call performThrottledSaves\n                     if (nextRecords?.length) {\n                        await performThrottledSaves(\n                           nextRecords,\n                           remainingRecords,\n                           importer,\n                           total\n                        );\n                     } else {\n                        // uiCleanUp();\n                        resolve();\n                     }\n                  } catch (err) {\n                     // Handle errors here\n                     reject(err);\n                  }\n               };\n\n               processRequest();\n            });\n\n         // now we are going to processes these new containers one at a time\n         // $datatable.blockEvent();\n         // this is when the real work starts so lets begin our countdown timer now\n         startUpdateTime = new Date();\n         // get the first group of Promises out of the collection\n         const next = throttledSaves.shift();\n\n         // execute our Promise iterator\n         await performThrottledSaves(next, throttledSaves, this.view, total);\n      } catch (err) {\n         // resolve Error UI\n         abWebix.alert({\n            title: this.label(\"Error Creating Records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\"One or more records failed upon creation.\"),\n         });\n         // $datatable.unblockEvent();\n         uiCleanUp();\n         console.error(err);\n      }\n   }\n\n   // Display linked data\n   uiLinkedData() {\n      const dcLink = this.datacollection?.datacollectionLink;\n      const linkedData = dcLink?.getCursor();\n      if (!linkedData) return;\n\n      return {\n         view: \"window\",\n         modal: true,\n         resize: false,\n         head: {\n            view: \"toolbar\",\n            cols: [\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hideLinkedData();\n                  },\n               },\n            ],\n         },\n         body: {\n            view: \"property\",\n            id: \"sets\",\n            editable: false,\n            width: 400,\n            height: 200,\n            elements: [\n               { label: this.label(\"Linked Data\"), type: \"label\" },\n               {\n                  label: \"ID\",\n                  type: \"text\",\n                  value: linkedData.uuid ?? linkedData.id,\n               },\n               {\n                  label: \"Label\",\n                  type: \"text\",\n                  value: dcLink.datasource.displayData(linkedData),\n               },\n            ],\n         },\n      };\n   }\n\n   showLinkedData() {\n      const ui = this.uiLinkedData();\n      this._info_popup = this.AB.Webix.ui(ui);\n      this._info_popup.show($$(this.ids.linkedDataButton).$view, {\n         pos: \"top\",\n      });\n   }\n\n   hideLinkedData() {\n      this._info_popup?.hide();\n   }\n\n   getParentValues() {\n      const result = {};\n\n      // get ABDatacollection\n      const dc = this.datacollection;\n      const currentObject = this.CurrentObject;\n\n      // Set parent's data collection cursor\n      const dcLink = dc?.datacollectionLink;\n      const linkConnectFields = [];\n\n      let objectLink;\n      let linkValues;\n\n      if (dcLink?.getCursor()) {\n         objectLink = dcLink.datasource;\n\n         linkConnectFields.push(\n            ...currentObject.fields(\n               (f) => f.isConnection && f.settings.linkObject === objectLink.id\n            )\n         );\n\n         linkValues = dcLink.getCursor();\n      }\n\n      // Set parent's data collection cursor\n      if (objectLink && linkConnectFields.length && linkValues) {\n         linkConnectFields.forEach((f) => {\n            const linkColName = f.indexField\n               ? f.indexField.columnName\n               : objectLink.PK();\n\n            result[f.columnName] = result[f.columnName] ?? {};\n            result[f.columnName][linkColName] =\n               linkValues[linkColName] ?? linkValues.id;\n         });\n      }\n\n      return result;\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartAreaComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartArea_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.areaType,\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         series: [\n            {\n               alpha: 0.7,\n               value: \"#value#\",\n               color: \"#ee4339\",\n            },\n            {\n               alpha: 0.4,\n               value: \"#value2#\",\n               color: \"#a7ee70\",\n            },\n         ],\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartBarComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartBar_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.barType,\n         preset: settings.barPreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend:\n            settings.barType === \"bar\" || !settings.barType\n               ? settings.isLegend\n                  ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n                  : \"\"\n               : settings.isLegend\n               ? {\n                    template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                    values: [], // TODO : bug in webix 5.1.7\n                 }\n               : null,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewChartComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChart_${baseView.id}`, ids);\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $component = $$(this.ids.component);\n      const abWebix = this.AB.Webix;\n\n      if ($component) abWebix.extend($component, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const dc = this.datacollection;\n\n      if (dc) {\n         const eventNames = [\n            \"changeCursor\",\n            \"create\",\n            \"update\",\n            \"delete\",\n            \"initializedData\",\n         ];\n\n         if (\n            dc.datacollectionLink &&\n            !(\"changeCursor\" in (dc.datacollectionLink._events ?? []))\n         )\n            baseView.eventAdd({\n               emitter: dc.datacollectionLink,\n               eventName: \"changeCursor\",\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n\n         eventNames.forEach((evtName) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: evtName,\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n         });\n      }\n\n      baseView.refreshData();\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewChartContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewChartContainer_${baseView.id}`,\n         Object.assign(\n            {\n               chartContainer: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiChartComponent) {\n      const _ui = super.ui([\n         Object.assign({ id: this.ids.chartContainer }, uiChartComponent ?? {}),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n      // if (!this._isShow) {\n\n      // Mark this widget is showing\n      const baseView = this.view;\n\n      baseView._isShow = true;\n\n      this.refreshData(baseView.parent.getDCChart());\n      // }\n   }\n\n   refreshData(dcChart) {\n      const $chartContainer = $$(this.ids.chartContainer);\n      const $chartComponent = $$(this.ids.component);\n\n      if ($chartContainer?.data) $chartContainer.data.sync(dcChart);\n\n      setTimeout(() => {\n         $chartComponent?.adjust();\n         $chartContainer?.adjust();\n      }, 160);\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartLineComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartLine_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.lineType,\n         preset: settings.linePreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue,\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartPieComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartPie_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.pieType,\n         value: \"#value#\",\n         color: \"#color#\",\n         legend: settings.isLegend\n            ? {\n                 width: this.view.parent.settings.labelWidth,\n                 template: `<div style='font-size: ${settings.labelFontSize}px;'>#label#</div>`,\n              }\n            : null,\n         pieInnerText: `<div style='font-size: ${settings.innerFontSize}px;'>#value#</div>`,\n         shadow: 1,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCommentComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewComment_${baseView.id}`,\n         Object.assign(\n            {\n               comment: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const _ui = super.ui([\n         {\n            id: this.ids.comment,\n            view: \"comments\",\n            users: baseView.getUserData(),\n            currentUser: baseView.getCurrentUserId(),\n            height: this.settings.height,\n            data: this.getCommentData(),\n            on: {\n               onBeforeAdd: (id, obj, index) => {\n                  this.addComment(obj.text, new Date());\n               },\n               // NOTE: no update event of comment widget !!\n               // Updating event handles in .init function\n               // https://docs.webix.com/api__ui.comments_onbeforeeditstart_event.html#comment-4509366150\n\n               // onAfterEditStart: function (rowId) {\n               //    let item = this.getItem(rowId);\n\n               //    _logic.updateComment(rowId, item);\n               // },\n               onAfterDelete: (rowId) => {\n                  this.deleteComment(rowId);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      baseView.__dvEvents = baseView.__dvEvents || {};\n\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if ($comment) {\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) {\n            // Updating comment event\n            if (!baseView.__dvEvents.onStoreUpdated)\n               baseView.__dvEvents.onStoreUpdated =\n                  $commentList.data.attachEvent(\n                     \"onStoreUpdated\",\n                     (rowId, data, operate) => {\n                        if (operate === \"update\") {\n                           this.updateComment(rowId, (data || {}).text);\n                        }\n                     }\n                  );\n\n            // Implement progress bar\n            webix.extend($commentList, webix.ProgressBar);\n         }\n      }\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // bind dc to component\n      // dv.bind($$(ids.comment));\n\n      if (!baseView.__dvEvents.create)\n         baseView.__dvEvents.create = dv.on(\"create\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.update)\n         baseView.__dvEvents.update = dv.on(\"update\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.delete)\n         baseView.__dvEvents.delete = dv.on(\"delete\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.loadData)\n         baseView.__dvEvents.loadData = dv.on(\"loadData\", () =>\n            this.refreshComment()\n         );\n\n      $comment.refresh();\n   }\n\n   getCommentData() {\n      const baseView = this.view;\n      const dv = this.datacollection;\n\n      if (!dv) return null;\n\n      const userCol = baseView.getUserField();\n      const commentCol = baseView.getCommentField();\n      const dateCol = baseView.getDateField();\n\n      if (!userCol || !commentCol) return null;\n\n      const userColName = userCol.columnName;\n      const commentColName = commentCol.columnName;\n      const dateColName = dateCol ? dateCol.columnName : null;\n      const dataObject = dv.getData();\n      const dataList = [];\n\n      dataObject.forEach((item, index) => {\n         if (item[commentColName]) {\n            const user = baseView.getUserData().find((user) => {\n               return user.value === item[userColName];\n            });\n            const data = {\n               id: item.id,\n               user_id: user ? user.id : 0,\n               date: item[dateColName] ? new Date(item[dateColName]) : null,\n               default_date: new Date(item[\"created_at\"]),\n               text: item[commentColName],\n            };\n\n            dataList.push(data);\n         }\n      });\n\n      dataList.sort(function (a, b) {\n         if (dateColName)\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n         else\n            return (\n               new Date(a.default_date).getTime() -\n               new Date(b.default_date).getTime()\n            );\n      });\n\n      return dataList;\n   }\n\n   refreshComment() {\n      const baseView = this.view;\n\n      if (baseView.__refreshTimeout) clearTimeout(baseView.__refreshTimeout);\n\n      this.busy();\n\n      const ids = this.ids;\n\n      baseView.__refreshTimeout = setTimeout(() => {\n         const $comment = $$(ids.comment);\n\n         if (!$comment) return;\n\n         // clear comments\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) $commentList.clearAll();\n\n         // populate comments\n         const commentData = this.getCommentData();\n\n         if (commentData) {\n            $comment.parse(commentData);\n         }\n\n         // scroll to the last item\n         if ($commentList) $commentList.scrollTo(0, Number.MAX_SAFE_INTEGER);\n\n         delete baseView.__refreshTimeout;\n\n         this.ready();\n      }, 90);\n   }\n\n   addComment(commentText, dateTime) {\n      this.saveData(commentText, dateTime);\n   }\n\n   async updateComment(rowId, commentText) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return; // already notified\n\n      const commentField = baseView.getCommentField();\n\n      if (!commentField) return; // already notified\n\n      const values = {};\n\n      values[commentField.columnName] = commentText ?? \"\";\n\n      return await model.update(rowId, values);\n   }\n\n   async deleteComment(rowId) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return;\n\n      return await model.delete(rowId);\n   }\n\n   busy() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.disable();\n\n      if ($commentList.showProgress)\n         $commentList.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.enable();\n\n      if ($commentList.hideProgress) $commentList.hideProgress();\n   }\n\n   async saveData(commentText, dateTime) {\n      if (!commentText) return;\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const baseView = this.view;\n      const model = baseView.model();\n      const ab = this.AB;\n\n      if (!model) {\n         ab.notify.builder(\n            {},\n            {\n               message:\n                  \"ABViewComment.saveData(): could not pull a model to work with.\",\n               viewName: baseView.label,\n            }\n         );\n\n         return;\n      }\n\n      const comment = {};\n      const userField = baseView.getUserField();\n\n      if (userField) comment[userField.columnName] = ab.Account.username();\n\n      const commentField = baseView.getCommentField();\n\n      if (commentField) comment[commentField.columnName] = commentText;\n\n      const dateField = baseView.getDateField();\n\n      if (dateField) comment[dateField.columnName] = dateTime;\n\n      // add parent cursor to default\n      const dvLink = dv.datacollectionLink;\n\n      if (dvLink?.getCursor()) {\n         const objectLink = dvLink.datasource;\n         const fieldLink = dv.fieldLink;\n\n         if (objectLink && fieldLink) {\n            comment[fieldLink.columnName] = {};\n            comment[fieldLink.columnName][objectLink.PK()] =\n               dvLink.getCursor().id;\n         }\n      }\n\n      return await model.create(comment);\n   }\n};\n","/**\n * ABViewComponent\n * A common UI component class for our UI widgets.\n */\nimport ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewComponent extends ClassUI {\n   constructor(baseView, idBase, ids) {\n      super(idBase || `ABView_${baseView.id}`, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n      this.datacollection = baseView.datacollections || baseView.datacollection;\n\n      this.__events = [];\n      // {array}\n      // A collection of any listeners we are managing.\n      // {\n      //   emitter:   {EventEmitter} the object we are listening on\n      //   eventName: {string} the event key we are listening for\n      //   listener:  {fn} the function to call on\n      // }\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.CurrentDatacollectionID = null;\n      // {string}\n      // the ABDataCollection.id of the DC we are working with\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n   }\n\n   ui(uiComponents = []) {\n      // an ABView is a collection of rows:\n      const _ui = {\n         id: this.ids.component,\n         view: \"layout\",\n         type: \"space\",\n         rows: uiComponents,\n      };\n\n      // if this form is empty, then force a minimal row height\n      // so the component isn't completely hidden on the screen.\n      // (important in the editor so we don't loose the ability to edit the\n      // component)\n      if (!_ui.rows.length) _ui.height = 30;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      this.CurrentDatacollectionID = datacollection?.id;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object?.id;\n   }\n\n   /**\n    * @method eventAdd()\n    * Create a new listener on an object. Note, this will prevent multiple\n    * listeners being applied to the same Object.\n    * @param {object} evt\n    *        The definition of the event we are adding:\n    *        {\n    *           emitter:   {EventEmitter} the object we are listening on\n    *           eventName: {string} the event key we are listening for\n    *           listener:   {fn} the function to call on\n    *        }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      // make sure we haven't done this before:\n      const __events = this.__events;\n      const exists = __events.filter(\n         (e) => e.emitter === evt.emitter && e.eventName === evt.eventName\n         // && e.listener === evt.listener\n      );\n\n      if (!exists.length) {\n         // add to array\n         __events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventsClear()\n    * Remove all the attached event listeners and reset our tracking.\n    */\n   eventsClear() {\n      this.__events.forEach((evt) => {\n         evt.emitter.removeListener(evt.eventName, evt.listener);\n      });\n\n      this.__events = [];\n   }\n\n   /**\n    * @method waitInitializingDCEvery()\n    * Wait until the DC is initialized, checking every millisecond as specified by the parameter\n    * @param {number} milliSeconds\n    * The amount of milliseconds to recheck DC status.\n    * @param {object} dc\n    * the AB DC instance.\n    */\n\n   async waitInitializingDCEvery(milliSeconds, dc) {\n      if (!this.__isShowing || dc == null) return;\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      // load data when a widget is showing\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial) await dc.loadData();\n\n      return await new Promise((resolve) => {\n         if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n            resolve();\n\n            return;\n         }\n\n         const interval = setInterval(() => {\n            if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n               clearInterval(interval);\n\n               resolve();\n            }\n         }, milliSeconds);\n      });\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      // check if tab has a hint\n      if (this?.view?.settings?.hintID) {\n         // fetch the steps for the hint\n         let hint = this.AB.hintID(this.view.settings.hintID);\n         if (hint.settings.active) {\n            hint.createHintUI();\n         }\n      }\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n         // load data when a widget is showing\n         dc.loadData();\n   }\n}\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainerComponent extends (\n   ABViewContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewConditionalContainer_${baseView.id}`,\n         Object.assign(\n            {\n               batch: \"\",\n            },\n            ids\n         )\n      );\n\n      this._ifComponent = null;\n      this._elseComponent = null;\n\n      // Set filter value\n      this.__filterComponent = baseView.AB.filterComplexNew(\n         `${baseView.id}_filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.populateFilterComponent();\n   }\n\n   ui() {\n      const _uiConditionalContainer = {\n         id: this.ids.batch,\n         view: \"multiview\",\n         cells: [\n            {\n               batch: \"wait\",\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"label\",\n                     label: this.label(\"Please wait...\"),\n                  },\n               ],\n            },\n         ],\n      };\n      const _ui = super.ui([_uiConditionalContainer]);\n\n      _uiConditionalContainer.cells.push(\n         Object.assign({ batch: \"if\" }, this.ifComponent.ui()),\n         Object.assign({ batch: \"else\" }, this.elseComponent.ui())\n      );\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      await Promise.all([\n         this.ifComponent.init(AB, accessLevel),\n         this.elseComponent.init(AB, accessLevel),\n      ]);\n\n      this.populateFilterComponent();\n\n      const dc = this.datacollection;\n\n      if (dc) {\n         const baseView = this.view;\n\n         // listen DC events\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"loadData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"initializedData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayView(...p),\n         });\n      }\n\n      this.displayView();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.populateFilterComponent();\n      this.displayView();\n   }\n\n   get ifComponent() {\n      return (this._ifComponent =\n         this._ifComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"If\")\n            .component());\n   }\n\n   get elseComponent() {\n      return (this._elseComponent =\n         this._elseComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"Else\")\n            .component());\n   }\n\n   displayView(currData) {\n      const dc = this.datacollection;\n      const ids = this.ids;\n      const $batch = $$(ids.batch);\n\n      if (dc) {\n         if (!currData) currData = dc.getCursor();\n\n         // show 'waiting' panel\n         if (\n            !currData &&\n            (dc.dataStatus === dc.dataStatusFlag.notInitial ||\n               dc.dataStatus === dc.dataStatusFlag.initializing)\n         ) {\n            $batch?.showBatch(\"wait\");\n\n            return;\n         }\n      }\n\n      const isValid = this.__filterComponent.isValid(currData);\n\n      if (isValid) {\n         // if (isValid && currData) {\n         $batch?.showBatch(\"if\");\n         this.ifComponent?.onShow?.();\n      } else {\n         $batch?.showBatch(\"else\");\n         this.elseComponent?.onShow?.();\n      }\n   }\n\n   populateFilterComponent() {\n      const dc = this.datacollection;\n      const __filterComponent = this.__filterComponent;\n\n      if (dc?.datasource) __filterComponent.fieldsLoad(dc.datasource.fields());\n      else __filterComponent.fieldsLoad([]);\n\n      __filterComponent.setValue(\n         this.settings.filterConditions ??\n            this.view.constructor.defaultValues().filterConditions\n      );\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewContainer_${baseView.id}`, ids);\n\n      this.idBase = idBase;\n      this.options = null;\n\n      this.viewComponents = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child views that we manage\n\n      this.viewComponentIDs = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child.ui().ids of the views we manage\n\n      this._handlerChangePage = (pageId) => {\n         baseView.changePage(pageId);\n      };\n   }\n\n   ui(uiComponents) {\n      // Generate rows & cols of views to .layout\n      const views = this.view.viewsSortByPosition();\n      const rowViews = this.getElements(views);\n      const _ui = super.ui(uiComponents || rowViews);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB, accessLevel = 0, options = {}) {\n      await super.init(AB);\n\n      this.options = options;\n\n      const allInits = [];\n\n      // // register our callbacks:\n      // if (options) {\n      //    for (var c in _logic.callbacks) {\n      //       _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //    }\n      // }\n\n      // see access by CSS class\n      $$(this.ids.component)?.define(\"css\", `accessLevel-${accessLevel}`);\n\n      const viewComponents = this.viewComponents;\n\n      // attach all the .UI views:\n      for (const key in viewComponents) {\n         // skip when the view is removed.\n         if (\n            !viewComponents[key] ??\n            !this.view.views((v) => v.id === key).length\n         )\n            continue;\n\n         // Initial component along with options in case there are callbacks we need to listen for\n         if (accessLevel) {\n            allInits.push(viewComponents[key].init(AB, accessLevel, options));\n\n            continue;\n         }\n\n         $$(this.viewComponentIDs[key])?.hide();\n      }\n\n      await Promise.all(allInits);\n   }\n\n   getElements(views) {\n      const rows = [];\n      const componentMap = {};\n\n      let curRowIndex;\n      let curColIndex;\n\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n\n      views.forEach((v) => {\n         // let component = v.component(/* App, idPrefix */);\n         // NOTE: PONG - Just temporary to be compatible old & new versions\n         let component;\n\n         try {\n            component = v.component(this.idBase);\n            // make sure any existing handlers for changePage are removed.\n            v.removeAllListeners(\"changePage\");\n         } catch (err) {\n            component = v.component(this.idBase);\n\n            const ui = component.ui;\n\n            component.ui = (() => ui).bind(component);\n         }\n\n         this.viewComponents[v.id] = component;\n\n         ////\n         //// TODO: figure out the embedded Callbacks => emit()\n         ////\n         // if key == \"form\" or \"button\" register the callbacks to the parent\n         // NOTE this will only work on the last form of a page!\n         // if (v.key == \"form\" && v._logic.callbacks) {\n         //    _logic.callbacks = v._logic.callbacks;\n         // }\n\n         // Create a new row\n         if (v.position.y == null || v.position.y !== curRowIndex) {\n            curRowIndex = v.position.y || rows.length;\n            curColIndex = 0;\n\n            const rowNew = {\n               cols: [],\n            };\n\n            // Create columns following setting value\n            const colNumber = settings.columns || defaultSettings.columns;\n\n            for (let i = 0; i < colNumber; i++)\n               rowNew.cols.push({\n                  gravity: settings.gravity?.[i]\n                     ? parseInt(settings.gravity[i])\n                     : defaultSettings.gravity,\n               });\n\n            rows.push(rowNew);\n         }\n\n         // Get the last row\n         const rowIndx = rows.length - 1;\n         const curRow = rows[rowIndx];\n         const newPos = v.position.x ?? 0;\n         const mapKey = `${rowIndx}-${newPos}`;\n\n         let getGrav = 1;\n\n         if (componentMap[mapKey])\n            console.error(\n               `Component[${component?.ids?.component}] is overwriting component[${componentMap[mapKey].ids?.component}]. <-- Reorder them to fix.`\n            );\n\n         componentMap[mapKey] = component;\n\n         if (curRow.cols[newPos]?.gravity)\n            getGrav = curRow.cols[newPos].gravity;\n\n         const _ui = component.ui();\n\n         this.viewComponentIDs[v.id] = _ui.id;\n         _ui.gravity = getGrav;\n\n         // Add ui of sub-view to column\n         curRow.cols[newPos] = _ui;\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: this._handlerChangePage,\n         });\n\n         curColIndex++;\n      });\n\n      return rows;\n   }\n\n   onShow() {\n      super.onShow();\n\n      // calll .onShow in child components\n      Object.values(this.viewComponents).forEach((val) => {\n         val.onShow?.();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDetailComponent = require(\"./ABViewDetailComponent\");\nconst ABViewPropertyLinkPage =\n   require(\"../viewProperties/ABViewPropertyLinkPage\").default;\n\nmodule.exports = class ABViewDataviewComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDataview_${baseView.id}`,\n         Object.assign(\n            {\n               dataview: \"\",\n            },\n            ids\n         )\n      );\n\n      this.linkPage = null;\n   }\n\n   ui() {\n      // NOTE: need to initial the detail component here\n      // because its dom width & height values are used .template function\n      this.initDetailComponent();\n\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            id: ids.dataview,\n            view: \"dataview\",\n            scroll: \"y\",\n            sizeToContent: true,\n            css: \"borderless transparent\",\n            xCount: this.settings.xCount,\n            template: (item) => this.itemTemplate(item),\n            on: {\n               onAfterRender: () => {\n                  this.applyClickEvent();\n                  this.addCyAttribute();\n               },\n            },\n         },\n      ]);\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n      if (!dc) return;\n\n      // Initial the link page helper\n      this.linkPage = this.linkPageHelper.component();\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      const ids = this.ids;\n      const $dataView = $$(ids.dataview);\n      AB.Webix.extend($dataView, AB.Webix.ProgressBar);\n      dc.bind($dataView);\n\n      window.addEventListener(\"resize\", () => {\n         clearTimeout(this._resizeEvent);\n         this._resizeEvent = setTimeout(() => {\n            this.resize($dataView.getParentView());\n            delete this._resizeEvent;\n         }, 20);\n      });\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.resize();\n   }\n\n   resize(base_element) {\n      const $dataview = $$(this.ids.dataview);\n      $dataview.resize();\n\n      const item_width = this.getItemWidth(base_element);\n      $dataview.customize({ width: item_width });\n      $dataview.getTopParentView?.().resize?.();\n\n   }\n\n   initDetailComponent() {\n      const detailUI = this.getDetailUI();\n      this._detail_ui = this.AB.Webix.ui(detailUI);\n\n      // 2 - Always allow access to components inside data view\n      this.detailComponent.init(null, 2);\n   }\n\n   getDetailUI() {\n      const detailCom = this.detailComponent;\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n\n      const _ui = detailCom.ui();\n      // adjust the UI to make sure it will look like a \"card\"\n      _ui.type = \"clean\";\n      _ui.css = \"ab-detail-view\";\n\n      if (detailsPage || editPage) {\n         _ui.css += ` ab-detail-hover ab-record-#itemId#`;\n\n         if (detailsPage) _ui.css += \" ab-detail-page\";\n         if (editPage) _ui.css += \" ab-edit-page\";\n      }\n\n      return _ui;\n   }\n\n   itemTemplate(item) {\n      const detailCom = this.detailComponent;\n      const $dataview = $$(this.ids.dataview);\n      const $detail_item = this._detail_ui;\n\n      // Mock up data to initialize height of item\n      if (!item || !Object.keys(item).length) {\n         item = item ?? {};\n         this.datacollection?.datasource?.fields().forEach((f) => {\n            switch (f.key) {\n               case \"string\":\n               case \"LongText\":\n                  item[f.columnName] = \"Lorem Ipsum\";\n                  break;\n               case \"date\":\n               case \"datetime\":\n                  item[f.columnName] = new Date();\n                  break;\n               case \"number\":\n                  item[f.columnName] = 7;\n                  break;\n            }\n         });\n      }\n      detailCom.displayData(item);\n\n      const itemWidth =\n         $dataview.data.count() > 0\n            ? $dataview.type.width\n            : ($detail_item.$width - 20) / this.settings.xCount;\n\n      const itemHeight =\n         $dataview.data.count() > 0\n            ? $dataview.type.height\n            : $detail_item.getChildViews()?.[0]?.$height;\n\n      const tmp_dom = document.createElement(\"div\");\n      tmp_dom.appendChild($detail_item.$view);\n\n      $detail_item.define(\"width\", itemWidth - 24);\n      $detail_item.define(\"height\", itemHeight + 15);\n      $detail_item.adjust();\n\n      // Add cy attributes\n      this.addCyItemAttributes(tmp_dom, item);\n\n      return tmp_dom.innerHTML.replace(/#itemId#/g, item.id);\n   }\n\n   getItemWidth(base_element) {\n      const $dataview = $$(this.ids.dataview);\n\n      let currElem = base_element ?? $dataview;\n      let parentWidth = currElem?.$width;\n      while (currElem) {\n         if (\n            currElem.config.view == \"scrollview\" ||\n            currElem.config.view == \"layout\"\n         )\n            parentWidth =\n               currElem?.$width < parentWidth ? currElem?.$width : parentWidth;\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      if (!parentWidth)\n         parentWidth = $dataview?.getParentView?.().$width || window.innerWidth;\n\n      if (parentWidth > window.innerWidth)\n         parentWidth = window.innerWidth;\n\n      // check if the browser window minus webix default padding is the same as the parent window\n      // if so we need to check to see if there is a sidebar and reduce the usable space by the\n      // width of the sidebar\n      if (window.innerWidth - 19 <= parentWidth) {\n         const $sidebar = this.getTabSidebar();\n         if ($sidebar) {\n            parentWidth -= $sidebar.$width;\n         }\n      }\n\n      const recordWidth = Math.floor(parentWidth / this.settings.xCount);\n\n      return recordWidth;\n   }\n\n   getTabSidebar() {\n      const $dataview = $$(this.ids.dataview);\n      let $sidebar;\n      let currElem = $dataview;\n      while (currElem && !$sidebar) {\n         $sidebar = (currElem.getChildViews?.() ?? []).filter(\n            (item) => item?.config?.view == \"sidebar\"\n         )[0];\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      return $sidebar;\n   }\n\n   applyClickEvent() {\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n      if (!detailsPage && !editPage) return;\n\n      const $dataview = $$(this.ids.dataview);\n      if (!$dataview) return;\n\n      $dataview.$view.onclick = (e) => {\n         let clicked = false;\n         let divs = e.path ?? [];\n\n         // NOTE: Some web browser clients do not support .path\n         if (!divs.length) {\n            divs.push(e.target);\n            divs.push(e.target.parentNode);\n         }\n\n         if (editPage) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem_header\") > -1\n               ) {\n                  clicked = true;\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(editPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n                  break;\n               }\n            }\n         }\n\n         if (detailsPage && !clicked) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem\") > -1\n               ) {\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(detailsPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n\n                  break;\n               }\n            }\n         }\n      };\n   }\n\n   addCyAttribute() {\n      const baseView = this.view;\n      const $dataview = $$(this.ids.dataview);\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n\n      $dataview.$view.setAttribute(\n         \"data-cy\",\n         `dataview container ${name} ${baseView.id}`\n      );\n   }\n\n   addCyItemAttributes(dom, item) {\n      const baseView = this.view;\n      const uuid = item.uuid;\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n      dom.querySelector(\".webix_accordionitem_body\")?.setAttribute(\n         \"data-cy\",\n         `dataview item ${name} ${uuid} ${baseView.id}`\n      );\n      dom.querySelector(\".webix_accordionitem_button\")?.setAttribute(\n         \"data-cy\",\n         `dataview item button ${name} ${uuid} ${baseView.id}`\n      );\n   }\n\n   get detailComponent() {\n      return (this._detailComponent =\n         this._detailComponent ??\n         new ABViewDetailComponent(\n            this.view,\n            `${this.ids.component}_detail_view`\n         ));\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCheckboxComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail checkbox ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id ?? baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      let checkbox = \"\";\n\n      // Check\n      if (val && JSON.parse(val))\n         checkbox =\n            '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n      // Uncheck\n      else checkbox = '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n      super.setValue(checkbox);\n   }\n};\n","const ABObjectQuery = require(\"../../ABObjectQuery\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewDetailComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetail_${baseView.id}`, ids);\n      this.idBase = idBase;\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      // this wrapper allows the detail view to have a\n      // card appearance as well as enables the edit and\n      // details functions to work when clicked\n      return {\n         type: \"form\",\n         borderless: true,\n         rows: [\n            {\n               body: _ui,\n            },\n         ],\n      };\n   }\n\n   onShow() {\n      const baseView = this.view;\n\n      try {\n         const dataCy = `Detail ${baseView.name?.split(\".\")[0]} ${baseView.id}`;\n\n         $$(this.ids.component).$view.setAttribute(\"data-cy\", dataCy);\n      } catch (e) {\n         console.warn(\"Problem setting data-cy\", e);\n      }\n\n      // listen DC events\n      const dv = this.datacollection;\n\n      if (dv) {\n         const currData = dv.getCursor();\n\n         if (currData) this.displayData(currData);\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayData(...p),\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"create\",\n            listener: (createdRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === createdRow.id)\n                  this.displayData(createdRow);\n            },\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"update\",\n            listener: (updatedRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === updatedRow.id)\n                  this.displayData(updatedRow);\n            },\n         });\n      }\n\n      super.onShow();\n   }\n\n   displayData(rowData = {}) {\n      const views = (this.view.views() || []).sort((a, b) => {\n         if (!a?.field?.() || !b?.field?.()) return 0;\n\n         // NOTE: sort order of calculated fields.\n         // FORMULA field type should be calculated before CALCULATE field type\n         if (a.field().key === \"formula\" && b.field().key === \"calculate\")\n            return -1;\n         else if (a.field().key === \"calculate\" && b.field().key === \"formula\")\n            return 1;\n\n         return 0;\n      });\n\n      views.forEach((f) => {\n         let val;\n\n         if (f.field) {\n            const field = f.field();\n\n            if (!field) return;\n\n            // get value of relation when field is a connect field\n            switch (field.key) {\n               case \"connectObject\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"list\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  if (field.settings.isMultiple === 0) {\n                     let myVal = \"\";\n\n                     field.settings.options.forEach((options) => {\n                        if (options.id === val) myVal = options.text;\n                     });\n\n                     if (field.settings.hasColors) {\n                        let myHex = \"#66666\";\n                        let hasCustomColor = \"\";\n\n                        field.settings.options.forEach((h) => {\n                           if (h.text === myVal) {\n                              myHex = h.hex;\n                              hasCustomColor = \"hascustomcolor\";\n                           }\n                        });\n\n                        myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                     }\n\n                     val = myVal;\n                  } else {\n                     const items = [];\n\n                     let myVal = \"\";\n\n                     val.forEach((value) => {\n                        let hasCustomColor = \"\";\n                        let optionHex = \"\";\n\n                        if (field.settings.hasColors && value.hex) {\n                           hasCustomColor = \"hascustomcolor\";\n                           optionHex = `background: ${value.hex};`;\n                        }\n\n                        field.settings.options.forEach((options) => {\n                           if (options.id === value.id) myVal = options.text;\n                        });\n                        items.push(\n                           `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                        );\n                     });\n\n                     val = items.join(\"\");\n                  }\n\n                  break;\n\n               case \"user\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"file\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  break;\n\n               case \"formula\":\n                  if (rowData) {\n                     // const dv = this.datacollection;\n                     // const ds = dv ? dv.datasource : null;\n                     // const needRecalculate =\n                     //    !ds || ds instanceof ABObjectQuery ? false : true;\n\n                     // NOTE: Could not to re-calculate because `__relation` data is extracted from full data at the moment\n                     // rowData.__relation format\n                     // {\n                     //    id: \"string\"\n                     //    text: \"string\"\n                     //    translations: []\n                     //    uuid:  \"0cb52669-d626-4c9d-85ea-2d931751d0ce\"\n                     //    value: \"LABEL\"\n                     // }\n                     const needRecalculate = false;\n\n                     val = field.format(rowData, needRecalculate);\n                  }\n\n                  break;\n\n               default:\n                  val = field.format(rowData);\n               // break;\n            }\n         }\n\n         // set value to each components\n         const vComponent = f.component(this.idBase);\n\n         // vComponent?.onShow();\n\n         vComponent?.setValue?.(val);\n         vComponent?.displayText?.(rowData);\n      });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailConnectComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailConnect_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const columnName =\n                  baseView.field((fld) => fld.id === settings.fieldId)\n                     ?.columnName ?? \"\";\n               const dataCy = `detail connected ${columnName} ${\n                  settings.fieldId\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      const vals = [];\n\n      if (Array.isArray(val))\n         val.forEach((record) => {\n            vals.push(\n               `<span class=\"webix_multicombo_value\">${record.text}</span>`\n            );\n         });\n      else vals.push(`<span class=\"webix_multicombo_value\">${val.text}</span>`);\n\n      super.setValue(vals.join(\"\"));\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCustomComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCustom_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const detailView = baseView.detailComponent();\n\n      let template = field ? field.columnHeader().template({}) : \"\";\n\n      return super.ui({\n         minHeight: 45,\n         height: 60,\n         template,\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail custom ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   onShow() {\n      super.onShow;\n\n      const baseView = this.view;\n      const field = baseView.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const detailCom = baseView.detailComponent(),\n         rowData = detailCom.datacollection.getCursor() || {},\n         node = $detailItem.$view;\n\n      field.customDisplay(rowData, null, node, {\n         editable: false,\n      });\n      // Hack: remove the extra webix_template class here, which adds padding so\n      // the item is not alligned with the others\n      node.getElementsByClassName(\"webix_template\")[1].removeAttribute(\"class\");\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const rowData = {};\n\n      rowData[field.columnName] = val;\n\n      field.setValue($detailItem, rowData);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailImageComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailImage_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const _ui = {\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail image ${field?.columnName} ${field?.id} ${\n                  baseView.parentDetailComponent()?.id || baseView.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const parsedImageUrl = val || field.settings.defaultImageUrl;\n\n      if (!parsedImageUrl) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const imageUrl = field.urlImage(parsedImageUrl);\n      const settings = this.settings;\n      const width = settings.width || field.settings.imageWidth || 200;\n      const height = settings.height\n         ? `${settings.height}px`\n         : field.settings.imageHeight\n         ? `${field.settings.imageHeight}px`\n         : \"100%\";\n      const imageTemplate = [\n         `<div class=\"ab-image-data-field\">`,\n         `<div style=\"float: left; background-size: cover; background-position: center center; background-image:url('${imageUrl}');  width: ${width}px; height: ${height}; position:relative;\">`,\n         `<a href=\"${imageUrl}\" target=\"_blank\" title=\"\" class=\"fa fa-download ab-image-data-field-download\"></a>`,\n         `</div></div>`,\n      ].join(\"\");\n\n      super.setValue(imageTemplate);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SAFE_HTML_TAGS = [\"abbr\", \"acronym\", \"b\", \"blockquote\", \"br\", \"code\", \"div\", \"em\", \"i\", \"li\", \"ol\", \"p\", \"span\", \"strong\", \"table\", \"td\", \"tr\", \"ul\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\"];\n\nmodule.exports = class ABViewDetailItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDetailItem_${baseView.id}`,\n         Object.assign(\n            {\n               detailItem: \"\",\n               detailItemLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiDetailItemComponent = {}) {\n      const baseView = this.view;\n\n      // setup 'label' of the element\n      const settings = baseView.detailComponent()?.settings ?? {};\n      const field = baseView.field();\n\n      const isLabelTop = settings.labelPosition == \"top\";\n\n      const group = [];\n      /** @const group will be used later as rows or cols depending on label position */\n      if (settings.showLabel) {\n         const templateLabel = isLabelTop\n            ? \"<label style='display:block; text-align: left; line-height: 32px;' class='webix_inp_top_label'>#label#</label>\"\n            : \"<label style='display: inline-block; float: left; line-height: 32px; width:#width#px;'>#label#</label>\";\n\n         const labelUi = {\n            id: this.ids.detailItemLabel,\n            view: \"template\",\n            borderless: true,\n            height: 38,\n            template: templateLabel,\n            data: { label: field?.label ?? \"\" },\n         };\n         if (!isLabelTop) labelUi.width = settings.labelWidth + 24; // Add 24px to compensate for webix padding\n         group.push(labelUi);\n      }\n\n      let height;\n      if (field?.settings?.useHeight === 1)\n         height = parseInt(field.settings.imageHeight) || height;\n\n      const valueUi = Object.assign(\n         {\n            id: this.ids.detailItem,\n            view: \"template\",\n            borderless: true,\n            autowidth: true,\n            height,\n            isUsers: field?.key === \"user\",\n            template: isLabelTop\n               ? \"<div style='min-height: 38px'>#display#</div>\"\n               : \"<div class='ab-detail-component-holder'>#display#</div>\",\n            data: { display: \"\" }, // show empty data in template\n         },\n         uiDetailItemComponent\n      );\n      // height = 0 behaves a bit differently then autoheight here.\n      if (!valueUi.height || valueUi.height == 0) {\n         delete valueUi.height;\n         valueUi.autoheight = true;\n      }\n      group.push(valueUi);\n      const itemUi = {};\n      settings.labelPosition == \"top\"\n         ? (itemUi.rows = group)\n         : (itemUi.cols = group);\n      const _ui = super.ui([itemUi]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // async init(AB) {\n   //    await super.init(AB);\n   // }\n\n   setValue(val, detailId) {\n      const $detailItem = $$(detailId ?? this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const field = this.view.field();\n\n      switch (field?.key) {\n         case \"string\":\n         case \"LongText\":\n            const strVal = val\n               // Sanitize all of HTML tags\n               .replace(/[<]/gm, \"&lt;\")\n               // Allow safe HTML tags\n               .replace(new RegExp(`(&lt;(\\/)?(${SAFE_HTML_TAGS.join(\"|\")}))`, \"gm\"), \"<$2$3\");\n\n            $detailItem.setValues({ display: strVal });\n            break;\n         default:\n            $detailItem.setValues({ display: val });\n            break;\n      }\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTextComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailText_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n      const _ui = {\n         css: \"ab-text\",\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail text ${field?.columnName} ${field?.id} ${\n                  this.view.parentDetailComponent()?.id || this.view.parent.id\n               }`;\n\n               $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTreeComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailTree_${baseView.id}`, ids);\n   }\n\n   get className() {\n      return \"ab-detail-tree\";\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // add div of tree to detail\n      this.setValue(`<div class=\"${this.className}\"></div>`);\n   }\n\n   getDomTree() {\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      return $detailItem.$view.getElementsByClassName(this.className)[0];\n   }\n\n   setValue(val) {\n      // convert value to array\n      const vals = [];\n\n      if (val && !Array.isArray(val)) vals.push(val);\n\n      setTimeout(() => {\n         // get tree dom\n         const domTree = this.getDomTree();\n\n         if (!domTree) return false;\n\n         const field = this.view.field();\n         const branches = [];\n\n         if (typeof field.settings.options.data === \"undefined\")\n            field.settings.options = new this.AB.Webix.TreeCollection({\n               data: field.settings.options,\n            });\n\n         field.settings.options.data.each(function (obj) {\n            if (vals.indexOf(obj.id) !== -1) {\n               let html = \"\";\n               let rootid = obj.id;\n\n               while (this.getParentId(rootid)) {\n                  field.settings.options.data.each(function (par) {\n                     if (\n                        field.settings.options.data.getParentId(rootid) ===\n                        par.id\n                     ) {\n                        html = `${par.text}: ${html}`;\n                     }\n                  });\n\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n\n         let nodeHTML = \"<div class='list-data-values'>\";\n\n         branches.forEach(function (item) {\n            nodeHTML += `<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color: ${myHex} !important;\">${item}</span>`;\n         });\n\n         nodeHTML += \"</div>\";\n         domTree.innerHTML = nodeHTML;\n\n         let height = 33;\n\n         if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n         const $detailItem = $$(this.ids.detailItem);\n\n         $detailItem.config.height = height;\n         $detailItem.resize();\n      }, 50);\n   }\n};\n","const Docxtemplater = require(\"../../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../../js/jszip.min.js\");\n\nconst ABFieldConnect = require(\"../../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDocxBuilderComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDocxBuilder_${baseView.id}`,\n         Object.assign(\n            {\n               downloadButton: \"\",\n               noFileLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const buttonWidth = settings.width ?? defaultSettings.width;\n\n      let autowidth = false;\n\n      if (buttonWidth === 0) autowidth = true;\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n\n      switch (settings.buttonPosition ?? defaultSettings.buttonPosition) {\n         case \"left\":\n            break;\n         case \"center\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            rightSpacer = {\n               type: \"spacer\",\n            };\n            break;\n         case \"right\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            break;\n      }\n\n      const buttonLabelText =\n         baseView.buttonlabel ||\n         settings.buttonlabel ||\n         defaultSettings.buttonlabel; // Use || to check empty string \"\"\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"toolbar\",\n            css:\n               settings.toolbarBackground ?? defaultSettings.toolbarBackground,\n            cols: [\n               leftSpacer,\n               {\n                  id: ids.downloadButton,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-file-word-o\",\n                  label: buttonLabelText,\n                  width: settings.width || defaultSettings.width,\n                  autowidth: autowidth,\n                  click: () => {\n                     this.renderFile();\n                  },\n                  on: {\n                     // Add data-cy attribute for cypress tests\n                     onAfterRender: () => {\n                        const name = baseView.name?.replace(\".docxBuilder\", \"\");\n                        const dataCy = `docx download ${name} ${baseView.id}`;\n                        $$(ids.downloadButton)\n                           ?.$view.querySelector(\"button\")\n                           .setAttribute(\"data-cy\", dataCy);\n                     },\n                  },\n               },\n               {\n                  id: ids.noFileLabel,\n                  view: \"label\",\n                  label: this.label(\"No template file\"),\n               },\n               {\n                  type: \"spacer\",\n               },\n               rightSpacer,\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $downloadButton = $$(ids.downloadButton);\n      const $noFileLabel = $$(ids.noFileLabel);\n\n      if (this.view.settings.filename) {\n         $downloadButton.show();\n         $noFileLabel.hide();\n      } else {\n         $downloadButton.hide();\n         $noFileLabel.show();\n      }\n   }\n\n   async onShow() {\n      super.onShow;\n\n      const tasks = [];\n\n      this.view.datacollections.forEach((dc) => {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            tasks.push(dc.loadData());\n      });\n\n      // Show loading cursor\n      if (tasks.length > 0) this.busy();\n\n      await Promise.all(tasks);\n\n      // Hide loading cursor\n      this.ready();\n   }\n\n   busy() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.disable();\n      $downloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n      $downloadButton.refresh();\n   }\n\n   ready() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.enable();\n      $downloadButton.define(\"icon\", \"fa fa-file-word-o\");\n      $downloadButton.refresh();\n   }\n\n   async renderFile() {\n      this.busy();\n\n      const reportValues = this.getReportData();\n\n      // console.log(\"DOCX data: \", reportValues);\n\n      // Download images\n      const images = await this.downloadImages();\n\n      // Download the template file\n      const contentTemplateFile = await this.downloadTemplateFile();\n\n      // Generate Docx file\n      const blobFile = this.generateDocxFile(\n         contentTemplateFile,\n         reportValues,\n         images\n      );\n\n      const baseView = this.view;\n\n      // Let user download the output file\n      baseView.letUserDownload(blobFile, baseView.filelabel);\n\n      // Final step\n      this.ready();\n   }\n\n   getReportData() {\n      const result = {};\n\n      // Get current cursor\n      const datacollections = this.view.datacollections;\n      const isDcLabelAdded = datacollections.length > 1;\n\n      datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach(async (dc) => {\n            const obj = dc.datasource;\n            const objModel = obj.model();\n            const dcCursor = dc.getCursor();\n            const dcValues = [];\n            // const dataList = [];\n\n            // merge cursor to support dc and tree cursor in the report\n            // if (dcCursor) {\n            //    const treeCursor = dc.getCursor(true);\n\n            //    dataList.push(this.AB.merge({}, dcCursor, treeCursor));\n            // } else {\n            //    dataList.push(...this.AB.cloneDeep(dc.getData()));\n            // }\n\n            let where = {};\n            if (dcCursor) {\n               where = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: obj.PK(),\n                        rule: \"equals\",\n                        value: dcCursor[obj.PK()],\n                     },\n                  ],\n               };\n            } else {\n               where = this.AB.merge(\n                  where,\n                  dc.settings?.objectWorkspace?.filterConditions ?? {}\n               );\n            }\n\n            // Pull data that have full relation values.\n            // NOTE: When get data from DataCollection, those data is pruned.\n            const dataList = (\n               await objModel.findAll({\n                  disableMinifyRelation: true,\n                  populate: true,\n                  skip: 0,\n                  where,\n               })\n            ).data;\n\n            // update property names to column labels to match format names in docx file\n            const mlFields = obj.multilingualFields();\n\n            dataList.forEach((data) => {\n               let resultData;\n\n               // For support label of columns every languages\n               obj.fields().forEach((f) => {\n                  const fieldLabels = [];\n\n                  // Query Objects\n                  if (obj instanceof ABObjectQuery) {\n                     if (typeof f.object.translations === \"string\")\n                        f.object.translations = JSON.parse(\n                           f.object.translations\n                        );\n\n                     if (typeof f.translations === \"string\")\n                        f.translations = JSON.parse(f.translations);\n\n                     (f.object.translations || []).forEach((objTran) => {\n                        const fieldTran = (f.translations || []).filter(\n                           (fieldTran) =>\n                              fieldTran.language_code === objTran.language_code\n                        )[0];\n\n                        if (!fieldTran) return;\n\n                        const objectLabel = objTran.label;\n                        const fieldLabel = fieldTran.label;\n\n                        // Replace alias with label of object\n                        fieldLabels.push(`${objectLabel}.${fieldLabel}`);\n                     });\n                  }\n                  // Normal Objects\n                  else if (typeof f.translations === \"string\")\n                     f.translations = JSON.parse(f.translations);\n\n                  f.translations.forEach((tran) => {\n                     fieldLabels.push(tran.label);\n                  });\n\n                  resultData = Object.assign(\n                     resultData ?? {},\n                     this.setReportValues(data, f, fieldLabels, mlFields) ?? {}\n                  );\n\n                  // Keep ABObject into .scope of DOCX templater\n                  resultData._object = obj;\n               });\n\n               dcValues.push(resultData);\n            });\n\n            // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n            const datacollectionData =\n               dcValues.length > 1 ? dcValues : dcValues[0];\n\n            if (\n               isDcLabelAdded ||\n               (Array.isArray(datacollectionData) &&\n                  datacollectionData.length > 1)\n            )\n               (dc.translations || []).forEach((tran) => {\n                  result[tran.label] = datacollectionData;\n               });\n            else Object.assign(result, datacollectionData);\n         });\n\n      return result;\n   }\n\n   setReportValues(data, field, fieldLabels = [], multilinguageFields) {\n      const result = {};\n\n      let val = null;\n\n      result.id = data.id;\n      result[`${field.columnName}_ORIGIN`] = data[field.columnName]; // Keep origin value for compare value with custom index\n\n      const baseView = this.view;\n\n      // Translate multilinguage fields\n      if (multilinguageFields.length) {\n         const transFields = (multilinguageFields || []).filter(\n            (fieldName) => data[fieldName] != null\n         );\n\n         baseView.translate(data, data, transFields, baseView.languageCode);\n      }\n\n      // Pull value\n      if (field instanceof ABFieldConnect) {\n         // If field is connected field, then\n         // {\n         //    fieldName: {Object} or [Array]\n         // }\n         val = data[field.columnName];\n\n         if (val?.forEach)\n            val.forEach((v) => {\n               if (!v) return;\n\n               // Sentry Fix: sometimes v is just the uuid\n               // Q: what should we do in this case?\n               if (typeof v == \"string\") return;\n\n               // format relation data\n               if (field.datasourceLink) {\n                  field.datasourceLink\n                     .fields((f) => !f.isConnection)\n                     .forEach((f) => {\n                        v[`${f.columnName}_ORIGIN`] = v[f.columnName];\n\n                        v[f.columnName] = f.format(v, {\n                           languageCode: baseView.languageCode,\n                        });\n                     });\n               }\n\n               // Keep ABObject to relation data\n               if (v && typeof v === \"object\") v._object = field.datasourceLink;\n            });\n\n         // TODO\n         // data[label + '_label'] = field.format(baseData);\n      } else\n         val = field.format(data, {\n            languageCode: baseView.languageCode,\n         });\n\n      // Set value to report with every languages of label\n      fieldLabels.forEach((label) => {\n         if (val) result[label] = val;\n         else if (!result[label]) result[label] = \"\";\n      });\n\n      // normalize child items\n      if (data.data?.length) {\n         result.data = result.data || [];\n\n         (data.data || []).forEach((childItem, index) => {\n            // add new data item\n            result.data[index] = this.setReportValues(\n               childItem,\n               field,\n               fieldLabels,\n               multilinguageFields\n            );\n         });\n      }\n\n      return result;\n   }\n\n   async downloadImages() {\n      const images = {};\n      const tasks = [];\n      const addDownloadTask = (fieldImage, data = []) => {\n         data.forEach((d) => {\n            const imageVal = fieldImage.format(d);\n\n            if (imageVal && !images[imageVal]) {\n               tasks.push(\n                  new Promise((resolve, reject) => {\n                     const imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                     JSZipUtils.getBinaryContent(imgUrl, (error, content) => {\n                        if (error) return reject(error);\n\n                        // store binary of image\n                        images[imageVal] = content;\n\n                        resolve();\n                     });\n                  })\n               );\n            }\n\n            // download images of child items\n            addDownloadTask(fieldImage, d.data || []);\n         });\n      };\n\n      this.view.datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n\n            let currCursor = dc.getCursor();\n\n            if (currCursor) {\n               // Current cursor\n               const treeCursor = dc.getCursor(true);\n\n               currCursor = [this.AB.merge({}, currCursor, treeCursor)];\n            } // List of data\n            else currCursor = dc.getData();\n\n            obj.fields((f) => f instanceof ABFieldImage).forEach((f) => {\n               addDownloadTask(f, currCursor);\n            });\n         });\n\n      await Promise.all(tasks);\n\n      return images;\n   }\n\n   downloadTemplateFile() {\n      const url = this.view.downloadUrl();\n\n      return new Promise((resolve, reject) => {\n         JSZipUtils.getBinaryContent(url, (error, content) => {\n            if (error) return reject(error);\n\n            resolve(content);\n         });\n      });\n   }\n\n   generateDocxFile(contentFile, data, images) {\n      const summaries = {}; // { varName: sum number, ..., varName2: number2 }\n      const zip = new JSZip(contentFile);\n      const doc = new Docxtemplater();\n      const imageModule = new ImageModule({\n         centered: false,\n         getImage: (tagValue, tagName) => {\n            // NOTE: .getImage of version 3.0.2 does not support async\n            //       we can buy newer version to support it\n            //       https://docxtemplater.com/modules/image/\n\n            return images[tagValue] || \"\";\n         },\n         getSize: (imgBuffer, tagValue, tagName) => {\n            const defaultVal = [300, 160];\n            const baseView = this.view;\n            const dc = baseView.datacollection;\n\n            if (!dc) {\n               const dcs = baseView.datacollections;\n\n               if (dcs) {\n                  dcs.forEach((dc) => {\n                     let obj = dc.datasource;\n\n                     if (!obj) return false;\n\n                     // This is a query object\n                     if (tagName.indexOf(\".\") > -1) {\n                        let tagNames = tagName.split(\".\");\n\n                        if (!obj.objects) return false; // not a query\n\n                        obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                        if (!obj) return false;\n\n                        tagName = tagNames[1]; // Field name\n                     }\n\n                     const imageField = obj.fields(\n                        (f) => f.columnName === tagName\n                     )[0];\n\n                     if (!imageField?.settings) return false;\n\n                     if (\n                        imageField.settings.useWidth &&\n                        imageField.settings.imageWidth\n                     )\n                        defaultVal[0] = imageField.settings.imageWidth;\n\n                     if (\n                        imageField.settings.useHeight &&\n                        imageField.settings.imageHeight\n                     )\n                        defaultVal[1] = imageField.settings.imageHeight;\n\n                     return false;\n                  });\n\n                  return defaultVal;\n               } else return defaultVal;\n            } else {\n               let obj = dc.datasource;\n\n               if (!obj) return defaultVal;\n\n               // This is a query object\n               if (tagName.indexOf(\".\") > -1) {\n                  const tagNames = tagName.split(\".\");\n\n                  obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                  if (!obj) return defaultVal;\n\n                  tagName = tagNames[1]; // Field name\n               }\n\n               const imageField = obj.fields(\n                  (f) => f.columnName === tagName\n               )[0];\n\n               if (!imageField?.settings) return defaultVal;\n\n               if (\n                  imageField.settings.useWidth &&\n                  imageField.settings.imageWidth\n               )\n                  defaultVal[0] = imageField.settings.imageWidth;\n\n               if (\n                  imageField.settings.useHeight &&\n                  imageField.settings.imageHeight\n               )\n                  defaultVal[1] = imageField.settings.imageHeight;\n\n               return defaultVal;\n            }\n         },\n         // getSize: function (imgBuffer, tagValue, tagName) {\n         //    if (imgBuffer) {\n         //       var maxWidth = 300;\n         //       var maxHeight = 160;\n\n         //       // Find aspect ratio image dimensions\n         //       try {\n         //          var image = sizeOf(imgBuffer);\n         //          var ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n         //          return [image.width * ratio, image.height * ratio];\n         //       }\n         //       // if invalid image, then should return 0, 0 sizes\n         //       catch (err) {\n         //          return [0, 0];\n         //       }\n\n         //    }\n         //    else {\n         //       return [0, 0];\n         //    }\n         // }\n      });\n\n      try {\n         doc.attachModule(imageModule)\n            .loadZip(zip)\n            .setData(data)\n            .setOptions({\n               parser: function (tag) {\n                  return {\n                     get: function (scope, context) {\n                        // NOTE: AppBuilder custom filter : no return empty items\n                        if (tag.indexOf(\"data|\") === 0) {\n                           const prop = (tag.split(\"|\")[1] || \"\").trim();\n\n                           return (scope[\"data\"] || []).filter(function (item) {\n                              return item[prop] ? true : false;\n                           });\n                        }\n                        // Mark number to add to a variable\n                        else if (tag.indexOf(\"|$sum?\") > -1) {\n                           const prop = tag.split(\"|$sum?\")[0];\n                           const varName = tag.split(\"|$sum?\")[1];\n\n                           let number = scope[prop];\n\n                           if (typeof number === \"string\")\n                              number = number.replace(\n                                 /[^\\d.]/g, // return only number and dot\n                                 \"\"\n                              );\n\n                           if (!summaries[varName]) summaries[varName] = 0.0;\n\n                           summaries[varName] += parseFloat(number);\n\n                           return scope[prop];\n                        }\n                        // Show sum value ^\n                        else if (tag.indexOf(\"$sum?\") === 0) {\n                           const varName = tag.replace(\"$sum?\", \"\");\n\n                           return summaries[varName] || 0;\n                        }\n                        // // Sum number of .data (Grouped query)\n                        // else if (tag.indexOf(\"$sum|\") === 0) {\n                        //    const prop = (\n                        //       tag.split(\"|\")[1] || \"\"\n                        //    ).trim();\n\n                        //    let sum = 0;\n                        //    (scope[\"data\"] || []).forEach(\n                        //       (childItem) => {\n                        //          if (!childItem[prop]) return;\n\n                        //          let number = childItem[prop];\n                        //          if (typeof number === \"string\") {\n                        //             number = number.replace(\n                        //                /[^\\d.]/g, // return only number and dot\n                        //                \"\"\n                        //             );\n                        //          }\n\n                        //          try {\n                        //             sum += parseFloat(\n                        //                number || 0\n                        //             );\n                        //          } catch (e) {}\n                        //       }\n                        //    );\n\n                        //    // Print number with commas\n                        //    if (sum) {\n                        //       sum = sum\n                        //          .toString()\n                        //          .replace(\n                        //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                        //             \",\"\n                        //          );\n                        //    }\n\n                        //    return sum;\n                        // }\n                        // NOTE: AppBuilder custom filter of another data source\n                        else if (tag.indexOf(\"$\") === 0) {\n                           const props = tag.replace(\"$\", \"\").split(\"|\");\n                           const propSource = props[0].trim();\n                           const propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                           if (!propSource || !propFilter) return \"\";\n\n                           // Pull Index field of connect field\n                           let indexColName;\n\n                           const obj = scope._object;\n\n                           if (obj) {\n                              const connectedField = obj.fields(\n                                 (f) => f.columnName === propFilter\n                              )[0];\n\n                              if (connectedField) {\n                                 const indexField = connectedField.indexField;\n\n                                 indexColName = indexField\n                                    ? indexField.columnName\n                                    : null;\n                              }\n                           }\n\n                           let sourceVals = data[propSource];\n\n                           if (sourceVals && !Array.isArray(sourceVals))\n                              sourceVals = [sourceVals];\n\n                           const getVal = (data) =>\n                              data[`${indexColName}_ORIGIN`] || // Pull origin data to compare by custom index\n                              data[indexColName] ||\n                              data.id ||\n                              data;\n\n                           return (sourceVals || []).filter(function (item) {\n                              // Pull data of parent to compare\n                              let comparer = scope[propFilter];\n\n                              if (Array.isArray(comparer))\n                                 return (\n                                    comparer.filter(\n                                       (c) => getVal(c) === getVal(item)\n                                    ).length > 0\n                                 );\n                              else return getVal(item) === getVal(comparer);\n                           });\n                        }\n                        // ์NOTE : Custom filter\n                        else if (tag.indexOf(\"?\") > -1) {\n                           const result = scope;\n                           const prop = tag.split(\"?\")[0];\n                           const condition = tag.split(\"?\")[1];\n\n                           if (prop && condition) {\n                              let data = scope[prop];\n\n                              if (data) {\n                                 if (!Array.isArray(data)) data = [data];\n\n                                 return data.filter((d) =>\n                                    eval(condition.replace(/\\./g, \"d.\"))\n                                 );\n                              }\n                           }\n                           return result;\n                        } else if (tag === \".\") return scope;\n                        else return scope[tag];\n                     },\n                  };\n               },\n            })\n            .render(); // render the document\n      } catch (error) {\n         return error;\n      }\n\n      // Output the document using Data-URI\n      const docxFile = doc.getZip().generate({\n         type: \"blob\",\n         mimeType:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n\n      return docxFile;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormButton_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = baseView.settings ?? {};\n\n      const alignment =\n         settings.alignment || baseView.constructor.defaultValues().alignment;\n\n      const _ui = {\n         cols: [],\n      };\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"right\") {\n         _ui.cols.push({});\n      }\n\n      // cancel button\n      if (settings.includeCancel) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.cancelLabel || this.label(\"Cancel\"),\n               click: function () {\n                  self.onCancel(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button cancel ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // reset button\n      if (settings.includeReset) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.resetLabel || this.label(\"Reset\"),\n               click: function () {\n                  self.onClear(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button reset ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // save button\n      if (settings.includeSave) {\n         _ui.cols.push({\n            view: \"button\",\n            type: \"form\",\n            css: \"webix_primary\",\n            autowidth: true,\n            value: settings.saveLabel || this.label(\"Save\"),\n            click: function () {\n               self.onSave(this);\n            },\n            on: {\n               onAfterRender: function () {\n                  this.getInputNode().setAttribute(\n                     \"data-cy\",\n                     `button save ${form.id}`\n                  );\n               },\n            },\n         });\n      }\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"left\") _ui.cols.push({});\n\n      return super.ui(_ui);\n   }\n\n   onCancel(cancelButton) {\n      const baseView = this.view;\n      const settings = baseView.settings ?? {};\n\n      // get form component\n      const form = baseView.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      dc?.setCursor(null);\n\n      cancelButton?.getFormView?.().clear();\n\n      if (settings.afterCancel) form.changePage(settings.afterCancel);\n      // If the redirect page is not defined, then redirect to parent page\n      else {\n         const noPopupFilter = (p) => p.settings && p.settings.type != \"popup\";\n\n         const pageCurr = this.pageParent();\n         if (pageCurr) {\n            const pageParent = pageCurr.pageParent(noPopupFilter) ?? pageCurr;\n\n            if (pageParent) form.changePage(pageParent.id);\n         }\n      }\n   }\n\n   onClear(resetButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      if (dc) {\n         dc.setCursor(null);\n      }\n\n      resetButton?.getFormView?.().clear();\n   }\n\n   onSave(saveButton) {\n      if (!saveButton) {\n         console.error(\"Require the button element\");\n         return;\n      }\n      // get form component\n      const form = this.view.parentFormComponent();\n      const formView = saveButton.getFormView();\n\n      // disable the save button\n      saveButton.disable?.();\n\n      // save data\n      form\n         .saveData(formView)\n         .then(() => {\n            saveButton.enable?.();\n\n            //Focus on first focusable component\n            form.focusOnFirst();\n         })\n         .catch((err) => {\n            console.error(err);\n            // Catch uncaught error reported in Sentry and add context\n            // APPBUILDER-WEB-1A3(https://appdev-designs.sentry.io/issues/4631880265/)\n            try {\n               saveButton.enable?.();\n            } catch (e) {\n               this.AB.notify.developer(e, {\n                  context:\n                     \"formButton.onSave > catch err > saveButton.enable()\",\n                  buttonID: this?.view?.id,\n                  formID: this?.view?.parent?.id,\n               });\n            }\n         });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormCheckboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui({\n         view: \"checkbox\",\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormItem = require(\"../ABViewFormItem\");\nconst ABViewFormConnect = require(\"../ABViewFormConnect\");\nconst ABViewFormCustom = require(\"../ABViewFormCustom\");\nconst ABViewFormTextbox = require(\"../ABViewFormTextbox\");\nconst ABViewFormJson = require(\"../ABViewFormJson\");\n\nasync function timeout(ms) {\n   return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst fieldValidations = [];\n\nmodule.exports = class ABViewFormComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewForm_${baseView.id}`,\n         Object.assign(\n            {\n               form: \"\",\n\n               layout: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.timerId = null;\n      this._showed = false;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const superComponent = baseView.superComponent();\n      const rows = superComponent.ui().rows ?? [];\n      const fieldValidationsHolder = this.uiValidationHolder();\n      const _ui = super.ui([\n         {\n            id: this.ids.form,\n            view: \"form\",\n            abid: baseView.id,\n            rows: rows.concat(fieldValidationsHolder),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiValidationHolder() {\n      const result = [\n         {\n            hidden: true,\n            rows: [],\n         },\n      ];\n\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      const baseView = this.view;\n      const object = this.datacollection?.datasource ?? baseView._currentObject;\n\n      if (!object) return result;\n\n      const validationUI = [];\n      const existsFields = baseView.fieldComponents();\n\n      object\n         // Pull fields that have validation rules\n         .fields((f) => f?.settings?.validationRules)\n         .forEach((f) => {\n            const view = existsFields.find(\n               (com) => f.id === com.settings.fieldId\n            );\n            if (!view) return;\n\n            // parse the rules because they were stored as a string\n            // check if rules are still a string...if so lets parse them\n            if (typeof f.settings.validationRules === \"string\") {\n               f.settings.validationRules = JSON.parse(\n                  f.settings.validationRules\n               );\n            }\n\n            // there could be more than one so lets loop through and build the UI\n            f.settings.validationRules.forEach((rule, indx) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.columnName}_${indx}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               if (typeof Filter.ui === \"function\") {\n                  validationUI.push(Filter.ui());\n               } else {\n                  // Legacy v1 method:\n                  validationUI.push(Filter.ui);\n               }\n\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.columnName,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n               });\n            });\n         });\n\n      result.rows = validationUI;\n\n      return result;\n   }\n\n   async init(AB, accessLevel, options = {}) {\n      await super.init(AB);\n\n      this.view.superComponent().init(AB, accessLevel, options);\n\n      this.initCallbacks(options);\n      this.initEvents();\n      this.initValidationRules();\n\n      const abWebix = this.AB.Webix;\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         abWebix.extend($form, abWebix.ProgressBar);\n      }\n\n      if (accessLevel < 2) $form.disable();\n   }\n\n   initCallbacks(options = {}) {\n      // ? We need to determine from these options whether to clear on load?\n      if (options?.clearOnLoad) {\n         // does this need to be a function?\n         this.view.settings.clearOnLoad = options.clearOnLoad();\n      }\n      // Q: Should we use emit the event instead ?\n      const baseView = this.view;\n\n      if (options.onBeforeSaveData)\n         baseView._callbacks.onBeforeSaveData = options.onBeforeSaveData;\n      else baseView._callbacks.onBeforeSaveData = () => true;\n   }\n\n   initEvents() {\n      // bind a data collection to form component\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // listen DC events\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"changeCursor\",\n         listener: (rowData) => {\n            const baseView = this.view;\n            const linkViaOneConnection = baseView.fieldComponents(\n               (comp) => comp instanceof ABViewFormConnect\n            );\n            // clear previous xxx->one selections and add new from\n            // cursor change\n            linkViaOneConnection.forEach((f) => {\n               const field = f.field();\n               if (\n                  field?.settings?.linkViaType == \"one\" &&\n                  field?.linkViaOneValues\n               ) {\n                  delete field.linkViaOneValues;\n                  if (rowData?.[field.columnName]) {\n                     if (Array.isArray(rowData[field.columnName])) {\n                        let valArray = [];\n                        rowData[field.columnName].forEach((v) => {\n                           valArray.push(v[field.object.PK()]);\n                        });\n                        field.linkViaOneValues = valArray.join();\n                     } else {\n                        field.linkViaOneValues = rowData[field.columnName];\n                     }\n                  }\n               }\n            });\n\n            this.displayData(rowData);\n         },\n      });\n\n      const ids = this.ids;\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializingData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.disable();\n\n               $form.showProgress?.({ type: \"icon\" });\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.enable();\n\n               $form.hideProgress?.();\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"ab.datacollection.update\",\n         listener: (msg, data) => {\n            if (!data?.objectId) return;\n\n            const object = dc.datasource;\n\n            if (!object) return;\n\n            if (\n               object.id === data.objectId ||\n               object.fields((f) => f.settings.linkObject === data.objectId)\n                  .length > 0\n            ) {\n               const currData = dc.getCursor();\n\n               if (currData) this.displayData(currData);\n            }\n         },\n      });\n\n      // bind the cursor event of the parent DC\n      const linkDv = dc.datacollectionLink;\n\n      if (linkDv)\n         // update the value of link field when data of the parent dc is changed\n         this.eventAdd({\n            emitter: linkDv,\n            eventName: \"changeCursor\",\n            listener: (rowData) => {\n               this.displayParentData(rowData);\n            },\n         });\n   }\n\n   initValidationRules() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (!fieldValidations.length) return;\n\n      // we need to store the rules for use later so lets build a container array\n      const complexValidations = [];\n\n      fieldValidations.forEach((f) => {\n         // init each ui to have the properties (app and fields) of the object we are editing\n         f.filter.applicationLoad(dc.datasource.application);\n         f.filter.fieldsLoad(dc.datasource.fields());\n         // now we can set the value because the fields are properly initialized\n         f.filter.setValue(f.validationRules);\n\n         // if there are validation rules present we need to store them in a lookup hash\n         // so multiple rules can be stored on a single field\n         if (!Array.isArray(complexValidations[f.columnName]))\n            complexValidations[f.columnName] = [];\n\n         // now we can push the rules into the hash\n         complexValidations[f.columnName].push({\n            filters: $$(f.view).getFilterHelper(),\n            // values: $$(ids.form).getValues(),\n            invalidMessage: f.invalidMessage,\n         });\n      });\n\n      const ids = this.ids;\n\n      // use the lookup to build the validation rules\n      Object.keys(complexValidations).forEach((key) => {\n         // get our field that has validation rules\n         const formField = $$(ids.form).queryView({\n            name: key,\n         });\n\n         // store the rules in a data param to be used later\n         formField.$view.complexValidations = complexValidations[key];\n         // define validation rules\n         formField.define(\"validate\", function (nval, oval, field) {\n            // get field now that we are validating\n            const fieldValidating = $$(ids.form).queryView({\n               name: field,\n            });\n\n            // default valid is true\n            let isValid = true;\n\n            // check each rule that was stored previously on the element\n            fieldValidating.$view.complexValidations.forEach((filter) => {\n               const object = dc.datasource;\n               const data = this.getValues();\n\n               // convert rowData from { colName : data } to { id : data }\n               const newData = {};\n\n               (object.fields() || []).forEach((field) => {\n                  newData[field.id] = data[field.columnName];\n               });\n\n               // for the case of \"this_object\" conditions:\n               if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n               // use helper funtion to check if valid\n               const ruleValid = filter.filters(newData);\n\n               // if invalid we need to tell the field\n               if (!ruleValid) {\n                  isValid = false;\n                  // we also need to define an error message\n                  fieldValidating.define(\n                     \"invalidMessage\",\n                     filter.invalidMessage\n                  );\n               }\n            });\n\n            return isValid;\n         });\n\n         formField.refresh();\n      });\n   }\n\n   async loadDcDataOfRecordRules() {\n      const tasks = [];\n\n      (this.settings?.recordRules ?? []).forEach((rule) => {\n         (rule?.actionSettings?.valueRules?.fieldOperations ?? []).forEach(\n            (op) => {\n               if (op.valueType !== \"exist\") return;\n\n               const pullDataDC = this.AB.datacollectionByID(op.value);\n\n               if (\n                  pullDataDC?.dataStatus ===\n                  pullDataDC.dataStatusFlag.notInitial\n               )\n                  tasks.push(pullDataDC.loadData());\n            }\n         );\n      });\n\n      return await Promise.all(tasks);\n   }\n\n   async onShow(data) {\n      this.saveButton?.disable();\n\n      this._showed = true;\n\n      const baseView = this.view;\n\n      // call .onShow in the base component\n      const superComponent = baseView.superComponent();\n      await superComponent.onShow();\n\n      const $form = $$(this.ids.form);\n      const dc = this.datacollection;\n\n      if (dc) {\n         // clear current cursor on load\n         // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n         const settings = this.settings;\n\n         if (settings.clearOnLoad) {\n            dc.setCursor(null);\n         }\n\n         // pull data of current cursor\n         const rowData = dc.getCursor();\n\n         if ($form) dc.bind($form);\n\n         // do this for the initial form display so we can see defaults\n         await this.displayData(rowData);\n      }\n      // show blank data in the form\n      else await this.displayData(data ?? {});\n\n      //Focus on first focusable component\n      this.focusOnFirst();\n\n      if ($form) $form.adjust();\n\n      await this.loadDcDataOfRecordRules();\n\n      this.saveButton?.enable();\n   }\n\n   async displayData(rowData) {\n      // If setTimeout is already scheduled, no need to do anything\n      if (this.timerId) return;\n      else this.timerId = await timeout(80);\n\n      const baseView = this.view;\n      const customFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            // rich text\n            (comp instanceof ABViewFormTextbox &&\n               comp.settings.type === \"rich\") ||\n            (comp instanceof ABViewFormJson && comp.settings.type === \"filter\")\n      );\n\n      // Set default values\n      if (!rowData) {\n         customFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            // var colName = field.columnName;\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            const defaultRowData = {};\n\n            field.defaultValue(defaultRowData);\n            field.setValue($$(comp.ids.formItem), defaultRowData);\n\n            comp?.refresh?.(defaultRowData);\n         });\n\n         const normalFields = baseView.fieldComponents(\n            (comp) =>\n               comp instanceof ABViewFormItem &&\n               !(comp instanceof ABViewFormCustom)\n         );\n\n         normalFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (f.key === \"button\") return;\n\n            const colName = field.columnName;\n\n            // set value to each components\n            const values = {};\n\n            field.defaultValue(values);\n            $$(comp.ids.formItem)?.setValue(values[colName] ?? \"\");\n         });\n\n         // select parent data to default value\n         const dc = this.datacollection;\n         const linkDv = dc.datacollectionLink;\n\n         if (linkDv) {\n            const parentData = linkDv.getCursor();\n\n            this.displayParentData(parentData);\n         }\n      }\n\n      // Populate value to custom fields\n      else\n         customFields.forEach((f) => {\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            f?.field()?.setValue($$(comp.ids.formItem), rowData);\n\n            comp?.refresh?.(rowData);\n         });\n\n      this.timerId = null;\n   }\n\n   displayParentData(rowData) {\n      const dc = this.datacollection;\n\n      // If the cursor is selected, then it will not update value of the parent field\n      const currCursor = dc.getCursor();\n      if (currCursor) return;\n\n      const relationField = dc.fieldLink;\n      if (!relationField) return;\n\n      const baseView = this.view;\n      // Pull a component of relation field\n      const relationFieldCom = baseView.fieldComponents((comp) => {\n         if (!(comp instanceof ABViewFormItem)) return false;\n\n         return comp.field()?.id === relationField.id;\n      })[0];\n      if (!relationFieldCom) return;\n\n      const relationFieldView = baseView.viewComponents[relationFieldCom.id];\n      if (!relationFieldView) return;\n\n      const $relationFieldView = $$(relationFieldView.ids.formItem),\n         relationName = relationField.relationName();\n\n      // pull data of parent's dc\n      const formData = {};\n\n      formData[relationName] = rowData;\n\n      // set data of parent to default value\n      relationField.setValue($relationFieldView, formData);\n   }\n\n   detatch() {\n      // TODO: remove any handlers we have attached.\n   }\n\n   focusOnFirst() {\n      const baseView = this.view;\n\n      let topPosition = 0;\n      let topPositionId = \"\";\n\n      baseView.views().forEach((item) => {\n         if (item.key === \"textbox\" || item.key === \"numberbox\")\n            if (item.position.y === topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n      });\n\n      const childComponent = baseView.viewComponents[topPositionId];\n\n      if (childComponent && $$(childComponent.ids.formItem))\n         $$(childComponent.ids.formItem).focus();\n   }\n\n   get saveButton() {\n      return $$(this.ids.form)?.queryView({\n         view: \"button\",\n         type: \"form\",\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormConnectComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormConnect_${baseView.id}`,\n         Object.assign(\n            {\n               popup: \"\",\n               editpopup: \"\",\n            },\n            ids\n         )\n      );\n\n      this.addPageComponent = null;\n      this.editPageComponent = null;\n   }\n\n   get field() {\n      return this.view.field();\n   }\n\n   ui() {\n      const field = this.field;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = this.settings;\n\n      if (!field) {\n         console.error(`This field could not found : ${settings.fieldId}`);\n\n         return super.ui({\n            view: \"label\",\n            label: \"\",\n         });\n      }\n\n      const multiselect = field.settings.linkType == \"many\";\n      const formSettings = form?.settings || {};\n      const ids = this.ids;\n\n      let _ui = {\n         id: ids.formItem,\n         view: multiselect ? \"multicombo\" : \"combo\",\n         name: field.columnName,\n         required:\n            field?.settings?.required || parseInt(settings?.required) || false,\n         // label: field.label,\n         // labelWidth: settings.labelWidth,\n         dataFieldId: field.id,\n         on: {\n            onItemClick: (id, e) => {\n               if (\n                  e.target.classList.contains(\"editConnectedPage\") &&\n                  e.target.dataset.itemId\n               ) {\n                  const rowId = e.target.dataset.itemId;\n                  if (!rowId) return;\n                  this.goToEditPage(rowId);\n               }\n            },\n            onChange: (data) => {\n               this._onChange(data);\n            },\n         },\n      };\n\n      if (formSettings.showLabel) {\n         _ui.label = field.label;\n         _ui.labelWidth = formSettings.labelWidth;\n         _ui.labelPosition = formSettings.labelPosition;\n      }\n\n      this.initAddEditTool();\n\n      _ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            data: [],\n            template: `${\n               baseView?.settings?.editForm\n                  ? '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>'\n                  : \"\"\n            }#value#`,\n         },\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.formItem), field, form);\n            },\n         },\n         // Support partial matches\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n      };\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            if (settings.disable === 1) return;\n\n            const rowData = {};\n            const $formItem = $$(ids.formItem);\n\n            if ($formItem) {\n               const node = $formItem.$view;\n\n               field.customEdit(rowData, /* App,*/ node);\n            }\n         },\n      };\n\n      let apcUI = this.addPageComponent?.ui;\n      if (apcUI) {\n         // reset some component vals to make room for button\n         _ui.label = \"\";\n         _ui.labelWidth = 0;\n\n         // add click event to add new button\n         apcUI.on = {\n            onItemClick: (/*id, evt*/) => {\n               // let $form = $$(id).getFormView();\n               this.addPageComponent?.onClick(form.datacollection);\n\n               return false;\n            },\n         };\n\n         _ui = {\n            inputId: ids.formItem,\n            rows: [\n               {\n                  cols: [\n                     {\n                        view: \"label\",\n                        label: field.label,\n                        width: formSettings.labelWidth,\n                        align: \"left\",\n                     },\n                     apcUI,\n                     _ui,\n                  ],\n               },\n            ],\n         };\n\n         _ui = super.ui(_ui);\n      } else {\n         _ui = {\n            inputId: ids.formItem,\n            rows: [_ui],\n         };\n\n         _ui = super.ui(_ui);\n\n         delete _ui.rows[0].id;\n      }\n\n      return _ui;\n   }\n\n   async _onChange(data) {\n      const ids = this.ids;\n      const field = this.field;\n      const baseView = this.view;\n\n      let selectedValues;\n      if (Array.isArray(data)) {\n         selectedValues = [];\n         data.forEach((record) => {\n            selectedValues.push(record.id || record);\n            // let recordObj = record;\n            // if (typeof record != \"object\") {\n            //    // we need to convert either index or uuid to full data object\n            //    recordObj = field.getItemFromVal(record);\n            // }\n            // if (recordObj?.id) selectedValues.push(recordObj.id);\n         });\n      } else {\n         selectedValues = data;\n         if (typeof data != \"object\") {\n            // we need to convert either index or uuid to full data object\n            selectedValues = field.getItemFromVal(data);\n         }\n         // selectedValues = field.pullRecordRelationValues(selectedValues);\n         if (selectedValues?.id) {\n            selectedValues = selectedValues.id;\n         } else {\n            selectedValues = data;\n         }\n      }\n\n      // We can now set the new value but we need to block event listening\n      // so it doesn't trigger onChange again\n      const $formItem = $$(ids.formItem);\n\n      // Q: if we don't have a $formItem, is any of the rest valid?\n      if ($formItem) {\n         // for xxx->one connections we need to populate again before setting\n         // values because we need to use the selected values to add options\n         // to the UI\n         if (this?.field?.settings?.linkViaType == \"one\") {\n            this.busy();\n            await field.getAndPopulateOptions(\n               $formItem,\n               baseView.options,\n               field,\n               baseView.parentFormComponent()\n            );\n            this.ready();\n         }\n\n         $formItem.blockEvent();\n\n         const prepedVals = selectedValues.join\n            ? selectedValues.join()\n            : selectedValues;\n\n         $formItem.setValue(prepedVals);\n         $formItem.unblockEvent();\n      }\n   }\n\n   async init(AB, options) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if ($formItem) webix.extend($formItem, webix.ProgressBar);\n\n      this.initAddEditTool();\n   }\n\n   initAddEditTool() {\n      const baseView = this.view;\n\n      // Initial add/edit page tools\n      const addFormID = baseView?.settings?.formView;\n      if (addFormID && baseView && !this.addPageComponent) {\n         this.addPageComponent = baseView.addPageTool.component(\n            this.AB,\n            `${baseView.id}_${addFormID}`\n         );\n         this.addPageComponent.applicationLoad(baseView.application);\n         this.addPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n\n      const editFormID = baseView?.settings?.editForm;\n      if (editFormID && baseView && !this.editPageComponent) {\n         this.editPageComponent = baseView.editPageTool.component(\n            this.AB,\n            `${baseView.id}_${editFormID}`\n         );\n         this.editPageComponent.applicationLoad(baseView.application);\n         this.editPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n   }\n\n   async callbackSaveData(saveData) {\n      if (saveData == null) return;\n      else if (!Array.isArray(saveData)) saveData = [saveData];\n\n      const ids = this.ids;\n      const field = this.field;\n\n      // find the select component\n      const $formItem = $$(ids.formItem);\n      if (!$formItem) return;\n\n      // Refresh option list\n      this.busy();\n      field.clearStorage(this.view.settings.filterConditions);\n      const data = await field.getAndPopulateOptions(\n         $formItem,\n         this.view.options,\n         field,\n         this.view.parentFormComponent()\n      );\n      this.ready();\n\n      // field.once(\"option.data\", (data) => {\n      data.forEach((item) => {\n         item.value = item.text;\n      });\n\n      $formItem.getList().clearAll();\n      $formItem.getList().define(\"data\", data);\n\n      if (field.settings.linkType === \"many\") {\n         let selectedItems = $formItem.getValue();\n         saveData.forEach((sData) => {\n            if (selectedItems.indexOf(sData.id) === -1)\n               selectedItems = selectedItems\n                  ? `${selectedItems},${sData.id}`\n                  : sData.id;\n         });\n\n         $formItem.setValue(selectedItems);\n      } else {\n         $formItem.setValue(saveData[0].id);\n      }\n      // close the popup when we are finished\n      // $$(ids.popup)?.close();\n      // $$(ids.editpopup)?.close();\n      // });\n\n      // field.getOptions(this.settings.filterConditions, \"\");\n      // .then(function (data) {\n      //    // we need new option that will be returned from server (above)\n      //    // so we will not set this and then just reset it.\n      // });\n   }\n\n   callbackCancel() {\n      $$(this.ids?.popup)?.close?.();\n\n      return false;\n   }\n\n   callbackClearOnLoad() {\n      return true;\n   }\n\n   getValue(rowData) {\n      return this.field.getValue($$(this.ids.formItem), rowData);\n   }\n\n   formBusy($form) {\n      if (!$form) return;\n\n      $form.disable?.();\n      $form.showProgress?.({ type: \"icon\" });\n   }\n\n   formReady($form) {\n      if (!$form) return;\n\n      $form.enable?.();\n      $form.hideProgress?.();\n   }\n\n   goToEditPage(rowId) {\n      const settings = this.settings;\n\n      if (!settings.editForm) return;\n\n      const editForm = this.view.application.urlResolve(settings.editForm);\n\n      if (!editForm) return;\n\n      const $form = $$(this.ids.formItem).getFormView() || null;\n\n      // Open the form popup\n      this.editPageComponent.onClick().then(() => {\n         const dc = editForm.datacollection;\n\n         if (dc) {\n            dc.setCursor(rowId);\n\n            this.__editFormDcEvent =\n               this.__editFormDcEvent ||\n               dc.on(\"initializedData\", () => {\n                  dc.setCursor(rowId);\n               });\n         }\n      });\n   }\n\n   async onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const field = this.field;\n\n      if (!field) return;\n\n      const node = $formItem.$view;\n\n      if (!node) return;\n\n      const $node = $$(node);\n\n      if (!$node) return;\n\n      const settings = this.settings;\n      let filterConditions = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (settings?.filterConditions?.rules?.length) {\n         filterConditions = this.AB.cloneDeep(\n            this.view.settings.filterConditions\n         );\n      }\n\n      // NOTE: compatible with version 1. This code should not be here too long.\n      if (\n         !filterConditions?.rules?.length &&\n         settings?.objectWorkspace?.filterConditions?.rules?.length\n      ) {\n         filterConditions = this.AB.cloneDeep(\n            settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Add the filter connected value\n      if ((settings?.filterConnectedValue ?? \"\").indexOf(\":\") > -1) {\n         const values = settings.filterConnectedValue.split(\":\"),\n            uiConfigName = values[0],\n            connectFieldId = values[1];\n\n         filterConditions.rules.push({\n            key: connectFieldId,\n            rule: \"filterByConnectValue\",\n            value: uiConfigName,\n         });\n      }\n\n      const getFilterByConnectValues = (conditions, depth = 0) => {\n         return [\n            ...conditions.rules\n               .filter((e) => e.rule === \"filterByConnectValue\")\n               .map((e) => {\n                  const filterByConnectValue = Object.assign({}, e);\n\n                  filterByConnectValue.depth = depth;\n\n                  return filterByConnectValue;\n               }),\n         ].concat(\n            ...conditions.rules\n               .filter((e) => e.glue)\n               .map((e) => getFilterByConnectValues(e, depth + 1))\n         );\n      };\n\n      const baseView = this.view;\n      const filterByConnectValues = getFilterByConnectValues(\n         filterConditions\n      ).map((e) => {\n         for (const key in baseView.parent.viewComponents) {\n            if (\n               !(\n                  baseView.parent.viewComponents[key] instanceof\n                  this.constructor\n               )\n            )\n               continue;\n\n            const $ui = $$(\n               baseView.parent.viewComponents[key]\n                  .ui()\n                  .rows.find((vc) => vc.inputId)?.inputId\n            );\n\n            if ($ui?.config?.name === e.value) {\n               // we need to use the element id stored in the settings to find out what the\n               // ui component id is so later we can use it to look up its current value\n               e.filterValue = $ui;\n\n               break;\n            }\n         }\n\n         const ab = this.AB;\n         const field = ab\n            .objectByID(settings.objectId)\n            .fieldByID(settings.fieldId);\n         const linkedObject = ab.objectByID(field.settings.linkObject);\n         const linkedField = linkedObject.fieldByID(e.key);\n\n         if (linkedField?.settings?.isCustomFK) {\n            // finally if this is a custom foreign key we need the stored columnName by\n            // default uuid is passed for all non CFK\n            e.filterColumn = ab\n               .objectByID(linkedField.settings.linkObject)\n               .fields(\n                  (filter) =>\n                     filter.id === linkedField.settings.indexField ||\n                     linkedField.settings.indexField2\n               )[0].columnName;\n         } else e.filterColumn = null;\n\n         return e;\n      });\n\n      baseView.options = {\n         formView: settings.formView,\n         filters: filterConditions,\n         // NOTE: settings.objectWorkspace.xxx is a depreciated setting.\n         // We will be phasing this out.\n         sort: settings.sortFields ?? settings.objectWorkspace?.sortFields,\n         editable: settings.disable === 1 ? false : true,\n         editPage:\n            !settings.editForm || settings.editForm === \"none\" ? false : true,\n         filterByConnectValues,\n      };\n\n      // if this field's options are filtered off another field's value we need\n      // to make sure the UX helps the user know what to do.\n      // fetch the options and set placeholder text for this view\n      if (baseView.options.editable) {\n         const parentFields = [];\n\n         filterByConnectValues.forEach((fv) => {\n            if (fv.filterValue && fv.key) {\n               const $filterValueConfig = $$(fv.filterValue.config.id);\n\n               let parentField = null;\n\n               if (!$filterValueConfig) {\n                  // this happens in the Interface Builder when only the single form UI is displayed\n                  parentField = {\n                     id: \"perentElement\",\n                     label: this.label(\"PARENT ELEMENT\"),\n                  };\n               } else {\n                  const value = field.getValue($filterValueConfig);\n\n                  if (!value) {\n                     // if there isn't a value on the parent select element set this one to readonly and change placeholder text\n                     parentField = {\n                        id: fv.filterValue.config.id,\n                        label: $filterValueConfig.config.label,\n                     };\n                  }\n\n                  $filterValueConfig.attachEvent(\n                     \"onChange\",\n                     async (e) => {\n                        const parentVal = $filterValueConfig.getValue();\n\n                        if (parentVal) {\n                           $node.define(\"disabled\", false);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Select items\")\n                           );\n                           this.busy();\n                           await field.getAndPopulateOptions(\n                              $node,\n                              baseView.options,\n                              field,\n                              baseView.parentFormComponent()\n                           );\n                           this.ready();\n                        } else {\n                           $node.define(\"disabled\", true);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Must select item from '{0}' first.\", [\n                                 $filterValueConfig.config.label,\n                              ])\n                           );\n                        }\n\n                        // TODO: Do we need to clear selected value?\n                        // $node.setValue(\"\");\n                        $node.refresh();\n                     },\n                     false\n                  );\n               }\n\n               if (\n                  parentField &&\n                  parentFields.findIndex((e) => e.id === parentField.id) < 0\n               )\n                  parentFields.push(parentField);\n            }\n         });\n\n         if (parentFields.length && !$node.getValue()) {\n            $node.define(\"disabled\", true);\n            $node.define(\n               \"placeholder\",\n               this.label(`Must select item from '{0}' first.`, [\n                  parentFields.map((e) => e.label).join(\", \"),\n               ])\n            );\n         } else {\n            $node.define(\"disabled\", false);\n            $node.define(\"placeholder\", this.label(\"Select items\"));\n         }\n      } else {\n         $node.define(\"placeholder\", \"\");\n         $node.define(\"disabled\", true);\n      }\n\n      $node.refresh();\n\n      this.busy();\n      await field.getAndPopulateOptions(\n         // $node,\n         $formItem,\n         baseView.options,\n         field,\n         baseView.parentFormComponent()\n      );\n      this.ready();\n\n      // Add data-cy attributes\n      const dataCy = `${field.key} ${field.columnName} ${field.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      // Need to refresh selected values when they are custom index\n      this._onChange($formItem.getValue());\n   }\n\n   busy() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.disable();\n      $formItem?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.enable();\n      $formItem?.hideProgress?.();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst FocusableTemplate = require(\"../../../../webix_custom_components/focusableTemplate\");\n\nconst DEFAULT_HEIGHT = 80;\n\nmodule.exports = class ABViewFormCustomComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCustom_${baseView.id}`, ids);\n   }\n\n   get new_width() {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = baseView.settings ?? {};\n\n      let newWidth = formSettings.labelWidth;\n\n      if (settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      return newWidth;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = field?.settings ?? baseView.settings ?? {};\n\n      const requiredClass =\n         field?.settings?.required || this.settings.required\n            ? \"webix_required\"\n            : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"box-sizing: border-box; display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"box-sizing: border-box; width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 8px 0 0; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let height = 38;\n      let width = this.new_width;\n\n      if (field instanceof ABFieldImage) {\n         if (settings.useHeight) {\n            if (formSettings.labelPosition === \"top\") {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n               height += 38;\n            } else {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n            }\n         } else if (formSettings.labelPosition === \"top\") {\n            height = DEFAULT_HEIGHT + 38;\n         } else {\n            if (DEFAULT_HEIGHT > 38) {\n               height = DEFAULT_HEIGHT;\n            }\n         }\n         width =\n            settings.useWidth && settings.imageWidth ? settings.imageWidth : 0;\n      } else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         height = DEFAULT_HEIGHT;\n\n      let template = `<div class=\"customField ${formSettings.labelPosition}\">${\n         formSettings.labelPosition == \"top\" ? \"\" : templateLabel\n      }#template#</div>`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field\n               ?.columnHeader({\n                  width: width,\n                  height: height,\n                  editable: true,\n               })\n               .template({}) ?? \"\"\n         );\n\n      if (settings.useWidth == 0) {\n         template = template.replace(\n            /\"ab-image-data-field\" style=\"float: left; width: 100%/g,\n            '\"ab-image-data-field\" style=\"float: left; width: calc(100% - ' +\n               formSettings.labelWidth +\n               \"px)\"\n         );\n      }\n\n      return super.ui({\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         css: \"ab-custom-field\",\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            view: new FocusableTemplate(this.AB._App).key,\n            css: \"customFieldCls\",\n            borderless: true,\n            template: template,\n            height: height,\n            onClick: {\n               customField: (evt, e, trg) => {\n                  if (settings.disable === 1) return;\n\n                  let rowData = {};\n\n                  const formView =\n                     this?.parentFormComponent?.() ||\n                     this.view?.parentFormComponent?.();\n\n                  if (formView) {\n                     const dv = formView.datacollection;\n                     if (dv) rowData = dv.getCursor() || {};\n                  }\n\n                  // var node = $$(ids.formItem).$view;\n                  let node = $$(trg).getParentView().$view;\n                  field?.customEdit(\n                     rowData,\n                     this.AB_App,\n                     node,\n                     this.ids.formItem,\n                     evt\n                  );\n               },\n            },\n         },\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const baseView = this.view;\n      const field = baseView.field(),\n         rowData = {},\n         node = $formItem.$view;\n\n      // Add data-cy attributes\n      const dataCy = `${baseView.key} ${field.key} ${field.columnName} ${baseView.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      const options = {\n         formId: ids.formItem,\n         editable: baseView.settings.disable === 1 ? false : true,\n      };\n\n      if (field instanceof ABFieldImage) {\n         options.height = field.settings.useHeight\n            ? parseInt(field.settings.imageHeight) || DEFAULT_HEIGHT\n            : DEFAULT_HEIGHT;\n         options.width = field.settings.useWidth\n            ? parseInt(field.settings.imageWidth) || 0\n            : 0;\n      }\n\n      field.customDisplay(rowData, this.AB._App, node, options);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormDatepickerComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormDatepicker_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const field = this.view.field();\n\n      const _ui = {\n         view: \"datepicker\",\n         suggest: {\n            body: {\n               view:\n                  this.AB.Account?._config?.languageCode == \"th\"\n                     ? \"thaicalendar\"\n                     : \"calendar\",\n               on: {\n                  onAfterDateSelect: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onTodaySet: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onDateClear: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n               },\n            },\n            on: {\n               onShow: function () {\n                  const text = this.getMasterValue();\n                  const field = self.view.field();\n                  if (!text || !field) return true;\n\n                  const vals = {};\n                  vals[field.columnName] = text;\n                  const date = self.getValue(vals);\n\n                  const $calendar = this.getChildViews()[0];\n                  $calendar.setValue(date);\n               },\n            },\n         },\n      };\n\n      if (!field) return _ui;\n\n      // Ignore date - Only time picker\n      if (field.settings?.dateFormat === 1) _ui.type = \"time\";\n\n      // Date & Time picker\n      if (field.key === \"datetime\" && field.settings?.timeFormat !== 1)\n         _ui.timepicker = true;\n\n      // allows entering characters in datepicker input, false by default\n      _ui.editable = true;\n\n      // default value\n      if (_ui.value && !(_ui.value instanceof Date))\n         _ui.value = new Date(_ui.value);\n\n      // if we have webix locale set, will use the date format form there.\n      if (field !== null && !window.webixLocale) _ui.format = field.getFormat();\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const text = rowData[field.columnName];\n      if (!field || !text) return null;\n\n      // Sentry Fix: caught an error where this.AB was not set, but this.view was...\n      // attempt to catch this situation and post more data:\n      if (!this.AB) {\n         if (this.view.AB) {\n            this.AB = this.view.AB;\n         } else {\n            let errNoAB = new Error(\n               \"ABViewFormDatePicerComponent:getValue(): AB was not set.\"\n            );\n            // sentry logs the console before the error, so dump the offending view here:\n            console.log(\"view:\", JSON.stringify(this.view.toObj()));\n            throw errNoAB;\n         }\n      }\n      const date = this.AB.Webix.Date.strToDate(field.getFormat())(text);\n\n      if (this.AB.Account?._config?.languageCode == \"th\")\n         date.setFullYear(date.getFullYear() - 543);\n\n      return date;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewFormItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormItem_${baseView.id}`,\n         Object.assign({ formItem: \"\" }, ids)\n      );\n   }\n\n   ui(uiFormItemComponent = {}) {\n      // setup 'label' of the element\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field?.() || null,\n         label = \"\";\n      const settings = form?.settings || {};\n      const _uiFormItem = {\n         id: this.ids.formItem,\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label,\n      };\n\n      if (field) {\n         _uiFormItem.name = field.columnName;\n\n         // default value\n         const data = {};\n\n         field.defaultValue(data);\n\n         if (data[field.columnName]) _uiFormItem.value = data[field.columnName];\n\n         if (settings.showLabel) _uiFormItem.label = field.label;\n\n         if (field.settings.required || baseView.settings?.required)\n            _uiFormItem.required = 1;\n\n         if (baseView.settings?.disable === 1) _uiFormItem.disabled = true;\n\n         // add data-cy to form element for better testing code\n         _uiFormItem.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  const popup = this.getPopup();\n\n                  if (!popup) return;\n\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n\n                     // our option.ids are based on builder input and can include the ' character\n                     const node = popup.$view.querySelector(\n                        `[webix_l_id='${(option?.id ?? \"\")\n                           .toString()\n                           .replaceAll(\"'\", \"\\\\'\")}']`\n                     );\n\n                     if (!node) return;\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${\n                           form?.id || \"nf\"\n                        }`\n                     );\n                  });\n               }\n\n               this.getInputNode?.().setAttribute?.(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${\n                     form?.id || \"nf\"\n                  }`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _uiFormItem.validate = (val, data, colName) => {\n            const validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n\n      const _ui = super.ui([\n         Object.assign({}, _uiFormItem, uiFormItemComponent),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormJsonComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormJson_${baseView.id}`, ids);\n      if (this.settings.type == \"filter\") {\n         this.rowFilter = this.AB.filterComplexNew(\n            `${baseView.id}_filterComplex`,\n            {\n               isSaveHidden: true,\n               height: 300,\n               borderless: false,\n               showObjectName: true,\n            }\n         );\n      }\n   }\n\n   getFilterField(instance) {\n      if (\n         instance?.settings?.filterField &&\n         instance?.view?.parent?.viewComponents\n      ) {\n         let filterField = \"\";\n         for (const [key, value] of Object.entries(\n            instance.view.parent.viewComponents\n         )) {\n            if (value.settings.fieldId == instance.settings.filterField) {\n               filterField = value;\n            }\n         }\n\n         if (filterField?.ids?.formItem) {\n            return filterField.ids.formItem;\n         } else {\n            return \"\";\n         }\n      } else {\n         return \"\";\n      }\n   }\n\n   get getSystemObjects() {\n      // get list of all objects in the app\n      let objects = this.AB.objects();\n      // reformat objects into simple array for Webix multicombo\n      // if you do not the data causes a maximum stack error\n      let objectsArray = [];\n      objects.forEach((obj) => {\n         objectsArray.push({ id: obj.id, label: obj.label });\n      });\n      // return the simple array\n      return objectsArray;\n   }\n\n   refreshFilter(values) {\n      if (values) {\n         let fieldDefs = [];\n         values.forEach((obj) => {\n            let object = this.AB.objectByID(obj);\n            let fields = object.fields();\n            if (fields.length) {\n               fields.forEach((f) => {\n                  fieldDefs.push(f);\n               });\n            }\n         });\n         this.rowFilter.fieldsLoad(fieldDefs);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      } else {\n         this.rowFilter.fieldsLoad([]);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      }\n   }\n\n   getValue() {\n      return this.rowFilter.getValue();\n   }\n\n   setValue(formVals) {\n      $$(this.ids.formItem).config.value = formVals;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"string\":\n            _ui.view = \"textarea\";\n            _ui.disabled = true;\n            _ui.height = 200;\n            _ui.format = {\n               parse: function (parsed) {\n                  try {\n                     parsed = JSON.parse(parsed);\n                  } catch (err) {\n                     // already parsed\n                  }\n                  return parsed;\n               },\n               edit: function (stringify) {\n                  try {\n                     stringify = JSON.stringify(stringify);\n                  } catch (err) {\n                     // already a string\n                  }\n                  return stringify;\n               },\n            };\n            break;\n         case \"systemObject\":\n            _ui.view = \"multicombo\";\n            _ui.placeholder = this.label(\"Select one or more system objects\");\n            _ui.button = false;\n            _ui.stringResult = false;\n            _ui.suggest = {\n               selectAll: true,\n               body: {\n                  data: this.getSystemObjects,\n                  template: webix.template(\"#label#\"),\n               },\n            };\n            break;\n         case \"filter\":\n            _ui.view = \"forminput\";\n            _ui.css = \"ab-custom-field\";\n            _ui.body = this.rowFilter.ui;\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   init() {\n      // if (this.settings.type == \"filter\") {\n      //    this.rowFilter.init({ showObjectName: true });\n      // }\n   }\n\n   onShow() {\n      const _ui = this.ui();\n      if (this?.settings?.type == \"filter\") {\n         let filterField = this.getFilterField(this);\n         if (!$$(filterField)) return;\n         $$(filterField).detachEvent(\"onChange\");\n         $$(filterField).attachEvent(\"onChange\", (values) => {\n            this.refreshFilter(values);\n         });\n         this.rowFilter.init({ showObjectName: true });\n         this.rowFilter.on(\"changed\", (val) => {\n            this.setValue(val);\n         });\n         if ($$(this.ids.formItem).config.value) {\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n         } else {\n            this.rowFilter.setValue(\"\");\n         }\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst NumberTextInput = require(\"../../../../webix_custom_components/numbertext\");\n\nmodule.exports = class ABViewFormNumberComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormNumber_${baseView.id}`, ids);\n\n      this._numberTextInputKey = null;\n   }\n\n   get numberTextInputKey() {\n      return (this._numberTextInputKey =\n         this._numberTextInputKey || new NumberTextInput(this.AB._App).key);\n   }\n\n   ui() {\n      return super.ui({\n         view: this.settings.isStepper ? \"counter\" : this.numberTextInputKey,\n         type: \"number\",\n         validate: (val) => !isNaN(val * 1),\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormReadonlyComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormReadonly_${baseView.id}`,\n         Object.assign(\n            {\n               template: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         readonly: true,\n         css: \"ab-readonly-field\",\n         // name: component.ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            id: this.ids.template,\n            view: \"label\",\n            borderless: true,\n            css: { \"background-color\": \"#fff\" },\n            label: \"\",\n         },\n      };\n\n      const settings = baseView.parentFormComponent().settings || {};\n\n      if (settings.showLabel == true && settings.labelPosition == \"top\") {\n         _ui.body.height = 80;\n      } else if (field.settings.useHeight) {\n         _ui.body.height = parseInt(field.settings.imageHeight) || 38;\n      } else _ui.body.height = 38;\n\n      return super.ui(_ui);\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n      $form?.attachEvent(\"onChange\", (newv, oldv) => {\n         const rowData = $form?.getValues() ?? {};\n\n         this.refresh(rowData);\n      });\n   }\n\n   onShow() {\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      if (!field) return null;\n\n      return rowData[field.columnName];\n   }\n\n   refresh(rowData) {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field();\n\n      const formSettings = form.settings || {};\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label\">${field.label}</label>`;\n         else\n            templateLabel = `<label style=\"width: ${formSettings.labelWidth}px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\">${field.label}</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      const template =\n         `<div class=\"readonlyField\">${templateLabel}#template#</div>`.replace(\n            /#template#/g,\n            field\n               .columnHeader({\n                  width: newWidth,\n                  editable: true,\n               })\n               .template(rowData)\n         );\n\n      // Re-build template element\n      $$(this.ids.template)?.setHTML(template);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectMultipleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectMultiple_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = this.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n\n      const ids = this.ids;\n      const _ui = {\n         id: ids.formItem,\n         view: settings.type || baseView.constructor.defaultValues().type,\n         options: options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n\n      switch (_ui.view) {\n         case \"multicombo\":\n            _ui.tagMode = false;\n            _ui.css = \"hideWebixMulticomboTag\";\n            _ui.tagTemplate = (values) => {\n               const selectedOptions = [];\n               const $formItem = $$(ids.formItem) ?? $$(_ui.id);\n\n               values.forEach((val) => {\n                  selectedOptions.push($formItem.getList().getItem(val));\n               });\n\n               let vals = selectedOptions;\n\n               if (field.getSelectedOptions)\n                  vals = field.getSelectedOptions(field, selectedOptions);\n\n               const items = [];\n\n               vals.forEach((val) => {\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (field.settings.hasColors && val.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${val.hex};`;\n                  }\n\n                  const text = val.text ? val.text : val.value;\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${val.id}\"><span>${text}</span><span class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span></span>`\n                  );\n               });\n\n               return items.join(\"\");\n            };\n\n            break;\n\n         case \"checkbox\":\n            // radio element could not be empty options\n            _ui.options.push({\n               id: \"temp\",\n               value: this.label(\"Option\"),\n            });\n\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field(),\n         $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectSingleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectSingle_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = baseView.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n      else options.push(...(settings.options ?? []));\n\n      const _ui = {\n         view: settings.type || baseView.constructor.defaultValues().type,\n      };\n\n      if (field?.settings.hasColors) {\n         _ui.css = \"combowithcolors\";\n         _ui.options = {\n            view: \"suggest\",\n            body: {\n               view: \"list\",\n               data: options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text || opt.value,\n                     hex: field.settings.hasColors ? opt.hex : \"\",\n                  };\n               }),\n               template: function (value) {\n                  const items = [];\n\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (value.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${value.hex};`;\n                  }\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${value.value}</span></span>`\n                  );\n\n                  return items.join(\"\");\n               },\n            },\n         };\n      } else\n         _ui.options = options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text || opt.value,\n            };\n         });\n\n      // radio element could not be empty options\n      if (_ui.view === \"radio\" && _ui.options.length < 1)\n         _ui.options.push({\n            id: \"temp\",\n            value: this.label(\"Option\"),\n         });\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTextboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTextbox_${baseView.id}`, ids);\n      this.type =\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (this.type) {\n         case \"single\":\n            _ui.view = \"text\";\n            break;\n         case \"multiple\":\n            _ui.view = \"textarea\";\n            _ui.height = 200;\n            break;\n         case \"rich\":\n            _ui.view = \"forminput\";\n            _ui.height = 200;\n            _ui.css = \"ab-rich-text\";\n            _ui.body = {\n               view: \"tinymce-editor\",\n               value: \"\",\n               cdn: \"/js/webix/extras/tinymce\",\n               config: {\n                  plugins: \"link\",\n                  menubar: \"format edit\",\n                  toolbar:\n                     \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect | link\",\n               },\n            };\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   async onShow() {\n      if (this.type !== \"rich\") return;\n      await this.initTinyMCE();\n      const _ui = this.ui();\n      const _uiFormItem = _ui.rows[0];\n      let $formItem = $$(this.ids.formItem);\n\n      // WORKAROUND : to fix breaks TinyMCE when switch pages/tabs\n      // https://forum.webix.com/discussion/6772/switching-tabs-breaks-tinymce\n      if ($formItem) {\n         // recreate rich editor\n         $formItem = this.AB.Webix.ui(_uiFormItem, $formItem);\n\n         // Add dataCy to TinyMCE text editor\n         const baseView = this.view;\n\n         $formItem\n            .getChildViews()[0]\n            .getEditor(true)\n            .then((editor) => {\n               const dataCy = `${baseView.key} rich ${_uiFormItem.name} ${\n                  baseView.id ?? \"\"\n               } ${baseView.parent?.id ?? \"\"}`;\n\n               editor.contentAreaContainer.setAttribute(\"data-cy\", dataCy);\n            });\n      }\n   }\n\n   /**\n    * Ensure TinyMCE has been loaded and initialized.\n    */\n   async initTinyMCE() {\n      await this.AB.custom[\"tinymce-editor\"].init();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTreeComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTree_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {};\n\n      // this field may be deleted\n      if (!field) return super.ui(_ui);\n\n      const formSettings = baseView.parentFormComponent().settings || {};\n\n      const requiredClass =\n         field.settings.required === 1 ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n\n      const template = `${templateLabel}#template#`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field.columnHeader({\n               width: newWidth,\n            }).template\n         );\n\n      _ui.view = \"template\";\n      _ui.css = \"webix_el_box\";\n      _ui.height =\n         field.settings.useHeight === 1\n            ? parseInt(field.settings.imageHeight)\n            : 38;\n      _ui.borderless = true;\n\n      _ui.template = `<div class=\"customField\">${template}</div>`;\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            const rowData = {},\n               node = $$(this.ids.formItem).$view;\n\n            rowData[field.columnName] = this.getValue();\n            field.customEdit(rowData, this.AB._App, node, this);\n         },\n      };\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      let vals = $$(this.ids.formItem).getValues();\n\n      // Pass empty string if the returned values is empty array\n      if (Array.isArray(vals) && vals.length === 0) vals = \"\";\n\n      return vals;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewImageComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewImage_${baseView.id}`,\n         Object.assign({ image: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  id: this.ids.image,\n                  view: \"template\",\n                  template: \"\",\n                  height: settings.height,\n                  width: settings.width,\n               },\n               {},\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $image = $$(this.ids.image);\n      if (!$image) return;\n\n      const settings = this.settings;\n\n      if (settings.filename)\n         $image.define(\n            \"template\",\n            `<img src=\"/file/${settings.filename}\" height=\"${settings.height}\" width=\"${settings.width}\">`\n         );\n      else $image.define(\"template\", \"\");\n\n      $image.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFormSidePanel = require(\"../ABViewKanbanFormSidePanel\");\n\nmodule.exports = class ABViewKanbanComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewKanBan_${baseView.id}`,\n         Object.assign(\n            {\n               kanbanView: \"\",\n\n               kanban: \"\",\n               resizer: \"\",\n               formSidePanel: \"\",\n            },\n            ids\n         )\n      );\n\n      this.FormSide = new ABFormSidePanel(\n         this,\n         this.ids.formSidePanel,\n         this.settings.editFields\n      );\n\n      this.CurrentVerticalField = null;\n      this.CurrentHorizontalField = null;\n      this.CurrentOwnerField = null;\n\n      this.TextTemplate = baseView.TextTemplate;\n\n      this._updatingOwnerRowId = null;\n      this._ABFieldConnect = null;\n      this._ABFieldUser = null;\n      this._ABFieldList = null;\n   }\n\n   get ABFieldConnect() {\n      return (this._ABFieldConnect =\n         this._ABFieldConnect ||\n         this.AB.Class.ABFieldManager.fieldByKey(\"connectObject\"));\n   }\n\n   get ABFieldUser() {\n      return (this._ABFieldUser =\n         this._ABFieldUser || this.AB.Class.ABFieldManager.fieldByKey(\"user\"));\n   }\n\n   get ABFieldList() {\n      return (this._ABFieldList =\n         this._ABFieldList || this.AB.Class.ABFieldManager.fieldByKey(\"list\"));\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      this.linkPage = this.view.linkPageHelper.component();\n\n      const _ui = super.ui([\n         {\n            id: ids.kanbanView,\n            cols: [\n               {\n                  id: ids.kanban,\n                  view: \"kanban\",\n                  cols: [],\n                  userList: {\n                     view: \"menu\",\n                     // yCount: 8,\n                     // scroll: false,\n                     template: '<i class=\"fa fa-user\"></i> #value#',\n                     width: 150,\n                     on: {\n                        onSelectChange: function () {\n                           // get this row id from onAvatarClick event\n                           if (!self._updatingOwnerRowId) return;\n\n                           const userId = this.getSelectedId(false);\n                           if (!userId) return;\n\n                           self.updateOwner(self._updatingOwnerRowId, userId);\n                        },\n                     },\n                  },\n                  editor: false, // we use side bar\n                  users: [],\n                  tags: [],\n                  data: [],\n                  on: {\n                     onListAfterSelect: (itemId, list) => {\n                        this.CurrentDatacollection?.setCursor(itemId);\n                        this.emit(\"select\", itemId);\n\n                        // link pages events\n                        const editPage = this.settings.editPage;\n                        if (editPage)\n                           this.linkPage.changePage(editPage, itemId);\n\n                        const detailsPage = this.settings.detailsPage;\n                        if (detailsPage)\n                           this.linkPage.changePage(detailsPage, itemId);\n                     },\n                     onAfterStatusChange: (rowId, status /*, list */) => {\n                        this.updateStatus(rowId, status);\n                     },\n                     onAvatarClick: (rowId /*, ev, node, list */) => {\n                        // keep this row id for update owner data in .userList\n                        this._updatingOwnerRowId = rowId;\n                     },\n                  },\n               },\n               {\n                  id: ids.resizer,\n                  view: \"resizer\",\n                  css: \"bg_gray\",\n                  width: 11,\n                  hidden: true,\n               },\n               this.FormSide.ui(),\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const abWebix = this.AB.Webix;\n\n      if (this.$kb) abWebix.extend(this.$kb, abWebix.ProgressBar);\n\n      this.FormSide.init(AB);\n      this.FormSide.on(\"add\", (newVals) => {\n         this.saveData(newVals);\n      });\n      this.FormSide.on(\"update\", (updateVals) => {\n         this.saveData(updateVals);\n      });\n\n      let dc = this.view.datacollection;\n      if (dc) this.datacollectionLoad(dc);\n\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      this.show();\n   }\n\n   get $kb() {\n      return (this._kb = this._kb || $$(this.ids.kanban));\n   }\n\n   kanbanListTemplate() {\n      return {\n         icons: [\n            // { icon: \"mdi mdi-comment\", show: function (obj) { return !!obj.comments }, template: \"#comments.length#\" },\n            {\n               icon: \"fa fa-trash-o\",\n               click: (rowId /*, e */) => {\n                  this.removeCard(rowId);\n               },\n            },\n         ],\n         // avatar template\n         templateAvatar: (obj) => {\n            if (\n               this.CurrentOwnerField &&\n               obj[this.CurrentOwnerField.columnName]\n            )\n               return this.CurrentOwnerField.format(obj);\n            else return \"<span class='webix_icon fa fa-user'></span>\";\n         },\n         // template for item body\n         // show item image and text\n         templateBody: (data) => {\n            // if (!this.settings.template)\n            if (!this.TextTemplate.text)\n               return this.CurrentObject?.displayData(data);\n\n            // return our default text template\n            return this.TextTemplate.displayText(data);\n         },\n      };\n   }\n\n   /**\n    * @function hide()\n    *\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.kanbanView)?.hide();\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   async show() {\n      const ids = this.ids;\n\n      $$(ids.kanbanView)?.show();\n\n      this.FormSide.hide();\n\n      $$(ids.resizer)?.hide();\n\n      var CurrentObject = this.CurrentObject;\n      if (!CurrentObject) {\n         CurrentObject = this.datacollection?.datasource;\n      }\n      if (!CurrentObject) return;\n\n      // Get vertical grouping field and populate to kanban list\n      // NOTE: this field should be the select list type\n      const CurrentVerticalField = CurrentObject.fieldByID(\n         this.settings.verticalGroupingField\n      );\n      if (!CurrentVerticalField) return;\n\n      this.CurrentVerticalField = CurrentVerticalField;\n\n      let horizontalOptions = [];\n\n      const CurrentHorizontalField = CurrentObject.fieldByID(\n         this.settings.horizontalGroupingField\n      );\n\n      this.CurrentHorizontalField = CurrentHorizontalField;\n\n      if (\n         CurrentHorizontalField &&\n         CurrentHorizontalField instanceof this.ABFieldConnect\n      )\n         // Pull horizontal options\n         horizontalOptions = await CurrentHorizontalField.getOptions();\n\n      // Option format -  { id: \"1543563751920\", text: \"Normal\", hex: \"#4CAF50\" }\n      const verticalOptions = (CurrentVerticalField.settings.options || []).map(\n         (opt) => {\n            // Vertical & Horizontal fields\n            if (CurrentVerticalField && CurrentHorizontalField) {\n               let rows = [],\n                  // [{\n                  //    id: '',\n                  //    text: ''\n                  // }]\n                  horizontalVals = [];\n\n               // pull options of the Horizontal field\n               if (CurrentHorizontalField instanceof this.ABFieldList) {\n                  // make a copy of the settings.\n                  horizontalVals = (\n                     CurrentHorizontalField.settings.options || []\n                  ).map((o) => o);\n               } else if (CurrentHorizontalField instanceof this.ABFieldUser) {\n                  horizontalVals = CurrentHorizontalField.getUsers().map(\n                     (u) => {\n                        return {\n                           id: u.id,\n                           text: u.text || u.value,\n                        };\n                     }\n                  );\n               } else if (CurrentHorizontalField instanceof this.ABFieldConnect)\n                  horizontalVals = horizontalOptions.map(({ id, text }) => ({\n                     id,\n                     text,\n                  }));\n\n               horizontalVals.push({\n                  id: null,\n                  text: this.label(\"Other\"),\n               });\n\n               horizontalVals.forEach((val) => {\n                  const statusOps = {};\n\n                  statusOps[CurrentVerticalField.columnName] = opt.id;\n                  statusOps[CurrentHorizontalField.columnName] = val.id;\n\n                  // Header\n                  rows.push({\n                     template: val.text,\n                     height: 20,\n                     css: \"progress_header\",\n                  });\n\n                  // Kanban list\n                  rows.push({\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  });\n               });\n\n               return {\n                  header: opt.text,\n                  body: {\n                     margin: 0,\n                     rows: rows,\n                  },\n               };\n            }\n            // Vertical field only\n            else if (CurrentVerticalField) {\n               const statusOps = {};\n\n               statusOps[CurrentVerticalField.columnName] = opt.id;\n\n               return {\n                  header: opt.text,\n                  body: {\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  },\n               };\n            }\n         }\n      );\n\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      // Rebuild kanban that contains options\n      // NOTE: webix kanban does not support dynamic vertical list\n      abWebix.ui(verticalOptions, $$(ids.kanban));\n      $$(ids.kanban).reconstruct();\n\n      // Owner field\n      const CurrentOwnerField = CurrentObject.fieldByID(\n         this.settings.ownerField\n      );\n\n      this.CurrentOwnerField = CurrentOwnerField;\n\n      if (CurrentOwnerField) {\n         const $menuUser = $$(ids.kanban).getUserList();\n\n         $menuUser.clearAll();\n\n         if (CurrentOwnerField instanceof this.ABFieldUser) {\n            const users = ab.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            });\n\n            $menuUser.parse(users);\n         } else if (CurrentOwnerField instanceof this.ABFieldConnect) {\n            const options = await CurrentOwnerField.getOptions();\n\n            try {\n               $menuUser.parse(\n                  options.map((opt) => {\n                     return {\n                        id: opt.id,\n                        value: opt.text,\n                     };\n                  })\n               );\n            } catch (e) {\n               // TODO: remove this.  Trying to catch a random webix error:\n               // Cannot read properties of null (reading 'driver')\n               console.error(e);\n               console.warn(options);\n            }\n         }\n      }\n   }\n\n   busy() {\n      this.$kb?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      this.$kb?.hideProgress?.();\n   }\n\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      this.TextTemplate.objectLoad(object);\n      this.FormSide.objectLoad(object);\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const DC = this.CurrentDatacollection || datacollection;\n\n      if (DC) {\n         DC.bind(this.$kb);\n\n         const obj = DC.datasource;\n\n         if (obj) this.objectLoad(obj);\n\n         return;\n      }\n\n      this.$kb.unbind();\n   }\n\n   async updateStatus(rowId, status) {\n      if (!this.CurrentVerticalField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n\n      // update multi-values\n      if (status instanceof Object) patch = status;\n      // update single value\n      else patch[this.CurrentVerticalField.columnName] = status;\n\n      // update empty value\n      let needRefresh = false;\n\n      for (const key in patch)\n         if (!patch[key]) {\n            patch[key] = \"\";\n\n            // WORKAROUND: if update data is empty, then it will need to refresh\n            // the kanban after update\n            needRefresh = true;\n         }\n\n      try {\n         await this.CurrentObject?.model().update(rowId, patch);\n\n         this.ready();\n\n         if (needRefresh) this.show();\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = $$(this.ids.kanban).getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateStatus(): Error saving item:\",\n            rowId,\n            patch,\n         });\n      }\n   }\n\n   async updateOwner(rowId, val) {\n      if (!this.CurrentOwnerField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      const patch = {};\n\n      patch[this.CurrentOwnerField.columnName] = val;\n\n      try {\n         const updatedRow = await this.CurrentObject?.model().update(\n            rowId,\n            patch\n         );\n\n         // update card\n         this.$kb?.updateItem(rowId, updatedRow);\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = this.$kb.getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n\n         this.ready();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateOwner(): Error saving item:\",\n            rowId,\n            val,\n         });\n\n         this.ready();\n      }\n   }\n\n   saveData(data) {\n      // update\n      if (data.id && this.$kb.exists(data.id))\n         this.$kb.updateItem(data.id, data);\n      // insert\n      else this.$kb.add(data);\n   }\n\n   unselect() {\n      if (this.$kb)\n         this.$kb.eachList((list /*, status*/) => {\n            list?.unselect?.();\n         });\n   }\n\n   addCard() {\n      this.unselect();\n\n      // show the side form\n      this.FormSide.show();\n      $$(this.ids.resizer).show();\n   }\n\n   async removeCard(rowId) {\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      abWebix.confirm({\n         title: this.label(\"Remove card\"),\n         text: this.label(\"Do you want to delete this card?\"),\n         callback: async (result) => {\n            if (!result) return;\n\n            this.busy();\n\n            try {\n               const response = await this.CurrentObject?.model().delete(rowId);\n\n               if (response.numRows > 0) {\n                  this.$kb.remove(rowId);\n               } else {\n                  abWebix.alert({\n                     text: this.label(\n                        \"No rows were effected. This does not seem right.\"\n                     ),\n                  });\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  message: \"ABViewKanban:removeCard(): Error deleting item:\",\n                  rowId,\n               });\n            }\n\n            this.ready();\n         },\n      });\n   }\n\n   /**\n    * @method setFields()\n    * Save the current view options.\n    * @param options - {\n    *       verticalGrouping:    {ABField} - required\n    *       horizontalGrouping:  {ABField} - optional\n    *       ownerField:          {ABField} - optional\n    * }\n    */\n   setFields(options) {\n      this.CurrentVerticalField = options.verticalGrouping;\n      this.CurrentHorizontalField = options.horizontalGrouping;\n      this.CurrentOwnerField = options.ownerField;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLabelComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLabel_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      const _ui = super.ui([\n         this.uiFormatting({\n            view: \"label\",\n            // css: 'ab-component-header ab-ellipses-text',\n            label: baseView.text || \"*\",\n            align: this.settings.alignment,\n            type: {\n               height: \"auto\",\n            },\n         }),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   /**\n    * @method uiFormatting\n    * a common routine to properly update the displayed label\n    * UI with the css formatting for the given .settings\n    * @param {obj} _ui the current webix.ui definition\n    * @return {obj} a properly formatted webix.ui definition\n    */\n   uiFormatting(ui) {\n      // add different css settings based upon it's format\n      // type.\n      switch (parseInt(this.settings.format)) {\n         // normal\n         case 0:\n            ui.css = \"ab-component-label ab-ellipses-text\";\n            break;\n\n         // title\n         case 1:\n            ui.css = \"ab-component-header ab-ellipses-text\";\n            break;\n\n         // description\n         case 2:\n            ui.css = \"ab-component-description ab-ellipses-text\";\n            break;\n      }\n\n      return ui;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLayoutComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLayout_${baseView.id}`, ids);\n\n      const viewComponents = this.viewComponents ?? {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      baseView.views().forEach((v) => {\n         viewComponents[v.id] = v.component();\n      });\n\n      this.viewComponents = viewComponents;\n   }\n\n   ui() {\n      const viewComponents = this.viewComponents;\n      const uiComponents = Object.keys(viewComponents)\n         .map((vId) => viewComponents[vId].ui())\n         .filter((ui) => ui);\n\n      if (uiComponents.length == 0) {\n         uiComponents.push({});\n         uiComponents.push({\n            view: \"label\",\n            label: this.label(\"no content\"),\n         });\n         uiComponents.push({});\n      }\n\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            cols: uiComponents,\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      // make sure each of our child views get .init() called\n      baseView.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n\n         // initial sub-component\n         component?.init(AB, accessLevel);\n\n         // Trigger 'changePage' event to parent\n         baseView.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               baseView.changePage(pageId);\n            },\n         });\n      });\n   }\n\n   onShow() {\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n         component?.onShow();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewListComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewList_${baseView.id}`,\n         Object.assign({ list: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _uiList = {\n         id: this.ids.list,\n         view: \"dataview\",\n         type: {\n            width: 1000,\n            height: 30,\n         },\n         template: (item) => {\n            const field = this.view.field();\n\n            if (!field) return \"\";\n\n            return field.format(item);\n         },\n      };\n\n      // set height or autoHeight\n      if (settings.height !== 0) _uiList.height = settings.height;\n      else _uiList.autoHeight = true;\n\n      const _ui = super.ui([_uiList]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // bind dc to component\n      dc.bind($$(this.ids.list));\n      // $$(ids.list).sync(dv);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewMenuComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewMenu_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         parseInt(settings.menuInToolbar) ? this.uiToolbar() : this.uiMenu(),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiMenu() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const css = `${settings.buttonStyle || defaultSettings.buttonStyle} ${\n         settings.menuAlignment || defaultSettings.menuAlignment\n      } `;\n\n      return {\n         id: this.ids.menu,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout: settings.orientation || defaultSettings.orientation,\n         on: {\n            onMenuItemClick: (id /*, e, node */) => {\n               this.onClick(id);\n            },\n            onAfterRender: () => {\n               this.defineCypress();\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n   }\n\n   uiToolbar() {\n      const settings = this.settings;\n      const baseView = this.view;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const _uiMenu = this.uiMenu();\n\n      let elems = [];\n      let menuIncluded = false;\n\n      // Legacy support: use old settings values if translated values are not set\n      const menuTextLeft = baseView.menuTextLeft ?? settings.menuTextLeft;\n      const menuTextCenter = baseView.menuTextCenter ?? settings.menuTextCenter;\n      const menuTextRight = baseView.menuTextRight ?? settings.menuTextRight;\n\n      if (settings.menuPosition === \"left\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextLeft?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextLeft,\n            align: \"left\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"center\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextCenter?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push(\n            {},\n            {\n               view: \"label\",\n               label: menuTextCenter,\n               align: \"center\",\n               width: width,\n            },\n            {}\n         );\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"right\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextRight?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextRight,\n            align: \"right\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (menuIncluded === false) elems = [_uiMenu];\n\n      return {\n         view: \"toolbar\",\n         css: settings.menuTheme ?? defaultSettings.menuTheme,\n         padding: settings.menuPadding\n            ? parseInt(settings.menuPadding)\n            : defaultSettings.menuPadding,\n         elements: elems,\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $menu = $$(this.ids.menu);\n      const baseView = this.view;\n\n      if ($menu) {\n         const settings = this.settings;\n\n         baseView.ClearPagesInView($menu);\n\n         if (settings.order?.length) {\n            baseView.AddPagesToView($menu, settings.order);\n            // Force onAfterRender to fire\n            $menu.refresh();\n         }\n      }\n   }\n\n   onClick(itemId) {\n      const $menu = $$(this.ids.menu);\n      let $item;\n      try {\n         $item = $menu.getMenuItem(itemId);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context:\n               \"ABViewMenuComponent > onClick error gettint menu / menu item\",\n            itemId,\n            menu: {\n               id: this.view.id,\n               settings: this.view.settings,\n            },\n         });\n         return;\n      }\n      const baseView = this.view;\n\n      // switch tab view\n      if ($item.type === \"tab\") {\n         baseView.changePage($item.pageId);\n\n         const redirectPage = baseView.application.pages(\n            (p) => p.id === $item.pageId,\n            true\n         )[0];\n\n         if (!redirectPage) return;\n\n         const tabView = redirectPage.views((v) => v.id === $item.id, true)[0];\n\n         if (!tabView) return;\n\n         const tab = tabView.parent;\n\n         if (!tab) return;\n\n         this.toggleParent(tab);\n\n         // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n         const showIt = setInterval(() => {\n            if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n               clearInterval(showIt);\n\n               return;\n            }\n\n            tab.emit(\"changeTab\", tabView.id);\n         }, 100);\n         // }\n      }\n      // switch page\n      else baseView.changePage(itemId);\n   }\n\n   toggleParent(element) {\n      if (!element.parent) return false;\n\n      const parentElem = element.parent;\n\n      if (!parentElem?.parent) return false;\n\n      parentElem.parent.emit(\"changeTab\", parentElem.id);\n      this.toggleParent(parentElem.parent);\n   }\n\n   defineCypress() {\n      const $menu = $$(this.ids.menu);\n\n      if (!$menu) return;\n\n      $menu.data.each((item) => {\n         const node = $menu.getItemNode(item.id);\n\n         if (!node) return;\n\n         // get linked page/tab info so we can use its name in the data-cy\n         const viewInfo = this.AB.definitionByID(item.id);\n\n         node.setAttribute(\n            \"data-cy\",\n            `menu-item ${viewInfo?.name} ${item.id} ${this.view.id}`\n         );\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SMALL_PAGE_WIDTH = 150;\nconst BIG_PAGE_WIDTH = 250;\n\nmodule.exports = class ABViewPDFImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPDFImporter_${baseView.id}`,\n         Object.assign(\n            {\n               fileUploader: \"\",\n               uploadList: \"\",\n               dataview: \"\",\n               fullImagePopup: \"\",\n               fullImageCarousel: \"\",\n               fullImageSelectToggle: \"\",\n               fullImageLabel: \"\",\n               selectAll: \"\",\n               unselectAll: \"\",\n               submit: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const _ui = super.ui([\n         {\n            rows: [\n               {\n                  cols: [\n                     {\n                        id: ids.fileUploader,\n                        view: \"uploader\",\n                        name: \"records\",\n                        link: ids.uploadList,\n                        label: this.label(\"Upload a PDF file\"),\n                        inputWidth: 200,\n                        width: 210,\n                        accept: \"application/pdf\",\n                        multiple: false,\n                        autosend: false,\n                        type: \"icon\",\n                        icon: \"fa fa-file-pdf-o\",\n                        on: {\n                           onBeforeFileAdd: (fileInfo) => {\n                              this._csvFileInfo = fileInfo;\n                              if (!this._csvFileInfo) return false;\n\n                              this.loadFile();\n\n                              return true;\n                           },\n                        },\n                     },\n                     {\n                        id: ids.uploadList,\n                        view: \"list\",\n                        type: \"uploader\",\n                        autoheight: true,\n                        borderless: true,\n                        onClick: {\n                           webix_remove_upload: (e, id) => {\n                              this.removeFile(id);\n                           },\n                        },\n                     },\n                     {\n                        width: 10,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th-large\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displayBig();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displaySmall();\n                        },\n                     },\n                  ],\n               },\n               {\n                  height: 10,\n               },\n               {\n                  id: ids.dataview,\n                  view: \"dataview\",\n                  borderless: true,\n                  css: \"pdf-data-view\",\n                  multiselect: false,\n                  select: false,\n                  type: {\n                     template: (item) => {\n                        return this.pageTemplate(item);\n                     },\n                     width: \"auto\",\n                     height: \"auto\",\n                  },\n                  on: {\n                     onSelectChange: (pageIds) => {\n                        this.renderPageImages();\n                     },\n                     onItemClick: function (id, e, node) {\n                        // Unselect\n                        if (e?.target?.className?.includes?.(\"unselect-page\")) {\n                           self.unselect(id);\n                        }\n                        // Select\n                        else if (\n                           e?.target?.className?.includes?.(\"select-page\")\n                        ) {\n                           self.select(id);\n                        }\n                        // Zoom\n                        else if (e?.target?.className?.includes?.(\"pdf-zoom\")) {\n                           self._fullImagePopup.show();\n                           $$(self.ids.fullImageCarousel).setActiveIndex(\n                              parseInt(id ?? 0) - 1\n                           );\n                           self.refreshFullImage();\n                        }\n                     },\n                  },\n               },\n               {\n                  height: 10,\n               },\n               {\n                  cols: [\n                     {\n                        id: ids.selectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-check-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Select All\"),\n                        click: () => {\n                           this.selectAll();\n                        },\n                     },\n                     {\n                        id: ids.unselectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Unselect All\"),\n                        click: () => {\n                           this.unselectAll();\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.submit,\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-floppy-o\",\n                        disabled: true,\n                        maxWidth: 180,\n                        label: this.label(\"Submit\"),\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n      ]);\n\n      return _ui;\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n      return {\n         id: ids.fullImagePopup,\n         view: \"window\",\n         modal: true,\n         position: \"center\",\n         headHeight: 25,\n         head: {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"button\",\n                  type: \"icon\",\n                  icon: \"fa fa-times\",\n                  maxWidth: 25,\n                  height: 25,\n                  click: () => {\n                     $$(ids.fullImagePopup)?.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            rows: [\n               {\n                  id: ids.fullImageCarousel,\n                  view: \"carousel\",\n                  width: 600,\n                  height: 500,\n                  navigation: {\n                     items: true,\n                     buttons: true,\n                     type: \"side\",\n                  },\n                  cols: [],\n                  on: {\n                     onShow: () => {\n                        this.refreshFullImage();\n                     },\n                  },\n               },\n               {\n                  view: \"layout\",\n                  cols: [\n                     {\n                        id: ids.fullImageSelectToggle,\n                        view: \"toggle\",\n                        type: \"icon\",\n                        offIcon: \"fa fa-square-o\",\n                        onIcon: \"fa fa-check-square-o\",\n                        offLabel: this.label(\"Unselected\"),\n                        onLabel: this.label(\"Selected\"),\n                        width: 130,\n                        on: {\n                           onChange: (isSelected) => {\n                              const activeIndex = $$(\n                                 this.ids.fullImageCarousel\n                              ).getActiveIndex();\n                              const pageNumber = activeIndex + 1;\n\n                              if (isSelected) this.select(pageNumber);\n                              else this.unselect(pageNumber);\n                           },\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.fullImageLabel,\n                        view: \"label\",\n                        width: 120,\n                        label: `${this.label(\"Page Number\")}: ${\"#\"}`,\n                     },\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $dataview = $$(this.ids.dataview);\n      if ($dataview) this.AB.Webix.extend($dataview, webix.ProgressBar);\n\n      if (!this._fullImagePopup) {\n         const fullImagePopup = this.uiPopup();\n         this._fullImagePopup = this.AB.Webix.ui(fullImagePopup);\n      }\n   }\n\n   onShow() {\n      this.initPdfjs();\n      super.onShow();\n   }\n\n   /**\n    * Loads the pdfjs dependecies. We defer loading since it is a large library\n    * that is not needed in the initial page load.\n    */\n   async initPdfjs() {\n      if (this.pdfjs && window.pdfjsWorker) return;\n      this.busy();\n      this.pdfjs = (\n         await import(\n            /* webpackPrefetch: true */\n            \"../../../../init/pdfjs\"\n         )\n      ).default;\n\n      this.ready();\n   }\n\n   async _readFileBuffer() {\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo || !_csvFileInfo.file)\n         return Promise.resolve(new ArrayBuffer(0));\n\n      const fileReader = new FileReader();\n\n      return new Promise((resolve, reject) => {\n         fileReader.onload = (event) => {\n            const fileBuffer = event.target.result;\n            resolve(fileBuffer);\n         };\n         fileReader.onerror = (event) => {\n            reject(event);\n         };\n         fileReader.readAsArrayBuffer(_csvFileInfo.file);\n      });\n   }\n\n   async _toBlob(pageNumber, canvas) {\n      if (!canvas) return;\n\n      return new Promise((resolve, reject) => {\n         canvas.toBlob((blob) => {\n            const file = new File([blob], `${pageNumber}.png`, {\n               type: \"image/png\",\n            });\n\n            resolve(file);\n         }, \"image/png\");\n      });\n   }\n\n   async _uploadImage(pageNumber) {\n      // Create a temporary CANVAS dom to render page image with specify the height\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const canvasId = `${this.view.id}_temp_canvas`;\n      const canvas =\n         document.getElementById(canvasId) ?? document.createElement(\"canvas\");\n      canvas.id = canvasId;\n      canvas.width = $carousel.config.width - 20;\n\n      await this.showPage(pageNumber, canvas);\n      const fileBlob = await this._toBlob(pageNumber, canvas);\n\n      return new Promise((resolve, reject) => {\n         // Create a uploader to upload images\n         const $uploader = this.AB.Webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: this.field.urlUpload(),\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when upload is complete:\n               onFileUpload: (item, response) => {\n                  // RETURN HERE\n                  resolve(response?.data?.uuid);\n               },\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  reject(response);\n               },\n               onUploadComplete: () => $uploader.destructor(),\n            },\n         });\n\n         $uploader.addFile(fileBlob, fileBlob.size);\n      });\n   }\n\n   _increaseProgressValue() {\n      const $dataview = $$(this.ids.dataview);\n      const maxProgressStep = ($dataview.getSelectedId(true) ?? []).length * 2;\n\n      this._progressSteps = this._progressSteps ?? 0;\n      this._progressSteps++;\n\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: this._progressSteps / maxProgressStep,\n      });\n   }\n\n   async loadFile() {\n      this.clearDataview();\n\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo) return;\n\n      const fileBuffer = await this._readFileBuffer();\n      this._pdfDoc = await this.pdfjs.getDocument(fileBuffer).promise;\n\n      const total_page = this._pdfDoc.numPages;\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const carousel_list = [];\n      for (let pageNumber = 1; pageNumber <= total_page; pageNumber++) {\n         $dataview.add({\n            id: pageNumber,\n            pageNumber,\n         });\n\n         carousel_list.push({\n            template: (item) => {\n               return this.fullImageTemplate(item);\n            },\n            data: {\n               pageNumber,\n            },\n         });\n      }\n\n      this.renderPageImages();\n      if ($carousel) this.AB.Webix.ui(carousel_list, $carousel);\n\n      // Select all of images by default\n      this.selectAll();\n\n      $$(this.ids.submit)?.enable();\n   }\n\n   removeFile(id) {\n      $$(this.ids.uploadList)?.remove(id);\n\n      delete this._pdfDoc;\n      delete this._csvFileInfo;\n      this.clearDataview();\n\n      $$(this.ids.submit)?.disable();\n\n      return true;\n   }\n\n   pageTemplateId(pageNumber) {\n      return `pdf-importer-${this.view.id}-${pageNumber}`;\n   }\n\n   pageTemplate(item) {\n      const $dataview = $$(this.ids.dataview);\n      let selectedPageIds = $dataview.getSelectedId(true);\n\n      return `\n      <div>\n         <div class=\"pdf-data-view-item\">\n            <div>\n            ${\n               selectedPageIds.filter((pageId) => pageId == item.id).length\n                  ? '<i class=\"unselect-page fa fa-check-square-o\"></i>'\n                  : '<i class=\"select-page fa fa-square-o\"></i>'\n            }\n            </div>\n            <div style=\"width: 15px;\">\n               ${item.pageNumber}\n            </div>\n         </div>\n         <div class=\"pdf-zoom pdf-data-view-image\">\n            <canvas class=\"pdf-zoom\" width=\"${\n               this.pageItemWidth\n            }\" id=\"${this.pageTemplateId(item.pageNumber)}\"></canvas>\n            <div class=\"pdf-zoom pdf-data-view-image-icon\">\n               <i class=\"pdf-zoom fa fa-search-plus fa-4x\"></i>\n            </div>\n         </div>\n      </div>\n      `;\n   }\n\n   renderPageImages() {\n      const $dataview = $$(this.ids.dataview);\n      $dataview?.find({}).forEach((item) => {\n         const canvas_dom = document.querySelector(\n            `#${this.pageTemplateId(item.pageNumber)}`\n         );\n         this.showPage(item.pageNumber, canvas_dom);\n      });\n   }\n\n   async showPage(pageNumber, canvas_dom) {\n      if (!this._pdfDoc) return;\n\n      pageNumber = parseInt(pageNumber);\n      const page = await this._pdfDoc.getPage(pageNumber);\n      const pdf_original_width = page.getViewport({ scale: 1 }).width;\n      const scale_required = canvas_dom.width / pdf_original_width;\n\n      // get viewport to render the page at required scale\n      const viewport = page.getViewport({ scale: scale_required });\n      canvas_dom.height = viewport.height;\n\n      return page.render({\n         canvasContext: canvas_dom.getContext(\"2d\"),\n         viewport: viewport,\n      }).promise;\n   }\n\n   clearDataview() {\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n\n      $dataview?.clearAll();\n      if ($carousel)\n         this.AB.Webix.ui(\n            [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: $carousel.height,\n                  label: this.label(\"No image\"),\n               },\n            ],\n            $carousel\n         );\n   }\n\n   displaySmall() {\n      this._isDisplayBig = false;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   displayBig() {\n      this._isDisplayBig = true;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   get pageItemWidth() {\n      return this._isDisplayBig ? BIG_PAGE_WIDTH : SMALL_PAGE_WIDTH;\n   }\n\n   select(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds.push(pageNumber);\n      selectedIds = selectedIds.filter((pageId) => pageId);\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   unselect(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds = selectedIds.filter(\n         (pageId) => pageId && pageId != pageNumber\n      );\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   selectAll() {\n      $$(this.ids.dataview)?.selectAll();\n   }\n\n   unselectAll() {\n      $$(this.ids.dataview)?.unselectAll();\n   }\n\n   fullImageTemplateId(pageNumber) {\n      return `${this.pageTemplateId(pageNumber)}_full_size`;\n   }\n\n   fullImageTemplate(item) {\n      const $carousel = $$(this.ids.fullImageCarousel);\n      return `<canvas width=\"${\n         $carousel.config.width - 20\n      }\" id=\"${this.fullImageTemplateId(item.pageNumber)}\"></canvas>`;\n   }\n\n   refreshFullImage() {\n      const ids = this.ids;\n      const activeIndex = $$(ids.fullImageCarousel).getActiveIndex();\n      const pageNumber = activeIndex + 1;\n      const canvas_dom = document.querySelector(\n         `#${this.fullImageTemplateId(pageNumber)}`\n      );\n      this.showPage(pageNumber, canvas_dom);\n\n      const selectedPageIds = $$(ids.dataview).getSelectedId(true);\n      const isSelected =\n         selectedPageIds.filter((pageId) => pageId == pageNumber).length > 0;\n      $$(ids.fullImageSelectToggle).setValue(isSelected);\n\n      $$(ids.fullImageLabel).setValue(\n         `${this.label(\"Page Number\")}: ${pageNumber}`\n      );\n   }\n\n   get object() {\n      return this.view.datacollection?.datasource;\n   }\n\n   get field() {\n      return this.object?.fields?.(\n         (f) => f.id == this.view.settings.fieldID\n      )[0];\n   }\n\n   busy() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.disable();\n      $uploadList?.disable();\n      $submit?.disable();\n      $selectAll?.disable();\n      $unselectAll?.disable();\n      $selectToggle?.disable();\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: 0.001,\n      });\n   }\n\n   ready() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.enable();\n      $uploadList?.enable();\n      $submit?.enable();\n      $selectAll?.enable();\n      $unselectAll?.enable();\n      $selectToggle?.enable();\n      $dataview?.hideProgress?.();\n\n      delete this._progressSteps;\n   }\n\n   async submit() {\n      const field = this.field;\n      if (!this._pdfDoc || !field) return;\n\n      this.busy();\n\n      const ids = this.ids;\n      const $dataview = $$(ids.dataview);\n      const selectedPageIds = $dataview.getSelectedId(true) ?? [];\n      const model = field.object.model();\n      const dcLink = this.datacollection.datacollectionLink;\n      const newValues = [];\n\n      for (let i = 0; i < selectedPageIds.length; i++) {\n         const pageNumber = selectedPageIds[i];\n         if (pageNumber == null || pageNumber == \"\") return;\n\n         const uploadId = await this._uploadImage(pageNumber);\n\n         this._increaseProgressValue();\n\n         // Insert Data\n         const values = field.object.defaultValues();\n         values[field.columnName] = uploadId;\n\n         // Set linked data from the parent DC\n         const linkValues = dcLink?.getCursor();\n         if (linkValues) {\n            const objectLink = dcLink?.datasource;\n\n            const connectFields = field.object.connectFields();\n            connectFields.forEach((f) => {\n               if (\n                  objectLink.id == f.settings.linkObject &&\n                  values[f.columnName] === undefined\n               ) {\n                  const linkColName = f.indexField\n                     ? f.indexField.columnName\n                     : objectLink.PK();\n\n                  values[f.columnName] = {};\n                  values[f.columnName][linkColName] =\n                     linkValues[linkColName] ?? linkValues.id;\n               }\n            });\n         }\n\n         newValues.push(await model.create(values));\n\n         this._increaseProgressValue();\n      }\n\n      this.view.doSubmitRules(newValues);\n\n      // NOTE: trigger this event to ABViewPropertyAddPage\n      if (newValues) this.view.emit(\"saved\", newValues);\n\n      this.ready();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFieldCalculate = require(\"../../dataFields/ABFieldCalculate\");\nconst ABFieldFormula = require(\"../../dataFields/ABFieldFormula\");\nconst ABFieldNumber = require(\"../../dataFields/ABFieldNumber\");\n\nmodule.exports = class ABViewPivotComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPivot_${baseView.id}`,\n         Object.assign({ pivot: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const uiPivot = {\n         id: this.ids.pivot,\n         view: \"pivot\",\n         readonly: true,\n         removeMissed: settings.removeMissed,\n         totalColumn: settings.totalColumn,\n         separateLabel: settings.separateLabel,\n         min: settings.min,\n         max: settings.max,\n         height: settings.height,\n         fields: this._getFields(),\n         format: (value) => {\n            const decimalPlaces = settings.decimalPlaces ?? 2;\n\n            return value && value != \"0\"\n               ? parseFloat(value).toFixed(decimalPlaces || 0)\n               : value;\n         },\n         override: new Map([\n            [\n               pivot.services.Backend,\n               class MyBackend extends pivot.services.Backend {\n                  async data() {\n                     const dc = self.datacollection;\n                     if (!dc) return webix.promise.resolve([]);\n\n                     const object = dc.datasource;\n                     if (!object) return webix.promise.resolve([]);\n\n                     switch (dc.dataStatus) {\n                        case dc.dataStatusFlag.notInitial:\n                           await dc.loadData();\n                           break;\n                     }\n\n                     const data = dc.getData();\n                     const dataMapped = data.map((d) => {\n                        const result = {};\n\n                        object.fields().forEach((f) => {\n                           if (\n                              f instanceof ABFieldCalculate ||\n                              f instanceof ABFieldFormula ||\n                              f instanceof ABFieldNumber\n                           )\n                              result[f.columnName] = d[f.columnName];\n                           else result[f.columnName] = f.format(d);\n                        });\n\n                        return result;\n                     });\n\n                     return webix.promise.resolve(dataMapped);\n                  }\n               },\n            ],\n            [\n               pivot.views.table,\n               class CustomTable extends pivot.views.table {\n                  CellFormat(value) {\n                     const decimalPlaces = settings.decimalPlaces ?? 2;\n                     if (!value) value = value === 0 ? \"0\" : \"\";\n                     return value\n                        ? parseFloat(value).toFixed(decimalPlaces)\n                        : value;\n                  }\n               },\n            ],\n         ]),\n      };\n\n      if (settings.structure) uiPivot.structure = settings.structure;\n\n      const _ui = super.ui([uiPivot]);\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   _getFields() {\n      const dc = this.datacollection;\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = object.fields().map((f) => {\n         let fieldType = \"text\";\n\n         switch (f.key) {\n            case \"calculate\":\n            case \"formula\":\n            case \"number\":\n               fieldType = \"number\";\n               break;\n            case \"date\":\n            case \"datetime\":\n               fieldType = \"date\";\n               break;\n         }\n\n         return {\n            id: f.columnName,\n            value: f.label,\n            type: fieldType,\n         };\n      });\n\n      return fields;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewReportsManagerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewReportManager_${baseView.id}`,\n         Object.assign(\n            {\n               reportManager: \"\",\n            },\n            ids\n         )\n      );\n\n      this.readonly = false;\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldText = dc?.datasource.fieldByID(\n         settings.dataviewFields.text\n      )?.columnName;\n      const fieldQueries = dc?.datasource.fieldByID(\n         settings.dataviewFields.queries\n      )?.columnName;\n      const ids = this.ids;\n      class MyBackend extends reports.services.Backend {\n         async getModules() {\n            if (dc == null) return [];\n\n            await self.waitInitializingDCEvery(1000, dc);\n\n            return dc.getData().map((e) => {\n               return {\n                  id: e.id,\n                  name: e[fieldName],\n                  text: JSON.stringify(e[fieldText]),\n                  updated: e[\"updated_at\"],\n               };\n            });\n         }\n\n         async addModule(data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            const response = await dc.model.create(parsedData);\n\n            return {\n               id: response.id,\n            };\n         }\n\n         async updateModule(id, data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            let response = {};\n\n            response = await dc.model.update(id, parsedData);\n\n            return { id: response.id };\n         }\n\n         async deleteModule(id) {\n            await dc.model.delete(id);\n\n            return { id: id };\n         }\n\n         async getModels() {\n            const reportModels = {};\n\n            // If no selected DC then get all DCs\n            (settings.datacollectionIDs.length > 0\n               ? settings.datacollectionIDs\n               : self.view.application.datacollectionIDs\n            ).forEach((dcID) => {\n               const dc = ab.datacollectionByID(dcID);\n\n               if (!dc) return;\n\n               const obj = dc.datasource;\n\n               if (!obj) return;\n\n               const reportFields = self.getReportFields(dc);\n\n               // get connected data collections\n               // let linkedFields = [];\n               // (obj.connectFields() || []).forEach((f, index) => {\n               //    let connectedDcs = ab.datacollections(\n               //       (dColl) =>\n               //          dColl &&\n               //          dColl.datasource &&\n               //          dColl.datasource.id === f.settings.linkObject\n               //    );\n               //    (connectedDcs || []).forEach((linkedDc) => {\n               //       linkedFields.push({\n               //          id: index + 1,\n               //          name: linkedDc.label,\n               //          source: dc.id,\n               //          target: linkedDc.id\n               //       });\n               //    });\n               // });\n\n               // // MOCK UP for testing\n               // let linkedFields = [\n               //    {\n               //       id: \"id\",\n               //       name: \"id\",\n               //       source: \"39378ee0-38f0-4b9d-a5aa-dddc61137fcd\", // Player\n               //       target: \"0de82362-4ab5-4f0f-8cfa-d1288d173cba\" // Team\n               //    }\n               // ];\n\n               reportModels[dc.id] = {\n                  id: dc.id,\n                  name: dc.label,\n                  data: reportFields,\n                  refs: [],\n               };\n            });\n\n            return reportModels;\n         }\n\n         async getQueries() {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return [];\n\n            return (\n               (\n                  await dc.model.findAll({\n                     where: {\n                        uuid: moduleID,\n                     },\n                  })\n               ).data[0][fieldQueries] || []\n            );\n         }\n\n         async addQuery(data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryID = abWebix.uid();\n\n            queries.push(Object.assign({ id: queryID }, data));\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id: queryID };\n         }\n\n         async updateQuery(id, data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            queries[queryIndex] = Object.assign({ id }, data);\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id };\n         }\n\n         async deleteQuery(id) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = moduleData[fieldQueries] || [];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            if (queryIndex >= 0) {\n               const parsedData = {};\n\n               parsedData[fieldQueries] = queries\n                  .filter((e, i) => i !== queryIndex)\n                  .sort((a, b) => {\n                     if (a.name < b.name) return -1;\n\n                     if (a.name > b.name) return 1;\n\n                     return 0;\n                  });\n\n               await dc.model.update(moduleID, parsedData);\n            }\n\n            return { id: id };\n         }\n\n         async getData(config) {\n            let result = [];\n            let pullDataTasks = [];\n            let dcIds = [];\n            let dcData = {};\n            let reportFields = [];\n\n            // pull data of the base and join DCs\n            dcIds.push(config.data);\n            (config.joins || []).forEach((j) => {\n               dcIds.push(j.sid);\n               dcIds.push(j.tid);\n            });\n            dcIds = ab.uniq(dcIds);\n            dcIds.forEach((dcId) => {\n               pullDataTasks.push(\n                  new Promise((resolve, reject) => {\n                     const getData = async () => {\n                        try {\n                           dcData[dcId] = (await self.getData(dcId)) || [];\n\n                           resolve();\n                        } catch (err) {\n                           reject(err);\n                        }\n                     };\n\n                     getData();\n                  })\n               );\n            });\n\n            dcIds.forEach((dcId) => {\n               const dataCol = ab.datacollectionByID(dcId);\n\n               if (!dataCol) return;\n\n               reportFields = reportFields.concat(\n                  self.getReportFields(dataCol).map((f) => {\n                     // change format of id to match the report widget\n                     f.id = `${dcId}.${f.id}`; // dc_id.field_id\n                     return f;\n                  })\n               );\n            });\n\n            await Promise.all(pullDataTasks);\n\n            // the data result equals data of the base DC\n            result = dcData[config.data] || [];\n\n            if (config.joins?.length)\n               (config.joins || []).forEach((j) => {\n                  const sourceDc = ab.datacollectionByID(j.sid);\n                  if (!sourceDc) return;\n\n                  const sourceObj = sourceDc.datasource;\n                  if (!sourceObj) return;\n\n                  const targetDc = ab.datacollectionByID(j.tid);\n                  if (!targetDc) return;\n\n                  const targetObj = targetDc.datasource;\n                  if (!targetObj) return;\n\n                  const sourceLinkField = sourceObj.fieldByID(j.sf);\n                  const targetLinkField = targetObj.fieldByID(j.tf);\n                  if (!sourceLinkField && !targetLinkField) return;\n\n                  const sourceData = dcData[j.sid] || [];\n                  const targetData = dcData[j.tid] || [];\n\n                  sourceData.forEach((sData) => {\n                     targetData.forEach((tData) => {\n                        let sVal =\n                           sData[\n                              sourceLinkField\n                                 ? `${j.sid}.${sourceLinkField.columnName}.id`\n                                 : `${j.sid}.id`\n                           ] || [];\n\n                        let tVal =\n                           tData[\n                              targetLinkField\n                                 ? `${j.tid}.${targetLinkField.columnName}.id`\n                                 : `${j.tid}.id`\n                           ] || [];\n\n                        if (!Array.isArray(sVal)) sVal = [sVal];\n\n                        if (!Array.isArray(tVal)) tVal = [tVal];\n\n                        // Add joined row to the result array\n                        const matchedVal = sVal.filter(\n                           (val) => tVal.indexOf(val) > -1\n                        );\n\n                        if (matchedVal?.length) {\n                           const updateRows =\n                              result.filter(\n                                 (r) =>\n                                    r[`${j.sid}.id`] === sData[`${j.sid}.id`] &&\n                                    !r[`${j.tid}.id`]\n                              ) || [];\n\n                           if (updateRows?.length)\n                              (updateRows || []).forEach((r) => {\n                                 for (const key in tData)\n                                    if (key !== \"id\") r[key] = tData[key];\n                              });\n                           else\n                              result.push(\n                                 Object.assign(\n                                    ab.cloneDeep(sData),\n                                    ab.cloneDeep(tData)\n                                 )\n                              );\n                        }\n                     });\n                  });\n               });\n\n            // filter & sort\n            const queryVal = JSON.parse(config.query || \"{}\");\n\n            if (queryVal?.rules?.length)\n               queryVal.rules.forEach((r) => {\n                  if (!r || !r.type || !r.condition) return;\n\n                  switch (r.type) {\n                     case \"date\":\n                        // Convert string to Date object\n                        if (r.condition.filter) {\n                           if (typeof r.condition.filter === \"string\")\n                              r.condition.filter = ab.rules.toDate(\n                                 r.condition.filter\n                              );\n\n                           if (\n                              r.condition.filter.start &&\n                              typeof r.condition.filter.start === \"string\"\n                           )\n                              r.condition.filter.start = ab.rules.toDate(\n                                 r.condition.filter.start\n                              );\n\n                           if (\n                              r.condition.filter.end &&\n                              typeof r.condition.filter.end === \"string\"\n                           )\n                              r.condition.filter.end = ab.rules.toDate(\n                                 r.condition.filter.end\n                              );\n                        }\n\n                        break;\n                  }\n               });\n\n            // create a new query widget to get the filter function\n            const filterElem = abWebix.ui({\n               view: \"query\",\n               fields: reportFields,\n               value: queryVal,\n            });\n\n            // create a new data collection and apply the query filter\n            const tempDc = new abWebix.DataCollection();\n\n            tempDc.parse(result);\n\n            // filter\n            let filterFn;\n\n            try {\n               filterFn = filterElem.getFilterFunction();\n            } catch (error) {\n               // continue regardless of error\n            }\n\n            if (filterFn) tempDc.filter(filterFn);\n\n            // sorting\n            (config.sort || []).forEach((sort) => {\n               if (sort.id)\n                  tempDc.sort({\n                     as: \"string\",\n                     dir: sort.mod || \"asc\",\n                     by: `#${sort.id}#`,\n                  });\n            });\n\n            result = tempDc.serialize();\n\n            // clear\n            filterElem.destructor();\n            tempDc.destructor();\n\n            // group by\n            if (config?.group?.length) {\n               result = _.groupBy(result, (e) => {\n                  return config.group\n                     .map((column) => {\n                        const parsedColumn = column.split(\".\");\n                        const originalColumn =\n                           parsedColumn.length > 2\n                              ? `${parsedColumn[1]}.${parsedColumn[2]}`\n                              : column;\n                        const reportField = reportFields.find(\n                           (reportField) => reportField.id === originalColumn\n                        );\n\n                        switch (reportField.type) {\n                           case \"date\": {\n                              const dateStringData = abWebix.i18n.dateFormatStr(\n                                 e[originalColumn]\n                              );\n                              const parsedDateStringData =\n                                 dateStringData.split(\"/\");\n\n                              switch (parsedColumn[0]) {\n                                 case \"day\":\n                                    e[column] = parsedDateStringData[1];\n\n                                    return parsedDateStringData[1];\n\n                                 case \"month\":\n                                    e[column] = parsedDateStringData[0];\n\n                                    return parsedDateStringData[0];\n\n                                 case \"year\":\n                                    e[column] = parsedDateStringData[2];\n\n                                    return parsedDateStringData[2];\n\n                                 case \"yearmonth\": {\n                                    e[\n                                       column\n                                    ] = `${parsedDateStringData[0]}/${parsedDateStringData[2]}`;\n\n                                    return e[column];\n                                 }\n\n                                 default:\n                                    e[column] = dateStringData;\n\n                                    return dateStringData;\n\n                                 // switch (reportField.abField.key) {\n                                 //    case \"datetime\":\n                                 //       return abWebix.i18n.fullDateFormatStr(\n                                 //          e[originalColumn]\n                                 //       );\n\n                                 //    default:\n                                 //       break;\n                                 // }\n                              }\n                           }\n\n                           default:\n                              return e[originalColumn]?.toString?.();\n                        }\n                     })\n                     .join(\"\");\n               });\n\n               result = Object.values(result).map((groupedData) => {\n                  const groupedResult = {};\n\n                  (config.columns || []).forEach((col) => {\n                     const agg = col.split(\".\")[0];\n                     const rawCol = col.replace(\n                        /sum.|avg.|count.|max.|min./g,\n                        \"\"\n                     );\n\n                     switch (agg) {\n                        case \"sum\":\n                           groupedResult[col] = ab.sumBy(groupedData, rawCol);\n                           break;\n                        case \"avg\":\n                           groupedResult[col] = ab.meanBy(groupedData, rawCol);\n                           break;\n                        case \"count\":\n                           groupedResult[col] = (groupedData || []).length;\n                           break;\n                        case \"max\":\n                           groupedResult[col] =\n                              (ab.maxBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        case \"min\":\n                           groupedResult[col] =\n                              (ab.minBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        default:\n                           groupedResult[col] = groupedData[0][col];\n                           break;\n                     }\n                  });\n\n                  return groupedResult;\n               });\n            }\n\n            return result;\n         }\n\n         async getOptions(fields) {\n            return [];\n         }\n         async getFieldData(fieldId) {\n            return [];\n         }\n      }\n      class MyLocal extends reports.services.Local {\n         constructor(app) {\n            super(app);\n\n            this._currentModuleID = \"\";\n         }\n\n         getQueries() {\n            const currentModuleID = $$(ids.reportManager).getState().moduleId;\n\n            if (this._currentModuleID !== currentModuleID) {\n               this._currentModuleID = currentModuleID;\n               this._queries = null;\n            }\n\n            return super.getQueries();\n         }\n      }\n      class MyEditor extends reports.views.editor {\n         init() {\n            super.init();\n\n            if (!self.readonly || settings.editMode === 1) return;\n\n            const $tabbar = this.$$(\"tabbar\");\n\n            if (settings.hideCommonTab === 1) {\n               const listener = () => {\n                  $tabbar.callEvent(\"onChange\", [\"data\"]);\n                  $tabbar.disableOption(\"common\");\n                  self.removeListener(\"editMode.tabbar.query\", listener);\n               };\n\n               self.on(\"editMode.tabbar.query\", listener);\n            }\n\n            if (settings.hideDataTab === 1) $tabbar.disableOption(\"other\");\n\n            if (settings.hideViewTab === 1) $tabbar.disableOption(\"structure\");\n\n            this.on(this.app, \"editMode.button.back\", () => {\n               this.Reset(true);\n            });\n         }\n\n         Reset(forceReset = false) {\n            const id = this.AppState.moduleId;\n            const condition = self.readonly && !(settings.editMode === 1);\n\n            if (!condition || id == null || forceReset) super.Reset();\n\n            this.Local.getModule(id);\n         }\n\n         TrackChanges() {\n            super.TrackChanges();\n\n            if (settings.hideCommonTab) self.emit(\"editMode.tabbar.query\");\n         }\n      }\n      class MyToolBar extends reports.views.toolbar {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly && !(settings.editMode === 1)) {\n               ui.elements[5].cols = ui.elements[5].cols.map((e) =>\n                  Object.assign(e, {\n                     hidden: self.readonly && !(settings.editMode === 1),\n                  })\n               );\n\n               ui.elements[5].cols.push(\n                  {},\n                  {\n                     view: \"button\",\n                     type: \"icon\",\n                     icon: \"wxi-angle-double-left\",\n                     label: self.label(\"Back\"),\n                     localId: \"forceReset\",\n                     click: () => {\n                        return this.app.callEvent(\"editMode.button.back\", []);\n                     },\n                  }\n               );\n            }\n\n            return ui;\n         }\n      }\n      class MyEditorCommon extends reports.views[\"editor/common\"] {\n         config() {\n            const ui = super.config();\n\n            if (!self.readonly) return ui;\n\n            return Object.assign({}, ui, {\n               elements: ui.elements.map((e, i) =>\n                  Object.assign(\n                     {\n                        hidden: !(i >= 2 && i < 5),\n                     },\n                     e\n                  )\n               ),\n            });\n         }\n\n         ShowDeleteButton() {\n            super.ShowDeleteButton();\n\n            if (self.readonly) this.$$(\"delete\").hide();\n         }\n      }\n      class MyEditorData extends reports.views[\"editor/data\"] {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly) {\n               ui.rows[0].rows[0].hidden = true;\n\n               ui.rows[0].rows.unshift({\n                  label: \"Filtering query\",\n                  view: \"label\",\n                  width: 120,\n               });\n            }\n\n            return ui;\n         }\n      }\n      class MyTable extends reports.views.table {\n         // NOTE: fix format of date column type\n         GetColumnConfig(a) {\n            let config = {\n               id: a.id,\n               header:\n                  !a.meta.header || a.meta.header === \"none\"\n                     ? a.meta.name || a.name\n                     : [\n                          a.meta.name || a.name,\n                          {\n                             content:\n                                a.header === \"text\"\n                                   ? \"textFilter\"\n                                   : \"richSelectFilter\",\n                          },\n                       ],\n               type: a.type,\n               sort: \"date\",\n               width: a.width || 200,\n            };\n\n            const abField = self.AB.datacollectionByID(\n               a.mid\n            )?.datasource.fields((field) => field.columnName === a.name)[0];\n\n            switch (a.type) {\n               case \"date\":\n                  config.format = (val) => {\n                     // check valid date\n                     if (val?.getTime && !isNaN(val.getTime()))\n                        return abField?.key === \"datetime\"\n                           ? abWebix.i18n.fullDateFormatStr(val)\n                           : abWebix.i18n.dateFormatStr(val);\n                     else return \"\";\n                  };\n\n                  break;\n\n               default:\n                  config = super.GetColumnConfig(a);\n\n                  break;\n            }\n\n            return config;\n         }\n\n         async GetTableData(mod) {\n            const data = await super.GetTableData(mod);\n            const buckets = mod.buckets;\n\n            if (!buckets) return data;\n\n            if (buckets.length === 0) return data;\n\n            const columnIDs = mod.columns.map((e) => e.id);\n            const parsedBuckets = mod.buckets.filter((bucket) =>\n               columnIDs.includes(bucket.column)\n            );\n\n            if (parsedBuckets.length === 0) return data;\n\n            const records = data[0].map((e) => {\n               const parseRecord = {};\n\n               parsedBuckets.forEach((bucket) => {\n                  const options = bucket.options;\n\n                  for (let i = 0; i < options.length; i++)\n                     if (\n                        options[i].values?.includes(e[bucket.column]) ||\n                        i === options.length - 1\n                     ) {\n                        parseRecord[bucket.column] = options[i].id;\n\n                        break;\n                     }\n               });\n\n               return Object.assign({}, e, parseRecord);\n            });\n\n            return [records, data[1]];\n         }\n      }\n\n      const _ui = super.ui([\n         {\n            id: ids.reportManager,\n            view: \"reports\",\n            toolbar: true,\n            override: new Map([\n               [reports.services.Backend, MyBackend],\n               [reports.services.Local, MyLocal],\n               [reports.views.editor, MyEditor],\n               [reports.views.toolbar, MyToolBar],\n               [reports.views[\"editor/common\"], MyEditorCommon],\n               [reports.views[\"editor/data\"], MyEditorData],\n               [reports.views.table, MyTable],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n      delete _ui.height;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      this.AB = AB;\n      this.readonly = accessLevel < 2;\n\n      const $reportManager = $$(this.ids.reportManager);\n      const state = $reportManager.getState();\n\n      state.readonly = this.readonly;\n      state.mode =\n         this.readonly && this.settings.editMode === 1 ? \"edit\" : \"list\";\n   }\n\n   getReportFields(dc) {\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = [];\n\n      object.fields().forEach((f) => {\n         const columnFormat = f.columnHeader();\n\n         if (!f.isConnection) {\n            let type = \"text\";\n\n            switch (f.key) {\n               case \"boolean\":\n               case \"number\":\n               case \"date\":\n                  type = f.key;\n\n                  break;\n\n               case \"datetime\":\n                  type = \"date\";\n\n                  break;\n\n               default:\n                  break;\n            }\n\n            fields.push({\n               id: f.columnName,\n               name: f.label,\n               filter: f.fieldIsFilterable(),\n               edit: false,\n               type: type,\n               format: columnFormat.format,\n               options: columnFormat.options,\n               ref: \"\",\n               key: false,\n               show: true,\n               abField: f,\n            });\n\n            return;\n         }\n\n         if (f.isSource()) {\n            const linkedDcs = this.view.application.datacollectionsIncluded(\n               (dc) =>\n                  this.settings.datacollectionIDs.includes(dc.id) &&\n                  dc.settings.datasourceID === f.settings.linkObject\n            );\n\n            (linkedDcs || []).forEach((linkDc) => {\n               fields.push({\n                  id: f.id,\n                  name: f.label,\n                  filter: false,\n                  edit: false,\n                  type: \"reference\",\n                  ref: linkDc.id,\n                  key: false,\n                  show: false,\n               });\n            });\n         }\n      });\n\n      return fields;\n   }\n\n   async getData(datacollectionId) {\n      const datacollection = this.AB.datacollectionByID(datacollectionId);\n      if (!datacollection) return [];\n\n      const object = datacollection.datasource;\n      if (!object) return [];\n\n      await this.waitInitializingDCEvery(1000, datacollection);\n\n      const reportFields = this.getReportFields(datacollection);\n      const reportData = [];\n      const rawData = datacollection.getData();\n\n      (rawData || []).forEach((row) => {\n         const reportRow = { id: row.id };\n\n         reportRow[`${datacollection.id}.id`] = row.id;\n\n         object.fields().forEach((field) => {\n            const columnName = field.columnName;\n            const col = `${datacollection.id}.${columnName}`;\n\n            if (field) {\n               // FK value of the connect field\n               if (field.isConnection) {\n                  let $pk = field.datasourceLink.PK();\n                  if (Array.isArray(row[columnName]))\n                     reportRow[`${col}.id`] = row[columnName].map(\n                        (link) => link[$pk] || link.id || link\n                     );\n                  else if (row[columnName])\n                     reportRow[`${col}.id`] =\n                        row[columnName][$pk] ||\n                        row[columnName].id ||\n                        row[columnName];\n               } else reportRow[col] = field.format(row);\n            } else reportRow[col] = row[columnName];\n\n            const rField = reportFields.find(\n               (f) => f.id === columnName || f.id === field.id\n            );\n\n            if (!rField) return;\n\n            switch (rField.type) {\n               case \"text\":\n               case \"reference\":\n                  reportRow[col] = (reportRow[col] || \"\").toString();\n                  break;\n\n               case \"number\":\n                  reportRow[col] = parseFloat(\n                     (reportRow[col] || 0).toString().replace(/[^\\d.-]/g, \"\")\n                  );\n                  break;\n\n               case \"date\":\n                  reportRow[col] = row[columnName];\n                  if (reportRow[col]) {\n                     if (!(reportRow[col] instanceof Date))\n                        reportRow[col] = this.AB.rules.toDate(row[columnName]);\n                  } else reportRow[col] = \"\";\n                  break;\n            }\n         });\n\n         reportData.push(reportRow);\n      });\n\n      return reportData;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewSchedulerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewScheduler_${baseView.id}`,\n         Object.assign(\n            {\n               scheduler: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const ab = this.AB;\n      const self = this;\n      const abWebix = this.AB.Webix;\n      const settings = this.settings;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldStart = dc?.datasource.fieldByID(\n         settings.dataviewFields.start\n      )?.columnName;\n      const fieldEnd = dc?.datasource.fieldByID(\n         settings.dataviewFields.end\n      )?.columnName;\n      const fieldAllDay = dc?.datasource.fieldByID(\n         settings.dataviewFields.allDay\n      )?.columnName;\n      const fieldRepeat = dc?.datasource.fieldByID(\n         settings.dataviewFields.repeat\n      )?.columnName;\n      const fieldCalendar = dc?.datasource.fieldByID(\n         settings.dataviewFields.calendar\n      )?.columnName;\n      const fieldEventColor = dc?.datasource.fieldByID(\n         settings.dataviewFields.color\n      )?.columnName;\n      const fieldNotes = dc?.datasource.fieldByID(\n         settings.dataviewFields.notes\n      )?.columnName;\n      const fieldOriginID = dc?.datasource.fieldByID(\n         settings.dataviewFields.originID\n      )?.columnName;\n      const fieldSectionID = dc?.datasource.fieldByID(\n         settings.dataviewFields.sectionID\n      )?.columnName;\n      const fieldUnitID = dc?.datasource.fieldByID(\n         settings.dataviewFields.unitID\n      )?.columnName;\n      const dcCalendar = ab.datacollectionByID(\n         this.settings.calendarDataviewID\n      );\n      const fieldTitle = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.title\n      )?.columnName;\n      const fieldCalendarColor = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.color\n      )?.columnName;\n      const fieldActive = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.active\n      )?.columnName;\n      const timelineOptions = [];\n\n      Object.keys(settings.timeline).forEach((key) => {\n         if (settings.timeline[key] === 0) return;\n\n         timelineOptions.push({\n            id: `${key}`,\n            value: `${key.charAt(0).toUpperCase()}${key.slice(1)}`,\n         });\n      });\n\n      const _ui = super.ui([\n         {\n            padding: 6,\n            cols: [\n               { view: \"label\", width: 150, label: \"Export events data to: \" },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"Excel\"),\n                  hidden: settings.export.excel === 0,\n                  click: () => {\n                     abWebix.toExcel(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"CSV\"),\n                  hidden: settings.export.csv === 0,\n                  click: () => {\n                     abWebix.toCSV(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"PDF\"),\n                  hidden: settings.export.pdf === 0,\n                  click: () => {\n                     abWebix.toPDF(ids.scheduler, { autowidth: true });\n                  },\n               },\n               {},\n            ],\n         },\n         {\n            id: ids.scheduler,\n            view: \"scheduler\",\n            date: new Date(),\n            readonly: settings.readonly === 1,\n            timeline: settings.timeline.timeline === 1,\n            override: new Map([\n               [\n                  scheduler.services.Backend,\n                  class MyBackend extends reports.services.Backend {\n                     async addCalendar(obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        const response = await dcCalendar.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async addEvent(obj) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        const response = await dc.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async calendars() {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dcCalendar == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dcCalendar);\n\n                        return dcCalendar.getData().map((e) => {\n                           return {\n                              id: e.id,\n                              text: e[fieldTitle],\n                              color: e[fieldCalendarColor],\n                              active: e[fieldActive],\n                           };\n                        });\n                     }\n                     async events(params) {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dc == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dc);\n\n                        const units = await this.units();\n                        const sections = await this.sections();\n\n                        return dc.getData().map((e) => {\n                           let unitID = units.find(\n                              (u) => u.id === e[fieldUnitID]\n                           )?.id;\n                           let sectionID = sections.find(\n                              (s) => s.id === e[fieldSectionID]\n                           )?.id;\n\n                           if (sectionID == null || unitID == null) {\n                              sectionID = sectionID || \"No Section\";\n                              unitID = unitID || \"No Unit\";\n\n                              // const data = {};\n\n                              // data[fieldSectionID] = sectionID;\n                              // data[fieldUnitID] = unitID;\n\n                              // dc.model.update(e.id, data);\n                           }\n\n                           return {\n                              id: e.id,\n                              text: e[fieldName],\n                              start_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldStart]),\n                              end_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldEnd]),\n                              all_day: e[fieldAllDay],\n                              recurring: e[fieldRepeat],\n                              calendar: e[fieldCalendar],\n                              color: e[fieldEventColor],\n                              section: sectionID,\n                              units: unitID,\n                              details: e[fieldNotes],\n                              origin_id: e[fieldOriginID],\n                           };\n                        });\n                     }\n                     async removeCalendar(id) {\n                        await dcCalendar.model.delete(id);\n                     }\n                     async removeEvent(id) {\n                        await dc.model.delete(id);\n                     }\n                     async sections() {\n                        return [\n                           { text: \"No Section\", id: \"No Section\" },\n                        ].concat(\n                           settings.timelineSectionList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 text: e,\n                              };\n                           })\n                        );\n                     }\n                     async units() {\n                        return [{ id: \"No Unit\", value: \"No Unit\" }].concat(\n                           settings.unitList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 value: e,\n                              };\n                           })\n                        );\n                     }\n                     async updateCalendar(id, obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        await dcCalendar.model.update(id, data);\n                     }\n                     async updateEvent(id, obj, mode, date) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        await dc.model.update(id, data);\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/nav\"],\n                  class CustomBarsView extends scheduler.views[\"bars/nav\"] {\n                     config() {\n                        const uiNav = super.config();\n                        uiNav.width = 160;\n                        uiNav.options = timelineOptions;\n                        return uiNav;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/navpopup\"],\n                  class CustomNavPopupView extends scheduler.views[\n                     \"bars/navpopup\"\n                  ] {\n                     config() {\n                        const uiNavPopup = super.config();\n\n                        const options = timelineOptions.map((e) =>\n                           Object.assign({ icon: `shi-${e.id}` }, e)\n                        );\n\n                        if (this.app.config.calendars)\n                           uiNavPopup.body.body.rows[0].data = options;\n                        else uiNavPopup.body.data = options;\n\n                        return uiNavPopup;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"modes/day/multiday\"],\n                  class CustomModesDayMultiday extends scheduler.views[\n                     \"modes/day/multiday\"\n                  ] {\n                     LimitData(data) {\n                        // Get an error the case when the data parameter is undefined.\n                        super.LimitData(data || []);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTabComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewTab_${baseView.id}`,\n         Object.assign(\n            {\n               tab: \"\",\n\n               sidebar: \"\",\n               expandMenu: \"\",\n               collapseMenu: \"\",\n\n               popupTabManager: \"\",\n               popupTabManagerForm: \"\",\n               popupTabManagerSaveButton: \"\",\n            },\n            ids\n         )\n      );\n\n      this.viewComponents =\n         this.viewComponents ||\n         baseView\n            .views((v) => v.getUserAccess())\n            .map((v) => {\n               return {\n                  view: v,\n                  // component: v.component(App)\n               };\n            });\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      let _ui = null;\n\n      // We are going to make a custom icon using the first letter of a menu item for menu items that don't have an icon\n      // to do this we need to modify the default template with the method webix recommended form this snippet https://snippet.webix.com/b566d9f8\n      abWebix.type(abWebix.ui.tree, {\n         baseType: \"sideBar\", // inherit everything else from sidebar type\n         name: \"customIcons\",\n         icon: (obj, common) => {\n            if (obj.icon.length)\n               return [\n                  \"<span class='webix_icon webix_sidebar_icon fa fa-fw fa-\",\n                  obj.icon,\n                  \"'></span>\",\n               ].join(\"\");\n\n            return [\n               \"<span class='webix_icon webix_sidebar_icon sidebarCustomIcon'>\",\n               obj.value.charAt(0).toUpperCase(),\n               \"</span>\",\n            ].join(\"\");\n         },\n      });\n\n      const viewComponents = this.viewComponents;\n      const settings = this.settings;\n\n      if (viewComponents.length > 0) {\n         if (settings.stackTabs) {\n            // define your menu items from the view components\n            const menuItems = viewComponents.map((vc) => {\n               const view = vc.view;\n\n               return {\n                  id: `${view.id}_menu`,\n                  value: view.label,\n                  icon: view.tabicon ? view.tabicon : \"\",\n               };\n            });\n\n            if (menuItems.length) {\n               // create a menu item for the collapse option to use later\n               const collapseMenu = {\n                  id: ids.collapseMenu,\n                  value: this.label(\"Collapse Menu\"),\n                  icon: \"chevron-circle-left\",\n               };\n\n               // create a menu item from the expand option to use later\n               const expandMenu = {\n                  id: ids.expandMenu,\n                  value: this.label(\"Expand Menu\"),\n                  icon: \"chevron-circle-right\",\n                  hidden: true,\n               };\n\n               // find out what the first option is so we can set it later\n               let selectedItem = `${viewComponents[0].view.id}_menu`;\n\n               const abStorage = ab.Storage;\n               const sidebar = {\n                  view: \"sidebar\",\n                  type: \"customIcons\", // define the sidebar type with the new template created above\n                  id: ids.sidebar,\n                  height: settings.height,\n                  width: settings.sidebarWidth ? settings.sidebarWidth : 0,\n                  scroll: true,\n                  position: settings.sidebarPos ? settings.sidebarPos : \"left\",\n                  css: settings.darkTheme ? \"webix_dark\" : \"\",\n                  data: menuItems.concat(collapseMenu), // add you menu items along with the collapse option to start\n                  on: {\n                     onItemClick: (id) => {\n                        // when a menu item is clicked\n                        if (id === ids.collapseMenu) {\n                           // if it was the collapse menu item\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the collapse option from the menu\n                              $sidebar.remove(ids.collapseMenu);\n                              // add the expand option to the menu\n                              $sidebar.add(expandMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else if (id === ids.expandMenu) {\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the expand option from the menu\n                              $sidebar.remove(ids.expandMenu);\n                              // add the collapse option to the menu\n                              $sidebar.add(collapseMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else {\n                           // store the selecte menu item just in case someone toggles the menu later\n                           selectedItem = id;\n                           // if the menu item is a regular menu item\n                           // call the onShow with the view id to load the view\n\n                           id = id.replace(\"_menu\", \"\");\n                           let node = $$(id);\n                           if (node) {\n                              node.show(false, false);\n                           } else {\n                              // How often does this occure?\n                              let msg = `ABViewTabComponent[${this.name}][${this.id}] could not resolve UI panel for provided menu [${selectedItem}].`;\n                              this.AB.notify(\"developer\", msg, {});\n                           }\n                           // $$(id).show(false, false);\n\n                           // onShow(id);\n                        }\n                     },\n                     onSelectChange: () => {\n                        addDataCy();\n                     },\n                     onAfterRender: () => {\n                        addDataCy();\n                     },\n                  },\n               };\n\n               const multiview = {\n                  view: \"multiview\",\n                  id: ids.tab,\n                  keepViews: true,\n                  minWidth: settings.minWidth,\n                  cells: viewComponents.map((view) => {\n                     const tabUi = {\n                        id: view.view.id,\n                        // ui will be loaded when its tab is opened\n                        view: \"layout\",\n                        rows: [],\n                     };\n\n                     return tabUi;\n                  }),\n                  on: {\n                     onViewChange: (prevId, nextId) => {\n                        this.onShow(nextId);\n                     },\n                  },\n               };\n\n               const addDataCy = function () {\n                  const $sidebar = $$(ids.sidebar);\n\n                  // set ids of controller buttons\n                  const collapseNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.collapseMenu}\"]`\n                  );\n\n                  if (collapseNode)\n                     collapseNode.setAttribute(\n                        \"data-cy\",\n                        `tab-collapseMenu-${ids.collapseMenu}`\n                     );\n\n                  const expandNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.expandMenu}\"]`\n                  );\n\n                  if (expandNode)\n                     expandNode.setAttribute(\n                        \"data-cy\",\n                        `tab-expandMenu-${ids.expandMenu}`\n                     );\n\n                  baseView.views((view) => {\n                     const node = $sidebar?.$view?.querySelector(\n                        `[webix_tm_id=\"${view.id}_menu\"]`\n                     );\n\n                     if (!node) {\n                        return;\n                     }\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `tab-${view.name.replace(\" \", \"\")}-${view.id}-${\n                           baseView.id\n                        }`\n                     );\n                  });\n               };\n\n               let columns = [sidebar, multiview];\n\n               if (settings.sidebarPos === \"right\") {\n                  columns = [multiview, sidebar];\n               }\n\n               _ui = {\n                  cols: columns,\n               };\n            } else\n               _ui = {\n                  view: \"spacer\",\n               };\n         } else {\n            const cells = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  const tabUi = {\n                     id: view.id,\n                     // ui will be loaded when its tab is opened\n                     view: \"layout\",\n                     rows: [],\n                  };\n\n                  let tabTemplate = \"\";\n\n                  // tab icon\n                  if (view.tabicon) {\n                     if (settings.iconOnTop)\n                        tabTemplate = [\n                           \"<div class='ab-tabIconContainer'><span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span><br/>\",\n                           view.label,\n                           \"</div>\",\n                        ].join(\"\");\n                     else\n                        tabTemplate = [\n                           \"<span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span> \",\n                           view.label,\n                        ].join(\"\");\n                  }\n\n                  // no icon\n                  else tabTemplate = view.label;\n\n                  return {\n                     header: tabTemplate,\n                     body: tabUi,\n                  };\n               });\n\n            // if there are cells to display then return a tabview\n            if (cells.length) {\n               _ui = {\n                  rows: [\n                     {\n                        view: \"tabview\",\n                        id: ids.tab,\n                        minWidth: settings.minWidth,\n                        height: settings.height,\n                        tabbar: {\n                           height: 60,\n                           type: \"bottom\",\n                           css: settings.darkTheme ? \"webix_dark\" : \"\",\n                           on: {\n                              onAfterRender: () => {\n                                 baseView.views((view) => {\n                                    const node = $$(\n                                       ids.tab\n                                    )?.$view?.querySelector(\n                                       `[button_id=\"${view.id}\"]`\n                                    );\n\n                                    if (!node) return;\n\n                                    node.setAttribute(\n                                       \"data-cy\",\n                                       `tab ${view.name} ${view.id} ${baseView.id}`\n                                    );\n                                 });\n                              },\n                           },\n                        },\n                        multiview: {\n                           on: {\n                              onViewChange: (prevId, nextId) => {\n                                 this.onShow(nextId);\n                              },\n                           },\n                        },\n                        cells: cells,\n                     },\n                  ],\n               };\n            }\n            // else we return a spacer\n            else\n               _ui = {\n                  view: \"spacer\",\n               };\n         }\n      } else\n         _ui = {\n            view: \"spacer\",\n         };\n\n      _ui = super.ui([_ui]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      if ($tab) abWebix.extend($tab, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // vc.component.init(AB);\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: vc.view,\n            eventName: \"changePage\",\n            listener: (...p) => this.changePage(...p),\n         });\n      });\n\n      // Trigger 'changeTab' event to parent\n      this.eventAdd({\n         emitter: baseView,\n         eventName: \"changeTab\",\n         listener: (...p) => this.changeTab(...p),\n      });\n\n      // initialize the sidebar and figure out if it should be collased or not\n      const $sidebar = $$(ids.sidebar);\n\n      if (!$sidebar) return;\n\n      const state = await ab.Storage.get(`${ids.tab}-state`);\n\n      if (!state) return;\n\n      // create a menu item for the collapse option to use later\n      const collapseMenu = {\n         id: ids.collapseMenu,\n         value: this.label(\"Collapse Menu\"),\n         icon: \"chevron-circle-left\",\n      };\n\n      // create a menu item from the expand option to use later\n      const expandMenu = {\n         id: ids.expandMenu,\n         value: this.label(\"Expand Menu\"),\n         icon: \"chevron-circle-right\",\n         hidden: true,\n      };\n\n      // this will collapse or expand the sidebar\n      $sidebar.setState(state);\n\n      const checkCollapseMenu = $sidebar.getItem(ids.collapseMenu) ?? null;\n      const checkExpandMenu = $sidebar.getItem(ids.expandMenu) ?? null;\n\n      // if the state is collapsed we need to make sure the expand option is available\n      if (state.collapsed) {\n         if (checkCollapseMenu && checkExpandMenu)\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(expandMenu);\n      } else if (checkCollapseMenu && checkExpandMenu)\n         // $sidebar.remove(ids.collapseMenu);\n         $sidebar.add(collapseMenu);\n   }\n\n   changePage(pageId) {\n      const $tab = $$(this.ids.tab);\n\n      $tab?.blockEvent();\n      this.view.changePage(pageId);\n      $tab?.unblockEvent();\n   }\n\n   changeTab(tabViewId) {\n      const baseView = this.view;\n      const $tabViewId = $$(tabViewId);\n\n      // switch tab view\n      this.toggleParent(baseView.parent);\n\n      if (this.settings.stackTabs)\n         if (!$tabViewId.isVisible()) {\n            const showIt = setInterval(() => {\n               if ($tabViewId.isVisible()) clearInterval(showIt);\n\n               $tabViewId.show(false, false);\n            }, 200);\n         } else $$(this.ids.tab).setValue(tabViewId);\n   }\n\n   toggleParent(view) {\n      const $viewID = $$(view.id);\n\n      if (view.key === \"tab\" || view.key === \"viewcontainer\") {\n         $viewID?.show(false, false);\n      }\n      if (view.parent) {\n         this.toggleParent(view.parent);\n      }\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      let defaultViewIsSet = false;\n\n      const $sidebar = $$(ids.sidebar);\n\n      // if no viewId is given, then try to get the currently selected ID\n      if (!viewId && $sidebar)\n         viewId = $sidebar.getSelectedId().replace(\"_menu\", \"\");\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // set default view id\n         const currView = baseView.views((view) => {\n            return view.id === vc.view.id;\n         });\n\n         let accessLevel = 0;\n\n         if (currView.length) accessLevel = currView[0].getUserAccess();\n\n         // choose the 1st View if we don't have one we are looking for.\n         if (!viewId && !defaultViewIsSet && accessLevel > 0) {\n            viewId = vc.view.id;\n\n            defaultViewIsSet = true;\n         }\n\n         // create view's component once\n         const $tab = $$(ids.tab);\n         const settings = this.settings;\n\n         if (!vc?.component && vc?.view?.id === viewId) {\n            // show loading cursor\n            if ($tab?.showProgress) $tab.showProgress({ type: \"icon\" });\n\n            vc.component = vc.view.component();\n\n            const $viewID = $$(vc.view.id);\n            const ab = this.AB;\n            const abWebix = ab.Webix;\n\n            if (settings.stackTabs) {\n               // update multiview UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-multiview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            } else {\n               // update tab UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-tabview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            }\n\n            // for tabs we need to look at the view's accessLevels\n            accessLevel = vc.view.getUserAccess();\n\n            vc.component.init(ab, accessLevel);\n\n            // done\n            setTimeout(() => {\n               // $$(v.view.id).adjust();\n\n               $tab?.hideProgress?.();\n               // check if tab has a hint\n               // if (vc?.view?.settings?.hintID) {\n               //    // fetch the steps for the hint\n               //    let hint = ab.hintID(vc.view.settings.hintID);\n               //    hint.createHintUI();\n               // }\n            }, 10);\n         }\n\n         // show UI\n         if (vc?.view?.id === viewId && vc?.component?.onShow)\n            vc.component.onShow();\n\n         if (settings.stackTabs && vc?.view?.id === viewId) {\n            $$(viewId).show(false, false);\n            $sidebar.select(`${viewId}_menu`);\n         }\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTextComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewText_${baseView.id}`,\n         Object.assign(\n            {\n               text: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n\n      const _uiText = {\n         id: ids.text,\n         view: \"template\",\n         minHeight: 10,\n         css: \"ab-custom-template\",\n         borderless: true,\n      };\n\n      if (settings.height) _uiText.height = settings.height;\n      else _uiText.autoheight = true;\n\n      const _ui = super.ui([_uiText]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   displayText(value) {\n      const ids = this.ids;\n      const result = this.view.displayText(value, ids.text);\n\n      const $text = $$(ids.text);\n\n      if (!$text) return;\n\n      $text.define(\"template\", result);\n      $text.refresh();\n   }\n\n   onShow() {\n      super.onShow();\n\n      // listen DC events\n      const dataview = this.datacollection;\n      const baseView = this.view;\n\n      if (dataview && baseView.parent.key !== \"dataview\")\n         baseView.eventAdd({\n            emitter: dataview,\n            eventName: \"changeCursor\",\n            listener: (...p) => this.displayText(...p),\n         });\n\n      this.displayText();\n   }\n};\n","import ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewProperty extends ClassUI {\n   // constructor() {}\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {};\n   }\n\n   /** == Property == */\n   /**\n    * @function propertyComponent\n    * return the view and logic to display in property panel\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   static propertyComponent() {\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n\n   fromSettings(settings) {\n      this.settings = settings;\n   }\n\n   toSettings() {\n      return this.settings || {};\n   }\n\n   /** == UI == */\n   /**\n    * @function component\n    * return the view and logic to display in display widget\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewFormButton from \"../ABViewFormButton\";\nimport ABViewPDFImporter from \"../ABViewPDFImporter\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyAddPage extends ABViewProperty {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         formView: \"none\", // id of form to add new data\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formView: `${idBase}_formView`,\n      };\n\n      let ui = {\n         id: ids.formView,\n         name: \"formView\",\n         view: \"richselect\",\n         label: L(\"Add New Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formView).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            let pagesHasForm = view\n               .pageRoot()\n               .pages((p) => {\n                  return p.views((v) => {\n                     return (\n                        v &&\n                        v.key == \"form\" &&\n                        v.datacollection &&\n                        v.datacollection.datasource &&\n                        v.datacollection.datasource.id ==\n                           view.field().settings.linkObject\n                     );\n                  }, true).length;\n               }, true)\n               .map((p) => {\n                  return {\n                     id: p.id,\n                     value: p.label,\n                  };\n               });\n\n            editForms = editForms.concat(pagesHasForm);\n\n            let $selector = $$(ids.formView);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.formView || this.default.formView\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            settings.formView = $$(ids.formView).getValue();\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.formView =\n         settings.formView || this.constructor.default.formView;\n   }\n\n   getIds(idBase, App) {\n      return {\n         popup: App._App.unique(`${idBase}_popup_add_new`),\n         field: idBase.split(\"_\")[1],\n         button: App._App.unique(`${idBase}_popup_add_new_button`),\n      };\n   }\n\n   component(App, idBase) {\n      // This can be overwritten by creating a different getIds before calling .super\n      let ids = this.getIds(idBase, App);\n\n      let ui = \"\";\n\n      if (\n         this.settings.formView &&\n         this.settings.formView != this.constructor.default.formView\n      ) {\n         // let iDiv = document.createElement(\"div\");\n         // iDiv.className = \"ab-connect-add-new\";\n         const dataCy = `add new CR button ${this.settings.formView} ${ids.field}`;\n         // iDiv.innerHTML = `<a href=\"javascript:void(0);\" class=\"fa fa-plus ab-connect-add-new-link\" data-cy=\"${dataCy}\"></a>`;\n         // iDiv.appendChild(node);\n         // ui = iDiv.outerHTML;\n         ui = {\n            id: ids.button,\n            view: \"button\",\n            type: \"icon\",\n            icon: \"fa fa-plus\",\n            width: 32,\n            height: 32,\n            css: \"webix_primary ab-connect-add-new-link\",\n            on: {\n               onAfterRender: () => {\n                  $$(ids.button)\n                     ?.$view.querySelector(\"button\")\n                     .setAttribute(\"data-cy\", dataCy);\n               },\n            },\n         };\n      }\n\n      let _logic = {\n         callbacks: {\n            onSaveData: (saveData) => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n            },\n            onCancel: () => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n\n               return false;\n            },\n            onClearOnLoad: () => {\n               return true;\n            },\n            clearOnLoad: () => {\n               return true;\n            },\n         },\n\n         applicationLoad: (application) => {\n            this._application = application;\n         },\n\n         onClick: (dc) => {\n            let pageId = this.settings.formView;\n            let page = this._application.pages((p) => p.id == pageId, true)[0];\n\n            return _logic.openFormPopup(page, dc);\n         },\n\n         /**\n          * @method openFormPopup\n          *\n          * @param page {ABViewPage}\n          * @param dc {ABDataCollection}\n          */\n         openFormPopup: (page, dc) => {\n            return new Promise((resolve, reject) => {\n               if (this._application == null) return resolve();\n\n               if ($$(ids.popup)) {\n                  $$(ids.popup).show();\n                  return resolve();\n               }\n\n               // Clone page so we modify without causing problems\n               let pageClone = page.clone(null, null, { ignoreSubPages: true });\n               pageClone.id = this._application.AB.uuid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               // pageClone.id = pageClone.id + \"-\" + webix.uid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               let popUpComp = pageClone.component();\n               let ui = popUpComp.ui();\n\n               // Listen 'saved' event of the form widget\n               const saveViews =\n                  pageClone.views(\n                     (v) =>\n                        v instanceof ABViewFormButton ||\n                        v instanceof ABViewPDFImporter,\n                     true\n                  ) ?? [];\n\n               saveViews.forEach((view) => {\n                  const v =\n                     view instanceof ABViewFormButton ? view.parent : view;\n                  v.on(\"saved\", (savedData) => {\n                     _logic?.callbacks?.onSaveData(savedData);\n                     // ? is there ever a case where we want to keep an add popup open after saving?\n                     // ! setting this to always close\n\n                     if ($$(ids.popup)) {\n                        $$(ids.popup).close();\n                     } else {\n                        var popup = this.getTopParentView();\n                        popup.close();\n                     }\n                  });\n               });\n\n               let popupTemplate = {\n                  view: \"window\",\n                  id: ids.popup,\n                  modal: true,\n                  position: \"center\",\n                  // position:function(stthis.__addPageToolate){\n                  // \tstate.left = x + 20this.__addPageTool; // offset the popups\n                  // \tstate.top = y + 20;this.__addPageTool\n                  // },\n                  resize: true,\n                  width: parseInt(this.settings.popupWidth) || 700,\n                  height: parseInt(this.settings.popupHeight) + 44 || 450,\n                  css: \"ab-main-container\",\n                  head: {\n                     view: \"toolbar\",\n                     css: \"webix_dark\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: page.label,\n                           css: \"modal_title\",\n                           align: \"center\",\n                        },\n                        {\n                           view: \"button\",\n                           label: L(\"Close\"),\n                           autowidth: true,\n                           align: \"center\",\n                           click: function () {\n                              var popup = this.getTopParentView();\n                              popup.close();\n                           },\n                        },\n                     ],\n                  },\n                  body: {\n                     view: \"scrollview\",\n                     scroll: true,\n                     body: ui,\n                  },\n               };\n\n               // Create popup\n               webix.ui(popupTemplate).show();\n\n               // Initial UI components\n               const accessLevel = 3; // TODO: Is it correct\n               popUpComp.init(this._application.AB, accessLevel, {\n                  onSaveData: _logic.callbacks.onSaveData,\n                  onCancelClick: _logic.callbacks.onCancel,\n                  clearOnLoad: _logic.callbacks.clearOnLoad,\n                  onClearOnLoad: _logic.callbacks.onClearOnLoad,\n               });\n\n               popUpComp.onShow();\n\n               setTimeout(async () => {\n                  _logic.setDefaultValue(dc, pageClone);\n\n                  resolve();\n               }, 100);\n            });\n         },\n\n         setDefaultValue: (dc, page) => {\n            if (!dc) return;\n\n            let obj = dc.datasource;\n            if (!obj) return;\n\n            let linkedData = dc.getCursor();\n            if (!linkedData) return;\n\n            page.views().forEach((v) => {\n               if (!v || v.key != \"form\") return;\n\n               v.views().forEach((fView) => {\n                  if (fView.key != \"connect\" || fView.settings == null) return;\n\n                  let field = fView.field();\n                  if (field == null) return;\n\n                  let objLink = field.datasourceLink;\n                  if (objLink == null || objLink.id != obj.id) return;\n\n                  let data = {};\n                  let relationName = field.relationName();\n                  data[relationName] = {\n                     id: linkedData.id,\n                  };\n\n                  // Add custom index values\n                  let indexes = obj.indexes() || [];\n                  indexes.forEach((idx) => {\n                     (idx.fields || []).forEach((f) => {\n                        data[relationName][f.columnName] =\n                           linkedData[f.columnName];\n                     });\n                  });\n\n                  // Set label of selected item\n                  if (linkedData.text) {\n                     data[relationName].text = linkedData.text;\n                     data[relationName].value = data[relationName].text;\n                  } else {\n                     let rawData = {};\n                     rawData[relationName] = linkedData;\n                     data[relationName].text = field.format(rawData);\n                     data[relationName].value = data[relationName].text;\n                  }\n\n                  let comp = v.viewComponents[fView.id];\n                  if (!comp) return;\n\n                  const ui = typeof comp.ui == \"function\" ? comp.ui() : comp.ui;\n                  const inputId = ui?.inputId || ui?.rows?.[0]?.inputId;\n\n                  if (inputId) field.setValue($$(inputId), data);\n               });\n            });\n         },\n      };\n\n      let init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n         if (ui) {\n            for (let c in options) {\n               ui.on[c] = options[c];\n            }\n         }\n      };\n\n      return {\n         ui: ui,\n         init: init,\n\n         applicationLoad: _logic.applicationLoad,\n         onClick: _logic.onClick,\n         openFormPopup: _logic.openFormPopup,\n      };\n   }\n}\n","import ABViewPropertyAddPage from \"./ABViewPropertyAddPage\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyEditPage extends ABViewPropertyAddPage {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         editForm: \"none\", // The url pointer of ABViewForm\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formEdit: `${idBase}_editForm`,\n      };\n\n      let ui = {\n         id: ids.formEdit,\n         name: \"editForm\",\n         view: \"richselect\",\n         label: L(\"Edit Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formEdit).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n            clearOnLoad: () => {\n               return false; // always false, we're trying to edit data\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n            settings.clearOnLoad = false; // doesn't work\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            (view.pageRoot().pages(() => true, true) || []).forEach((p) => {\n               if (!p) return;\n\n               p.views(() => true, true).forEach((v) => {\n                  if (\n                     v &&\n                     v.key == \"form\" &&\n                     v.datacollection &&\n                     v.datacollection.datasource &&\n                     v.datacollection.datasource.id ==\n                        view.field().settings.linkObject\n                  ) {\n                     editForms.push({\n                        id: v.urlPointer(),\n                        value: `${p.label} - ${v.label}`,\n                     });\n                  }\n               });\n            });\n\n            let $selector = $$(ids.formEdit);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.editForm || this.default.editForm\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            let $selector = $$(ids.formEdit);\n            let $selectPopup = $selector.getPopup();\n            let selectedItem = ($selectPopup.config.body.data || []).filter(\n               (opt) => opt.id == $selector.getValue()\n            )[0];\n            if (selectedItem) {\n               settings.editForm = selectedItem.id; // The url pointer of ABViewForm\n            }\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.editForm =\n         settings.editForm || this.constructor.default.editForm;\n   }\n\n   component(App, idBase) {\n      // Overwrite the popup-lookup function\n      function getIds(idBase, App) {\n         return {\n            popup: App._App.unique(`${idBase}_popup_edit_form`),\n            field: idBase.split(\"_\")[1],\n         };\n      }\n      this.getIds = getIds;\n\n      // call to addpage\n      let comp = super.component(App, idBase);\n\n      comp.onClick = () => {\n         if (\n            !this._application ||\n            !this.settings.editForm ||\n            this.settings.editForm == this.constructor.default.editForm\n         )\n            return Promise.resolve();\n\n         let form = this._application.urlResolve(this.settings.editForm);\n         if (!form) return Promise.resolve();\n\n         let page = form.pageParent();\n         if (!page) return Promise.resolve();\n\n         return comp.openFormPopup(page);\n      };\n\n      return comp;\n   }\n}\n","/*\n * ABViewPropertyFilterData\n * This is a displayable ui component that will manage displaying a\n * means of searching for the user.\n *\n * This component will emit: \"filter.data\" when one of the filter options\n * have been enabled.\n *    \"filter.data\" has 2 parameters: fnFilter, filterRules\n *       fnFilter {function} when passed a row of data from the grid,\n *                return true/false if it passes the filter.\n *       filterRules {array} of each of the filter rules that have been\n *                created. Note: the fnFilter still checks the validity\n *                of the row based on these rules.\n *                (this is used for the parent component to indicate how\n *                many rules are currently applied to the data being displayed)\n */\nconst ABMLClass = require(\"../../ABMLClass\");\nimport ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\n// const ABViewGridFilterRule = require(\"../../../rules/ABViewGridFilterRule\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass FilterRuleSettings extends ABMLClass {\n   constructor() {\n      super([\"label\"], AB);\n   }\n\n   fromSettings(settings) {\n      super.fromValues(settings);\n      this.filters = settings.filters;\n   }\n\n   toSettings() {\n      let obj = super.toObj();\n      obj.filters = this.filters;\n      return obj;\n   }\n}\n\nclass ABViewPropertyFilterDataComponent extends ABViewComponent {\n   constructor(viewPropertyFilterData, idBase) {\n      var base = idBase || viewPropertyFilterData.idBase;\n      super(base, {});\n   }\n}\n\nexport default class ABViewPropertyFilterData extends ABViewProperty {\n   constructor(AB, idBase) {\n      super(idBase, {\n         buttonAddfilter: \"\",\n         filterPanel: \"\",\n         globalFilterFormContainer: \"\",\n         globalFilterForm: \"\",\n         filterMenutoolbar: \"\",\n         resetFilterButton: \"\",\n      });\n\n      this.AB = AB;\n      this.idBase = idBase;\n      this.object = null;\n      // this.queryRules = [];\n\n      this.__externalSearchText = null;\n      // {string}\n      // External sources of text filters are stored here. This is most likely\n      // from the global search toolbar entry.\n      this.rowFilter = this.AB.filterComplexNew(`${this.ids.component}_filter`);\n      // {RowFilter}\n      // When .userFilterPosition == \"toolbar\" we use this RowFilter to\n      // display a form in a popup where the toolbar button is.\n\n      this.rowFilterForm = this.AB.filterComplexNew(\n         `${this.ids.component}_filter_form`\n      );\n      // {RowFilter}\n      // When .userFilterPosition == \"form\" we use this RowFilter to\n      // display a form under the toolbar.\n\n      this._handler_rowFilterChanged = (value) => {\n         let filterRules = value.rules || [];\n\n         // if ($$(ids.buttonFilter)) {\n         //    $$(ids.buttonFilter).define('badge', filterRules.length || null);\n         //    $$(ids.buttonFilter).refresh();\n         // }\n\n         // be notified when there is a change in the filter\n         this.triggerCallback((rowData) => {\n            return this.rowFilter.isValid(rowData);\n         }, filterRules);\n      };\n\n      this._handler_rowFilterFormChanged = () => {\n         this.triggerCallback();\n      };\n\n      this.initialized = false;\n      // {bool}\n      // make sure this is not .init() more than once\n   }\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         filterOption: 1,\n         // {integer}\n         // 0 - Not allow\n         // 1 - Enable user filter\n         // 2 - Predefined filter menu\n         // 3 - Global filter input\n\n         // filterOptions == 1 options\n         userFilterPosition: \"toolbar\",\n         // {string} the location of the filter:\n         //    \"toolbar\" : there will be an \"Add Filters\" button on\n         //                the toolbar that will trigger the form popup\n         //    \"form\"    : there will be a button under the toolbar that\n         //                will bring up the form popup.\n\n         isGlobalToolbar: 1,\n         // {boolean|truthy}\n         // when \"toolbar\" is chosen for userFilterPosition, this setting\n         // allows us to also include the search criteria specified in\n         // the search box on the toolbar.\n\n         // filterOptions == 2 options\n         // predefined filters created by the builders. There will be\n         // an area under the toolbar that displays buttons to choose\n         // between one of the predefined queryRules.\n         // queryRules: [], // An array of ABViewGridFilterRule object\n\n         // filterOptions == 3 options\n         // globalFilterPosition: \"default\",\n         // {string} [ \"default\", \"single\" ]\n         //    \"default\" : shows default grid with all potential matches\n         //    \"single\"  : grid only shows when it has a match.  only 1\n         //                match is shown. ( is this true?? )\n      };\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      settings.filterOption =\n         typeof settings.filterOption != \"undefined\"\n            ? settings.filterOption\n            : ABViewPropertyFilterData.default.filterOption;\n\n      settings.isGlobalToolbar =\n         typeof settings.isGlobalToolbar != \"undefined\"\n            ? settings.isGlobalToolbar\n            : ABViewPropertyFilterData.default.isGlobalToolbar;\n\n      this.settings = settings;\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.object = object;\n\n      if (this.rowFilter) {\n         // this.rowFilter.applicationLoad(object.application);\n         this.rowFilter.fieldsLoad(object.fields());\n      }\n\n      if (this.rowFilterForm) {\n         // this.rowFilterForm.applicationLoad(object.application);\n         this.rowFilterForm.fieldsLoad(object.fields());\n      }\n   }\n\n   viewLoad(view) {\n      this.view = view;\n   }\n\n   /** == UI == */\n   ui() {\n      var self = this;\n      var ids = this.ids;\n\n      return {\n         id: ids.filterPanel,\n         type: \"space\",\n         borderless: true,\n         padding: 0,\n         hidden: true,\n         rows: [\n            {\n               id: ids.globalFilterFormContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.globalFilterForm,\n                     view: \"text\",\n                     placeholder: L(\"Search or scan a barcode to see results\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.triggerCallback();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: function () {\n                        var $form = $$(ids.globalFilterForm);\n                        $form.setValue(\"\");\n                        $form.focus();\n                        $form.callEvent(\"onTimedKeyPress\");\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.buttonAddfilter,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Filter\"),\n               click: () => {\n                  this.rowFilterForm.popUp($$(ids.buttonAddfilter).getNode(), {\n                     pos: \"bottom\",\n                  });\n               },\n            },\n            {\n               view: \"toolbar\",\n               id: ids.filterMenutoolbar,\n               css: \"ab-data-toolbar\",\n               hidden: true,\n               cols: [\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     id: ids.resetFilterButton,\n                     label: L(\"Reset Filter\"),\n                     icon: \"fa fa-ban\",\n                     type: \"icon\",\n                     // badge: 0,\n                     autowidth: true,\n                     click: function () {\n                        self.resetFilter();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      var ids = this.ids;\n      // this.filter_popup = webix.ui({\n      //    view: \"popup\",\n      //    id: ids.component,\n      //    width: 600,\n      //    height: 400,\n      //    hidden: true,\n      //    body: this.rowFilter.ui,\n      // });\n\n      this.rowFilter.init();\n      this.rowFilter.removeListener(\"changed\", this._handler_rowFilterChanged);\n      this.rowFilter.on(\"changed\", this._handler_rowFilterChanged);\n\n      this.rowFilterForm.init();\n      this.rowFilterForm.removeListener(\n         \"changed\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"changed\", this._handler_rowFilterFormChanged);\n      this.rowFilterForm.removeListener(\n         \"save\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"save\", this._handler_rowFilterFormChanged);\n\n      $$(ids.filterPanel)?.hide();\n      $$(ids.buttonAddfilter)?.hide();\n      $$(ids.filterMenutoolbar)?.hide();\n      $$(ids.globalFilterFormContainer)?.hide();\n\n      switch (this.settings.filterOption) {\n         case 0:\n            break;\n         case 1:\n            switch (this.settings.userFilterPosition) {\n               case \"form\":\n                  $$(ids.buttonAddfilter)?.show();\n                  $$(ids.filterPanel)?.show();\n                  break;\n               case \"toolbar\":\n                  $$(ids.filterPanel)?.hide();\n                  break;\n            }\n            break;\n         case 2:\n            $$(ids.filterPanel)?.show();\n            var $filterMenutoolbar = $$(ids.filterMenutoolbar);\n            if ($filterMenutoolbar) {\n               $filterMenutoolbar.show();\n\n               // populate filter items\n               if (this.settings?.queryRules) {\n                  (this.settings.queryRules || []).forEach((qr) => {\n                     let Rule = new FilterRuleSettings();\n                     Rule.fromSettings(qr);\n                     var filterRuleButton = {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        label: Rule.label,\n                        icon: \"fa fa-filter\",\n                        type: \"icon\",\n                        // badge: 0,\n                        autowidth: true,\n                        click: () => {\n                           this.emit(\"filter.data\", null, Rule.filters);\n                           // this.selectFilter(qr.filter);\n                        },\n                     };\n                     $filterMenutoolbar.addView(filterRuleButton);\n                  });\n               }\n            }\n            break;\n         case 3:\n            $$(ids.globalFilterFormContainer)?.show();\n            $$(ids.filterPanel)?.show();\n            break;\n      }\n   }\n\n   filterRules() {\n      let rowFilterRules = null;\n\n      switch (this.settings.userFilterPosition) {\n         case \"form\":\n            rowFilterRules = this.rowFilterForm.getValue();\n            break;\n         case \"toolbar\":\n            rowFilterRules = this.rowFilter.getValue();\n            break;\n      }\n\n      return rowFilterRules;\n   }\n\n   /**\n    * @method getFilter()\n    * Return a fn() that returns {truthy} with a given row of\n    * data.\n    */\n   getFilter() {\n      // default filter\n      if (this.__currentFilter == null) {\n         // if empty search text in global single mode, then no display rows\n         if (\n            this.settings.filterOption == 3 &&\n            this.settings.globalFilterPosition == \"single\"\n         )\n            this.__currentFilter = (/* row */) => {\n               return false;\n            };\n         // always true, show every rows\n         else\n            this.__currentFilter = (/* row */) => {\n               return true;\n            };\n      }\n\n      return this.__currentFilter;\n   }\n\n   /**\n    * @method triggerCallback()\n    * We compile our current search options and emit them back to our\n    * parent container.\n    */\n   triggerCallback(/*fnFilter, filterRules*/) {\n      let searchRules = this.searchText(this.__externalSearchText);\n      let rowFilterRules = this.filterRules();\n\n      let badgeCount = 0;\n      if (rowFilterRules?.rules?.length) {\n         badgeCount = rowFilterRules?.rules?.length;\n         if (searchRules) {\n            badgeCount++;\n            rowFilterRules = {\n               glue: \"and\",\n               rules: [rowFilterRules, searchRules],\n            };\n         }\n      } else {\n         rowFilterRules = searchRules;\n      }\n\n      this.emit(\"filter.data\", null, rowFilterRules);\n\n      if (badgeCount == 0) badgeCount = false;\n      const $button = $$(this.ids.buttonAddfilter);\n      if ($button) {\n         $button.config.badge = badgeCount;\n         $button.refresh();\n      }\n   }\n\n   resetFilter() {\n      this.triggerCallback(() => true, []);\n   }\n\n   /**\n    * @method externalSearchText()\n    * Save any search criteria established from outside this filterHelper.\n    * NOTE: The ABViewGrid has a toolbar search entry that will provide\n    * this value.\n    * @param {string} search\n    *        The typed in search criteria.\n    */\n   externalSearchText(search = null) {\n      this.__externalSearchText = search;\n      this.triggerCallback(); // update each time\n   }\n\n   /**\n    * @method searchText()\n    * Retrieve the typed in search terms from the user, and convert them\n    * into a set of Rules that will modify our results.\n    * If an external search param is provided, use that instead.\n    * @param {string} externalText\n    * @return {json} The QB Rule condition for the search criteria\n    */\n   searchText(externalText) {\n      var search;\n      if (externalText) {\n         search = externalText;\n      } else {\n         search = ($$(this.ids.globalFilterForm)?.getValue() ?? \"\").trim();\n      }\n      if (!search) return null; // <-- includes \"\"\n\n      // find the individual \"terms\" that we should search for\n      let terms = search.trim().toLowerCase().split(\" \");\n\n      // build a set of conditions for each term\n      var allTerms = [];\n\n      var allFields = this.object?.fields() || [];\n\n      terms.forEach((t) => {\n         var fieldTerms = [];\n\n         // for each field, add a match condition for that field\n         // (if the field applies)\n         allFields.forEach((f) => {\n            if (f.fieldIsFilterable()) {\n               switch (f.key) {\n                  case \"number\":\n                  case \"string\":\n                  case \"LongText\":\n                  case \"email\":\n                     fieldTerms.push({\n                        key: f.id,\n                        rule: \"contains\",\n                        value: t,\n                     });\n                     break;\n\n                  case \"list\":\n                     var options = f.options();\n                     options.forEach((o) => {\n                        if (o.text.indexOf(t) > -1) {\n                           fieldTerms.push({\n                              key: f.id,\n                              rule: \"equals\",\n                              value: o.id,\n                           });\n                        }\n                     });\n                     break;\n               }\n            }\n         });\n\n         if (fieldTerms.length > 0) {\n            allTerms.push({\n               glue: \"or\",\n               rules: fieldTerms,\n            });\n         }\n      });\n\n      if (allTerms.length > 0) {\n         var searchRules = {\n            glue: \"and\",\n            rules: allTerms,\n         };\n         return searchRules;\n      } else {\n         return null;\n      }\n   }\n\n   showPopup($view) {\n      // this.filter_popup.show($view, null, { pos: \"top\" });\n      this.rowFilter.popUp($view, null, { pos: \"center\" });\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewPropertyLinkPageComponent extends ABViewComponent {\n   constructor(linkPageHelper, idBase) {\n      let base = idBase || `ABViewPropertyLinkPage_xxx`;\n      super(base, {});\n\n      this.linkPageHelper = linkPageHelper;\n      this.AB = linkPageHelper.AB;\n\n      this.view = null;\n      // {ABViewXXXX}\n      // the ABView object this link references.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The related Datacollection to this view that drives it's data.\n      // we usually have to set the cursor before the view displays the\n      // appropriate data.\n   }\n\n   ui() {\n      return {};\n   }\n\n   init(options) {\n      if (options.view) this.view = options.view;\n\n      if (options.datacollection) this.datacollection = options.datacollection;\n   }\n\n   changePage(pageId, rowId) {\n      if (this.datacollection) {\n         this.datacollection.once(\"changeCursor\", () => {\n            this.view?.changePage(pageId);\n         });\n         this.datacollection.setCursor(rowId);\n      }\n      else {\n         this.view?.changePage(pageId);\n      }\n   }\n}\n\nexport default class ABViewPropertyLinkPage extends ABViewProperty {\n   // constructor() {\n   //    super();\n   // }\n\n   /** == UI == */\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   component(v1App = false) {\n      let component = new ABViewPropertyLinkPageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (...params) => {\n               return newComponent.init(...params);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n            changePage: (...params) => {\n               return newComponent.changePage(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nmodule.exports = class ABViewQueryBuilderObjectFieldConditions {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(label) {\n      this.label = label;\n      this.ui = null;\n   }\n\n   /**\n    * cleanRules\n    * walk through all the QueryBuilder (QB) rules and make conversions\n    * of the data into their proper formats.\n    * @param {obj} rules  the {rules} obj that is returned from the QB object\n    * @param {array} fields  an array of field definitions from the QB object\n    * @param {bool} dateToString  convert Dates to String format?\n    */\n   cleanRules(rules, fields, dateToString) {\n      if (typeof dateToString == \"undefined\") dateToString = true;\n\n      // walk the given condition rules / values, walk them and make sure\n      // any given rules have properly formatted values.\n      function processCondition(rule) {\n         // make sure rule is provided\n         if (rule) {\n            if (rule.glue && rule.rules) {\n               rule.rules.forEach((r) => {\n                  processCondition(r);\n               });\n            } else {\n               // converting a single rule:\n\n               var field = fields.filter((f) => {\n                  return f.id == rule.key;\n               })[0];\n               if (field) {\n                  switch (field.type) {\n                     case \"number\":\n                     case \"formula\":\n                        // when getting data from the server, the numbers are\n                        // sent back as strings (\"100.25\").\n                        // make sure to convert strings to numbers:\n                        if (typeof rule.value == \"string\") {\n                           if (rule.value.indexOf(\".\") == -1) {\n                              rule.value = parseInt(rule.value);\n                           } else {\n                              rule.value = parseFloat(rule.value);\n                           }\n                        }\n                        break;\n                     case \"date\":\n                        // in some cases we want to convert the Date() object returned\n                        // by QueryBuilder into a string for saving on the Server.\n                        if (dateToString) {\n                           // if we have a Date() obj returned from QueryBuilder,\n                           // convert to a string format:\n                           if (rule.value instanceof Date) {\n                              rule.value = webix.i18n.dateFormatStr(rule.value);\n                           }\n                        } else {\n                           // in other cases we want to convert the string returned\n                           // by the server into a Date() for the QB\n                           if (typeof rule.value == \"string\") {\n                              rule.value = new Date(rule.value);\n                           }\n                        }\n\n                        break;\n                  }\n               }\n            }\n         }\n      }\n      processCondition(rules);\n   }\n\n   // component\n   // initialize the UI display for this popup editor.\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      var L = App.Label;\n\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: myUnique(\"qbObjectFieldConditions\"),\n         queryBuilder: myUnique(\"qBuilder\"),\n         queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n         queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n         showQBButton: myUnique(\"showQBButton\"),\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"layout\",\n         id: ids.queryBuilderLayout,\n         hidden: true,\n         type: \"line\",\n         rows: [\n            {\n               id: ids.showQBButton,\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     name: \"addqb\",\n                     value: L(\"Add Custom Conditions\"),\n                     autowidth: true,\n                     click: function () {\n                        $$(ids.queryBuilderContainer).show();\n                        $$(ids.showQBButton).hide();\n                        // _logic.buttonCancel();\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n            {\n               hidden: true,\n               id: ids.queryBuilderContainer,\n               cols: [\n                  {\n                     view: \"querybuilder\",\n                     id: ids.queryBuilder,\n                     fields: this.conditionFields(),\n                  },\n               ],\n            },\n         ],\n      };\n\n      // tack on a label if provided.\n      if (this.label) {\n         this.ui.rows[1].cols.unshift({\n            view: \"label\",\n            css: \"ab-text-bold\",\n            label: this.label,\n            width: this.AB.UISettings.config().labelWidthLarge,\n         });\n      }\n\n      // for setting up UI\n      this.init = (options) => {\n         options = options || {};\n\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         /**\n          * cleanRules\n          * walk through all the QueryBuilder (QB) rules and make conversions\n          * of the data into their proper formats.\n          * @param {obj} rules  the {rules} obj that is returned from the QB object\n          * @param {array} fields  an array of field definitions from the QB object\n          * @param {bool} dateToString  convert Dates to String format?\n          */\n         cleanRules: (rules, fields, dateToString) => {\n            this.cleanRules(rules, fields, dateToString);\n         },\n\n         getValue: () => {\n            var values = null;\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               values = QB.getValue();\n            }\n\n            // convert dates to simpler format:\n            // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n            // and webix doesn't seem to understand them when we send them back.\n            // so save simple date values: \"mm/dd/yyyy\"\n            if (values) {\n               _logic.cleanRules(values[0], values[1], true);\n            }\n\n            return values;\n         },\n\n         setValue: (values) => {\n            values = values || [];\n            if (!Array.isArray(values)) values = [values];\n            if (values.length == 0) {\n               values.push({});\n            } // push default rules\n            if (values.length < 2) {\n               values.push(this.conditionFields());\n            }\n\n            // convert dates from our server side \"string\" format into\n            // Date() objects.\n            _logic.cleanRules(values[0], values[1], false);\n\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               if (values[0] && values[0].rules && values[0].rules.length) {\n                  QB.setValue(values[0]);\n                  $$(ids.queryBuilderContainer).show();\n                  $$(ids.showQBButton).hide();\n               }\n            }\n         },\n      });\n\n      this.getValue = _logic.getValue;\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\n         \"string\",\n         \"LongText\",\n         \"number\",\n         \"date\",\n         \"email\",\n         \"formula\",\n         \"calculate\",\n      ];\n\n      var currFields = [];\n\n      if (this.currentObject) {\n         this.currentObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n\n               let type = f.key;\n               if (f.key == \"formula\" || f.key == \"calculate\") type = \"number\";\n               else if (f.key == \"LongText\") type = \"string\";\n\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: type,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // process\n   // Take the provided data and process each of our rules.\n   // @param {obj} options\n   // @return {promise}\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= this.listRules.length) {\n               resolve();\n            }\n         };\n\n         this.listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (this.listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   showQueryBuilderContainer() {\n      $$(this.ids.queryBuilderLayout).show();\n      $$(this.ids.queryBuilderContainer).show();\n      $$(this.ids.showQBButton).hide();\n   }\n\n   // // fromSettings\n   // // Create an initial set of default values based upon our settings object.\n   // // @param {obj} settings  The settings object we created in .toSettings()\n   // fromSettings (settings) {\n   // \t// settings: [\n   // \t//  { rule.settings },\n   // \t//  { rule.settings }\n   // \t// ]\n\n   // \t// clear any existing Rules:\n   // \tthis.listRules.forEach((rule)=>{\n   // \t\t$$(this.ids.rules).removeView(rule.ids.component);\n   // \t})\n   // \tthis.listRules = [];\n\n   // \tif (settings) {\n   // \t\tsettings.forEach((ruleSettings)=>{\n   // \t\t\tthis.addRule(ruleSettings);\n   // \t\t})\n   // \t}\n   // }\n\n   // // toSettings\n   // // create a settings object to be persisted with the application.\n   // // @return {array} of rule settings.\n   // toSettings () {\n   // \tvar settings = [];\n   // \tthis.listRules.forEach((r)=>{\n   // \t\tsettings.push(r.toSettings());\n   // \t})\n   // \treturn settings;\n   // }\n};\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nconst ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRule {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(listActions) {\n      this.listActions = listActions || []; // the list of Actions this Rule manages\n\n      this.actionDropList = []; // the Webix UI droplist\n      this.listActions.forEach((a) => {\n         this.actionDropList.push({ id: a.key, value: a.label });\n      });\n\n      this.selectedAction = null; // the currently selected Action.key\n      if (this.actionDropList.length > 0) {\n         this.selectedAction = this.actionDropList[0].id;\n      }\n\n      this.removable = true; // can I delete this rule?\n\n      this.currentObject = null; // What ABObject is this associated with\n      // NOTE: this is important for Actions.\n\n      this.objectQB = null; // The QueryBuilder (QB) object\n\n      this.currentForm = null;\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      // this is different because multiple instances of this View can be displayed\n      // at the same time.  So make each instance Unique:\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: myUnique(\"component\"),\n\n         selectAction: myUnique(\"chooseAction\"),\n\n         queryBuilder: myUnique(\"queryBuilder\"),\n\n         valueDisplay: myUnique(\"valueArea\"),\n      });\n\n      this.objectQB.label = L(\"When\");\n      this.objectQB.component(this.App, this.idBase);\n      this.ui = this._generateUI();\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         this.objectQB.init();\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.component(this.App, this.idBase);\n            var comp = Action.valueDisplay(ids.valueDisplay);\n\n            _logic.replaceValueDisplay(comp);\n\n            // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            comp.init();\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         replaceValueDisplay: (component) => {\n            // remove current content area:\n            var $ValueDisplay = $$(this.ids.valueDisplay);\n            if (!$ValueDisplay) return;\n\n            var children = $ValueDisplay.getChildViews();\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               $ValueDisplay.removeView(c);\n            });\n\n            $ValueDisplay.addView(component.ui);\n         },\n\n         selectAction: (newValue, oldVal) => {\n            if (newValue) {\n               $$(this.ids.component)\n                  .getChildViews()\n                  .forEach((views) => {\n                     views.show();\n                  });\n            }\n            // bonus:  save current state of previous Action\n            var prevAction = this.getAction(oldVal);\n            if (prevAction) {\n               prevAction.stashCondition(this.objectQB.getValue());\n            }\n\n            // now switch to the new Action\n            this.selectedAction = newValue;\n            var currAction = this.currentAction();\n            if (currAction) {\n               // reset Condition filters.\n               this.objectQB.setValue(currAction.condition());\n\n               // have Action display it's values form\n               currAction.component(this.App, this.idBase);\n               var component = currAction.valueDisplay(ids.valueDisplay);\n               _logic.replaceValueDisplay(component);\n               component.init();\n               // currAction.valueDisplay(ids.valueDisplay);\n            }\n         },\n      });\n   }\n\n   // not intended to be called externally\n   _generateUI() {\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rules\",\n         padding: 20,\n         // margin: 10,\n\n         // this should be a CSS setting: this.AB.Config.xxxx\n         // width: 680,\n         type: \"line\",\n         rows: [\n            {\n               view: \"template\",\n               css: \"ab-component-form-rules-delete\",\n               template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n               height: 30,\n               borderless: true,\n               hidddatasourceen: this.removable == false,\n               onClick: {\n                  \"ab-component-remove\": (e, id, trg) => {\n                     this._logic.callbacks.onDelete(this);\n                  },\n               },\n            },\n            // Action\n            {\n               id: this.ids.selectAction,\n               view: \"richselect\",\n               label: L(\"Action\"),\n               placeholder: L(\"Choose an action\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               options: this.actionDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     this._logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n\n            // Values\n            {\n               for: \"values\",\n               hidden: true,\n               cells: [\n                  {\n                     view: \"layout\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Values\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           id: this.ids.valueDisplay,\n                           view: \"layout\",\n                           rows: [\n                              {\n                                 label: L(\n                                    \" ABViewRule: This should be the Set Area\"\n                                 ),\n                                 css: \"ab-text-bold\",\n                                 height: 30,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n\n            // When\n            this.objectQB.ui,\n         ],\n      };\n   }\n\n   // return the QueryBuilder fields data for the currently selected Action.\n   conditionFields() {\n      var fields = [];\n\n      var selectedAction = this.currentAction();\n      if (selectedAction) {\n         fields = selectedAction.conditionFields();\n      }\n\n      return fields;\n   }\n\n   currentAction() {\n      return this.getAction(this.selectedAction);\n   }\n\n   getAction(key) {\n      return this.listActions.filter((a) => {\n         return a.key == key;\n      })[0];\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n      this.listActions.forEach((a) => {\n         a.objectLoad(object);\n      });\n\n      var label = L(\"When\");\n\n      this.objectQB = new ObjectQueryBuilder(label);\n      this.objectQB.objectLoad(object);\n\n      // regenerate our UI when a new object is loaded.\n      if (this.ids) {\n         this.ui = this._generateUI();\n      }\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.listActions.forEach((a) => {\n         a.formLoad(form);\n      });\n   }\n\n   processPre(options = {}) {\n      let isValid = this.isValid(options.data);\n      if (!isValid) return;\n\n      let currentAction = this.currentAction();\n      if (!currentAction) return;\n\n      currentAction.processUpdateObject({}, options.data);\n   }\n\n   // process\n   // Take the provided data and process this rule\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      var currentAction = this.currentAction();\n      if (!currentAction) return Promise.resolve();\n\n      let isValid = this.isValid(options.data);\n      if (isValid) {\n         return currentAction.process(options);\n      } else {\n         // else just resolve and continue on\n         return new Promise((resolve, reject) => {\n            resolve();\n         });\n      }\n   }\n\n   fromSettings(settings) {\n      settings = settings || {};\n\n      if (settings.selectedAction) {\n         // store our Query Rules\n         this.selectedAction = settings.selectedAction;\n         var selectedAction = this.currentAction();\n         if (!selectedAction) return;\n         selectedAction.stashCondition(settings.queryRules || {});\n\n         // if our UI components are present, populate them properly:\n         if (this.ids) {\n            // Trigger our UI to refresh with this selected Action:\n            // NOTE: this also populates the QueryBuilder\n            $$(this.ids.selectAction).setValue(this.selectedAction);\n            // this._logic.selectAction(this.selectedAction);\n         }\n\n         // now continue with setting up our settings:\n         selectedAction.fromSettings(settings.actionSettings);\n      }\n   }\n\n   toSettings() {\n      var settings = {};\n\n      if (this.selectedAction) {\n         settings.selectedAction = this.selectedAction;\n         settings.queryRules = this.objectQB.getValue();\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            settings.actionSettings = currentAction.toSettings();\n         }\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      var currAction = this.currentAction();\n      if (currAction && this.objectQB) {\n         this.objectQB.setValue(currAction.condition());\n         currAction.qbFixAfterShow();\n      }\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   async isReady() {\n      let currentAction = this.currentAction();\n      if (currentAction) {\n         return currentAction.isReady();\n      }\n      return Promise.resolve();\n   }\n\n   isValid(data = {}) {\n      const fields = this.currentObject.fields(),\n         currentAction = this.currentAction(),\n         QBCondition = currentAction.condition(),\n         query = QBCondition[0] ?? {};\n\n      const convertToNumber = (text = \"\") => {\n         // if we have multiple rules we need to check if value is already a number before converting.\n         if (typeof text == \"number\") return text;\n\n         return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n      };\n\n      // Fix string data in number type\n      // NOTE: \"1000\" > \"99\" = false    >_<!\n      fields\n         .filter(\n            (f) =>\n               f.key == \"number\" || f.key == \"calculate\" || f.key == \"formula\"\n         )\n         .forEach((f) => {\n            try {\n               // filter conditions\n               if (Array.isArray(query?.rules)) {\n                  query.rules.forEach((r) => {\n                     // NOTE: compatible with old settings\n                     if (r.key == f.id || r.key == f.columnName)\n                        r.value = convertToNumber(r.value);\n                  });\n               }\n\n               // row data\n               if (\n                  data[f.columnName] &&\n                  typeof data[f.columnName] === \"string\"\n               ) {\n                  data[f.columnName] = convertToNumber(data[f.columnName]);\n               }\n            } catch (e) {\n               // continue regardless of error\n            }\n         });\n\n      const hiddenFilter = (this.AB ?? AB).filterComplexNew(\n         `${this.idBase}_filter_complex`\n      );\n      hiddenFilter.fieldsLoad(fields, this.currentObject);\n      hiddenFilter.setValue(query);\n      hiddenFilter.init();\n\n      return hiddenFilter.isValid(data);\n\n      // var id = \"hiddenQB_\" + webix.uid();\n\n      // // if our data passes the QueryRules then tell Action to process\n      // var ui = {\n      //    id: id,\n      //    hidden: true,\n      //    view: \"querybuilder\",\n      // };\n      // var hiddenQB = webix.ui(ui);\n\n      // let currentAction = this.currentAction();\n      // var QBCondition = currentAction.condition();\n\n      // if (this.objectQB) {\n      //    this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n      // }\n\n      // let query = QBCondition[0] || {},\n      //    fields = QBCondition[1] || [];\n\n      // // hiddenQB.setValue(QBCondition);\n      // hiddenQB.setValue({\n      //    query: query,\n      //    fields: fields,\n      // });\n\n      // var QBHelper = hiddenQB.getFilterHelper();\n      // var isValid = QBHelper(data);\n\n      // hiddenQB.destructor(); // remove the QB\n\n      // return isValid;\n   }\n\n   get isPreProcess() {\n      let currentAction = this.currentAction();\n      return currentAction.isPreProcess || false;\n   }\n};\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n    */\n   constructor(App, idBase, currentForm) {\n      this.key = \"ABViewRuleAction\";\n\n      this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n      this.currentForm = null;\n\n      this.queryRules = {}; // default set of rules for the Query Builder condition\n\n      this.valueRules = {}; // the initial Value Rules for this Action\n      // The Action Subclass defines what this {} is.\n\n      this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      this.label = L(\"generic abviewruleaction\");\n\n      function myUnique(key) {\n         return App.unique(`${idBase}_${key}`);\n      }\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: `${myUnique(\"component\")}_${webix.uid()}`,\n      });\n\n      this._ui = null; // internally track our UI Component value Rules\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n      });\n   }\n\n   // condition\n   // Return the querybuilder setup structure for this Action.\n   // @return {array}  of querybuilder setup\n   //\t\t\t\t\t[\n   //\t\t\t\t\t\t{rules},\n   //\t\t\t\t\t\t[fields]\n   //\t\t\t\t\t]\n   condition() {\n      return [this.conditionRules(), this.conditionFields()];\n   }\n\n   // stashCondition\n   // capture the current set of rules provided by the QB object.\n   // This doesn't guarantee these will be saved to the App settings.\n   // Instead it is a temporary stash. Only the selected Action's\n   // values will be persisited to the App settings.\n   // @param {obj/Array} rules  The QueryBuilder rule value returned from\n   //\t\t\t\t\t\t\t .getValue()\n   //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n   //\n   stashCondition(rules) {\n      // check to see if they sent us the raw QueryBuilder values and only\n      // pull off the rules if they did\n      if (Array.isArray(rules)) {\n         rules = rules[0];\n      }\n\n      // sanity check on glue value: don't update if null or not given.\n      if (rules) {\n         // sometimes .glue is undefined  so default to 'and'\n         if (rules.glue != \"or\") rules.glue = \"and\";\n\n         this.queryRules = rules;\n      }\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      var currFields = [];\n\n      if (this.queryObject) {\n         this.queryObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: f.key,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // conditionRules()\n   // Return the current rule definition object for this Action.\n   // @return {obj}\n   conditionRules() {\n      return this.queryRules;\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      // this.currentObject = object;\t\t\t\t// DO WE NEED THIS?\n      this.queryObjectLoad(object);\n   }\n\n   // queryObjectLoad\n   // save the current object this Action is using to build query rules.\n   queryObjectLoad(object) {\n      this.queryObject = object;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      console.error(\n         \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      );\n      return new Promise((resolve, reject) => {\n         reject(\n            new Error(\n               \"ABViewRuleAction.process() should be overridden by its child class.\"\n            )\n         );\n      });\n   }\n\n   // valueDisplay\n   // create the form to collect the specific data this Action needs to function.\n   // @param {string} webixID  the $$(webixID) of the area to insert our display.\n   valueDisplay(webixID) {\n      return this.valueDisplayComponent(webixID);\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      return (this._ui = {\n         ui: {\n            template: \"ABViewRuleAction.valueDisplayComponent\",\n         },\n         init: (data) => {\n            console.error(\n               \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n            );\n            console.warn(\" --> passed in data:\", data);\n         },\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n      settings = settings ?? {};\n      this.valueRules = settings.valueRules ?? settings;\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      var settings = {};\n\n      // require the child to insert the valueRules\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   isReady() {\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      // our child classes can implement this if needed.\n      // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n   }\n};\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleList {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(childSettings) {\n      this.listRules = [];\n      this.currentObject = null;\n\n      // ensure required values:\n      childSettings = childSettings || {};\n      childSettings.labels = childSettings.labels || {};\n      childSettings.labels.header =\n         childSettings.labels.header || \"ab.components.form.ruleList\";\n      childSettings.labels.headerDefault =\n         childSettings.labels.headerDefault || \"*Rule List\";\n      this.childSettings = childSettings;\n   }\n\n   /**\n    * @method component\n    * initialize the UI display for this popup editor.\n    * @param {obj} App  The common UI App object shared among our UI components\n    * @param {string} idBase A unique Key used the the base of our unique ids\n    */\n   component(App, idBase) {\n      this.App = this.App || App;\n      this.idBase = idBase;\n\n      App = App || this.App;\n\n      this.currentForm = null;\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: `${idBase}_component`,\n         rules: `${idBase}_rules`,\n         rulesScrollview: `${idBase}_rulesScrollview`,\n\n         action: `${idBase}_action`,\n         when: `${idBase}_when`,\n\n         values: `${idBase}_values`,\n         set: `${idBase}_set`,\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"window\",\n         id: ids.component,\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: this.childSettings.labels.headerDefault,\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"iconButton\",\n                  label: L(\"Add new rule\"),\n                  width: 150,\n                  click: () => {\n                     this.addRule();\n                     console.log($$(ids.rules).$height);\n                     $$(ids.rulesScrollview).scrollTo(0, $$(ids.rules).$height);\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  view: \"scrollview\",\n                  id: ids.rulesScrollview,\n                  scroll: \"xy\",\n                  body: {\n                     view: \"layout\",\n                     id: ids.rules,\n                     margin: 20,\n                     padding: 10,\n                     rows: [],\n                  },\n               },\n               // {\n               // \tcss: { 'background-color': '#fff' },\n               // \tcols: [\n               // \t\t{\n               // \t\t\tview: \"button\",\n               // \t\t\ticon: \"plus\",\n               // \t\t\ttype: \"iconButton\",\n               // \t\t\tlabel: labels.component.addNewRule,\n               // \t\t\twidth: 150,\n               // \t\t\tclick: () => {\n               // \t\t\t\tthis.addRule();\n               // \t\t\t}\n               // \t\t},\n               // \t\t{ fillspace: true }\n               // \t]\n               // },\n               {\n                  css: { \"background-color\": \"#fff\" },\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonCancel();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"save\",\n                        label: L(\"Save\"),\n                        type: \"form\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonSave();\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // var _currentObject = null;\n      var _rules = [];\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         buttonCancel: function () {\n            $$(ids.component).hide();\n         },\n\n         buttonSave: () => {\n            var results = this.toSettings();\n\n            _logic.callbacks.onSave(results);\n            _logic.hide();\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         show: function () {\n            $$(ids.component).show();\n         },\n      });\n\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   /**\n    * @method addRule\n    * Instantiate a new Rule in our list.\n    * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n    */\n   addRule(settings) {\n      var Rule = this.getRule();\n      if (!Rule) return;\n\n      this.listRules.push(Rule);\n\n      // if we have tried to create our component:\n      if (this.ids) {\n         // if our actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            Rule.component(this.App, this.idBase); // prepare the UI component\n            var viewId = RulesUI.addView(Rule.ui);\n\n            Rule.init({\n               onDelete: (deletedRule) => {\n                  $$(this.ids.rules).removeView(Rule.ids.component);\n\n                  var index = this.listRules.indexOf(deletedRule);\n                  if (index !== -1) {\n                     this.listRules.splice(index, 1);\n                  }\n               },\n            });\n         }\n      }\n\n      if (settings) {\n         Rule.fromSettings(settings);\n      }\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      // settings: [\n      //  { rule.settings },\n      //  { rule.settings }\n      // ]\n\n      // clear any existing Rules:\n      this.listRules.forEach((rule) => {\n         if (\n            this.ids &&\n            this.ids.rules &&\n            rule &&\n            rule.ids &&\n            rule.ids.component\n         ) {\n            $$(this.ids.rules).removeView(rule.ids.component);\n         }\n      });\n      this.listRules = [];\n\n      if (settings) {\n         settings.forEach((ruleSettings) => {\n            this.addRule(ruleSettings);\n         });\n      }\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.currentObject = object;\n\n      // tell each of our rules about our object\n      this.listRules.forEach((r) => {\n         r.objectLoad(object);\n      });\n   }\n\n   processPre(options) {\n      (this.listRules || [])\n         .filter((rule) => rule.isPreProcess == true)\n         .forEach((rule) => {\n            rule.processPre(options, options.data);\n         });\n   }\n\n   /**\n    * @method process\n    * Take the provided data and process each of our rules.\n    * @param {obj} options\n    * @return {promise}\n    */\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let listRules = (this.listRules || []).filter(\n            (rule) => !rule.isPreProcess\n         );\n\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= listRules.length) {\n               resolve();\n            }\n         };\n\n         listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   /**\n    * @method toSettings\n    * create a settings object to be persisted with the application.\n    * @return {array} of rule settings.\n    */\n   toSettings() {\n      var settings = [];\n      this.listRules.forEach((r) => {\n         settings.push(r.toSettings());\n      });\n      return settings;\n   }\n\n   getRule() {\n      console.error(\n         \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n      );\n      return null;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.App = this.App || form.App;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   rulesReady() {\n      // This base class should be overwritten by any subclass that needs\n      // to prepare:\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      this.listRules.forEach((r) => {\n         r.qbFixAfterShow();\n      });\n   }\n};\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Record\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\nconst RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nconst RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\nconst RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nmodule.exports = class ABViewRuleListFormRecordRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.components.form.recordRules\",\n            headerDefault: \"*Record Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleUpdateExisting(\n            this.App,\n            `${this.idBase}_ruleActionUpdate`,\n            this.currentForm\n         ),\n         new RoleInsertConnected(\n            this.App,\n            `${this.idBase}_ruleActionInsert`,\n            this.currentForm\n         ),\n         new RoleUpdateConnected(\n            this.App,\n            `${this.idBase}_ruleActionUpdateConnected`,\n            this.currentForm\n         ),\n         new RoleRemoveConnected(\n            this.App,\n            `${this.idBase}_ruleActionRemoveConnected`,\n            this.currentForm\n         ),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      if (this.currentObject) {\n         Rule.objectLoad(this.currentObject);\n      }\n      return Rule;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our list of Rules is\n    * ready to work.\n    * @return {Promise}\n    */\n   async rulesReady() {\n      var allReady = (this.listRules || []).map((r) => r.isReady());\n      await Promise.all(allReady);\n   }\n};\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleConfirmMessage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\");\nconst RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\nconst RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\nconst RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\nconst RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nconst RuleEmail = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\");\n\nmodule.exports = class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.component.form.submitRule\",\n            headerDefault: \"*Submit Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleConfirmMessage(\n            this.App,\n            `${this.idBase}_ruleActionConfirmMessage`\n         ),\n         new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n         new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n         new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n         new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         new RuleEmail(this.App, `${this.idBase}_ruleActionEmail`),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      Rule.objectLoad(this.currentObject);\n      Rule.formLoad(this.currentForm);\n      return Rule;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleInsertConnected\n//\n// An action that allows you to insert a connected object.\n//\n// NOTE: this is very similar to the Update Connected Rule, so we subclass that one and\n// modify it to only Insert data.\n//\n//\nconst UpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleInsertConnected extends (\n   UpdateConnected\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleInsertConnected\";\n      this.label = L(\"Insert Connected Object\");\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var Component = super.valueDisplayChooser(idBase);\n\n      // in our case, there are no additional QB conditions:\n      // so overwrite the .showQBIfNeeded() routine to not show anything:\n      Component._logic.showQBIfNeeded = function () {};\n\n      return Component;\n   }\n\n   /**\n    * queryBuilderDisplay\n    * override our parent .queryBuilderDisplay to not create a new .objectQB\n    * @return {null}\n    */\n   queryBuilderDisplay() {\n      return null;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      // var condition = null; // our lookup condition\n\n      // we are going to create a new instance of the connected object\n      // and make sure our .id is in the connected object's connectionField\n      // the server side will take care of making the proper relationship.\n\n      // first, create a new set of values:\n      var newObjectValues = {};\n\n      // update them according to our rules\n      this.processUpdateObject({}, newObjectValues);\n\n      if (newObjectValues.newRecords) {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues.newRecords.forEach((r) => {\n            r[connectedObjectField.columnName] = options.data.id;\n            // perform the update/insert\n            return model.create(r);\n         });\n      } else {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues[connectedObjectField.columnName] = options.data.id;\n\n         // perform the update/insert\n         return model.create(newObjectValues);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //\tvalueRules:{}\t\t// from ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      // we don't use .qpCondition\n      delete settings.qbCondition;\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleRemoveConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionFormRecordRuleUpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleRemoveConnected extends (\n   ABViewRuleActionFormRecordRuleUpdateConnected\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleRemoveConnected\";\n      this.label = L(\"Remove Connected Record\");\n\n      this.isUpdateValueDisabled = true; // disable update data of each fields\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      let selectedField = this.selectedField();\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         // get the model from the provided Form Obj:\n         let dc = options.form.datacollection;\n         if (!dc) return resolve();\n\n         let model = dc.model;\n         if (!model) return resolve();\n\n         let updatedVals = {};\n         updatedVals[selectedField.columnName] = \"\";\n\n         model\n            .update(options.data.id, updatedVals)\n            .then(resolve)\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n                  data: options.data,\n               });\n               reject(err);\n            });\n      });\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdate\n//\n// An action that allows you to update fields on an object that was currently\n// Added/Updated.\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdate extends (\n   ABViewRuleActionObjectUpdater\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n   }\n\n   get isPreProcess() {\n      return true;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ObjectQueryBuilder = require(\"../ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdateConnected extends (\n   ABViewRuleActionObjectUpdater\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n      this.label = L(\"Update Connected Record\");\n\n      this.baseObject = null; // the object the current form is working with.\n      // Use this to find our connected fields.\n\n      this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n      // used for updating.  This should be one of the connection Fields.\n\n      this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n      this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n      this.qbCondition = null; // the QB condition entered for selecting which remote object.\n   }\n\n   // field\n\n   /**\n    * objectLoad\n    * save the current object this Action is associated with.\n    * in the case of the UpdateConnected Action, assigning us\n    * this object only impacts the queryObject.\n    *\n    * The Updater form will use another object we select in\n    * the form dropdown.\n    *\n    * @param {object} object\n    *\n    */\n   objectLoad(object) {\n      this.queryObjectLoad(object);\n      this.baseObject = object;\n\n      // now build our fieldDropList for the select\n      var connectionFields = this.connectedFieldList();\n      connectionFields.forEach((cf) => {\n         this.fieldDropList.push({\n            id: cf.id,\n            value: cf.label,\n         });\n      });\n   }\n\n   /**\n    * connectedFieldList\n    * return the fields in our .baseObject that are connections to other objects.\n    * @return {array} of {ABField}\n    */\n   connectedFieldList() {\n      var connectKey = ABFieldConnect.defaults().key;\n      if (this.baseObject && this.baseObject.fields) {\n         return this.baseObject.fields((f) => {\n            return f.key == connectKey;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * connectedObject\n    * return the ABObject associated with the selected connection field.\n    * @return {ABObject}\n    */\n   connectedObject() {\n      if (this.selectedFieldID) {\n         var selectedField = this.selectedField();\n         if (selectedField) {\n            return selectedField.datasourceLink;\n         }\n      }\n\n      return null;\n   }\n\n   /**\n    * selectedField\n    * return the selected {ABField} object.\n    * @return {ABField}\n    */\n   selectedField() {\n      return this.connectedFieldList().filter((f) => {\n         return f.id == this.selectedFieldID;\n      })[0];\n   }\n\n   /**\n    * valueDisplayComponent\n    * Return an ABView to display our values form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayComponent(idBase) {\n      if (this._uiChooser == null) {\n         this._uiChooser = this.valueDisplayChooser(idBase);\n      }\n\n      return this._uiChooser;\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         component: myUnique(\"updateConnectedValues\"),\n         updateForm: myUnique(\"updateChooser\"),\n         selectConnectedField: myUnique(\"updateSelect\"),\n         updateFieldsForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rule\",\n         rows: [\n            {\n               id: ids.selectConnectedField,\n               view: \"richselect\",\n               label: L(\"Select which connected object to update.\"),\n               labelWidth: 300,\n               value: this.selectedField,\n               options: this.fieldDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     _logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n         ],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n\n         // make sure our currently selected field is selected.\n         if (this.selectedFieldID) {\n            var select = $$(ids.selectConnectedField);\n            if (select) {\n               select.setValue(this.selectedFieldID);\n            }\n         }\n      };\n\n      var _logic = (this._logic = {\n         addDisplay: (view) => {\n            $$(ids.component).addView(view);\n         },\n\n         // removePreviousDisplays\n         // remove the previous components that reflected the conditions and\n         // update values of the previously selected field.\n         removePreviousDisplays: () => {\n            var allViews = $$(ids.component).getChildViews();\n            var cloneAllViews = [];\n            allViews.forEach((v) => {\n               cloneAllViews.push(v);\n            });\n            cloneAllViews.forEach((v) => {\n               // don't remove the field picker\n               if (v.config.id != ids.selectConnectedField) {\n                  $$(ids.component).removeView(v);\n               }\n            });\n         },\n\n         selectAction: (newVal, oldVal) => {\n            _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n            this.selectedFieldID = newVal;\n            var connectedObject = this.connectedObject();\n\n            if (connectedObject) {\n               // it is the remote object that we are allowed to Update fields on.\n               this.updateObjectLoad(connectedObject);\n               ///// NOTE: important to call super.valueDisplayComponent()\n               this.updateComponent = super.valueDisplayComponent(\n                  ids.updateFieldsForm\n               ); // parent obj\n\n               _logic.showQBIfNeeded();\n\n               // create a new blank update form\n               _logic.addDisplay(this.updateComponent.ui);\n               this.updateComponent.init();\n\n               if (this.isUpdateValueDisabled) {\n                  let $updateForm = $$(this.updateComponent.ui.id);\n                  if ($updateForm) {\n                     $updateForm.disable();\n                     $updateForm.hide();\n                  }\n               }\n            } else {\n               this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n                  fieldID: this.selectedFieldID,\n               });\n            }\n         },\n\n         showQBIfNeeded: () => {\n            //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n            //// the user the ability to set a condition on the update even if the field\n            //// is only a one to one.\n            //// If we want to remove the filter in case of a \"one\" linkType, then put\n            //// these conditions back in:\n\n            // var field = this.selectedField();\n\n            // // we don't need the QB if the destination object link type if 'one'.\n            // // there will only be one to get back, so no conditions needed.\n            // if (field.settings.linkType != 'one') {\n\n            var qbComponent = this.queryBuilderDisplay();\n\n            qbComponent.component(this.App, this.idBase);\n            _logic.addDisplay(qbComponent.ui);\n            qbComponent.init({});\n\n            // }\n         },\n\n         fromSettings: (settings) => {\n            // // first time through, be sure to set the connectedObject first\n            // this.selectedFieldID = settings.selectedFieldID;\n            // var connectedObject = this.connectedObject();\n\n            // this triggers the update of the display, creation of QB,\n            $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n            if (this.objectQB) {\n               this.objectQB.setValue(this.qbCondition);\n            }\n\n            if (this.updateComponent) {\n               this.updateComponent.fromSettings(settings);\n            }\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(rowSettings);\n               }\n            });\n\n            return settings;\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   /**\n    * queryBuilderDisplay\n    * returns our Query Builder object used in our display.\n    * It is called by the .showQBIfNeeded() method.\n    * @return {ABViewQueryBuilderObjectFieldConditions}\n    */\n   queryBuilderDisplay() {\n      if (!this.objectQB) {\n         this.objectQB = new ObjectQueryBuilder(\n            L(\"How to choose which object:\")\n         );\n\n         var connObj = this.connectedObject();\n         if (connObj) this.objectQB.objectLoad(connObj);\n      }\n      return this.objectQB;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      this._formData = options.data;\n\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      var condition = null; // our lookup condition\n\n      // modifyCondition\n      // async fn() to fill out what the condition should be for limiting the remote\n      // objects to values in use by the current object.\n      // @param {fn} cb  the callback to use when we are finished:\n      //\t\t\t\t\tcb(err, )\n      var modifyCondition = (cb) => {\n         // So, let's get a copy of our current data, with all it's connected items\n         // attached.\n         var thisModel = this.baseObject.model();\n         thisModel\n            .findConnected(connectionField.columnName, options.data)\n            .then((items) => {\n               // if we didn't get any results, then simply return\n               // NOTE: this will leave condition == null and cancel this update.\n               if (!items || items.length == 0) {\n                  cb();\n                  return;\n               }\n\n               // then use these to limit the connected data of our Action:\n\n               // get all the ids\n               var ids = items.map((i) => {\n                  return i.id;\n               });\n\n               // resulting condition: { id in [listIDs]} AND { QB Condition }\n               condition = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: `${connObj.tableName}.${connObj.PK()}`,\n                        rule: \"in\",\n                        value: ids,\n                     },\n                  ],\n               };\n\n               // check to make sure qbCondition actually has a condition before adding it\n               // to our condition:\n               if (Object.keys(this.qbCondition).length > 0) {\n                  condition.rules.push(this.qbCondition);\n               }\n\n               cb();\n            })\n            .catch(cb);\n      };\n\n      // .process() returns a Promise\n      return new Promise((resolve, reject) => {\n         // upateIt()\n         // updates a given item with our changes.\n         // @param {obj} item  the item to update\n         // @param {fn}  cb    a callback function when update is complete.\n         var updateIt = (item, cb) => {\n            let isUpdated = this.processUpdateObject({}, item);\n            if (!isUpdated) {\n               cb();\n            } else {\n               model\n                  .update(item.id, item)\n                  .then(() => {\n                     cb();\n                  })\n                  .catch((err) => {\n                     this.AB.notify.developer(err, {\n                        message:\n                           \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n                        data: options.data,\n                     });\n                     cb(err);\n                  });\n            }\n         };\n\n         // now figure out which elements belong to this object\n         // done in modifyCondition()\n         modifyCondition((err) => {\n            if (err) {\n               AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.modifyCondition: error:\",\n                  data: options.data,\n               });\n               reject(err);\n               return;\n            }\n\n            if (condition === null) {\n               // this is the case where we didn't have the proper data to complete our\n               // update.  So let's just fail gracefully, and continue on.\n\n               // QUESTION: is this the right way to handle it?\n               resolve();\n            } else {\n               // get all the entries that match our condition:\n               model\n                  .findAll({ where: condition })\n                  .then((list) => {\n                     var done = 0;\n\n                     // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n                     if (list && list.data) {\n                        list = list.data;\n                     }\n\n                     // for each entry, update it with our values:\n                     list.forEach((item) => {\n                        updateIt(item, (err) => {\n                           if (err) {\n                              return reject(err);\n                           }\n                           done++;\n                           if (done >= list.length) {\n                              // now they are all updated, so continue.\n                              resolve();\n                           }\n                        });\n                     });\n\n                     // if there were no entries to update -> continue\n                     if (list.length == 0) {\n                        resolve();\n                     }\n                  })\n                  .catch(reject);\n            }\n         }); // end modifyCondition()\n      }); // end Promise()\n   }\n\n   /**\n    * fromSettings\n    * initialize this Action = require(a given set of setting values.\n    * @param {obj} settings  the settings {} returned = require(toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      this.selectedFieldID = settings.selectedFieldID || null;\n      this.qbCondition = settings.qbCondition || {};\n\n      super.fromSettings(settings);\n\n      // if we have a display component, then populate it:\n      if (this._uiChooser) {\n         this._logic.fromSettings(settings);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //  qbCondition: [],\n      //\tvalueRules:{}\t\t// = require(ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.selectedFieldID = this.selectedFieldID;\n\n      var qbCond = null;\n      if (this.objectQB) {\n         qbCond = this.objectQB.getValue();\n         if (Array.isArray(qbCond)) {\n            qbCond = qbCond[0];\n         }\n\n         // FIX: make sure qbCond root element has a 'glue'\n         if (qbCond) {\n            qbCond.glue = qbCond.glue || \"and\";\n         }\n      }\n      settings.qbCondition = qbCond;\n\n      // if we have a display component, then request our details = require(it:\n      if (this._uiChooser) {\n         settings.valueRules = this._logic.toSettings();\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      if (this.objectQB) {\n         this.objectQB.setValue(this.qbCondition);\n      }\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleClosePopup\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleClosePopup extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleClosePopup\";\n      this.label = L(\"Close the current popup\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"layout\",\n            rows: [],\n         },\n\n         init: () => {},\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let form = options.form;\n         if (!form) return;\n\n         let popup = form.pageParent((p) => p.settings.type == \"popup\");\n         if (!popup) return;\n\n         // get the dom id of page. it is dom id that is generated in ABLiveTool.js\n         // let pageDomId = [\"ab_live_page\", popup.application.id, popup.id].join(\n         //    \"_\"\n         // );\n\n         // close current popup\n         let $popup = $$(popup.id);\n         if ($popup) $popup.hide();\n\n         // this clears the UI's record of the current form.\n         options.form.changePage(null);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleConfirmMessage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n      this.label = L(\"Show a confirmation message\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.message,\n            view: \"textarea\",\n            // label: this.labels.component.message,\n            // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            height: 130,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.message).setValue(valueRules.message || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               message: $$(ids.message).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var confirmMessage = this.valueRules.message || \"\";\n\n         webix.message({\n            text: confirmMessage,\n            type: \"info\",\n         });\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleEmail extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n      this.label = L(\"Send a custom email\");\n\n      this.queryObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.queryObject) {\n   //       this.queryObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         form: `${idBase}_form`,\n         popup: `${idBase}_popup`,\n         list: `${idBase}_fieldList`,\n         toEmailsContainer: `${idBase}_toEmailsContainer`,\n         toEmails: `${idBase}_toEmails`,\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (newVal, oldVal) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    \"Email is invalid\"\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    _logic.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        view: \"textarea\",\n                        id: ids.message,\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     // \tview: 'label',\n                     // \tlabel: 'Message',\n                     // \tcss: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     // \tview: 'forminput',\n                     // \tid: ids.message,\n                     // \tname: 'message',\n                     // \tlabel: 'Message',\n                     // \tcss: \"ab-rich-text\",\n                     // \twidth: 320,\n                     // \theight: 400,\n                     // \tbody: {\n                     // \t\tview: 'tinymce-editor'\n                     // \t}\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: function (obj, common) {\n                           return _logic.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id, e, node) {\n                              var component = this.getItem(id);\n\n                              _logic.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n\n         init: () => {\n            if (this.queryObject) {\n               $$(ids.list).parse(\n                  this.queryObject.fields((f) => f.fieldUseAsLabel())\n               );\n               $$(ids.list).refresh();\n            }\n\n            _logic.refreshUI();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.form).setValues(valueRules);\n\n            // Populate recipients\n            var recipients = valueRules.toEmails || [];\n            recipients.forEach((r) => {\n               _logic.toEmailAdd({\n                  type: r.type, // 'to', 'cc' or 'bcc'\n                  emailType: r.emailType, // 'email' or 'field'\n                  value: r.value,\n               });\n            });\n\n            _logic.refreshUI();\n         },\n\n         toSettings: () => {\n            var formVals = $$(ids.form).getValues() || {};\n\n            // Get recipients\n            var recipients = [];\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((e) => {\n                  // var type = e.queryView({ name: 'type' }).getValue();\n                  var type = \"to\"; // TODO\n                  var emailType = e.queryView({ name: \"emailType\" }).getValue();\n                  var value = e.queryView({ name: emailType }).getValue();\n\n                  recipients.push({\n                     type: type,\n                     emailType: emailType,\n                     value: value,\n                  });\n               });\n\n            // return the confirm message\n            return {\n               fromName: formVals[\"fromName\"],\n               fromEmail: formVals[\"fromEmail\"],\n               toEmails: recipients,\n               subject: formVals[\"subject\"],\n               message: formVals[\"message\"],\n            };\n         },\n\n         /**\n          * @method toEmailTemplate\n          *\n          * @param settings - {\n          * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n          * \t\t\temailType: string, // 'email' or 'field'\n          * \t\t\tvalue: string\n          * }\n          */\n         toEmailTemplate: (settings) => {\n            settings = settings || {};\n\n            return {\n               width: 320,\n               cols: [\n                  // {\n                  // \tview: 'richselect',\n                  // \tname: 'type',\n                  // \tvalue: settings.type || 'to',\n                  // \twidth: 80,\n                  // \toptions: [\n                  // \t\t{ id: 'to', value: \"To:\" },\n                  // \t\t// EmailNotification does not support cc, bcc and reply.\n                  // \t\t// { id: 'cc', value: \"Cc:\" },\n                  // \t\t// { id: 'bcc', value: \"Bcc:\" },\n                  // \t\t// { id: 'reply', value: \"Reply-To:\" }\n                  // \t]\n                  // },\n                  {\n                     view: \"richselect\",\n                     name: \"emailType\",\n                     value: settings.emailType || \"email\",\n                     width: 150,\n                     options: [\n                        {\n                           id: \"email\",\n                           value: L(\"A custom email address\"),\n                        },\n                        { id: \"field\", value: L(\"An email field\") },\n                        { id: \"query\", value: L(\"From query\") },\n                     ],\n                     on: {\n                        onChange: function (newVal, oldVal) {\n                           _logic.emailTypeChange(newVal, this);\n                        },\n                     },\n                  },\n                  {\n                     width: 150,\n                     name: \"emailValue\",\n                     visibleBatch: settings.emailType || \"email\",\n                     cols: [\n                        {\n                           view: \"text\",\n                           name: \"email\",\n                           batch: \"email\",\n                           value:\n                              settings.emailType == \"email\"\n                                 ? settings.value\n                                 : \"\",\n                           validate: webix.rules.isEmail,\n                           width: 150,\n                           on: {\n                              onChange: function (newVal, oldVal) {\n                                 _logic.toEmailValidate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"field\",\n                           batch: \"field\",\n                           value:\n                              settings.emailType == \"field\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.emailFieldOptions(),\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"query\",\n                           batch: \"query\",\n                           value:\n                              settings.emailType == \"query\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.queryOptions(),\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash-o\",\n                     width: 32,\n                     click: function () {\n                        var $toView = this.getParentView();\n\n                        _logic.toEmailRemove($toView);\n                     },\n                  },\n               ],\n            };\n         },\n\n         toEmailAdd: (settings) => {\n            var count = $$(ids.toEmails).getChildViews().length;\n\n            $$(ids.toEmails).addView(_logic.toEmailTemplate(settings), count);\n\n            _logic.refreshUI();\n         },\n\n         emailTypeChange: (type, $select) => {\n            var $recipient = $select.getParentView();\n            var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n            switch (type) {\n               case \"field\":\n                  $emailValue.showBatch(\"field\");\n                  break;\n               case \"query\":\n                  $emailValue.showBatch(\"query\");\n                  break;\n               default:\n                  $emailValue.showBatch(\"email\");\n                  break;\n            }\n\n            $$(ids.toEmailsContainer).adjust();\n         },\n\n         toEmailRemove: ($toView) => {\n            $$(ids.toEmails).removeView($toView);\n\n            _logic.refreshUI();\n         },\n\n         toEmailValidate: () => {\n            var isAllValid = true;\n\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((v) => {\n                  let emailText = v.queryView({ name: \"email\" });\n                  if (emailText.getValue() && !emailText.validate()) {\n                     isAllValid = false;\n                  }\n               });\n\n            if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n            else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n         },\n\n         fieldTemplate: (field, common) => {\n            return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n         },\n\n         emailFieldOptions: () => {\n            var existsFieldIds = [];\n            var options = [];\n\n            var fnAddOptions = (currObj, fLink) => {\n               var emailFields = currObj\n                  .fields((f) => f instanceof ABFieldEmail)\n                  .map((f) => {\n                     var optId = \"\",\n                        optLabel = \"\";\n\n                     if (fLink) {\n                        optId = `${fLink.id}|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                     } else {\n                        optId = `|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label}`;\n                     }\n\n                     return {\n                        id: optId, // linkFieldId|fieldUrl\n                        value: optLabel,\n                     };\n                  });\n\n               // TODO: prevent duplicate\n\n               options = options.concat(emailFields);\n            };\n\n            fnAddOptions(this.queryObject);\n\n            this.queryObject.connectFields().forEach((f) => {\n               // prevent looping\n               if (\n                  // - prevent include connect objects of the base object\n                  // f.datasourceLink.id == this.queryObject.id ||\n                  // - check duplicate include objects\n                  existsFieldIds.indexOf(f.id) > -1\n               )\n                  return;\n\n               // store\n               existsFieldIds.push(f.id);\n\n               // add email fields of link object\n               fnAddOptions(f.datasourceLink, f);\n            });\n\n            return options;\n         },\n\n         queryOptions: () => {\n            var options = [];\n\n            // get data collections who is query and contains email field\n            let dcQueries = this.currentForm.AB.datacollections((dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            });\n\n            dcQueries.forEach((dv) => {\n               if (dv.datasource) {\n                  dv.datasource\n                     .fields((f) => f.key == \"email\")\n                     .forEach((f) => {\n                        options.push({\n                           id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n                           value: `${dv.label}.${f.label}`,\n                        });\n                     });\n               }\n            });\n\n            return options;\n         },\n\n         enterField: (field) => {\n            var focusElem = webix.UIManager.getFocus();\n            var val = \"\";\n\n            if (\n               focusElem.config.view != \"text\" ||\n               focusElem.config.view != \"textarea\"\n            ) {\n               if (focusElem.getValue) val = focusElem.getValue();\n\n               if (focusElem.setValue)\n                  focusElem.setValue(`${val}${field.label}`);\n\n               webix.UIManager.setFocus(focusElem);\n            }\n         },\n\n         refreshUI: () => {\n            $$(ids.toEmailsContainer).adjust();\n            $$(ids.message).adjust();\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options - {\n   //\t\t\t\t\t\t\tdata: {obj} rowData,\n   //\t\t\t\t\t\t\tform: {ABViewForm}\n   //\t\t\t\t\t\t}\n   process(options) {\n      // validate sender's email is invalid\n      if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n         return Promise.resolve();\n      }\n\n      var recipients = [];\n\n      return Promise.resolve()\n         .then(() => {\n            // Pull recipients data\n            return new Promise((resolve, reject) => {\n               var tasks = [];\n\n               this.valueRules.toEmails.forEach((rec) => {\n                  tasks.push(\n                     new Promise((next, err) => {\n                        // TODO: Cc, Bcc\n\n                        // field\n                        if (rec.emailType == \"field\") {\n                           var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n                           var emailField = this.queryObject.application.urlResolve(\n                              emailFieldUrl\n                           );\n                           if (emailField) {\n                              // Pull email source object\n                              if (emailField.object.id == this.queryObject.id) {\n                                 var emailData =\n                                    options.data[emailField.columnName];\n                                 if (emailData)\n                                    recipients = recipients.concat(emailData);\n                              }\n                              // Pull emails from link object\n                              else {\n                                 let linkFieldId = rec.value.split(\"|\")[0];\n                                 let linkFields = this.queryObject.fields(\n                                    (f) =>\n                                       f instanceof ABFieldConnect &&\n                                       f.id == linkFieldId\n                                 );\n                                 linkFields.forEach((f) => {\n                                    var linkedData =\n                                       options.data[f.relationName()] || [];\n\n                                    // convert to an array\n                                    if (\n                                       linkedData &&\n                                       !Array.isArray(linkedData)\n                                    )\n                                       linkedData = [linkedData];\n\n                                    // pull email address\n                                    linkedData.forEach((d) => {\n                                       var email = d[emailField.columnName];\n                                       if (email)\n                                          recipients = recipients.concat(email);\n                                    });\n                                 });\n                              }\n\n                              next();\n                           } else {\n                              next();\n                           }\n                        }\n\n                        // query\n                        else if (rec.emailType == \"query\") {\n                           var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n                           if (!dvIdAndFieldId) return next();\n\n                           var dcId = dvIdAndFieldId.split(\"|\")[0];\n                           var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n                           var dcQuery = this.currentForm.AB.datacollectionByID(\n                              dcId\n                           );\n                           if (!dcQuery) return next();\n\n                           var field = dcQuery.datasource.fieldByID(fieldId);\n                           if (!field) return next();\n\n                           // get data of data collection\n                           dcQuery.getData().forEach((data) => {\n                              var emailAddr = data[field.columnName];\n                              if (emailAddr) recipients.push(emailAddr);\n                           });\n\n                           next();\n                        }\n\n                        // email\n                        else {\n                           recipients.push(rec.value);\n                           next();\n                        }\n                     })\n                  );\n               });\n\n               Promise.all(tasks).catch(reject).then(resolve);\n            });\n         })\n         .then(() => {\n            // send out\n            return new Promise((resolve, reject) => {\n               recipients = this.AB.uniq(recipients).filter((r) => r);\n\n               if (!recipients || recipients.length < 1) return resolve();\n\n               // replace form value to template\n               var fromName = this.valueRules.fromName,\n                  subject = this.valueRules.subject,\n                  message = this.valueRules.message;\n\n               this.queryObject\n                  .fields((f) => f.fieldUseAsLabel())\n                  .forEach((f) => {\n                     var template = new RegExp(`{${f.label}}`, \"g\"),\n                        data = f.format(options.data);\n\n                     fromName = fromName.replace(template, data);\n                     subject = subject.replace(template, data);\n                     message = message.replace(template, data);\n                  });\n\n               // send a email\n               this.AB.Network.post({\n                  url: \"/app_builder/email\",\n                  params: {\n                     fromName: fromName,\n                     fromEmail: this.valueRules.fromEmail,\n                     subject: subject,\n                     message: message,\n                     recipients: this.AB.uniq(recipients),\n                  },\n               })\n                  .then(() => {\n                     resolve();\n                  })\n                  .catch(reject);\n            });\n         });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleExistPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleExistPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleExistPage\";\n      this.label = L(\"Redirect to an existing page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         pagesAndTabs: `${idBase}_PagesAndTabs`,\n      };\n\n      this._ui = {\n         ui: { id: ids.pagesAndTabs, view: \"richselect\", options: [] },\n\n         init: () => {\n            _logic.populateOptions();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         populateOptions: () => {\n            // Pull page list to \"Redirect to an existing page\"\n            var _pageOptions = [];\n\n            /**\n             * @param pageOrTab\t{Object}\t- ABViewPage or ABViewTab\n             * @param indent\t{integer}\n             * @param type\t\t{string}\t- 'page' or 'tab'\n             * @param pageId\t{uuid}\t\t- the id of page (only tab)\n             */\n            var addPage = (pageOrTab, indent, type, pageId) => {\n               indent = indent || \"\";\n\n               let icon = \"fa fa-file-o\";\n               if (type == \"tab\") icon = \"fa fa-window-maximize\";\n\n               let pageParent = pageOrTab.pageParent();\n\n               _pageOptions.push({\n                  id: pageOrTab.id,\n                  value: indent + pageOrTab.label,\n                  type: type,\n                  pageId: pageParent ? pageParent.id : null,\n\n                  icon: icon,\n               });\n\n               if (type == \"page\" || type == \"tab\") {\n                  if (pageOrTab.pages) {\n                     pageOrTab.pages().forEach(function (p) {\n                        addPage(p, indent + \"-\", \"page\");\n                     });\n                  }\n\n                  // add 'tab' options\n                  if (pageOrTab.views) {\n                     pageOrTab\n                        .views((v) => v.key == \"tab\")\n                        .forEach((tab) => {\n                           // add 'tab view' to options\n                           tab.views().forEach((tabView) => {\n                              addPage(\n                                 tabView,\n                                 indent + \"-\",\n                                 \"tab\",\n                                 pageOrTab.id\n                              );\n                           });\n                        });\n                  }\n               }\n            };\n\n            addPage(this.currentForm.pageRoot(), \"\", \"page\");\n\n            $$(ids.pagesAndTabs).define(\"options\", _pageOptions);\n            $$(ids.pagesAndTabs).refresh();\n         },\n\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.pagesAndTabs).setValue(\n               valueRules.tabId || valueRules.pageId || \"\"\n            );\n         },\n\n         toSettings: () => {\n            var result = {};\n\n            var selectedId = $$(ids.pagesAndTabs).getValue();\n            var selectedItem = $$(ids.pagesAndTabs)\n               .getPopup()\n               .getList()\n               .config.data.filter((opt) => opt.id == selectedId)[0];\n            if (selectedItem) {\n               if (selectedItem.type == \"tab\") {\n                  // store page id and tab id\n                  result = {\n                     pageId: selectedItem.pageId,\n                     tabId: selectedId,\n                  };\n               } else {\n                  // store only page id\n                  result = {\n                     pageId: selectedId,\n                  };\n               }\n            }\n\n            // return the confirm message\n            return result;\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect page\n         if (this.valueRules.pageId) {\n            options.form.changePage(this.valueRules.pageId);\n\n            if (this.valueRules.tabId) {\n               var curPage = options.form.application.pages(\n                  (p) => p.id == this.valueRules.pageId,\n                  true\n               )[0];\n               if (!curPage) return resolve();\n\n               // switch tab\n               var tabView = curPage.views(\n                  (v) => v.id == this.valueRules.tabId,\n                  true\n               )[0];\n               if (!tabView) return resolve();\n\n               var tab = tabView.parent;\n               if (!tab) return resolve();\n\n               var toggleParent = (element) => {\n                  if (!element.parent) return false;\n                  var parentElem = element.parent;\n                  if (!parentElem.parent) return false;\n                  parentElem.parent.emit(\"changeTab\", parentElem.id);\n                  toggleParent(parentElem.parent);\n               };\n\n               toggleParent(tab);\n               let showIt = setInterval(function () {\n                  if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                     clearInterval(showIt);\n                     return;\n                  }\n                  tab.emit(\"changeTab\", tabView.id);\n               }, 100);\n            }\n         }\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleParentPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleParentPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleParentPage\";\n      this.label = L(\"Redirect to the parent page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"label\",\n            label: this.label,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n      };\n\n      var _logic = {};\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var pageCurrent = options.form.pageParent();\n         var pageParent = pageCurrent.pageParent();\n\n         // redirect page\n         options.form.changePage(pageParent.id);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleWebsite extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleWebsite\";\n      this.label = L(\"Redirect to another website URL\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         website: `${idBase}_website`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.website,\n            view: \"text\",\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.website).setValue(valueRules.website || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               website: $$(ids.website).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect to website\n         if (this.valueRules.website)\n            window.open(\n               `http://${this.valueRules.website.replace(\"http://\", \"\")}`,\n               \"_blank\"\n            );\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nmodule.exports = class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n\n      this.updateObject = null; // the object this Action will Update.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n\n      this.stashRules = {}; // keep track of rule settings among our selected objects.\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      if (this._uiUpdater == null) {\n         this._uiUpdater = this.valueDisplayList(idBase);\n      }\n\n      return this._uiUpdater;\n   }\n\n   // Our Values Display is a List of ValueRows\n   // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n   valueDisplayList(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n      var ids = {\n         updateForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         view: \"form\",\n         id: ids.updateForm,\n         elements: [],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n         _logic.setValues(valueRules);\n      };\n\n      var _logic = {\n         removeAddRow: () => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n\n            var addRow = rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            })[0];\n            if (!addRow) return;\n\n            UpdateForm.removeView(addRow);\n         },\n\n         // addRow\n         // add a new data entry to this form.\n         // @param {obj} data  (optional) initial values for this row.\n         addRow: (data) => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n            if (\n               data == null &&\n               rows.filter((r) => {\n                  return r.queryView(function (view) {\n                     return view.config.name == \"field\" && !view.getValue();\n                  });\n               }).length > 0\n            )\n               return;\n\n            // get a new Row Component\n            var row = this.valueDisplayRow(idBase);\n\n            // add row to Form\n            UpdateForm.addView(row.ui);\n\n            // initialize row with any provided data:\n            row.init({\n               onAdd: () => {\n                  // add a new Row\n                  _logic.addRow();\n               },\n               onDelete: (rowId) => {\n                  // remove a row\n                  _logic.delRow(rowId);\n               },\n               data: data,\n            });\n\n            // store this row\n            this.formRows.push(row);\n         },\n\n         delRow: (rowId) => {\n            // store this row\n            this.formRows.forEach((r, index) => {\n               if (r.ui.id == rowId) this.formRows.splice(index, 0);\n            });\n\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // remove UI\n            UpdateForm.removeView($$(rowId));\n         },\n\n         formClear: () => {\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            var children = UpdateForm.getChildViews();\n\n            // NOTE: need to clone this array, because it is connected with the UpdatForm's\n            // internal array of items.  Once we start .removeView() the element actually\n            // is removed from the internal array, which then upset's the .forEach() from\n            // properly iterating through the structure.  It results in missed items from\n            // being sent to the .forEach().\n            // So Clone it and use that for .forEach()\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               UpdateForm.removeView(c);\n            });\n\n            // clear our stored .formRows\n            this.formRows = [];\n         },\n\n         formGet: () => {\n            var UpdateForm = $$(ids.updateForm);\n            if (!UpdateForm) {\n               // this is a problem!\n               this.currentForm.AB.notify.developer(\n                  new Error(\"no webix form\"),\n                  {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:formGet  could not find webix form\",\n                     id: ids.updateForm,\n                  }\n               );\n               return null;\n            }\n\n            return UpdateForm;\n         },\n\n         setValues: (valueRules) => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n\n            valueRules = valueRules || {};\n            valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n            // find the form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // clear form:\n            _logic.formClear();\n\n            // if there are values to\n            if (valueRules.fieldOperations.length > 0) {\n               valueRules.fieldOperations.forEach((r) => {\n                  _logic.addRow(r);\n               });\n            }\n\n            // our default operation will cause an empty row to\n            // appear after our first value entry.\n            // let's remove that one, and then add a new one\n            // at the end:\n            _logic.removeAddRow();\n\n            // display an empty row\n            _logic.addRow();\n         },\n\n         fromSettings: (settings) => {\n            // Note: we just want the { valueRules:[] } here:\n            var mySettings = settings.valueRules || settings;\n\n            _logic.setValues(mySettings);\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(fr.toSettings());\n               }\n            });\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   valueDisplayRow(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         row: myUnique(\"row\"),\n         updateForm: myUnique(\"updateFormRow\"),\n         field: myUnique(\"field\"),\n         value: myUnique(\"value\"),\n         selectDc: myUnique(\"selectDc\"),\n         selectBy: myUnique(\"selectBy\"),\n         queryField: myUnique(\"queryField\"),\n         multiview: myUnique(\"multiview\"),\n         buttonAdd: myUnique(\"add\"),\n         buttonDelete: myUnique(\"delete\"),\n      };\n\n      var FilterComponent;\n\n      var _logic = {\n         callbacks: {\n            onAdd: () => {},\n            onDelete: () => {},\n         },\n\n         buttonsToggle: () => {\n            $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n            $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n         },\n\n         getFieldList: (shouldFilter) => {\n            var options = [];\n            if (this.updateObject) {\n               options = (this.updateObject.fields() || []).map((f) => {\n                  return {\n                     id: f.id,\n                     value: f.label,\n                  };\n               });\n\n               // options = (this.updateObject.fields() || [])\n               // .filter(f => {\n               //\n               // \tif (f.key != 'connectObject') {\n               // \t\treturn true;\n               // \t} else {\n               // \t\t// if this is a connection field, only return\n               // \t\t// fields that are 1:x  where this field is the\n               // \t\t// source:\n               // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n               //\n               // \t\t// 6-14-2018 Changing from only 1:x to support many\n               // \t\t// if this is a connected field, only return\n               // \t\t// fields that this is the source\n               // \t\treturn (f.isSource())\n               // \t}\n               // })\n               // .map(f => {\n               // \treturn {\n               // \t\tid: f.id,\n               // \t\tvalue: f.label\n               // \t};\n               // });\n\n               // Remove fields who are selected\n               if (shouldFilter) {\n                  // store this row\n                  var usedHash = {};\n                  this.formRows.forEach((row) => {\n                     var rowView = $$(row.ui.id);\n                     if (rowView) {\n                        var field = rowView\n                           .getChildViews()[0]\n                           .getChildViews()[1];\n                        usedHash[field.getValue()] = true;\n                     }\n                  });\n                  options = options.filter((o) => {\n                     return !usedHash[o.id];\n                  });\n               }\n            }\n            return options;\n         },\n\n         isValid: () => {\n            var validator = this.currentForm.AB.Validation.validator();\n            var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n            var FormView = valueField.getParentView().getParentView();\n\n            var field = this.getUpdateObjectField($$(ids.field).getValue());\n            if (field) {\n               var value = field.getValue(valueField, {});\n\n               // // if a standard component that supports .getValue()\n               // if (valueField.getValue) {\n               // \tvalue = valueField.getValue();\n               // } else {\n               // \t// else use for field.getValue();\n               // \tvalue = field.getValue(valueField, {});\n               // }\n\n               // our .isValidData() wants value in an object:\n               var obj = {};\n               obj[field.columnName] = value;\n\n               field.isValidData(obj, validator);\n\n               // if value is empty, this is also an error:\n               if (\n                  value == \"\" ||\n                  value == null ||\n                  (Array.isArray(value) && value.length == 0)\n               ) {\n                  validator.addError(\n                     field.columnName,\n                     L(\"A value is required\")\n                  );\n               }\n\n               // field.getParentView()  ->  row\n               // row.getParentView()  -> Form\n               FormView.clearValidation();\n               validator.updateForm(FormView);\n\n               return validator.pass();\n            } else {\n               // if we didn't find an associated field ... then this isn't good\n               // data.\n\n               //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n               // field.\n               var fieldField = $$(ids.row)\n                  .getChildViews()[0]\n                  .getChildViews()[1];\n               fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n               fieldField.define(\"invalid\", true);\n               fieldField.refresh();\n               // fieldField.markInvalid(this.labels.component.errorRequired);\n               return false;\n            }\n         },\n\n         selectField: (columnID) => {\n            var field = this.getUpdateObjectField(columnID);\n            if (!field) return;\n\n            var fieldComponent = field.formComponent(),\n               abView = fieldComponent.newInstance(field.object.application),\n               formFieldComponent = abView.component(this.App),\n               $componentView = formFieldComponent.ui,\n               $inputView;\n\n            $componentView.id = ids.value; // set our expected id\n\n            // find all the DataSources\n            var datasources = this.currentForm.AB.datacollections(\n               (dc) => dc.datasource\n            );\n\n            // create a droplist with those dataSources\n            var optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({ id: dc.id, value: dc.label });\n            });\n\n            // create a droplist with select options\n            var optionsSelectBy = [\n               { id: \"select-one\", value: L(\"Current selection\") },\n               {\n                  id: \"filter-select-one\",\n                  value: L(\"Select first after filter by...\"),\n               },\n            ];\n\n            var $optionUpdateExsits = {\n               type: \"clean\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.selectDc,\n                           view: \"combo\",\n                           options: optionsDataSources,\n                           placeholder: L(\"Choose a data source\"),\n                           on: {\n                              onChange: (newv, oldv) => {\n                                 var selectedDC =\n                                    this.currentForm.AB.datacollectionByID(\n                                       newv\n                                    );\n                                 if (\n                                    selectedDC &&\n                                    (selectedDC.sourceType == \"query\" ||\n                                       !field.isConnection)\n                                 ) {\n                                    var queryFieldOptions = [];\n                                    selectedDC.datasource\n                                       .fields()\n                                       .forEach((f) => {\n                                          queryFieldOptions.push({\n                                             id: f.id,\n                                             value: f.label,\n                                          });\n                                       });\n                                    $$(ids.queryField).define(\n                                       \"options\",\n                                       queryFieldOptions\n                                    );\n                                    $$(ids.queryField).refresh();\n                                    $$(ids.queryField).show();\n                                 } else {\n                                    $$(ids.queryField).hide();\n                                 }\n                              },\n                           },\n                        },\n                        // we will place a list of query fields if you choose a datasource that has a query source type\n                        {\n                           id: ids.queryField,\n                           view: \"combo\",\n                           hidden: true,\n                           placeholder: L(\"Choose value from...\"),\n                           options: [{ id: 1, value: \"figure this out\" }],\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.selectBy,\n                     view: \"combo\",\n                     options: optionsSelectBy,\n                     placeholder: L(\"Choose select option\"),\n                     on: {\n                        onChange: (newv, oldv) => {\n                           var $row = $$(ids.row);\n                           $row.removeView($row.getChildViews()[1]);\n                           if (newv == \"select-one\") {\n                              $row.addView({}, 1);\n                           } else {\n                              var options =\n                                 this.currentForm.datacollection.datasource\n                                    .fields()\n                                    .map(function (f) {\n                                       return {\n                                          id: f.id,\n                                          value: f.label,\n                                       };\n                                    });\n\n                              FilterComponent = this.AB.filterComplexNew(\n                                 `${idBase}_filter`\n                              );\n                              // FilterComponent.applicationLoad(\n                              //    this.currentForm.application\n                              // );\n                              FilterComponent.init({\n                                 isRecordRule: true,\n                                 recordRuleFieldOptions: options,\n                              });\n                              FilterComponent.on(\"change\", (val) => {\n                                 _logic.onFilterChange(val);\n                              });\n\n                              $row.addView(FilterComponent.ui, 1);\n\n                              var dcId = $$(ids.selectDc).getValue();\n                              var dataCollection =\n                                 this.currentForm.AB.datacollectionByID(dcId);\n                              if (dataCollection) {\n                                 _logic.populateFilters(dataCollection);\n                              }\n                           }\n                        },\n                     },\n                  },\n               ],\n            };\n\n            // WORKAROUND: add '[Current User]' option to the user data field\n            if (field.key == \"user\") {\n               $componentView.options = $componentView.options || [];\n               $componentView.options.unshift({\n                  id: \"ab-current-user\",\n                  value: L(\"[Current User]\"),\n               });\n            }\n\n            // UPDATE: ok, in practice we have not had any use cases where\n            // we want individual values on connectedObject fields, but\n            // instead we want to insert the current selected element from\n            // a relevant data view.  So, replace the fieldComponet\n            // from a connectedObject field with a list of data views that\n            // are based upon the same object we are connected to:\n            if (field.isConnection) {\n               // find the ABObject this field connects to\n               var connectedObject = field.datasourceLink;\n\n               // find all the DataSources that are based upon this ABObject\n               // to do this, we find the root Page we are on, then ask that Page for datasources:\n               datasources = datasources.filter((dc) => {\n                  return dc.datasource.id == connectedObject.id;\n               });\n\n               var dcQueries = this.currentForm.AB.datacollections((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n               datasources = datasources.concat(dcQueries);\n\n               // refresh a droplist with those dataSources\n               optionsDataSources = [];\n               datasources.forEach((dc) => {\n                  optionsDataSources.push({ id: dc.id, value: dc.label });\n               });\n\n               // add select an array value option\n               optionsSelectBy.push({\n                  id: \"filter-select-all\",\n                  value: L(\"Select all after filter by...\"),\n               });\n\n               $inputView = $optionUpdateExsits;\n\n               // and the upcoming formFieldComponent.init()\n               // doesn't need to do anything:\n               formFieldComponent = {\n                  init: function () {},\n               };\n\n               // and we reset field so it's customDisplay isn't called:\n               // field = {};\n            } else {\n               $inputView = {\n                  id: ids.multiview,\n                  view: \"multiview\",\n                  cells: [\n                     {\n                        batch: \"custom\",\n                        rows: [\n                           $componentView,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or exists value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    $multiview.showBatch(\"exist\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        // Update value from exists object\n                        batch: \"exist\",\n                        rows: [\n                           $optionUpdateExsits,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or custom value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    // clear filter view\n                                    $$(ids.selectBy).setValue(\"select-one\");\n\n                                    $multiview.showBatch(\"custom\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               };\n            }\n\n            // Change component to display this field's form input\n            var $row = $$(ids.row).getChildViews()[0];\n            $row.removeView($row.getChildViews()[3]);\n            $row.addView($inputView, 3);\n\n            formFieldComponent.init();\n\n            // Show custom display of data field\n            if (!field.isConnection && field.customDisplay) {\n               // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n               var compNodeView = $$($componentView.id).$view;\n\n               // wait until render UI complete\n               setTimeout(() => {\n                  field.customDisplay(field, this.App, compNodeView, {\n                     editable: true,\n\n                     // tree\n                     isForm: true,\n                  });\n               }, 50);\n            }\n\n            // Show the remove button\n            var $buttonRemove = $row.getChildViews()[4];\n            $buttonRemove.show();\n\n            // Add a new row\n            if (columnID) _logic.callbacks.onAdd();\n         },\n\n         setValue: (data) => {\n            $$(ids.field).setValue(data.fieldID);\n            // note: this triggers our _logic.selectField() fn.\n            var field = this.getUpdateObjectField(data.fieldID);\n            if (field) {\n               var setValueFn = () => {\n                  $$(ids.selectDc).setValue(data.value);\n                  if (data.queryField) {\n                     $$(ids.queryField).setValue(data.queryField);\n                  }\n                  var selectBy = data.selectBy || \"select-one\";\n                  $$(ids.selectBy).setValue(selectBy);\n\n                  if (selectBy != \"select-one\") {\n                     var collectionId = data.value;\n                     var dataCollection =\n                        this.currentForm.AB.datacollectionByID(collectionId);\n                     if (dataCollection && data.filterConditions) {\n                        _logic.populateFilters(\n                           dataCollection,\n                           data.filterConditions\n                        );\n                     }\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  setValueFn();\n               } else {\n                  if (data.valueType == \"exist\") {\n                     $$(ids.multiview).showBatch(\"exist\");\n\n                     setValueFn();\n                  } else {\n                     $$(ids.multiview).showBatch(\"custom\");\n\n                     // wait until render UI complete\n                     setTimeout(function () {\n                        // set value to custom field\n                        var rowData = {};\n                        rowData[field.columnName] = data.value;\n                        field.setValue($$(ids.value), rowData);\n                     }, 50);\n                  }\n               }\n            }\n         },\n\n         populateFilters: (dataView, filterConditions) => {\n            filterConditions =\n               filterConditions ||\n               ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n            // Populate data to popups\n            // FilterComponent.objectLoad(objectCopy);\n            FilterComponent.fieldsLoad(\n               dataView.datasource ? dataView.datasource.fields() : []\n            );\n            FilterComponent.setValue(filterConditions);\n         },\n\n         toSettings: () => {\n            // if this isn't the last entry row\n            // * a row with valid data has the [delete] button showing.\n            var buttonDelete = $$(ids.buttonDelete);\n            if (buttonDelete && buttonDelete.isVisible()) {\n               var data = {};\n               data.fieldID = $$(ids.field).getValue();\n\n               var $valueField = $$(ids.value);\n               var field = this.getUpdateObjectField(data.fieldID);\n\n               var getValueFn = () => {\n                  data.value = $$(ids.selectDc).getValue();\n                  data.queryField = $$(ids.queryField).getValue();\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.selectBy = $$(ids.selectBy).getValue();\n                  data.valueType = \"exist\";\n                  if (FilterComponent) {\n                     data.filterConditions = FilterComponent.getValue();\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  getValueFn();\n               } else {\n                  if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                     getValueFn();\n                  } else {\n                     data.value = field.getValue($valueField, {});\n                     data.op = \"set\"; // possible to create other types of operations.\n                     data.type = field.key;\n                     data.valueType = \"custom\";\n                  }\n               }\n\n               return data;\n            } else {\n               return null;\n            }\n         },\n      };\n\n      var _ui = {\n         id: ids.row,\n         view: \"layout\",\n         rows: [\n            {\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     name: \"field\",\n                     placeholder: L(\"Choose a field\"),\n                     id: ids.field,\n                     height: 32,\n                     options: _logic.getFieldList(true),\n                     on: {\n                        onChange: function (columnId) {\n                           _logic.selectField(columnId);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"To\"),\n                  },\n\n                  // Field value\n                  // NOTE: this view gets replaced each time a field is selected.\n                  // We replace it with a component associated with the Field\n                  {},\n\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     id: ids.buttonDelete,\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     hidden: true,\n                     click: function () {\n                        _logic.callbacks.onDelete(ids.row);\n                     },\n                  },\n               ],\n            },\n            {}, // we will add filters here if we need them\n         ],\n      };\n\n      var init = (options) => {\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         if (options.data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            _logic.setValue(options.data);\n\n            // _logic.buttonsToggle();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   getUpdateObjectField(fieldID) {\n      return (\n         this.queryObject?.fieldByID(fieldID) ??\n         this.updateObject?.fieldByID(fieldID) ??\n         this.currentForm.AB.fieldNew(\n            this.currentForm.AB.definitionByID(fieldID) ?? {},\n            this.currentForm.AB.objectNew({})\n         )\n      );\n   }\n\n   /**\n    * @method processUpdateObject\n    * Perform the specified update actions on the provided objectToUpdate\n    * @param {obj} options  Additional information required to make updates.\n    * @param {obj} objectToUpdate  The object to make the updates on.\n    * @return {boolean}   true if an update took place, false if no updates.\n    */\n   processUpdateObject(options, objectToUpdate) {\n      this._formData = objectToUpdate;\n      // return new Promise((resolve, reject) => {\n      var isUpdated = false;\n\n      this.valueRules = this.valueRules || {};\n      this.valueRules.fieldOperations = this.valueRules.fieldOperations || [];\n\n      // var allPromises = [];\n\n      // for each of our operations\n      this.valueRules.fieldOperations.forEach((op) => {\n         // op = {\n         // \tfieldID:'zzzzz',\n         //\tvalue: 'xxx',\n         //\top: 'set',\n         //  type:'',\n         //  queryField: '', // id of ABField\n         //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n         //  valueType: \"\", ['custom', 'exist']\n         // \tfilterConditions: { // array of filters to apply to the data table\n         //\t\tglue: 'and',\n         // \t\trules: []\n         //  }\n         // }\n\n         var field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n\n         var value = op.value;\n\n         if (value == \"ab-current-user\") {\n            value = this.currentForm.AB.Account.username();\n\n            // in the case of a connected Field, we use op.value to get the\n            // datacollection, and find it's currently selected value:\n         } else if (field.isConnection || op.valueType == \"exist\") {\n            // NOTE: 30 May 2018 :current decision from Ric is to limit this\n            // to only handle 1:x connections where we update the current obj\n            // with the PK of the value from the DC.\n            //\n            // In the future, if we want to handle the other options,\n            // we need to modify this to handle the M:x connections where\n            // we insert our PK into the value from the DC.\n\n            // op.value is the ABDatacollection.id we need to find\n            const dataCollection = this.currentForm.AB.datacollectionByID(\n               op.value\n            );\n            if (!dataCollection) return;\n\n            // we don't want to mess with the dataView directly since it might\n            // be used by other parts of the system and this refresh might reset\n            // it's cursor.\n            // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n            // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n            // adjust operator and switch key value to actual value when found\n            var filterConditions = this.currentForm.AB.cloneDeep(\n               op.filterConditions\n            );\n            if (filterConditions && filterConditions.rules) {\n               filterConditions.rules\n                  .filter((r) => {\n                     return (\n                        r.rule == \"same_as_field\" ||\n                        r.rule == \"not_same_as_field\"\n                     );\n                  })\n                  .forEach((item) => {\n                     var valueField =\n                        this.currentForm.datacollection.datasource.fieldByID(\n                           item.value\n                        );\n                     if (valueField.isConnection) {\n                        item.value = valueField.format(this._formData);\n                     } else {\n                        item.value = this._formData[valueField.columnName];\n                     }\n\n                     if (item.rule == \"not_same_as_field\") {\n                        item.rule = \"not equals\";\n                     } else {\n                        item.rule = \"equals\";\n                     }\n                  });\n            }\n\n            let clonedDataCollection =\n               dataCollection.filteredClone(filterConditions);\n\n            switch (op.selectBy) {\n               // the 'select-one' is getting the currently set cursor on this data collection\n               // and using that value.\n               // TODO: rename to 'select-cursor'\n               case \"select-one\":\n               default:\n                  value = clonedDataCollection.getCursor(); // dataView.getItem(dataView.getCursor());\n\n                  if (value) {\n                     // NOTE: webix documentation issue: .getCursor() is supposed to return\n                     // the .id of the item.  However it seems to be returning the {obj}\n\n                     if (op.valueType == \"exist\") {\n                        var fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        if (fieldWithValue)\n                           value = value[fieldWithValue.columnName];\n                     } else if (value.id) {\n                        value = value.id;\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (!value) break;\n\n                        if (field.isConnection) {\n                           // if we are setting a connection we do not want to pass the full object because\n                           // batch creates payload gets too large\n                           objectToUpdate[field.columnName] = {};\n                           objectToUpdate[field.columnName].id =\n                              value[field.datasourceLink.PK()];\n                           objectToUpdate[field.columnName][\n                              field.datasourceLink.PK()\n                           ] = value[field.datasourceLink.PK()];\n\n                           // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n                           if (field.settings.isCustomFK) {\n                              if (field.indexField) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField.columnName\n                                 ] = value[field.indexField.columnName];\n                              }\n                              if (field.indexField2) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField2.columnName\n                                 ] = value[field.indexField2.columnName];\n                              }\n                           }\n\n                           field.datasourceLink\n                              .fields(\n                                 (f) =>\n                                    f.key == \"combined\" || f.key == \"AutoIndex\"\n                              )\n                              .forEach((f) => {\n                                 objectToUpdate[field.columnName][\n                                    f.columnName\n                                 ] = value[f.columnName];\n                              });\n                        } else {\n                           objectToUpdate[field.columnName] = value;\n                        }\n\n                        break;\n                  }\n                  break;\n\n               // attempt to filter this data collection by the given filterConditions\n               case \"filter-select-all\":\n                  var newValues = [];\n\n                  var currRow = clonedDataCollection.getFirstRecord();\n                  while (currRow) {\n                     // do something there\n\n                     switch (clonedDataCollection.sourceType) {\n                        // case: datacollection is an object\n                        // we want to set our field to this values\n                        case \"object\":\n                           newValues.push(currRow.id);\n                           break;\n\n                        // case: datacollection is a query\n                        // our field is a pointer to an object. we want to pull out that object\n                        // from the query data.\n                        case \"query\":\n                           var fieldWithValue =\n                              clonedDataCollection.datasource.fieldByID(\n                                 op.queryField\n                              );\n\n                           var newValue = currRow[fieldWithValue.columnName];\n\n                           if (typeof newValue == \"undefined\") {\n                              newValue = currRow[fieldWithValue.relationName()];\n\n                              if (Array.isArray(newValue)) {\n                                 newValue = newValue.map((v) => {\n                                    return v.id ? v.id : v;\n                                 });\n                              } else if (newValue.id) {\n                                 newValue = newValue.id;\n                              }\n                           }\n\n                           newValues = this.currentForm.AB.uniq(\n                              newValues.concat(newValue)\n                           );\n\n                           break;\n                     }\n\n                     currRow = clonedDataCollection.getNextRecord(currRow);\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (field.linkType() == \"one\") {\n                           var updates = [];\n                           newValues.forEach((v) => {\n                              var objectToUpdateClone =\n                                 this.currentForm.AB.cloneDeep(objectToUpdate);\n                              objectToUpdateClone[field.columnName] = v;\n                              updates.push(objectToUpdateClone);\n                           });\n                           objectToUpdate.newRecords = updates;\n                        } else {\n                           objectToUpdate[field.columnName] = newValues;\n                        }\n                        break;\n                  }\n                  break;\n\n               case \"filter-select-one\":\n                  newValues = [];\n\n                  value = clonedDataCollection.getFirstRecord();\n\n                  if (value) {\n                     // case: datacollection is a query\n                     // our field is a pointer to an object. we want to pull out that object\n                     // from the query data.\n                     if (\n                        clonedDataCollection.sourceType == \"query\" ||\n                        (op.valueType == \"exist\" && op.queryField)\n                     ) {\n                        fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        newValue = value[fieldWithValue.columnName];\n\n                        if (typeof newValue == \"undefined\") {\n                           newValue = value[fieldWithValue.relationName()];\n                           if (Array.isArray(newValue)) {\n                              newValue = newValue[0];\n                           }\n                           if (newValue.id) newValue = newValue.id;\n                        }\n\n                        value = newValue;\n                     }\n                     // case: datacollection is an object\n                     // we want to set our field to this values\n                     else if (clonedDataCollection.sourceType == \"object\") {\n                        // NOTE: webix documentation issue: .getCursor() is supposed to return\n                        // the .id of the item.  However it seems to be returning the {obj}\n\n                        // we need to use the objects indexField(2) if there is one\n                        // otherwise default to the id\n                        var lookup;\n                        if (field.indexField) {\n                           lookup = field.indexField.columnName;\n                        } else if (field.indexField2) {\n                           lookup = field.indexField2.columnName;\n                        }\n                        if (lookup && value[lookup]) {\n                           value = value[lookup];\n                        } else if (value.id) {\n                           value = value.id;\n                        }\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        objectToUpdate[field.columnName] = value;\n                        break;\n                  }\n                  break;\n            }\n\n            isUpdated = true;\n\n            // allPromises.push(connectedPromise);\n         } else {\n            // var setPromise = new Promise((resolve, reject) => {\n            switch (op.op) {\n               case \"set\":\n                  objectToUpdate[field.columnName] = value;\n                  break;\n            }\n\n            isUpdated = true;\n\n            //    resolve(isUpdated);\n            // });\n\n            // allPromises.push(setPromise);\n\n            // console.log(\"finished\");\n         }\n      });\n\n      return isUpdated;\n      // Promise.all(allPromises).then(() => {\n      //    resolve(isUpdated);\n      // });\n      // });\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         let isUpdated = this.processUpdateObject({}, options.data);\n         if (!isUpdated) {\n            resolve();\n         } else {\n            // get the model from the provided Form Obj:\n            var dv = options.form.datacollection;\n            if (!dv) return resolve();\n\n            var model = dv.model;\n            model\n               .update(options.data.id, options.data)\n               .then(resolve)\n               .catch((err) => {\n                  this.currentForm.AB.notify.developer(err, {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:process  update error\",\n                     id: options.data.id,\n                     data: options.data,\n                  });\n                  reject(err);\n               });\n         }\n      });\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      super.objectLoad(object);\n      this.updateObjectLoad(object);\n   }\n\n   // updateObjectLoad\n   // save the given object as the object we will update.\n   updateObjectLoad(object) {\n      // stash rules for old object\n      if (this.updateObject) {\n         this.stashRules[this.updateObject.id] = this.valueRules;\n      }\n\n      this.updateObject = object;\n\n      // with a new updateObject, then reset our UI\n      this._uiUpdater = null;\n\n      // reload any stashed rules, or set to {}\n      this.valueRules = this.stashRules[this.updateObject.id] || {};\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // make sure UI is updated:\n      // set our updateObject\n      if (settings.updateObjectURL) {\n         var updateObject = this.currentForm.application.urlResolve(\n            settings.updateObjectURL\n         );\n         this.updateObject = updateObject;\n      }\n\n      // if we have a display component, then populate it:\n      if (this._uiUpdater) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._uiUpdater.fromSettings(settings);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._uiUpdater.toSettings();\n      settings.updateObjectURL = this.updateObject.urlPointer();\n\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * Here we need to scan each of our field operations, and verify all\n    * related data collections are initialized before we can continue.\n    * @return {Promise}\n    */\n   isReady() {\n      var allReady = [];\n      let fieldOps = this.valueRules?.fieldOperations ?? [];\n      fieldOps.forEach((op) => {\n         let field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n         if (!field.isConnection && op.valueType !== \"exist\") return;\n\n         // this references a DC\n         let DC = this.currentForm.AB.datacollectionByID(op.value);\n         if (DC?.dataStatus === DC?.dataStatusFlag.initialized) return;\n\n         // not ready yet, so wait until the 'initializedData' event\n         allReady.push(\n            new Promise((resolve /*, reject */) => {\n               DC.on(\"initializedData\", () => {\n                  resolve();\n               });\n            })\n         );\n      });\n      return Promise.all(allReady);\n   }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ImageModule=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";var DocUtils=require(\"docxtemplater\").DocUtils;DocUtils.convertPixelsToEmus=function(pixel){return Math.round(pixel*9525)};module.exports=DocUtils},{docxtemplater:5}],2:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./docUtils\");var extensionRegex=/[^.]+\\.([^.]+)/;var rels={getPrefix:function getPrefix(fileType){return fileType===\"docx\"?\"word\":\"ppt\"},getFileTypeName:function getFileTypeName(fileType){return fileType===\"docx\"?\"document\":\"presentation\"},getRelsFileName:function getRelsFileName(fileName){return fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/,\"$1\")+\".xml.rels\"},getRelsFilePath:function getRelsFilePath(fileName,fileType){var relsFileName=rels.getRelsFileName(fileName);var prefix=fileType===\"pptx\"?\"ppt/slides\":\"word\";return prefix+\"/_rels/\"+relsFileName}};module.exports=function(){function ImgManager(zip,fileName,xmlDocuments,fileType){_classCallCheck(this,ImgManager);this.fileName=fileName;this.prefix=rels.getPrefix(fileType);this.zip=zip;this.xmlDocuments=xmlDocuments;this.fileTypeName=rels.getFileTypeName(fileType);this.mediaPrefix=fileType===\"pptx\"?\"../media\":\"media\";var relsFilePath=rels.getRelsFilePath(fileName,fileType);this.relsDoc=xmlDocuments[relsFilePath]||this.createEmptyRelsDoc(xmlDocuments,relsFilePath)}_createClass(ImgManager,[{key:\"createEmptyRelsDoc\",value:function createEmptyRelsDoc(xmlDocuments,relsFileName){var mainRels=this.prefix+\"/_rels/\"+this.fileTypeName+\".xml.rels\";var doc=xmlDocuments[mainRels];if(!doc){var err=new Error(\"Could not copy from empty relsdoc\");err.properties={mainRels:mainRels,relsFileName:relsFileName,files:Object.keys(this.zip.files)};throw err}var relsDoc=DocUtils.str2xml(DocUtils.xml2str(doc));var relationships=relsDoc.getElementsByTagName(\"Relationships\")[0];var relationshipChilds=relationships.getElementsByTagName(\"Relationship\");for(var i=0,l=relationshipChilds.length;i<l;i++){relationships.removeChild(relationshipChilds[i])}xmlDocuments[relsFileName]=relsDoc;return relsDoc}},{key:\"loadImageRels\",value:function loadImageRels(){var iterable=this.relsDoc.getElementsByTagName(\"Relationship\");return Array.prototype.reduce.call(iterable,function(max,relationship){var id=relationship.getAttribute(\"Id\");if(/^rId[0-9]+$/.test(id)){return Math.max(max,parseInt(id.substr(3),10))}return max},0)}},{key:\"addExtensionRels\",value:function addExtensionRels(contentType,extension){var contentTypeDoc=this.xmlDocuments[\"[Content_Types].xml\"];var defaultTags=contentTypeDoc.getElementsByTagName(\"Default\");var extensionRegistered=Array.prototype.some.call(defaultTags,function(tag){return tag.getAttribute(\"Extension\")===extension});if(extensionRegistered){return}var types=contentTypeDoc.getElementsByTagName(\"Types\")[0];var newTag=contentTypeDoc.createElement(\"Default\");newTag.namespaceURI=null;newTag.setAttribute(\"ContentType\",contentType);newTag.setAttribute(\"Extension\",extension);types.appendChild(newTag)}},{key:\"addImageRels\",value:function addImageRels(imageName,imageData,i){if(i==null){i=0}var realImageName=i===0?imageName:imageName+(\"(\"+i+\")\");var imagePath=this.prefix+\"/media/\"+realImageName;if(this.zip.files[imagePath]!=null){return this.addImageRels(imageName,imageData,i+1)}var image={name:imagePath,data:imageData,options:{binary:true}};this.zip.file(image.name,image.data,image.options);var extension=realImageName.replace(extensionRegex,\"$1\");this.addExtensionRels(\"image/\"+extension,extension);var relationships=this.relsDoc.getElementsByTagName(\"Relationships\")[0];var newTag=this.relsDoc.createElement(\"Relationship\");newTag.namespaceURI=null;var maxRid=this.loadImageRels()+1;newTag.setAttribute(\"Id\",\"rId\"+maxRid);newTag.setAttribute(\"Type\",\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");newTag.setAttribute(\"Target\",this.mediaPrefix+\"/\"+realImageName);relationships.appendChild(newTag);return maxRid}}]);return ImgManager}()},{\"./docUtils\":1}],3:[function(require,module,exports){\"use strict\";module.exports={getImageXml:function getImageXml(rId,size){return('<w:drawing>\\n\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t<wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\\n\\t\\t\\t<wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getImageXmlCentered:function getImageXmlCentered(rId,size){return('<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\"center\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getPptxImageXml:function getPptxImageXml(rId,size,offset){return('<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\"6\" name=\"Picture 2\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\" cstate=\"print\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\"'+offset.x+'\" y=\"'+offset.y+'\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"accent1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"tx1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"bg2\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t').replace(/\\t|\\n/g,\"\")}}},{}],4:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),fileType:\"docx\",delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){var parts=parsed.slice(0,index);for(var i=parts.length-1;i>=0;i--){var part=parts[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils;DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\")},{\"./errors\":6,\"./memoize\":9,\"./module-wrapper\":11,\"./traits\":20,xmldom:23}],5:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.fileType===\"docx\"||this.fileType===\"pptx\"){this.fileTypeConfig=Docxtemplater.FileTypeConfig[this.fileType]}this.fileTypeConfig=this.options.fileTypeConfig||this.fileTypeConfig;this.options.xmlFileNames=[];return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip)}},{key:\"render\",value:function render(){var _this2=this;this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render();_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.encodeUtf8(DocUtils.xml2str(_this2.xmlDocuments[fileName]));return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":4,\"./errors\":6,\"./file-type-config\":7,\"./xml-matcher\":21,\"./xml-templater\":22}],6:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],7:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":12,\"./modules/loop\":13,\"./modules/rawxml\":14,\"./modules/render\":15,\"./modules/space-preserve\":16}],8:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":4,\"./errors\":6}],9:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],10:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],11:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],12:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));\nreturn[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":4,\"../errors\":6,\"../mergesort\":10,\"../module-wrapper\":11,\"../traits\":20}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":4,\"../module-wrapper\":11}],14:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":4,\"../errors\":6,\"../module-wrapper\":11}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":11}],16:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":11}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":4}],18:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":4,\"./scope-manager\":19}],19:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":6}],20:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){throwRawTagNotInParagraph({part:part,rootError:rootError})}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});var type=Object.prototype.toString.call(inner);if(type===\"[object Array]\"){inner=DocUtils.concatArrays(inner)}return DocUtils.concatArrays([postparsed.slice(0,left),[inner],postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":4,\"./errors\":6}],21:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":4,\"./memoize\":9}],22:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(){this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":4,\"./errors\":6,\"./lexer\":8,\"./parser.js\":17,\"./render.js\":18,\"./scope-manager\":19,\"./xml-matcher\":21}],23:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":24,\"./sax\":25}],24:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){\nreturn true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"<!--\",node.data,\"-->\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],25:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"-->\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/index.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var templates=require(\"./templates\");var DocUtils=require(\"docxtemplater\").DocUtils;var DOMParser=require(\"xmldom\").DOMParser;function isNaN(number){return!(number===number)}var ImgManager=require(\"./imgManager\");var moduleName=\"open-xml-templating/docxtemplater-image-module\";function getInnerDocx(_ref){var part=_ref.part;return part}function getInnerPptx(_ref2){var part=_ref2.part,left=_ref2.left,right=_ref2.right,postparsed=_ref2.postparsed;var xmlString=postparsed.slice(left+1,right).reduce(function(concat,item){return concat+item.value},\"\");var xmlDoc=(new DOMParser).parseFromString(\"<xml>\"+xmlString+\"</xml>\");var offset=xmlDoc.getElementsByTagName(\"a:off\");var ext=xmlDoc.getElementsByTagName(\"a:ext\");part.ext={cx:parseInt(ext[0].getAttribute(\"cx\"),10),cy:parseInt(ext[0].getAttribute(\"cy\"),10)};part.offset={x:parseInt(offset[0].getAttribute(\"x\"),10),y:parseInt(offset[0].getAttribute(\"y\"),10)};return part}var ImageModule=function(){function ImageModule(options){_classCallCheck(this,ImageModule);this.name=\"ImageModule\";this.options=options||{};this.imgManagers={};if(this.options.centered==null){this.options.centered=false}if(this.options.getImage==null){throw new Error(\"You should pass getImage\")}if(this.options.getSize==null){throw new Error(\"You should pass getSize\")}this.imageNumber=1}_createClass(ImageModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){\nvar relsFiles=docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function(file){return file.name});this.fileTypeConfig=docxtemplater.fileTypeConfig;this.fileType=docxtemplater.fileType;this.zip=docxtemplater.zip;options.xmlFileNames=options.xmlFileNames.concat(relsFiles);return options}},{key:\"set\",value:function set(options){if(options.zip){this.zip=options.zip}if(options.xmlDocuments){this.xmlDocuments=options.xmlDocuments}}},{key:\"parse\",value:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent.substring(0,2)===\"%%\"){return{type:type,value:placeHolderContent.substr(2),module:module,centered:true}}if(placeHolderContent.substring(0,1)===\"%\"){return{type:type,value:placeHolderContent.substr(1),module:module,centered:false}}return null}},{key:\"postparse\",value:function postparse(parsed){var expandTo=void 0;var getInner=void 0;if(this.fileType===\"pptx\"){expandTo=\"p:sp\";getInner=getInnerPptx}else{expandTo=this.options.centered?\"w:p\":\"w:t\";getInner=getInnerDocx}return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:expandTo})}},{key:\"render\",value:function render(part,options){this.imgManagers[options.filePath]=this.imgManagers[options.filePath]||new ImgManager(this.zip,options.filePath,this.xmlDocuments,this.fileType);var imgManager=this.imgManagers[options.filePath];if(!part.type===\"placeholder\"||part.module!==moduleName){return null}try{var tagValue=options.scopeManager.getValue(part.value);if(!tagValue){throw new Error(\"tagValue is empty\")}var imgBuffer=this.options.getImage(tagValue,part.value);var rId=imgManager.addImageRels(this.getNextImageName(),imgBuffer);var sizePixel=this.options.getSize(imgBuffer,tagValue,part.value);return this.getRenderedPart(part,rId,sizePixel)}catch(e){return{value:this.fileTypeConfig.tagTextXml}}}},{key:\"getRenderedPart\",value:function getRenderedPart(part,rId,sizePixel){if(isNaN(rId)){throw new Error(\"rId is NaN, aborting\")}var size=[DocUtils.convertPixelsToEmus(sizePixel[0]),DocUtils.convertPixelsToEmus(sizePixel[1])];var centered=this.options.centered||part.centered;var newText=void 0;if(this.fileType===\"pptx\"){newText=this.getRenderedPartPptx(part,rId,size,centered)}else{newText=this.getRenderedPartDocx(rId,size,centered)}return{value:newText}}},{key:\"getRenderedPartPptx\",value:function getRenderedPartPptx(part,rId,size,centered){var offset={x:part.offset.x,y:part.offset.y};var cellCX=part.ext.cx;var cellCY=part.ext.cy;var imgW=size[0];var imgH=size[1];if(centered){offset.x+=cellCX/2-imgW/2;offset.y+=cellCY/2-imgH/2}return templates.getPptxImageXml(rId,[imgW,imgH],offset)}},{key:\"getRenderedPartDocx\",value:function getRenderedPartDocx(rId,size,centered){return centered?templates.getImageXmlCentered(rId,size):templates.getImageXml(rId,size)}},{key:\"getNextImageName\",value:function getNextImageName(){var name=\"image_generated_\"+this.imageNumber+\".png\";this.imageNumber++;return name}}]);return ImageModule}();module.exports=ImageModule},{\"./imgManager\":2,\"./templates\":3,docxtemplater:5,xmldom:23}]},{},[])(\"/src/js/index.js\")});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Docxtemplater=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils},{\"./errors\":2,\"./memoize\":5,xmldom:19}],2:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],3:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":8,\"./modules/loop\":9,\"./modules/rawxml\":10,\"./modules/render\":11,\"./modules/space-preserve\":12}],4:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":1,\"./errors\":2}],5:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],6:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],7:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],8:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));return[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":1,\"../errors\":2,\"../mergesort\":6,\"../module-wrapper\":7,\"../traits\":16}],9:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":1,\"../module-wrapper\":7}],10:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":1,\"../errors\":2,\"../module-wrapper\":7}],11:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":7}],12:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":7}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":1}],14:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":1,\"./scope-manager\":15}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":2}],16:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag,postparsed:options.postparsed,expandTo:options.expandTo,index:options.index};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}if(xmlElement.tag.indexOf(\"<a:tc\")===0){return\"a:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){if(rootError instanceof Errors.XTTemplateError){throwRawTagNotInParagraph({part:part,rootError:rootError,postparsed:postparsed,expandTo:expandTo,index:index})}throw rootError}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});if(!inner.length){inner.expanded=[leftParts,rightParts];inner=[inner]}return DocUtils.concatArrays([postparsed.slice(0,left),inner,postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":1,\"./errors\":2}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":1,\"./memoize\":5}],18:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(to){this.filePath=to;this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":1,\"./errors\":2,\"./lexer\":4,\"./parser.js\":13,\"./render.js\":14,\"./scope-manager\":15,\"./xml-matcher\":17}],19:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":20,\"./sax\":21}],20:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"\\x3c!--\",node.data,\"--\\x3e\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],21:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"--\\x3e\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/docxtemplater.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.zip){this.updateFileTypeConfig()}return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;this.updateFileTypeConfig();return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip);return this}},{key:\"updateFileTypeConfig\",value:function updateFileTypeConfig(){this.fileType=this.zip.files[\"word/document.xml\"]?\"docx\":\"pptx\";this.fileTypeConfig=this.options.fileTypeConfig||Docxtemplater.FileTypeConfig[this.fileType];return this}},{key:\"render\",value:function render(){var _this2=this;this.options.xmlFileNames=[];this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render(to);_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.xml2str(_this2.xmlDocuments[fileName]);return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":1,\"./errors\":2,\"./file-type-config\":3,\"./module-wrapper\":7,\"./traits\":16,\"./xml-matcher\":17,\"./xml-templater\":18}]},{},[])(\"/src/js/docxtemplater.js\")});","/*!\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){\"use strict\";function d(a){if(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0;for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}}var e=a(\"./dataReader\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6}],2:[function(a,b,c){\"use strict\";var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";c.encode=function(a,b){for(var c,e,f,g,h,i,j,k=\"\",l=0;l<a.length;)c=a.charCodeAt(l++),e=a.charCodeAt(l++),f=a.charCodeAt(l++),g=c>>2,h=(3&c)<<4|e>>4,i=(15&e)<<2|f>>6,j=63&f,isNaN(e)?i=j=64:isNaN(f)&&(j=64),k=k+d.charAt(g)+d.charAt(h)+d.charAt(i)+d.charAt(j);return k},c.decode=function(a,b){var c,e,f,g,h,i,j,k=\"\",l=0;for(a=a.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");l<a.length;)g=d.indexOf(a.charAt(l++)),h=d.indexOf(a.charAt(l++)),i=d.indexOf(a.charAt(l++)),j=d.indexOf(a.charAt(l++)),c=g<<2|h>>4,e=(15&h)<<4|i>>2,f=(3&i)<<6|j,k+=String.fromCharCode(c),64!=i&&(k+=String.fromCharCode(e)),64!=j&&(k+=String.fromCharCode(f));return k}},{}],3:[function(a,b,c){\"use strict\";function d(){this.compressedSize=0,this.uncompressedSize=0,this.crc32=0,this.compressionMethod=null,this.compressedContent=null}d.prototype={getContent:function(){return null},getCompressedContent:function(){return null}},b.exports=d},{}],4:[function(a,b,c){\"use strict\";c.STORE={magic:\"\\0\\0\",compress:function(a,b){return a},uncompress:function(a){return a},compressInputType:null,uncompressInputType:null},c.DEFLATE=a(\"./flate\")},{\"./flate\":9}],5:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];b.exports=function(a,b){if(\"undefined\"==typeof a||!a.length)return 0;var c=\"string\"!==d.getTypeOf(a);\"undefined\"==typeof b&&(b=0);var f=0,g=0,h=0;b^=-1;for(var i=0,j=a.length;i<j;i++)h=c?a[i]:a.charCodeAt(i),g=255&(b^h),f=e[g],b=b>>>8^f;return b^-1}},{\"./utils\":22}],6:[function(a,b,c){\"use strict\";function d(a){this.data=null,this.length=0,this.index=0,this.zero=0}var e=a(\"./utils\");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+a+\"). Corrupted zip ?\")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo(\"string\",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1)}},b.exports=d},{\"./utils\":22}],7:[function(a,b,c){\"use strict\";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!1,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],8:[function(a,b,c){\"use strict\";var d=a(\"./utils\");c.string2binary=function(a){return d.string2binary(a)},c.string2Uint8Array=function(a){return d.transformTo(\"uint8array\",a)},c.uint8Array2String=function(a){return d.transformTo(\"string\",a)},c.string2Blob=function(a){var b=d.transformTo(\"arraybuffer\",a);return d.arrayBuffer2Blob(b)},c.arrayBuffer2Blob=function(a){return d.arrayBuffer2Blob(a)},c.transformTo=function(a,b){return d.transformTo(a,b)},c.getTypeOf=function(a){return d.getTypeOf(a)},c.checkSupport=function(a){return d.checkSupport(a)},c.MAX_VALUE_16BITS=d.MAX_VALUE_16BITS,c.MAX_VALUE_32BITS=d.MAX_VALUE_32BITS,c.pretty=function(a){return d.pretty(a)},c.findCompression=function(a){return d.findCompression(a)},c.isRegExp=function(a){return d.isRegExp(a)}},{\"./utils\":22}],9:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,e=a(\"pako\");c.uncompressInputType=d?\"uint8array\":\"array\",c.compressInputType=d?\"uint8array\":\"array\",c.magic=\"\\b\\0\",c.compress=function(a,b){return e.deflateRaw(a,{level:b.level||-1})},c.uncompress=function(a){return e.inflateRaw(a)}},{pako:25}],10:[function(a,b,c){\"use strict\";function d(a,b){return this instanceof d?(this.files={},this.comment=null,this.root=\"\",a&&this.load(a,b),void(this.clone=function(){var a=new d;for(var b in this)\"function\"!=typeof this[b]&&(a[b]=this[b]);return a})):new d(a,b)}var e=a(\"./base64\");d.prototype=a(\"./object\"),d.prototype.load=a(\"./load\"),d.support=a(\"./support\"),d.defaults=a(\"./defaults\"),d.utils=a(\"./deprecatedPublicUtils\"),d.base64={encode:function(a){return e.encode(a)},decode:function(a){return e.decode(a)}},d.compressions=a(\"./compressions\"),b.exports=d},{\"./base64\":2,\"./compressions\":4,\"./defaults\":7,\"./deprecatedPublicUtils\":8,\"./load\":11,\"./object\":14,\"./support\":18}],11:[function(a,b,c){\"use strict\";var d=a(\"./base64\"),e=a(\"./utf8\"),f=a(\"./utils\"),g=a(\"./zipEntries\");b.exports=function(a,b){var c,h,i,j;for(b=f.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:e.utf8decode}),b.base64&&(a=d.decode(a)),h=new g(a,b),c=h.files,i=0;i<c.length;i++)j=c[i],this.file(j.fileNameStr,j.decompressed,{binary:!0,optimizedBinaryString:!0,date:j.date,dir:j.dir,comment:j.fileCommentStr.length?j.fileCommentStr:null,unixPermissions:j.unixPermissions,dosPermissions:j.dosPermissions,createFolders:b.createFolders});return h.zipComment.length&&(this.comment=h.zipComment),this}},{\"./base64\":2,\"./utf8\":21,\"./utils\":22,\"./zipEntries\":23}],12:[function(a,b,c){(function(a){\"use strict\";b.exports=function(b,c){return new a(b,c)},b.exports.test=function(b){return a.isBuffer(b)}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){\"use strict\";function d(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./uint8ArrayReader\");d.prototype=new e,d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./uint8ArrayReader\":19}],14:[function(a,b,c){\"use strict\";var d=a(\"./support\"),e=a(\"./utils\"),f=a(\"./crc32\"),g=a(\"./signature\"),h=a(\"./defaults\"),i=a(\"./base64\"),j=a(\"./compressions\"),k=a(\"./compressedObject\"),l=a(\"./nodeBuffer\"),m=a(\"./utf8\"),n=a(\"./stringWriter\"),o=a(\"./uint8ArrayWriter\"),p=function(a){if(a._data instanceof k&&(a._data=a._data.getContent(),a.options.binary=!0,a.options.base64=!1,\"uint8array\"===e.getTypeOf(a._data))){var b=a._data;a._data=new Uint8Array(b.length),0!==b.length&&a._data.set(b,0)}return a._data},q=function(a){var b=p(a),c=e.getTypeOf(b);return\"string\"===c?!a.options.binary&&d.nodebuffer?l(b,\"utf-8\"):a.asBinary():b},r=function(a){var b=p(this);return null===b||\"undefined\"==typeof b?\"\":(this.options.base64&&(b=i.decode(b)),b=a&&this.options.binary?D.utf8decode(b):e.transformTo(\"string\",b),a||this.options.binary||(b=e.transformTo(\"string\",D.utf8encode(b))),b)},s=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this.options=c,this._initialMetadata={dir:c.dir,date:c.date}};s.prototype={asText:function(){return r.call(this,!0)},asBinary:function(){return r.call(this,!1)},asNodeBuffer:function(){var a=q(this);return e.transformTo(\"nodebuffer\",a)},asUint8Array:function(){var a=q(this);return e.transformTo(\"uint8array\",a)},asArrayBuffer:function(){return this.asUint8Array().buffer}};var t=function(a,b){var c,d=\"\";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},u=function(a){return a=a||{},a.base64!==!0||null!==a.binary&&void 0!==a.binary||(a.binary=!0),a=e.extend(a,h),a.date=a.date||new Date,null!==a.compression&&(a.compression=a.compression.toUpperCase()),a},v=function(a,b,c){var d,f=e.getTypeOf(b);if(c=u(c),\"string\"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=x(a)),c.createFolders&&(d=w(a))&&y.call(this,d,!0),c.dir||null===b||\"undefined\"==typeof b)c.base64=!1,c.binary=!1,b=null,f=null;else if(\"string\"===f)c.binary&&!c.base64&&c.optimizedBinaryString!==!0&&(b=e.string2binary(b));else{if(c.base64=!1,c.binary=!0,!(f||b instanceof k))throw new Error(\"The data of '\"+a+\"' is in an unsupported format !\");\"arraybuffer\"===f&&(b=e.transformTo(\"uint8array\",b))}var g=new s(a,b,c);return this.files[a]=g,g},w=function(a){\"/\"==a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf(\"/\");return b>0?a.substring(0,b):\"\"},x=function(a){return\"/\"!=a.slice(-1)&&(a+=\"/\"),a},y=function(a,b){return b=\"undefined\"!=typeof b&&b,a=x(a),this.files[a]||v.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},z=function(a,b,c){var d,g=new k;return a._data instanceof k?(g.uncompressedSize=a._data.uncompressedSize,g.crc32=a._data.crc32,0===g.uncompressedSize||a.dir?(b=j.STORE,g.compressedContent=\"\",g.crc32=0):a._data.compressionMethod===b.magic?g.compressedContent=a._data.getCompressedContent():(d=a._data.getContent(),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c))):(d=q(a),d&&0!==d.length&&!a.dir||(b=j.STORE,d=\"\"),g.uncompressedSize=d.length,g.crc32=f(d),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c)),g.compressedSize=g.compressedContent.length,g.compressionMethod=b.magic,g},A=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},B=function(a,b){return 63&(a||0)},C=function(a,b,c,d,h,i){var j,k,l,n,o=(c.compressedContent,i!==m.utf8encode),p=e.transformTo(\"string\",i(b.name)),q=e.transformTo(\"string\",m.utf8encode(b.name)),r=b.comment||\"\",s=e.transformTo(\"string\",i(r)),u=e.transformTo(\"string\",m.utf8encode(r)),v=q.length!==b.name.length,w=u.length!==r.length,x=b.options,y=\"\",z=\"\",C=\"\";l=b._initialMetadata.dir!==b.dir?b.dir:x.dir,n=b._initialMetadata.date!==b.date?b.date:x.date;var D=0,E=0;l&&(D|=16),\"UNIX\"===h?(E=798,D|=A(b.unixPermissions,l)):(E=20,D|=B(b.dosPermissions,l)),j=n.getHours(),j<<=6,j|=n.getMinutes(),j<<=5,j|=n.getSeconds()/2,k=n.getFullYear()-1980,k<<=4,k|=n.getMonth()+1,k<<=5,k|=n.getDate(),v&&(z=t(1,1)+t(f(p),4)+q,y+=\"up\"+t(z.length,2)+z),w&&(C=t(1,1)+t(this.crc32(s),4)+u,y+=\"uc\"+t(C.length,2)+C);var F=\"\";F+=\"\\n\\0\",F+=o||!v&&!w?\"\\0\\0\":\"\\0\\b\",F+=c.compressionMethod,F+=t(j,2),F+=t(k,2),F+=t(c.crc32,4),F+=t(c.compressedSize,4),F+=t(c.uncompressedSize,4),F+=t(p.length,2),F+=t(y.length,2);var G=g.LOCAL_FILE_HEADER+F+p+y,H=g.CENTRAL_FILE_HEADER+t(E,2)+F+t(s.length,2)+\"\\0\\0\\0\\0\"+t(D,4)+t(d,4)+p+y+s;return{fileRecord:G,dirRecord:H,compressedObject:c}},D={load:function(a,b){throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\")},filter:function(a){var b,c,d,f,g=[];for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],f=new s(d.name,d._data,e.extend(d.options)),c=b.slice(this.root.length,b.length),b.slice(0,this.root.length)===this.root&&a(c,f)&&g.push(f));return g},file:function(a,b,c){if(1===arguments.length){if(e.isRegExp(a)){var d=a;return this.filter(function(a,b){return!b.dir&&d.test(a)})}return this.filter(function(b,c){return!c.dir&&b===a})[0]||null}return a=this.root+a,v.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(e.isRegExp(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=y.call(this,b),d=this.clone();return d.root=c.name,d},remove:function(a){a=this.root+a;var b=this.files[a];if(b||(\"/\"!=a.slice(-1)&&(a+=\"/\"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){a=e.extend(a||{},{base64:!0,compression:\"STORE\",compressionOptions:null,type:\"base64\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:m.utf8encode}),e.checkSupport(a.type),\"darwin\"!==a.platform&&\"freebsd\"!==a.platform&&\"linux\"!==a.platform&&\"sunos\"!==a.platform||(a.platform=\"UNIX\"),\"win32\"===a.platform&&(a.platform=\"DOS\");var b,c,d=[],f=0,h=0,k=e.transformTo(\"string\",a.encodeFileName(a.comment||this.comment||\"\"));for(var l in this.files)if(this.files.hasOwnProperty(l)){var p=this.files[l],q=p.options.compression||a.compression.toUpperCase(),r=j[q];if(!r)throw new Error(q+\" is not a valid compression method !\");var s=p.options.compressionOptions||a.compressionOptions||{},u=z.call(this,p,r,s),v=C.call(this,l,p,u,f,a.platform,a.encodeFileName);f+=v.fileRecord.length+u.compressedSize,h+=v.dirRecord.length,d.push(v)}var w=\"\";w=g.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+t(d.length,2)+t(d.length,2)+t(h,4)+t(f,4)+t(k.length,2)+k;var x=a.type.toLowerCase();for(b=\"uint8array\"===x||\"arraybuffer\"===x||\"blob\"===x||\"nodebuffer\"===x?new o(f+h+w.length):new n(f+h+w.length),c=0;c<d.length;c++)b.append(d[c].fileRecord),b.append(d[c].compressedObject.compressedContent);for(c=0;c<d.length;c++)b.append(d[c].dirRecord);b.append(w);var y=b.finalize();switch(a.type.toLowerCase()){case\"uint8array\":case\"arraybuffer\":case\"nodebuffer\":return e.transformTo(a.type.toLowerCase(),y);case\"blob\":return e.arrayBuffer2Blob(e.transformTo(\"arraybuffer\",y),a.mimeType);case\"base64\":return a.base64?i.encode(y):y;default:return y}},crc32:function(a,b){return f(a,b)},utf8encode:function(a){return e.transformTo(\"string\",m.utf8encode(a))},utf8decode:function(a){return m.utf8decode(a)}};b.exports=D},{\"./base64\":2,\"./compressedObject\":3,\"./compressions\":4,\"./crc32\":5,\"./defaults\":7,\"./nodeBuffer\":12,\"./signature\":15,\"./stringWriter\":17,\"./support\":18,\"./uint8ArrayWriter\":20,\"./utf8\":21,\"./utils\":22}],15:[function(a,b,c){\"use strict\";c.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",c.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",c.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",c.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",c.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],16:[function(a,b,c){\"use strict\";function d(a,b){this.data=a,b||(this.data=f.string2binary(this.data)),this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./dataReader\"),f=a(\"./utils\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6,\"./utils\":22}],17:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(){this.data=[]};e.prototype={append:function(a){a=d.transformTo(\"string\",a),this.data.push(a)},finalize:function(){return this.data.join(\"\")}},b.exports=e},{\"./utils\":22}],18:[function(a,b,c){(function(a){\"use strict\";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,c.nodebuffer=\"undefined\"!=typeof a,c.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)c.blob=!1;else{var b=new ArrayBuffer(0);try{c.blob=0===new Blob([b],{type:\"application/zip\"}).size}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;f.append(b),c.blob=0===f.getBlob(\"application/zip\").size}catch(d){c.blob=!1}}}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],19:[function(a,b,c){\"use strict\";function d(a){a&&(this.data=a,this.length=this.data.length,this.index=0,this.zero=0)}var e=a(\"./arrayReader\");d.prototype=new e,d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./arrayReader\":1}],20:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(a){this.data=new Uint8Array(a),this.index=0};e.prototype={append:function(a){0!==a.length&&(a=d.transformTo(\"uint8array\",a),this.data.set(a,this.index),this.index+=a.length)},finalize:function(){return this.data}},b.exports=e},{\"./utils\":22}],21:[function(a,b,c){\"use strict\";for(var d=a(\"./utils\"),e=a(\"./support\"),f=a(\"./nodeBuffer\"),g=new Array(256),h=0;h<256;h++)g[h]=h>=252?6:h>=248?5:h>=240?4:h>=224?3:h>=192?2:1;g[254]=g[254]=1;var i=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=e.uint8array?new Uint8Array(i):new Array(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},j=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+g[a[c]]>b?c:b},k=function(a){var b,c,e,f,h=a.length,i=new Array(2*h);for(c=0,b=0;b<h;)if(e=a[b++],e<128)i[c++]=e;else if(f=g[e],f>4)i[c++]=65533,b+=f-1;else{for(e&=2===f?31:3===f?15:7;f>1&&b<h;)e=e<<6|63&a[b++],f--;f>1?i[c++]=65533:e<65536?i[c++]=e:(e-=65536,i[c++]=55296|e>>10&1023,i[c++]=56320|1023&e)}return i.length!==c&&(i.subarray?i=i.subarray(0,c):i.length=c),d.applyFromCharCode(i)};c.utf8encode=function(a){return e.nodebuffer?f(a,\"utf-8\"):i(a)},c.utf8decode=function(a){if(e.nodebuffer)return d.transformTo(\"nodebuffer\",a).toString(\"utf-8\");a=d.transformTo(e.uint8array?\"uint8array\":\"array\",a);for(var b=[],c=0,f=a.length,g=65536;c<f;){var h=j(a,Math.min(c+g,f));e.uint8array?b.push(k(a.subarray(c,h))):b.push(k(a.slice(c,h))),c=h}return b.join(\"\")}},{\"./nodeBuffer\":12,\"./support\":18,\"./utils\":22}],22:[function(a,b,c){\"use strict\";function d(a){return a}function e(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function f(a){var b=65536,d=[],e=a.length,f=c.getTypeOf(a),g=0,h=!0;try{switch(f){case\"uint8array\":String.fromCharCode.apply(null,new Uint8Array(0));break;case\"nodebuffer\":String.fromCharCode.apply(null,j(0))}}catch(i){h=!1}if(!h){for(var k=\"\",l=0;l<a.length;l++)k+=String.fromCharCode(a[l]);return k}for(;g<e&&b>1;)try{\"array\"===f||\"nodebuffer\"===f?d.push(String.fromCharCode.apply(null,a.slice(g,Math.min(g+b,e)))):d.push(String.fromCharCode.apply(null,a.subarray(g,Math.min(g+b,e)))),g+=b}catch(i){b=Math.floor(b/2)}return d.join(\"\")}function g(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var h=a(\"./support\"),i=a(\"./compressions\"),j=a(\"./nodeBuffer\");c.string2binary=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=String.fromCharCode(255&a.charCodeAt(c));return b},c.arrayBuffer2Blob=function(a,b){c.checkSupport(\"blob\"),b=b||\"application/zip\";try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error(\"Bug : can't construct the Blob.\")}}},c.applyFromCharCode=f;var k={};k.string={string:d,array:function(a){return e(a,new Array(a.length))},arraybuffer:function(a){return k.string.uint8array(a).buffer},uint8array:function(a){return e(a,new Uint8Array(a.length))},nodebuffer:function(a){return e(a,j(a.length))}},k.array={string:f,array:d,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(a)}},k.arraybuffer={string:function(a){return f(new Uint8Array(a))},array:function(a){return g(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:d,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(new Uint8Array(a))}},k.uint8array={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:d,nodebuffer:function(a){return j(a)}},k.nodebuffer={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return k.nodebuffer.uint8array(a).buffer},uint8array:function(a){return g(a,new Uint8Array(a.length))},nodebuffer:d},c.transformTo=function(a,b){if(b||(b=\"\"),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=k[d][a](b);return e},c.getTypeOf=function(a){return\"string\"==typeof a?\"string\":\"[object Array]\"===Object.prototype.toString.call(a)?\"array\":h.nodebuffer&&j.test(a)?\"nodebuffer\":h.uint8array&&a instanceof Uint8Array?\"uint8array\":h.arraybuffer&&a instanceof ArrayBuffer?\"arraybuffer\":void 0},c.checkSupport=function(a){var b=h[a.toLowerCase()];if(!b)throw new Error(a+\" is not supported by this browser\")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d=\"\";for(c=0;c<(a||\"\").length;c++)b=a.charCodeAt(c),d+=\"\\\\x\"+(b<16?\"0\":\"\")+b.toString(16).toUpperCase();return d},c.findCompression=function(a){for(var b in i)if(i.hasOwnProperty(b)&&i[b].magic===a)return i[b];return null},c.isRegExp=function(a){return\"[object RegExp]\"===Object.prototype.toString.call(a)},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&\"undefined\"==typeof c[b]&&(c[b]=arguments[a][b]);return c}},{\"./compressions\":4,\"./nodeBuffer\":12,\"./support\":18}],23:[function(a,b,c){\"use strict\";function d(a,b){this.files=[],this.loadOptions=b,a&&this.load(a)}var e=a(\"./stringReader\"),f=a(\"./nodeBufferReader\"),g=a(\"./uint8ArrayReader\"),h=a(\"./arrayReader\"),i=a(\"./utils\"),j=a(\"./signature\"),k=a(\"./zipEntry\"),l=a(\"./support\");a(\"./object\");d.prototype={checkSignature:function(a){var b=this.reader.readString(4);if(b!==a)throw new Error(\"Corrupted zip or bug : unexpected signature (\"+i.pretty(b)+\", expected \"+i.pretty(a)+\")\")},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=l.uint8array?\"uint8array\":\"array\",c=i.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.versionMadeBy=this.reader.readString(2),this.versionNeeded=this.reader.readInt(2),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readString(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(j.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readString(4)===j.CENTRAL_FILE_HEADER;)a=new k({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(j.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,j.LOCAL_FILE_HEADER);throw b?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip : can't find end of central directory\")}this.reader.setIndex(a);var c=a;if(this.checkSignature(j.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(a),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,j.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,j.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(e)+\" bytes.\")},prepareReader:function(a){var b=i.getTypeOf(a);if(i.checkSupport(b),\"string\"!==b||l.uint8array)if(\"nodebuffer\"===b)this.reader=new f(a);else if(l.uint8array)this.reader=new g(i.transformTo(\"uint8array\",a));else{if(!l.array)throw new Error(\"Unexpected error: unsupported type '\"+b+\"'\");this.reader=new h(i.transformTo(\"array\",a))}else this.reader=new e(a,this.loadOptions.optimizedBinaryString)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{\"./arrayReader\":1,\"./nodeBufferReader\":13,\"./object\":14,\"./signature\":15,\"./stringReader\":16,\"./support\":18,\"./uint8ArrayReader\":19,\"./utils\":22,\"./zipEntry\":24}],24:[function(a,b,c){\"use strict\";function d(a,b){this.options=a,this.loadOptions=b}var e=a(\"./stringReader\"),f=a(\"./utils\"),g=a(\"./compressedObject\"),h=a(\"./object\"),i=a(\"./support\"),j=0,k=3;d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},prepareCompressedContent:function(a,b,c){return function(){var d=a.index;a.setIndex(b);var e=a.readData(c);return a.setIndex(d),e}},prepareContent:function(a,b,c,d,e){return function(){var a=f.transformTo(d.uncompressInputType,this.getCompressedContent()),b=d.uncompress(a);if(b.length!==e)throw new Error(\"Bug : uncompressed data size mismatch\");return b}},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize==-1||this.uncompressedSize==-1)throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)\");if(b=f.findCompression(this.compressionMethod),null===b)throw new Error(\"Corrupted zip : compression \"+f.pretty(this.compressionMethod)+\" unknown (inner file : \"+f.transformTo(\"string\",this.fileName)+\")\");if(this.decompressed=new g,this.decompressed.compressedSize=this.compressedSize,this.decompressed.uncompressedSize=this.uncompressedSize,this.decompressed.crc32=this.crc32,this.decompressed.compressionMethod=this.compressionMethod,this.decompressed.getCompressedContent=this.prepareCompressedContent(a,a.index,this.compressedSize,b),this.decompressed.getContent=this.prepareContent(a,a.index,this.compressedSize,b,this.uncompressedSize),this.loadOptions.checkCRC32&&(this.decompressed=f.transformTo(\"string\",this.decompressed.getContent()),h.crc32(this.decompressed)!==this.crc32))throw new Error(\"Corrupted zip : CRC32 mismatch\");\n},readCentralPart:function(a){if(this.versionMadeBy=a.readInt(2),this.versionNeeded=a.readInt(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4),this.fileNameLength=a.readInt(2),this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");this.fileName=a.readData(this.fileNameLength),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===j&&(this.dosPermissions=63&this.externalFileAttributes),a===k&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=new e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index;for(this.extraFields=this.extraFields||{};a.index<e+this.extraFieldsLength;)b=a.readInt(2),c=a.readInt(2),d=a.readString(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=i.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=h.utf8decode(this.fileName),this.fileCommentStr=h.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileName)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileComment)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null}},b.exports=d},{\"./compressedObject\":3,\"./object\":14,\"./stringReader\":16,\"./support\":18,\"./utils\":22}],25:[function(a,b,c){\"use strict\";var d=a(\"./lib/utils/common\").assign,e=a(\"./lib/deflate\"),f=a(\"./lib/inflate\"),g=a(\"./lib/zlib/constants\"),h={};d(h,e,f,g),b.exports=h},{\"./lib/deflate\":26,\"./lib/inflate\":27,\"./lib/utils/common\":28,\"./lib/zlib/constants\":31}],26:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e=\"string\"==typeof b.dictionary?j.string2buf(b.dictionary):\"[object ArrayBuffer]\"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a(\"./zlib/deflate\"),i=a(\"./utils/common\"),j=a(\"./utils/strings\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,\"string\"==typeof a?e.input=j.string2buf(a):\"[object ArrayBuffer]\"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||(\"string\"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/deflate\":33,\"./zlib/messages\":38,\"./zlib/zstream\":40}],27:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a(\"./zlib/inflate\"),h=a(\"./utils/common\"),i=a(\"./utils/strings\"),j=a(\"./zlib/constants\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=a(\"./zlib/gzheader\"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,\"string\"==typeof a?m.input=i.binstring2buf(a):\"[object ArrayBuffer]\"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l=\"string\"==typeof p?i.string2buf(p):\"[object ArrayBuffer]\"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/constants\":31,\"./zlib/gzheader\":34,\"./zlib/inflate\":36,\"./zlib/messages\":38,\"./zlib/zstream\":40}],28:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if(\"object\"!=typeof c)throw new TypeError(c+\"must be non-object\");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],29:[function(a,b,c){\"use strict\";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c=\"\",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a(\"./common\"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{\"./common\":28}],30:[function(a,b,c){\"use strict\";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],31:[function(a,b,c){\"use strict\";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],32:[function(a,b,c){\"use strict\";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],33:[function(a,b,c){\"use strict\";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a(\"../utils/common\"),F=a(\"./trees\"),G=a(\"./adler32\"),H=a(\"./crc32\"),I=a(\"./messages\"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./messages\":38,\"./trees\":39}],34:[function(a,b,c){\"use strict\";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}b.exports=d},{}],35:[function(a,b,c){\"use strict\";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg=\"invalid literal/length code\",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg=\"invalid distance code\",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],36:[function(a,b,c){\"use strict\";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg=\"\",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg=\"incorrect header check\",c.mode=ma;break}if((15&m)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg=\"invalid window size\",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(57344&c.flags){a.msg=\"unknown header flags set\",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,\nn+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg=\"header crc mismatch\",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg=\"invalid block type\",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg=\"invalid stored block lengths\",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg=\"too many length or distance symbols\",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid code lengths set\",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg=\"invalid bit length repeat\",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg=\"invalid bit length repeat\",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg=\"invalid code -- missing end-of-block\",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid literal/lengths set\",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg=\"invalid distances set\",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg=\"invalid literal/length code\",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg=\"invalid distance code\",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg=\"invalid distance too far back\",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg=\"invalid distance too far back\",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg=\"incorrect data check\",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg=\"incorrect length check\",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a(\"../utils/common\"),t=a(\"./adler32\"),u=a(\"./crc32\"),v=a(\"./inffast\"),w=a(\"./inftrees\"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./inffast\":35,\"./inftrees\":37}],37:[function(a,b,c){\"use strict\";var d=a(\"../utils/common\"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{\"../utils/common\":28}],38:[function(a,b,c){\"use strict\";b.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],39:[function(a,b,c){\"use strict\";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a(\"../utils/common\"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{\"../utils/common\":28}],40:[function(a,b,c){\"use strict\";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomActiveList {\n   get key() {\n      return \"activelist\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.list, webix.ActiveContent);\n   }\n};\n","/*\n * countfooter\n *\n * Add the count footer to the webix's datatable.\n *\n */\n\nmodule.exports = class ABCountFooter {\n   get key() {\n      return \"countfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.countColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               var rowData = datatable.find({}) || [];\n               rowData.forEach((row) => {\n                  if (row == null) return;\n\n                  var data =\n                     row[info.columnId] || row[info.columnId + \"__relation\"];\n\n                  // array\n                  if (data && Array.isArray(data)) {\n                     result += data.length;\n                  } else if (\n                     data != null &&\n                     data != \"\" &&\n                     data != false &&\n                     data != \"false\" &&\n                     data != \"0\"\n                  ) {\n                     result += 1;\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * Custom Component Manager\n * Make sure our {ABComponent}s are initialized with our custom\n * Webix Components.\n */\n\n// Import our Custom Components here:\nvar componentList = [\n   require(\"./activelist\"),\n   require(\"./countfooter\"),\n   require(\"./datetimepicker\"),\n   require(\"./editlist\"),\n   require(\"./edittree\"),\n   require(\"./editunitlist\"),\n   require(\"./focusableTemplate\"),\n   require(\"./formioPreview\"),\n   require(\"./formioBuilder\").default,\n   require(\"./numbertext\"),\n   require(\"./thaicalendar\"),\n   require(\"./timepicker\"),\n   require(\"./tinyMce\").default,\n   require(\"./totalfooter\"),\n   require(\"./treesuggest\"),\n   // require('./savablelayout')\n];\n\nmodule.exports = class ABCustomComponentManager {\n   constructor() {}\n\n   initComponents(App) {\n      App.custom = App.custom || {};\n\n      componentList.forEach((Component) => {\n         var component = new Component(App);\n         App.custom[component.key] = component;\n      });\n\n      // Transition to v2:\n      App.AB.custom = App.custom;\n   }\n};\n","/*\n * custom_datetimepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomDateTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"datetimepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_datetimepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.datetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: \"calendar\",\n            icons: true,\n            borderless: true,\n            timepicker: true\n         }\n      };\n\n      webix.editors.datetime = webix.extend(\n         {\n            popupType: \"datetime\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n   }\n};\n","/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditTree {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"edittree\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n   }\n};\n","/*\n * custom_editunitlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditUnitList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editunitlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n      /*\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n*/\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.unitlist);\n   }\n};\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFocusableTemplate {\n   get key() {\n      return \"focusabletemplate\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         focus: function() {\n            return false;\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.template, webix.UIManager);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n * Note: Moved from ABDesigner to prevent loading formIO library globally or\n * duplicating it. Revisit when formIOv5 releases as it should then be possible\n * to package the form renderer without the builder.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n */\nimport ABLazyCustomComponent from \"./lazyComponent.js\";\nexport default class ABCustomFormBuilderBuilder extends ABLazyCustomComponent {\n   get key() {\n      return \"formiobuilder\";\n   }\n\n   constructor(App) {\n      super(App);\n      this.label = this.AB.Label();\n      this.view = this.key;\n   }\n\n   /**\n    * Load the FormIO dependency and add the component to webix\n    * @returns {Promise<null>}\n    */\n   async init() {\n      if (this.initialized) return;\n      const { FormBuilder } = await import(\n         /* webpackPrefetch: true */\n         /* webpackFetchPrioirtiy: \"low\" */\n         \"../init/formio.js\"\n      );\n      this.FormBuilder = FormBuilder;\n      // Tell Webix to create an INSTANCE of our custom component:\n      this.AB.Webix.protoUI(this.ui(), this.AB.Webix.ui.popup);\n      this.initialized = true;\n   }\n\n   /**\n    * Generate the custom webix ui\n    * @method ui\n    * @returns {Object} custom webix ui\n    */\n   ui() {\n      return {\n         name: this.key,\n         defaults: {\n            css: \"scrolly forceOpen\",\n            hidden: false,\n            autofit: true,\n         },\n         $init: async function (config) {\n            const comp = this.parseDataFields(config.dataFields);\n            const formComponents = config.formComponents\n               ? config.formComponents\n               : { components: [comp.approveButton.schema] };\n            try {\n               this.builder = new this.FormBuilder(this.$view, formComponents, {\n                  noDefaultSubmitButton: true,\n                  noNewEdit: true,\n                  builder: {\n                     basic: false,\n                     advanced: false,\n                     customBasic: false,\n                     premium: false,\n                     custom: {\n                        title: this.label(\"Fields\"),\n                        weight: 0,\n                        default: true,\n                        components: comp,\n                     },\n                     layout: {\n                        components: {\n                           table: true,\n                        },\n                     },\n                  },\n               });\n               await this.builder.ready;\n            } catch (err) {\n               this.notify(\"Error initializing formio builder\", err);\n            }\n         },\n         // set up a function that can be called to request the form schema\n         getFormData: function () {\n            return this.builder.schema;\n         },\n         // Pass functions into the Webix component to be use in $init\n         label: this.label,\n         parseDataFields: this.parseDataFields,\n         notify: this.AB.notify.developer,\n         FormBuilder: this.FormBuilder,\n      };\n   }\n\n   /**\n    * Generate the formio custom components based on the fields.\n    * Used internally in the webix component.\n    * @method parseDataFields\n    * @param {object[]} fields {field: ABField, key, label, object: ABObject}\n    * @returns {object} each key is a formio component\n    */\n   parseDataFields(fields) {\n      const components = {};\n      fields.forEach(({ field, key, label }) => {\n         if (!field) return;\n\n         const schema = {\n            abFieldID: field.id,\n            label: field.label,\n            disabled: true,\n            key,\n            _key: key,\n            type: \"textfield\",\n            input: true,\n         };\n\n         switch (field.key) {\n            case \"boolean\":\n               schema.type = \"checkbox\";\n               break;\n            case \"calculate\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = ${field.settings.formula\n                  .replace(/{/g, \"data['\")\n                  .replace(/}/g, \"']\")}`;\n               break;\n            case \"connectObject\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = data['${key}.format']`;\n               break;\n            case \"date\":\n               schema.type = \"datetime\";\n               schema.format = \"MMMM d, yyyy\";\n               break;\n            case \"datetime\":\n               schema.type = \"datetime\";\n               schema.format = \"MMMM d, yyyy h:mm a\";\n               break;\n            case \"email\":\n               schema.type = \"email\";\n               break;\n            case \"file\":\n               schema.type = \"htmlelement\";\n               schema.tag = \"a\";\n               schema.className = \"btn btn-primary btn-block\";\n               schema.content = `<i class='fa fa-paperclip'></i> {{data['${key}']?.filename ?? \"No File\"}}`;\n               schema.attrs = [\n                  {\n                     attr: \"href\",\n                     value: field.urlFile(`{{data['${key}'].uuid}}`),\n                  },\n                  {\n                     attr: \"target\",\n                     value: \"_blank\",\n                  },\n               ];\n               schema.refreshOnChange = true;\n               schema.input = false;\n               break;\n            case \"image\":\n               schema.type = \"htmlelement\";\n               schema.tag = \"img\";\n               schema.className = \"img-thumbnail max100\";\n               schema.content = \"\";\n               (schema.attrs = [\n                  {\n                     attr: \"src\",\n                     value: field.urlImage(`{{data['${key}']}}`),\n                  },\n               ]),\n                  (schema.refreshOnChange = true);\n               schema.input = false;\n               break;\n            case \"list\":\n               var values = [];\n               field.settings.options.forEach((opt) => {\n                  values.push({\n                     label: opt.text,\n                     value: opt.id,\n                  });\n               });\n               schema.type = \"select\";\n               schema.data = { values };\n               schema.multiple = field.settings.isMultiple;\n               break;\n            case \"LongText\":\n               schema.type = \"textarea\";\n               break;\n            case \"number\":\n               schema.type = \"number\";\n               break;\n            case \"TextFormula\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = '${field.settings.textFormula}'`;\n               break;\n            default:\n               break;\n         }\n         components[key] = {\n            title: label,\n            key,\n            icon: field.icon,\n            schema,\n         };\n      });\n\n      components[\"approveButton\"] = {\n         title: this.label(\"Approve Button\"),\n         key: \"approve\",\n         icon: \"check-square\",\n         schema: {\n            label: this.label(\"Approve\"),\n            type: \"button\",\n            key: \"approve\",\n            event: \"approve\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-thumbs-up\",\n            action: \"event\",\n            theme: \"success\",\n         },\n      };\n      components[\"denyButton\"] = {\n         title: this.label(\"Deny Button\"),\n         key: \"deny\",\n         icon: \"ban\",\n         schema: {\n            label: this.label(\"Deny\"),\n            type: \"button\",\n            key: \"deny\",\n            event: \"deny\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-thumbs-down\",\n            action: \"event\",\n            theme: \"danger\",\n         },\n      };\n      components[\"customButton\"] = {\n         title: this.label(\"Custom Action Button\"),\n         key: \"custom\",\n         icon: \"cog\",\n         schema: {\n            label: this.label(\"Custom Name\"),\n            type: \"button\",\n            key: \"custom\",\n            event: \"yourEvent\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-cog\",\n            action: \"event\",\n            theme: \"primary\",\n         },\n      };\n      return components;\n   }\n}\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n *\n */\nconst ABLazyCustomComponent = require(\"./lazyComponent.js\");\nmodule.exports = class ABCustomFormIOPreview extends ABLazyCustomComponent {\n   get key() {\n      return \"formiopreview\";\n   }\n\n   async init() {\n      if (this.initialized) return;\n      const { Form } = await import(\n         /* webpackPrefetch: true */\n         /* webpackFetchPrioirtiy: \"low\" */\n         \"../init/formio.js\"\n      );\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly\",\n            borderless: true,\n         },\n         $init: async function (config) {\n            this.$ready.push(() => this.initForm(config));\n         },\n\n         initForm: async (config) => {\n            var formComponents = config.formComponents ?? {};\n            var formData = config.formData ?? {};\n            const component = $$(config.id);\n            // we need to find out when we are passing an array of objects and reduce it down to an array of IDs\n            for (var data in formData) {\n               if (\n                  Array.isArray(formData[data]) &&\n                  typeof formData[data][0] == \"object\"\n               ) {\n                  formData[data] = formData[data].map((item) => item.id);\n               }\n            }\n\n            const form = new Form(component.$view, formComponents);\n            // readOnly: true\n            // sanitizeConfig: {\n            //     addTags: [\"a\", \"label\", \"img\", \"i\"],\n            //     addAttr: [\"src\", \"href\", \"class\", \"target\"]\n            // }\n            // }).then(function (form) {\n            await form.build();\n            // now that it is set up we can push it into the global var\n            // formBuilder = builder;\n            // Provide a default submission.\n            form.instance.submission = {\n               data: formData,\n            };\n            (formComponents.components || []).forEach((comp) => {\n               if (\n                  comp.type == \"button\" &&\n                  comp.action == \"event\" &&\n                  comp.event\n               ) {\n                  form.instance.once(comp.event, function (/* click */) {\n                     config?.onButton(comp.event);\n                     // _this.emit(\"button\", comp.event);\n                  });\n               }\n            });\n            // });\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      this._logic = {};\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      this.AB.Webix.protoUI(_ui, this.AB.Webix.ui.view);\n      this.initialized = true;\n   }\n};\n","/**\n * Base class for any custom webix component that we want to initalize lazily,\n * usually to reduce the dependency size required on load.\n */\nvar ABEmitter = require(\"../AppBuilder/platform/ABEmitter.js\");\nmodule.exports = class ABLazyCustomComponent extends ABEmitter {\n   constructor({ AB }) {\n      super();\n      this.initialized = false;\n      this.AB = AB;\n      this.setDefaultUI();\n   }\n\n   /**\n    * Sets a default UI used before the actual webix component is ready. Meant as\n    * a helper to future developers.\n    */\n   setDefaultUI() {\n      this.AB.Webix.protoUI(\n         {\n            name: this.key,\n            defaults: {\n               template:\n                  \"This custom webix component has not been initialized. <br>Call AB.custom.#key#.init() before using this component.\",\n               data: { key: this.key },\n            },\n            $init: () =>\n               console.warn(\n                  `${this.key} custom webix component used before being initalized`\n               ),\n         },\n         this.AB.Webix.ui.template\n      );\n   }\n};\n","/*\n * numbertext\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomNumberText {\n   get key() {\n      return \"numbertext\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n\n         defaults: {\n            css: \"webix_el_text\"\n         },\n\n         // override this function to return number value type\n         $getValue: function() {\n            var val = this.getInputNode().value;\n            if (val) return JSON.parse(val);\n            // Convert to number\n            else return \"\";\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.text);\n   }\n};\n","/*\n * Thai Calendar\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomThaiCalendar {\n   get key() {\n      return \"thaicalendar\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      this.view = this.key;\n\n      const i18n = webix.i18n;\n\n      // Our webix UI definition:\n      const _ui = {\n         name: this.key,\n         defaults: {\n            calendarHeader: function (d) {\n               return `${i18n.calendar.monthFull[d.getMonth()]} ${\n                  d.getFullYear() + 543\n               }`;\n            },\n         },\n      };\n\n      if (webix.ui.calendar.$protoWait[0]._zoom_logic) {\n         _ui._zoom_logic = AB.cloneDeep(\n            webix.ui.calendar.$protoWait[0]._zoom_logic\n         );\n         _ui._zoom_logic[1] = Object.assign(_ui._zoom_logic[1], {\n            _getTitle: this._getYearTitle,\n         });\n         _ui._zoom_logic[2] = Object.assign(_ui._zoom_logic[2], {\n            _getTitle: this._getYearRangeTitle,\n            _getContent: this._getYearContent,\n            _setContent: this._setYear,\n         });\n      }\n\n      if (webix.ui.calendar.$protoWait[0].Qd) {\n         _ui.Qd = AB.cloneDeep(webix.ui.calendar.$protoWait[0].Qd);\n         _ui.Qd[1] = Object.assign(_ui.Qd[1], {\n            Jv: this._getYearTitle,\n         });\n         _ui.Qd[2] = Object.assign(_ui.Qd[2], {\n            Jv: this._getYearRangeTitle,\n            Zv: this._getYearContent,\n            Xv: this._setYear,\n         });\n      }\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.calendar);\n\n      webix.editors.$popup.thaidate = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: false,\n         },\n      };\n\n      webix.editors.$popup.thaidatetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.thaidate = webix.extend(\n         {\n            popupType: \"thaidate\",\n         },\n         webix.editors.date\n      );\n\n      webix.editors.thaidatetime = webix.extend(\n         {\n            popupType: \"thaidatetime\",\n         },\n         webix.editors.date\n      );\n   }\n\n   _getYearTitle(date) {\n      return date.getFullYear() + 543;\n   }\n\n   _getYearRangeTitle(date, calendar) {\n      let start = date.getFullYear() + 543;\n      calendar._zoom_start_date = start = start - (start % 10) - 1;\n      return start + \" - \" + (start + 10 + 1);\n   }\n\n   _getYearContent(i, calendar) {\n      return calendar._zoom_start_date + i;\n   }\n\n   _setYear(next, i, calendar) {\n      next.setFullYear(calendar._zoom_start_date - 543 + i);\n   }\n};\n","/*\n * custom_timepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"timepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_timepicker\") // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.time = {\n         view: \"popup\",\n         body: {\n            view: \"calendar\",\n            width: 220,\n            height: 200,\n            type: \"time\"\n         }\n      };\n\n      webix.editors.time = webix.extend(\n         {\n            popupType: \"time\"\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * tinyMce\n *\n * Create a custom webix component.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n */\nimport ABLazyCustomComponent from \"./lazyComponent.js\";\nexport default class ABCustomTinyMCE extends ABLazyCustomComponent {\n   get key() {\n      return \"tinymce-editor\";\n   }\n\n   async init() {\n      if (this.initialized) return;\n\n      await import(\n         /* webpackPrefetch: true */\n         \"../js/webix/extras/tinymce.js\"\n      );\n      this.initialized = true;\n   }\n}\n","/*\n * totalfooter\n *\n * Add the contents of records to show in footer of the webix's datatable.\n *\n */\n\nmodule.exports = class ABTotalFooter {\n   get key() {\n      return \"totalfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.totalColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               datatable.eachRow(function (row) {\n                  var record = datatable.getItem(row);\n\n                  var data = info.field.format(record);\n\n                  // array\n                  if (data) {\n                     result += parseFloat(data); // we need to use parseFloat because numbers could be decimals\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"treesuggest\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {}\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key)\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            type: \"tree\",\n            width: 0,\n            body: {\n               borderless: true,\n               select: true,\n               template: function(obj, common) {\n                  return (\n                     \"<span>\" +\n                     (obj.$count ? \"<b>\" + obj.value + \"</b>\" : obj.value) +\n                     \"</span>\"\n                  );\n               },\n               ready: function() {\n                  this.openAll();\n               },\n               on: {\n                  onAfterSelect: function(id, e) {\n                     if (this.getItem(id).$count) {\n                        this.getParentView().setMasterValue(\"\");\n                        this.show(\n                           $$(this.getParentView().config.master).getInputNode()\n                        );\n                     }\n                  }\n               }\n            }\n         }\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.suggest);\n   }\n};\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","EventEmitter","constructor","super","this","isAuthenticated","_config","_listRoles","_listScopes","_listUsers","init","AB","UserConfig","Config","userConfig","MetaConfig","metaConfig","roles","scopes","users","Network","on","context","err","data","console","error","emit","Promise","canSwitcheroo","r","uuid","length","isSwitcherood","userReal","isSystemDesigner","email","language","languageCode","logout","post","url","tenantUrl","Tenant","setting","key","fn","filter","rolesAll","username","userList","imageID","image_id","sendEmailNotifications","Alert","opts","webix","alert","title","Multilingual","label","text","message","ok","Confirm","labelYes","labelNo","cancel","confirm","callback","result","fnYes","fnNo","ConfirmDelete","Message","timeout","expire","MLClass","_missingLabelID","_missingLabels","_pluginLabelsMissing","labels","labelConfig","_languages","languageConfig","pluginLabels","currentLanguage","Account","altText","values","postMissing","arguments","Array","isArray","replace","newKey","slice","postMissingLabel","forEach","v","i","sub","replaceAll","labelPlugin","plugin","languages","pluginLoadLabels","pluginLabelReport","warn","JSON","stringify","clearTimeout","sendBatch","batchLabels","missingLabels","k","l","shift","push","then","catch","toString","indexOf","setTimeout","destroy","save","toObj","toDefinition","Atomic","parent","wildcard","newListener","maxListeners","baseURL","numRetries","_network","isRealTime","options","siteConfig","appbuilder","urlCoreServer","networkNumRetries","get","params","jobResponse","type","useThese","search","val","encodeURIComponent","join","_request","put","delete","isNetworkConnected","salSend","packet","_retry","notify","developer","publishResponse","reject","headers","authToken","Authorization","tenantID","method","statusText","Analytics","log","_err","status","responseText","parse","response","queue","resend","listSocketEvents","ev","io","socket","obj","objectByID","objectId","model","jobID","performance","op","normalizeData","isConnected","route","query","match","http","undefined","toLowerCase","request","jwres","statusCode","errStr","body","Stringify","setMaxListeners","queueLock","_queueCount","Lock","networkType","queueFlush","idConnectionCheck","window","addEventListener","_connectionCheck","networkStatus","navigator","connection","Connection","onLine","NONE","refQueue","queueCount","acquire","Storage","set","release","logError","processRequest","cb","entry","job","res","rej","reset","getTokens","tenantStorage","Webix","storage","prefix","local","value","clear","remove","clearAll","_storage","config","encrypted","textClickToEnter","String","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthLarge","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","innerWidth","icons","ABValidator","errors","addError","name","pass","fail","toValidationObject","invalidAttributes","attr","updateForm","form","vObj","Validation","isFormValidationError","updateGrid","rowID","grid","isGridValidationError","ABFactory","definitions","Dialog","ClassUI","Class","FilterComplex","ABViewManager","UISettings","validator","errorSailsCleanup","raw","hasFocused","attrs","wasForm","elements","msg","markInvalid","focus","row","Grid","wasGrid","addCellCss","refresh","clearSelection","Definitions","_plugins","_pendingNetworkRequests","fullDef","pending","pkt","newDef","definitionNew","serverDef","definitionCreate","_definitions","platformRules","toDate","dateText","ignoreTime","format","isValid","Date","toDateFormat","date","momentObj","localeCode","locale","subtractDate","number","unit","subtract","addDate","add","rules","async","allInits","all","_localSettings","json","definitionSync","def","domain","info","plugins","pluginLoad","p","cloneDeep","rest","emitData","Label","localSettings","isUUID","RegExp","test","merge","orderBy","uniq","kebabCase","sumBy","meanBy","maxBy","minBy","isString","ABMLClass","attributes","appType","versionData","versionNumber","changeLog","author","version","keepVersion","commitMessage","timestamp","toISOString","icon","isSystemObject","roleAccess","isAccessManaged","accessManagers","isTranslationManaged","translationManagers","isTutorialManaged","tutorialManagers","hintIDs","objectIDs","queryIDs","datacollectionIDs","newPages","pageIDs","definitionByID","pageNew","appID","pageID","_pages","processIDs","pID","processByID","processID","objectListSettings","isOpen","searchText","sortDirection","isGroup","translations","fromValues","ViewManager","isAccessibleForRoles","foundRole","parseInt","useRole","role","pages","isWebApp","isMobile","datacollectionsExcluded","datacollections","datacollectionsIncluded","sort","sortFn","a","b","localeCompare","objectsExcluded","objects","objectsIncluded","hintsExcluded","hints","h","hintsIncluded","connectedObjects","connectedFields","connectFields","connectedObj","f","settings","linkObject","linkedObjects","currObjID","linkedObjectID","linkedFields","columnName","deep","_searchDeep","curr","items","resultsCurr","resultsP","concat","processes","hasProcess","process","views","_views","subViews","lookDeep","view","pageViews","subPages","viewAll","allViews","queriesExcluded","queries","q","queriesIncluded","urlResolve","pointer","parts","split","parseStep","steps","urlPointer","acrossApp","urlObject","urlPage","urlQuery","objectlistIsOpen","objectlistSearchText","objectlistSortDirection","objectlistIsGroup","newView","pageByID","viewNew","application","ABViewManagerMobile","ABApplication","pageDefault","DefaultValues","object","datasourceID","linkDatacollectionID","linkFieldID","followDatacollectionID","objectWorkspace","filterConditions","glue","sortFields","loadAll","populate","isQuery","fixSelect","syncType","__dataCollection","_dataCollectionNew","refreshFilterConditions","__bindComponentIds","__flexComponentIds","_dataStatus","dataStatusFlag","notInitial","__filterCond","static","preventPopulate","__datasource","queryByID","__treeCollection","_treeCollectionNew","__isGroup","removeFromApplications","next","apps","applications","allRemoves","app","datacollectionRemove","$dc","datasource","datacollection","sourceType","datacollectionLink","datacollectionByID","fieldLink","fieldByID","initializing","initialized","dataStatus","setCursor","itemId","setCursorTree","currTreeId","getCursor","currTreeItem","getItem","_itemId","dc","__previousCursorId","exists","tc","find","treeItem","$parent","treeCursor","currId","currItem","item","currItemAndChilds","serialize","refreshLinkCursor","getFirstRecord","getFirstId","getNextRecord","record","getNextId","linkCursor","dvLink","filterData","rowData","isParentFilterValid","setStaticCursor","currentUserUsername","userFields","fields","found","currRowId","rowId","isCursorFollow","dcFollow","datacollectionFollow","loadData","filterCondition","cond","___AD","onAfterCursorChange","attachEvent","currData","isRelated","relateData","PK","needAdd","updatedVals","bad","ABObjectQuery","objList","where","newDataId","alias","objectAlias","rule","findAll","newQueryData","updatedV","isValidData","__reloadWheres","bcids","$$","pos","getParentView","index","DC","addView","L","css","click","event","reloadData","removeView","parseTreeCollection","datasourceLink","d","updateItemData","updateRelateVal","relationName","rowRelateVal","valIsRelated","updateItem","needUpdate","isExists","updatedIds","updatedTreeIds","_queryUpdateData","ABObject","count","assign","dcItem","staleRefresh","deleteId","needDelete","deletedIds","deletedTreeIds","delId","updateRelateVals","relateVal","linkDC","eventAdd","emitter","eventName","listener","currentCursor","previousCursorId","followDC","followCursor","eventRemove","start","limit","sorts","wheres","__additionalWheres","dataCollectionLink","linkCursorId","getRelationValue","unshift","skip","parentDc","waitForDataCollectionToInitialize","dcFilters","dv","_pendingLoadDataResolve","platformFind","processIncomingData","incomingData","total_count","nextData","remain","splice","parsedData","queuedParse","__totalCount","__throttleIncoming","load","reloadTimer","reloadPromise","reloadPromise__resolve","reloadPromise__reject","reloadWheres","getData","linkDv","linkObj","linkVal","totalCount","bind","unbind","removeComponent","comId","__filterDatasource","filterComplexNew","fieldsLoad","setValue","__filterDatacollection","__filterScope","scopeList","userScopes","s","allowAll","objectIds","scopeRules","sRules","scopeWhere","syncTypeFlag","server","client","oItem","tran","updatedTran","tranKey","clone","clonedDatacollection","parseMe","cursorID","filteredClone","filters","evt","__events","eventClear","removeListener","builder","definitionDestroy","definitionUpdate","ABApplicationMobile","ABDefinition","ABComponent","ABFieldManager","ABIndex","ABObjectExternal","ABObjectImport","ABObjectApi","ABDataCollection","ABHint","ABProcess","ABProcessParticipant","ABProcessLane","ABProcessTaskManager","ABStep","ABViewDetailItem","ABViewFormItem","ABMobileViewFormItem","RowFilter","hash","_allApplications","_allObjects","_allHints","_allProcesses","_allQueries","_allSteps","_allDatacollections","nameFilter","toApplicationNameFormat","toFieldRelationFormat","colName","toJunctionTableFK","objectName","fkName","substring","toJunctionTableNameFormat","appName","sourceTableName","targetTableName","toObjectNameFormat","definitionClean","allDefinitions","keyList","keyFn","objectKeysByDef","isRaw","definitionsParse","defs","applicationByID","ID","applicationNew","applicationMobileNew","datacollectionNew","fieldNew","newField","indexNew","objectNew","isExternal","isImported","isAPI","objectFile","objectLanguage","objectProcessForm","objectProcessInstance","objectRole","objectScope","objectToken","objectUser","objectKey","objectSecret","hintID","hintNew","stepID","stepNew","stepDef","hint","processNew","processElementNew","taskDef","defaults","newTask","processElementNewForModelDefinition","element","newElement","defaultDef","definitionForElement","fromElement","queryNew","rowfilterNew","App","idBase","_App","viewNewDetatched","_mockApp","_notifyInfo","moreInfo","objectID","fieldID","fieldName","datacollectionID","datacollectionName","ds","datacollectionDSID","datacollectionDSName","processName","_tenantID","user","_user","taskID","taskName","applicationID","applicationName","viewID","viewName","viewKey","Fields","FIELD","active","hasOwnProperty","description","transition","showIntroStep","stepIDs","_steps","sID","ele","stepAdd","step","stepByID","stepRemove","stepIndex","unique","fieldIDs","_unknownFieldIDs","field","fId","attributeFieldIDs","indexName","dbTableName","uniqueName","ABEmitter","fieldList","mlFields","translate","defaultTranslations","language_code","languageDefault","unTranslate","currLanguage","first","t","foundOne","trans","_where","_sort","_skip","_limit","staleRefreshInProcess","staleRefreshMap","staleRefreshPending","staleRefreshTimerID","responseContext","contextKey","contextValues","prepareMultilingualData","multilingualFields","shouldTranslate","urlParamsCreate","urlRest","urlParamsDelete","urlRestItem","urlParamsFind","urlParamsUpdate","urlRestCount","numberOfRows","currID","Err","staleRefreshProcess","currentEntries","responseHash","allKeys","findConnected","results","myObj","linkType","returnData","upsert","dateFields","calculatedFields","c","objectLink","olPK","relatedMlFields","subData","relationValue","calField","ABModelApi","readonly","apiType","isFetched","getPagingValues","pagingSettings","paging","dataFromKey","itemResult","dataKey","header","ABModel","ABObjectCore","connName","labelFormat","labelSettings","isNoLabelDisplay","tableName","primaryColumnName","transColumnName","urlPath","createdInAppID","frozenColumnID","hiddenFields","importedFieldIDs","_fields","importIndexes","indexIDs","_unknownIndex","indexes","_indexes","objectLinks","isConnection","fieldImport","fieldRemove","origLen","fid","fieldReorder","sourceId","targetId","itemMoved","oPos","j","fieldSave","fieldAdd","imageFields","isMultilingual","indexByID","indexRemove","idx","indexSave","urlRestBatch","urlRestLog","urlRestRefresh","workspaceSortFields","workspaceViews","currView","getCurrentView","workspaceFilterConditions","workspaceFrozenColumnID","workspaceHiddenFields","isReadOnly","defaultValues","defaultValue","urlField","remoteCreate","cloneOne","prop","minRelationData","colIds","colId","colIdNoBracket","displayData","labelData","defaultField","fieldUseAsLabel","trim","noLabelText","ABModelQuery","__missingObject","__missingFields","__cantFilter","__duplicateFields","__linkProblems","alias2Obj","importJoins","joins","importFields","_objectWorkspaceViews","objectWorkspaceViews","grouping","hidePrefix","exportJoins","exportFields","fieldSettings","newFields","fieldInfo","objectByAlias","_objects","objID","canFilterField","isNew","clonedField","currFields","_joins","objectBase","links","_links","uniqueObjectIDs","newLinks","storeObject","storeLinks","link","processJoin","baseObject","linkField","rootObject","canFilterObject","linkedObject","isDisabled","disabled","_concat","ABProcessTaskSubProcess","onProcessReady","xmlDefinition","currElements","_elements","elementIDs","eID","_connections","connections","diagramID","modelDefinition","modelNew","modelUpdate","xml","allConnections","connectionForDiagramID","dID","connectionsIncoming","to","connectionsOutgoing","from","connectionRemove","connectionSimplyElement","bo","businessObject","sourceRef","targetRef","connectionUpsert","simpleConn","elementAdd","elementByID","elementForDiagramID","elementRemove","isTriggeredBy","taskForTriggerKey","connectionNextTask","currElement","connectionPreviousTask","processData","tasksToAsk","allPreviousTasks","queryPreviousTasks","processDataFields","allPreviousConnectionsForConnection","conn","hashConn","allPreviousConnectionsForElement","prevConnections","task","prevTasks","processDataObjects","triggerKey","list","param","responses","processedIDs","apply","el","AllViews","Views","default","common","V","getFieldVal","pureRelationName","isNaN","_settings","condition","_QueryFields","_Fields","_logic","callbacks","onChange","removeHtmlTags","div","document","createElement","innerHTML","textContent","innerText","condResult","ruleFieldType","connectedVal","indexField","indexField2","fieldVal","getConnectFieldValue","textValid","dateValid","numberValid","listValid","booleanValid","userValid","connectFieldValid","thisObjectValid","compareValue","compareArray","queryFieldValid","Number","queryId","fieldId","qIdBase","inQueryFieldFilter","inQueryValid","inQueryFilter","dataCollectionValid","compareValueLowercase","listThisObjects","newRowData","_Object","processFieldsLoad","processFields","_ProcessFields","uiInit","fieldIsFilterable","thisObjOption","fieldsToQB","showObjectName","conditions","processFieldKeys","hasQueryField","isProcessParticipant","fieldsAddFiltersBoolean","fieldsAddFiltersConnectObject","linkViaType","isSource","fieldsAddFiltersString","opt","isCustomFK","fieldsAddFiltersDate","fieldsAddFiltersNumber","fieldsAddFiltersList","fieldsAddFiltersUser","fieldsAddFiltersThisObject","fieldsAddFiltersQuery","isRecordRule","fieldsAddFiltersRecordRule","processField","includes","processFieldId","pop","fieldsAddFiltersContext","fieldsAddFiltersCustom","dateConditions","less","component","beforeCondition","greater","afterCondition","less_or_equal","onOrBeforeCondition","greater_or_equal","onOrAfterCondition","less_current","beforeCurrentCondition","greater_current","afterCurrentCondition","less_or_equal_current","onOrBeforeCurrentCondition","greater_or_equal_current","onOrAfterCurrentCondition","last_days","onLastDaysCondition","next_days","onNextDaysCondition","condKey","batch","handler","stringConditions","contains","containsCondition","not_contains","notContainsCondition","equals","isCondition","not_equal","isNotCondition","is_empty","isEmpty","is_not_empty","isNotEmpty","numberConditions","equalCondition","notEqualCondition","lessThanCondition","moreThanCondition","lessThanOrEqualCondition","moreThanOrEqualCondition","listConditions","equalListCondition","notEqualListCondition","booleanConditions","checked","checkedCondition","unchecked","notCheckedCondition","userConditions","is_current_user","isCurrentUserCondition","is_not_current_user","isNotCurrentUserCondition","contain_current_user","containsCurrentUserCondition","not_contain_current_user","notContainsCurrentUserCondition","connectConditions","same_as_user","sameAsUser","not_same_as_user","notSameAsUser","in_data_collection","inDataCollection","not_in_data_collection","notInDataCollection","queryConditions","in_query_field","inQueryField","not_in_query_field","notInQueryField","in_query","inQuery","not_in_query","notInQuery","thisObjectConditions","recordRuleConditions","same_as_field","sameAsField","not_same_as_field","notSameAsField","contextConditions","context_equals","equalsProcessValue","context_not_equal","notEqualsProcessValueCondition","context_in","inProcessValueCondition","context_not_in","notInProcessValueCondition","_customOptions","queriesLoad","_Queries","getValue","isComplete","noValueRules","isCompleteRules","returnSingular","columnId","config_settings","queryValid","ABField","ABFieldAutoIndexDefaults","isFilterable","isSortable","menuName","supportRequire","supportUnique","useAsLabel","compatibleOrmTypes","compatibleMysqlTypes","delimiter","displayLength","previewText","delimiterItem","delimiterList","sign","displayNumber","getDelimiterSign","setValueToIndex","ABFieldBooleanDefaults","AGE","dateString","dataDate","diffYears","Math","round","floor","YEAR","getFullYear","MONTH","getMonth","DAY","getDate","DATE","getTime","HOUR","MINUTE","MINUTE_TO_HOUR","mins","hours","rhours","minutes","rminutes","parseFloat","ABFieldCalculateDefaults","formula","decimalSign","decimalPlaces","ABFieldCalculateCore","place","numberVal","calVal","dateVal","booleanVal","eval","toFixed","convertToJs","ABFieldCombinedDefaults","combinedFields","ABFieldConnectDefaults","linkColumn","fieldDefaults","names","configError","pullRelationValues","selectedData","dataValue","propName","forUpdate","reservedNames","fieldKey","fieldOrmTypes","fieldMysqlTypes","fieldIcon","fieldMenuName","fieldDescription","fieldIsSortable","fieldSupportRequire","fieldSupportQuery","supportQuery","defaultCheck","defaultVal","returnVal","showIcon","required","width","myDef","ABFieldDateDefaults","dateFormat","defaultDate","defaultDateValue","validateCondition","validateRangeUnit","validateRangeBefore","validateRangeAfter","validateStartDate","validateEndDate","dateResult","prototype","call","isFinite","startDate","endDate","startDateDisplay","getDateDisplay","endDateDisplay","minDate","maxDate","exportValue","dateObj","getFormat","dateFormatString","dateData","dateToString","RegEx","ABFieldDateCore","timeFormat","defaultTime","defaultTimeValue","baseDefault","currDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","getTimeFormat","datetimeFormat","dateToStr","ABFieldEmailDefaults","defaultCheckbox","Reg","ABFieldFileDefaults","removeExistingData","fileSize","fileType","limitFileSize","limitFileType","filename","requestParam","allParameters","myParameter","ABFieldFormulaDefaults","reCalculate","isGrouped","reformat","numData","rowDataFormat","fieldBase","filterHelper","numberList","decimalSize","getDecimalSize","multiplier","pow","sum","max","min","_rowFilter","ABFieldImageDefaults","useWidth","imageWidth","useHeight","imageHeight","useDefaultImage","defaultImageUrl","ABFieldJsonDefaults","ABFieldListDefaults","isMultiple","hasColors","multipleDefault","pendingDeletions","defaultVals","hex","optTran","ABFieldLongTextDefaults","MAX_CHAR_LENGTH","supportMultilingual","ABFieldNumberDefaults","typeFormat","typeDecimals","typeDecimalPlaces","typeRounding","typeThousands","validation","validateMinimum","validateMaximum","iL","position","places","n","errMessage","formatSign","formatList","thousandsSign","postfix","digit","formatNumber","groupDelimiter","groupSize","decimalDelimiter","negativeSign","dataStr","abs","integerStr","decimalStr","integerValue","substr","decimalVal","ABFieldStringDefaults","ABFieldTextFormulaDefaults","textFormula","setValueToFormula","formulaString","fieldRegExp","matches_field_array","autoIndexVal","setBuildinValueToFormula","matches_buildin_array","buildinList","getBuildInFunction","formula_array","isBracketInBracket","functionName","parameters_array","isMatch","resultParameters","parameter_size","getLeft","getRight","getMid","getTrim","getTrimLeft","getTrimRight","getLength","getRegExpReplace","trimLeft","getExtractRegex","getReplace","getLower","getUpper","getCapitalize","getRandom","getNumberToWords","getDateDayOfWeekName","getDateMonthOfYearName","getFormatDate","string","endPosition","endposition","reverseStr","reverseString","reverse","startPosition","trimRight","regexp","replaceString","extractResult","searchValue","replaceValue","toUpperCase","charAt","random","units","tens","scales","end","chunks","chunksLen","chunk","ints","word","words","resultFormula","ABFieldSelectivity","ABFieldTreeDefaults","ABFieldConnect","ABFieldUserDefaults","USERNAME_FIELD_ID","editable","isCurrentUser","isShowProfileImage","isShowUsername","ABMobileView","ABMobilePageDefaults","ABPropertyComponentDefaults","defaultPage","hideTitle","hideTabs","myAppID","menuType","DV","missingPageID","allPageDeletes","allPages","pageRemove","pageInsert","setPageDefault","refreshInstance","page","updateIcon","lookUpIds","mapNewIdFn","copy","ABMobileViewDefaults","labelKey","tabicon","ABViewPropertyComponentDefaults","warningsSilent","__missingViews","viewIcon","tabIcon","viewIDs","isRoot","height","x","y","dx","dy","allParents","parents","curView","parentFormComponent","parentDetailComponent","detail","pageParent","filterFn","parentPage","pageRoot","rootPage","dataviewID","_currentObject","errNoDCID","errNoDC","viewByID","viewRemove","viewInsert","viewReorder","viewId","toPosition","findIndex","allViewDeletes","wantsAdd","copyUpdateProperyList","ignoreSubPages","copiedSubPage","ignoreSubViews","copiedView","newName","allSaves","p2","vi","ABViewFormButtonPropertyComponentDefaults","includeSave","saveLabel","includeCancel","cancelLabel","includeReset","resetLabel","afterCancel","alignment","isDefault","ABViewFormButtonDefaults","ABMobileViewFormCheckboxPropertyComponentDefaults","ABMobileViewFormCheckboxDefaults","ABMobileViewFormConnectPropertyComponentDefaults","formView","popupWidth","popupHeight","ABMobileViewFormConnectDefaults","ABRecordRule","ABSubmitRule","ABViewFormDefaults","ABViewFormPropertyComponentDefaults","showLabel","labelPosition","labelWidth","clearOnLoad","clearOnSave","displayRules","editForm","recordRules","submitRules","objectLoad","componentList","viewsToAllow","fieldComponents","flattenComponents","components","comp","addFieldToForm","yPosition","fieldComponent","formComponentMobile","newInstance","RecordRule","_recordRule","formLoad","fromSettings","rulesReady","doRecordRulesPre","processPre","doRecordRules","doSubmitRules","SubmitRules","ABViewFormCustomPropertyComponentDefaults","ABViewFormCustomDefaults","ABMobileViewFormDatepickerPropertyComponentDefaults","timepicker","ABMobileViewFormDatepickerDefaults","ABMobileViewFormDatetimePropertyComponentDefaults","ABMobileViewFormDatetimeDefaults","ABMobileViewFormEmailPropertyComponentDefaults","ABMobileViewFormEmailDefaults","ABViewFormFilePropertyComponentDefaults","ABViewFormFileDefaults","ABViewFormFormulaPropertyComponentDefaults","ABViewFormFormulaDefaults","ABMobileViewFormFile","ABViewFormImagePropertyComponentDefaults","ABViewImageFileDefaults","ABViewFormFieldPropertyComponentDefaults","disable","ABMobileViewFormNumberPropertyComponentDefaults","isStepper","ABMobileViewFormNumberDefaults","ABMobileViewFormCustom","ABMobileViewFormReadonlyPropertyComponentDefaults","ABMobileViewFormReadonlyDefaults","ABMobileViewFormSelectSingle","ABMobileViewFormSelectMultiplePropertyComponentDefaults","ABMobileViewFormSelectMultipleDefaults","ABMobileViewFormSelectSinglePropertyComponentDefaults","ABMobileViewFormSelectSingleDefaults","ABViewFormTextboxPropertyComponentDefaults","placeholder","ABViewFormTextboxDefaults","ABViewLabelPropertyComponentDefaults","ABViewDefaults","formatNormal","formatTitle","formatDescription","ABViewListPropertyComponentDefaults","linkPageAdd","ABProcessLaneDefaults","ABProcessParticipantDefaults","validChecker","attribute","laneIDs","stashed","useAccount","account","useField","userField","Tasks","DEFINITIONTYPES","AllProcessElements","ELEMENT","category","DiagramReplace","target","eventDefinitionType","allTasks","tasks","DiagramReplaceDefinitionsForType","StartEvents","Gateways","EndEvents","eventDefinitions","$type","state","laneDiagramID","errorConfig","instance","initState","instanceValues","taskState","isEndTask","allArgs","myLane","myState","nextTasks","myDiagramObj","hashDiagramObjects","onError","exitFlows","tasksFromFlow","flow","flowObj","targetIDs","tid","targetTask","hashProcessDataValues","listDataFields","currentProcessValues","_prevState","stateCompleted","stateUpdate","wantToDoSomething","startElements","elem","previousElements","objectOfStartElement","startElem","objectOfPrevElement","prevElem","qlObj","ABProcessElement","ABProcessTaskEndDefaults","actionName","className","triggered","ABProcessGatewayExclusiveDefaults","ABProcessTaskEmailDefaults","myDefaults","subject","AccountingBatchProcessingDefaults","AccountingFPCloseDefaults","AccountingFPYearCloseDefaults","AccountingJEArchiveDefaults","CalculateDefaults","_fakeNum","_fakeObj","ABProcessTaskServiceDefaults","ABProcessTaskGetResetPasswordUrlDefaults","InsertRecordDefaults","isRepeat","startElement","currProcess","previousElement","fieldRepeat","repeatColumn","ABQLManager","ABProcessTaskServiceQueryDefaults","_datasources","fromAttributes","registerDatasource","processDataField","SubProcessDefaults","NOSPAM","isExpanded","isEnable","_unknownElementIDs","processTask","connectionAttrs","parameterId","dataFieldsAll","dataFieldOpt","dataFieldsAllInserted","previousFields","startsWith","stateData","returnField","ABFieldList","ABProcessTaskApprovalDefaults","fixBoolean","formBuilder","preProcessFormIOComponents","abFieldID","vals","path","pluck","action","myID","listField","ABProcessTaskUserDefaults","ui","ABProcessTaskUserExternalDefaults","who","toUsers","ABProcessTriggerDefaults","ABProcessTrigger","ABProcessTaskTriggerLifecycleDefaults","lifecycleKey","repeatEvery","repeatTime","repeatDaily","repeatWeekly","repeatMonthly","isEnabled","timeVals","setUTCHours","setUTCMinutes","getUTCHours","getCronExpression","day","month","dayWeek","minute","hour","parameterDefinitions","prevOP","objectOut","initObject","objectLookup","nextOP","NextQLOps","OP","qlOP","quotedLabel","availableProcessDataFieldsHash","availableProcessDataFields","hashFieldIDs","paramChanged","pDef","ABQL","ParameterDefinitions","ABQLFindCore","ABQLManagerCore","matchingOPs","QLOps","Op","ABQLObjectCore","objNameDef","warningMessage","QLUpdate","QLSave","QLPluck","ABQLSetPluck","ABQLRowUpdate","ABQLRowSave","ABQLRowPluckCore","nextQLOps","NextQLOp","ABQLSetSave","ABQLRowSaveCore","ABQLRowUpdateCore","ABQLRow","ABQLSetFirstCore","ABQLSetPluckCore","objectOutID","ABQLSetSaveCore","taskParam","registered","task_param","ABViewWidget","ABViewCSVExporterDefaults","ABViewCSVExporterPropertyComponentDefaults","buttonLabel","hasHeader","ABViewCSVImporterDefaults","ABViewCSVImporterPropertyComponentDefaults","availableFieldIds","rowDatas","ABViewCarouselPropertyComponentDefaults","hideItem","hideButton","navigationType","filterByCursor","detailsPage","detailsTab","editPage","editTab","parseIntOrDefault","_this","parseOrDefault","imageField","ABViewChartContainer","ABViewChartAreaPropertyComponentDefaults","areaType","isLegend","chartHeight","labelFontSize","stepValue","maxValue","ABViewChartBarPropertyComponentDefaults","barType","barPreset","ABViewContainer","ABViewChartPropertyComponentDefaults","columnValue","columnLabel","columnValue2","isPercentage","multipleSeries","ABViewChartDefaults","labelField","valueField","valueField2","ABViewChartLinePropertyComponentDefaults","lineType","linePreset","ABViewChartPiePropertyComponentDefaults","pieType","innerFontSize","ABViewCommentPropertyComponentDefaults","columnUser","columnComment","columnDate","getCurrentUserId","userObject","getUsers","currentUser","image","getUserField","getCommentField","getDateField","getUserData","UserImageField","imageURL","urlImage","ABViewPropertyDefaults","ifPanel","removable","elsePanel","ABViewConnectDataFilterPropertyComponentDefaults","ABView","columns","gravity","movable","viewsSortByPosition","accessLevels","accessibleRoles","getUserAccess","accessLevel","isAccessManager","currentRole","urlView","updateAccessLevels","roleId","viewDestroy","ABViewDataFilterPropertyComponentDefaults","viewType","showFilter","showSort","ABViewDetail","ABViewDataviewPropertyComponentDefaults","xCount","ABViewDataviewDefaults","dataview","ABViewDetailCheckboxPropertyComponentDefaults","ABViewDetailCheckboxDefaults","ABViewDetailPropertyComponentDefaults","ABViewDetailDefaults","addFieldToDetail","detailComponent","ABViewDetailCustomPropertyComponentDefaults","ABViewDetailCustomDefaults","ABViewDetailImagePropertyComponentDefaults","ABViewDetailImageDefaults","detailView","getCurrentData","detailCom","ABViewDetailTextPropertyComponentDefaults","ABViewDetailTextDefaults","ABViewDetailTreeDefaults","ABViewDocxBuilderPropertyComponentDefaults","buttonlabel","filelabel","toolbarBackground","buttonPosition","uploadUrl","downloadUrl","dvList","ABViewFormCheckboxPropertyComponentDefaults","ABViewFormCheckboxDefaults","ABViewFormConnectPropertyComponentDefaults","ABViewFormConnectDefaults","formComponent","ABViewFormDatepickerPropertyComponentDefaults","ABViewFormDatepickerDefaults","ABViewFormJsonPropertyComponentDefaults","ABViewFormJsonDefaults","ABViewFormNumberPropertyComponentDefaults","ABViewFormNumberDefaults","ABViewFormCustom","ABViewFormReadonlyPropertyComponentDefaults","ABViewFormReadonlyDefaults","ABViewFormSelectMultiplePropertyComponentDefaults","ABSelectMultipleDefaults","ABViewFormSelectSinglePropertyComponentDefaults","ABSelectSingleDefaults","ABViewFormTreePropertyComponentDefaults","ABTreeDefaults","ABViewGanttPropertyComponentDefaults","titleFieldID","startDateFieldID","endDateFieldID","durationFieldID","progressFieldID","notesFieldID","ABViewGridPropertyComponentDefaults","padding","showToolbar","isEditable","massUpdate","allowDelete","isExportable","trackView","summaryColumns","countColumns","gridFilter","filterOption","userFilterPosition","isGlobalToolbar","hideHeader","labelAsField","hideButtons","groupBy","columnConfig","saveLocal","settingsDefault","base","settingsDefaultJSON","owFields","removeField","shouldSave","ABViewImagePropertyComponentDefaults","ABViewKanbanPropertyComponentDefaults","editFields","verticalGroupingField","horizontalGroupingField","ownerField","template","textTemplate","TextTemplate","PropertyComponentDefaults","numColumns","addColumn","isEdited","ABViewMenuPropertyComponentDefaults","orientation","buttonStyle","menuAlignment","menuInToolbar","menuPadding","menuTheme","menuPosition","menuTextLeft","menuTextRight","menuTextCenter","order","ABMenuDefaults","isChecked","pageId","ClearPagesInView","AddPagesToView","displayPage","existsPage","tabId","existsTab","getAliasname","menuItem","getSubMenu","getMenuItem","submenu","pageInfo","lang","translation","aliasname","getParentPageId","tabView","currentView","ABViewPDFImporterPropertyComponentDefaults","pageWidth","fixedPageWidth","pageBackground","ABViewPivotPropertyComponentDefaults","removeMissed","totalColumn","separateLabel","structure","ABViewReportManagerPropertyComponentDefaults","dataviewFields","editMode","hideCommonTab","hideDataTab","hideViewTab","parsedSettings","key1","key2","ABViewSchedulerPropertyComponentDefaults","allDay","repeat","calendar","color","sectionID","unitID","notes","originID","calendarDataviewID","calendarDataviewFields","timeline","week","year","agenda","timelineSectionList","unitList","export","excel","csv","pdf","_object","scheduler","ABViewTabPropertyComponentDefaults","minWidth","stackTabs","darkTheme","sidebarWidth","sidebarPos","iconOnTop","ABViewTabDefaults","addTab","tabName","ABViewTextPropertyComponentDefaults","displayText","componentID","clearTemplateValue","fData","columnSpan","rowSpan","ABApplicationCore","ABViewPage","_handler_page_updated","definition","pg","errDepreciated","areaKey","newObj","entity","begLen","datacollectionInsert","_listInsert","_listRemove","objectInsert","objectRemove","processInsert","processRemove","queryInsert","queryRemove","exportIDs","ids","parseView","pid","pdef","vid","vdef","warningsEval","checks","warningsMessage","allRoles","warningsAll","warnings","_warnings","ABApplicationMobileCore","ABViewPageMobile","newPage","oldPage","CustomComponentManager","uid","actions","custom","create","edit","formName","import","rename","yes","no","none","close","defaultPlaceholder","invalidMessage","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","renameErrorMessage","renameSuccessMessage","dataFieldHeaderLabel","dataFieldHeaderLabelPlaceholder","dataFieldLabel","dataFieldLabelPlaceholder","dataFieldColumnName","dataFieldColumnNamePlaceholder","dataFieldShowIcon","componentDropZone","initComponents","_actions","ABDataCollectionCore","datacollectionId","bindParentDc","define","cursorUpdated","__prevLinkDcCursor","hideProgressOfComponents","attachFlexlayout","showProgress","sync","onDataRequestEvent","loadNext","unsync","detachEvent","onDcLoadData","off","hideProgress","DataCollection","_extendCollection","treeStore","TreeCollection","dataStore","extend","SelectionModel","onAfterLoadEvent","addCss","removeCss","render","onAfterLoad","addRowToTree","parentAlias","dataId","parentItemIds","parentId","_alias","_dataId","treeNode","parentItemId","boundComp","datacollectionById","ABDefinitionCore","ABHintCore","allSteps","allDestroy","hintIndex","createHintUI","cookie","hide","dontShow","newStep","nextEl","hintId","eventEl","theNextEl","querySelector","checkVisibility","onNext","boxes","querySelectorAll","display","onPrevious","delay","ABIndexCore","migrateCreate","migrateDrop","ABMLClassCore","ABModelCore","errorPopup","handler_create","handler_common","handler_delete","handler_findAll","handler_logs","handler_update","no_socket_trigger","batchCreate","once","loadInto","DT","logs","update","batchUpdate","rowIds","_handler_object_migrate","fromObj","disableRelatedQueries","fieldDrops","allFields","skipMigrate","isAdd","columnResize","newWidth","columnHeaders","isObjectWorkspace","hiddenFieldNames","columnHeader","validationRules","adjust","footer","content","customDisplays","DataTable","eachColumn","node","getItemNode","column","customDisplay","allWarnings","w","isUuid","atomicjs","ABObjectApiCore","insertDataMax","verb","withCredentials","parsedResponse","pendingModelCreate","ABObjectQueryCore","conditionScan","fieldEntry","oldWidth","originTemplate","_conditionCheck","isConditionComplete","ABProcessCore","_unknownShapes","allElements","appsWithProcess","_new","_old","needSave","elementNewForModelDefinition","unknownShape","shape","unknownShapeRemove","_DOMParser","DOMParser","xmlStr","parseFromString","ActiveXObject","xmlDoc","loadXML","getElementsByTagName","ABStepCore","ABViewManagerCore","ABViewManagerMobileCore","getSeparateItems","validateFile","fileInfo","file","extensionType","getDataRows","separatedBy","reader","FileReader","onload","dataCols","dCol","readAsText","getGuessDataType","dataRows","colIndex","line","str","FilterComplexCore","_toInternal","_toExternal","_options","_initComplete","observing","and","or","thisObject","inQueryFieldQueryPlaceholder","inQueryFieldFieldPlaceholder","contextDefaultOption","popup","querybuilder","recordRuleFieldOptions","rows","borderless","hidden","isSaveHidden","myPopup","__blockOnChange","getState","$observe","_cond","helper","$query","getFilterFunction","qbSettings","toShortHand","uiQueryCustomValue","enable","$el","$app","require","CreateFilter","inputs","uiValue","localId","mode","parser","i18n","dateFormatStr","margin","fieldColumnName","uiQueryValue","uiDataCollectionValue","uiCustomValue","uiContextValue","uiNoneValue","uiUserValue","uiListValue","LinkType","uiTextValue","uiQueryFieldValue","uiRecordRuleValue","uiBooleanValue","onAfterRender","queryView","$view","style","zIndex","isQueryField","u","linkObjectId","processFieldKey","pField","popUp","show","addCustomOption","RowFilterCore","filterForm","addNewFilter","inputValue","queryCombo","queryFieldCombo","queryFieldComboQuery","queryFieldComboField","fieldMatch","dataCollection","listOptions","datePicker","batchName","queryFieldOptions","recordRuleOptions","getFieldList","getFilterUI","isolate","cols","newVal","oldVal","selectCombineCondition","suggest","onBeforeShow","resize","$viewCond","selectField","cells","oldValue","onChangeRule","onChangeQueryFieldCombo","validate","isNumber","onTimedKeyPress","autowidth","indexView","getFormView","removeNewFilter","getAddButtonUI","$viewForm","toggleAddNewButton","getChildViews","ignoreNotify","showBatch","Queries","ruleViewId","getActiveId","$viewComparer","getList","defaultOpt","dcOptions","_Application","Query","blockOnChange","unblockOnChange","$fieldElem","selectedOpt","getPopup","valueViewId","$viewConditionValue","dateField","fieldOptions","logic","col","blockEvent","unblockEvent","_completeConditions","ABViewForm","RowUpdater","addNew","_mockFormWidget","uiItem","self","$viewItem","maxWidth","_extendedOptions","toggleCustomProcessOption","removeItem","addItem","$form","ProgressBar","toggleForm","excludeSelected","$viewContainer","$customValueElem","_pullInputElement","$processValueElem","isVisible","isProcessValue","formFieldComponent","childViews","inputView","busy","getOptions","labelRight","layout","ready","$field","setExtendedOptions","showProcessOption","$customOption","$processOption","$elem","childView","ABFieldCore","addValidation","Filter","filterComplex","fnMigrate","migrateUpdate","customEdit","formKey","FC","getSettings","ABFieldAutoIndexCore","editor","$group","detailComponentSetting","ABFieldBooleanCore","checkbox","ABFieldCombineCore","ABFieldConnectCore","multiselect","editFormat","editParse","openOptions","button","$suggest","$list","getAndPopulateOptions","whereClause","term","theEditor","_getOptionsThrottle","_timeToPullData","_getOptionsResolve","haveResolved","respond","linkedObj","linkedCol","linkedModel","showAllOptions","getStorageID","storedOptions","selected","linkViaOneValues","whereRels","sortRels","storageID","itemObj","getItemFromVal","returnVals","combineFilters","filterByConnectValues","parseFilterByConnectValues","depth","valuesByDepth","ef","$parentField","filterValue","parentValue","filterColumn","filterField","dataFieldId","valItem","linkedField","formVals","handlerOptionData","$destructed","populateOptions","addCy","populateOptionsDataCy","selectedVal","some","selectedItem","each","option","setAttribute","pullRecordRelationValues","formComponentSetting","webixLocale","longDateFormatStr","ABFieldDateTimeCore","timeToStr","ABFieldEmailCore","ABFieldFileCore","fileTemplate","typesList","maximumSize","parentContainer","webixContainer","container","domNode","urlUpload","uploader","apiOnly","upload","inputName","multiple","onBeforeFileAdd","classList","acceptableTypes","acceptableSizes","size","onFileUpload","onFileUploadError","addDropZone","dataset","deleteFile","uploaderId","fileDialog","rowid","iconDisplay","fileDisplay","fileURL","fileLink","getAttribute","fileicon","fileDeleteIcon","removeAttribute","href","isWebix","urlFile","ABFieldFormulaCore","ABFieldImageCore","idCustomContainer","formId","containerHeight","imageSrcHeight","heightVal","imageTemplate","imgHeight","imgWidth","percent","uploadInProgress","showImage","readAsDataURL","dataTable","deleteImage","removeDefaultImage","imageDisplay","isRemoveDefaultImage","html","backgroundImage","imageIcon","imageDeleteIcon","toBase64","img","Image","crossOrigin","onerror","canvas","getContext","drawImage","imageData","toDataURL","src","ABFieldJsonCore","ABFieldListCore","numDone","numToDo","remainingFields","_getSelectedOptions","hasCustomColor","optionHex","selectedObj","clearButton","stopPropagation","getSelectedOptions","ABFieldLongTextCore","ind","ABFieldNumberCore","INIT_EDITOR","editors","defaultSettings","allowClear","removeOnly","readOnly","showDropdown","ABFieldSelectivityDefaults","selectivityRender","cypress","dataCy","prepareData","selectivity","setOptions","selectivityInput","isUsers","templates","multipleSelectedItem","highlighted","additionalText","isLabelHidden","Selectivity","Inputs","Multiple","selectivitySetBadge","singleSelectedItem","Single","trigerEditPageEvent","editMenus","eMenu","__hasClickEvent","preventDefault","parentElm","parentElement","thisField","caretElems","getElementsByClassName","caretElm","parentNode","removeChild","selectivitySettings","selectivityGet","selectivitySet","setData","selectivityDestroy","clientHeight","badge","anchor","textnode","createTextNode","appendChild","ABFieldStringCore","ABFieldTextFormulaCore","ABFieldTreeCore","formClass","placeHolder","isForm","branches","selectOptions","rootid","getParentId","par","nodeHTML","myHex","setBadge","idPopup","idTree","parentComponent","firstRender","populateTree","getValues","$Tree","uncheckAll","openAll","checkItem","onShow","onItemCheck","dom","tree","uncheckItem","eachSubItem","getChecked","scrollHeight","setValues","ABFieldUserCore","SiteUser","Defaults","linkCol","newLinkDef","setDisplayOptions","ABMobilePageCore","__Handler_ABDEF_UPDATED","__Handler_DEF_UPDATED","removeAllListeners","ABMobileViewCore","viewsToIgnore","ABMobileViewFormCore","ABMobileViewFormButton","refreshDefaultButton","defaultButton","yList","posY","ABMobileViewFormButtonCore","ABMobileViewFormCheckboxCore","ABMobileViewFormConnectCore","__filterComponent","ABMobileViewFormCustomCore","ABMobileViewFormDateCore","ABMobileViewFormDatetimeCore","ABMobileViewFormEmailCore","ABMobileViewFormFileCore","ABMobileViewFormFormulaCore","ABMobileViewFormImageCore","ABMobileViewFormItemCore","ABMobileViewFormNumberCore","ABMobileViewFormReadonlyCore","ABMobileViewFormSelectMultipleCore","ABMobileViewFormSelectSingleCore","ABMobileViewFormTextboxCore","ABMobileViewLabelCore","ABMobileViewListCore","ABProcessLaneCore","transferParticipantWhereToMe","myParticipant","swap","children","child","lanes","objChild","setLane","defElement","ABProcessParticipantCore","diagramProperties","ABProcessElementCore","findLane","Lane","currObj","propertiesShow","propertiesStash","property","switchTo","propertiesID","ABProcessEndCore","ABProcessGatewayExclusiveCore","properties","myOutgoingConnections","numCondWithOne","ABProcessTaskEmailCore","verifySetting","verifyNextLane","verifyRoleAccount","nextLanesResolved","valKey","ABProcessTaskServiceCore","AccountingBatchProcessingCore","propertyIDs","processBatchValue","objectBatch","fieldBatchEntries","fieldBatchFinancialPeriod","objectJE","fieldJEAccount","fieldJERC","fieldJEStatus","fieldJEStatusComplete","objectBR","fieldBRFinancialPeriod","fieldBRAccount","fieldBRRC","fieldBREntries","processValues","objectList","blankField","defaultFields","updateFields","fieldPickers","fieldValues","fp","picker","batchFields","fieldPickersBatch","jeFields","fieldPickersJE","compileStatusValues","statusField","onStatusComplete","wbxComplete","jeEntryID","jeEntry","jeFieldStatusValues","brFields","fieldPickersBR","AccountingFPCloseCore","processFPValue","objectFP","objectGL","objectAcc","fieldFPStart","fieldFPOpen","fieldFPStatus","fieldFPActive","fieldGLStarting","fieldGLRunning","fieldGLAccount","fieldGLRc","fieldGLDebit","fieldGLCredit","fieldAccType","fieldAccAsset","fieldAccExpense","fieldAccLiabilities","fieldAccEquity","fieldAccIncome","getFieldOptions","getStatusFieldOptions","statusFieldId","fpObject","fpStatusField","getListOptions","fpFields","glFields","accFields","fpStatusFields","accTypeOptions","elementsConfig","fieldGLElem","updateFPFields","updateGLFields","updateAccFields","fpStatusOptions","updateAccTypeOptions","AccountingFPYearCloseCore","processFPYearValue","objectFPYear","objectFPMonth","objectAccount","valueFundBalances","valueNetIncome","fieldFPYearStart","fieldFPYearEnd","fieldFPYearStatus","fieldFPYearActive","fieldFPMonthStart","fieldFPMonthEnd","fieldGLStartBalance","fieldGLRunningBalance","fieldGLrc","fieldAccNumber","fieldAccTypeIncome","fieldAccTypeExpense","fieldAccTypeEquity","fpYearDateFields","fpYearStatusFields","fpYearStatusOptions","fpMonthDateFields","glNumberFields","glRcFields","accNumberFields","accTypeFields","fpYearDateOptions","updateFPYearStatusOptions","fpMonthDateOpts","glRcOptions","glNumberOptions","updateAccNumberFields","updateFPYearActiveOptions","AccountingJEArchiveCore","objectBalance","objectJEArchive","fieldBatchFiscalMonth","fieldJeAccount","fieldJeRC","fieldJeArchiveBalance","fieldBrFiscalMonth","fieldBrAccount","fieldBrRC","fieldsMatch","getConnectFieldOptions","refreshFieldsMatch","$fieldsMatch","JEObj","JEArchiveObj","fJe","fieldBatchList","fieldBalanceList","fieldJeList","fieldJeArchiveList","refreshBatchFields","refreshBRFields","refreshJeFields","refreshJeArchiveFields","CalculateTaskCore","formulaText","exp","ABProcessTaskServiceGetResetPasswordUrlCore","InsertRecordTaskCore","fv","isSet","ABProcessTaskServiceQueryCore","qlWarnings","hasSave","SubProcessCore","bpmnModeler","props","loopCharacteristics","isSequential","loopType","ABProcessTaskUserCore","ABProcessTaskUserApprovalCore","ABProcessTaskUserExternalCore","ABProcessTriggerCore","ABProcessTriggerLifecycleCore","ABProcessTriggerTimerCore","ABQLCore","parseRow","uiID","toIDs","$uiCondition","objectfields","objectname","taskparam","select","shorthand","spacer","uiAddParamForDef","paramUI","uiParamUI","uiAddNext","uiRow","uiNextRow","uiAddParams","newValue","resetValue","newOP","thisRow","thisQuery","addOP","viewAddParams","viewAddNext","allRows","ir","allCols","ic","uiNextRowSelectorRefresh","$select","uiNextCol","uiConfig","uiSettings","initialCond","displayLabel","initialValue","Updater","foundFields","shortHand","elCondition","onItemClick","modal","fillspace","sh","_myPopup","topView","rowView","toInsert","myWarnings","ABQLRootObject","root","rootOP","parseCurrent","selector","currOP","nextRow","ABQLRootObjectCore","ABViewCore","ABViewComponent","changePage","ABViewCSVExporterCore","ABViewCSVExporterComponent","ABViewCSVImporterCore","ABViewCSVImporterComponent","ABViewCarouselComponent","baseView","carousel","_handler_doOnShow","_handler_doReload","_handler_doFilter","fnFilter","filterRules","_handler_busy","_handler_ready","filterUI","linkPage","linkPageHelper","_ui","navigation","buttons","activeIndex","getActiveIndex","switchImage","viewLoad","$carouselView","firstElementChild","detatch","myTemplate","$carousel","currentPosition","_imageCount","_rowCount","getFilter","cursor","images","imgFile","imgData","ab","align","abWebix","onclick","getNode","fullscreen","exit","head","showFilterPopup","showPopup","ABViewCarouselCore","ABViewCarousel","__filterHelper","ABViewPropertyFilterData","__linkPageHelper","ABViewPropertyLinkPage","ABViewChartCore","ABViewChartComponent","refreshData","getDCChart","_dcChart","dcChart","labelCol","valueCol","valueCol2","numberColName","numberColName2","colorList","dInfo","sumData","sumNumber","sumNumber2","countNumber","numberVal2","relateValues","value2","val2","ABViewChartAreaCore","ABViewChartAreaComponent","ABViewChartBarCore","ABViewChartBarComponent","ABViewChartContainerComponent","ABViewChartLineCore","ABViewChartLineComponent","ABViewChartPieCore","ABViewChartPieComponent","ABViewCommentCore","ABViewCommentComponent","ABViewConditionalContainerCore","ABViewConditionalContainerComponent","viewIf","viewElse","pendingSave","ABViewConnectDataFilterComponent","idbase","applyConnectFilter","tooltip","resetConnectFilter","$filter","connectId","filterRule","ABViewConnectDataFilter","ABViewContainerCore","ABViewContainerComponent","ABViewDataFilterComponent","sortButton","filterButton","globalSearchToolbar","_handler_filterData","callbackFilterData","PopupSortComponent","sortOptions","callbackSortData","advancedUI","compId","maxHeight","toolbarFilter","getInputNode","openSort","externalSearchText","connectedFieldUI","relative","right","top","setSettings","updateUI","sortRules","filterButtons","onlyFilterRules","filterBadge","sortButtons","onlySortRules","sortBadge","searchFields","activeElement","ABViewDataFilter","ABViewDataviewCore","ABViewDataviewComponent","ABViewDetailCore","ABViewDetailComponent","ABViewDetailCheckboxCore","ABViewDetailCheckboxComponent","ABViewDetailConnectCore","ABViewPropertyAddPage","ABViewDetailConnectComponent","addPageTool","__addPageTool","ABViewDetailCustomCore","ABViewDetailCustomComponent","ABViewDetailImageCore","ABViewDetailImageComponent","ABViewDetailItemCore","ABViewDetailItemComponent","ABViewDetailTextCore","ABViewDetailTextComponent","ABViewDetailTreeCore","ABViewDetailTreeComponent","ABViewDocxBuilderCore","ABViewDocxBuilderComponent","letUserDownload","blob","URL","createObjectURL","download","revokeObjectURL","ABViewFormCore","ABViewFormComponent","ABViewFormButton","ABViewFormConnect","ABViewFormDatepicker","ABViewFormSelectMultiple","ABViewFormJson","_callbacks","onBeforeSaveData","superComponent","_superComponent","getFormValues","dcLink","visibleFields","allVals","vComponent","viewComponents","linkValues","formFieldCom","fComp","linkColName","cursorFormVals","validateData","$formView","requiredFields","fixInvalidMessageUI","$forminput","$height","domInvalidMessage","marginLeft","saveButton","clearValidation","formError","$saveButton","invalidAttrs","sqlMessage","recordRulesReady","newFormVals","errs","formReady","focusOnFirst","topPositionId","childComponent","ABViewFormButtonCore","ABViewFormButtonComponent","ABViewFormCheckboxCore","ABViewFormCheckboxComponent","ABViewFormConnectCore","ABViewFormConnectComponent","ABViewPropertyEditPage","editPageTool","addPageProperty","propertyComponent","editPageProperty","__editPageTool","ABViewFormCustomCore","ABViewFormCustomComponent","ABViewFormDatepickerCore","ABViewFormDatepickerComponent","ABViewFormItemCore","ABViewFormItemComponent","componentUI","parentFormUniqueID","uniqueInstanceID","ABViewFormJsonCore","ABViewFormJsonComponent","ABViewFormNumberCore","ABViewFormNumberComponent","ABViewFormReadonlyCore","ABViewFormReadonlyComponent","ABViewFormSelectMultipleCore","ABViewFormSelectMultipleComponent","ABViewFormSelectSingleCore","ABViewFormSelectSingleComponent","ABViewFormTextboxCore","ABViewFormTextboxComponent","ABViewFormTreeCore","ABViewFormTreeComponent","ABViewGanttComponent","menu","gantt","_tempDC","TitleField","StartDateField","EndDateField","DurationField","ProgressField","NotesField","originalStartDate","originalEndDate","pendingAdds","idGantt","ganttElement","isExistsTask","taskId","localService","getService","tasksData","removeTask","opsService","YEAR_SCALE","MONTH_SCALE","DAY_SCALE","getConstantScales","setScale","override","Map","services","Backend","CurrentDatacollection","indx","convertFormat","taskAdd","taskUpdate","taskRemove","$menu","showItem","CurrentObject","convertValues","patch","datacollectionLoad","_events","eo","initData","ganttElem","dataService","dcTasks","gantt_data","currScale","getScales","WEEK_SCALE","wstart","weekStart","wend","scale","ganttData","newScales","setScales","precise","cellWidth","cellHeight","$batch","left","taskData","updatedTask","ABViewGanttCore","ABViewGantt","ABWorkObjectPopupExport","popupExport","_dataCollection","_grid","_filename","_hiddenFields","autoheight","dataCollectionLoad","setHiddenFields","setFilename","setGridComponent","$grid","fnExport","noCheckedRow","appbuilder_select_item","filterRow","toCSV","toExcel","filterHTML","toPDF","toPNG","exportType","fileName","ABViewGridPopupMassUpdate","ABViewGridComponent","submit","GridComponent","rowUpdater","update_button","update_items","$datatable","getDataTable","updatedRowIds","table","toolbar","buttonDeleteSelected","buttonFilter","buttonMassUpdate","buttonSort","buttonExport","datatable","handler_select","selectRow","columnSplitLeft","columnSplitRight","validationError","idTable","PopupExport","PopupMassUpdateComponent","PopupSortDataTableComponent","skippableColumns","ignoreLocalSettings","_gridSettings","_isDatacollectionLoaded","keyStorageSettings","getColumnIndex","uiDatatable","isTreeDatable","selectType","resizeColumn","resizeRow","prerender","fixedRowHeight","editaction","dragColumn","onBeforeSelect","preserve","cellNode","onAfterSelect","onBeforeEditStart","onCheck","toggleUpdateDelete","onAfterEditStop","onBeforeEditStop","ignoreUpdate","onValidationError","onValidationSuccess","onColumnResize","user_action","setColumnWidth","getLastColumn","onRowResize","onBeforeColumnDrag","onBeforeColumnDrop","onAfterColumnDrop","onHeaderClick","uiFilter","uiToolbar","toolbarMassUpdate","toolbarDeleteSelected","toolbarSort","toolbarExport","_uiGrid","inputWidth","codebase","cdn","$DataTable","throttleCustomDisplay","scrollStarted","displayRecords","verticalScrollState","getScrollState","rowHeight","startRecIndex","endRecIndex","getVisibleCount","CYPRESS_REF","toggleTab","clearValue","updateRow","_deleteConfirmPopup","numRows","deleteRow","globalFilterPosition","refreshHeader","$ButtonFilter","$buttonSort","gridElem","rowItem","oldDC","__handler_dc_busy","__handler_dc_ready","populateGroupData","__handler_dc_loadData","_isDatacollectionLoad","disableUpdateDelete","enableUpdateDelete","freezeDeleteColumn","lastColumn","getColumnConfig","$treetable","baseGroupMap","listData","valRelation","groupBys","g","gIndex","groupMap","by","byValue","gColName","group","localSettingsSave","old","removeCellCss","editCell","requireRefresh","EditField","isCustomGroup","ignoreLocal","objColumnHeaders","objColumnHeaderIDs","origCol","fieldValidations","rulePops","validationUI","popUpId","groupField","treetable","complexValidations","getFilterHelper","getSelectedItem","newData","destructor","addedColumns","contentId","lastCol","refreshColumns","savedLocalSettings","settingsID","unselect","parentTab","wb","tab","getTopParentView","tabbar","nextTab","checkedItems","deleteTasks","toolTip","imageFieldColNames","tip","relationData","toolTipOnBeforeRender","visibility","toolTipOnAfterRender","firstChild","nodeName","imgBottom","imgRight","innerHeight","imgOffsetY","newTop","imgOffsetX","newLeft","ABViewGridCore","ABViewGrid","propertyGroupByList","colNames","groupByList","origWS","AB_Work_Object_Workspace_PopupSortFields","_blockOnChange","uiForm","clickAddNewSort","triggerOnChange","dir","sort_form","viewIndex","listFields","onChangeCombo","refreshFieldList","cView","selectedValue","chosenField","sortDir","ignoreRemoveViews","selectedFields","removeChildViews","fieldObj","selectedFieldsExcludeCurField","enableFields","aValue","bValue","ABViewImageCore","ABViewImageComponent","ABViewKanbanCore","ABViewKanbanComponent","ABViewKanban","comKanBan","CurrentObjectID","refreshForm","formAttrs","formCom","updateVals","newVals","ABViewLabelCore","ABViewLabelComponent","ABViewLayoutCore","ABViewLayoutComponent","ABViewListCore","ABViewListComponent","ABViewMenuCore","ABViewMenuComponent","ABViewPDFImporterCore","ABViewPDFImporterComponent","ABViewPageCore","v1App","newComponent","ABViewPivotCore","ABViewPivotComponent","ABViewReportsManagerCore","ABViewReportsManagerComponent","ABViewSchedulerCore","ABViewSchedulerComponent","ABViewTabCore","ABViewTabComponent","ABViewTextCore","ABViewTextComponent","ABViewWidgetCore","clientFilter","downloadCsvFile","onFilterChange","qsWhere","open","$buttonFilter","CSVImporter","uploadFileList","headerOnFirstLine","columnList","statusMessage","progressBar","linkedDataButton","importButton","csvImporter","args","_dataRows","_csvFileInfo","accept","autosend","loadCsvFile","onClick","webix_remove_upload","removeCsvFile","populateColumnList","minHeight","uiRecordsView","keyPressTimeout","_errorMsg","details","$dt","_status","_included","$importButton","labelImport","overLimitAlert","showLinkedData","uiPopup","$progressBar","formClear","$statusMessage","matchFields","getMatchFields","columnIndex","statusTemplate","$headerOnFirstLine","fileId","$columnList","firstLine","csvColumnList","currentObject","formComp","formConfig","uiColumns","selectedCsvCols","matchCol","selectVal","columnOptUI","abName","toggleLinkFields","loadDataToGrid","dateSeparatorOptions","dayFormatOptions","monthFormatOptions","yearFormatOptions","dateOrderOptions","linkFieldOptions","fld","$columnOption","$linkFieldOption","rowValue","$popup","refreshRemainingTimeText","startUpdateTime","total","remainTime","days","seconds","$selector","fieldData","$dateFormatSelectors","separator","$linkDataSelector","searchField","objModel","selectedRows","_currProgress","increaseProgressing","itemFailed","addRowCss","itemInvalid","errorMsg","uiCleanUp","validRows","allValid","getParentValues","removeRowCss","hashLookups","allLookups","connectField","connectObject","connectModel","linkIdKey","gethashLookup","createRecord","newRowsData","resultErrors","rowIndex","resultData","penddingRecordRules","processRowData","waitPenddingRecordRules","processResult","throttledSaves","performThrottledSaves","currentRecords","remainingRecords","importer","nextRecords","uiLinkedData","linkedData","hideLinkedData","_info_popup","linkConnectFields","yAxis","xAxis","legend","series","alpha","preset","$component","eventNames","evtName","chartContainer","uiChartComponent","_isShow","$chartContainer","$chartComponent","pieInnerText","shadow","comment","getCommentData","onBeforeAdd","addComment","onAfterDelete","deleteComment","__dvEvents","$comment","$commentList","onStoreUpdated","operate","updateComment","refreshComment","userCol","commentCol","dateCol","userColName","commentColName","dateColName","dataObject","dataList","user_id","default_date","__refreshTimeout","commentData","scrollTo","MAX_SAFE_INTEGER","commentText","dateTime","saveData","commentField","CurrentDatacollectionID","uiComponents","eventsClear","milliSeconds","__isShowing","interval","setInterval","clearInterval","_ifComponent","_elseComponent","populateFilterComponent","_uiConditionalContainer","ifComponent","elseComponent","displayView","viewComponentIDs","_handlerChangePage","rowViews","getElements","componentMap","curRowIndex","curColIndex","rowNew","colNumber","rowIndx","curRow","newPos","mapKey","getGrav","initDetailComponent","scroll","sizeToContent","itemTemplate","applyClickEvent","addCyAttribute","$dataView","_resizeEvent","base_element","$dataview","item_width","getItemWidth","customize","detailUI","getDetailUI","_detail_ui","$detail_item","itemWidth","$width","itemHeight","tmp_dom","addCyItemAttributes","currElem","parentWidth","$sidebar","getTabSidebar","clicked","divs","_detailComponent","detailItem","createdRow","updatedRow","myVal","needRecalculate","$detailItem","parsedImageUrl","imageUrl","SAFE_HTML_TAGS","detailItemLabel","uiDetailItemComponent","isLabelTop","templateLabel","labelUi","valueUi","itemUi","detailId","strVal","getDomTree","domTree","Docxtemplater","ImageModule","JSZipUtils","JSZip","ABFieldImage","downloadButton","noFileLabel","leftSpacer","rightSpacer","buttonLabelText","renderFile","$downloadButton","$noFileLabel","reportValues","getReportData","downloadImages","contentTemplateFile","downloadTemplateFile","blobFile","generateDocxFile","isDcLabelAdded","dcCursor","dcValues","disableMinifyRelation","fieldLabels","objTran","fieldTran","objectLabel","fieldLabel","setReportValues","datacollectionData","multilinguageFields","transFields","childItem","addDownloadTask","fieldImage","imageVal","imgUrl","getBinaryContent","currCursor","contentFile","summaries","zip","doc","imageModule","centered","getImage","tagValue","tagName","getSize","imgBuffer","tagNames","dcs","attachModule","loadZip","tag","scope","varName","propSource","propFilter","indexColName","connectedField","sourceVals","getVal","comparer","docxFile","getZip","generate","mimeType","onCancel","onClear","onSave","cancelButton","noPopupFilter","pageCurr","resetButton","buttonID","formID","ABViewFormTextbox","timerId","_showed","fieldValidationsHolder","uiValidationHolder","abid","existsFields","com","initCallbacks","initEvents","initValidationRules","valArray","displayParentData","applicationLoad","formField","nval","oval","fieldValidating","actionSettings","valueRules","fieldOperations","valueType","pullDataDC","loadDcDataOfRecordRules","ms","customFields","formItem","defaultRowData","parentData","relationField","relationFieldCom","relationFieldView","$relationFieldView","formData","topPosition","editpopup","addPageComponent","editPageComponent","formSettings","goToEditPage","_onChange","initAddEditTool","selectAll","customField","trg","$formItem","apcUI","inputId","selectedValues","prepedVals","addFormID","onSaveData","callbackSaveData","onCancelClick","callbackCancel","callbackClearOnLoad","editFormID","clearStorage","selectedItems","sData","formBusy","__editFormDcEvent","$node","filterConnectedValue","uiConfigName","connectFieldId","getFilterByConnectValues","filterByConnectValue","$ui","vc","parentFields","$filterValueConfig","parentField","FocusableTemplate","new_width","requiredClass","DEFAULT_HEIGHT","paddingY","paddingX","AB_App","onAfterDateSelect","setMasterValue","onTodaySet","onDateClear","getMasterValue","errNoAB","strToDate","setFullYear","uiFormItemComponent","_uiFormItem","rowFilter","getFilterField","entries","getSystemObjects","objectsArray","refreshFilter","fieldDefs","parsed","stringResult","NumberTextInput","_numberTextInputKey","numberTextInputKey","newv","oldv","setHTML","tagMode","tagTemplate","selectedOptions","menubar","initTinyMCE","getEditor","contentAreaContainer","$image","ABFormSidePanel","kanbanView","kanban","resizer","formSidePanel","FormSide","CurrentVerticalField","CurrentHorizontalField","CurrentOwnerField","_updatingOwnerRowId","_ABFieldConnect","_ABFieldUser","_ABFieldList","fieldByKey","ABFieldUser","onSelectChange","userId","getSelectedId","updateOwner","tags","onListAfterSelect","onAfterStatusChange","updateStatus","onAvatarClick","$kb","_kb","kanbanListTemplate","removeCard","templateAvatar","templateBody","horizontalOptions","verticalOptions","horizontalVals","statusOps","reconstruct","$menuUser","getUserList","needRefresh","eachList","addCard","setFields","verticalGrouping","horizontalGrouping","uiFormatting","vId","_uiList","autoHeight","uiMenu","datatype","onMenuItemClick","defineCypress","subsign","_uiMenu","elems","menuIncluded","$item","redirectPage","toggleParent","showIt","parentElem","viewInfo","fileUploader","uploadList","fullImagePopup","fullImageCarousel","fullImageSelectToggle","fullImageLabel","unselectAll","loadFile","removeFile","displayBig","displaySmall","pageTemplate","pageIds","renderPageImages","_fullImagePopup","setActiveIndex","refreshFullImage","headHeight","offIcon","onIcon","offLabel","onLabel","isSelected","pageNumber","initPdfjs","pdfjs","pdfjsWorker","ArrayBuffer","fileReader","fileBuffer","readAsArrayBuffer","toBlob","File","canvasId","getElementById","showPage","fileBlob","_toBlob","$uploader","onUploadComplete","addFile","_increaseProgressValue","maxProgressStep","_progressSteps","clearDataview","_readFileBuffer","_pdfDoc","getDocument","promise","total_page","numPages","carousel_list","fullImageTemplate","pageTemplateId","pageItemWidth","canvas_dom","getPage","pdf_original_width","getViewport","scale_required","viewport","canvasContext","_isDisplayBig","selectedIds","fullImageTemplateId","$fileUploader","$uploadList","$submit","$selectAll","$unselectAll","$selectToggle","selectedPageIds","newValues","uploadId","_uploadImage","ABFieldCalculate","ABFieldFormula","ABFieldNumber","pivot","uiPivot","_getFields","dataMapped","CellFormat","fieldType","reportManager","fieldText","fieldQueries","MyBackend","reports","waitInitializingDCEvery","updated","reportModels","dcID","reportFields","getReportFields","refs","moduleID","moduleId","moduleData","queryID","queryIndex","pullDataTasks","dcIds","dcData","sid","dcId","dataCol","sourceDc","sourceObj","targetDc","targetObj","sourceLinkField","sf","targetLinkField","tf","sourceData","targetData","tData","sVal","tVal","updateRows","queryVal","filterElem","tempDc","as","mod","_","parsedColumn","originalColumn","reportField","dateStringData","parsedDateStringData","groupedData","groupedResult","agg","rawCol","MyLocal","Local","_currentModuleID","getQueries","currentModuleID","_queries","MyEditor","$tabbar","callEvent","disableOption","Reset","forceReset","AppState","getModule","TrackChanges","MyToolBar","MyEditorCommon","ShowDeleteButton","MyEditorData","MyTable","GetColumnConfig","meta","abField","mid","fullDateFormatStr","GetTableData","buckets","columnIDs","parsedBuckets","bucket","parseRecord","columnFormat","linkedDcs","linkDc","ref","reportData","reportRow","$pk","rField","fieldStart","fieldEnd","fieldAllDay","fieldCalendar","fieldEventColor","fieldNotes","fieldOriginID","fieldSectionID","fieldUnitID","dcCalendar","fieldTitle","fieldCalendarColor","fieldActive","timelineOptions","start_date","end_date","all_day","recurring","section","origin_id","sections","uiNav","uiNavPopup","calendars","LimitData","sidebar","expandMenu","collapseMenu","popupTabManager","popupTabManagerForm","popupTabManagerSaveButton","baseType","menuItems","abStorage","toggle","addDataCy","multiview","keepViews","onViewChange","prevId","nextId","collapseNode","expandNode","tabUi","tabTemplate","$tab","changeTab","setState","checkCollapseMenu","checkExpandMenu","collapsed","tabViewId","$tabViewId","$viewID","defaultViewIsSet","_uiText","$text","ABViewProperty","toSettings","editForms","pagesHasForm","getIds","onClearOnLoad","_application","openFormPopup","pageClone","popUpComp","savedData","popupTemplate","setDefaultValue","fView","objLink","rawData","formEdit","FilterRuleSettings","buttonAddfilter","filterPanel","globalFilterFormContainer","globalFilterForm","filterMenutoolbar","resetFilterButton","__externalSearchText","rowFilterForm","_handler_rowFilterChanged","triggerCallback","_handler_rowFilterFormChanged","resetFilter","$filterMenutoolbar","queryRules","qr","Rule","filterRuleButton","rowFilterRules","__currentFilter","searchRules","badgeCount","$button","externalText","terms","allTerms","fieldTerms","ABViewPropertyLinkPageComponent","cleanRules","processCondition","myUnique","queryBuilder","queryBuilderContainer","queryBuilderLayout","showQBButton","conditionFields","QB","fieldTypes","onDone","listRules","showQueryBuilderContainer","ObjectQueryBuilder","listActions","actionDropList","selectedAction","objectQB","currentForm","selectAction","valueDisplay","_generateUI","Action","currentAction","replaceValueDisplay","onDelete","$ValueDisplay","cloneChildren","prevAction","getAction","stashCondition","currAction","hidddatasourceen","for","processUpdateObject","qbFixAfterShow","isReady","convertToNumber","hiddenFilter","isPreProcess","queryObject","conditionRules","queryObjectLoad","webixID","valueDisplayComponent","childSettings","headerDefault","rulesScrollview","when","addRule","buttonCancel","buttonSave","getRule","RulesUI","deletedRule","ruleSettings","ABViewRuleList","ABViewRule","RoleUpdateExisting","RoleInsertConnected","RoleUpdateConnected","RoleRemoveConnected","allReady","RoleConfirmMessage","RuleExistPage","RuleParentPage","RuleClosePopup","RuleWebsite","RuleEmail","UpdateConnected","valueDisplayChooser","Component","showQBIfNeeded","queryBuilderDisplay","connObj","connectedObject","connectionField","selectedField","newObjectValues","newRecords","connectedObjectField","qbCondition","ABViewRuleActionFormRecordRuleUpdateConnected","isUpdateValueDisabled","_formData","ABViewRuleActionObjectUpdater","selectedFieldID","fieldDropList","connectedFieldList","cf","connectKey","_uiChooser","selectConnectedField","updateFieldsForm","addDisplay","removePreviousDisplays","cloneAllViews","updateObjectLoad","updateComponent","$updateForm","qbComponent","formRows","fr","rowSettings","modifyCondition","updateIt","done","qbCond","ABViewRuleAction","confirmMessage","ABFieldEmail","toEmailsContainer","toEmails","isEmail","toEmailAdd","fieldTemplate","enterField","refreshUI","emailType","recipients","fromName","fromEmail","toEmailTemplate","emailTypeChange","visibleBatch","toEmailValidate","emailFieldOptions","queryOptions","$toView","toEmailRemove","$emailValue","isAllValid","emailText","existsFieldIds","fnAddOptions","fLink","emailFields","optId","optLabel","focusElem","UIManager","getFocus","setFocus","rec","emailFieldUrl","emailField","emailData","linkFieldId","dvIdAndFieldId","dcQuery","emailAddr","pagesAndTabs","_pageOptions","addPage","pageOrTab","indent","selectedId","curPage","website","ABViewRuleActionObjectUpdaterDefaults","updateObject","stashRules","_uiUpdater","valueDisplayList","removeAddRow","UpdateForm","formGet","addRow","valueDisplayRow","onAdd","delRow","mySettings","FilterComponent","selectDc","selectBy","queryField","buttonAdd","buttonDelete","buttonsToggle","shouldFilter","usedHash","FormView","getUpdateObjectField","fieldField","columnID","$inputView","$componentView","datasources","optionsDataSources","optionsSelectBy","$optionUpdateExsits","selectedDC","$row","populateFilters","dcQueries","$multiview","compNodeView","setValueFn","collectionId","dataView","$valueField","objectToUpdate","isUpdated","clonedDataCollection","fieldWithValue","currRow","updates","objectToUpdateClone","lookup","updateObjectURL","DocUtils","convertPixelsToEmus","pixel","docxtemplater","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","extensionRegex","rels","getPrefix","getFileTypeName","getRelsFileName","getRelsFilePath","ImgManager","xmlDocuments","TypeError","_classCallCheck","fileTypeName","mediaPrefix","relsFilePath","relsDoc","createEmptyRelsDoc","relsFileName","mainRels","files","str2xml","xml2str","relationships","relationshipChilds","iterable","reduce","relationship","contentType","extension","contentTypeDoc","defaultTags","types","newTag","namespaceURI","imageName","realImageName","imagePath","addImageRels","binary","addExtensionRels","maxRid","loadImageRels","getImageXml","rId","getImageXmlCentered","getPptxImageXml","offset","memoize","XMLSerializer","Errors","nullGetter","part","delimiters","mergeObjects","resObj","xmlNode","serializeToString","decodeUtf8","decodeURIComponent","escape","convertSpaces","explanation","encodeUtf8","unescape","errorHandler","charMap","regexStripRegexp","escapeRegExp","charMapRegexes","endChar","startChar","rstart","rend","wordToUtf8","utf8ToWord","concatArrays","arrays","array","spaceRegexp","fromCharCode","throwXmlTagNotFound","XTTemplateError","pregMatchAll","regex","matchArray","exec","sizeOfObject","traits","moduleWrapper","xmldom","wrapper","compiled","modules","fileTypeConfig","FileTypeConfig","xmlFileNames","loadAsync","currentFile","createTemplateClass","templatedFiles","getTemplatedFiles","_this2","baseModules","moduleFunction","optionsTransformer","asText","compile","compileFile","mapper","getRenderedMap","mapped","setTags","usedData","createTemplateClassFromContent","filePath","_this3","xmltOptions","XmlTemplater","textPath","getFullText","XmlMatcher","XTError","stack","XTScopeParserError","XTInternalError","loopModule","spacePreserveModule","rawXmlModule","expandPairTrait","PptXFileTypeConfig","tagsXmlTextArray","tagsXmlLexedArray","tagRawXml","tagTextXml","DocXFileTypeConfig","docx","pptx","inRange","range","updateInTextTag","inTextTag","offsetSort","getTag","throwUnclosedTagException","xtag","assertDelimiterOrdered","delimiterMatches","fullText","inDelimiter","lastDelimiterMatch","delimiterMatch","throwUnopenedTagException","getAllIndexes","arr","Reader","innerContentParts","full","parseDelimiters","ranges","delimiterLength","cutNext","delimiterIndex","partContent","delimitersInOffset","delimiterInOffset","xmlparsed","newArray","xmlparse","xmltags","matches","textMatchArray","othersMatchArray","contentLength","allMatches","totalMatches","tagText","_getTag","tagMatcher","other","func","stringifyJson","cache","getMinFromArrays","minIndex","totalLength","resultArray","arrayIndex","emptyFun","identity","getTraits","postparse","every","mergeSort","getExpandToDefault","throwClosingTagNotMatchOpeningTag","openingtag","closingtag","getOpenCountChange","location","getPairs","countOpen","firstTrait","currentTrait","outer","T","throwUnmatchedLoopException","_ref","_postparse","trait","pairs","expandedPairs","pair","expandTo","currentPairIndex","innerParts","newParsed","inPair","expandedPair","basePart","subparsed","dashInnerRegex","moduleName","placeHolderContent","inverted","traitName","totalValue","scopeManager","loopOver","createSubScopeManager","getInner","postparsed","paragraphParts","throwRawTagShouldBeOnlyTextInParagraph","RawXmlModule","expandToOne","Render","spacePreserve","inChunk","lexed","inPlaceHolder","tailParts","token","moduleParsed","moduleParse","ScopeManager","createBaseScopeManager","moduleRendered","moduleRender","scopePath","loopOverValue","functor","currentValue","num","isValueFalsy","functorIfInverted","rootError","lastTagIsOpenTag","innerLastTag","innerCurrentTag","addTag","expandOne","throwRawTagNotInParagraph","leftParts","rightParts","inner","xmlElements","getListXmlElements","memoized","tagsXmlArray","tagsXmlArrayJoined","charactersAddedCumulative","charactersAdded","replacerUnshift","pn","last","handleRecursiveCase","xmlMatcher","Lexer","Parser","_render","fromJson","setModules","inspect","xmllexed","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","source","sax","XMLReader","domBuilder","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","nbsp","startDocument","DOMImplementation","createDocument","documentURI","localName","qName","createElementNS","len","getURI","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","skippedEntity","endDocument","normalize","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","dest","_extends","Super","pt","ppt","__proto__","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","Node","_xmlEncoder","charCodeAt","_visitNode","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","needNamespaceDefine","isHTML","ns","pubid","sysid","internalSubset","importNode","node2","cloneNode","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","versions","qualifiedName","doctype","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","rtv","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","deleteData","splitText","newText","newNode","getTextContent","$$length","nameStartChar","nameChar","tagNamePattern","defaultNSMapCopy","entityReplacer","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","localNSMap","endMatch","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","attrName","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","lastIndexOf","matchs","reg","lastMatch","endDTD","_set_proto_","thiz","getLocalName","getInnerDocx","getInnerPptx","_ref2","xmlString","ext","cx","cy","imgManagers","imageNumber","relsFiles","imgManager","getNextImageName","sizePixel","getRenderedPart","getRenderedPartPptx","getRenderedPartDocx","cellCX","cellCY","imgW","imgH","expanded","xmlElement","updateFileTypeConfig","zero","byteAt","lastIndexOfSignature","readData","checkOffset","encode","decode","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","STORE","magic","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","getTypeOf","checkIndex","setIndex","readInt","readString","transformTo","readDate","base64","createFolders","compression","compressionOptions","unixPermissions","dosPermissions","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","Uint8Array","Uint16Array","Uint32Array","deflateRaw","level","inflateRaw","pako","support","utils","compressions","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","fileNameStr","decompressed","fileCommentStr","zipComment","isBuffer","Buffer","_data","nodebuffer","asBinary","D","utf8encode","_initialMetadata","asNodeBuffer","asUint8Array","asArrayBuffer","buffer","z","C","E","A","B","F","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","compressedObject","folder","platform","encodeFileName","CENTRAL_DIRECTORY_END","append","finalize","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","arraybuffer","uint8array","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","subarray","applyFromCharCode","byteLength","loadOptions","checkSignature","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","prepareContent","fileNameLength","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","chunkSize","windowBits","memLevel","strategy","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","I","pending_buf","pending_out","total_out","_tr_flush_block","block_start","strstart","wrap","adler","G","H","total_in","max_chain_length","prev_length","nice_match","w_size","la","w_mask","prev","ka","good_match","lookahead","match_start","window_size","hash_size","insert","ja","ins_h","hash_shift","hash_mask","J","ua","match_length","_tr_tally","max_lazy_match","M","wa","xa","last_lit","va","prev_match","U","match_available","good_length","max_lazy","nice_length","max_chain","pending_buf_size","gzhead","gzindex","$","last_flush","w_bits","hash_bits","dyn_ltree","ha","dyn_dtree","fa","bl_tree","ga","l_desc","d_desc","bl_desc","bl_count","ia","heap","ea","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","data_type","Z","na","sa","_tr_init","O","Q","X","K","N","P","R","S","W","Y","aa","ba","da","ma","oa","pa","qa","ra","ta","ya","deflateInit","deflateReset","deflateResetKeep","hcrc","extra","time","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","ca","inflateReset","inflateReset2","inflateResetKeep","inflateInit","za","Aa","Ba","Ca","inflateInfo","static_tree","extra_bits","extra_base","max_length","has_stree","dyn_tree","max_code","stat_desc","protoUI","ActiveContent","datafilter","countColumn","summColumn","datetime","popupType","EditAbility","unitlist","ABCustomFormBuilderBuilder","FormBuilder","autofit","$init","parseDataFields","dataFields","formComponents","approveButton","schema","noDefaultSubmitButton","noNewEdit","basic","advanced","customBasic","premium","weight","getFormData","_key","inputType","calculateValue","refreshOnChange","block","leftIcon","theme","ABLazyCustomComponent","Form","$ready","initForm","submission","onButton","setDefaultUI","$getValue","calendarHeader","monthFull","$protoWait","_zoom_logic","_getTitle","_getYearTitle","_getYearRangeTitle","_getContent","_getYearContent","_setContent","_setYear","Qd","Jv","Zv","Xv","thaidate","thaidatetime","_zoom_start_date","ABCustomTinyMCE","eachRow","$count","master"],"sourceRoot":""}